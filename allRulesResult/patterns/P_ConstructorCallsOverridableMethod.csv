Pattern ID,Pattern,Context,"# of Eq list","# of Frq",complexity,Num of Warnings in Method,NCL
1,"addUser(user, load(properties, Strings.toString(properties.getConfig(key))));","addUser(user,load(properties,Strings.toString(properties.getConfig(key))));
",0,10919,9,17523,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
2,"final String traceLoggerName = Tracer.class.getName() + "".Traces."" + name;","final String traceLoggerName=Tracer.class.getName() + "".Traces."" + name;
",0,104,7,,"Modifier(VariableDeclarationStatement-modifiers, ),
SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
3,internal = (el instanceof ElementWrapper) ? ((ElementWrapper)el).getInternal() : el;,"internal=(el instanceof ElementWrapper) ? ((ElementWrapper)el).getInternal() : el;
",0,454,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InstanceofExpression-leftOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, InstanceofExpression-rightOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
4,namespaces = (defaultNamespaces != null) ? defaultNamespaces : initDefaultNamespaces();,"namespaces=(defaultNamespaces != null) ? defaultNamespaces : initDefaultNamespaces();
",0,0,5,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
5,"this.setMetricStringPayload(StringUtils.join(metrics, "",""));","this.setMetricStringPayload(StringUtils.join(metrics,"",""));
",0,1365,6,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
6,this.hostnameHash = hostname != null ? computeHash(hostname) : 1000;,"this.hostnameHash=hostname != null ? computeHash(hostname) : 1000;
",0,634,7,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
7,StringBuffer sb = new StringBuffer().append(super.toString());,"StringBuffer sb=new StringBuffer().append(super.toString());
",0,18,5,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SuperMethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
8,addSearchPath(MutableList.<String>of().appendIfNotNull(ApiObjectsFactory.get().getCatalogItemIdFromContext()));,"addSearchPath(MutableList.<String>of().appendIfNotNull(ApiObjectsFactory.get().getCatalogItemIdFromContext()));
",0,128,8,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
9,try (BlockReader blockR = getMetaBlock(DataIndex.BLOCK_NAME)) {,"try (BlockReader blockR=getMetaBlock(DataIndex.BLOCK_NAME)){
  dataIndex=new DataIndex(blockR);
}
 ",0,3,4,,"SimpleName(SimpleType-name, VariableDeclarationExpression-type, TryStatement-resources, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationExpression-fragments, TryStatement-resources, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationExpression-fragments, TryStatement-resources, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationExpression-fragments, TryStatement-resources, ),
"
10,if (getDataType() != null && !(otherExpr instanceof LiteralExpression && otherExpr.isNullable()) && !otherExpressionType.isCoercibleTo(baseDataType)) {,"if (getDataType() != null && !(otherExpr instanceof LiteralExpression && otherExpr.isNullable()) && !otherExpressionType.isCoercibleTo(baseDataType)) {
  throw TypeMismatchException.newException(baseDataType,otherExpressionType);
}
",0,146,9,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(InstanceofExpression-leftOperand, InfixExpression-leftOperand, ParenthesizedExpression-expression, PrefixExpression-operand, InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(SimpleType-name, InstanceofExpression-rightOperand, InfixExpression-leftOperand, ParenthesizedExpression-expression, PrefixExpression-operand, InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, ParenthesizedExpression-expression, PrefixExpression-operand, InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ParenthesizedExpression-expression, PrefixExpression-operand, InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-expression, PrefixExpression-operand, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-arguments, PrefixExpression-operand, InfixExpression-rightOperand, IfStatement-expression, ),
"
11,"this.add(itr.next(), true);","this.add(itr.next(),true);
",0,291,5,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
12,"this.archiveDir             = cfg.getString(PROP_FILE_SPOOL_ARCHIVE_DIR, new File(getSpoolDirPath(), PROP_FILE_SPOOL_ARCHIVE_DIR_DEFAULT).toString());","this.archiveDir=cfg.getString(PROP_FILE_SPOOL_ARCHIVE_DIR,new File(getSpoolDirPath(),PROP_FILE_SPOOL_ARCHIVE_DIR_DEFAULT).toString());
",0,129,9,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
13,long newSegmentSizeDelta = numOfCells*(indexEntrySize()-ClassSize.CONCURRENT_SKIPLISTMAP_ENTRY);,"long newSegmentSizeDelta=numOfCells * (indexEntrySize() - ClassSize.CONCURRENT_SKIPLISTMAP_ENTRY);
",0,18,5,,"PrimitiveType(VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
QualifiedName(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
14,this.serializer = this.closer.register(createSerializer(versionWriter));,"this.serializer=this.closer.register(createSerializer(versionWriter));
",0,21,7,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
ThisExpression(FieldAccess-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
15,"this.component = new Component(Component.Type.SECONDARY_INDEX, String.format(FILE_NAME_FORMAT, getIndexName()));","this.component=new Component(Component.Type.SECONDARY_INDEX,String.format(FILE_NAME_FORMAT,getIndexName()));
",0,11,8,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
16,setMaxAuditDepth(10*getMaxAuditDepth());,"setMaxAuditDepth(10 * getMaxAuditDepth());
",0,93,3,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
17,"Pair<FieldMapping, ImmutableMap<String, String>> p = constructFieldMapping(superTypes, fields);","Pair<FieldMapping,ImmutableMap<String,String>> p=constructFieldMapping(superTypes,fields);
",0,51,9,,"SimpleName(SimpleType-name, ParameterizedType-type, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
18,"this.addAspect(aspects.get(i), (Properties)properties.get(i));","this.addAspect(aspects.get(i),(Properties)properties.get(i));
",0,88,9,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
19,if (validate && (!validate(command))),"if (validate && (!validate(command))) throw new IllegalArgumentException(""Invalid command "" + command);
",0,30,3,,"SimpleName(InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, ParenthesizedExpression-expression, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-arguments, PrefixExpression-operand, ParenthesizedExpression-expression, InfixExpression-rightOperand, IfStatement-expression, ),
"
20,this.url = new URL(config.getRecipientBaseUrl()).toString();,"this.url=new URL(config.getRecipientBaseUrl()).toString();
",0,1,6,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
21,new Resource.Type(getQualifiedResourceTypeName(ResourceConfig.EXTERNAL_RESOURCE_PLURAL_NAME));,"this.externalResourceType=new Resource.Type(getQualifiedResourceTypeName(ResourceConfig.EXTERNAL_RESOURCE_PLURAL_NAME));
",0,0,3,,"QualifiedName(SimpleType-name, ClassInstanceCreation-type, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ),
QualifiedName(MethodInvocation-arguments, ClassInstanceCreation-arguments, ),
"
22,final ValueStateInstance prototypeState = ( (ValueInstance) compositeInstanceOf( (Composite) prototype ) ).state();,"final ValueStateInstance prototypeState=((ValueInstance)compositeInstanceOf((Composite)prototype)).state();
",0,24,8,,"Modifier(VariableDeclarationStatement-modifiers, ),
SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(CastExpression-expression, MethodInvocation-arguments, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
23,addMatcher((PatternMatcher) instanceField.get(null));,"addMatcher((PatternMatcher)instanceField.get(null));
",0,14,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NullLiteral(MethodInvocation-arguments, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
24,"applyAnnotations(rci.getAnnotationList(ConfigAnnotationFilter.INSTANCE), vr.createSession());","applyAnnotations(rci.getAnnotationList(ConfigAnnotationFilter.INSTANCE),vr.createSession());
",0,53,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
25,"super.put(getResultSetMetadata().getColumnName(i), getResultSetMetadata().getColumnName(i));","super.put(getResultSetMetadata().getColumnName(i),getResultSetMetadata().getColumnName(i));
",0,81,7,,"SimpleName(SuperMethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
"
26,"customClasses.put(ORG_W3C_DOM_NODE, super.loadClass(ORG_W3C_DOM_NODE, false));","customClasses.put(ORG_W3C_DOM_NODE,super.loadClass(ORG_W3C_DOM_NODE,false));
",0,16,6,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SuperMethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SuperMethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(SuperMethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
27,"append(s.substring(0, i).trim(), s.substring(c == '=' ? i+1 : i).trim());","append(s.substring(0,i).trim(),s.substring(c == '=' ? i + 1 : i).trim());
",0,41,14,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
CharacterLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-thenExpression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, ConditionalExpression-thenExpression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-elseExpression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
28,setModule(textSpec.substring(equals + 1));,"setModule(textSpec.substring(equals + 1));
",0,0,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
29,this.checksum = new byte[getChecksumSize() * BUFFER_NUM_CHUNKS];,"this.checksum=new byte[getChecksumSize() * BUFFER_NUM_CHUNKS];
",0,2,6,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ArrayCreation-dimensions, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-rightOperand, ArrayCreation-dimensions, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
30,"recordReader = getRecordReader(DatatypeHelper.map2JobConf(jobConfMap), splits[0]);","recordReader=getRecordReader(DatatypeHelper.map2JobConf(jobConfMap),splits[0]);
",0,23,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(ArrayAccess-index, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
31,"setExtraFields(ExtraFieldUtils.parse(extra, true, ExtraFieldParsingMode.BEST_EFFORT));        } else {","setExtraFields(ExtraFieldUtils.parse(extra,true,ExtraFieldParsingMode.BEST_EFFORT));
",0,7,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
32,"addAttribute(""status"", isSuccessful() ? STATUS_SUCCESSFUL : STATUS_FAILED);","addAttribute(""status"",isSuccessful() ? STATUS_SUCCESSFUL : STATUS_FAILED);
",0,0,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
33,"view.addTab(""Main"", new JScrollPane(new MainDataNodeEditor(parent,this).getView()));","view.addTab(""Main"",new JScrollPane(new MainDataNodeEditor(parent,this).getView()));
",0,30,8,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
ThisExpression(ClassInstanceCreation-arguments, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
34,setDocLitType((OElementVarType) parts.iterator().next().getType());,"setDocLitType((OElementVarType)parts.iterator().next().getType());
",0,18,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
35,config.setConfigFilePath(new File(getConfigFile()).getCanonicalFile().getParent());,"config.setConfigFilePath(new File(getConfigFile()).getCanonicalFile().getParent());
",0,1,6,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
36,"LOG.info(""Ignoring bloom filter check for file "" + this.getPath() + "": "" + ""cfBloomType="" +","LOG.info(""Ignoring bloom filter check for file "" + this.getPath() + "": ""+ ""cfBloomType=""+ cfBloomType+ "" (disabled in config)"");
",0,24,7,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
ThisExpression(MethodInvocation-expression, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
37,final ClassLoader parentLoader = (parent!=null)?parent:GroovyShell.class.getClassLoader();,"final ClassLoader parentLoader=(parent != null) ? parent : GroovyShell.class.getClassLoader();
",0,1,8,,"Modifier(VariableDeclarationStatement-modifiers, ),
SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NullLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
38,this.port = ((InetSocketAddress) channel.localAddress()).getPort();,"this.port=((InetSocketAddress)channel.localAddress()).getPort();
",0,10,6,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
39,final char[] striped = new char[getRadixDigits() * rsize + offset * 2];,"final char[] striped=new char[getRadixDigits() * rsize + offset * 2];
",0,6,10,,"Modifier(VariableDeclarationStatement-modifiers, ),
PrimitiveType(ArrayType-elementType, VariableDeclarationStatement-type, ),
Dimension(ArrayType-dimensions, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(InfixExpression-rightOperand, InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(InfixExpression-leftOperand, InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
40,"UnfilteredValidation.handleInvalid(metadata(), key, sstable, ""partitionLevelDeletion=""+partitionLevelDeletion.toString());","UnfilteredValidation.handleInvalid(metadata(),key,sstable,""partitionLevelDeletion="" + partitionLevelDeletion.toString());
",0,1,8,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
41,_systemCronConfigWatchDog = createSystemCronConfigWatchDog(odeServer.getBpelServer().getContexts().cronScheduler);,"_systemCronConfigWatchDog=createSystemCronConfigWatchDog(odeServer.getBpelServer().getContexts().cronScheduler);
",0,3,6,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, FieldAccess-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, FieldAccess-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, FieldAccess-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
42,toInternalConverters[i] = createNullableInternalConverter(rowType.getTypeAt(i));,"toInternalConverters[i]=createNullableInternalConverter(rowType.getTypeAt(i));
",0,3,6,,"SimpleName(ArrayAccess-array, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
43,setRelationshipStatus(AtlasRelationship.Status.valueOf(s.toString()));,"setRelationshipStatus(AtlasRelationship.Status.valueOf(s.toString()));
",0,2,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
44,"init(other.guid, other.homeId, other.provenanceType, other.end1, other.end2, other.label, other.propagateTags, other.status, other.createdBy, other.updatedBy,","init(other.guid,other.homeId,other.provenanceType,other.end1,other.end2,other.label,other.propagateTags,other.status,other.createdBy,other.updatedBy,other.createTime,other.updateTime,other.version,other.propagatedClassifications,other.blockedPropagatedClassifications);
",0,1,11,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
45,if (CollectionUtils.isNotEmpty(classificationNames) && hasAttributeFilter(searchParameters.getTagFilters())) {,"if (CollectionUtils.isNotEmpty(classificationNames) && hasAttributeFilter(searchParameters.getTagFilters())) {
  for (  String classificationName : classificationNames) {
    if (classificationName.contains(WILDCARD_CLASSIFICATIONS) && !classificationName.equals(WILDCARD_CLASSIFICATIONS)) {
      throw new AtlasBaseException(AtlasErrorCode.BAD_REQUEST,""TagFilters specified with wildcard tag name"");
    }
  }
}
",0,2,6,,"SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-arguments, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-rightOperand, IfStatement-expression, ),
"
46,"T2<GridResourceField[], GridResourceMethod[]> member = annotatedMembers(ann.clazz);","T2<GridResourceField[],GridResourceMethod[]> member=annotatedMembers(ann.clazz);
",0,12,8,,"SimpleName(SimpleType-name, ParameterizedType-type, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
47,"assert getBaseContainer () != null : ""The base container for operation "" + doOperation + "" must exist!"";","assert getBaseContainer() != null : ""The base container for operation "" + doOperation + "" must exist!"";
",0,3,5,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, AssertStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, AssertStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, AssertStatement-message, ),
SimpleName(InfixExpression-rightOperand, AssertStatement-message, ),
StringLiteral(InfixExpression-extendedOperands, AssertStatement-message, ),
"
48,TInstanceStatus.Enum intstc = cvtInstanceStatus(pistate);,"TInstanceStatus.Enum intstc=cvtInstanceStatus(pistate);
",0,3,4,,"QualifiedName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
49,"_selectByIdSql = buildSelectByIdSql(createPartialSelectSql(null, true));","_selectByIdSql=buildSelectByIdSql(createPartialSelectSql(null,true));
",0,5,5,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
50,"writeSem = bounded() ? new Semaphore(hdr.capacity() - hdr.size(), true) : null;","writeSem=bounded() ? new Semaphore(hdr.capacity() - hdr.size(),true) : null;
",0,3,9,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
BooleanLiteral(ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
51,"setAwsEc2SpotPrice(getFloat(Property.AWS_EC2_SPOT_PRICE, (Float) null));","setAwsEc2SpotPrice(getFloat(Property.AWS_EC2_SPOT_PRICE,(Float)null));
",0,6,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NullLiteral(CastExpression-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
52,"this.put(k[i], v[i]);","this.put(k[i],v[i]);
",0,23,6,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
53,this.schema = new Schema.Parser().parse(getMetaString(SCHEMA));,"this.schema=new Schema.Parser().parse(getMetaString(SCHEMA));
",0,1,6,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
54,if (super.getBatchSize() % arraySize != 0) {,"if (super.getBatchSize() % arraySize != 0) {
  throw new IllegalArgumentException(""Batch size must be divisible by array size"");
}
",0,0,3,,"SimpleName(SuperMethodInvocation-name, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, IfStatement-expression, ),
"
55,"log.debug(Messages.getMessage(""newElem00"", super.toString(),","log.debug(Messages.getMessage(""newElem00"",super.toString(),""{"" + prefix + ""}""+ localPart));
",0,12,6,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SuperMethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
56,"put((String) keys[i], context.get((String)keys[i]));","put((String)keys[i],context.get((String)keys[i]));
",0,1,9,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, CastExpression-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, CastExpression-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
57,this.add (((TreeObject)it.next ()).clone ());,"this.add(((TreeObject)it.next()).clone());
",0,14,6,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
58,"List<String> extractors = handleExtractorCleanup(Arrays.asList(query.get(""columns"").split(""\\s*,\\s*"")));","List<String> extractors=handleExtractorCleanup(Arrays.asList(query.get(""columns"").split(""\\s*,\\s*"")));
",0,10,11,,"SimpleName(SimpleType-name, ParameterizedType-type, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
59,"this(source.getURLs(), deepCopyParents(source.parents), source.inverseClassLoading, source.hiddenClasses, source.nonOverridableClasses);","this(source.getURLs(),deepCopyParents(source.parents),source.inverseClassLoading,source.hiddenClasses,source.nonOverridableClasses);
",0,2,7,,"SimpleName(MethodInvocation-expression, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, ConstructorInvocation-arguments, ),
QualifiedName(MethodInvocation-arguments, ConstructorInvocation-arguments, ),
QualifiedName(ConstructorInvocation-arguments, ),
QualifiedName(ConstructorInvocation-arguments, ),
QualifiedName(ConstructorInvocation-arguments, ),
"
60,"m_securityDefaultPolicy = ""true"".equals(getProperty(FelixConstants.SECURITY_DEFAULT_POLICY));","m_securityDefaultPolicy=""true"".equals(getProperty(FelixConstants.SECURITY_DEFAULT_POLICY));
",0,4,5,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
61,"serializer = (IElementSerializer) classLoader.loadClass(property(properties, ""serializer"", cacheName, StandardSerializer.class.getName())).getDeclaredConstructor().newInstance();","serializer=(IElementSerializer)classLoader.loadClass(property(properties,""serializer"",cacheName,StandardSerializer.class.getName())).getDeclaredConstructor().newInstance();
",0,9,12,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
62,(isEndpointBased() &&,"if ((isEndpointBased() && DescriptionUtils.isEmpty(getAnnoWebServiceEndpointInterface())) || (!isEndpointBased())) {
  wsdlComposite=generateWSDL(composite);
}
 else if (isEndpointBased()) {
  DescriptionBuilderComposite seic=getServiceDescriptionImpl().getDBCMap().get(composite.getWebServiceAnnot().endpointInterface());
  if (seic.getWsdlDefinition() == null)   wsdlComposite=generateWSDL(composite);
}
",0,0,1,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, ),
"
63,"this.setCacheDirectory(new File(getHomeDirectory(), CACHE_DIR));","this.setCacheDirectory(new File(getHomeDirectory(),CACHE_DIR));
",0,1,5,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
64,this(,"this(awsClientsProvider,new DynamicCheckpointGenerator(streamName,startingPoint),streamName,upToDateThreshold,watermarkPolicyFactory,rateLimitPolicyFactory,limit,maxCapacityPerShard);
",0,0,0,,
65,this(,"this(awsClientsProvider,new DynamicCheckpointGenerator(streamName,startingPoint),streamName,upToDateThreshold,watermarkPolicyFactory,rateLimitPolicyFactory,limit,maxCapacityPerShard);
",0,0,0,,
66,if (itemGroup.getParentGroup() != null) parentGroup = this.getItemGroupByNumber(itemGroup.getParentGroup().getGroupNumber());,"if (itemGroup.getParentGroup() != null) parentGroup=this.getItemGroupByNumber(itemGroup.getParentGroup().getGroupNumber());
",0,8,9,,"SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, IfStatement-thenStatement, ),
ThisExpression(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, IfStatement-thenStatement, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, IfStatement-thenStatement, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, IfStatement-thenStatement, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, IfStatement-thenStatement, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, IfStatement-thenStatement, ),
"
67,parseResult = parseAnnotation(annByType.get(javax.annotation.Resource.class.getName()));,"parseResult=parseAnnotation(annByType.get(javax.annotation.Resource.class.getName()));
",0,11,6,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
68,final AnnotationEntryGen[] annotations = unpackAnnotations(attributes);,"final AnnotationEntryGen[] annotations=unpackAnnotations(attributes);
",0,4,6,,"Modifier(VariableDeclarationStatement-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, VariableDeclarationStatement-type, ),
Dimension(ArrayType-dimensions, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
69,"this.id = ProxyBean.class.getName() + ""["" + api.getName() + ""]"";","this.id=ProxyBean.class.getName() + ""["" + api.getName()+ ""]"";
",0,1,8,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-rightOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
70,"this(logWriter, msgid, args, sqlcode, (Throwable)null);","this(logWriter,msgid,args,sqlcode,(Throwable)null);
",0,6,6,,"SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(SimpleType-name, CastExpression-type, ConstructorInvocation-arguments, ),
NullLiteral(CastExpression-expression, ConstructorInvocation-arguments, ),
"
71,this.errorMsg = (cause == null ? e : cause).getMessage();,"this.errorMsg=(cause == null ? e : cause).getMessage();
",0,0,7,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-thenExpression, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-elseExpression, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
72,else if (isCompactTable() && !Flag.isDense(this.flags)),"if (isCompactTable() && !Flag.isDense(this.flags)) {
  hiddenColumns=Sets.newHashSetWithExpectedSize(clusteringColumns.size() + 1);
  hiddenColumns.add(compactValueColumn);
  hiddenColumns.addAll(clusteringColumns);
}
 else {
  hiddenColumns=Collections.emptySet();
}
",0,1,5,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-expression, PrefixExpression-operand, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, InfixExpression-rightOperand, IfStatement-expression, ),
ThisExpression(FieldAccess-expression, MethodInvocation-arguments, PrefixExpression-operand, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(FieldAccess-name, MethodInvocation-arguments, PrefixExpression-operand, InfixExpression-rightOperand, IfStatement-expression, ),
"
73,"model = new MavenXpp3Reader().read( new FileReader( new File( getBasedir(), ""pom.xml"" ) ) );","model=new MavenXpp3Reader().read(new FileReader(new File(getBasedir(),""pom.xml"")));
",0,70,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
74,"this.setPassword(outOfBandManagementConfig.getPassword().substring(0, 1) + ""****"");","this.setPassword(outOfBandManagementConfig.getPassword().substring(0,1) + ""****"");
",0,136,8,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
75,if (metadata.isCompactTable() && modifiedColumns.isEmpty() && updatesRegularRows()),"if (metadata.isCompactTable() && modifiedColumns.isEmpty() && updatesRegularRows()) modifiedColumns=metadata.regularAndStaticColumns();
",0,2,5,,"SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, IfStatement-expression, ),
"
76,reload(cfs.metadata().params.compaction);,"reload(cfs.metadata().params.compaction);
",0,0,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, FieldAccess-expression, FieldAccess-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, FieldAccess-expression, FieldAccess-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, FieldAccess-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
77,int weight = super.weight();,"int weight=super.weight();
",0,0,3,,"PrimitiveType(VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SuperMethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
78,String zone = csQueryMetadata(endpoint + ZONE_NAME_QUERY_URI);,"String zone=csQueryMetadata(endpoint + ZONE_NAME_QUERY_URI);
",0,0,5,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
79,if (!this.initialize(properties)) {,"if (!this.initialize(properties)) {
  throw new IllegalArgumentException(""PIP Engine '"" + id + ""' has no classname property in config"");
}
",0,1,3,,"ThisExpression(MethodInvocation-expression, PrefixExpression-operand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, IfStatement-expression, ),
SimpleName(MethodInvocation-arguments, PrefixExpression-operand, IfStatement-expression, ),
"
80,strategy = createNamingStrategy(NameGeneratorPreferences,"strategy=createNamingStrategy(NameGeneratorPreferences.getInstance().getLastUsedStrategies().get(0));
",0,0,3,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
81,"topPanelBuilder.append(""DataNode Name:"", getDataNodeName(), 3);","topPanelBuilder.append(""DataNode Name:"",getDataNodeName(),3);
",0,0,5,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
82,this.dataMap = new DataMap(findModelName(modelUrl.toExternalForm()));,"this.dataMap=new DataMap(findModelName(modelUrl.toExternalForm()));
",0,1,6,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
83,this.id = Integer.toString(super.hashCode());,"this.id=Integer.toString(super.hashCode());
",0,25,5,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SuperMethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
84,if (getCause() instanceof IllegalArgumentException) {,"if (getCause() instanceof IllegalArgumentException) {
  line=tokenizer.nextToken();
  if (line.contains(""org.apache.commons.lang.Validate"")) {
    line=tokenizer.nextToken();
  }
}
",0,0,2,,"SimpleName(MethodInvocation-name, InstanceofExpression-leftOperand, IfStatement-expression, ),
SimpleName(SimpleType-name, InstanceofExpression-rightOperand, IfStatement-expression, ),
"
85,"final String value = _shell.getPersistentProperty(getResourceName(), ""id"");","final String value=_shell.getPersistentProperty(getResourceName(),""id"");
",0,0,7,,"Modifier(VariableDeclarationStatement-modifiers, ),
SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
86,"s_logger.info(""Agent [id = "" + (_id != null ? _id : ""new"") + "" : type = "" + getResourceName() + "" : zone = "" + _shell.getZone() + "" : pod = "" + _shell.getPod() +","s_logger.info(""Agent [id = "" + (_id != null ? _id : ""new"") + "" : type = ""+ getResourceName()+ "" : zone = ""+ _shell.getZone()+ "" : pod = ""+ _shell.getPod()+ "" : workers = ""+ _shell.getWorkers()+ "" : host = ""+ host+ "" : port = ""+ _shell.getPort());
",0,8,15,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, ParenthesizedExpression-expression, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, ParenthesizedExpression-expression, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-thenExpression, ParenthesizedExpression-expression, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(ConditionalExpression-elseExpression, ParenthesizedExpression-expression, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
87,"buildAttributes(clazz, DbUtil.getTableName(clazz), DbUtil.getAttributeOverrides(clazz), false, false);","buildAttributes(clazz,DbUtil.getTableName(clazz),DbUtil.getAttributeOverrides(clazz),false,false);
",0,1,10,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
88,Preferences prefs = NbPreferences.forModule(this.getClass()).node(id());,"Preferences prefs=NbPreferences.forModule(this.getClass()).node(id());
",0,4,8,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
89,m_hashcode = (name + value).hashCode();,"m_hashcode=(name + value).hashCode();
",0,0,4,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-rightOperand, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
90,"noRecursiveCalls(getTopLevel(), new HashSet<>());","noRecursiveCalls(getTopLevel(),new HashSet<>());
",0,0,3,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
91,this.dynaClass = cls != null ? cls : (WrapDynaClass) getDynaClass();,"this.dynaClass=cls != null ? cls : (WrapDynaClass)getDynaClass();
",0,17,7,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
92,setTime(inputFile.lastModified() / 1000);,"setTime(inputFile.lastModified() / 1000);
",0,0,4,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
93,while ((entry = getNextTarEntry()) != null) {,"while ((entry=getNextTarEntry()) != null) {
  entries.add(entry);
}
",0,0,3,,"SimpleName(Assignment-leftHandSide, ParenthesizedExpression-expression, InfixExpression-leftOperand, WhileStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ParenthesizedExpression-expression, InfixExpression-leftOperand, WhileStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, WhileStatement-expression, ),
"
94,"super(""Exception in chained task '"" + taskName + ""'"", exceptionUnwrap(wrappedException));","super(""Exception in chained task '"" + taskName + ""'"",exceptionUnwrap(wrappedException));
",0,4,5,,"StringLiteral(InfixExpression-leftOperand, SuperConstructorInvocation-arguments, ),
SimpleName(InfixExpression-rightOperand, SuperConstructorInvocation-arguments, ),
StringLiteral(InfixExpression-extendedOperands, SuperConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, SuperConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-arguments, SuperConstructorInvocation-arguments, ),
"
95,if(this.wiki != null) initWikiSim();,"if (this.wiki != null) initWikiSim();
",0,0,4,,"ThisExpression(FieldAccess-expression, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(FieldAccess-name, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, IfStatement-thenStatement, ),
"
96,"__hashcode = (__cui + ""_"" + __tui + ""_"" + __prefTerm).hashCode();","__hashcode=(__cui + ""_"" + __tui+ ""_""+ __prefTerm).hashCode();
",0,1,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-extendedOperands, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-extendedOperands, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
97,&& parseDoubleValue(strength,"if (spacePosition > 0 && spacePos > 0 && parseDoubleValue(strength.getStrengthMention().substring(0,spacePosition)) < parseDoubleValue(localStrength.substring(0,localStrength.indexOf("" ""))) && findMaxValue == true) {
  setStrengthElement(localStrength,focusToken.getBegin(),focusToken.getEnd());
}
 else {
  String stringRange=strength.getStrengthMention();
  int hyphPosition=0;
  if ((stringRange.length() > 0) && (stringRange.indexOf('-') > 0)) {
    hyphPosition=stringRange.indexOf('-');
    Double firstValue=new Double(parseDoubleValue(stringRange.subSequence(0,hyphPosition)));
    Double secondValue=new Double(parseDoubleValue(stringRange.substring(hyphPosition + 2)));
    if (firstValue.doubleValue() >= secondValue.doubleValue() && findMaxValue == true) {
      setStrengthElement(firstValue.toString(),focusToken.getBegin(),focusToken.getEnd());
    }
 else {
      setStrengthElement(firstValue.toString(),focusToken.getBegin(),focusToken.getEnd());
    }
  }
}
",0,0,2,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-leftOperand, ),
"
98,"final JComponent valuesPanel = createNamePanel( getValueLabelPrefix() + "" Values:"", _values );","final JComponent valuesPanel=createNamePanel(getValueLabelPrefix() + "" Values:"",_values);
",0,0,7,,"Modifier(VariableDeclarationStatement-modifiers, ),
SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
99,entry.cache = makeNodeCache(thisInstance);,"entry.cache=makeNodeCache(thisInstance);
",0,0,3,,"QualifiedName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
100,this.properties = toMap(PropertyFileUtils.loadProperties(propertyFileUrl));,"this.properties=toMap(PropertyFileUtils.loadProperties(propertyFileUrl));
",0,0,6,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
101,this(,"this(logwriter,cause,getMessageUtil().getCompleteMessage(msgid.msgid,args),ExceptionUtil.getSQLStateFromIdentifier(msgid.msgid),ExceptionUtil.getSeverityFromIdentifier(msgid.msgid));
",0,0,0,,
102,SanityManager.ASSERT( !includeRowLocations() );,"SanityManager.ASSERT(!includeRowLocations());
",0,0,3,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
103,if (getFieldSeparator().indexOf(getRecordSeparator()) != -1) {,"if (getFieldSeparator().indexOf(getRecordSeparator()) != -1) {
  throw LoadError.fieldAndRecordSeparatorsSubset();
}
",0,2,4,,"SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-leftOperand, IfStatement-expression, ),
NumberLiteral(PrefixExpression-operand, InfixExpression-rightOperand, IfStatement-expression, ),
"
104,"this.do_log            = resolveBooleanProperty(UiOption.ServicePingDoLog.pname()     , ping_props, job_props, false);","this.do_log=resolveBooleanProperty(UiOption.ServicePingDoLog.pname(),ping_props,job_props,false);
",0,1,8,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
105,else { throw nothingWrapped(); },"throw nothingWrapped();
",0,0,1,,"SimpleName(MethodInvocation-name, ThrowStatement-expression, Block-statements, ),
"
106,"meta_props.put(IStateServices.SvcMetaProps.service_state.pname(), """"+getState());","meta_props.put(IStateServices.SvcMetaProps.service_state.pname(),"""" + getState());
",0,1,6,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
107,this.bodyEnd = isDefinitiveLength() ? bodyStart + header.getLength() : -1;,"this.bodyEnd=isDefinitiveLength() ? bodyStart + header.getLength() : -1;
",0,2,7,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(PrefixExpression-operand, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
108,"formData.putAll(((Map<String, Object>) request.getSession().getAttribute(this.getSessionId())));","formData.putAll(((Map<String,Object>)request.getSession().getAttribute(this.getSessionId())));
",0,2,10,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-arguments, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
109,"init( directoryService, suffixes.toArray( new String[]","init(directoryService,suffixes.toArray(new String[]{}));
",0,0,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
110,"!this.isCompatible(false , true )) {","if (checkCompatibility && !this.isCompatible(false,true)) {
  throw new InvalidRelException(""Input row types of the Union are not compatible."");
}
",0,0,4,,"ThisExpression(MethodInvocation-expression, PrefixExpression-operand, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, ),
BooleanLiteral(MethodInvocation-arguments, PrefixExpression-operand, ),
BooleanLiteral(MethodInvocation-arguments, PrefixExpression-operand, ),
"
111,"this(session, new UserManagerConfig(config, adminId, null), mCache);","this(session,new UserManagerConfig(config,adminId,null),mCache);
",0,8,6,,"SimpleName(ConstructorInvocation-arguments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ConstructorInvocation-arguments, ),
SimpleName(ClassInstanceCreation-arguments, ConstructorInvocation-arguments, ),
SimpleName(ClassInstanceCreation-arguments, ConstructorInvocation-arguments, ),
NullLiteral(ClassInstanceCreation-arguments, ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
"
112,"this.doc2path.put(getKey(doc.getUUID(), doc.getLanguage()), SITE_PATH);","this.doc2path.put(getKey(doc.getUUID(),doc.getLanguage()),SITE_PATH);
",0,4,9,,"ThisExpression(FieldAccess-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
113,new Supplier<List<RowSet>>() {,"this(context,oContext,new Supplier<List<RowSet>>(){
  @Override public List<RowSet> get(){
    List<RowSet> rowSets=new ArrayList<>();
    for (int index=0; index < testContainers.size(); index++) {
      if (index >= selectionVector2s.size()) {
        rowSets.add(IndirectRowSet.fromContainer(testContainers.get(index)));
      }
 else {
        rowSets.add(IndirectRowSet.fromSv2(testContainers.get(index),selectionVector2s.get(index)));
      }
    }
    return rowSets;
  }
}
.get(),iterOutcomes,schema,true);
",0,0,3,,"SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, ),
"
114,this.lastWordIndex = isEmpty() ? -1 : words.length - 1;,"this.lastWordIndex=isEmpty() ? -1 : words.length - 1;
",0,0,6,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(PrefixExpression-operand, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(InfixExpression-leftOperand, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
115,"schemaObjs.put(id, new Schema.Parser().parse(schemaStr));","schemaObjs.put(id,new Schema.Parser().parse(schemaStr));
",0,2,6,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
116,"setAttachment(Constants.VERSION_KEY, url.getParameter(Constants.VERSION_KEY, ""0.0.0""));","setAttachment(Constants.VERSION_KEY,url.getParameter(Constants.VERSION_KEY,""0.0.0""));
",0,4,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
117,"scheduler.scheduleAtFixedRate(this::publishAll, calculateStartTime(), ONE_DAY_IN_MILLISECONDS, TimeUnit.MILLISECONDS);","scheduler.scheduleAtFixedRate(this::publishAll,calculateStartTime(),ONE_DAY_IN_MILLISECONDS,TimeUnit.MILLISECONDS);
",0,0,7,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
ThisExpression(ExpressionMethodReference-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ExpressionMethodReference-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
118,"logger.info(""Start "" + getClass().getSimpleName() + "" "" + NetUtils.getLocalAddress() + "" connect to the server "" + getRemoteAddress());","logger.info(""Start "" + getClass().getSimpleName() + "" ""+ NetUtils.getLocalAddress()+ "" connect to the server ""+ getRemoteAddress());
",0,4,10,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
119,"GenericValue kekValue = EntityQuery.use(baseDelegator).from(""TenantKeyEncryptingKey"").where(""tenantId"", getDelegatorTenantId()).cache(true).queryOne();","GenericValue kekValue=EntityQuery.use(baseDelegator).from(""TenantKeyEncryptingKey"").where(""tenantId"",getDelegatorTenantId()).cache(true).queryOne();
",0,4,13,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
120,"getManifestVersion(), m_bundleSymbolicName, m_bundleVersion, owner instanceof BundleRevisionImpl && ((BundleRevisionImpl) owner).getContent() instanceof ConnectContentContent);","exportClauses=normalizeExportClauses(logger,exportClauses,getManifestVersion(),m_bundleSymbolicName,m_bundleVersion,owner instanceof BundleRevisionImpl && ((BundleRevisionImpl)owner).getContent() instanceof ConnectContentContent);
",0,0,9,,"SimpleName(MethodInvocation-name, ),
SimpleName(),
SimpleName(),
SimpleName(InstanceofExpression-leftOperand, InfixExpression-leftOperand, ),
SimpleName(SimpleType-name, InstanceofExpression-rightOperand, InfixExpression-leftOperand, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, InstanceofExpression-leftOperand, InfixExpression-rightOperand, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, InstanceofExpression-leftOperand, InfixExpression-rightOperand, ),
SimpleName(MethodInvocation-name, InstanceofExpression-leftOperand, InfixExpression-rightOperand, ),
SimpleName(SimpleType-name, InstanceofExpression-rightOperand, InfixExpression-rightOperand, ),
"
121,"throw new IllegalArgumentException(""Invalid JmxAttributeCheck config for property ""+mbeanName+"" -> ""+propNameAttribute+"": ""+toString());","throw new IllegalArgumentException(""Invalid JmxAttributeCheck config for property "" + mbeanName + "" -> ""+ propNameAttribute+ "": ""+ toString());
",0,0,7,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, ThrowStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
SimpleName(InfixExpression-rightOperand, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
SimpleName(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
"
122,"context.registerService(ManagedServiceFactory.class.getName(), this, props);","context.registerService(ManagedServiceFactory.class.getName(),this,props);
",0,0,6,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
ThisExpression(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
123,"""(objectClass="" + RepositoryAdmin.class.getName() + "")"");","m_context.addServiceListener(sl,""(objectClass="" + RepositoryAdmin.class.getName() + "")"");
",0,0,4,,"StringLiteral(InfixExpression-leftOperand, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-rightOperand, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ),
StringLiteral(InfixExpression-extendedOperands, ),
"
124,"this(enableManagement, mbid, MessageBroker.class.getClassLoader());","this(enableManagement,mbid,MessageBroker.class.getClassLoader());
",0,0,4,,"SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, ConstructorInvocation-arguments, ),
"
125,resultType = TypeExtractor.getForObject(getRecord(0));,"resultType=TypeExtractor.getForObject(getRecord(0));
",0,0,5,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
126,"Preconditions.checkArgument(getNumberOfKeyGroups() >= 0, ""Potential overflow detected."");","Preconditions.checkArgument(getNumberOfKeyGroups() >= 0,""Potential overflow detected."");
",0,0,5,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
127,super.setSubmitConsumer(submittedTasks::offer);,"super.setSubmitConsumer(submittedTasks::offer);
",0,0,3,,"SimpleName(SuperMethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(ExpressionMethodReference-expression, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ExpressionMethodReference-name, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
"
128,"this(name, null, cfg, (ParserConfiguration) null);","this(name,null,cfg,(ParserConfiguration)null);
",0,2,5,,"SimpleName(ConstructorInvocation-arguments, ),
NullLiteral(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(SimpleType-name, CastExpression-type, ConstructorInvocation-arguments, ),
NullLiteral(CastExpression-expression, ConstructorInvocation-arguments, ),
"
129,"if (this.getTableName() == null || this.getTableName().compareTo("""") == 0) {","if (this.getTableName() == null || this.getTableName().compareTo("""") == 0) {
  throw new IllegalArgumentException();
}
",0,1,8,,"ThisExpression(MethodInvocation-expression, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-rightOperand, IfStatement-expression, ),
"
130,"new DirectoryHolder(getName() + ""_DIR#"" + i, statisticsFactory, dirs[i], dirSizes[i], i,","directories[i]=new DirectoryHolder(getName() + ""_DIR#"" + i,statisticsFactory,dirs[i],dirSizes[i],i,diskDirSizesUnit);
",0,1,10,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ClassInstanceCreation-arguments, ),
StringLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, ),
SimpleName(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, ),
SimpleName(ClassInstanceCreation-arguments, ),
SimpleName(ArrayAccess-array, ClassInstanceCreation-arguments, ),
SimpleName(ArrayAccess-index, ClassInstanceCreation-arguments, ),
SimpleName(ArrayAccess-array, ClassInstanceCreation-arguments, ),
SimpleName(ArrayAccess-index, ClassInstanceCreation-arguments, ),
SimpleName(ClassInstanceCreation-arguments, ),
"
131,"+ (isEmpty(serverGroup) ? ""[any servers]"" : ""["" + getServerGroup() + ""]""));","stats=startDisabled ? null : new PoolStats(statFactory,getName() + ""->"" + (isEmpty(serverGroup) ? ""[any servers]"" : ""["" + getServerGroup() + ""]""));
",0,0,6,,"SimpleName(MethodInvocation-name, ConditionalExpression-expression, ParenthesizedExpression-expression, ),
SimpleName(MethodInvocation-arguments, ConditionalExpression-expression, ParenthesizedExpression-expression, ),
StringLiteral(ConditionalExpression-thenExpression, ParenthesizedExpression-expression, ),
StringLiteral(InfixExpression-leftOperand, ConditionalExpression-elseExpression, ParenthesizedExpression-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ConditionalExpression-elseExpression, ParenthesizedExpression-expression, ),
StringLiteral(InfixExpression-extendedOperands, ConditionalExpression-elseExpression, ParenthesizedExpression-expression, ),
"
132,addFieldValues((Object[]) itr.next());,"addFieldValues((Object[])itr.next());
",0,1,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ArrayType-elementType, CastExpression-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
Dimension(ArrayType-dimensions, CastExpression-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
133,&& !isInternalRegion() && !attrs.getScope().isAck() && !doesNotDistribute(),"if (getDistributionManager().getConfig().getEnableNetworkPartitionDetection() && !isInternalRegion() && !attrs.getScope().isAck()&& !doesNotDistribute()&& attrs.getDataPolicy().withStorage()) {
  logger.warn(""Region {} is being created with scope {} but enable-network-partition-detection is enabled in the distributed system.  This can lead to cache inconsistencies if there is a network failure."",new Object[]{regionName,attrs.getScope()});
}
",0,0,5,,"SimpleName(MethodInvocation-name, PrefixExpression-operand, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, PrefixExpression-operand, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, PrefixExpression-operand, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, ),
"
134,"creationStack = new Exception(String.format(""Created GemFireCache %s"", toString()));","creationStack=new Exception(String.format(""Created GemFireCache %s"",toString()));
",0,0,6,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
135,if (getDataType() != null && arrayExpr.getScale() != null && otherExpr.getScale() != null,"if (getDataType() != null && arrayExpr.getScale() != null && otherExpr.getScale() != null && otherExpr.getScale() > arrayExpr.getScale()) {
  throw new DataExceedsCapacityException(baseDataType,arrayExpr.getMaxLength(),arrayExpr.getScale(),null);
}
",0,1,8,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, InfixExpression-rightOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-rightOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-rightOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
"
136,this.currentBucketI = getNextBucketIter(false );,"this.currentBucketI=getNextBucketIter(false);
",0,0,4,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
137,this.onlyExisting = ifOld && !isReplaceOnClient();,"this.onlyExisting=ifOld && !isReplaceOnClient();
",0,13,4,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, InfixExpression-rightOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
138,"add(se.name[0], se.op);","add(se.name[0],se.op);
",0,0,4,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(ArrayAccess-array, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ArrayAccess-index, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
139,if (index == 0 && getRegion(userRegion.getFullPath()) != null) {,"if (index == 0 && getRegion(userRegion.getFullPath()) != null) {
  stats.incQueueSize(getRegion(userRegion.getFullPath()).getLocalSize());
}
",0,1,6,,"SimpleName(InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-rightOperand, IfStatement-expression, ),
"
140,"AddressableMemoryManager.writeIntVolatile(getAddress() + REF_COUNT_OFFSET, MAGIC_NUMBER);","AddressableMemoryManager.writeIntVolatile(getAddress() + REF_COUNT_OFFSET,MAGIC_NUMBER);
",0,0,5,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
141,"config.put(CatalogProperties.WAREHOUSE_LOCATION, String.format(""file:","config.put(CatalogProperties.WAREHOUSE_LOCATION,String.format(""file://%s"",warehouseRoot()));
",0,8,7,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
142,"throw new InvalidConfigurationException(""Getter method of wrong type: "" + getterMethod.getReturnType() + "" expected "" + getDescription());","throw new InvalidConfigurationException(""Getter method of wrong type: "" + getterMethod.getReturnType() + "" expected ""+ getDescription());
",0,3,6,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, ThrowStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
"
143,"String tmpDir = resolveServerPath(System.getProperty(""java.io.tmpdir""));","String tmpDir=resolveServerPath(System.getProperty(""java.io.tmpdir""));
",0,0,6,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
144,this.name = (new File(fullName)).getName();,"this.name=(new File(fullName)).getName();
",0,0,5,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
145,if (super.getSEIClass() == null) {,"if (super.getSEIClass() == null) {
  String sei=portInfo.getServiceEndpointInterfaceName();
  if (sei != null && sei.trim().length() > 0) {
    try {
      this.seiClass=loader.loadClass(sei.trim());
    }
 catch (    ClassNotFoundException ex) {
      throw new WebServiceException(""Failed to load SEI class: "" + sei);
    }
  }
}
",0,0,2,,"SimpleName(SuperMethodInvocation-name, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, IfStatement-expression, ),
"
146,".of(InternalConfig.get(DockerConfigConfigSource.class.getName() + "".prefixes"", """").split("",""))","this(InternalConfig.get(DockerConfigConfigSource.class.getName() + "".base"",""/""),Integer.parseInt(InternalConfig.get(DockerConfigConfigSource.class.getName() + "".ordinal"",""100"")),Stream.of(InternalConfig.get(DockerConfigConfigSource.class.getName() + "".prefixes"","""").split("","")).map(String::trim).filter(it -> !it.isEmpty()).toArray(String[]::new));
",0,0,9,,"SimpleName(),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-leftOperand, MethodInvocation-arguments, MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, MethodInvocation-expression, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, MethodInvocation-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, ),
StringLiteral(MethodInvocation-arguments, ),
"
147,"this(cs, cs.getConfiguration(), queueName, parent, old, false);","this(cs,cs.getConfiguration(),queueName,parent,old,false);
",0,12,7,,"SimpleName(ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-expression, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
BooleanLiteral(ConstructorInvocation-arguments, ),
"
148,"this(joinRel, ((Join) joinRel).isSemiJoin(), lPreds, rPreds);","this(joinRel,((Join)joinRel).isSemiJoin(),lPreds,rPreds);
",0,1,6,,"SimpleName(ConstructorInvocation-arguments, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, ConstructorInvocation-arguments, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
"
149,"super.put(values[i++], values[i++]);","super.put(values[i++],values[i++]);
",0,0,5,,"SimpleName(SuperMethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(PostfixExpression-operand, ArrayAccess-index, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(PostfixExpression-operand, ArrayAccess-index, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
"
150,setName(placeholder ? type.getUnresolvedName() : type.getName());,"setName(placeholder ? type.getUnresolvedName() : type.getName());
",0,0,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
151,setType(ClassHelper.isPrimitiveType(type) ? ClassHelper.getWrapper(type) : type);,"setType(ClassHelper.isPrimitiveType(type) ? ClassHelper.getWrapper(type) : type);
",0,0,8,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
152,this.errorCollector = errorCollector != null ? errorCollector : new ErrorCollector(getConfiguration());,"this.errorCollector=errorCollector != null ? errorCollector : new ErrorCollector(getConfiguration());
",0,0,7,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
153,String signature[] = createSignature(info);,"String signature[]=createSignature(info);
",0,0,5,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
154,"throw new IllegalArgumentException(""Expected second parameter to be of type: "" + String.class.toString());","throw new IllegalArgumentException(""Expected second parameter to be of type: "" + String.class.toString());
",0,0,4,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, ThrowStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-rightOperand, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
"
155,"!FsConstants.VIEWFS_TYPE.equals(getType());","boolean initingUriAsFallbackOnNoMounts=!FsConstants.VIEWFS_TYPE.equals(getType());
",0,0,3,,"QualifiedName(MethodInvocation-expression, PrefixExpression-operand, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, PrefixExpression-operand, ),
"
156,if (getLongValue(JobKeys.TOTAL_REDUCES) == 0) {,"if (getLongValue(JobKeys.TOTAL_REDUCES) == 0) {
  this._job.put(JobKeys.JOBTYPE,""MAP_ONLY"");
}
 else {
  this._job.put(JobKeys.JOBTYPE,""MAP_REDUCE"");
}
",0,1,3,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, IfStatement-expression, ),
QualifiedName(MethodInvocation-arguments, InfixExpression-leftOperand, IfStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, IfStatement-expression, ),
"
157,"if (Debug.verboseOn()) Debug.logVerbose(""Created "" + this.toString(), module);","if (Debug.verboseOn()) Debug.logVerbose(""Created "" + this.toString(),module);
",0,1,8,,"SimpleName(MethodInvocation-expression, IfStatement-expression, ),
SimpleName(MethodInvocation-name, IfStatement-expression, ),
SimpleName(MethodInvocation-expression, ExpressionStatement-expression, IfStatement-thenStatement, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, IfStatement-thenStatement, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, IfStatement-thenStatement, ),
ThisExpression(MethodInvocation-expression, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, IfStatement-thenStatement, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, IfStatement-thenStatement, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, IfStatement-thenStatement, ),
"
158,assert substrate.getFirstChild(substrate.getDocumentElement()) != null || size() == 0;,"assert substrate.getFirstChild(substrate.getDocumentElement()) != null || size() == 0;
",0,1,7,,"SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, InfixExpression-leftOperand, AssertStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-leftOperand, AssertStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-leftOperand, InfixExpression-leftOperand, AssertStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-leftOperand, InfixExpression-leftOperand, AssertStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, AssertStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-rightOperand, AssertStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-rightOperand, AssertStatement-expression, ),
"
159,"for (final ResourceProvider rp : ServiceLoader.load(ResourceProvider.class, EmbeddedServletContext.class.getClassLoader())) {","for (final ResourceProvider rp : ServiceLoader.load(ResourceProvider.class,EmbeddedServletContext.class.getClassLoader())) {
  resourceProviders.add(rp);
}
",0,1,8,,"Modifier(SingleVariableDeclaration-modifiers, EnhancedForStatement-parameter, ),
SimpleName(SimpleType-name, SingleVariableDeclaration-type, EnhancedForStatement-parameter, ),
SimpleName(SingleVariableDeclaration-name, EnhancedForStatement-parameter, ),
SimpleName(MethodInvocation-expression, EnhancedForStatement-expression, ),
SimpleName(MethodInvocation-name, EnhancedForStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, EnhancedForStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, MethodInvocation-arguments, EnhancedForStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, EnhancedForStatement-expression, ),
"
160,this.setMaxPriority(Priority.newInstance(maxPriority.getPriority()));,"this.setMaxPriority(Priority.newInstance(maxPriority.getPriority()));
",0,0,6,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
161,"setCheckpointDirectories(FSImage.getCheckpointDirs(conf, null),","setCheckpointDirectories(FSImage.getCheckpointDirs(conf,null),FSImage.getCheckpointEditsDirs(conf,null));
",0,0,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NullLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
162,this(new Builder().setName(name),"this(new Builder().setName(name).addEndpoint(URI.create(""http://"" + bindAddress + "":""+ port)).setFindPort(findPort).setConf(conf).setACL(adminsAcl).setPathSpec(pathSpecs));
",0,0,3,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ConstructorInvocation-arguments, ),
"
163,"zooKeeper = new ZKWatcher(conf, getProcessName() + "":"" + rpcServices.isa.getPort(), this,","zooKeeper=new ZKWatcher(conf,getProcessName() + "":"" + rpcServices.isa.getPort(),this,canCreateBaseZNode());
",0,0,8,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-expression, InfixExpression-extendedOperands, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
ThisExpression(ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
164,"this(nimbus, resourceMetrics, supervisors, assignments, topologies, conf, null, null, null, null,","this(nimbus,resourceMetrics,supervisors,assignments,topologies,conf,null,null,null,null,Double.NaN,Double.NaN,null);
",0,2,10,,"SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
NullLiteral(ConstructorInvocation-arguments, ),
NullLiteral(ConstructorInvocation-arguments, ),
NullLiteral(ConstructorInvocation-arguments, ),
NullLiteral(ConstructorInvocation-arguments, ),
"
165,"this(id, jndiContext, moduleContext, BeanType.MESSAGE_DRIVEN, false, beanClass, false);","this(id,jndiContext,moduleContext,BeanType.MESSAGE_DRIVEN,false,beanClass,false);
",0,3,7,,"SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
QualifiedName(ConstructorInvocation-arguments, ),
BooleanLiteral(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
BooleanLiteral(ConstructorInvocation-arguments, ),
"
166,long defaultSplitSize = (long)(flushSize * getLevel0MinFiles() * 4 * splitPartCount);,"long defaultSplitSize=(long)(flushSize * getLevel0MinFiles() * 4* splitPartCount);
",0,0,7,,"PrimitiveType(VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
PrimitiveType(CastExpression-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, CastExpression-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ParenthesizedExpression-expression, CastExpression-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(InfixExpression-extendedOperands, ParenthesizedExpression-expression, CastExpression-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(InfixExpression-extendedOperands, ParenthesizedExpression-expression, CastExpression-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
167,"this.prefixPathStr = new Path(walDir, walFilePrefix + WAL_FILE_NAME_DELIMITER).toString();","this.prefixPathStr=new Path(walDir,walFilePrefix + WAL_FILE_NAME_DELIMITER).toString();
",0,0,7,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-rightOperand, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
168,"Map<String, Object> configUpdates = postProcessParsedConfig(Collections.unmodifiableMap(this.values));","Map<String,Object> configUpdates=postProcessParsedConfig(Collections.unmodifiableMap(this.values));
",0,1,9,,"SimpleName(SimpleType-name, ParameterizedType-type, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
ThisExpression(FieldAccess-expression, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(FieldAccess-name, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
169,"addDefaultTransition(HelixDefinedState.ERROR.toString(), HelixDefinedState.DROPPED.toString(),","addDefaultTransition(HelixDefinedState.ERROR.toString(),HelixDefinedState.DROPPED.toString(),HelixDefinedState.DROPPED.toString());
",0,0,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
170,"this(HiveConf.getFloatVar(hconf, HiveConf.ConfVars.HIVEHASHTABLEKEYCOUNTADJUSTMENT),","this(HiveConf.getFloatVar(hconf,HiveConf.ConfVars.HIVEHASHTABLEKEYCOUNTADJUSTMENT),HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHASHTABLETHRESHOLD),HiveConf.getFloatVar(hconf,HiveConf.ConfVars.HIVEHASHTABLELOADFACTOR),HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMEMCHECKFREQ),HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINWBSIZE),HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHASHTABLEWBSIZE),HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINNUMPARTITIONS),HiveConf.getFloatVar(hconf,HiveConf.ConfVars.HIVEMAPJOINOPTIMIZEDTABLEPROBEPERCENT),HiveConf.getBoolVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINBLOOMFILTER),estimatedTableSize,keyCount,memoryAvailable,nwayConf,HiveUtils.getLocalDirList(hconf));
",0,0,4,,"SimpleName(MethodInvocation-expression, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-arguments, ConstructorInvocation-arguments, ),
QualifiedName(MethodInvocation-arguments, ConstructorInvocation-arguments, ),
"
171,"vOutContext = new VectorizationContext(getName(), this.vContext);","vOutContext=new VectorizationContext(getName(),this.vContext);
",0,0,5,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
ThisExpression(FieldAccess-expression, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
172,if (authorizer != null && needTransform() && !skipTableMasking) {,"if (authorizer != null && needTransform() && !skipTableMasking) {
  enable=true;
  translator=new UnparseTranslator(conf);
  translator.enable();
}
",0,0,4,,"SimpleName(InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(PrefixExpression-operand, InfixExpression-rightOperand, IfStatement-expression, ),
"
173,this.setNumBuckets(-1);,"this.setNumBuckets(-1);
",0,0,3,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
NumberLiteral(PrefixExpression-operand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
174,"getConsole().printInfo(""Hive Session ID = "" + getSessionId());","getConsole().printInfo(""Hive Session ID = "" + getSessionId());
",0,0,4,,"SimpleName(MethodInvocation-name, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
175,""" with kerberos authentication "" + (isSASLWithKerberizedHadoop() ? ""enabled."" : ""disabled""));","LOG.info(""Using authentication "" + authTypeStr + "" with kerberos authentication ""+ (isSASLWithKerberizedHadoop() ? ""enabled."" : ""disabled""));
",0,0,4,,"StringLiteral(),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, ParenthesizedExpression-expression, ),
StringLiteral(ConditionalExpression-thenExpression, ParenthesizedExpression-expression, ),
StringLiteral(ConditionalExpression-elseExpression, ParenthesizedExpression-expression, ),
"
176,isCompatibleDatastore = (!isInTest || ensureDbInit()) && runTestQuery();,"isCompatibleDatastore=(!isInTest || ensureDbInit()) && runTestQuery();
",0,0,4,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(PrefixExpression-operand, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
177,this.currentIndex = findNext(-1);,"this.currentIndex=findNext(-1);
",0,0,4,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(PrefixExpression-operand, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
178,schema = BinaryUtils.hasSchema(flags) ? getOrCreateSchema() : null;,"schema=BinaryUtils.hasSchema(flags) ? getOrCreateSchema() : null;
",0,0,6,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
179,"ctx.wal().log(new PartitionMetaStateRecord(grp.groupId(), id, state(), 0));","ctx.wal().log(new PartitionMetaStateRecord(grp.groupId(),id,state(),0));
",0,0,9,,"SimpleName(MethodInvocation-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
180,map(canRemap ? ctx.affinity().affinityTopologyVersion() : topVer);,"map(canRemap ? ctx.affinity().affinityTopologyVersion() : topVer);
",0,0,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
181,"assert isJunitFrameworkClass() : ""GridAbstractTest class cannot be extended directly "" +","assert isJunitFrameworkClass() : ""GridAbstractTest class cannot be extended directly "" + ""(use GridCommonAbstractTest class instead)."";
",0,0,2,,"SimpleName(MethodInvocation-name, AssertStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, AssertStatement-message, ),
"
182,"Instrumented.getMetricContext(workUnitState, classTag.or(this.getClass()), generateTags(workUnitState)));","this.metricContext=this.closer.register(Instrumented.getMetricContext(workUnitState,classTag.or(this.getClass()),generateTags(workUnitState)));
",0,0,9,,"SimpleName(MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, ),
SimpleName(MethodInvocation-arguments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ),
"
183,"converters.add(getConverter(fieldName, schema.getType().getName(), schemaNode, state, isNullable(), ignoreFields));","converters.add(getConverter(fieldName,schema.getType().getName(),schemaNode,state,isNullable(),ignoreFields));
",0,0,11,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
184,"this.datasetCleaner = new DatasetCleaner(FileSystem.get(getConf()), props.toProperties());","this.datasetCleaner=new DatasetCleaner(FileSystem.get(getConf()),props.toProperties());
",0,0,8,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
185,(deserializerType.equals(Optional.of(Deserializers.CONFLUENT_AVRO))) ? (Schema) getSchema() : null;,"this.latestSchema=(deserializerType.equals(Optional.of(Deserializers.CONFLUENT_AVRO))) ? (Schema)getSchema() : null;
",0,0,8,,"SimpleName(MethodInvocation-expression, ParenthesizedExpression-expression, ConditionalExpression-expression, ),
SimpleName(MethodInvocation-name, ParenthesizedExpression-expression, ConditionalExpression-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ParenthesizedExpression-expression, ConditionalExpression-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ParenthesizedExpression-expression, ConditionalExpression-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, ParenthesizedExpression-expression, ConditionalExpression-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ConditionalExpression-thenExpression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, ConditionalExpression-thenExpression, ),
NullLiteral(ConditionalExpression-elseExpression, ),
"
186,"this.converter = new ImmutableFSJobCatalog.JobSpecConverter(this.jobConfDirPath, getInjectedExtension());","this.converter=new ImmutableFSJobCatalog.JobSpecConverter(this.jobConfDirPath,getInjectedExtension());
",0,0,6,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
ThisExpression(FieldAccess-expression, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
187,"this.pathAlterationDetector.addPathAlterationObserver(getListener(), observerOptional, this.jobConfDirPath);","this.pathAlterationDetector.addPathAlterationObserver(getListener(),observerOptional,this.jobConfDirPath);
",0,0,7,,"ThisExpression(FieldAccess-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
ThisExpression(FieldAccess-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
188,this.mysqlStateStore = (MysqlStateStore<State>) createStateStore(config);,"this.mysqlStateStore=(MysqlStateStore<State>)createStateStore(config);
",0,0,6,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, CastExpression-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
189,this.weightValueReused = newWeightValue(0.f);,"this.weightValueReused=newWeightValue(0.f);
",0,0,4,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
190,"throw new RuntimeException(""Directory ["" + directory + ""] does not implement '"" + LastModified.class.toString()","throw new RuntimeException(""Directory ["" + directory + ""] does not implement '""+ LastModified.class.toString()+ ""'"");
",0,0,6,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, ThrowStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
SimpleName(InfixExpression-rightOperand, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-extendedOperands, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
"
191,"setConnections(_zooKeeper.getChildren(ZookeeperPathConstants.getOnlineControllersPath(), false));","setConnections(_zooKeeper.getChildren(ZookeeperPathConstants.getOnlineControllersPath(),false));
",0,0,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
192,"""Expected data type '"" + getShortDataTypeId(expectedDataType.getId())","status=new StdStatus(StdStatusCode.STATUS_CODE_PROCESSING_ERROR,""Expected data type '"" + getShortDataTypeId(expectedDataType.getId()) + ""' saw '""+ getShortDataTypeId(attributeValue.getDataTypeId())+ ""'"");
",0,0,4,,"StringLiteral(InfixExpression-leftOperand, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-rightOperand, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-rightOperand, ),
"
193,assert size() == 0;,"assert size() == 0;
",0,0,2,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, AssertStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, AssertStatement-expression, ),
"
194,"this.setReferer(referer, props.getProperty(MudrodConstants.BASE_URL));","this.setReferer(referer,props.getProperty(MudrodConstants.BASE_URL));
",0,2,6,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
195,String id = getIdentifierRoot().relativize(getIdentifier()),"String id=getIdentifierRoot().relativize(getIdentifier()).toASCIIString().replace(""/"","""");
",0,0,5,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
196,"new DefaultBrokerRcvQltyStats(this.getRpcServiceFactory(), this.tubeClientConfig);","this.brokerRcvQltyStats=new DefaultBrokerRcvQltyStats(this.getRpcServiceFactory(),this.tubeClientConfig);
",0,0,5,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, ),
ThisExpression(MethodInvocation-expression, ClassInstanceCreation-arguments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ),
ThisExpression(FieldAccess-expression, ClassInstanceCreation-arguments, ),
SimpleName(FieldAccess-name, ClassInstanceCreation-arguments, ),
"
197,"final Map<String, String> props = this.loadConfigProperties(propOverwrite);","final Map<String,String> props=this.loadConfigProperties(propOverwrite);
",0,2,8,,"Modifier(VariableDeclarationStatement-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
ThisExpression(MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
198,"selectedItemHintKey = ComponentHintKey.create(super.getCommonContext(), getSelectorDropdownPanel(), EntityCollectionModelParented.HINT_KEY_SELECTED_ITEM);","selectedItemHintKey=ComponentHintKey.create(super.getCommonContext(),getSelectorDropdownPanel(),EntityCollectionModelParented.HINT_KEY_SELECTED_ITEM);
",0,0,6,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SuperMethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
199,"addGroup(new TestGroup(""a"", getName()).withGroups(""aa"", ""aaa""));","addGroup(new TestGroup(""a"",getName()).withGroups(""aa"",""aaa""));
",0,1,7,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
200,"this.costPerEntry = getOptionalValue(defn, FulltextIndexConstants.COST_PER_ENTRY, getDefaultCostPerEntry(version));","this.costPerEntry=getOptionalValue(defn,FulltextIndexConstants.COST_PER_ENTRY,getDefaultCostPerEntry(version));
",0,0,7,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
201,"this.putAll( ( Map<? extends String, ?> ) dataResponse.get( ""user"" ) );","this.putAll((Map<? extends String,?>)dataResponse.get(""user""));
",0,1,8,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, CastExpression-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, CastExpression-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
WildcardType(ParameterizedType-typeArguments, CastExpression-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
202,"this.classpath         = resolveStringProperty (UiOption.ServicePingClasspath.pname() , ping_props, job_props, System.getProperty(""java.class.path""));","this.classpath=resolveStringProperty(UiOption.ServicePingClasspath.pname(),ping_props,job_props,System.getProperty(""java.class.path""));
",0,1,10,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
203,for (Iterator<Triple> it = b.iterator(); it.hasNext();) add( it.next() );,"for (Iterator<Triple> it=b.iterator(); it.hasNext(); ) add(it.next());
",0,0,10,,"SimpleName(SimpleType-name, ParameterizedType-type, VariableDeclarationExpression-type, ForStatement-initializers, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, VariableDeclarationExpression-type, ForStatement-initializers, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationExpression-fragments, ForStatement-initializers, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationExpression-fragments, ForStatement-initializers, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationExpression-fragments, ForStatement-initializers, ),
SimpleName(MethodInvocation-expression, ForStatement-expression, ),
SimpleName(MethodInvocation-name, ForStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ForStatement-body, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ForStatement-body, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ForStatement-body, ),
"
204,"this( spec, makeBaseModel( spec, model ), true );","this(spec,makeBaseModel(spec,model),true);
",0,0,5,,"SimpleName(ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-arguments, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-arguments, ConstructorInvocation-arguments, ),
BooleanLiteral(ConstructorInvocation-arguments, ),
"
205,"this(brokers, controller, DEFAULT_CLUSTER_ID, 1, brokers.size(),","this(brokers,controller,DEFAULT_CLUSTER_ID,1,brokers.size(),Collections.nCopies(brokers.size(),DEFAULT_LOG_DIRS),false);
",0,1,6,,"SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
NumberLiteral(ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-expression, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, ConstructorInvocation-arguments, ),
"
206,this.reader = shouldThrowNoContentExceptionOnEmptyStreams() && isJaxRs2() ?,"this.reader=shouldThrowNoContentExceptionOnEmptyStreams() && isJaxRs2() ? new NoContentExceptionHandlerReader<>(reader) : reader;
",0,0,4,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
207,setConfigFile(args[i + 1].trim());,"setConfigFile(args[i + 1].trim());
",0,0,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ArrayAccess-index, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, ArrayAccess-index, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
208,this.rule = isMonotonic() ? Hypothesis.INORDER_RULE : Hypothesis.INVERTED_RULE;,"this.rule=isMonotonic() ? Hypothesis.INORDER_RULE : Hypothesis.INVERTED_RULE;
",0,2,5,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
209,"Map<Class<Object>, Class<? extends Object>> m = getImplClasses();","Map<Class<Object>,Class<? extends Object>> m=getImplClasses();
",0,0,7,,"SimpleName(SimpleType-name, ParameterizedType-type, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
210,if (this.validator != null && hasDefault()),"if (this.validator != null && hasDefault()) this.validator.ensureValid(name,this.defaultValue);
",0,0,4,,"ThisExpression(FieldAccess-expression, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(FieldAccess-name, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, IfStatement-expression, ),
"
211,"this.registration = context.registerService(SolrCore.class.getName(), core, props);","this.registration=context.registerService(SolrCore.class.getName(),core,props);
",0,1,8,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
212,"tupleIterator = new SortedIteratorMergerWithLimit<ITuple>(transformed, context.getFinalPushDownLimit(), getTupleDimensionComparator(cuboid, groups, returnTupleInfo)).getIterator();","tupleIterator=new SortedIteratorMergerWithLimit<ITuple>(transformed,context.getFinalPushDownLimit(),getTupleDimensionComparator(cuboid,groups,returnTupleInfo)).getIterator();
",0,1,11,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
213,"Pair<Set<Long>, Map<Long, List<Long>>> pair = buildTreeBottomUp();","Pair<Set<Long>,Map<Long,List<Long>>> pair=buildTreeBottomUp();
",0,0,9,,"SimpleName(SimpleType-name, ParameterizedType-type, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
214,"this(fields, null, null, false, SchemaIdentifier.EMPTY);","this(fields,null,null,false,SchemaIdentifier.EMPTY);
",0,1,5,,"SimpleName(ConstructorInvocation-arguments, ),
NullLiteral(ConstructorInvocation-arguments, ),
NullLiteral(ConstructorInvocation-arguments, ),
BooleanLiteral(ConstructorInvocation-arguments, ),
QualifiedName(ConstructorInvocation-arguments, ),
"
215,if (!enabled(table.getConfiguration())) {,"if (!enabled(table.getConfiguration())) {
  logger.info(""Region size calculation disabled."");
  return;
}
",0,0,3,,"SimpleName(MethodInvocation-name, PrefixExpression-operand, IfStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, PrefixExpression-operand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, PrefixExpression-operand, IfStatement-expression, ),
"
216,handlesExceptions = !((BridgePatternConverter) head).ignoresThrowable();,"handlesExceptions=!((BridgePatternConverter)head).ignoresThrowable();
",0,0,4,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, PrefixExpression-operand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, PrefixExpression-operand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
217,"this( id, repositoryId, repository, indexDirectoryFile, new TrackingLockFactory( FSLockFactory.getDefault() ),","this(id,repositoryId,repository,indexDirectoryFile,new TrackingLockFactory(FSLockFactory.getDefault()),repositoryUrl,indexUpdateUrl,indexCreators,reclaimIndex);
",0,0,7,,"SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ConstructorInvocation-arguments, ),
"
218,"messagesConsumedCounter = -getNumberOfEntries(Range.closed(readPosition, ledger.getLastPosition()));","messagesConsumedCounter=-getNumberOfEntries(Range.closed(readPosition,ledger.getLastPosition()));
",0,1,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, PrefixExpression-operand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, PrefixExpression-operand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, PrefixExpression-operand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, PrefixExpression-operand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, PrefixExpression-operand, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
219,try ( XmlStreamReader reader = new XmlStreamReader( getFile() ) ),"try (XmlStreamReader reader=new XmlStreamReader(getFile())){
  final Model model=new MavenXpp3Reader().read(reader);
  setModel(model);
  setGroupId(model.getGroupId());
  setArtifactId(model.getArtifactId());
  setVersion(model.getVersion());
  setName(model.getName());
  setDescription(model.getDescription());
  setDevelopers(model.getDevelopers());
  setOrganization(model.getOrganization());
}
 catch (Exception e) {
  throw new RuntimeException(e);
}
",0,0,4,,"SimpleName(SimpleType-name, VariableDeclarationExpression-type, TryStatement-resources, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationExpression-fragments, TryStatement-resources, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationExpression-fragments, TryStatement-resources, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationExpression-fragments, TryStatement-resources, ),
"
220,this.documentWriter = new ElasticsearchBulkDocumentWriter<>(client),"this.documentWriter=new ElasticsearchBulkDocumentWriter<>(client).withRefreshPolicy(WriteRequest.RefreshPolicy.NONE);
",0,0,4,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
221,setFinalFilenamePrefix(prefixStrategy.apply(new Clock()));,"setFinalFilenamePrefix(prefixStrategy.apply(new Clock()));
",0,0,4,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
222,"Iterable<? extends PublicKeyIdentity> sessionIds = initializeSessionIdentities(session, signatureFactories);","Iterable<? extends PublicKeyIdentity> sessionIds=initializeSessionIdentities(session,signatureFactories);
",0,1,6,,"SimpleName(SimpleType-name, ParameterizedType-type, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
223,"setMessage((MessageData) afContext.getPageFlowScope().get(""message""));","setMessage((MessageData)afContext.getPageFlowScope().get(""message""));
",0,0,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
224,_schema = new ValueType[getDim(1)];,"_schema=new ValueType[getDim(1)];
",0,1,5,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ArrayCreation-dimensions, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ArrayCreation-dimensions, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
225,"setState(enabled ? EnabledState.FULL_ENABLED : EnabledState.DISABLED, false);","setState(enabled ? EnabledState.FULL_ENABLED : EnabledState.DISABLED,false);
",0,0,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
226,for (int i =0; i < getRowCount(); i++) {,"for (int i=0; i < getRowCount(); i++) {
  modelIndex.add(new DelegateReference(i));
}
",0,0,6,,"PrimitiveType(VariableDeclarationExpression-type, ForStatement-initializers, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationExpression-fragments, ForStatement-initializers, ),
NumberLiteral(VariableDeclarationFragment-initializer, VariableDeclarationExpression-fragments, ForStatement-initializers, ),
SimpleName(InfixExpression-leftOperand, ForStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ForStatement-expression, ),
SimpleName(PostfixExpression-operand, ForStatement-updaters, ),
"
227,"setFQNLabel(Utils.format(element, parentType, compilationInfo , false, true));","setFQNLabel(Utils.format(element,parentType,compilationInfo,false,true));
",0,0,8,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
228,"setInfo(info, displayName, Collections.<UpdateElement>emptyList(), Collections.emptyList(), Collections.emptyMap(), false);","setInfo(info,displayName,Collections.<UpdateElement>emptyList(),Collections.emptyList(),Collections.emptyMap(),false);
",0,0,11,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
229,Action[] viewActions = new ViewActions(views).getActions();,"Action[] viewActions=new ViewActions(views).getActions();
",0,0,6,,"SimpleName(SimpleType-name, ArrayType-elementType, VariableDeclarationStatement-type, ),
Dimension(ArrayType-dimensions, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
230,"setIcon(ImageUtilities.loadImageIcon(""org/openide/resources/actions/empty.gif"", false));","setIcon(ImageUtilities.loadImageIcon(""org/openide/resources/actions/empty.gif"",false));
",0,0,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
231,support = new HistoryActionSupport<VCSHistoryProvider.HistoryEntry>(getCallback());,"support=new HistoryActionSupport<VCSHistoryProvider.HistoryEntry>(getCallback());
",0,0,4,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
232,"map.put(""delete"", ExplorerUtils.actionDelete(getExplorerManager(), true));","map.put(""delete"",ExplorerUtils.actionDelete(getExplorerManager(),true));
",0,0,7,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
233,"doStuff(1, SwingUtilities.calculateInnerArea(null, f), 2);","doStuff(1,SwingUtilities.calculateInnerArea(null,f),2);
",0,0,7,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
NullLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
234,"name = createName(DefaultFactories.forBuildin(NameFactory.class), (String) value);","name=createName(DefaultFactories.forBuildin(NameFactory.class),(String)value);
",0,2,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(CastExpression-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
235,"this(ModelProperty.toProperty(null), 0, null);","this(ModelProperty.toProperty(null),0,null);
",0,2,5,,"SimpleName(MethodInvocation-expression, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, ConstructorInvocation-arguments, ),
NullLiteral(MethodInvocation-arguments, ConstructorInvocation-arguments, ),
NumberLiteral(ConstructorInvocation-arguments, ),
NullLiteral(ConstructorInvocation-arguments, ),
"
236,this(,"this(ModelProperty.toProperty(new DefaultPropertyModel(bean,propertyName)),preferences,new DefaultPropertyModel(bean,propertyName));
",0,0,0,,
237,"public SmallButton(String text, Icon icon) { super(text); setIcon(icon); }","super(text);
",0,0,1,,"SimpleName(SuperConstructorInvocation-arguments, Block-statements, MethodDeclaration-body, ),
"
238,"int lastOfs = generateClassNodeFromMethodNodes(rootMethodVec, 0);","int lastOfs=generateClassNodeFromMethodNodes(rootMethodVec,0);
",0,0,5,,"PrimitiveType(VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
239,"super.insert(noQueries, 0);","super.insert(noQueries,0);
",0,0,3,,"SimpleName(SuperMethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
"
240,if (!isLoop() && (getMode() == HeapWalkerNode.MODE_REFERENCES) && isStatic()) {,"if (!isLoop() && (getMode() == HeapWalkerNode.MODE_REFERENCES) && isStatic()) {
  loopTo=computeClassLoopTo();
}
",0,1,4,,"SimpleName(MethodInvocation-name, PrefixExpression-operand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, IfStatement-expression, ),
QualifiedName(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, IfStatement-expression, ),
"
241,"this(fields, null, null, false, id);","this(fields,null,null,false,id);
",0,0,5,,"SimpleName(ConstructorInvocation-arguments, ),
NullLiteral(ConstructorInvocation-arguments, ),
NullLiteral(ConstructorInvocation-arguments, ),
BooleanLiteral(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
"
242,"this(project, path, basePriority, false, qnamesOfDefinitions.isEmpty());","this(project,path,basePriority,false,qnamesOfDefinitions.isEmpty());
",0,1,6,,"SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
BooleanLiteral(ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-expression, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, ConstructorInvocation-arguments, ),
"
243,final List<PropertyDescriptor> props = new ArrayList<>(super.getSupportedPropertyDescriptors());,"final List<PropertyDescriptor> props=new ArrayList<>(super.getSupportedPropertyDescriptors());
",0,2,6,,"Modifier(VariableDeclarationStatement-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SuperMethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
244,"Http.LOG.warn(""No HTTP header, assuming HTTP/0.9 for {}"", getUrl());","Http.LOG.warn(""No HTTP header, assuming HTTP/0.9 for {}"",getUrl());
",0,0,4,,"QualifiedName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
245,"fetchTrace.append(""; Location: "" + getHeader(Response.LOCATION));","fetchTrace.append(""; Location: "" + getHeader(Response.LOCATION));
",0,0,5,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
246,mURIorSafeCURIE = (new AnyURI(val.getAnyURI())).toString();,"mURIorSafeCURIE=(new AnyURI(val.getAnyURI())).toString();
",0,0,5,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
247,if (param.defaultValue != null) this.setDefaultValue(param.defaultValue);,"if (param.defaultValue != null) this.setDefaultValue(param.defaultValue);
",0,0,5,,"QualifiedName(InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, IfStatement-expression, ),
ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, IfStatement-thenStatement, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, IfStatement-thenStatement, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, IfStatement-thenStatement, ),
"
248,parseFilterParam(params.get(RestConstants.LOG_FILTER_OPTION)[0]);,"parseFilterParam(params.get(RestConstants.LOG_FILTER_OPTION)[0]);
",0,0,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ArrayAccess-array, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ArrayAccess-array, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ArrayAccess-array, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ArrayAccess-index, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
249,List<String> interceptorClasses = this.getInterceptorClass();,"List<String> interceptorClasses=this.getInterceptorClass();
",0,0,5,,"SimpleName(SimpleType-name, ParameterizedType-type, VariableDeclarationStatement-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
ThisExpression(MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
250,"add(createColoredLabel(type.toString().replace('_', ' '), MetamodelHelper.getColor(type)));","add(createColoredLabel(type.toString().replace('_',' '),MetamodelHelper.getColor(type)));
",0,0,10,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
251,"replaceSelection(toString(config.get(key)) + ""\r\n"");","replaceSelection(toString(config.get(key)) + ""\r\n"");
",0,0,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
252,"initialize(stocks.get(0), false);","initialize(stocks.get(0),false);
",0,1,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
253,"this(candidate, null, new String[]{ alias }, resultClass);","this(candidate,null,new String[]{alias},resultClass);
",0,0,6,,"SimpleName(ConstructorInvocation-arguments, ),
NullLiteral(ConstructorInvocation-arguments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ConstructorInvocation-arguments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ConstructorInvocation-arguments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
"
254,"|| (style.excludeDefault() && isDefaultValue(attr.getJavaType(), value)))","if ((style.excludeNull() && value == null) || (style.excludeDefault() && isDefaultValue(attr.getJavaType(),value))) continue;
",0,0,6,,"SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ParenthesizedExpression-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-rightOperand, ParenthesizedExpression-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-rightOperand, ParenthesizedExpression-expression, ),
SimpleName(MethodInvocation-arguments, InfixExpression-rightOperand, ParenthesizedExpression-expression, ),
"
255,"_deliveredToConsumerId = (acquiringConsumer instanceof Consumer) ?  String.valueOf(((Consumer<?,?>)acquiringConsumer).getId()) : null;","_deliveredToConsumerId=(acquiringConsumer instanceof Consumer) ? String.valueOf(((Consumer<?,?>)acquiringConsumer).getId()) : null;
",0,1,11,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InstanceofExpression-leftOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, InstanceofExpression-rightOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
WildcardType(ParameterizedType-typeArguments, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
WildcardType(ParameterizedType-typeArguments, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
256,while (isArray(name)) {,"while (isArray(name)) {
  arrayMarker=arrayMarker + ""[]"";
  name=getComponentName(name);
}
",0,0,2,,"SimpleName(MethodInvocation-name, WhileStatement-expression, ),
SimpleName(MethodInvocation-arguments, WhileStatement-expression, ),
"
257,"this.table = input == null ? new HashMap<String,String[]>(0) : read(toByteArray(input));","this.table=input == null ? new HashMap<String,String[]>(0) : read(toByteArray(input));
",0,0,12,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
258,this.setMainPOS(ps.get(0).getPhraseType());,"this.setMainPOS(ps.get(0).getPhraseType());
",0,0,6,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
259,"this(null, new HSSFClientAnchor(), note);","this(null,new HSSFClientAnchor(),note);
",0,1,3,,"NullLiteral(ConstructorInvocation-arguments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
"
260,"converters[parquetFieldIndex - 1] = newMessageConverter(myBuilder, protoField, parquetField);","converters[parquetFieldIndex - 1]=newMessageConverter(myBuilder,protoField,parquetField);
",0,0,7,,"SimpleName(ArrayAccess-array, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ArrayAccess-index, Assignment-leftHandSide, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, ArrayAccess-index, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
261,COSBase base = object instanceof COSObject ? ((COSObject) object).getObject() : object;,"COSBase base=object instanceof COSObject ? ((COSObject)object).getObject() : object;
",0,0,8,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(InstanceofExpression-leftOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, InstanceofExpression-rightOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
262,if (getDataType() != null && otherExpressionType.getByteSize() == null,"if (getDataType() != null && otherExpressionType.getByteSize() == null && otherExpressionType != null && baseDataType.isFixedWidth() && otherExpressionType.isFixedWidth() && arrayExpr.getMaxLength() != null && otherExpr.getMaxLength() != null && otherExpr.getMaxLength() > arrayExpr.getMaxLength()) {
  throw new DataExceedsCapacityException(""Values are not size compatible"");
}
",0,0,5,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, InfixExpression-rightOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-rightOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-rightOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
"
263,".setMessage(getName() + "" expected "" + firstChild.getDataType() + "", but got "" + secondChild.getDataType())","throw new SQLExceptionInfo.Builder(SQLExceptionCode.TYPE_MISMATCH).setMessage(getName() + "" expected "" + firstChild.getDataType()+ "", but got ""+ secondChild.getDataType()).build().buildException();
",0,0,8,,"SimpleName(),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ),
StringLiteral(InfixExpression-rightOperand, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, ),
StringLiteral(InfixExpression-extendedOperands, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, ),
"
264,"this(children, children.get(0) instanceof LiteralExpression);","this(children,children.get(0) instanceof LiteralExpression);
",0,0,5,,"SimpleName(ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-expression, InstanceofExpression-leftOperand, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, InstanceofExpression-leftOperand, ConstructorInvocation-arguments, ),
NumberLiteral(MethodInvocation-arguments, InstanceofExpression-leftOperand, ConstructorInvocation-arguments, ),
SimpleName(SimpleType-name, InstanceofExpression-rightOperand, ConstructorInvocation-arguments, ),
"
265,"scanId = new UUID(ThreadLocalRandom.current().nextLong(), ThreadLocalRandom.current().nextLong()).toString();","scanId=new UUID(ThreadLocalRandom.current().nextLong(),ThreadLocalRandom.current().nextLong()).toString();
",0,0,9,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
266,"this(connection.getQueryServices(), connection.getURL(), props, connection.metaData, connection","this(connection.getQueryServices(),connection.getURL(),props,connection.metaData,connection.getMutationState(),connection.isDescVarLengthRowKeyUpgrade(),connection.isRunningUpgrade(),connection.buildingIndex,true);
",0,1,7,,"SimpleName(MethodInvocation-expression, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-expression, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
QualifiedName(ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-expression, ConstructorInvocation-arguments, ),
"
267,"this(services, connection.url, info, connection.metaData, null,","this(services,connection.url,info,connection.metaData,null,connection.isDescVarLengthRowKeyUpgrade(),connection.isRunningUpgrade(),connection.buildingIndex,true);
",0,0,5,,"SimpleName(ConstructorInvocation-arguments, ),
QualifiedName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
QualifiedName(ConstructorInvocation-arguments, ),
NullLiteral(ConstructorInvocation-arguments, ),
"
268,comPort = SerialPort.getCommPort(((SerialSocketAddress) address).getIdentifier());,"comPort=SerialPort.getCommPort(((SerialSocketAddress)address).getIdentifier());
",0,0,6,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
269,"this(conf, eventLoopGroup, new ConnectionPool(conf, eventLoopGroup), null, false, true);","this(conf,eventLoopGroup,new ConnectionPool(conf,eventLoopGroup),null,false,true);
",0,1,8,,"SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ConstructorInvocation-arguments, ),
SimpleName(ClassInstanceCreation-arguments, ConstructorInvocation-arguments, ),
SimpleName(ClassInstanceCreation-arguments, ConstructorInvocation-arguments, ),
NullLiteral(ConstructorInvocation-arguments, ),
BooleanLiteral(ConstructorInvocation-arguments, ),
BooleanLiteral(ConstructorInvocation-arguments, ),
"
270,builder = (ConsumerBuilderImpl<byte[]>) getConsumerConfiguration(service.getPulsarClient());,"builder=(ConsumerBuilderImpl<byte[]>)getConsumerConfiguration(service.getPulsarClient());
",0,0,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, CastExpression-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, CastExpression-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, CastExpression-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
271,this.acknowledgementMode = isBrowser() ? Session.AUTO_ACKNOWLEDGE : session.acknowledgementMode();,"this.acknowledgementMode=isBrowser() ? Session.AUTO_ACKNOWLEDGE : session.acknowledgementMode();
",0,0,6,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
272,this.contextEnrichers = isExistingPolicies ? shareWith(other) : buildContextEnrichers(options);,"this.contextEnrichers=isExistingPolicies ? shareWith(other) : buildContextEnrichers(options);
",0,0,7,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
273,"LOG.debug(""<== RangerResourceTrie("" + resourceDef.getName() + "", evaluatorCount="" + evaluators.size() + "", isOptimizedForRetrieval="" + isOptimizedForRetrieval + ""): "" + toString());","LOG.debug(""<== RangerResourceTrie("" + resourceDef.getName() + "", evaluatorCount=""+ evaluators.size()+ "", isOptimizedForRetrieval=""+ isOptimizedForRetrieval+ ""): ""+ toString());
",0,0,12,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
274,"LOG.log(Level.INFO, ""Instantiating "" + this.toString());","LOG.log(Level.INFO,""Instantiating "" + this.toString());
",0,0,6,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
ThisExpression(MethodInvocation-expression, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
275,if(this.isLocale(pathElements[0])) {,"if (this.isLocale(pathElements[0])) {
  this.locale=pathElements[0];
  if (pathElements.length == 2) {
    this.pathInfo=pathElements[1];
  }
}
 else {
  this.pathInfo=path;
}
",0,0,4,,"ThisExpression(MethodInvocation-expression, IfStatement-expression, ),
SimpleName(MethodInvocation-name, IfStatement-expression, ),
SimpleName(ArrayAccess-array, MethodInvocation-arguments, IfStatement-expression, ),
NumberLiteral(ArrayAccess-index, MethodInvocation-arguments, IfStatement-expression, ),
"
276,"assert (isTargetableInstruction()) : String.format(""Invalid deferred operand type %s"", super.toString());","assert (isTargetableInstruction()) : String.format(""Invalid deferred operand type %s"",super.toString());
",0,0,5,,"SimpleName(MethodInvocation-name, ParenthesizedExpression-expression, AssertStatement-expression, ),
SimpleName(MethodInvocation-expression, AssertStatement-message, ),
SimpleName(MethodInvocation-name, AssertStatement-message, ),
StringLiteral(MethodInvocation-arguments, AssertStatement-message, ),
SimpleName(SuperMethodInvocation-name, MethodInvocation-arguments, AssertStatement-message, ),
"
277,"this.put(name, text.getText().getBytes()[0]);","this.put(name,text.getText().getBytes()[0]);
",0,1,7,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ArrayAccess-array, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ArrayAccess-array, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ArrayAccess-array, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ArrayAccess-index, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
278,setResolver(resolver != null ? resolver : new DefaultAnnotationResolver());,"setResolver(resolver != null ? resolver : new DefaultAnnotationResolver());
",0,0,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
279,"setLanguages(copyCollection(object.getLanguages(), Locale.class));","setLanguages(copyCollection(object.getLanguages(),Locale.class));
",0,0,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
280,deprecated  = (object instanceof Deprecable) ? ((Deprecable) object).isDeprecated() : false;,"deprecated=(object instanceof Deprecable) ? ((Deprecable)object).isDeprecated() : false;
",0,0,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InstanceofExpression-leftOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, InstanceofExpression-rightOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
BooleanLiteral(ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
281,"switch (validateAxis(direction, unit)) {","switch (validateAxis(direction,unit)) {
case INVALID_DIRECTION:
{
    throw new IllegalArgumentException(Resources.forProperties(properties).getString(Resources.Keys.IllegalAxisDirection_2,getClass(),direction));
  }
case INVALID_UNIT:
{
  throw new IllegalArgumentException(Resources.forProperties(properties).getString(Resources.Keys.IllegalUnitFor_2,name,unit));
}
}
",0,0,3,,"SimpleName(MethodInvocation-name, SwitchStatement-expression, ),
SimpleName(MethodInvocation-arguments, SwitchStatement-expression, ),
SimpleName(MethodInvocation-arguments, SwitchStatement-expression, ),
"
282,"this(target, inverse.getTargetDimensions() > 2,","this(target,inverse.getTargetDimensions() > 2,source,inverse.getSourceDimensions() > 2,inverse.grid,inverse);
",0,0,4,,"SimpleName(ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ConstructorInvocation-arguments, ),
NumberLiteral(InfixExpression-rightOperand, ConstructorInvocation-arguments, ),
"
283,if (request.getSession().getAttribute(this.getSessionId()) != null) {,"if (request.getSession().getAttribute(this.getSessionId()) != null) {
  formData.putAll(((Map<String,Object>)request.getSession().getAttribute(this.getSessionId())));
}
",0,1,6,,"SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, IfStatement-expression, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, IfStatement-expression, ),
"
284,"if (getFormResource() != null && getFormResource().getChild(""providers"") != null) {","if (getFormResource() != null && getFormResource().getChild(""providers"") != null) {
  loadProviders(formValueProvider);
}
",0,0,6,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-rightOperand, IfStatement-expression, ),
"
285,"if (validate(s, URI.scheme)) {","if (validate(s,URI.scheme)) {
  _scheme=s;
}
 else {
  throw new URIException(URIException.PARSING,""incorrect scheme"");
}
",0,0,3,,"SimpleName(MethodInvocation-name, IfStatement-expression, ),
SimpleName(MethodInvocation-arguments, IfStatement-expression, ),
QualifiedName(MethodInvocation-arguments, IfStatement-expression, ),
"
286,if(relativeTo != null && relativeTo.getEnd() < getEnd()){,"if (relativeTo != null && relativeTo.getEnd() < getEnd()) {
  throw new IllegalArgumentException(""Illegal span ["" + start + ','+ end+ ""] for ""+ type+ "" relative to ""+ relativeTo+ "" : Span of the ""+ "" contained Token MUST NOT extend the others!"");
}
",0,0,5,,"SimpleName(InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, InfixExpression-rightOperand, IfStatement-expression, ),
"
287,if(!expectsSuccess() && expectedResultIds != null){,"if (!expectsSuccess() && expectedResultIds != null) {
  throw new IllegalArgumentException(""Expected Results can only be parsed"" + ""if the expected status of this test case has an 2xx code"");
}
",0,0,3,,"SimpleName(MethodInvocation-name, PrefixExpression-operand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-rightOperand, IfStatement-expression, ),
"
288,final File indexFieldConfig = getConfigFile(value.toString());,"final File indexFieldConfig=getConfigFile(value.toString());
",0,0,6,,"Modifier(VariableDeclarationStatement-modifiers, ),
SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
289,this(,"this(src.inimbus,src.resourceMetrics,src.supervisors,src.assignments,src.topologies,new HashMap<>(src.conf),src.status,src.blackListedHosts,src.greyListedSupervisors,src.networkTopography,src.totalCpuResource,src.totalMemoryResource,src.totalGenericResources);
",0,0,0,,
290,this(,"this(src.inimbus,src.resourceMetrics,src.supervisors,src.assignments,topologies,new HashMap<>(src.conf),src.status,src.blackListedHosts,src.greyListedSupervisors,src.networkTopography,src.totalCpuResource,src.totalMemoryResource,src.totalGenericResources);
",0,0,0,,
291,"addError(buildErrorMessage(e, new Object[] {e.getMessage()}));","addError(buildErrorMessage(e,new Object[]{e.getMessage()}));
",0,4,7,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
292,initMLContext(SparkSession.builder().sparkContext(javaSparkContext.sc()).getOrCreate());,"initMLContext(SparkSession.builder().sparkContext(javaSparkContext.sc()).getOrCreate());
",0,1,7,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
293,_monitor         = (Integer.parseInt(getParForParam(ParForStatementBlock.PROFILE) ) == 1);,"_monitor=(Integer.parseInt(getParForParam(ParForStatementBlock.PROFILE)) == 1);
",0,0,6,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-leftOperand, ParenthesizedExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, InfixExpression-leftOperand, ParenthesizedExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
294,"reset(dims, false, (val==0) ? 0 : getLength(), val);","reset(dims,false,(val == 0) ? 0 : getLength(),val);
",0,0,8,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
295,"_ixToCols[vt.ordinal()] = new IntRange(0, getDim(1)).toArray();","_ixToCols[vt.ordinal()]=new IntRange(0,getDim(1)).toArray();
",0,1,8,,"SimpleName(ArrayAccess-array, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ArrayAccess-index, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ArrayAccess-index, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
296,"Arrays.fill(_ptr, rlast+1, numRows()+1, nnz);","Arrays.fill(_ptr,rlast + 1,numRows() + 1,nnz);
",0,0,8,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
297,"int exitCode = executeScript(cmd.getOptionValue(""c""));","int exitCode=executeScript(cmd.getOptionValue(""c""));
",0,0,6,,"PrimitiveType(VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
298,final ApplicationContext externalContext = compatibilityMode ? locateExternalContext(),"final ApplicationContext externalContext=compatibilityMode ? locateExternalContext() : null;
",0,0,5,,"Modifier(VariableDeclarationStatement-modifiers, ),
SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(ConditionalExpression-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
299,while(allocateSpace() != null);,"while (allocateSpace() != null) ;
",0,0,3,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, WhileStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, WhileStatement-expression, ),
EmptyStatement(WhileStatement-body, ),
"
300,"super(registry, getDefaultParsers(loader, encodingDetector, excludeParsers));","super(registry,getDefaultParsers(loader,encodingDetector,excludeParsers));
",0,0,5,,"SimpleName(SuperConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, SuperConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-arguments, SuperConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-arguments, SuperConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-arguments, SuperConstructorInvocation-arguments, ),
"
301,setMainTreeLengtsTable(new short[getMainTreeElements()]);,"setMainTreeLengtsTable(new short[getMainTreeElements()]);
",0,0,4,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ArrayCreation-dimensions, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
302,setMaxConnections(8 * 1024);,"setMaxConnections(8 * 1024);
",0,0,3,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
303,classloader = new FakeWebAppLoader(ServerClassLoaderLoader.class.getClassLoader());,"classloader=new FakeWebAppLoader(ServerClassLoaderLoader.class.getClassLoader());
",0,0,4,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
304,"EnumeratedEntryDictionary fd = new EnumeratedEntryDictionary(""enum feature values"", path, getValueNormalizer());","EnumeratedEntryDictionary fd=new EnumeratedEntryDictionary(""enum feature values"",path,getValueNormalizer());
",0,0,6,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
305,"writer.println(now() + "" AE starts marker. Pid[""+ pid + ""] + tid["" + tid + ""]"");","writer.println(now() + "" AE starts marker. Pid["" + pid+ ""] + tid[""+ tid+ ""]"");
",0,0,8,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
306,"casData.add(new CEVData((CAS) viewIter.next(), getStyleMap()));","casData.add(new CEVData((CAS)viewIter.next(),getStyleMap()));
",0,0,7,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
307,this.resource = Client.create().resource( runner.getUrl() ).path( getPath() );,"this.resource=Client.create().resource(runner.getUrl()).path(getPath());
",0,0,9,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
308,"addSource(clazz.getName()+""(""+source+"")"");","addSource(clazz.getName() + ""("" + source+ "")"");
",0,0,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
309,"add(new BookmarkablePageLink<>(""back"", getBackPage()));","add(new BookmarkablePageLink<>(""back"",getBackPage()));
",0,0,4,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
310,"this.table = newDataTable(""table"", columns, newDataProvider(provider), rowsPerPage);","this.table=newDataTable(""table"",columns,newDataProvider(provider),rowsPerPage);
",0,0,8,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
311,"_linker = SchemaTypeLoaderImpl.build(null, null, _classloader, getMetadataPath());","_linker=SchemaTypeLoaderImpl.build(null,null,_classloader,getMetadataPath());
",0,0,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
312,"if (atLeast(2, 18, 0)) {","if (atLeast(2,18,0)) {
  _releaseno=readShort();
}
",0,0,4,,"SimpleName(MethodInvocation-name, IfStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, IfStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, IfStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, IfStatement-expression, ),
"
313,for (int i = getNumberOfProperties() - 1; i >= 0; --i) {,"for (int i=getNumberOfProperties() - 1; i >= 0; --i) {
  ALL_PROPERTIES[i]=i;
}
",0,0,7,,"PrimitiveType(VariableDeclarationExpression-type, ForStatement-initializers, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationExpression-fragments, ForStatement-initializers, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, VariableDeclarationExpression-fragments, ForStatement-initializers, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, VariableDeclarationExpression-fragments, ForStatement-initializers, ),
SimpleName(InfixExpression-leftOperand, ForStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, ForStatement-expression, ),
SimpleName(PrefixExpression-operand, ForStatement-updaters, ),
"
314,setID(getIDPrefix() + (uri + newWindow).hashCode());,"setID(getIDPrefix() + (uri + newWindow).hashCode());
",0,0,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, MethodInvocation-expression, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-rightOperand, ParenthesizedExpression-expression, MethodInvocation-expression, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
315,spaceBefore = split(RtfText.SPACE_BEFORE) + previousSpace;,"spaceBefore=split(RtfText.SPACE_BEFORE) + previousSpace;
",0,0,4,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-rightOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
316,"this(InternalConfig.get(DockerConfigConfigSource.class.getName() + "".base"", ""/""),","this(InternalConfig.get(DockerConfigConfigSource.class.getName() + "".base"",""/""),Integer.parseInt(InternalConfig.get(DockerConfigConfigSource.class.getName() + "".ordinal"",""100"")),Stream.of(InternalConfig.get(DockerConfigConfigSource.class.getName() + "".prefixes"","""").split("","")).map(String::trim).filter(it -> !it.isEmpty()).toArray(String[]::new));
",1,124,6,,"SimpleName(MethodInvocation-expression, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, ConstructorInvocation-arguments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-leftOperand, MethodInvocation-arguments, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, ConstructorInvocation-arguments, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, ConstructorInvocation-arguments, ),
StringLiteral(MethodInvocation-arguments, ConstructorInvocation-arguments, ),
"
317,"this.ojdbcUrl = getAmbariServerURI(JDK_RESOURCE_LOCATION + ""/"" + configs.getOjdbcJarName());","this.ojdbcUrl=getAmbariServerURI(JDK_RESOURCE_LOCATION + ""/"" + configs.getOjdbcJarName());
",1,86,7,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
318,"typeDefs(getSettingsURL(""typedef.properties"").openStream(), true);","typeDefs(getSettingsURL(""typedef.properties"").openStream(),true);
",1,34,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
319,"this.id = ConfigBean.class.getName() + ""["" + Config.class.getName() + ""]"";","this.id=ConfigBean.class.getName() + ""["" + Config.class.getName()+ ""]"";
",1,11,8,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-rightOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-extendedOperands, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
320,"this.totalMemory = new MemStat(this.getReservedMemory(), this.getOverCommitMemory()).getTotal();","this.totalMemory=new MemStat(this.getReservedMemory(),this.getOverCommitMemory()).getTotal();
",1,22,8,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
ThisExpression(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
ThisExpression(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
321,this.setResolver(target.id.getPipresolver());,"this.setResolver(target.id.getPipresolver());
",1,269,4,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
322,"writer = createFlushWriter(txn, cfs.newSSTableDescriptor(getDirectories().getWriteableLocationAsFile(estimatedSize)), columnsCollector.get(), statsCollector.get());","writer=createFlushWriter(txn,cfs.newSSTableDescriptor(getDirectories().getWriteableLocationAsFile(estimatedSize)),columnsCollector.get(),statsCollector.get());
",1,12,12,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
323,"SpinnerListFormatter formatter = new SpinnerListFormatter(this.getModel(), this","SpinnerListFormatter formatter=new SpinnerListFormatter(this.getModel(),this.getTextField());
",1,8,6,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
ThisExpression(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
ThisExpression(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
324,"setAgentZoneId(Long.parseLong((String) params.get(""zone"")));","setAgentZoneId(Long.parseLong((String)params.get(""zone"")));
",1,14,7,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, CastExpression-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
325,super.setAccept(ContentType.APPLICATION_XML.toContentTypeString());,"super.setAccept(ContentType.APPLICATION_XML.toContentTypeString());
",1,4,3,,"SimpleName(SuperMethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-expression, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
"
326,"fileFactory = new WorkspaceFileFactory(this, (IOManager) getIOManager());","fileFactory=new WorkspaceFileFactory(this,(IOManager)getIOManager());
",1,2,5,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
ThisExpression(ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
327,"throw new WebApplicationException(error(input, e));","throw new WebApplicationException(error(input,e));
",1,5,4,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, ThrowStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, ThrowStatement-expression, ),
"
328,"producer = new Producer<String, String>(createProducerConfig(0));","producer=new Producer<String,String>(createProducerConfig(0));
",1,7,6,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
329,"this(Suppliers.ofInstance(new CloudStackApiToZoneToHypervisors().apply(checkNotNull(client, ""client""))));","this(Suppliers.ofInstance(new CloudStackApiToZoneToHypervisors().apply(checkNotNull(client,""client""))));
",1,10,7,,"SimpleName(MethodInvocation-expression, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, ConstructorInvocation-arguments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ConstructorInvocation-arguments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ConstructorInvocation-arguments, ),
"
330,"if (!_resource.configure(getResourceName(), params)) {","if (!_resource.configure(getResourceName(),params)) {
  throw new ConfigurationException(""Unable to configure "" + _resource.getName());
}
",1,3,4,,"SimpleName(MethodInvocation-expression, PrefixExpression-operand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, PrefixExpression-operand, IfStatement-expression, ),
SimpleName(MethodInvocation-arguments, PrefixExpression-operand, IfStatement-expression, ),
"
331,this.setBatchKernel(manager.service(BatchKernelService.class));,"this.setBatchKernel(manager.service(BatchKernelService.class));
",1,2,5,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
332,"put(stringify(keyValuePairs[i]), keyValuePairs[i+1]);","put(stringify(keyValuePairs[i]),keyValuePairs[i + 1]);
",1,2,7,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ArrayAccess-index, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, ArrayAccess-index, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
333,"content = _createSpine(protocol, getStyle(), getIndirection(), null);","content=_createSpine(protocol,getStyle(),getIndirection(),null);
",1,1,6,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
334,"setExecutor(createDefaultExecutor(""Axis2 Task"", Thread.NORM_PRIORITY, true));","setExecutor(createDefaultExecutor(""Axis2 Task"",Thread.NORM_PRIORITY,true));
",1,1,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
335,"this.installRoot = new File(System.getProperty(""karaf.base""), System.getProperty(""jbi.cache"", ""data/jbi/"") + getName() + ""/install"");","this.installRoot=new File(System.getProperty(""karaf.base""),System.getProperty(""jbi.cache"",""data/jbi/"") + getName() + ""/install"");
",1,4,12,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
336,for (Task<?> t: getChildren()) {,"for (Task<?> t : getChildren()) {
  ((TaskInternal<?>)t).markQueued();
}
",1,8,4,,"SimpleName(SimpleType-name, ParameterizedType-type, SingleVariableDeclaration-type, EnhancedForStatement-parameter, ),
WildcardType(ParameterizedType-typeArguments, SingleVariableDeclaration-type, EnhancedForStatement-parameter, ),
SimpleName(SingleVariableDeclaration-name, EnhancedForStatement-parameter, ),
SimpleName(MethodInvocation-name, EnhancedForStatement-expression, ),
"
337,if (getSshFlags()!=null && !getSshFlags().isEmpty()),"if (getSshFlags() != null && !getSshFlags().isEmpty()) machine.configure(getSshFlags());
",1,2,4,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, PrefixExpression-operand, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, InfixExpression-rightOperand, IfStatement-expression, ),
"
338,"checkArgument(hasNext(), ""input ""+input+"" does not match expected pattern ""+splitPerfData.pattern());","checkArgument(hasNext(),""input "" + input + "" does not match expected pattern ""+ splitPerfData.pattern());
",1,2,7,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
339,this.quoteChars = quoteChars==null ? DEFAULT_QUOTE_CHARS() : quoteChars;,"this.quoteChars=quoteChars == null ? DEFAULT_QUOTE_CHARS() : quoteChars;
",1,3,6,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
340,"this.id = new StringBuffer(this.getMcastAddress()).append(""["").append(this.getMcastPort())","this.id=new StringBuffer(this.getMcastAddress()).append(""["").append(this.getMcastPort()).append(""]"").toString();
",1,13,10,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
ThisExpression(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
341,if (isCompactTable() && Flag.isDense(this.flags) && hasEmptyCompactValue()),"if (isCompactTable() && Flag.isDense(this.flags) && hasEmptyCompactValue()) {
  hiddenColumns=Collections.singleton(compactValueColumn);
}
 else if (isCompactTable() && !Flag.isDense(this.flags)) {
  hiddenColumns=Sets.newHashSetWithExpectedSize(clusteringColumns.size() + 1);
  hiddenColumns.add(compactValueColumn);
  hiddenColumns.addAll(clusteringColumns);
}
 else {
  hiddenColumns=Collections.emptySet();
}
",1,2,6,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, IfStatement-expression, ),
ThisExpression(FieldAccess-expression, MethodInvocation-arguments, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(FieldAccess-name, MethodInvocation-arguments, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, IfStatement-expression, ),
"
342,"setAgentHostname(validateParam(""Hostname"", (String) params.get(""host"")));","setAgentHostname(validateParam(""Hostname"",(String)params.get(""host"")));
",1,1,7,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, CastExpression-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
343,this.encoding = getNormalizedEncoding(((OutputStreamWriter) writer).getEncoding());,"this.encoding=getNormalizedEncoding(((OutputStreamWriter)writer).getEncoding());
",1,3,6,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
344,"WebBeansConfigurationException e = new WebBeansConfigurationException(""Either a createCallback or a produceCallback must be set "" + toString());","WebBeansConfigurationException e=new WebBeansConfigurationException(""Either a createCallback or a produceCallback must be set "" + toString());
",1,2,5,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
StringLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
345,"addLocalVariable(argNames[i], argTypes[i], start, end);","addLocalVariable(argNames[i],argTypes[i],start,end);
",1,1,7,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
346,((SubroutineImpl) (actual==all[0]?getTopLevel():getSubroutine(actual))).addInstruction(element);,"((SubroutineImpl)(actual == all[0] ? getTopLevel() : getSubroutine(actual))).addInstruction(element);
",1,6,9,,"SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, ParenthesizedExpression-expression, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, InfixExpression-rightOperand, ConditionalExpression-expression, ParenthesizedExpression-expression, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
NumberLiteral(ArrayAccess-index, InfixExpression-rightOperand, ConditionalExpression-expression, ParenthesizedExpression-expression, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, ParenthesizedExpression-expression, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, ParenthesizedExpression-expression, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ConditionalExpression-elseExpression, ParenthesizedExpression-expression, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
347,"setInterpolationControl(true, -1);","setInterpolationControl(true,-1);
",1,4,3,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(PrefixExpression-operand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
348,"saslACL.add(new ACL(Perms.ALL, new Id(""sasl"", getServicePrincipal(conf,","saslACL.add(new ACL(Perms.ALL,new Id(""sasl"",getServicePrincipal(conf,ServerConfig.PRINCIPAL))));
",1,10,8,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
349,final String pathEncoded = ((GenericURLFileName) name).getPathQueryEncoded(getUrlCharset());,"final String pathEncoded=((GenericURLFileName)name).getPathQueryEncoded(getUrlCharset());
",1,1,7,,"Modifier(VariableDeclarationStatement-modifiers, ),
SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
350,&& (parseIntValue(localFreq) > parseIntValue(frequency,"if ((frequency != null && localFreq != null) && (frequency.getFrequencyMention().compareTo("""") != 0) && (localFreq.compareTo("""") != 0)&& (parseIntValue(localFreq) > parseIntValue(frequency.getFrequencyMention()) && findMaxValue == true)) {
  setFrequencyElement(localFreq,focusToken.getBegin(),focusToken.getEnd());
}
 else {
  setFrequencyElement(localFreq,focusToken.getBegin(),focusToken.getEnd());
}
",1,1,4,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-leftOperand, ParenthesizedExpression-expression, ),
SimpleName(MethodInvocation-arguments, InfixExpression-leftOperand, InfixExpression-leftOperand, ParenthesizedExpression-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, InfixExpression-leftOperand, ParenthesizedExpression-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-rightOperand, InfixExpression-leftOperand, ParenthesizedExpression-expression, ),
"
351,"this.metrics = FSQueueMetrics.forQueue(getName(), parent, true, scheduler.getConf());","this.metrics=FSQueueMetrics.forQueue(getName(),parent,true,scheduler.getConf());
",1,3,9,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
352,"Cid = this.randomInt(0, 255);","Cid=this.randomInt(0,255);
",1,1,5,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
ThisExpression(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
353,"this.crud = new CachedCrudAssist<TableACL>(getStore(), ""/table_acl"", """", TableACL.class, tableACLMap, true) {","this.crud=new CachedCrudAssist<TableACL>(getStore(),""/table_acl"","""",TableACL.class,tableACLMap,true){
  @Override protected TableACL initEntityAfterReload(  TableACL acl,  String resourceName){
    acl.init(resourceName);
    return acl;
  }
}
;
",1,2,10,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
BooleanLiteral(ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
354,"testString.equals(StringUtils.fromUtf8(decrypt(encrypt(StringUtils.toUtf8(testString))))),","Preconditions.checkState(testString.equals(StringUtils.fromUtf8(decrypt(encrypt(StringUtils.toUtf8(testString))))),""decrypt(encrypt(testString)) failed"");
",1,1,9,,"SimpleName(MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ),
"
355,"Mediator.getControlPoint().enableMenus(true,getLogLevel(),getCyberDebug());","Mediator.getControlPoint().enableMenus(true,getLogLevel(),getCyberDebug());
",1,1,6,,"SimpleName(MethodInvocation-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
356,super.setId(TYPE + ++instanceCount);,"super.setId(TYPE + ++instanceCount);
",1,1,3,,"SimpleName(SuperMethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(PrefixExpression-operand, InfixExpression-rightOperand, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
"
357,parseArguments(args != null ? args : new String[0]);,"parseArguments(args != null ? args : new String[0]);
",1,5,7,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ArrayCreation-dimensions, ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
358,isCompactionPossible = isOfflineCompacting() || (!isOffline(),"isCompactionPossible=isOfflineCompacting() || (!isOffline() && (getAutoCompact() || getAllowForceCompaction() || ENABLE_NOTIFY_TO_ROLL));
",1,1,3,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
359,&& (getAutoCompact() || getAllowForceCompaction() || ENABLE_NOTIFY_TO_ROLL));,"isCompactionPossible=isOfflineCompacting() || (!isOffline() && (getAutoCompact() || getAllowForceCompaction() || ENABLE_NOTIFY_TO_ROLL));
",1,1,3,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ParenthesizedExpression-expression, ),
SimpleName(InfixExpression-extendedOperands, ParenthesizedExpression-expression, ),
"
360,"this( mockManager, groupId, artifactId, version, type, null, isSnapshot, null, null );","this(mockManager,groupId,artifactId,version,type,null,isSnapshot,null,null);
",1,4,9,,"SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
NullLiteral(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
NullLiteral(ConstructorInvocation-arguments, ),
NullLiteral(ConstructorInvocation-arguments, ),
"
361,assert ddBean.getChildBean(namePath)[0].getText().equals(getRefName());,"assert ddBean.getChildBean(namePath)[0].getText().equals(getRefName());
",1,1,7,,"SimpleName(MethodInvocation-expression, ArrayAccess-array, MethodInvocation-expression, MethodInvocation-expression, AssertStatement-expression, ),
SimpleName(MethodInvocation-name, ArrayAccess-array, MethodInvocation-expression, MethodInvocation-expression, AssertStatement-expression, ),
SimpleName(MethodInvocation-arguments, ArrayAccess-array, MethodInvocation-expression, MethodInvocation-expression, AssertStatement-expression, ),
NumberLiteral(ArrayAccess-index, MethodInvocation-expression, MethodInvocation-expression, AssertStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, AssertStatement-expression, ),
SimpleName(MethodInvocation-name, AssertStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, AssertStatement-expression, ),
"
362,"Integer.parseInt(InternalConfig.get(DockerConfigConfigSource.class.getName() + "".ordinal"", ""100"")),","this(InternalConfig.get(DockerConfigConfigSource.class.getName() + "".base"",""/""),Integer.parseInt(InternalConfig.get(DockerConfigConfigSource.class.getName() + "".ordinal"",""100"")),Stream.of(InternalConfig.get(DockerConfigConfigSource.class.getName() + "".prefixes"","""").split("","")).map(String::trim).filter(it -> !it.isEmpty()).toArray(String[]::new));
",1,1,8,,"SimpleName(MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-leftOperand, MethodInvocation-arguments, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, MethodInvocation-arguments, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, MethodInvocation-arguments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ),
"
363,"final String abfsUrl = this.getFileSystemName() + ""@"" + this.getAccountName();","final String abfsUrl=this.getFileSystemName() + ""@"" + this.getAccountName();
",1,3,8,,"Modifier(VariableDeclarationStatement-modifiers, ),
SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
ThisExpression(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
ThisExpression(MethodInvocation-expression, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
364,super(NodeManager.class.getName());,"super(NodeManager.class.getName());
",1,1,2,,"SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, SuperConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, SuperConstructorInvocation-arguments, ),
"
365,"updateHeartbeat(StorageReport.EMPTY_ARRAY, 0L, 0L, 0, 0);","updateHeartbeat(StorageReport.EMPTY_ARRAY,0L,0L,0,0);
",1,1,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
366,QueueState state = cs.getConfiguration().getState(getQueuePath());,"QueueState state=cs.getConfiguration().getState(getQueuePath());
",1,1,6,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
367,"map = (Map<Object, Object>) ((HashMap) attrib.map).clone();","map=(Map<Object,Object>)((HashMap)attrib.map).clone();
",1,1,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, CastExpression-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
368,if ((mEntry = getNextJarEntry()) == null) {,"if ((mEntry=getNextJarEntry()) == null) {
  return;
}
",1,1,3,,"SimpleName(Assignment-leftHandSide, ParenthesizedExpression-expression, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ParenthesizedExpression-expression, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, IfStatement-expression, ),
"
369,"entries = (HashMap<String, Attributes>) ((HashMap<String, Attributes>) man","entries=(HashMap<String,Attributes>)((HashMap<String,Attributes>)man.getEntries()).clone();
",1,1,8,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, CastExpression-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
370,((JointSet) innerSet).setNext(FSet.posFSet);,"((JointSet)innerSet).setNext(FSet.posFSet);
",1,1,4,,"SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
371,if (!isValid(2)),"if (!isValid(2)) throw new SQLException(""Client is invalid. Probably cache name is wrong."");
",1,1,2,,"SimpleName(MethodInvocation-name, PrefixExpression-operand, IfStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, PrefixExpression-operand, IfStatement-expression, ),
"
372,String upgradeListFile = getSentryStoreScriptDir() + File.separator,"String upgradeListFile=getSentryStoreScriptDir() + File.separator + VERSION_UPGRADE_LIST+ "".""+ dbType;
",1,1,4,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
QualifiedName(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
373,this.textBytes = new byte[size()][];,"this.textBytes=new byte[size()][];
",1,1,6,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ArrayCreation-dimensions, Assignment-rightHandSide, ExpressionStatement-expression, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
374,"config.put(""a.b.c.key3"", PropertyValue.createValue(""a.b.c.key3"",""keys current a.b.c.key3"").setMeta(""source"", getName()));","config.put(""a.b.c.key3"",PropertyValue.createValue(""a.b.c.key3"",""keys current a.b.c.key3"").setMeta(""source"",getName()));
",1,1,10,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
375,setUserid(jur.getUserIdentity().get(0).getLocalUserId());,"setUserid(jur.getUserIdentity().get(0).getLocalUserId());
",1,1,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
376,"this.logIdentifier =  this.getVertexId() + "" ["" + this.getName() + ""]"";","this.logIdentifier=this.getVertexId() + "" ["" + this.getName()+ ""]"";
",1,2,8,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
ThisExpression(MethodInvocation-expression, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-rightOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
ThisExpression(MethodInvocation-expression, InfixExpression-extendedOperands, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
377,"setParts(getDomain(getClass()), null, null);","setParts(getDomain(getClass()),null,null);
",1,1,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NullLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
NullLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
378,"ThrownStore ts = thrownStore = createThrownStore(r, cp, parent, bf);","ThrownStore ts=thrownStore=createThrownStore(r,cp,parent,bf);
",1,4,8,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(Assignment-leftHandSide, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
379,_value = (getCollectionModel() == null || isEmpty()) ? null : nextItem();,"_value=(getCollectionModel() == null || isEmpty()) ? null : nextItem();
",1,2,6,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-leftOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
380,this.importPolicy = createPolicy(feature.getScoping().getImports());,"this.importPolicy=createPolicy(feature.getScoping().getImports());
",1,1,6,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
381,assert (getAst() != null);,"assert (getAst() != null);
",1,1,2,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, AssertStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, AssertStatement-expression, ),
"
382,"this.addChild(this.getChildCount(),createNewNode(child));","this.addChild(this.getChildCount(),createNewNode(child));
",1,1,6,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
383,model = (ModelStub) super.getModel();,"model=(ModelStub)super.getModel();
",1,1,3,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SuperMethodInvocation-name, CastExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
384,build.setDirectory( super.getBasedir() + targetDirectory );,"build.setDirectory(super.getBasedir() + targetDirectory);
",1,1,4,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SuperMethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
385,representationTypes[i] = String.class.getName();,"representationTypes[i]=String.class.getName();
",1,1,4,,"SimpleName(ArrayAccess-array, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
386,this.color = color == null ? super.getColor() : color;,"this.color=color == null ? super.getColor() : color;
",1,1,6,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SuperMethodInvocation-name, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
387,if (getMaxIndex() >= 0) i = findLastIndex();,"if (getMaxIndex() >= 0) i=findLastIndex();
",1,1,4,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, IfStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, IfStatement-thenStatement, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, IfStatement-thenStatement, ),
"
388,"name = getOptionalKeyAsType(map, NAME_KEY, String.class, getWrapperName(), """");","name=getOptionalKeyAsType(map,NAME_KEY,String.class,getWrapperName(),"""");
",1,1,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
389,if (getHeader(Response.CONTENT_LENGTH) != null),"if (getHeader(Response.CONTENT_LENGTH) != null) fetchTrace.append(""; Content-Length: "" + getHeader(Response.CONTENT_LENGTH));
",1,1,3,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, IfStatement-expression, ),
QualifiedName(MethodInvocation-arguments, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, IfStatement-expression, ),
"
390,futures.add(ExecutionPool.GLOBAL_BATCH.submit(createHelperCallable(groupName)));,"futures.add(ExecutionPool.GLOBAL_BATCH.submit(createHelperCallable(groupName)));
",1,1,6,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
391,"openejbUri = new URI(""ejbd"", null, ""localhost"", 4201, null, null, null).toString();","openejbUri=new URI(""ejbd"",null,""localhost"",4201,null,null,null).toString();
",1,1,10,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
392,setHomeDirectory(homeFolder == null ? USER_HOME.toString() : homeFolder);,"setHomeDirectory(homeFolder == null ? USER_HOME.toString() : homeFolder);
",1,1,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
393,if (isRichText() && (runCount > 0)) {,"if (isRichText() && (runCount > 0)) {
  field_4_format_runs=new ArrayList<>(runCount);
  for (int i=0; i < runCount; i++) {
    field_4_format_runs.add(new FormatRun(in));
  }
}
",1,1,3,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, IfStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, IfStatement-expression, ),
"
394,"this(null, file, readOnly, true);","this(null,file,readOnly,true);
",1,1,4,,"NullLiteral(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
SimpleName(ConstructorInvocation-arguments, ),
BooleanLiteral(ConstructorInvocation-arguments, ),
"
395,"int configuredPrefetch = prefetchPolicy.getConfiguredPrefetch(session, destination, isDurableSubscription(), isBrowser());","int configuredPrefetch=prefetchPolicy.getConfiguredPrefetch(session,destination,isDurableSubscription(),isBrowser());
",1,1,8,,"PrimitiveType(VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
396,"this.putSystemProperties(SystemPropKey.TAG, tag);","this.putSystemProperties(SystemPropKey.TAG,tag);
",1,1,4,,"ThisExpression(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
397,"setPreference(PREF_CONNECT_RETRY_ATTEMPTS, -1);","setPreference(PREF_CONNECT_RETRY_ATTEMPTS,-1);
",1,1,3,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(PrefixExpression-operand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
398,int numberOfTransformElems = this.getLength();,"int numberOfTransformElems=this.getLength();
",1,1,4,,"PrimitiveType(VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
ThisExpression(MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
399,"getElement().setAttributeNS(Constants.NamespaceSpecNS, ""xmlns:"" + prefix, getBaseNamespace());","getElement().setAttributeNS(Constants.NamespaceSpecNS,""xmlns:"" + prefix,getBaseNamespace());
",1,3,6,,"SimpleName(MethodInvocation-name, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
400,"this(new Builder().withDaemonConf(Config.TOPOLOGY_ENABLE_MESSAGE_TIMEOUTS, true));","this(new Builder().withDaemonConf(Config.TOPOLOGY_ENABLE_MESSAGE_TIMEOUTS,true));
",1,1,4,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, ConstructorInvocation-arguments, ),
SimpleName(MethodInvocation-name, ConstructorInvocation-arguments, ),
QualifiedName(MethodInvocation-arguments, ConstructorInvocation-arguments, ),
BooleanLiteral(MethodInvocation-arguments, ConstructorInvocation-arguments, ),
"
401,getLIContainerId(pageRef.getPage().getClass().getSimpleName().toLowerCase()))) {,"if (dashboardLIContainer.getId().equals(getLIContainerId(pageRef.getPage().getClass().getSimpleName().toLowerCase()))) {
  containingLI=dashboardLIContainer;
}
",1,1,6,,"SimpleName(MethodInvocation-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ),
"
402,"int[] rSummary = deriveSummaryStatistics(rNnz, getCols());","int[] rSummary=deriveSummaryStatistics(rNnz,getCols());
",1,1,6,,"PrimitiveType(ArrayType-elementType, VariableDeclarationStatement-type, ),
Dimension(ArrayType-dimensions, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
403,if (AfterEvent.class.equals(type)) {,"if (AfterEvent.class.equals(type)) {
  final Class parameterClass=getParameterClass(method);
  this.after.put(parameterClass,new AfterInvocation(method,observer));
}
 else if (BeforeEvent.class.equals(type)) {
  final Class parameterClass=getParameterClass(method);
  this.before.put(parameterClass,new BeforeInvocation(method,observer));
}
 else {
  validate(method,type);
  this.methods.put(type,new MethodInvocation(method,observer));
}
",1,1,3,,"SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, IfStatement-expression, ),
SimpleName(MethodInvocation-name, IfStatement-expression, ),
SimpleName(MethodInvocation-arguments, IfStatement-expression, ),
"
404,"getAttrFormDefault(), getElementFormDefault(), schemaLocMap, this.classLoader, null);","schemaBuilder=new SchemaBuilder(xmlSchemaCollection,schemaMap,targetNamespacePrefixMap,typeTable,getAttrFormDefault(),getElementFormDefault(),schemaLocMap,this.classLoader,null);
",1,1,6,,"SimpleName(MethodInvocation-name, ),
SimpleName(MethodInvocation-name, ),
SimpleName(),
ThisExpression(FieldAccess-expression, ),
SimpleName(FieldAccess-name, ),
NullLiteral(),
"
405,"new Object[] { getComponentName(), key, endpoint.getSerializer() });","UIMAFramework.getLogger(CLASS_NAME).logrb(Level.INFO,CLASS_NAME.getName(),""C'tor"",UIMAEE_Constants.JMS_LOG_RESOURCE_BUNDLE,""UIMAEE_show_remote_delegate_serialization_INFO"",new Object[]{getComponentName(),key,endpoint.getSerializer()});
",1,1,6,,"SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayCreation-initializer, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, ),
"
406,this.rects = resolveURL(REFERENCE_DIR+rects);,"this.rects=resolveURL(REFERENCE_DIR + rects);
",1,1,5,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-rightOperand, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
407,"init(conf, fs.create(name, true, bufferSize, replication,","init(conf,fs.create(name,true,bufferSize,replication,blockSize,progress),codec,metadata);
",2,21,8,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
408,int userLimit = cs.getConfiguration().getUserLimit(getQueuePath());,"int userLimit=cs.getConfiguration().getUserLimit(getQueuePath());
",2,32,6,,"PrimitiveType(VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
409,entitiesWithExtInfo = ((HookNotification.EntityCreateRequestV2) message).getEntities();,"entitiesWithExtInfo=((HookNotification.EntityCreateRequestV2)message).getEntities();
",2,3,4,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
QualifiedName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
410,"this.baseAnnouncementsPath = getPath(Arrays.asList(indexerZkConfig.getAnnouncementsPath(), worker.getHost()));","this.baseAnnouncementsPath=getPath(Arrays.asList(indexerZkConfig.getAnnouncementsPath(),worker.getHost()));
",2,12,9,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
411,this.p = p == null ? null : p.swaps(getPojoSwaps()).dictionary((Object[])getDictionary()).add(getProperties()).build();,"this.p=p == null ? null : p.swaps(getPojoSwaps()).dictionary((Object[])getDictionary()).add(getProperties()).build();
",2,5,15,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ArrayType-elementType, CastExpression-type, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
Dimension(ArrayType-dimensions, CastExpression-type, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
412,setException(ex == null ? null : ex.toString());,"setException(ex == null ? null : ex.toString());
",2,3,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NullLiteral(ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
413,"pan[i] = new SectionPanel(this, nodes[i], getFilterTitle(filters[i]),filters[i]);","pan[i]=new SectionPanel(this,nodes[i],getFilterTitle(filters[i]),filters[i]);
",2,3,11,,"SimpleName(ArrayAccess-array, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
ThisExpression(ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, MethodInvocation-arguments, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, MethodInvocation-arguments, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
414,supportsTX = !isSecret() && !isUsedForPartitionedRegionAdmin() && !isUsedForMetaRegion(),"supportsTX=!isSecret() && !isUsedForPartitionedRegionAdmin() && !isUsedForMetaRegion() || isMetaRegionWithTransactions();
",2,2,4,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, InfixExpression-leftOperand, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, InfixExpression-rightOperand, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, InfixExpression-extendedOperands, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
415,(float)cs.getConfiguration().getCapacity(getQueuePath()) / 100;,"float capacity=(float)cs.getConfiguration().getCapacity(getQueuePath()) / 100;
",2,2,6,,"PrimitiveType(CastExpression-type, InfixExpression-leftOperand, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, CastExpression-expression, InfixExpression-leftOperand, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, CastExpression-expression, InfixExpression-leftOperand, ),
SimpleName(MethodInvocation-name, CastExpression-expression, InfixExpression-leftOperand, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, CastExpression-expression, InfixExpression-leftOperand, ),
NumberLiteral(InfixExpression-rightOperand, ),
"
416,|| mvccCoordinatorVersion() == crdVer && mvccCounter() == mvccCntr && mvccOperationCounter() == mvccOpCntr :,"assert rowData == RowData.LINK_ONLY || mvccCoordinatorVersion() == crdVer && mvccCounter() == mvccCntr && mvccOperationCounter() == mvccOpCntr : ""mvccVer="" + new MvccVersionImpl(crdVer,mvccCntr,mvccOpCntr) + "", dataMvccVer=""+ new MvccVersionImpl(mvccCoordinatorVersion(),mvccCounter(),mvccOperationCounter());
",2,2,6,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, ),
SimpleName(InfixExpression-rightOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-rightOperand, InfixExpression-leftOperand, ),
SimpleName(InfixExpression-rightOperand, InfixExpression-rightOperand, InfixExpression-leftOperand, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-rightOperand, ),
SimpleName(InfixExpression-rightOperand, InfixExpression-rightOperand, ),
"
417,hasOnlyPropertyDeclarations = ! hasClassDeclarations() && ! hasDomainDeclarations() && ! hasRangeDeclarations();,"hasOnlyPropertyDeclarations=!hasClassDeclarations() && !hasDomainDeclarations() && !hasRangeDeclarations();
",2,2,4,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, InfixExpression-rightOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, InfixExpression-extendedOperands, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
418,"basedir = new File( super.getBasedir() + ""/src/test/resources/unit/"" + projectName );","basedir=new File(super.getBasedir() + ""/src/test/resources/unit/"" + projectName);
",2,2,5,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SuperMethodInvocation-name, InfixExpression-leftOperand, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
419,"artifact = new DefaultArtifact(getGroupId(), getArtifactId(), getVersion(), ""compile"", ""jar"", """", null);","artifact=new DefaultArtifact(getGroupId(),getArtifactId(),getVersion(),""compile"",""jar"","""",null);
",2,2,9,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
420,"model = pomReader.read( new FileReader( new File( getBasedir(), ""pom-test-plugin-config.xml"" ) ) );","model=pomReader.read(new FileReader(new File(getBasedir(),""pom-test-plugin-config.xml"")));
",2,2,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
421,setType( nullify( tokens[4] ) );,"setType(nullify(tokens[4]));
",2,2,4,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ArrayAccess-index, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
422,XWPFTableRow tabRow = (getRow(i) == null) ? createRow() : getRow(i);,"XWPFTableRow tabRow=(getRow(i) == null) ? createRow() : getRow(i);
",2,2,8,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, InfixExpression-leftOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NullLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
423,this.queue = new LinkedBlockingQueue<>(this.getQueueLength());,"this.queue=new LinkedBlockingQueue<>(this.getQueueLength());
",2,2,5,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
ThisExpression(MethodInvocation-expression, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
424,case VERTICAL: if (c instanceof DefaultResolution) c = ((DefaultResolution) object).getVertical(); break;,"case VERTICAL:
",2,2,1,,"SimpleName(SwitchCase-expression, ),
"
425,"parseTLD(ctxt, location[0], in, jarFileUrl);","parseTLD(ctxt,location[0],in,jarFileUrl);
",2,2,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ArrayAccess-index, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
426,if (getLeafFrame() != null && this.getCmp() != null) {,"if (getLeafFrame() != null && this.getCmp() != null) {
  getLeafFrame().setMultiComparator(getCmp());
}
",3,24,5,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
ThisExpression(MethodInvocation-expression, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-rightOperand, IfStatement-expression, ),
"
427,"this.comparator = ((SortedMap<K, V>) normalMap).comparator();","this.comparator=((SortedMap<K,V>)normalMap).comparator();
",3,18,7,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
428,"assert this.equals(checkWeGetThis) : this+"" configure method does not return itself; returns ""+checkWeGetThis+"" instead of ""+this;","assert this.equals(checkWeGetThis) : this + "" configure method does not return itself; returns "" + checkWeGetThis+ "" instead of ""+ this;
",3,3,8,,"ThisExpression(MethodInvocation-expression, AssertStatement-expression, ),
SimpleName(MethodInvocation-name, AssertStatement-expression, ),
SimpleName(MethodInvocation-arguments, AssertStatement-expression, ),
ThisExpression(InfixExpression-leftOperand, AssertStatement-message, ),
StringLiteral(InfixExpression-rightOperand, AssertStatement-message, ),
SimpleName(InfixExpression-extendedOperands, AssertStatement-message, ),
StringLiteral(InfixExpression-extendedOperands, AssertStatement-message, ),
ThisExpression(InfixExpression-extendedOperands, AssertStatement-message, ),
"
429,"set(REST_callLoggerDefault, pcp.get(REST_callLoggerDefault).orElse(null));","set(REST_callLoggerDefault,pcp.get(REST_callLoggerDefault).orElse(null));
",3,4,7,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
NullLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
430,isEar = getInternalParent() != null && !getInternalParent().equals(containerClassLoader) && defaultEarBehavior();,"isEar=getInternalParent() != null && !getInternalParent().equals(containerClassLoader) && defaultEarBehavior();
",3,4,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, PrefixExpression-operand, InfixExpression-rightOperand, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, InfixExpression-rightOperand, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, PrefixExpression-operand, InfixExpression-rightOperand, InfixExpression-leftOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
431,"transformer = getTransformer( getClass().getResource( ""blueprint.xsl"" ) );","transformer=getTransformer(getClass().getResource(""blueprint.xsl""));
",3,3,5,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
432,builder.getSubjectBuilder().setUri(((ProtoURI) subject).getMessage()).build();,"builder.getSubjectBuilder().setUri(((ProtoURI)subject).getMessage()).build();
",3,6,7,,"SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
"
433,"blinkTimer = createTimer(false, 0);","blinkTimer=createTimer(false,0);
",3,3,4,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
434,PreparedStatement statement = connection.prepareStatement(getCreateJobStateTableTemplate())) {,"try (Connection connection=this.dataSource.getConnection();PreparedStatement statement=connection.prepareStatement(getCreateJobStateTableTemplate())){
  statement.executeUpdate();
}
 catch (SQLException e) {
  throw new IOException(e);
}
",3,3,5,,"SimpleName(SimpleType-name, VariableDeclarationExpression-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationExpression-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationExpression-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationExpression-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationExpression-fragments, ),
"
435,setCreateDate(jur.getRecordIdentity().getCreateTime(),"setCreateDate(jur.getRecordIdentity().getCreateTime().toGregorianCalendar().getTime());
",3,3,4,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
436,selected = getSize() == 0 ? null :getElementAt(0);,"selected=getSize() == 0 ? null : getElementAt(0);
",3,3,6,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
437,if(_parent instanceof AbstractConfiguredObject && ((AbstractConfiguredObject)_parent).getAccessControl() != null),"if (_parent instanceof AbstractConfiguredObject && ((AbstractConfiguredObject)_parent).getAccessControl() != null) {
  _parentAccessControl=((AbstractConfiguredObject)_parent).getAccessControl();
}
 else if (_parent instanceof AccessControlSource && ((AccessControlSource)_parent).getAccessControl() != null) {
  _parentAccessControl=((AccessControlSource)_parent).getAccessControl();
}
",3,4,6,,"SimpleName(InstanceofExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(SimpleType-name, InstanceofExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-rightOperand, IfStatement-expression, ),
"
438,favoredNodeIds = makeHostToNodeIds((List<String>) topoConf.get(Config.TOPOLOGY_SCHEDULER_FAVORED_NODES));,"favoredNodeIds=makeHostToNodeIds((List<String>)topoConf.get(Config.TOPOLOGY_SCHEDULER_FAVORED_NODES));
",3,4,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-type, CastExpression-type, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, CastExpression-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
439,if (reference.getInterfaceContract() != null && !isAsIs()) {,"if (reference.getInterfaceContract() != null && !isAsIs()) {
  WebServiceBindingFactory wsFactory=registry.getExtensionPoint(WebServiceBindingFactory.class);
  WebServiceBinding wsBinding=wsFactory.createWebServiceBinding();
  BindingWSDLGenerator.generateWSDL(component,reference,wsBinding,registry,null);
  interfaceContract=wsBinding.getBindingInterfaceContract();
  interfaceContract.getInterface().resetDataBinding(OMElement.class.getName());
  List<Operation> wsdlOpList=interfaceContract.getInterface().getOperations();
  for (  Operation op : opList) {
    String name=op.getName();
    Operation matchingWsdlOp=null;
    for (    Operation wsdlOp : wsdlOpList) {
      if (name.equals(wsdlOp.getName())) {
        matchingWsdlOp=wsdlOp;
        break;
      }
    }
    if (matchingWsdlOp.isInputWrapperStyle()) {
      if (op.getInputType().getLogical().size() == 1) {
        this.inputWrapperMap.put(name,true);
      }
 else {
        this.inputWrapperMap.put(name,false);
      }
    }
 else {
      this.inputWrapperMap.put(name,false);
    }
    if (matchingWsdlOp.isOutputWrapperStyle()) {
      ElementInfo ei=op.getOutputWrapper().getWrapperElement();
      String namespace=ei.getQName().getNamespaceURI();
      String opName=ei.getQName().getLocalPart();
      OMNamespace ns=factory.createOMNamespace(namespace,""ns2"");
      OMElement wrapper=factory.createOMElement(opName,ns);
      this.outputWrapperMap.put(name,wrapper);
    }
  }
}
 else {
  interfaceContract=reference.getReference().getInterfaceContract();
}
",3,3,4,,"SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-leftOperand, IfStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, InfixExpression-rightOperand, IfStatement-expression, ),
"
440,if (isTopLevelComponent() && this instanceof AggregateAnalysisEngineController) {,"if (isTopLevelComponent() && this instanceof AggregateAnalysisEngineController) {
  if (UIMAFramework.getLogger(CLASS_NAME).isLoggable(Level.INFO)) {
    UIMAFramework.getLogger(CLASS_NAME).logrb(Level.INFO,CLASS_NAME.getName(),""C'tor"",UIMAEE_Constants.JMS_LOG_RESOURCE_BUNDLE,""UIMAEE_using_vm_transport_INFO"",new Object[]{getComponentName()});
  }
}
",3,3,3,,"SimpleName(MethodInvocation-name, InfixExpression-leftOperand, IfStatement-expression, ),
ThisExpression(InstanceofExpression-leftOperand, InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(SimpleType-name, InstanceofExpression-rightOperand, InfixExpression-rightOperand, IfStatement-expression, ),
"
441,"field.set(this, validateInt(field));","field.set(this,validateInt(field));
",5,5,5,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
ThisExpression(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
442,"File pom = new File( getBasedir(), ""plugin-config2.xml"" );","File pom=new File(getBasedir(),""plugin-config2.xml"");
",5,5,5,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
443,"build.setDirectory( super.getBasedir() + ""/target/test/unit/"" + model.getArtifactId() + ""/target"" );","build.setDirectory(super.getBasedir() + ""/target/test/unit/"" + model.getArtifactId()+ ""/target"");
",5,90,7,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SuperMethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
444,setSummary(value.getSummary() != null ? new AtomText(value.getSummary()) : null);,"setSummary(value.getSummary() != null ? new AtomText(value.getSummary()) : null);
",6,15,8,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NullLiteral(ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
445,"super.addCompileSourceRoot( getBasedir() + ""/src/test/resources/unit/basic-eba-test/src/main/java"" );","super.addCompileSourceRoot(getBasedir() + ""/src/test/resources/unit/basic-eba-test/src/main/java"");
",7,7,3,,"SimpleName(SuperMethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-rightOperand, SuperMethodInvocation-arguments, ExpressionStatement-expression, ),
"
446,"this.startCounter = sp.getCounterStats(getMetricName(START), StatsOptions.METRICS_ONLY);","this.startCounter=sp.getCounterStats(getMetricName(START),StatsOptions.METRICS_ONLY);
",7,12,7,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
447,setColumnModel(columnModel != null ? columnModel : createDefaultColumnModel());,"setColumnModel(columnModel != null ? columnModel : createDefaultColumnModel());
",7,7,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
448,"LittleEndian.putShort(_header, 2, (short)getRecordType());","LittleEndian.putShort(_header,2,(short)getRecordType());
",7,7,6,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
PrimitiveType(CastExpression-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
449,"getContentPane().add(createContentPanel(), BorderLayout.CENTER);","getContentPane().add(createContentPanel(),BorderLayout.CENTER);
",7,7,4,,"SimpleName(MethodInvocation-name, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
450,protected InitializerPatternHandlingConfigNeatlyOnSerializeAndDeserialize(ConfigBag params) { initFromConfigBag(params); },"initFromConfigBag(params);
",10,11,2,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, Block-statements, MethodDeclaration-body, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, Block-statements, MethodDeclaration-body, ),
"
451,this();,"this();
",10,10,1,,"ConstructorInvocation(),
"
452,"i = ref(1, intRelDataType);","i=ref(1,intRelDataType);
",11,11,4,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
453,"identifiers = copyCollection(((IdentifiedObject) object).getIdentifiers(), Identifier.class);","identifiers=copyCollection(((IdentifiedObject)object).getIdentifiers(),Identifier.class);
",13,13,6,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
454,"entity.sensors().set(Attributes.LOG_FILE_LOCATION, getLogFile());","entity.sensors().set(Attributes.LOG_FILE_LOCATION,getLogFile());
",15,16,5,,"SimpleName(MethodInvocation-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
455,"casImpl.getFSClassRegistry().addGeneratorForType((TypeImpl) this.casType, getFSGenerator());","casImpl.getFSClassRegistry().addGeneratorForType((TypeImpl)this.casType,getFSGenerator());
",154,156,7,,"SimpleName(MethodInvocation-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
ThisExpression(FieldAccess-expression, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, CastExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
