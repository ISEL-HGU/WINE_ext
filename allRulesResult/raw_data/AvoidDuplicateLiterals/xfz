155000,./TargetProjects/karaf-decanter/collector/camel/src/main/java/org/apache/karaf/decanter/collector/camel/DecanterInterceptStrategy.java,62,,"            if (property.startsWith(""decanter."")) {"
155001,./TargetProjects/karaf-decanter/collector/camel/src/test/java/org/apache/karaf/decanter/collector/camel/DecanterEventNotifierTest.java,41,,"        producerTemplate.sendBodyAndHeader(""direct:start"", ""TEST"", ""foo"", ""bar"");"
155002,./TargetProjects/karaf-decanter/collector/camel/src/test/java/org/apache/karaf/decanter/collector/camel/DecanterEventNotifierTest.java,41,,"        producerTemplate.sendBodyAndHeader(""direct:start"", ""TEST"", ""foo"", ""bar"");"
155003,./TargetProjects/karaf-decanter/collector/camel/src/test/java/org/apache/karaf/decanter/collector/camel/DecanterEventNotifierTest.java,41,,"        producerTemplate.sendBodyAndHeader(""direct:start"", ""TEST"", ""foo"", ""bar"");"
155004,./TargetProjects/karaf-decanter/collector/camel/src/test/java/org/apache/karaf/decanter/collector/camel/DecanterEventNotifierTest.java,41,,"        producerTemplate.sendBodyAndHeader(""direct:start"", ""TEST"", ""foo"", ""bar"");"
155005,./TargetProjects/karaf-decanter/collector/camel/src/test/java/org/apache/karaf/decanter/collector/camel/DecanterEventNotifierTest.java,46,,"        Assert.assertEquals(""test-context"", camelContextStartingEvent.getProperty(""camelContextName""));"
155006,./TargetProjects/karaf-decanter/collector/camel/src/test/java/org/apache/karaf/decanter/collector/camel/DecanterEventNotifierTest.java,46,,"        Assert.assertEquals(""test-context"", camelContextStartingEvent.getProperty(""camelContextName""));"
155007,./TargetProjects/karaf-decanter/collector/camel/src/test/java/org/apache/karaf/decanter/collector/camel/DecanterEventNotifierTest.java,47,,"        Assert.assertEquals(org.apache.camel.impl.event.CamelContextStartingEvent.class.getName(), camelContextStartingEvent.getProperty(""eventType""));"
155008,./TargetProjects/karaf-decanter/collector/camel/src/test/java/org/apache/karaf/decanter/collector/camel/DecanterEventNotifierTest.java,48,,"        Assert.assertEquals(""camelEvent"", camelContextStartingEvent.getProperty(""type""));"
155009,./TargetProjects/karaf-decanter/collector/camel/src/test/java/org/apache/karaf/decanter/collector/camel/DecanterEventNotifierTest.java,48,,"        Assert.assertEquals(""camelEvent"", camelContextStartingEvent.getProperty(""type""));"
155010,./TargetProjects/karaf-decanter/collector/camel/src/test/java/org/apache/karaf/decanter/collector/camel/DecanterInterceptStrategyTest.java,47,,"        template.sendBodyAndHeader(""direct:start"", ""TEST"", ""header"", ""test"");"
155011,./TargetProjects/karaf-decanter/collector/dropwizard/src/main/java/org/apache/karaf/decanter/collector/dropwizard/DecanterReporterCollector.java,65,,"                data.put(""metric"", ""gauge"");"
155012,./TargetProjects/karaf-decanter/collector/dropwizard/src/main/java/org/apache/karaf/decanter/collector/dropwizard/DecanterReporterCollector.java,71,,"                data.put(""count"", counter.getCount());"
155013,./TargetProjects/karaf-decanter/collector/file/src/main/java/org/apache/karaf/decanter/collector/file/DecanterTailerListener.java,72,,"        if (properties.get(""type"") == null) {"
155014,./TargetProjects/karaf-decanter/collector/file/src/main/java/org/apache/karaf/decanter/collector/file/DecanterTailerListener.java,76,,"        if (properties.get(""path"") == null) {"
155015,./TargetProjects/karaf-decanter/collector/jmx/src/test/java/org/apache/karaf/decanter/collector/jmx/TestMapAttribute.java,52,,"        props.put(""object.name"", ""java.lang:*"");"
155016,./TargetProjects/karaf-decanter/collector/jmx/src/test/java/org/apache/karaf/decanter/collector/jmx/TestProtocol.java,92,,"        componentContextMock.getProperties().put(""url"", jmxRMIServiceURL);"
155017,./TargetProjects/karaf-decanter/collector/jmx/src/test/java/org/apache/karaf/decanter/collector/jmx/TestProtocol.java,104,,"        Assert.assertEquals(""Test"", event.getProperty(""Test""));"
155018,./TargetProjects/karaf-decanter/collector/log4j-socket/src/test/java/org/apache/karaf/decanter/collector/log/socket/SocketCollectorTest.java,188,,"            throw new NoSuchMethodError(""Unimplemented method"");"
155019,./TargetProjects/karaf-decanter/collector/mqtt/src/test/java/org/apache/karaf/decanter/collector/mqtt/MqttCollectorTest.java,103,,"            throw new NoSuchMethodError(""Unimplemented method"");"
155020,./TargetProjects/karaf-decanter/collector/oshi/src/main/java/org/apache/karaf/decanter/collector/oshi/OshiCollector.java,122,,"                        data.put(""processor.logical."" + i + "".numaNode"", processor.getNumaNode());"
155021,./TargetProjects/karaf-decanter/collector/oshi/src/main/java/org/apache/karaf/decanter/collector/oshi/OshiCollector.java,145,,"                    data.put(""diskStore."" + i + "".name"", diskStore.getName());"
155022,./TargetProjects/karaf-decanter/collector/oshi/src/main/java/org/apache/karaf/decanter/collector/oshi/OshiCollector.java,145,,"                    data.put(""diskStore."" + i + "".name"", diskStore.getName());"
155023,./TargetProjects/karaf-decanter/collector/oshi/src/main/java/org/apache/karaf/decanter/collector/oshi/OshiCollector.java,161,,"                            data.put(""diskStore."" + i + "".partition."" + j + "".name"", partition.getName());"
155024,./TargetProjects/karaf-decanter/collector/oshi/src/main/java/org/apache/karaf/decanter/collector/oshi/OshiCollector.java,180,,"                    data.put(""graphicsCard."" + i + "".deviceId"", graphicsCard.getDeviceId());"
155025,./TargetProjects/karaf-decanter/collector/oshi/src/main/java/org/apache/karaf/decanter/collector/oshi/OshiCollector.java,193,,"                    data.put(""networkIF."" + i + "".bytesRecv"", networkIF.getBytesRecv());"
155026,./TargetProjects/karaf-decanter/collector/oshi/src/main/java/org/apache/karaf/decanter/collector/oshi/OshiCollector.java,221,,"                    data.put(""powerSource."" + i + "".amperage"", powerSource.getAmperage());"
155027,./TargetProjects/karaf-decanter/collector/oshi/src/main/java/org/apache/karaf/decanter/collector/oshi/OshiCollector.java,266,,"                    data.put(""usbDevice."" + i + "".name"", usbDevice.getName());"
155028,./TargetProjects/karaf-decanter/collector/oshi/src/main/java/org/apache/karaf/decanter/collector/oshi/OshiCollector.java,300,,"                        data.put(""operatingSystem.fileSystem."" + i + "".description"", fileStore.getDescription());"
155029,./TargetProjects/karaf-decanter/collector/oshi/src/main/java/org/apache/karaf/decanter/collector/oshi/OshiCollector.java,331,,"                        data.put(""operatingSystem.process."" + pid + "".pid"", pid);"
155030,./TargetProjects/karaf-decanter/collector/redis/src/main/java/org/apache/karaf/decanter/collector/redis/RedisCollector.java,65,,"        String mode = (config.get(""map"") != null) ? config.get(""map"").toString() : MODE_DEFAULT;"
155031,./TargetProjects/karaf-decanter/collector/rest/src/main/java/org/apache/karaf/decanter/collector/rest/RestCollector.java,78,,"        this.url = new URL(getProperty(config, ""url"", ""http://localhost:8181""));"
155032,./TargetProjects/karaf-decanter/collector/rest/src/test/java/org/apache/karaf/decanter/collector/rest/RestCollectorTest.java,55,,"        config.put(""url"", ""http://foo.bar/foo"");"
155033,./TargetProjects/karaf-decanter/collector/rest/src/test/java/org/apache/karaf/decanter/collector/rest/RestCollectorTest.java,81,,"        Assert.assertEquals(600, event.getProperty(""http.response.code""));"
155034,./TargetProjects/karaf-decanter/collector/rest/src/test/java/org/apache/karaf/decanter/collector/rest/RestCollectorTest.java,99,,"        Assert.assertEquals(""hello world\n"", event.getProperty(""payload""));"
155035,./TargetProjects/karaf-decanter/collector/rest/src/test/java/org/apache/karaf/decanter/collector/rest/RestCollectorTest.java,107,,"        config.put(""request.method"", ""POST"");"
155036,./TargetProjects/karaf-decanter/collector/socket/src/test/java/org/apache/karaf/decanter/collector/socket/SocketCollectorTest.java,42,,"        Socket socket = new Socket(""localhost"", 34343);"
155037,./TargetProjects/karaf-decanter/collector/system/src/test/java/org/apache/karaf/decanter/collector/system/SystemCollectorTest.java,46,,"        componentContext.getProperties().put(""command.df1"", ""df -h"");"
155038,./TargetProjects/karaf-decanter/collector/system/src/test/java/org/apache/karaf/decanter/collector/system/SystemCollectorTest.java,113,,"            throw new NoSuchMethodError(""Unimplemented method"");"
155039,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/appender/JdbcAppenderTest.java,48,,"                KarafDistributionOption.editConfigurationFilePut(""etc/org.ops4j.datasource-decanter.cfg"", ""osgi.jdbc.driver.name"", ""derby""),"
155040,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/appender/JmsAppenderTest.java,50,,"                KarafDistributionOption.editConfigurationFilePut(""etc/system.properties"", ""decanter.version"", System.getProperty(""decanter.version"")),"
155041,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/appender/JmsAppenderTest.java,53,,"                        ""mvn:org.apache.karaf.features/framework/"" + karafVersion + ""/xml/features,"" +"
155042,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/collector/CamelCollectorTest.java,56,,"                KarafDistributionOption.editConfigurationFilePut(""etc/system.properties"", ""decanter.version"", System.getProperty(""decanter.version"")),"
155043,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/collector/CamelCollectorTest.java,89,,"                from(""direct:test"").routeId(""route-test"").to(""log:foo"");"
155044,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/collector/CamelCollectorTest.java,96,,"        camelContext.setName(""context-test"");"
155045,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/collector/CamelCollectorTest.java,108,,"        Assert.assertEquals(""context-test"", received.get(0).getProperty(""camelContextName""));"
155046,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/collector/CamelCollectorTest.java,110,,"        Assert.assertEquals(""camelTracer"", received.get(0).getProperty(""type""));"
155047,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/collector/CamelCollectorTest.java,113,,"        Assert.assertEquals(""root"", received.get(0).getProperty(""karafName""));"
155048,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/collector/CamelCollectorTest.java,113,,"        Assert.assertEquals(""root"", received.get(0).getProperty(""karafName""));"
155049,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/collector/CamelCollectorTest.java,164,,"        Assert.assertEquals(""decanter/collect/camel/event"", received.get(0).getTopic());"
155050,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/collector/CamelCollectorTest.java,166,,"        Assert.assertEquals(""org.apache.camel.impl.event.CamelContextStartingEvent"", received.get(0).getProperty(""eventType""));"
155051,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/collector/CamelCollectorTest.java,168,,"        Assert.assertEquals(""camelEvent"", received.get(0).getProperty(""type""));"
155052,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/collector/FileCollectorTest.java,50,,"                KarafDistributionOption.editConfigurationFilePut(""etc/org.apache.karaf.decanter.collector.file-test.cfg"", ""path"", ""test.log""),"
155053,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/collector/JdbcCollectorTest.java,52,,"                KarafDistributionOption.editConfigurationFilePut(""etc/org.ops4j.datasource-derby.cfg"", ""osgi.jdbc.driver.name"", ""derby""),"
155054,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/collector/JettyCollectorTest.java,73,,"        httpService.registerServlet(""/test"", new HttpServlet() {"
155055,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/collector/JmsCollectorTest.java,53,,"                        ""mvn:org.apache.karaf.features/framework/"" + karafVersion + ""/xml/features,"" +"
155056,./TargetProjects/karaf-decanter/itest/src/test/java/org/apache/karaf/decanter/itests/collector/MqttCollectorTest.java,66,,"                        ""mvn:org.apache.karaf.features/framework/"" + karafVersion + ""/xml/features,"" +"
155057,./TargetProjects/karaf-decanter/marshaller/json/src/test/java/org/apache/karaf/decanter/marshaller/json/TestJsonMarshaller.java,114,,"       map.put(""test"", ""test"");"
155058,./TargetProjects/karaf-decanter/marshaller/json/src/test/java/org/apache/karaf/decanter/marshaller/json/TestJsonMarshaller.java,116,,"       inner.put(""other"", ""other"");"
155059,./TargetProjects/karaf-decanter/parser/regex/src/test/java/org/apache/karaf/decanter/parser/regex/RegexParserTest.java,39,,"        Assert.assertEquals(""this"", result.get(""key-0""));"
155060,./TargetProjects/karaf-decanter/parser/regex/src/test/java/org/apache/karaf/decanter/parser/regex/RegexParserTest.java,42,,"        Assert.assertEquals(""test"", result.get(""key-3""));"
155061,./TargetProjects/karaf-decanter/parser/split/src/test/java/org/apache/karaf/decanter/parser/split/SplitParserTest.java,39,,"        Assert.assertEquals(""this"", result.get(""key-0""));"
155062,./TargetProjects/karaf-decanter/parser/split/src/test/java/org/apache/karaf/decanter/parser/split/SplitParserTest.java,42,,"        Assert.assertEquals(""test"", result.get(""key-3""));"
155063,./TargetProjects/karaf-decanter/processor/aggregate/src/test/java/org/apache/karaf/decanter/processor/aggregate/AggregateProcessorTest.java,42,,"        data1.put(""first"", ""first"");"
155064,./TargetProjects/karaf-decanter/processor/aggregate/src/test/java/org/apache/karaf/decanter/processor/aggregate/AggregateProcessorTest.java,47,,"        data2.put(""second"", ""second"");"
155065,./TargetProjects/karaf-decanter/processor/aggregate/src/test/java/org/apache/karaf/decanter/processor/aggregate/AggregateProcessorTest.java,65,,"        data4.put(""foo"", ""bar"");"
155066,./TargetProjects/karaf-decanter/processor/groupby/src/test/java/org/apache/karaf/decanter/processor/groupby/GroupByProcessorTest.java,42,,"        data1.put(""foo"", ""foo"");"
155067,./TargetProjects/karaf-decanter/processor/groupby/src/test/java/org/apache/karaf/decanter/processor/groupby/GroupByProcessorTest.java,43,,"        data1.put(""bar"", ""bar"");"
155068,./TargetProjects/karaf-decanter/processor/groupby/src/test/java/org/apache/karaf/decanter/processor/groupby/GroupByProcessorTest.java,44,,"        data1.put(""first"", ""first"");"
155069,./TargetProjects/karaf-decanter/processor/groupby/src/test/java/org/apache/karaf/decanter/processor/groupby/GroupByProcessorTest.java,51,,"        data2.put(""second"", ""second"");"
155070,./TargetProjects/karaf-decanter/processor/groupby/src/test/java/org/apache/karaf/decanter/processor/groupby/GroupByProcessorTest.java,56,,"        data3.put(""third"", ""third"");"
155071,./TargetProjects/karaf-decanter/processor/groupby/src/test/java/org/apache/karaf/decanter/processor/groupby/GroupByProcessorTest.java,63,,"        data4.put(""fourth"", ""fourth"");"
155072,./TargetProjects/karaf-decanter/processor/groupby/src/test/java/org/apache/karaf/decanter/processor/groupby/GroupByProcessorTest.java,68,,"        data5.put(""foo"", ""other"");"
155073,./TargetProjects/karaf-decanter/processor/groupby/src/test/java/org/apache/karaf/decanter/processor/groupby/GroupByProcessorTest.java,70,,"        data5.put(""fifth"", ""fifth"");"
155074,./TargetProjects/karaf-eik/plugins/org.apache.karaf.eik.app/src/main/java/org/apache/karaf/main/BootstrapLogManager.java,63,,"                props.setProperty(""log4j.appender.out.file"", ""${karaf.data}/log/karaf.log"");"
155075,./TargetProjects/karaf-eik/plugins/org.apache.karaf.eik.ui/src/main/java/org/apache/karaf/eik/ui/KarafConfigurationTab.java,182,,"            @SuppressWarnings(""unchecked"")"
155076,./TargetProjects/karaf-eik/plugins/org.apache.karaf.eik.ui/src/main/java/org/apache/karaf/eik/ui/KarafConfigurationTab.java,422,,"        configuration.setAttribute(KarafLaunchConfigurationConstants.KARAF_REMOTE_CONSOLE_USERNAME, ""karaf"");"
155077,./TargetProjects/karaf-jclouds/core/src/main/java/org/jclouds/karaf/core/ComputeServiceEventProxy.java,207,,"            LOGGER.error(""Error while notifying node listeners."", ex);"
155078,./TargetProjects/karaf-jclouds/services/src/test/java/org/jclouds/karaf/services/ServiceFactoryValidationTest.java,35,,"        expect(apiMetadata.getDefaultIdentity()).andReturn(Optional.of(""defaultIdentity"")).anyTimes();"
155079,./TargetProjects/karaf-jclouds/services/src/test/java/org/jclouds/karaf/services/ServiceFactoryValidationTest.java,36,,"        expect(apiMetadata.getDefaultCredential()).andReturn(Optional.of(""defaultCredential"")).anyTimes();"
155080,./TargetProjects/karaf-jclouds/services/src/test/java/org/jclouds/karaf/services/ServiceFactoryValidationTest.java,37,,"        expect(apiMetadata.getDefaultEndpoint()).andReturn(Optional.of(""defaultEndpoint"")).anyTimes();"
155081,./TargetProjects/karaf-reactive-components/rcomp-kafka/src/test/java/org/apache/karaf/rcomp/kafka/TestKafka.java,51,,"        Flux.just(new ProducerRecord<String, String>(TOPIC1, ""1"", ""test""),"
155082,./TargetProjects/karaf-webconsole/core/src/test/java/org/apache/karaf/webconsole/core/page/SinglePageTest.java,70,,"        expect(mock.getModuleLink(anyString(), anyString())).andAnswer(new LinkAnswer(""test"", SinglePageExt.class));"
155083,./TargetProjects/karaf-webconsole/core/src/test/java/org/apache/karaf/webconsole/core/security/HierarchicalRolesTest.java,53,,"        nodes = nodes.get(""test"").getNodes();"
155084,./TargetProjects/karaf-webconsole/osgi/core/src/main/java/org/apache/karaf/webconsole/osgi/core/bundle/install/InstallBundlePanel.java,74,,"        file.add(new AttributeModifier(""disabled"", ""disabled""));"
155085,./TargetProjects/karaf-webconsole/osgi/core/src/main/java/org/apache/karaf/webconsole/osgi/core/bundle/list/BundleActionsPanel.java,57,,"        link.add(new Label(""label"", """").add(new AttributeModifier(""class"", ""icon-info-sign"")));"
155086,./TargetProjects/karaf-winegrower/winegrower-core/src/test/java/org/apache/winegrower/service/DefaultConfigurationAdminTest.java,85,,"        final String key = ""foo"";"
155087,./TargetProjects/karaf-winegrower/winegrower-core/src/test/java/org/apache/winegrower/service/DefaultConfigurationAdminTest.java,97,,"        System.setProperty(""winegrower.service.test.foo"", ""bar"");"
155088,./TargetProjects/karaf-winegrower/winegrower-core/src/test/java/org/apache/winegrower/service/DefaultEventAdminTest.java,43,,"                    new String[] { ""test"" }, null));"
155089,./TargetProjects/karaf-winegrower/winegrower-core/src/test/java/org/apache/winegrower/service/DefaultEventAdminTest.java,46,,"            admin.sendEvent(new Event(""test/another"", singletonMap(""weingrower"", ""2"")));"
155090,./TargetProjects/karaf-winegrower/winegrower-extension/winegrower-servlet/src/main/java/org/apache/winegrower/servlet/service/ServletHttpService.java,51,,"        final Object asyncSupported = initParams.get(""asyncSupported"");"
155091,./TargetProjects/knox/gateway-adapter/src/test/java/org/apache/hadoop/gateway/shirorealm/KnoxLdapRealmTest.java,68,,"    realm.setUserSearchBase(""dc=knox,dc=example,dc=com"");"
155092,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariClusterTest.java,36,,"    final String ensemble = ""host1:2181,host2:2181,host3:2181"";"
155093,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariClusterTest.java,158,,"                            getZooKeeperConfiguration(""ATLAS"", ""ATLAS"", ""application-properties"", serviceConfigProps);"
155094,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariConfigurationMonitorTest.java,83,,"        updateConfigurations.get(addr1).put(cluster1Name, Arrays.asList(Arrays.asList(createTestServiceConfig(""zoo.cfg"", ""3""),"
155095,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariConfigurationMonitorTest.java,84,,"                                                                                      createTestServiceConfig(""hive-site"", ""2"")),"
155096,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariConfigurationMonitorTest.java,201,,"        assertTrue(""Expected data for this cluster."", src2ClustersData.containsKey(cluster1Name));"
155097,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,57,,"        final String[] HOSTNAMES    = {""host3"", ""host2"", ""host4""};"
155098,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,57,,"        final String[] HOSTNAMES    = {""host3"", ""host2"", ""host4""};"
155099,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,57,,"        final String[] HOSTNAMES    = {""host3"", ""host2"", ""host4""};"
155100,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,62,,"        String expectedScheme = ""http"";"
155101,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,74,,"        EasyMock.expect(hiveServer.getConfigProperty(""hive.server2.use.SSL"")).andReturn(""false"").anyTimes();"
155102,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,104,,"        EasyMock.expect(hiveServer.getConfigProperty(""hive.server2.use.SSL"")).andReturn(""true"").anyTimes();"
155103,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,111,,"        expectedScheme = ""https"";"
155104,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,148,,"        assertEquals(""hdfs://"" + ADDRESS, url);"
155105,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,153,,"        final String DEFAULT_NAMESERVICE = ""ns1"";"
155106,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,162,,"        params.put(""discovery-nameservice"", delcaredNS);"
155107,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,199,,"        coreProps.put(""fs.defaultFS"", ""hdfs://"" + defaultFSAddress);"
155108,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,206,,"            hdfsProps.put(""dfs.nameservices"", nameservices);"
155109,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,215,,"        EasyMock.expect(cluster.getServiceConfiguration(""HDFS"", ""core-site"")).andReturn(coreSC).anyTimes();"
155110,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,215,,"        EasyMock.expect(cluster.getServiceConfiguration(""HDFS"", ""core-site"")).andReturn(coreSC).anyTimes();"
155111,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,216,,"        EasyMock.expect(cluster.getServiceConfiguration(""HDFS"", ""hdfs-site"")).andReturn(hdfsSC).anyTimes();"
155112,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,217,,"        EasyMock.expect(cluster.getComponent(""NAMENODE"")).andReturn(nnComp).anyTimes();"
155113,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,259,,"        assertEquals(""http://"" + HOSTNAME + "":"" + PORT + ""/templeton"", url);"
155114,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,355,,"        final String ADDRESS = ""host3:1357"";"
155115,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,356,,"        assertEquals((""http://"" + ADDRESS + ""/webhdfs""), getTestHdfsURL(""WEBHDFS"", ADDRESS, false));"
155116,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,356,,"        assertEquals((""http://"" + ADDRESS + ""/webhdfs""), getTestHdfsURL(""WEBHDFS"", ADDRESS, false));"
155117,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,368,,"        assertEquals((""http://"" + ADDRESS), getTestHdfsURL(""HDFSUI"", ADDRESS, false));"
155118,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,409,,"        hdfsProps.put(""dfs.namenode.http-address."" + NAMESERVICES + "".nn1"", HTTP_ADDRESS_1);"
155119,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,409,,"        hdfsProps.put(""dfs.namenode.http-address."" + NAMESERVICES + "".nn1"", HTTP_ADDRESS_1);"
155120,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,410,,"        hdfsProps.put(""dfs.namenode.http-address."" + NAMESERVICES + "".nn2"", HTTP_ADDRESS_2);"
155121,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,460,,"        final String NS1 = ""myns1"";"
155122,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,461,,"        final String NS2 = ""myns2"";"
155123,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,463,,"        final String HTTP_ADDRESS_11 = ""host11:50070"";"
155124,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,464,,"        final String HTTP_ADDRESS_12 = ""host12:50077"";"
155125,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,465,,"        final String HTTP_ADDRESS_21 = ""host21:50070"";"
155126,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,466,,"        final String HTTP_ADDRESS_22 = ""host22:50077"";"
155127,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,644,,"        hdfsProps.put(""dfs.ha.namenodes."" + NS1, ""nn11,nn12"");"
155128,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,844,,"        final String HTTP_PORT = ""8787"";"
155129,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,845,,"        final String HTTPS_PORT = ""8989"";"
155130,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,847,,"        final String[] HOSTNAMES = {""host1"", ""host4""};"
155131,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,941,,"        EasyMock.expect(zeppelinMaster.getConfigProperty(""zeppelin.ssl"")).andReturn(""false"").anyTimes();"
155132,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,942,,"        EasyMock.expect(zeppelinMaster.getConfigProperty(""zeppelin.server.port"")).andReturn(HTTP_PORT).anyTimes();"
155133,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,943,,"        EasyMock.expect(zeppelinMaster.getConfigProperty(""zeppelin.server.ssl.port"")).andReturn(HTTPS_PORT).anyTimes();"
155134,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,1045,,"        EasyMock.expect(druidCoordinator.getConfigProperty(""druid.port"")).andReturn(PORT).anyTimes();"
155135,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,1298,,"            ""    <properties>\n"" +"
155136,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,1302,,"            ""      </property>\n"" +"
155137,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,1308,,"            ""        <config-property>\n"" +"
155138,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,1313,,"            ""        </config-property>\n"" +"
155139,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,1315,,"            ""    </properties>\n"" +"
155140,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,1316,,"            ""  </service>\n"" +"
155141,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,1322,,"            ""        <component>RESOURCEMANAGER</component>\n"" +"
155142,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,1331,,"            ""      <property name=\""HOST\"">\n"" +"
155143,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,1333,,"            ""        <hostname/>\n"" +"
155144,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariDynamicServiceURLCreatorTest.java,1399,,"            ""        <component>HIVE_SERVER</component>\n"" +"
155145,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,54,,"        final String discoveryAddress = ""http://ambarihost:8080"";"
155146,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,55,,"        final String clusterName = ""testCluster"";"
155147,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,355,,"    ""    {\n"" +"
155148,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,356,,"    ""      \""href\"" : \""http://c6401.ambari.apache.org:8080/api/v1/clusters/""+TestAmbariServiceDiscovery.CLUSTER_PLACEHOLDER+""\"",\n"" +"
155149,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,356,,"    ""      \""href\"" : \""http://c6401.ambari.apache.org:8080/api/v1/clusters/""+TestAmbariServiceDiscovery.CLUSTER_PLACEHOLDER+""\"",\n"" +"
155150,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,358,,"    ""        \""cluster_name\"" : \""""+TestAmbariServiceDiscovery.CLUSTER_PLACEHOLDER+""\"",\n"" +"
155151,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,372,,"    ""      \""ServiceInfo\"" : {\n"" +"
155152,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,375,,"    ""      },\n"" +"
155153,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,376,,"    ""      \""components\"" : [\n"" +"
155154,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,377,,"    ""        {\n"" +"
155155,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,378,,"    ""          \""href\"" : \""http://c6401.ambari.apache.org:8080/api/v1/clusters/""+TestAmbariServiceDiscovery.CLUSTER_PLACEHOLDER+""/services/AMBARI_METRICS/components/METRICS_COLLECTOR\"",\n"" +"
155156,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,379,,"    ""          \""ServiceComponentInfo\"" : {\n"" +"
155157,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,380,,"    ""            \""cluster_name\"" : \""""+TestAmbariServiceDiscovery.CLUSTER_PLACEHOLDER+""\"",\n"" +"
155158,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,383,,"    ""          },\n"" +"
155159,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,384,,"    ""          \""host_components\"" : [\n"" +"
155160,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,385,,"    ""            {\n"" +"
155161,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,386,,"    ""              \""href\"" : \""http://c6401.ambari.apache.org:8080/api/v1/clusters/""+TestAmbariServiceDiscovery.CLUSTER_PLACEHOLDER+""/hosts/c6403.ambari.apache.org/host_components/METRICS_COLLECTOR\"",\n"" +"
155162,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,387,,"    ""              \""HostRoles\"" : {\n"" +"
155163,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,388,,"    ""                \""cluster_name\"" : \""""+TestAmbariServiceDiscovery.CLUSTER_PLACEHOLDER+""\"",\n"" +"
155164,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,390,,"    ""                \""host_name\"" : \""c6403.ambari.apache.org\"",\n"" +"
155165,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,391,,"    ""                \""public_host_name\"" : \""c6403.ambari.apache.org\"",\n"" +"
155166,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,393,,"    ""                \""stack_id\"" : \""HDP-2.6\"",\n"" +"
155167,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,394,,"    ""              }\n"" +"
155168,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,395,,"    ""            }\n"" +"
155169,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,396,,"    ""          ]\n"" +"
155170,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,397,,"    ""        },\n"" +"
155171,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,418,,"    ""        }\n"" +"
155172,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,419,,"    ""      ]\n"" +"
155173,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,420,,"    ""    },\n"" +"
155174,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,462,,"    ""                \""host_name\"" : \""c6402.ambari.apache.org\"",\n"" +"
155175,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,463,,"    ""                \""public_host_name\"" : \""c6402.ambari.apache.org\"",\n"" +"
155176,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,484,,"    ""            \""service_name\"" : \""HIVE\""\n"" +"
155177,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,494,,"    ""                \""service_name\"" : \""HIVE\"",\n"" +"
155178,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,588,,"    ""                \""stack_id\"" : \""HDP-2.6\""\n"" +"
155179,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,760,,"    ""      \""cluster_name\"" : \""""+TestAmbariServiceDiscovery.CLUSTER_PLACEHOLDER+""\"",\n"" +"
155180,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,761,,"    ""      \""configurations\"" : [\n"" +"
155181,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,763,,"    ""          \""Config\"" : {\n"" +"
155182,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,765,,"    ""            \""stack_id\"" : \""HDP-2.6\""\n"" +"
155183,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,769,,"    ""          \""version\"" : 1,\n"" +"
155184,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,770,,"    ""          \""properties\"" : {\n"" +"
155185,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,781,,"    ""          \""properties_attributes\"" : { }\n"" +"
155186,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,783,,"    ""      ],\n"" +"
155187,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,784,,"    ""      \""is_current\"" : true,\n"" +"
155188,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,788,,"    ""      \""stack_id\"" : \""HDP-2.6\"",\n"" +"
155189,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,789,,"    ""      \""user\"" : \""admin\""\n"" +"
155190,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/AmbariServiceDiscoveryTest.java,801,,"    ""          \""tag\"" : \""version1\"",\n"" +"
155191,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/ResourceManagerURLCreatorTest.java,44,,"    assertEquals(ResourceManagerURLCreatorBase.SCHEME_HTTP + ""://"" + expectedAddress + ""/ws"", url);"
155192,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/ResourceManagerURLCreatorTest.java,44,,"    assertEquals(ResourceManagerURLCreatorBase.SCHEME_HTTP + ""://"" + expectedAddress + ""/ws"", url);"
155193,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/SparkServiceURLCreatorTest.java,34,,"    doTestSparkHistoryUI(""SPARK_JOBHISTORYSERVER"");"
155194,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/SparkServiceURLCreatorTest.java,39,,"    doTestSparkHistoryUI(""SPARK2_JOBHISTORYSERVER"");"
155195,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/SparkServiceURLCreatorTest.java,43,,"    final String PORT = ""4545"";"
155196,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/SparkServiceURLCreatorTest.java,46,,"    List<String> hostNames = Arrays.asList(""host1"", ""host2"");"
155197,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/SparkServiceURLCreatorTest.java,46,,"    List<String> hostNames = Arrays.asList(""host1"", ""host2"");"
155198,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/SparkServiceURLCreatorTest.java,48,,"    EasyMock.expect(ac.getConfigProperty(""spark.history.ui.port"")).andReturn(PORT).anyTimes();"
155199,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/SparkServiceURLCreatorTest.java,61,,"    assertEquals(""http://host1:"" + PORT, urls.get(0));"
155200,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/SparkServiceURLCreatorTest.java,62,,"    assertEquals(""http://host2:"" + PORT, urls.get(1));"
155201,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/SparkServiceURLCreatorTest.java,68,,"    doTestSparkHistoryUI_SSL(""SPARK_JOBHISTORYSERVER"", true, false, ""4321"");"
155202,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/SparkServiceURLCreatorTest.java,197,,"    EasyMock.expect(ac.getConfigProperty(""livy.server.port"")).andReturn(PORT).anyTimes();"
155203,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,36,,"    final String HTTP_ADDRESS  = ""host1:20070"";"
155204,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,37,,"    final String HTTPS_ADDRESS = ""host2:20470"";"
155205,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,50,,"    EasyMock.expect(cluster.getServiceConfiguration(""HDFS"", ""hdfs-site""))"
155206,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,50,,"    EasyMock.expect(cluster.getServiceConfiguration(""HDFS"", ""hdfs-site""))"
155207,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,57,,"    List<String> urls = c.create(""WEBHDFS"", null);"
155208,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,61,,"    assertEquals(""http://"" + HTTP_ADDRESS + ""/webhdfs"", urls.get(0));"
155209,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,92,,"    assertEquals(""https://"" + HTTPS_ADDRESS + ""/webhdfs"", urls.get(0));"
155210,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,103,,"    corSiteProps.put(""fs.defaultFS"", ""hdfs://X"");"
155211,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,112,,"    configProps.put(""dfs.nameservices"", ""X,Y"");"
155212,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,112,,"    configProps.put(""dfs.nameservices"", ""X,Y"");"
155213,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,113,,"    configProps.put(""dfs.ha.namenodes.X"", ""nn1,nn2"");"
155214,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,115,,"    configProps.put(HDFSURLCreatorBase.HTTP_ADDRESS_PROPERTY + "".X.nn2"", ""host4:20070"");"
155215,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,124,,"    EasyMock.expect(cluster.getServiceConfiguration(""HDFS"", ""core-site""))"
155216,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,147,,"    corSiteProps.put(""fs.defaultFS"", ""hdfs://Y"");"
155217,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,157,,"    configProps.put(""dfs.ha.namenodes.Y"", ""nn7,nn8"");"
155218,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,157,,"    configProps.put(""dfs.ha.namenodes.Y"", ""nn7,nn8"");"
155219,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,158,,"    configProps.put(HDFSURLCreatorBase.HTTPS_ADDRESS_PROPERTY + "".Y.nn7"", ""host5:20470"");"
155220,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,158,,"    configProps.put(HDFSURLCreatorBase.HTTPS_ADDRESS_PROPERTY + "".Y.nn7"", ""host5:20470"");"
155221,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,159,,"    configProps.put(HDFSURLCreatorBase.HTTPS_ADDRESS_PROPERTY + "".Y.nn8"", ""host6:20470"");"
155222,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,159,,"    configProps.put(HDFSURLCreatorBase.HTTPS_ADDRESS_PROPERTY + "".Y.nn8"", ""host6:20470"");"
155223,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,203,,"    configProps.put(HDFSURLCreatorBase.HTTPS_ADDRESS_PROPERTY + "".X.nn2"", ""host3:20470"");"
155224,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,204,,"    configProps.put(HDFSURLCreatorBase.HTTPS_ADDRESS_PROPERTY + "".X.nn3"", ""host4:20470"");"
155225,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,221,,"    serviceParams.put(""discovery-nameservice"", ""X"");"
155226,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/WebHdfsUrlCreatorTest.java,312,,"    EasyMock.expect(cluster.getComponent(""NAMENODE""))"
155227,./TargetProjects/knox/gateway-discovery-ambari/src/test/java/org/apache/knox/gateway/topology/discovery/ambari/YarnUIURLCreatorTest.java,46,,"    assertEquals(ResourceManagerURLCreatorBase.SCHEME_HTTP + ""://"" + expectedAddress, url);"
155228,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/ClouderaManagerClusterTest.java,57,,"        doTestGetSOLRServiceURLs(Arrays.asList(""SOLR-3"", ""SOLR-7""),"
155229,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/ClouderaManagerClusterTest.java,57,,"        doTestGetSOLRServiceURLs(Arrays.asList(""SOLR-3"", ""SOLR-7""),"
155230,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/ClouderaManagerClusterTest.java,88,,"        doTestGetSOLRServiceURLs(Arrays.asList(""SOLR-5"", ""SOLR-6""),"
155231,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/ClouderaManagerClusterTest.java,88,,"        doTestGetSOLRServiceURLs(Arrays.asList(""SOLR-5"", ""SOLR-6""),"
155232,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/ClouderaManagerServiceDiscoveryTest.java,139,,"    assertEquals((isSSL ? ""https"" : ""http"") + ""://"" + hostName + "":"" + (isSSL ? sslPort : port),"
155233,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/ClouderaManagerServiceDiscoveryTest.java,139,,"    assertEquals((isSSL ? ""https"" : ""http"") + ""://"" + hostName + "":"" + (isSSL ? sslPort : port),"
155234,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/ClouderaManagerServiceDiscoveryTest.java,139,,"    assertEquals((isSSL ? ""https"" : ""http"") + ""://"" + hostName + "":"" + (isSSL ? sslPort : port),"
155235,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/ClouderaManagerServiceDiscoveryTest.java,174,,"    final String hostName       = ""test-host-1"";"
155236,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/ClouderaManagerServiceDiscoveryTest.java,225,,"    final String nnPort      = ""50070"";"
155237,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/ClouderaManagerServiceDiscoveryTest.java,232,,"    assertEquals(""http://"" + hostName + "":"" + dfsHttpPort + ""/webhdfs"","
155238,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/ClouderaManagerServiceDiscoveryTest.java,249,,"    assertEquals(""https://"" + hostName + "":"" + dfsHttpsPort + ""/webhdfs"","
155239,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/ClouderaManagerServiceDiscoveryTest.java,298,,"    final String hostName    = ""hbase-host"";"
155240,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/ClouderaManagerServiceDiscoveryTest.java,469,,"    doTestSparkHistoryUIDiscovery(""spark-history-host"", ""18088"", ""18083"", false);"
155241,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/ClouderaManagerServiceDiscoveryTest.java,560,,"    roleProperties.put(""ssl_enabled"", String.valueOf(isSSL));"
155242,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/ClouderaManagerServiceDiscoveryTest.java,680,,"      serviceProperties.put(""client_services_ssl_enabled"", ""true"");"
155243,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/collector/HueURLCollectorTest.java,52,,"                                                                        ""http://hostx:1234/test1"")));"
155244,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/model/hdfs/WebHdfsServiceModelGeneratorTest.java,38,,"    serviceConfig.put(WebHdfsServiceModelGenerator.WEBHDFS_ENABLED, ""true"");"
155245,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/monitor/PollingConfigurationAnalyzerTest.java,128,,"    final String address = ""http://host1:1234"";"
155246,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/monitor/PollingConfigurationAnalyzerTest.java,140,,"    assertTrue(""Expected a change notification"", listener.wasNotified(address, clusterName));"
155247,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/monitor/ServiceConfigurationModelTest.java,45,,"    serviceConfig.put(""prop1"", ""value1"");"
155248,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/monitor/ServiceConfigurationModelTest.java,45,,"    serviceConfig.put(""prop1"", ""value1"");"
155249,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/monitor/ServiceConfigurationModelTest.java,46,,"    serviceConfig.put(""prop2"", ""value2"");"
155250,./TargetProjects/knox/gateway-discovery-cm/src/test/java/org/apache/knox/gateway/topology/discovery/cm/monitor/ServiceConfigurationModelTest.java,46,,"    serviceConfig.put(""prop2"", ""value2"");"
155251,./TargetProjects/knox/gateway-i18n/src/test/java/org/apache/knox/gateway/i18n/resources/ResourcesTest.java,88,,"    assertThat( res.testResource( ""queryParam"" ), equalTo( ""default=[queryParam]"" ) );"
155252,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/deploy/HaProviderDeploymentContributorTest.java,78,,"      providerParams.put(""TestRoleOne"", getHaProviderParamValue(false, 40, 4, ""testRoleOne"", ""http://host1:2181,http://host2:2181""));"
155253,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/deploy/HaProviderDeploymentContributorTest.java,88,,"      EasyMock.expect(testRoleOneService.getName()).andReturn(""TestRoleOneService"").anyTimes();"
155254,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/deploy/HaProviderDeploymentContributorTest.java,106,,"      HaDescriptor descriptor = context.getDescriptor(""ha.provider.descriptor"");"
155255,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/deploy/HaProviderDeploymentContributorTest.java,135,,"      testRoleOneParams.put(HaServiceConfigConstants.CONFIG_PARAM_ZOOKEEPER_NAMESPACE, ""testRoleOneOverride"");"
155256,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/deploy/HaProviderDeploymentContributorTest.java,136,,"      testRoleOneParams.put(HaServiceConfigConstants.CONFIG_PARAM_ZOOKEEPER_ENSEMBLE, ""http://host3:2181,http://host4:2181"");"
155257,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/dispatch/DefaultHaDispatchTest.java,67,,"    String serviceName = ""OOZIE"";"
155258,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/dispatch/DefaultHaDispatchTest.java,69,,"    descriptor.addServiceConfig(HaDescriptorFactory.createServiceConfig(serviceName, ""true"", ""1"", ""1000"", null, null, null, null, null, null));"
155259,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/dispatch/DefaultHaDispatchTest.java,69,,"    descriptor.addServiceConfig(HaDescriptorFactory.createServiceConfig(serviceName, ""true"", ""1"", ""1000"", null, null, null, null, null, null));"
155260,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/dispatch/DefaultHaDispatchTest.java,71,,"    URI uri1 = new URI( ""http://unreachable-host.invalid"" );"
155261,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/dispatch/DefaultHaDispatchTest.java,72,,"    URI uri2 = new URI( ""http://reachable-host.invalid"" );"
155262,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/dispatch/DefaultHaDispatchTest.java,86,,"    EasyMock.expect(outboundRequest.getMethod()).andReturn( ""GET"" ).anyTimes();"
155263,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/dispatch/DefaultHaDispatchTest.java,92,,"    EasyMock.expect(inboundRequest.getAttribute(""dispatch.ha.failover.counter"")).andReturn(new AtomicInteger(0)).once();"
155264,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/dispatch/DefaultHaDispatchTest.java,102,,"            throw new IOException( ""unreachable-host.invalid"" );"
155265,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/dispatch/DefaultHaDispatchTest.java,274,,"    URI uri1 = new URI( ""http://host1.valid"" );"
155266,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/dispatch/DefaultHaDispatchTest.java,275,,"    URI uri2 = new URI( ""http://host2.valid"" );"
155267,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/dispatch/DefaultHaDispatchTest.java,306,,"    final ByteArrayInputStream backendResponse = new ByteArrayInputStream(""knox-backend"".getBytes("
155268,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/dispatch/DefaultHaDispatchTest.java,629,,"                                                   ""59973e253ae20de796c6ef413608ec1c80fca24310a4cbdecc0ff97aeea55745"") })"
155269,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/dispatch/DefaultHaDispatchTest.java,743,,"    Cookie[] cookie = new Cookie[] { new Cookie(""KNOX_BACKEND-OOZIE"",""59973e253ae20de796c6ef413608ec1c80fca24310a4cbdecc0ff97aeea55745"")};"
155270,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/dispatch/DefaultHaDispatchTest.java,817,,"    String serviceName = ""HIVE"";"
155271,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/AtlasZookeeperURLManagerTest.java,69,,"        HaServiceConfig config = new DefaultHaServiceConfig(""ATLAS-API"");"
155272,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/DefaultHaProviderTest.java,49,,"      descriptor.addServiceConfig(new DefaultHaServiceConfig(""foo""));"
155273,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/HaDescriptorFactoryTest.java,37,,"      HaServiceConfig serviceConfig = HaDescriptorFactory.createServiceConfig(""foo"", ""enabled=true;maxFailoverAttempts=42;failoverSleep=50"");"
155274,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/HaDescriptorFactoryTest.java,44,,"      serviceConfig = HaDescriptorFactory.createServiceConfig(""bar"", ""false"", ""3"", ""1000"", null, null, null, null, null, null);"
155275,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/HaDescriptorFactoryTest.java,44,,"      serviceConfig = HaDescriptorFactory.createServiceConfig(""bar"", ""false"", ""3"", ""1000"", null, null, null, null, null, null);"
155276,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/HaDescriptorFactoryTest.java,44,,"      serviceConfig = HaDescriptorFactory.createServiceConfig(""bar"", ""false"", ""3"", ""1000"", null, null, null, null, null, null);"
155277,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/HaDescriptorFactoryTest.java,70,,"    assertEquals(""abc"", serviceConfig.getStickySessionCookieName());"
155278,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/HaDescriptorFactoryTest.java,72,,"    serviceConfig = HaDescriptorFactory.createServiceConfig( ""bar"", ""false"", ""3"", ""1000"", null, null, null, ""true"", null, null);"
155279,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/HaDescriptorManagerTest.java,46,,"      HaServiceConfig config = descriptor.getServiceConfig(""foo"");"
155280,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/HaDescriptorManagerTest.java,54,,"      config = descriptor.getServiceConfig(""bar"");"
155281,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/HaDescriptorManagerTest.java,79,,"      descriptor.addServiceConfig(HaDescriptorFactory.createServiceConfig(""foo"", ""false"", ""42"", ""1000"", ""foo:2181,bar:2181"", ""hiveserver2"", null, null, null, null));"
155282,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/HaDescriptorManagerTest.java,80,,"      descriptor.addServiceConfig(HaDescriptorFactory.createServiceConfig(""bar"", ""true"", ""3"", ""5000"", null, null, null, null, null, null));"
155283,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/HaDescriptorManagerTest.java,80,,"      descriptor.addServiceConfig(HaDescriptorFactory.createServiceConfig(""bar"", ""true"", ""3"", ""5000"", null, null, null, null, null, null));"
155284,./TargetProjects/knox/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/HaDescriptorManagerTest.java,93,,"    descriptor.addServiceConfig(HaDescriptorFactory.createServiceConfig(""abc"", ""true"", ""3"", ""5000"", null, null, null, ""true"", ""abc"", null));"
155285,./TargetProjects/knox/gateway-provider-identity-assertion-common/src/test/java/org/apache/knox/gateway/identityasserter/filter/IdentityAssertionHttpServletRequestWrapperTest.java,59,,"    request.setContentType( ""application/x-www-form-urlencoded"" );"
155286,./TargetProjects/knox/gateway-provider-identity-assertion-common/src/test/java/org/apache/knox/gateway/identityasserter/filter/IdentityAssertionHttpServletRequestWrapperTest.java,60,,"    request.setMethod(""POST"");"
155287,./TargetProjects/knox/gateway-provider-identity-assertion-common/src/test/java/org/apache/knox/gateway/identityasserter/filter/IdentityAssertionHttpServletRequestWrapperTest.java,63,,"        = new IdentityAsserterHttpServletRequestWrapper( request, ""output-user"" );"
155288,./TargetProjects/knox/gateway-provider-identity-assertion-common/src/test/java/org/apache/knox/gateway/identityasserter/filter/IdentityAssertionHttpServletRequestWrapperTest.java,66,,"    assertThat( output, containsString( ""user.name=output-user"" ) );"
155289,./TargetProjects/knox/gateway-provider-identity-assertion-concat/src/test/java/org/apache/knox/gateway/identityasserter/concat/filter/ConcatIdentityAssertionFilterTest.java,39,,"    EasyMock.expect(config.getInitParameter(""principal.mapping"") ).andReturn( """" ).anyTimes();"
155290,./TargetProjects/knox/gateway-provider-identity-assertion-hadoop-groups/src/test/java/org/apache/knox/gateway/identityasserter/hadoop/groups/filter/HadoopGroupProviderFilterTest.java,68,,"    EasyMock.expect(config.getInitParameter(""principal.mapping"") ).andReturn( """" ).anyTimes();"
155291,./TargetProjects/knox/gateway-provider-identity-assertion-pseudo/src/test/java/org/apache/knox/gateway/identityasserter/filter/DefaultIdentityAssertionFilterTest.java,41,,"    EasyMock.expect(config.getInitParameter(""principal.mapping"") ).andReturn( """" ).anyTimes();"
155292,./TargetProjects/knox/gateway-provider-identity-assertion-pseudo/src/test/java/org/apache/knox/gateway/identityasserter/filter/DefaultIdentityAssertionFilterTest.java,51,,"    subject.getPrincipals().add(new PrimaryPrincipal(""lmccay""));"
155293,./TargetProjects/knox/gateway-provider-identity-assertion-pseudo/src/test/java/org/apache/knox/gateway/identityasserter/filter/DefaultIdentityAssertionFilterTest.java,52,,"    subject.getPrincipals().add(new GroupPrincipal(""users""));"
155294,./TargetProjects/knox/gateway-provider-identity-assertion-pseudo/src/test/java/org/apache/knox/gateway/identityasserter/filter/DefaultIdentityAssertionFilterTest.java,53,,"    subject.getPrincipals().add(new GroupPrincipal(""admin""));"
155295,./TargetProjects/knox/gateway-provider-identity-assertion-pseudo/src/test/java/org/apache/knox/gateway/identityasserter/filter/DefaultIdentityAssertionFilterTest.java,62,,"    EasyMock.expect(config.getInitParameter(""principal.mapping"") ).andReturn( ""lmccay,kminder=hdfs;newuser=mapred"" ).anyTimes();"
155296,./TargetProjects/knox/gateway-provider-identity-assertion-pseudo/src/test/java/org/apache/knox/gateway/identityasserter/filter/DefaultIdentityAssertionFilterTest.java,63,,"    EasyMock.expect(config.getInitParameter(""group.principal.mapping"") ).andReturn( ""kminder=group1;lmccay=mrgroup,mrducks"" ).anyTimes();"
155297,./TargetProjects/knox/gateway-provider-identity-assertion-pseudo/src/test/java/org/apache/knox/gateway/identityasserter/filter/DefaultIdentityAssertionFilterTest.java,63,,"    EasyMock.expect(config.getInitParameter(""group.principal.mapping"") ).andReturn( ""kminder=group1;lmccay=mrgroup,mrducks"" ).anyTimes();"
155298,./TargetProjects/knox/gateway-provider-identity-assertion-pseudo/src/test/java/org/apache/knox/gateway/identityasserter/filter/DefaultIdentityAssertionFilterTest.java,70,,"    assertEquals(""hdfs"", username);"
155299,./TargetProjects/knox/gateway-provider-identity-assertion-regex/src/test/java/org/apache/knox/gateway/identityasserter/regex/filter/RegexIdentityAssertionFilterTest.java,41,,"    EasyMock.expect(config.getInitParameter(""principal.mapping"") ).andReturn( """" ).anyTimes();"
155300,./TargetProjects/knox/gateway-provider-identity-assertion-regex/src/test/java/org/apache/knox/gateway/identityasserter/regex/filter/RegexIdentityAssertionFilterTest.java,68,,"    EasyMock.expect(config.getInitParameter( ""output"" ) ).andReturn( ""test-output"" ).anyTimes();"
155301,./TargetProjects/knox/gateway-provider-identity-assertion-switchcase/src/test/java/org/apache/knox/gateway/identityasserter/switchcase/SwitchCaseIdentityAssertionFilterTest.java,40,,"    EasyMock.expect(config.getInitParameter(""principal.mapping"") ).andReturn( """" ).anyTimes();"
155302,./TargetProjects/knox/gateway-provider-identity-assertion-switchcase/src/test/java/org/apache/knox/gateway/identityasserter/switchcase/SwitchCaseIdentityAssertionFilterTest.java,50,,"    subject.getPrincipals().add( new PrimaryPrincipal( ""Member@us.apache.org"" ) );"
155303,./TargetProjects/knox/gateway-provider-identity-assertion-switchcase/src/test/java/org/apache/knox/gateway/identityasserter/switchcase/SwitchCaseIdentityAssertionFilterTest.java,51,,"    subject.getPrincipals().add( new GroupPrincipal( ""users"" ) );"
155304,./TargetProjects/knox/gateway-provider-identity-assertion-switchcase/src/test/java/org/apache/knox/gateway/identityasserter/switchcase/SwitchCaseIdentityAssertionFilterTest.java,52,,"    subject.getPrincipals().add( new GroupPrincipal( ""Admin"" ) );"
155305,./TargetProjects/knox/gateway-provider-identity-assertion-switchcase/src/test/java/org/apache/knox/gateway/identityasserter/switchcase/SwitchCaseIdentityAssertionFilterTest.java,65,,"    EasyMock.expect( config.getInitParameter( ""principal.case"" ) ).andReturn( ""Upper"" ).anyTimes();"
155306,./TargetProjects/knox/gateway-provider-identity-assertion-switchcase/src/test/java/org/apache/knox/gateway/identityasserter/switchcase/SwitchCaseIdentityAssertionFilterTest.java,66,,"    EasyMock.expect( config.getInitParameter( ""group.principal.case"" ) ).andReturn( ""Upper"" ).anyTimes();"
155307,./TargetProjects/knox/gateway-provider-identity-assertion-switchcase/src/test/java/org/apache/knox/gateway/identityasserter/switchcase/SwitchCaseIdentityAssertionFilterTest.java,84,,"    assertThat( actual, is( ""MEMBER@US.APACHE.ORG"" ) );"
155308,./TargetProjects/knox/gateway-provider-identity-assertion-switchcase/src/test/java/org/apache/knox/gateway/identityasserter/switchcase/SwitchCaseIdentityAssertionFilterTest.java,118,,"    EasyMock.expect( config.getInitParameter( ""principal.case"" ) ).andReturn( ""none"" ).anyTimes();"
155309,./TargetProjects/knox/gateway-provider-jersey/src/test/java/org/apache/knox/gateway/jersey/JerseyDeploymentContributorTest.java,64,,"    assertThat( providerContributor.getRole(), is( ""pivot"" ) );"
155310,./TargetProjects/knox/gateway-provider-jersey/src/test/java/org/apache/knox/gateway/jersey/JerseyDeploymentContributorTest.java,65,,"    assertThat( providerContributor.getName(), is( ""jersey"" ) );"
155311,./TargetProjects/knox/gateway-provider-jersey/src/test/java/org/apache/knox/gateway/jersey/JerseyDeploymentContributorTest.java,101,,"    service.setRole( ""test-service-role"" );"
155312,./TargetProjects/knox/gateway-provider-rewrite-common/src/main/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlRewriteRulesDigester.java,152,,"      child.path( attributes.getValue( ""path"" ) );"
155313,./TargetProjects/knox/gateway-provider-rewrite-func-hostmap-static/src/test/java/org/apache/knox/gateway/hostmap/impl/HostmapFunctionProcessorTest.java,70,,"    EasyMock.expect( hm.resolveInboundHostName(""test-inbound-host"")).andReturn( ""test-inbound-rewritten-host"" ).anyTimes();"
155314,./TargetProjects/knox/gateway-provider-rewrite-func-hostmap-static/src/test/java/org/apache/knox/gateway/hostmap/impl/HostmapFunctionProcessorTest.java,80,,"    EasyMock.expect( environment.getResource( ""/WEB-INF/hostmap.txt"" ) ).andReturn( configUrl ).anyTimes();"
155315,./TargetProjects/knox/gateway-provider-rewrite-func-hostmap-static/src/test/java/org/apache/knox/gateway/hostmap/impl/HostmapFunctionProcessorTest.java,82,,"    EasyMock.expect( resolver.resolve( ""host"" ) ).andReturn(Collections.singletonList(""test-inbound-host"")).anyTimes();"
155316,./TargetProjects/knox/gateway-provider-rewrite-func-hostmap-static/src/test/java/org/apache/knox/gateway/hostmap/impl/HostmapFunctionProcessorTest.java,86,,"    UrlRewriteRuleDescriptor rule = descriptor.addRule( ""test-rule"" );"
155317,./TargetProjects/knox/gateway-provider-rewrite-func-hostmap-static/src/test/java/org/apache/knox/gateway/hostmap/impl/HostmapFunctionProcessorTest.java,87,,"    rule.pattern( ""{*}://{host}:{*}/{**}?{**}"" );"
155318,./TargetProjects/knox/gateway-provider-rewrite-func-hostmap-static/src/test/java/org/apache/knox/gateway/hostmap/impl/HostmapFunctionProcessorTest.java,88,,"    UrlRewriteActionRewriteDescriptorExt rewrite = rule.addStep( ""rewrite"" );"
155319,./TargetProjects/knox/gateway-provider-rewrite-func-hostmap-static/src/test/java/org/apache/knox/gateway/hostmap/impl/HostmapFunctionProcessorTest.java,94,,"    Template input = Parser.parseLiteral( ""test-scheme://test-inbound-host:42/test-path/test-file?test-name=test-value"" );"
155320,./TargetProjects/knox/gateway-provider-rewrite-func-hostmap-static/src/test/java/org/apache/knox/gateway/hostmap/impl/HostmapFunctionProcessorTest.java,124,,"    assertThat( output.getQuery().get( ""server"" ).getFirstValue().getPattern(), is( ""test-external-host"" ) );"
155321,./TargetProjects/knox/gateway-provider-rewrite-func-hostmap-static/src/test/java/org/apache/knox/gateway/hostmap/impl/HostmapFunctionProcessorTest.java,126,,"    assertThat( output.getQuery().get( ""test-name-1"" ).getFirstValue().getPattern(), is( ""test-value-1"" ) );"
155322,./TargetProjects/knox/gateway-provider-rewrite-func-hostmap-static/src/test/java/org/apache/knox/gateway/hostmap/impl/HostmapFunctionProcessorTest.java,128,,"    assertThat( output.getQuery().get( ""test-name-2"" ).getFirstValue().getPattern(), is( ""test-value-2"" ) );"
155323,./TargetProjects/knox/gateway-provider-rewrite-func-inbound-query-param/src/test/java/org/apache/knox/gateway/inboundurl/impl/InboundUrlFunctionProcessorTest.java,96,,"    assertThat( result.get(0), is( ""http://foo:50075"" ) );"
155324,./TargetProjects/knox/gateway-provider-rewrite-func-service-registry/src/test/java/org/apache/knox/gateway/svcregfunc/impl/ServiceMappedAddressFunctionProcessorTest.java,64,,"    EasyMock.expect( hms.getHostMapper( ""test-cluster"" ) ).andReturn( hm ).anyTimes();"
155325,./TargetProjects/knox/gateway-provider-rewrite-func-service-registry/src/test/java/org/apache/knox/gateway/svcregfunc/impl/ServiceMappedHostFunctionProcessorTest.java,64,,"    EasyMock.expect( hms.getHostMapper( ""test-cluster"" ) ).andReturn( hm ).anyTimes();"
155326,./TargetProjects/knox/gateway-provider-rewrite-func-service-registry/src/test/java/org/apache/knox/gateway/svcregfunc/impl/ServiceMappedUrlFunctionProcessorTest.java,64,,"    EasyMock.expect( hms.getHostMapper( ""test-cluster"" ) ).andReturn( hm ).anyTimes();"
155327,./TargetProjects/knox/gateway-provider-rewrite-func-service-registry/src/test/java/org/apache/knox/gateway/svcregfunc/impl/ServiceRegistryFunctionsTest.java,131,,"        .method( ""PUT"" )"
155328,./TargetProjects/knox/gateway-provider-rewrite-func-service-registry/src/test/java/org/apache/knox/gateway/svcregfunc/impl/ServiceUrlFunctionProcessorTest.java,64,,"    EasyMock.expect( hms.getHostMapper( ""test-cluster"" ) ).andReturn( hm ).anyTimes();"
155329,./TargetProjects/knox/gateway-provider-rewrite-step-secure-query/src/test/java/org/apache/knox/gateway/securequery/SecureQueryEncryptDecryptProcessorTest.java,55,,"    EasyMock.expect( as.getPasswordFromAliasForCluster(""test-cluster-name"", ""encryptQueryString"")).andReturn( secret.toCharArray() ).anyTimes();"
155330,./TargetProjects/knox/gateway-provider-rewrite-step-secure-query/src/test/java/org/apache/knox/gateway/securequery/SecureQueryEncryptDecryptProcessorTest.java,55,,"    EasyMock.expect( as.getPasswordFromAliasForCluster(""test-cluster-name"", ""encryptQueryString"")).andReturn( secret.toCharArray() ).anyTimes();"
155331,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteProcessorTest.java,79,,"        ""xml"", getTestResourceReader( ""rewrite.xml"" ) );"
155332,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteProcessorTest.java,85,,"    assertThat( ""Expect rewrite to produce a new URL"","
155333,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteProcessorTest.java,88,,"        ""Expect rewrite to contain the correct path."","
155334,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteRulesDescriptorFactoryTest.java,92,,"      UrlRewriteRulesDescriptorFactory.load( ""xml"", getTestResourceReader( ""missing.xml"" ) );"
155335,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteRulesDescriptorFactoryTest.java,106,,"      fail( ""Should have thrown an IOException."" );"
155336,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,118,,"        .method( ""GET"" )"
155337,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,119,,"        .requestUrl( ""http://mock-host:1/test-output-path-1"" );"
155338,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,124,,"    request.setURI( ""/test-input-path"" );"
155339,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,126,,"    request.setHeader( ""Host"", ""mock-host:1"" );"
155340,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,126,,"    request.setHeader( ""Host"", ""mock-host:1"" );"
155341,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,142,,"        .header( ""Location"", ""http://mock-host:1/test-output-path-1"" );"
155342,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,246,,"        .method( ""PUT"" )"
155343,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,257,,"    request.setHeader( ""Content-Type"", ""application/json; charset=UTF-8"" );"
155344,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,392,,"    String input = ""<root/>"";"
155345,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,398,,"        .requestUrl( ""http://mock-host:42/test-output-path-2"" )"
155346,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,399,,"        .contentType( ""text/xml"" )"
155347,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,408,,"    request.setHeader( ""Host"", ""mock-host:42"" );"
155348,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,409,,"    request.setHeader( ""Content-Type"", ""text/xml; charset=UTF-8"" );"
155349,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,422,,"    initParams.put( ""request.headers"", ""test-filter-2"" );"
155350,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,431,,"        .requestUrl( ""http://mock-host:42/test-output-path-1"" )"
155351,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,465,,"    initParams.put( ""request.body"", ""test-filter-2"" );"
155352,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,645,,"    initParams.put( ""response.body"", ""test-filter-2"" );"
155353,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,682,,"    String responseHtml = ""<!DOCTYPE html>\n"" +"
155354,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,683,,"        ""<html>\n"" +"
155355,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,684,,"        ""  <head>\n"" +"
155356,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,685,,"        ""    <meta charset=\""UTF-8\"">\n"" +"
155357,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,688,,"        ""  </head>\n"" +"
155358,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,689,,"        ""  <body>\n"" +"
155359,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,690,,"        ""  </body>\n"" +"
155360,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,691,,"        ""</html>"";"
155361,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/api/UrlRewriteServletFilterTest.java,708,,"        .contentType( ""application/html"" )"
155362,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/CookieScopeResponseWrapperTest.java,48,,"    underTest.addHeader(""Set-Cookie"", ""SESSIONID=jn0zexg59r1jo1n66hd7tg5anl;HttpOnly;"");"
155363,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/CookieScopeResponseWrapperTest.java,57,,"    underTest.addHeader(""Set-Cookie"", ""SESSIONID=jn0zexg59r1jo1n66hd7tg5anl; Path=/; HttpOnly;"");"
155364,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/CookieScopeResponseWrapperTest.java,65,,"    CookieScopeResponseWrapper underTest = new CookieScopeResponseWrapper(mock, ""some/path"");"
155365,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/FrontendFunctionProcessorTest.java,129,,"    EasyMock.expect( mockServiceRegistry.lookupServiceURL( ""test-cluster"", ""NAMENODE"" ) ).andReturn( ""test-nn-scheme://test-nn-host:411"" ).anyTimes();"
155366,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/FrontendFunctionProcessorTest.java,184,,"        .method( ""GET"" )"
155367,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/UrlRewriteRequestTest.java,61,,"    EasyMock.expect( context.getServletContextName() ).andReturn( ""test-cluster-name"" ).anyTimes();"
155368,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/UrlRewriteRequestTest.java,62,,"    EasyMock.expect( context.getInitParameter( ""test-init-param-name"" ) ).andReturn( ""test-init-param-value"" ).anyTimes();"
155369,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/UrlRewriteRequestTest.java,62,,"    EasyMock.expect( context.getInitParameter( ""test-init-param-name"" ) ).andReturn( ""test-init-param-value"" ).anyTimes();"
155370,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/UrlRewriteRequestTest.java,66,,"    EasyMock.expect( config.getInitParameter( ""test-filter-init-param-name"" ) ).andReturn( ""test-filter-init-param-value"" ).anyTimes();"
155371,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/UrlRewriteRequestTest.java,66,,"    EasyMock.expect( config.getInitParameter( ""test-filter-init-param-name"" ) ).andReturn( ""test-filter-init-param-value"" ).anyTimes();"
155372,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/UrlRewriteRequestTest.java,70,,"    EasyMock.expect( request.getScheme()).andReturn(""https"").anyTimes();"
155373,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/UrlRewriteRequestTest.java,71,,"    EasyMock.expect( request.getServerName()).andReturn(""targethost.com"").anyTimes();"
155374,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/UrlRewriteRequestTest.java,75,,"    EasyMock.expect( request.getHeader(""Host"")).andReturn(""sourcehost.com"").anyTimes();"
155375,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/UrlRewriteRequestTest.java,75,,"    EasyMock.expect( request.getHeader(""Host"")).andReturn(""sourcehost.com"").anyTimes();"
155376,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/UrlRewriteRequestTest.java,271,,"    EasyMock.expect(request2.getContentType()).andReturn(""application/gzip"").anyTimes();"
155377,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/UrlRewriteStepProcessorStateTest.java,61,,"    holder.initialize( new FakeEnvironment(), new FakeActionDescriptor( ""one"" ), new FakeActionProcessor( ""one"" ) );"
155378,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/UrlRewriteStepProcessorStateTest.java,64,,"    holder.initialize( new FakeEnvironment(), new FakeActionDescriptor( ""two"" ), new FakeActionProcessor( ""two"" ) );"
155379,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/html/HtmlFilterReaderBaseTest.java,218,,"    map.put( ""input-text"", ""output-text"" );"
155380,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/html/HtmlFilterReaderBaseTest.java,307,,"    rules.put( ""test-rule"", map );"
155381,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/html/HtmlFilterReaderBaseTest.java,309,,"        ""<root>\n"" +"
155382,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/html/HtmlFilterReaderBaseTest.java,310,,"        ""  <script type=\""text/javascript\"">\n"" +"
155383,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/html/HtmlFilterReaderBaseTest.java,311,,"        ""    var appsTableData=[\n"" +"
155384,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/html/HtmlFilterReaderBaseTest.java,315,,"        ""    ]\n"" +"
155385,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/html/HtmlFilterReaderBaseTest.java,316,,"        ""  </script>\n"" +"
155386,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/html/HtmlFilterReaderBaseTest.java,317,,"        ""</root>\n"";"
155387,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/javascript/JavaScriptFilterReaderTest.java,87,,"    config.addApply( ""/webhdfs/v1"", ""test-rule"" );"
155388,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/json/JsonFilterReaderTest.java,53,,"    UrlRewriteFilterDescriptor filterConfig = rulesConfig.addFilter( ""filter-1"" );"
155389,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/json/JsonFilterReaderTest.java,54,,"    UrlRewriteFilterContentDescriptor contentConfig = filterConfig.addContent( ""text/json"" );"
155390,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/json/JsonFilterReaderTest.java,56,,"    UrlRewriteFilterApplyDescriptor applyConfig = bufferConfig.addApply( ""$.id"", ""test-rule"" );"
155391,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/json/JsonFilterReaderTest.java,250,,"    UrlRewriteFilterDetectDescriptor detectConfig = bufferConfig.addDetect( ""$.name<property-name>"", ""test-name-2"" );"
155392,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlFilterReaderTest.java,116,,"    assertThat( the( outputHtml ), hasXPath( ""/root"" ) );"
155393,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlFilterReaderTest.java,122,,"    UrlRewriteFilterDescriptor filterConfig = rulesConfig.addFilter( ""filter-1"" );"
155394,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlFilterReaderTest.java,123,,"    UrlRewriteFilterContentDescriptor contentConfig = filterConfig.addContent( ""text/xml"" );"
155395,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlFilterReaderTest.java,238,,"    map.put( ""input-text"", ""output-text"" );"
155396,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlFilterReaderTest.java,710,,"    UrlRewriteFilterApplyDescriptor applyConfig = contentConfig.addApply( ""/properties/property/value/text()"", ""test-rule-2"" );"
155397,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlFilterReaderTest.java,716,,"    assertThat( the( output ), hasXPath( ""/properties/property[1]/name/text()"", equalTo( ""test-name-1"" ) ) );"
155398,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlFilterReaderTest.java,718,,"    assertThat( the( output ), hasXPath( ""/properties/property[2]/name/text()"", equalTo( ""test-name-2"" ) ) );"
155399,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlFilterReaderTest.java,720,,"    assertThat( the( output ), hasXPath( ""/properties/property[3]/name/text()"", equalTo( ""test-name-3"" ) ) );"
155400,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlUrlRewriteRulesExporterTest.java,46,,"    UrlRewriteRulesDescriptorFactory.store( rules, ""xml"", writer );"
155401,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlUrlRewriteRulesExporterTest.java,49,,"    assertThat( XmlConverters.the( xml ), XmlMatchers.hasXPath( ""/rules"" ) );"
155402,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlUrlRewriteRulesExporterTest.java,63,,"    assertThat( xml, XmlMatchers.hasXPath( ""/rules/rule"" ) );"
155403,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlUrlRewriteRulesExporterTest.java,64,,"    assertThat( xml, XmlMatchers.hasXPath( ""count(/rules/rule)"", is( ""1"" ) ) );"
155404,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlUrlRewriteRulesExporterTest.java,65,,"    assertThat( xml, XmlMatchers.hasXPath( ""/rules/rule/@name"", is( ""first"" ) ) );"
155405,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlUrlRewriteRulesExporterTest.java,72,,"    UrlRewriteRuleDescriptor rule = rules.addRule( ""test-rule"" ).pattern(""test-pattern-rule"");"
155406,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlUrlRewriteRulesExporterTest.java,73,,"    UrlRewriteMatchDescriptor match = rule.addStep( ""match"" );"
155407,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlUrlRewriteRulesExporterTest.java,74,,"    match.operation(""test-operation"").pattern( ""test-pattern-step"" ).flow( ""all"" );"
155408,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlUrlRewriteRulesExporterTest.java,97,,"    UrlRewriteControlDescriptor control = rule.addStep( ""control"" );"
155409,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlUrlRewriteRulesExporterTest.java,118,,"    UrlRewriteCheckDescriptor step = rule.addStep( ""check"" );"
155410,./TargetProjects/knox/gateway-provider-rewrite/src/test/java/org/apache/knox/gateway/filter/rewrite/impl/xml/XmlUrlRewriteRulesExporterTest.java,141,,"    UrlRewriteActionRewriteDescriptorExt step = rule.addStep( ""rewrite"" );"
155411,./TargetProjects/knox/gateway-provider-security-authz-acls/src/test/java/org/apache/knox/gateway/filter/AclParserTest.java,35,,"    p.parseAcls(""test"", ""guest;*;*"");"
155412,./TargetProjects/knox/gateway-provider-security-authz-acls/src/test/java/org/apache/knox/gateway/filter/AclParserTest.java,36,,"    assertTrue(p.users.contains(""guest""));"
155413,./TargetProjects/knox/gateway-provider-security-authz-acls/src/test/java/org/apache/knox/gateway/filter/AclParserTest.java,45,,"    assertTrue(p.groups.contains(""admins""));"
155414,./TargetProjects/knox/gateway-provider-security-authz-acls/src/test/java/org/apache/knox/gateway/filter/AclParserTest.java,55,,"    assertTrue(p.ipv.getIPAddresses().contains(""127.0.0.1""));"
155415,./TargetProjects/knox/gateway-provider-security-authz-acls/src/test/java/org/apache/knox/gateway/filter/AclParserTest.java,151,,"      fail(""Invalid acl should have thrown InvalidACLException."");"
155416,./TargetProjects/knox/gateway-provider-security-authz-acls/src/test/java/org/apache/knox/gateway/filter/AclParserTest.java,154,,"      assertEquals(""Invalid ACLs specified for requested resource: test"", sle.getMessage());"
155417,./TargetProjects/knox/gateway-provider-security-authz-acls/src/test/java/org/apache/knox/gateway/filter/AclsAuthzFilterTest.java,71,,"    EasyMock.expect(config.getInitParameter(""knox.admin.users"")).andReturn(null);"
155418,./TargetProjects/knox/gateway-provider-security-authz-acls/src/test/java/org/apache/knox/gateway/filter/AclsAuthzFilterTest.java,72,,"    EasyMock.expect(config.getInitParameter(""knox.admin.groups"")).andReturn(""admin"");"
155419,./TargetProjects/knox/gateway-provider-security-authz-acls/src/test/java/org/apache/knox/gateway/filter/AclsAuthzFilterTest.java,72,,"    EasyMock.expect(config.getInitParameter(""knox.admin.groups"")).andReturn(""admin"");"
155420,./TargetProjects/knox/gateway-provider-security-authz-acls/src/test/java/org/apache/knox/gateway/filter/AclsAuthzFilterTest.java,73,,"    EasyMock.expect(config.getInitParameter(""resource.role"")).andReturn(""KNOX"");"
155421,./TargetProjects/knox/gateway-provider-security-authz-acls/src/test/java/org/apache/knox/gateway/filter/AclsAuthzFilterTest.java,73,,"    EasyMock.expect(config.getInitParameter(""resource.role"")).andReturn(""KNOX"");"
155422,./TargetProjects/knox/gateway-provider-security-authz-acls/src/test/java/org/apache/knox/gateway/filter/AclsAuthzFilterTest.java,74,,"    EasyMock.expect(config.getInitParameter(""knox.acl.mode"")).andReturn(""OR"");"
155423,./TargetProjects/knox/gateway-provider-security-authz-acls/src/test/java/org/apache/knox/gateway/filter/AclsAuthzFilterTest.java,75,,"    EasyMock.expect(config.getInitParameter(""knox.acl"")).andReturn(""*;KNOX_ADMIN_GROUPS;*"");"
155424,./TargetProjects/knox/gateway-provider-security-authz-acls/src/test/java/org/apache/knox/gateway/filter/AclsAuthzFilterTest.java,94,,"    subject.getPrincipals().add(new PrimaryPrincipal(""larry""));"
155425,./TargetProjects/knox/gateway-provider-security-authz-acls/src/test/java/org/apache/knox/gateway/filter/AclsAuthzFilterTest.java,95,,"    subject.getPrincipals().add(new GroupPrincipal(""users""));"
155426,./TargetProjects/knox/gateway-provider-security-authz-acls/src/test/java/org/apache/knox/gateway/filter/AclsAuthzFilterTest.java,180,,"    EasyMock.expect(config.getInitParameter(""knox.admin.users"")).andReturn(""adminuser"");"
155427,./TargetProjects/knox/gateway-provider-security-hadoopauth/src/test/java/org/apache/knox/gateway/hadoopauth/filter/HadoopAuthFilterTest.java,88,,"    props.put(configPrefix + ""test"", ""abc"");"
155428,./TargetProjects/knox/gateway-provider-security-hadoopauth/src/test/java/org/apache/knox/gateway/hadoopauth/filter/HadoopAuthFilterTest.java,113,,"    expect(servletContext.getAttribute(""signer.secret.provider.object"")).andReturn(null).atLeastOnce();"
155429,./TargetProjects/knox/gateway-provider-security-hadoopauth/src/test/java/org/apache/knox/gateway/hadoopauth/filter/HadoopAuthFilterTest.java,116,,"    expect(filterConfig.getInitParameter(""config.prefix""))"
155430,./TargetProjects/knox/gateway-provider-security-hadoopauth/src/test/java/org/apache/knox/gateway/hadoopauth/filter/HadoopAuthFilterTest.java,117,,"        .andReturn(""some.prefix"")"
155431,./TargetProjects/knox/gateway-provider-security-hadoopauth/src/test/java/org/apache/knox/gateway/hadoopauth/filter/HadoopAuthFilterTest.java,125,,"    expect(filterConfig.getInitParameter(""support.jwt"")).andReturn(""false"").anyTimes();"
155432,./TargetProjects/knox/gateway-provider-security-hadoopauth/src/test/java/org/apache/knox/gateway/hadoopauth/filter/HadoopAuthFilterTest.java,125,,"    expect(filterConfig.getInitParameter(""support.jwt"")).andReturn(""false"").anyTimes();"
155433,./TargetProjects/knox/gateway-provider-security-hadoopauth/src/test/java/org/apache/knox/gateway/hadoopauth/filter/HadoopAuthFilterTest.java,127,,"    expect(filterConfig.getInitParameter(""hadoop.auth.unauthenticated.path.list"")).andReturn(null).anyTimes();"
155434,./TargetProjects/knox/gateway-provider-security-hadoopauth/src/test/java/org/apache/knox/gateway/hadoopauth/filter/HadoopAuthFilterTest.java,134,,"      if (""type"".equals(args[0])) {"
155435,./TargetProjects/knox/gateway-provider-security-hadoopauth/src/test/java/org/apache/knox/gateway/hadoopauth/filter/HadoopAuthFilterTest.java,135,,"        return ""simple""; // This is ""simple"", rather than ""kerberos"" to avoid the super class' init logic"
155436,./TargetProjects/knox/gateway-provider-security-hadoopauth/src/test/java/org/apache/knox/gateway/hadoopauth/filter/HadoopAuthFilterTest.java,142,,"        .addMockedMethod(""getConfiguration"", String.class, FilterConfig.class)"
155437,./TargetProjects/knox/gateway-provider-security-hadoopauth/src/test/java/org/apache/knox/gateway/hadoopauth/filter/HadoopAuthFilterTest.java,145,,"    expect(hadoopAuthFilter.getConfiguration(eq(""some.prefix.""), eq(filterConfig)))"
155438,./TargetProjects/knox/gateway-provider-security-hadoopauth/src/test/java/org/apache/knox/gateway/hadoopauth/filter/HadoopAuthFilterTest.java,187,,"    expect(filterConfig.getInitParameter(GatewayConfig.PROXYUSER_SERVICES_IGNORE_DOAS)).andReturn(""service"").atLeastOnce();"
155439,./TargetProjects/knox/gateway-provider-security-hadoopauth/src/test/java/org/apache/knox/gateway/hadoopauth/filter/HadoopAuthFilterTest.java,252,,"    EasyMock.expect(request_semicolon.getPathInfo()).andReturn(""/knoxtoken/api/v1/token;favicon.ico"").anyTimes();"
155440,./TargetProjects/knox/gateway-provider-security-hadoopauth/src/test/java/org/apache/knox/gateway/hadoopauth/filter/HadoopAuthFilterTest.java,271,,"    Assert.assertFalse(""doFilterCalled should be false."", chain.doFilterCalled );"
155441,./TargetProjects/knox/gateway-provider-security-hadoopauth/src/test/java/org/apache/knox/gateway/hadoopauth/filter/HadoopAuthFilterTest.java,274,,"    Assert.assertEquals(""Authentication required"", capturedErrorMessage.getValue());"
155442,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/AbstractJWTFilterTest.java,145,,"                           ""alice"","
155443,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/AbstractJWTFilterTest.java,146,,"                           ""bar"","
155444,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/AbstractJWTFilterTest.java,157,,"    EasyMock.expect(request.getPathInfo()).andReturn(""resource"").anyTimes();"
155445,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/AbstractJWTFilterTest.java,190,,"      Assert.assertTrue(""doFilterCalled should not be false."", chain.doFilterCalled );"
155446,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/AbstractJWTFilterTest.java,192,,"      Assert.assertFalse(""No PrimaryPrincipal"", principals.isEmpty());"
155447,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/AbstractJWTFilterTest.java,193,,"      Assert.assertEquals(""Not the expected principal"", ""alice"", ((Principal)principals.toArray()[0]).getName());"
155448,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/AbstractJWTFilterTest.java,195,,"      fail(""Should NOT have thrown a ServletException."");"
155449,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/AbstractJWTFilterTest.java,255,,"      Assert.assertFalse(""doFilterCalled should not be true."", chain.doFilterCalled);"
155450,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/AbstractJWTFilterTest.java,256,,"      Assert.assertNull(""No Subject should be returned."", chain.subject);"
155451,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/SSOCookieProviderTest.java,156,,"    Assert.assertNotNull(""LoginURL should not be null."", loginURL);"
155452,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/SSOCookieProviderTest.java,163,,"    props.setProperty(""gateway.path"", ""gateway"");"
155453,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/SSOCookieProviderTest.java,169,,"    EasyMock.expect(request.getScheme()).andReturn(""https"").anyTimes();"
155454,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/SSOCookieProviderTest.java,195,,"    EasyMock.expect(request.getRequestURL()).andReturn(new StringBuffer(""https://remotehost:8443/resource"")).anyTimes();"
155455,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/SSOCookieProviderTest.java,249,,"    EasyMock.expect(request.getRequestURL()).andReturn(new StringBuffer(""https://remotehost/resource"")).anyTimes();"
155456,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/TokenIDAsHTTPBasicCredsFederationFilterTest.java,148,,"            SignedJWT jwt = getJWT(AbstractJWTFilter.JWT_DEFAULT_ISSUER, ""bob"","
155457,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/TokenIDAsHTTPBasicCredsFederationFilterTest.java,155,,"            EasyMock.expect(request.getPathInfo()).andReturn(""resource"").anyTimes();"
155458,./TargetProjects/knox/gateway-provider-security-jwt/src/test/java/org/apache/knox/gateway/provider/federation/TokenIDAsHTTPBasicCredsFederationFilterTest.java,166,,"            fail(""Should NOT have thrown a ServletException."");"
155459,./TargetProjects/knox/gateway-provider-security-pac4j/src/test/java/org/apache/knox/gateway/pac4j/Pac4jProviderTest.java,111,,"        assertEquals(PAC4J_CALLBACK_URL + ""?"" + Pac4jDispatcherFilter.PAC4J_CALLBACK_PARAMETER + ""=true&"" + Pac4jConstants.DEFAULT_CLIENT_NAME_PARAMETER + ""="" + CLIENT_CLASS, response.getHeaders().get(""Location""));"
155460,./TargetProjects/knox/gateway-provider-security-pac4j/src/test/java/org/apache/knox/gateway/pac4j/Pac4jProviderTest.java,111,,"        assertEquals(PAC4J_CALLBACK_URL + ""?"" + Pac4jDispatcherFilter.PAC4J_CALLBACK_PARAMETER + ""=true&"" + Pac4jConstants.DEFAULT_CLIENT_NAME_PARAMETER + ""="" + CLIENT_CLASS, response.getHeaders().get(""Location""));"
155461,./TargetProjects/knox/gateway-provider-security-shiro/src/test/java/org/apache/knox/gateway/shirorealm/KnoxLdapRealmTest.java,68,,"    realm.setUserSearchBase(""dc=knox,dc=example,dc=com"");"
155462,./TargetProjects/knox/gateway-server-xforwarded-filter/src/test/java/org/apache/knox/gateway/filter/XForwardHeaderFilterTest.java,37,,"      assertThat( request.getHeader( ""X-Forwarded-For"" ), is( ""127.0.0.1"" ) );"
155463,./TargetProjects/knox/gateway-server-xforwarded-filter/src/test/java/org/apache/knox/gateway/filter/XForwardHeaderFilterTest.java,37,,"      assertThat( request.getHeader( ""X-Forwarded-For"" ), is( ""127.0.0.1"" ) );"
155464,./TargetProjects/knox/gateway-server-xforwarded-filter/src/test/java/org/apache/knox/gateway/filter/XForwardHeaderFilterTest.java,38,,"      assertThat( request.getHeader( ""X-Forwarded-Proto"" ), is( ""http"" ) );"
155465,./TargetProjects/knox/gateway-server-xforwarded-filter/src/test/java/org/apache/knox/gateway/filter/XForwardHeaderFilterTest.java,39,,"      assertThat( request.getHeader( ""X-Forwarded-Port"" ), is( ""8888"" ) );"
155466,./TargetProjects/knox/gateway-server-xforwarded-filter/src/test/java/org/apache/knox/gateway/filter/XForwardHeaderFilterTest.java,40,,"      assertThat( request.getHeader( ""X-Forwarded-Host"" ), is( ""localhost:8888"" ) );"
155467,./TargetProjects/knox/gateway-server-xforwarded-filter/src/test/java/org/apache/knox/gateway/filter/XForwardHeaderFilterTest.java,40,,"      assertThat( request.getHeader( ""X-Forwarded-Host"" ), is( ""localhost:8888"" ) );"
155468,./TargetProjects/knox/gateway-server-xforwarded-filter/src/test/java/org/apache/knox/gateway/filter/XForwardHeaderFilterTest.java,41,,"      assertThat( request.getHeader( ""X-Forwarded-Server"" ), is( ""localhost"" ) );"
155469,./TargetProjects/knox/gateway-server-xforwarded-filter/src/test/java/org/apache/knox/gateway/filter/XForwardHeaderFilterTest.java,41,,"      assertThat( request.getHeader( ""X-Forwarded-Server"" ), is( ""localhost"" ) );"
155470,./TargetProjects/knox/gateway-server-xforwarded-filter/src/test/java/org/apache/knox/gateway/filter/XForwardHeaderFilterTest.java,42,,"      assertThat( request.getHeader( ""X-Forwarded-Context"" ), is( ""/context"" ) );"
155471,./TargetProjects/knox/gateway-server-xforwarded-filter/src/test/java/org/apache/knox/gateway/filter/XForwardHeaderFilterTest.java,52,,"    EasyMock.expect( request.getHeader( ""Host"" ) ).andReturn( ""localhost:8888"" ).anyTimes();"
155472,./TargetProjects/knox/gateway-server-xforwarded-filter/src/test/java/org/apache/knox/gateway/filter/XForwardHeaderFilterTest.java,71,,"      assertThat( request.getHeader( ""X-Forwarded-Proto"" ), is( ""https"" ) );"
155473,./TargetProjects/knox/gateway-server-xforwarded-filter/src/test/java/org/apache/knox/gateway/filter/XForwardHeaderFilterTest.java,72,,"      assertThat( request.getHeader( ""X-Forwarded-Port"" ), is( ""9999"" ) );"
155474,./TargetProjects/knox/gateway-server-xforwarded-filter/src/test/java/org/apache/knox/gateway/filter/XForwardHeaderFilterTest.java,73,,"      assertThat( request.getHeader( ""X-Forwarded-Host"" ), is( ""remotehost:9999"" ) );"
155475,./TargetProjects/knox/gateway-server-xforwarded-filter/src/test/java/org/apache/knox/gateway/filter/XForwardHeaderFilterTest.java,130,,"        assertThat( request.getHeader( ""X-Forwarded-Context"" ), is( ""/gateway/sandbox"" ) );"
155476,./TargetProjects/knox/gateway-server-xforwarded-filter/src/test/java/org/apache/knox/gateway/filter/XForwardHeaderFilterTest.java,139,,"    EasyMock.expect( request.getHeader( ""X-Forwarded-For"" ) ).andReturn( ""127.0.0.0"" ).anyTimes();"
155477,./TargetProjects/knox/gateway-server-xforwarded-filter/src/test/java/org/apache/knox/gateway/filter/XForwardHeaderFilterTest.java,143,,"    EasyMock.expect( request.getHeader( ""X-Forwarded-Server"" ) ).andReturn( ""remotehost"" ).anyTimes();"
155478,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/config/impl/GatewayConfigImpl.java,519,,"    return Boolean.parseBoolean(get( HADOOP_KERBEROS_SECURED, ""false"" ));"
155479,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/config/impl/GatewayConfigImpl.java,562,,"    if (!""none"".equals(value)) {"
155480,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/config/impl/GatewayConfigImpl.java,563,,"      protocols = Arrays.asList(value.split(""\\s*,\\s*""));"
155481,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/deploy/impl/ServiceDefinitionDeploymentContributor.java,144,,"        filter.param().name(APPEND_SERVICE_NAME_PARAM).value(""true"");"
155482,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/services/token/impl/JDBCTokenStateService.java,86,,"        throw new TokenStateServiceException(""Failed to save token "" + Tokens.getTokenIDDisplayText(tokenId) + "" in the database"");"
155483,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/services/token/impl/TokenStateDatabase.java,50,,"  private static final String REMOVE_TOKEN_SQL = ""DELETE FROM "" + TOKENS_TABLE_NAME + "" WHERE token_id = ?"";"
155484,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/topology/xml/KnoxFormatXmlTopologyRules.java,35,,"  private static final String NAME_TAG = ""name"";"
155485,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/topology/xml/KnoxFormatXmlTopologyRules.java,73,,"    forPattern( ROOT_TAG + ""/"" + APPLICATION_TAG + ""/"" + PARAM_TAG ).createObject().ofType( Param.class ).then().addRule( paramRule ).then().setNext( ""addParam"" );"
155486,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/util/KnoxCLI.java,108,,"      ""   ["" + VersionCommand.USAGE + ""]\n"" +"
155487,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/util/KnoxCLI.java,108,,"      ""   ["" + VersionCommand.USAGE + ""]\n"" +"
155488,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/util/KnoxCLI.java,232,,"        if ((args.length > i + 1) && args[i + 1].equals(""--help"")) {"
155489,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/util/KnoxCLI.java,526,,"      out.println( VersionCommand.USAGE + ""\n\n"" + VersionCommand.DESC );"
155490,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/util/KnoxCLI.java,644,,"       cluster = ""__gateway"";"
155491,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/util/KnoxCLI.java,662,,"     return USAGE + "":\n\n"" + DESC;"
155492,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/util/KnoxCLI.java,710,,"            out.println(""Certificate gateway-identity has been successfully exported to: "" + keyStoreDir + ""gateway-identity.pem"");"
155493,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/util/KnoxCLI.java,792,,"           out.println(""Certificate "" + config.getIdentityKeyAlias() + "" has been successfully created."");"
155494,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/util/KnoxCLI.java,1147,,"            if(f.getName().endsWith("".xml"")) {"
155495,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/util/KnoxCLI.java,1289,,"      Provider shiro = topology.getProvider(""authentication"", ""ShiroProvider"");"
155496,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/util/KnoxCLI.java,1289,,"      Provider shiro = topology.getProvider(""authentication"", ""ShiroProvider"");"
155497,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/util/KnoxCLI.java,1339,,"              out.println(userSearchAttributeName + "" or "" + userObjectClass + "" or "" + searchBase + "" or "" + userSearchBase + "" was found in the topology"");"
155498,./TargetProjects/knox/gateway-server/src/main/java/org/apache/knox/gateway/util/KnoxCLI.java,1431,,"        ini.addSection(""main"");"
155499,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/GatewayFilterTest.java,72,,"        ""Custom-Forwarded-For"").anyTimes();"
155500,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/GatewayFilterTest.java,158,,"    request.setAttribute( AbstractGatewayFilter.TARGET_SERVICE_ROLE, ""test-role"" );"
155501,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/GatewayGlobalConfigTest.java,66,,"    System.setProperty( GatewayConfigImpl.GATEWAY_HOME_VAR, getHomeDirName( ""conf-site/conf/gateway-site.xml"" ) );"
155502,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/GatewayGlobalConfigTest.java,103,,"    String homeDirName = getHomeDirName(""conf-demo/conf/gateway-site.xml"");"
155503,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/GatewayGlobalConfigTest.java,141,,"        + ""DataDirSystemProperty"");"
155504,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/GatewayPortMappingConfigTest.java,77,,"    topologyPortMapping.put(""eerie"", eeriePort);"
155505,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/config/impl/GatewayConfigImplTest.java,122,,"    config.set( ""ssl.include.ciphers"", ""none"" );"
155506,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/config/impl/GatewayConfigImplTest.java,128,,"    config.set( ""ssl.include.ciphers"", ""ONE"" );"
155507,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/config/impl/GatewayConfigImplTest.java,135,,"    assertThat( config.getIncludedSSLCiphers(), is(hasItems(""ONE"",""TWO"")) );"
155508,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/config/impl/GatewayConfigImplTest.java,138,,"    assertThat( config.getIncludedSSLCiphers(), is(hasItems(""ONE"",""TWO"",""THREE"")) );"
155509,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/config/impl/GatewayConfigImplTest.java,146,,"    config.set( ""ssl.exclude.ciphers"", ""none"" );"
155510,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/config/impl/GatewayConfigImplTest.java,329,,"    config.set(""gateway.tls.key.alias"", ""custom_key_alias"");"
155511,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/config/impl/GatewayConfigImplTest.java,330,,"    config.set(""gateway.tls.key.passphrase.alias"", ""custom_key_passphrase_alias"");"
155512,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/config/impl/GatewayConfigImplTest.java,332,,"    config.set(""gateway.tls.keystore.type"", ""PKCS12"");"
155513,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/config/impl/GatewayConfigImplTest.java,333,,"    config.set(""gateway.tls.keystore.password.alias"", ""custom_keystore_password_alias"");"
155514,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/config/impl/GatewayConfigImplTest.java,364,,"    config.set(""gateway.httpclient.truststore.password.alias"", ""custom_password_alias"");"
155515,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/config/impl/GatewayConfigImplTest.java,365,,"    config.set(""gateway.httpclient.truststore.path"", ""custom_path"");"
155516,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/config/impl/GatewayConfigImplTest.java,366,,"    config.set(""gateway.httpclient.truststore.type"", ""custom_type"");"
155517,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/config/impl/GatewayConfigImplTest.java,414,,"    assertEquals("""", gatewayConfig.getServiceParameter(""alias"", ""impl""));"
155518,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryTest.java,48,,"    topology.setName( ""test-topology"" );"
155519,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryTest.java,71,,"    service.setName( ""test-service"" );"
155520,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryTest.java,75,,"    application.setName( ""test-application"" );"
155521,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryTest.java,90,,"      fail( ""Expected DeploymentException"" );"
155522,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryTest.java,173,,"    application.setName( ""test-application-1"" );"
155523,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryTest.java,183,,"    application.setName( ""test-application-2"" );"
155524,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryTest.java,247,,"      assertEquals(""Topology test-topology contains applications "" +"
155525,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/descriptor/GatewayDescriptorTest.java,102,,"      GatewayDescriptorFactory.load( ""INVALID"", null );"
155526,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/descriptor/xml/XmlGatewayDescriptorExporterTest.java,46,,"    assertThat( exporter.getFormat(), is( ""xml"" ) );"
155527,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/descriptor/xml/XmlGatewayDescriptorExporterTest.java,118,,"      assertThat( e.getMessage(), containsString( ""BROKEN"" ) );"
155528,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/descriptor/xml/XmlGatewayDescriptorImporterTest.java,45,,"    assertThat( importer.getFormat(), is( ""xml"" ) );"
155529,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/descriptor/xml/XmlGatewayDescriptorImporterTest.java,52,,"        ""  <resource>\n"" +"
155530,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/descriptor/xml/XmlGatewayDescriptorImporterTest.java,55,,"        ""    <filter>\n"" +"
155531,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/filter/ForwardedRequestTest.java,29,,"    String scheme = ""http"";"
155532,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/filter/ForwardedRequestTest.java,30,,"    String host = ""localhost"";"
155533,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/filter/ForwardedRequestTest.java,31,,"    String context = ""/abc"";"
155534,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/AbstractGatewayServicesTest.java,44,,"        .withConstructor(""role"", ""name"")"
155535,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/AbstractGatewayServicesTest.java,44,,"        .withConstructor(""role"", ""name"")"
155536,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/metrics/impl/DefaultMetricsServiceTest.java,64,,"    config.set(GatewayConfigImpl.METRICS_ENABLED, ""true"");"
155537,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/CryptoServiceTest.java,161,,"    EncryptionResult result0 = cs.encryptForCluster(""Test"", ""encrypt_url"", queryString.getBytes(StandardCharsets.UTF_8));"
155538,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/CryptoServiceTest.java,161,,"    EncryptionResult result0 = cs.encryptForCluster(""Test"", ""encrypt_url"", queryString.getBytes(StandardCharsets.UTF_8));"
155539,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/CryptoServiceTest.java,205,,"    EncryptionResult result = aes.encrypt(""larry"".getBytes(StandardCharsets.UTF_8));"
155540,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/DefaultKeystoreServiceTest.java,93,,"    config.set(""gateway.data.dir"", dataDir.toString());"
155541,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/DefaultKeystoreServiceTest.java,119,,"        .addMockedMethod(""getCredentialForCluster"", String.class, String.class)"
155542,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/DefaultKeystoreServiceTest.java,207,,"    char[] masterPassword = ""master_password"".toCharArray();"
155543,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/DefaultKeystoreServiceTest.java,234,,"    Path defaultKeystoreFile = baseDir.resolve(""security"").resolve(""keystores"").resolve(""gateway.jks"");"
155544,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/DefaultKeystoreServiceTest.java,234,,"    Path defaultKeystoreFile = baseDir.resolve(""security"").resolve(""keystores"").resolve(""gateway.jks"");"
155545,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/DefaultKeystoreServiceTest.java,383,,"    assertNotNull(keystoreService.loadKeyStore(defaultFile, ""JKS"", masterPassword));"
155546,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/DefaultKeystoreServiceTest.java,612,,"      String alias = ""alias"" + i;"
155547,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/JettySSLServiceTest.java,48,,"    String basedir = System.getProperty(""basedir"");"
155548,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/JettySSLServiceTest.java,53,,"    Path identityKeystorePath = Paths.get(basedir, ""target"", ""test-classes"", ""keystores"", ""server-keystore.jks"");"
155549,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/JettySSLServiceTest.java,53,,"    Path identityKeystorePath = Paths.get(basedir, ""target"", ""test-classes"", ""keystores"", ""server-keystore.jks"");"
155550,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/JettySSLServiceTest.java,53,,"    Path identityKeystorePath = Paths.get(basedir, ""target"", ""test-classes"", ""keystores"", ""server-keystore.jks"");"
155551,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/JettySSLServiceTest.java,53,,"    Path identityKeystorePath = Paths.get(basedir, ""target"", ""test-classes"", ""keystores"", ""server-keystore.jks"");"
155552,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/JettySSLServiceTest.java,54,,"    String identityKeystoreType = ""jks"";"
155553,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/JettySSLServiceTest.java,55,,"    char[] identityKeystorePassword = ""horton"".toCharArray();"
155554,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/JettySSLServiceTest.java,57,,"    String identityKeyAlias = ""server"";"
155555,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/JettySSLServiceTest.java,58,,"    Path truststorePath = Paths.get(basedir, ""target"", ""test-classes"", ""keystores"", ""server-truststore.jks"");"
155556,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/JettySSLServiceTest.java,60,,"    String truststorePasswordAlias = ""trust_store_password"";"
155557,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/RemoteAliasServiceTest.java,57,,"    final String expectedClusterName = ""sandbox"";"
155558,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/RemoteAliasServiceTest.java,58,,"    final String expectedAlias = ""knox.test.alias"";"
155559,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/RemoteAliasServiceTest.java,59,,"    final String expectedPassword = ""dummyPassword"";"
155560,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/RemoteAliasServiceTest.java,61,,"    final String expectedClusterNameDev = ""development"";"
155561,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/RemoteAliasServiceTest.java,62,,"    final String expectedAliasDev = ""knox.test.alias.dev"";"
155562,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/RemoteAliasServiceTest.java,63,,"    final String expectedPasswordDev = ""otherDummyPassword"";"
155563,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/RemoteAliasServiceTest.java,67,,"    EasyMock.expect(ms.getMasterSecret()).andReturn(""knox"".toCharArray())"
155564,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/RemoteAliasServiceTest.java,98,,"    Assert.assertTrue(""Expected alias 'knox.test.alias' not found "","
155565,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/security/impl/ZookeeperRemoteAliasServiceTest.java,186,,"    Assert.assertTrue(""Expected alias '"" + expectedAlias + ""' not found "","
155566,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/token/impl/AliasBasedTokenStateServiceTest.java,186,,"      assertEquals(""Expected the tokens lifetimes to have been added in the base class cache."","
155567,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/token/impl/DefaultTokenAuthorityServiceTest.java,52,,"    EasyMock.expect(principal.getName()).andReturn(""john.doe@example.com"");"
155568,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/token/impl/DefaultTokenAuthorityServiceTest.java,55,,"    String basedir = System.getProperty(""basedir"");"
155569,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/token/impl/DefaultTokenAuthorityServiceTest.java,60,,"    EasyMock.expect(config.getGatewaySecurityDir()).andReturn(basedir + ""/target/test-classes"").anyTimes();"
155570,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/token/impl/DefaultTokenAuthorityServiceTest.java,61,,"    EasyMock.expect(config.getGatewayKeystoreDir()).andReturn(basedir + ""/target/test-classes/keystores"").anyTimes();"
155571,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/token/impl/DefaultTokenAuthorityServiceTest.java,62,,"    EasyMock.expect(config.getSigningKeystoreName()).andReturn(""server-keystore.jks"").anyTimes();"
155572,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/token/impl/DefaultTokenAuthorityServiceTest.java,63,,"    EasyMock.expect(config.getSigningKeystorePath()).andReturn(basedir + ""/target/test-classes/keystores/server-keystore.jks"").anyTimes();"
155573,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/token/impl/DefaultTokenAuthorityServiceTest.java,66,,"    EasyMock.expect(config.getSigningKeystoreType()).andReturn(""jks"").anyTimes();"
155574,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/token/impl/DefaultTokenAuthorityServiceTest.java,67,,"    EasyMock.expect(config.getSigningKeyAlias()).andReturn(""server"").anyTimes();"
155575,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/token/impl/DefaultTokenAuthorityServiceTest.java,72,,"    EasyMock.expect(ms.getMasterSecret()).andReturn(""horton"".toCharArray());"
155576,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/token/impl/DefaultTokenAuthorityServiceTest.java,91,,"    JWT token = ta.issueToken(new JWTokenAttributesBuilder().setPrincipal(principal).setAlgorithm(""RS256"").setManaged(true).build());"
155577,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/token/impl/DefaultTokenAuthorityServiceTest.java,92,,"    assertEquals(""KNOXSSO"", token.getIssuer());"
155578,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/token/impl/JDBCTokenStateServiceTest.java,155,,"    final String passcodeMac = tokenMAC.hash(tokenId, 1, ""sampleUser"", passcode);"
155579,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/token/impl/ZookeeperTokenStateServiceTest.java,101,,"    assertFalse(zkNodeExists(""/knox/security/topology/__gateway/tokens/a0/a0-token1""));"
155580,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/topology/DefaultTopologyServiceTest.java,107,,"    File topologyDir = new File(dir, ""topologies"");"
155581,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/topology/DefaultTopologyServiceTest.java,109,,"    File descriptorsDir = new File(dir, ""descriptors"");"
155582,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/topology/DefaultTopologyServiceTest.java,112,,"    File sharedProvidersDir = new File(dir, ""shared-providers"");"
155583,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/topology/DefaultTopologyServiceTest.java,141,,"      assertThat(topology.getName(), is(""one""));"
155584,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/services/topology/DefaultTopologyServiceTest.java,381,,"                 ""provider-config-one.xml"","
155585,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/builder/PropertyTopologyBuilderTest.java,50,,"    propertyTopologyBuilder.addProperty( new Property( ""miss_prop"", ""value"" ) );"
155586,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/monitor/ZooKeeperConfigurationMonitorTest.java,299,,"            ""        <param>\n"" +"
155587,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/monitor/ZooKeeperConfigurationMonitorTest.java,302,,"            ""        </param>\n"" +"
155588,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/ProviderConfigurationParserTest.java,128,,"    ""    {\n"" +"
155589,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,106,,"        final String   discoveryType    = ""AMBARI"";"
155590,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,107,,"        final String   discoveryAddress = ""http://c6401.ambari.apache.org:8080"";"
155591,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,109,,"        final String   providerConfig   = ""ambari-cluster-policy.xml"";"
155592,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,110,,"        final String   clusterName      = ""myCluster"";"
155593,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,113,,"        services.put(""NODEMANAGER"", null);"
155594,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,114,,"        services.put(""JOBTRACKER"", null);"
155595,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,115,,"        services.put(""RESOURCEMANAGER"", null);"
155596,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,116,,"        services.put(""HIVE"", Arrays.asList(""http://c6401.ambari.apache.org"","
155597,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,116,,"        services.put(""HIVE"", Arrays.asList(""http://c6401.ambari.apache.org"","
155598,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,117,,"                                           ""http://c6402.ambari.apache.org"","
155599,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,118,,"                                           ""http://c6403.ambari.apache.org""));"
155600,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,119,,"        services.put(""AMBARIUI"", Collections.singletonList(""http://c6401.ambari.apache.org:8080""));"
155601,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,121,,"        String fileName = ""test-topology."" + getFileExtensionForType(type);"
155602,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,210,,"        services.put(""KNOXSSO"", null);"
155603,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,211,,"        services.put(""KNOXTOKEN"", null);"
155604,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,212,,"        services.put(""CustomRole"", Collections.singletonList(""http://c6402.ambari.apache.org:1234""));"
155605,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,216,,"        knoxSSOParams.put(""knoxsso.cookie.secure.only"", ""true"");"
155606,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,217,,"        knoxSSOParams.put(""knoxsso.token.ttl"", ""100000"");"
155607,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,266,,"        apps.put(""app-one"", null);"
155608,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,270,,"        apps.put(""AppFive"", Collections.singletonList(""http://host5:8080""));"
155609,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorFactoryTest.java,550,,"        fw.write(""\""discovery-type\"":\"""" + discoveryType + ""\"",\n"");"
155610,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,69,,"            ""        <provider>\n"" +"
155611,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,72,,"            ""            <enabled>true</enabled>\n"" +"
155612,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,73,,"            ""            <param>\n"" +"
155613,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,76,,"            ""            </param>\n"" +"
155614,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,105,,"            ""        </provider>\n"" +"
155615,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,149,,"        File providerConfig = new File(System.getProperty(""java.io.tmpdir""), ""test-providers.xml"");"
155616,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,154,,"        EasyMock.expect(testDescriptor.getName()).andReturn(""mysimpledescriptor"").anyTimes();"
155617,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,187,,"            topologyFile = files.get(""topology"");"
155618,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,206,,"        final String type = ""PROPERTIES_FILE"";"
155619,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,210,,"        final File discoveryConfig = File.createTempFile(getClass().getName() + ""_discovery-config"", "".properties"");"
155620,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,232,,"        serviceURLs.put(""NAMENODE"", null);"
155621,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,234,,"        serviceURLs.put(""WEBHDFS"", null);"
155622,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,238,,"        serviceURLs.put(""HIVE"", null);"
155623,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,239,,"        serviceURLs.put(""RESOURCEMANAGER"", null);"
155624,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,253,,"            knoxssoParams.put(""knoxsso.cookie.secure.only"", ""true"");"
155625,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,272,,"                EasyMock.expect(svc.getVersion()).andReturn(""WEBHDFS"".equals(serviceName) ? ""2.4.0"" : null).anyTimes();"
155626,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,355,,"                    NodeList paramNodes = (NodeList) xpath.compile(""param"").evaluate(serviceNode, XPathConstants.NODESET);"
155627,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,358,,"                        String paramName = (String) xpath.compile(""name/text()"").evaluate(paramNode, XPathConstants.STRING);"
155628,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandlerTest.java,359,,"                        String paramValue = (String) xpath.compile(""value/text()"").evaluate(paramNode, XPathConstants.STRING);"
155629,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/xml/TopologyRulesModuleTest.java,62,,"    assertThat( ""Failed to find URL for resource "" + name, url, notNullValue() );"
155630,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/xml/TopologyRulesModuleTest.java,66,,"    assertThat( ""Failed to parse resource "" + name, topology, notNullValue() );"
155631,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/xml/TopologyRulesModuleTest.java,75,,"    assertThat( comp.getRole(), is(""WEBHDFS"") );"
155632,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/topology/xml/TopologyRulesModuleTest.java,96,,"    comp = topology.getService(""HIVE"", ""hive"", null);"
155633,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/JDBCUtilsTest.java,55,,"    assertEquals(""localhost"", dataSource.getServerNames()[0]);"
155634,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/JDBCUtilsTest.java,57,,"    assertEquals(""sampleDatabase"", dataSource.getDatabaseName());"
155635,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/JDBCUtilsTest.java,58,,"    assertEquals(""user"", dataSource.getUser());"
155636,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/JDBCUtilsTest.java,59,,"    assertEquals(""password"", dataSource.getPassword());"
155637,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,83,,"    config.set(""gateway.remote.config.registry.test_client"", ""type=LocalFileSystem;address=/test"");"
155638,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,92,,"    RemoteConfigurationRegistryClient client = service.get(""test_client"");"
155639,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,103,,"    String[] args = { ""list-registry-clients"", ""--master"",""master"" };"
155640,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,103,,"    String[] args = { ""list-registry-clients"", ""--master"",""master"" };"
155641,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,139,,"      final File testRegistry = new File(testRoot, ""registryRoot"");"
155642,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,141,,"      final String providerConfigName = ""my-provider-config.xml"";"
155643,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,142,,"      final String providerConfigContent = ""<gateway/>\n"";"
155644,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,144,,"      final String[] uploadArgs = {""upload-provider-config"", testProviderConfig.getAbsolutePath(),"
155645,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,145,,"                                   ""--registry-client"", ""test_client"","
155646,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,157,,"      config.set(""gateway.remote.config.registry.test_client"", ""type=LocalFileSystem;address="" + testRegistry);"
155647,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,213,,"      File registryFile = new File(testRegistry, ""knox/config/shared-providers/"" + providerConfigName);"
155648,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,300,,"      File registryFile = new File(testRegistry, ""knox/config/descriptors/"" + descriptorName);"
155649,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,455,,"    String[] args1 = {""create-alias"", ""alias1"", ""--value"", ""testvalue1"", ""--master"", ""master""};"
155650,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,455,,"    String[] args1 = {""create-alias"", ""alias1"", ""--value"", ""testvalue1"", ""--master"", ""master""};"
155651,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,455,,"    String[] args1 = {""create-alias"", ""alias1"", ""--value"", ""testvalue1"", ""--master"", ""master""};"
155652,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,455,,"    String[] args1 = {""create-alias"", ""alias1"", ""--value"", ""testvalue1"", ""--master"", ""master""};"
155653,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,461,,"    assertTrue(outContent.toString(StandardCharsets.UTF_8.name()), outContent.toString(StandardCharsets.UTF_8.name()).contains(""alias1 has been successfully "" +"
155654,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,462,,"        ""created.""));"
155655,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,465,,"    String[] args2 = {""list-alias"", ""--master"","
155656,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,472,,"    String[] args4 = {""delete-alias"", ""alias1"", ""--master"","
155657,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,477,,"        ""deleted.""));"
155658,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,489,,"        { ""create-alias"", ""alias1"", ""--cluster"", ""cluster1"", ""--value"", ""testvalue1"", ""--master"","
155659,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,489,,"        { ""create-alias"", ""alias1"", ""--cluster"", ""cluster1"", ""--value"", ""testvalue1"", ""--master"","
155660,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,530,,"      String[] args2 = { ""delete-alias"", ""alias2"", ""--cluster"", ""cluster1"", ""--master"", ""master"" };"
155661,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,628,,"    String[] clusterCreateArgs = {""create-alias"", ""alias2"", ""--value"", ""testvalue1"", ""--cluster"", ""test"","
155662,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,676,,"    String[] args = new String[]{ ""create-master"", ""--master"", ""master"", ""--force"" };"
155663,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,683,,"    assertThat( outContent.toString(StandardCharsets.UTF_8.name()), containsString( ""Master secret has been persisted to disk."" ) );"
155664,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,718,,"    String[] gwCreateArgs2 = {""export-cert"", ""--type"", ""PEM""};"
155665,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,718,,"    String[] gwCreateArgs2 = {""export-cert"", ""--type"", ""PEM""};"
155666,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,721,,"    assertTrue(outContent.toString(StandardCharsets.UTF_8.name()), outContent.toString(StandardCharsets.UTF_8.name()).contains(""Certificate gateway-identity has been successfully exported to""));"
155667,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,872,,"    URL topoURL = ClassLoader.getSystemResource(""conf-demo/conf/topologies/admin.xml"");"
155668,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,874,,"    String[] args = {""list-topologies"", ""--master"", ""knox""};"
155669,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,901,,"        .addTag( ""provider"" )"
155670,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,902,,"        .addTag( ""role"" ).addText( ""authentication"" )"
155671,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,903,,"        .addTag( ""name"" ).addText( ""ShiroProvider"" )"
155672,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,904,,"        .addTag( ""enabled"" ).addText( ""123"" )"
155673,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,905,,"        .addTag( ""param"" )"
155674,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,907,,"        .addTag( ""value"" ).addText( ""org.apache.knox.gateway.shirorealm.KnoxLdapRealm"" ).gotoParent()"
155675,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/util/KnoxCLITest.java,988,,"    String[] args = {""validate-topology"", ""--master"", ""knox"", ""--cluster"", ""sandbox""};"
155676,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/websockets/WebsocketEchoTest.java,82,,"    session.getBasicRemote().sendText(""Echo"");"
155677,./TargetProjects/knox/gateway-service-admin/src/main/java/org/apache/knox/gateway/service/admin/AliasResource.java,56,,"@Api(value = ""alias"",  description = ""The Knox Admin API to interact with aliases."")"
155678,./TargetProjects/knox/gateway-service-admin/src/main/java/org/apache/knox/gateway/service/admin/AliasResource.java,79,,"  public Response putAlias(@PathParam(""topology"") final String topology,"
155679,./TargetProjects/knox/gateway-service-admin/src/main/java/org/apache/knox/gateway/service/admin/ServiceDefinitionsResource.java,78,,"  public ServiceDefinitionsWrapper getServiceDefinitions(@QueryParam(""serviceOnly"") @DefaultValue(""false"") boolean serviceOnly) {"
155680,./TargetProjects/knox/gateway-service-admin/src/main/java/org/apache/knox/gateway/service/admin/ServiceDefinitionsResource.java,78,,"  public ServiceDefinitionsWrapper getServiceDefinitions(@QueryParam(""serviceOnly"") @DefaultValue(""false"") boolean serviceOnly) {"
155681,./TargetProjects/knox/gateway-service-admin/src/main/java/org/apache/knox/gateway/service/admin/ServiceDefinitionsResource.java,85,,"  public ServiceDefinitionsWrapper getServiceDefinition(@PathParam(""name"") String name, @QueryParam(""serviceOnly"") @DefaultValue(""false"") boolean serviceOnly) {"
155682,./TargetProjects/knox/gateway-service-admin/src/main/java/org/apache/knox/gateway/service/admin/TopologiesResource.java,260,,"  public Response getProviderConfiguration(@PathParam(""name"") String name) {"
155683,./TargetProjects/knox/gateway-service-admin/src/main/java/org/apache/knox/gateway/service/admin/TopologiesResource.java,304,,"      response = ok().entity(""{ \""deleted\"" : \""provider config "" + name + ""\"" }"").build();"
155684,./TargetProjects/knox/gateway-service-definitions/src/test/java/org/apache/knox/gateway/service/definition/ServiceDefinitionComparatorTest.java,30,,"    assertEquals(-1, serviceDefinitionComparator.compare(buildServiceDefinition(""service1"", ""role1"", ""1.0""), buildServiceDefinition(""service2"", ""role1"", ""1.0"")));"
155685,./TargetProjects/knox/gateway-service-definitions/src/test/java/org/apache/knox/gateway/service/definition/ServiceDefinitionComparatorTest.java,30,,"    assertEquals(-1, serviceDefinitionComparator.compare(buildServiceDefinition(""service1"", ""role1"", ""1.0""), buildServiceDefinition(""service2"", ""role1"", ""1.0"")));"
155686,./TargetProjects/knox/gateway-service-definitions/src/test/java/org/apache/knox/gateway/service/definition/ServiceDefinitionComparatorTest.java,30,,"    assertEquals(-1, serviceDefinitionComparator.compare(buildServiceDefinition(""service1"", ""role1"", ""1.0""), buildServiceDefinition(""service2"", ""role1"", ""1.0"")));"
155687,./TargetProjects/knox/gateway-service-hashicorp-vault/src/test/java/org/apache/knox/gateway/backend/hashicorp/vault/TestHashicorpVaultAliasService.java,97,,"    Container.ExecResult execResult = vaultContainer.execInContainer(""vault"", ""secrets"","
155688,./TargetProjects/knox/gateway-service-hashicorp-vault/src/test/java/org/apache/knox/gateway/backend/hashicorp/vault/TestHashicorpVaultAliasService.java,224,,"      fail(""Should have gotten a 403"");"
155689,./TargetProjects/knox/gateway-service-hashicorp-vault/src/test/java/org/apache/knox/gateway/backend/hashicorp/vault/TestHashicorpVaultAliasService.java,226,,"      assertTrue(e.getMessage().contains(""Status 403 Forbidden""));"
155690,./TargetProjects/knox/gateway-service-knoxsso/src/test/java/org/apache/knox/gateway/service/knoxsso/WebSSOResourceTest.java,108,,"    Assert.assertTrue(""Failed to match whitelist"", RegExUtils.checkWhitelist(whitelist,"
155691,./TargetProjects/knox/gateway-service-knoxsso/src/test/java/org/apache/knox/gateway/service/knoxsso/WebSSOResourceTest.java,117,,"    assertFalse(""Matched whitelist inappropriately"", RegExUtils.checkWhitelist(whitelist,"
155692,./TargetProjects/knox/gateway-service-knoxsso/src/test/java/org/apache/knox/gateway/service/knoxsso/WebSSOResourceTest.java,155,,"    EasyMock.expect(request.getParameter(""originalUrl"")).andReturn(""http://localhost:9080/service"");"
155693,./TargetProjects/knox/gateway-service-knoxsso/src/test/java/org/apache/knox/gateway/service/knoxsso/WebSSOResourceTest.java,160,,"    EasyMock.expect(principal.getName()).andReturn(""alice"").anyTimes();"
155694,./TargetProjects/knox/gateway-service-knoxsso/src/test/java/org/apache/knox/gateway/service/knoxsso/WebSSOResourceTest.java,196,,"    Cookie cookie = responseWrapper.getCookie(""hadoop-jwt"");"
155695,./TargetProjects/knox/gateway-service-knoxtoken/src/main/java/org/apache/knox/gateway/service/knoxtoken/TokenResource.java,166,,"    clientCertRequired = ""true"".equals(clientCert);"
155696,./TargetProjects/knox/gateway-service-knoxtoken/src/main/java/org/apache/knox/gateway/service/knoxtoken/TokenResource.java,424,,"                      .entity(""{\n  \""renewed\"": \""true\"",\n  \""expires\"": \"""" + expiration + ""\""\n}\n"")"
155697,./TargetProjects/knox/gateway-service-knoxtoken/src/test/java/org/apache/knox/gateway/service/knoxtoken/TokenServiceResourceTest.java,105,,"  private static final String USER_NAME = ""alice"";"
155698,./TargetProjects/knox/gateway-service-knoxtoken/src/test/java/org/apache/knox/gateway/service/knoxtoken/TokenServiceResourceTest.java,233,,"    String accessToken = getTagValue(retString, ""access_token"");"
155699,./TargetProjects/knox/gateway-service-knoxtoken/src/test/java/org/apache/knox/gateway/service/knoxtoken/TokenServiceResourceTest.java,235,,"    String expiry = getTagValue(retString, ""expires_in"");"
155700,./TargetProjects/knox/gateway-service-knoxtoken/src/test/java/org/apache/knox/gateway/service/knoxtoken/TokenServiceResourceTest.java,359,,"    contextExpectations.put(""knox.token.client.cert.required"", ""true"");"
155701,./TargetProjects/knox/gateway-service-knoxtoken/src/test/java/org/apache/knox/gateway/service/knoxtoken/TokenServiceResourceTest.java,455,,"    contextExpectations.put(""knox.token.ttl"", null);"
155702,./TargetProjects/knox/gateway-service-knoxtoken/src/test/java/org/apache/knox/gateway/service/knoxtoken/TokenServiceResourceTest.java,592,,"    final String caller = ""yarn"";"
155703,./TargetProjects/knox/gateway-service-knoxtoken/src/test/java/org/apache/knox/gateway/service/knoxtoken/TokenServiceResourceTest.java,619,,"    assertTrue(Boolean.parseBoolean(json.get(""renewed"")));"
155704,./TargetProjects/knox/gateway-service-knoxtoken/src/test/java/org/apache/knox/gateway/service/knoxtoken/TokenServiceResourceTest.java,670,,"                            ""Caller ("" + caller + "") not authorized to renew tokens."");"
155705,./TargetProjects/knox/gateway-service-knoxtoken/src/test/java/org/apache/knox/gateway/service/knoxtoken/TokenServiceResourceTest.java,675,,"    Response renewalResponse = doTestTokenRenewal(true, ""larry, moe,  curly "", null);"
155706,./TargetProjects/knox/gateway-service-knoxtoken/src/test/java/org/apache/knox/gateway/service/knoxtoken/TokenServiceResourceTest.java,684,,"    final String caller = ""shemp"";"
155707,./TargetProjects/knox/gateway-service-knoxtoken/src/test/java/org/apache/knox/gateway/service/knoxtoken/TokenServiceResourceTest.java,830,,"    testGetTokenStateStatus(Collections.singletonMap(TokenStateService.CONFIG_SERVER_MANAGED, ""false""), ""false"", null, null, null);"
155708,./TargetProjects/knox/gateway-service-metadata/src/test/java/org/apache/knox/gateway/service/metadata/ServiceModelTest.java,145,,"    final String gatewayPath = ""gateway"";"
155709,./TargetProjects/knox/gateway-service-metadata/src/test/java/org/apache/knox/gateway/service/metadata/ServiceModelTest.java,146,,"    final String topologyName = ""sandbox"";"
155710,./TargetProjects/knox/gateway-service-remoteconfig/src/test/java/org/apache/knox/gateway/service/config/remote/config/DefaultRemoteConfigurationRegistriesTest.java,42,,"        p.setProperty(GatewayConfig.REMOTE_CONFIG_REGISTRY_TYPE, ""ZooKeeper"");"
155711,./TargetProjects/knox/gateway-service-rm/src/test/java/org/apache/knox/gateway/rm/dispatch/RMHaDispatchTest.java,84,,"        EasyMock.expect(inboundRequest.getAttribute(""dispatch.ha.failover.counter"")).andReturn(new AtomicInteger(0)).once();"
155712,./TargetProjects/knox/gateway-shell/src/main/java/org/apache/knox/gateway/shell/ClientContext.java,88,,"      return configuration.getInt(""timeout"", 0);"
155713,./TargetProjects/knox/gateway-shell/src/main/java/org/apache/knox/gateway/shell/KnoxSession.java,435,,"            + "" truststore or set the truststore location ENV variables."", e);"
155714,./TargetProjects/knox/gateway-shell/src/main/java/org/apache/knox/gateway/shell/KnoxSession.java,595,,"    String home = System.getProperty(""user.home"");"
155715,./TargetProjects/knox/gateway-shell/src/main/java/org/apache/knox/gateway/shell/KnoxSession.java,598,,"          home + File.separator + "".knoxshell"" + File.separator + fileName), s);"
155716,./TargetProjects/knox/gateway-shell/src/main/java/org/apache/knox/gateway/shell/KnoxSh.java,66,,"      ""   ["" + KnoxBuildTrustStore.USAGE + ""]\n"" +"
155717,./TargetProjects/knox/gateway-shell/src/main/java/org/apache/knox/gateway/shell/KnoxSh.java,66,,"      ""   ["" + KnoxBuildTrustStore.USAGE + ""]\n"" +"
155718,./TargetProjects/knox/gateway-shell/src/main/java/org/apache/knox/gateway/shell/KnoxSh.java,159,,"      out.println( KnoxInit.USAGE + ""\n\n"" + KnoxInit.DESC );"
155719,./TargetProjects/knox/gateway-shell/src/main/java/org/apache/knox/gateway/shell/KnoxSh.java,235,,"      return USAGE + "":\n\n"" + DESC;"
155720,./TargetProjects/knox/gateway-shell/src/main/java/org/apache/knox/gateway/shell/KnoxSh.java,292,,"        File tokenfile = new File(System.getProperty(""user.home""), "".knoxtokencache"");"
155721,./TargetProjects/knox/gateway-shell/src/main/java/org/apache/knox/gateway/shell/commands/WebHDFSCommand.java,138,,"        return ""No session established for mountPoint: "" + mountPoint + "" Use :fs mount {topology-url} {mountpoint-name}"";"
155722,./TargetProjects/knox/gateway-shell/src/main/java/org/apache/knox/gateway/shell/commands/WebHDFSCommand.java,138,,"        return ""No session established for mountPoint: "" + mountPoint + "" Use :fs mount {topology-url} {mountpoint-name}"";"
155723,./TargetProjects/knox/gateway-shell/src/main/java/org/apache/knox/gateway/shell/commands/WebHDFSCommand.java,155,,"      result = ""Exception ocurred: "" + e.getMessage();"
155724,./TargetProjects/knox/gateway-shell/src/main/java/org/apache/knox/gateway/shell/table/KnoxShellTableFilter.java,96,,"  @SuppressWarnings(""unchecked"")"
155725,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/KnoxSessionTest.java,55,,"    final ClientContext context = ClientContext.with(""https://localhost:8443/gateway/dt"");"
155726,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/alias/AliasTest.java,54,,"    final String alias = ""aliasPut1"";"
155727,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/alias/AliasTest.java,62,,"    assertEquals(""Endpoint mismatch"", expectedEndpointPath, request.getRequestURI().toString());"
155728,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/alias/AliasTest.java,71,,"    assertEquals(""Unexpected HTTP method."", HttpPost.METHOD_NAME, request.getRequest().getMethod());"
155729,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableFilterTest.java,38,,"    TABLE.header(""Column Integer"").header(""Column Double"").header(""Column String"").header(""Column Date"");"
155730,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableFilterTest.java,38,,"    TABLE.header(""Column Integer"").header(""Column Double"").header(""Column String"").header(""Column Date"");"
155731,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableFilterTest.java,38,,"    TABLE.header(""Column Integer"").header(""Column Double"").header(""Column String"").header(""Column Date"");"
155732,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableFilterTest.java,38,,"    TABLE.header(""Column Integer"").header(""Column Double"").header(""Column String"").header(""Column Date"");"
155733,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableFilterTest.java,40,,"      TABLE.row().value(10).value(20d).value(""text30"").value(TEST_DATE_FORMAT.parse(""2010-01-01""));"
155734,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,78,,"    table.header(""Column A"").header(""Column B"").header(""Column C"");"
155735,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,78,,"    table.header(""Column A"").header(""Column B"").header(""Column C"");"
155736,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,78,,"    table.header(""Column A"").header(""Column B"").header(""Column C"");"
155737,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,80,,"    table.row().value(""123"").value(""456"").value(""3"");"
155738,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,80,,"    table.row().value(""123"").value(""456"").value(""3"");"
155739,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,87,,"    String expectedResult = ""+------------+------------+--------------+\n"""
155740,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,95,,"    table.row().value(""123"").value(""456"").value(""344444444"");"
155741,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,112,,"    table.row().value(""789"").value(""012"").value(""844444444"");"
155742,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,112,,"    table.row().value(""789"").value(""012"").value(""844444444"");"
155743,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,112,,"    table.row().value(""789"").value(""012"").value(""844444444"");"
155744,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,181,,"    table.title(""From URL"");"
155745,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,363,,"    KnoxShellTable joined = KnoxShellTable.builder().join().title(""Joined Table"").left(table).right(table2).on(0, 0);"
155746,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,514,,"    saveCall(table.id, ""org.apache.knox.gateway.shell.table.JDBCKnoxShellTableBuilder"", ""driver"", false, singletonMap(""org.apache.derby.jdbc.EmbeddedDriver"", String.class));"
155747,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,537,,"      TABLE.header(""Column Integer"").header(""Column String"").header(""Column Null"");"
155748,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,537,,"      TABLE.header(""Column Integer"").header(""Column String"").header(""Column Null"");"
155749,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,565,,"      TABLE.header(""Column Integer"").header(""Column Double"").header(""Column Float"").header(""Column Byte"").header(""Column Short"").header(""Column Long"").header(""Column String"");"
155750,./TargetProjects/knox/gateway-shell/src/test/java/org/apache/knox/gateway/shell/table/KnoxShellTableTest.java,565,,"      TABLE.header(""Column Integer"").header(""Column Double"").header(""Column Float"").header(""Column Byte"").header(""Column Short"").header(""Column Long"").header(""Column String"");"
155751,./TargetProjects/knox/gateway-spi/src/main/java/org/apache/knox/gateway/services/security/impl/CMFMasterService.java,120,,"      c.printf(""***************************************************************************************************\n"");"
155752,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/CappedBufferHttpEntityTest.java,68,,"    String data = ""0123456789"";"
155753,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/CappedBufferHttpEntityTest.java,274,,"      assertThat(text, is(""012""));"
155754,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/CappedBufferHttpEntityTest.java,339,,"      assertThat(text, is(""0123""));"
155755,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/ConfigurableDispatchTest.java,57,,"    path = ""http://test-host:42/test-path"";"
155756,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/ConfigurableDispatchTest.java,66,,"    path = ""http://test-host:42/test,path"";"
155757,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/ConfigurableDispatchTest.java,75,,"    path = ""http://test-host:42/test%2Cpath"";"
155758,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/ConfigurableDispatchTest.java,193,,"    headers.put(HttpHeaders.AUTHORIZATION, ""Basic ..."");"
155759,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/ConfigurableDispatchTest.java,194,,"    headers.put(HttpHeaders.ACCEPT, ""abc"");"
155760,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/ConfigurableDispatchTest.java,195,,"    headers.put(""TEST"", ""test"");"
155761,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/ConfigurableDispatchTest.java,195,,"    headers.put(""TEST"", ""test"");"
155762,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/DefaultHttpClientFactoryTest.java,74,,"    expect(filterConfig.getInitParameter(""useTwoWaySsl"")).andReturn(""false"").once();"
155763,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/DefaultHttpClientFactoryTest.java,76,,"    expect(filterConfig.getInitParameter(""httpclient.connectionTimeout"")).andReturn(null).once();"
155764,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/DefaultHttpClientFactoryTest.java,77,,"    expect(filterConfig.getInitParameter(""httpclient.socketTimeout"")).andReturn(null).once();"
155765,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/DefaultHttpClientFactoryTest.java,104,,"    SSLContext context = factory.createSSLContext(gatewayServices, filterConfig, ""service"");"
155766,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/DefaultHttpClientFactoryTest.java,112,,"    KeyStore gatewayIdentityKeyStore = loadKeyStore(""target/test-classes/keystores/server-keystore.jks"", ""horton"", ""JKS"");"
155767,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/DefaultHttpClientFactoryTest.java,112,,"    KeyStore gatewayIdentityKeyStore = loadKeyStore(""target/test-classes/keystores/server-keystore.jks"", ""horton"", ""JKS"");"
155768,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/GatewayDispatchFilterTest.java,59,,"    EasyMock.expect(request.getRequestURI()).andReturn(""http://www.notonmylist.org:9999"").anyTimes();"
155769,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/GatewayDispatchFilterTest.java,75,,"    final String serviceRole = ""TESTROLE"";"
155770,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/HadoopAuthCookieStoreTest.java,64,,"    store.addCookie( new BasicClientCookie( ""hadoop.auth"", rawValue ) );"
155771,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/PartiallyRepeatableHttpEntityTest.java,67,,"    String data = ""0123456789"";"
155772,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/PartiallyRepeatableHttpEntityTest.java,305,,"    assertThat( text, is( ""012"" ) );"
155773,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/PartiallyRepeatableHttpEntityTest.java,379,,"    assertThat( text, is( ""0123"" ) );"
155774,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/dispatch/PartiallyRepeatableHttpEntityTest.java,425,,"    assertThat( text, is( ""0123456"" ) );"
155775,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/security/principal/PrincipalMapperTest.java,54,,"    assertEquals(""lmccay"", mapper.mapUserPrincipal(""lmccay""));"
155776,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/security/principal/PrincipalMapperTest.java,55,,"    assertEquals(""users"", mapper.mapGroupPrincipal(""hdfs"")[0]);"
155777,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/security/principal/PrincipalMapperTest.java,55,,"    assertEquals(""users"", mapper.mapGroupPrincipal(""hdfs"")[0]);"
155778,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/security/principal/PrincipalMapperTest.java,74,,"    assertTrue(""users"".equals(group) || ""mrgroup"".equals(group));"
155779,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/security/principal/PrincipalMapperTest.java,116,,"    assertEquals(""hdfs"", mapper.mapUserPrincipal(""kminder""));"
155780,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/security/principal/PrincipalMapperTest.java,118,,"    assertEquals(""mapred"", mapper.mapUserPrincipal(""newuser""));"
155781,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/security/principal/PrincipalMapperTest.java,118,,"    assertEquals(""mapred"", mapper.mapUserPrincipal(""newuser""));"
155782,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/security/principal/PrincipalMapperTest.java,125,,"    assertEquals(""stink"", mapper.mapUserPrincipal(""stink""));"
155783,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/services/hostmap/FileBasedHostMapperTest.java,40,,"    assertThat( mapper.resolveInboundHostName( ""external"" ), is( ""internal"" ) );"
155784,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/services/hostmap/FileBasedHostMapperTest.java,40,,"    assertThat( mapper.resolveInboundHostName( ""external"" ), is( ""internal"" ) );"
155785,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/services/hostmap/FileBasedHostMapperTest.java,46,,"    assertThat( mapper.resolveInboundHostName( ""external-space"" ), is( ""internal-space"" ) );"
155786,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/services/hostmap/FileBasedHostMapperTest.java,46,,"    assertThat( mapper.resolveInboundHostName( ""external-space"" ), is( ""internal-space"" ) );"
155787,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/services/security/token/impl/JWTTokenTest.java,72,,"    final String KID = ""E0LDZulQ0XE_otJ5aoQtQu-RnXv8hU-M9U4dD7vDioA"";"
155788,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/services/security/token/impl/JWTTokenTest.java,74,,"    final String ALGO = ""RS256"";"
155789,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/services/security/token/impl/JWTTokenTest.java,76,,"    claims[0] = ""KNOXSSO"";"
155790,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/services/security/token/impl/JWTTokenTest.java,77,,"    claims[1] = ""john.doe@example.com"";"
155791,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/services/security/token/impl/JWTTokenTest.java,78,,"    claims[2] = ""https://login.example.com"";"
155792,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/topology/TopologyTest.java,98,,"    assertEquals(""hashcode must be equal if objects are equal."", t1.hashCode(), t2.hashCode());"
155793,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/topology/TopologyTest.java,111,,"    final String name = ""topologyX"";"
155794,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/topology/TopologyTest.java,114,,"    final String serviceRole1 = ""role1"";"
155795,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/topology/TopologyTest.java,265,,"    final String appName       = ""aName"";"
155796,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/topology/TopologyTest.java,266,,"    final String appRole       = ""aRole"";"
155797,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/topology/TopologyTest.java,267,,"    final String appParamName  = ""a_key_one"";"
155798,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/topology/TopologyTest.java,268,,"    final String appParamValue = ""a_value_one"";"
155799,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/topology/TopologyTest.java,269,,"    final String appURL        = ""http://host:1234/app"";"
155800,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/topology/TopologyTest.java,303,,"    List<String> urls = Arrays.asList(appURL, appURL + ""/other"");"
155801,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/topology/TopologyTest.java,368,,"    final String serviceName = ""sName"";"
155802,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/topology/TopologyTest.java,369,,"    final String serviceRole = ""sRole"";"
155803,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/topology/TopologyTest.java,370,,"    final String serviceURL = ""http://host:1234/service"";"
155804,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/topology/TopologyTest.java,429,,"    params.put(""paramOne"", ""paramOneValue"");"
155805,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/topology/TopologyTest.java,463,,"    final String name = ""pName"";"
155806,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/topology/TopologyTest.java,464,,"    final String role = ""pRole"";"
155807,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/util/WhitelistUtilsTest.java,37,,"  private static final List<String> LOCALHOST_NAMES = Arrays.asList(""localhost"", ""127.0.0.1"", ""0:0:0:0:0:0:0:1"", ""::1"");"
155808,./TargetProjects/knox/gateway-spi/src/test/java/org/apache/knox/gateway/util/WhitelistUtilsTest.java,41,,"    String whitelist = doTestGetDispatchWhitelist(createMockGatewayConfig(Collections.emptyList(), null), ""TEST"");"
155809,./TargetProjects/knox/gateway-test-release/webhdfs-kerb-test/src/test/java/org/apache/hadoop/http/HttpServer2.java,627,,"                                     .put(""acceptRanges"", ""true"")"
155810,./TargetProjects/knox/gateway-test-release/webhdfs-kerb-test/src/test/java/org/apache/knox/gateway/SecureClusterTest.java,164,,"    System.setProperty(""sun.security.krb5.debug"", ""true"");"
155811,./TargetProjects/knox/gateway-test-release/webhdfs-kerb-test/src/test/java/org/apache/knox/gateway/SecureClusterTest.java,265,,"        .addTag(""provider"")"
155812,./TargetProjects/knox/gateway-test-release/webhdfs-kerb-test/src/test/java/org/apache/knox/gateway/SecureClusterTest.java,266,,"        .addTag(""role"").addText(""webappsec"")"
155813,./TargetProjects/knox/gateway-test-release/webhdfs-kerb-test/src/test/java/org/apache/knox/gateway/SecureClusterTest.java,267,,"        .addTag(""name"").addText(""WebAppSec"")"
155814,./TargetProjects/knox/gateway-test-release/webhdfs-kerb-test/src/test/java/org/apache/knox/gateway/SecureClusterTest.java,268,,"        .addTag(""enabled"").addText(""true"")"
155815,./TargetProjects/knox/gateway-test-release/webhdfs-kerb-test/src/test/java/org/apache/knox/gateway/SecureClusterTest.java,269,,"        .addTag(""param"")"
155816,./TargetProjects/knox/gateway-test-release/webhdfs-kerb-test/src/test/java/org/apache/knox/gateway/SecureClusterTest.java,271,,"        .addTag(""value"").addText(""false"").gotoParent().gotoParent()"
155817,./TargetProjects/knox/gateway-test-release/webhdfs-kerb-test/src/test/java/org/apache/knox/gateway/SecureKnoxShellTest.java,203,,"    System.setProperty(""javax.security.auth.useSubjectCredsOnly"", ""false"");"
155818,./TargetProjects/knox/gateway-test-release/webhdfs-kerb-test/src/test/java/org/apache/knox/gateway/SecureKnoxShellTest.java,224,,"        .addTag(""provider"").addTag(""role"").addText(""authentication"")"
155819,./TargetProjects/knox/gateway-test-release/webhdfs-kerb-test/src/test/java/org/apache/knox/gateway/SecureKnoxShellTest.java,225,,"        .addTag(""name"").addText(""HadoopAuth"").addTag(""enabled"").addText(""true"")"
155820,./TargetProjects/knox/gateway-test-release/webhdfs-kerb-test/src/test/java/org/apache/knox/gateway/SecureKnoxShellTest.java,227,,"        .addTag(""param"").addTag(""name"").addText(""config.prefix"").addTag(""value"")"
155821,./TargetProjects/knox/gateway-test-release/webhdfs-kerb-test/src/test/java/org/apache/knox/gateway/SecureKnoxShellTest.java,227,,"        .addTag(""param"").addTag(""name"").addText(""config.prefix"").addTag(""value"")"
155822,./TargetProjects/knox/gateway-test-release/webhdfs-test/src/test/java/org/apache/hadoop/http/HttpServer2.java,628,,"                                     .put(""acceptRanges"", ""true"")"
155823,./TargetProjects/knox/gateway-test-release/webhdfs-test/src/test/java/org/apache/knox/gateway/ShellTest.java,139,,"        .addTag( ""provider"" )"
155824,./TargetProjects/knox/gateway-test-release/webhdfs-test/src/test/java/org/apache/knox/gateway/ShellTest.java,140,,"        .addTag(""role"").addText(""webappsec"")"
155825,./TargetProjects/knox/gateway-test-release/webhdfs-test/src/test/java/org/apache/knox/gateway/ShellTest.java,141,,"        .addTag(""name"").addText(""WebAppSec"")"
155826,./TargetProjects/knox/gateway-test-release/webhdfs-test/src/test/java/org/apache/knox/gateway/ShellTest.java,142,,"        .addTag(""enabled"").addText(""true"")"
155827,./TargetProjects/knox/gateway-test-release/webhdfs-test/src/test/java/org/apache/knox/gateway/ShellTest.java,142,,"        .addTag(""enabled"").addText(""true"")"
155828,./TargetProjects/knox/gateway-test-release/webhdfs-test/src/test/java/org/apache/knox/gateway/ShellTest.java,143,,"        .addTag( ""param"" )"
155829,./TargetProjects/knox/gateway-test-release/webhdfs-test/src/test/java/org/apache/knox/gateway/ShellTest.java,145,,"        .addTag(""value"").addText(""false"").gotoParent().gotoParent()"
155830,./TargetProjects/knox/gateway-test-utils/src/main/java/org/apache/knox/test/mock/MockRequestMatcher.java,207,,"          ""Request "" + request.getMethod() + "" "" + request.getRequestURL() +"
155831,./TargetProjects/knox/gateway-test-utils/src/main/java/org/apache/knox/test/mock/MockServletContext.java,101,,"  @SuppressWarnings(""deprecation"")"
155832,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/AmbariServiceDefinitionTest.java,172,,"    String username = ""guest"";"
155833,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/AmbariServiceDefinitionTest.java,173,,"    String password = ""guest-password"";"
155834,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/AmbariServiceDefinitionTest.java,177,,"        .method( ""GET"" )"
155835,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/AmbariServiceDefinitionTest.java,182,,"        .contentType( ""text/plain"" );"
155836,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminFuncTest.java,122,,"        .addTag( ""name"" ).addText( ""ShiroProvider"" )"
155837,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminFuncTest.java,124,,"        .addTag( ""param"" )"
155838,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminFuncTest.java,126,,"        .addTag( ""value"" ).addText( ""org.apache.knox.gateway.shirorealm.KnoxLdapRealm"" ).gotoParent()"
155839,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminFuncTest.java,160,,"        .header(""Accept"", MediaType.APPLICATION_JSON)"
155840,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,116,,"    File providerConfigDir = new File(testConfig.getGatewayConfDir(), ""shared-providers"");"
155841,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,119,,"    File descriptorsDir = new File(testConfig.getGatewayConfDir(), ""descriptors"");"
155842,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,155,,"        .addTag( ""provider"" )"
155843,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,156,,"        .addTag( ""role"" ).addText( ""webappsec"" )"
155844,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,157,,"        .addTag( ""name"" ).addText( ""WebAppSec"" )"
155845,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,158,,"        .addTag( ""enabled"" ).addText( ""true"" )"
155846,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,158,,"        .addTag( ""enabled"" ).addText( ""true"" )"
155847,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,159,,"        .addTag( ""param"" )"
155848,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,161,,"        .addTag( ""value"" ).addText( ""true"" ).gotoParent().gotoParent()"
155849,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,163,,"        .addTag( ""role"" ).addText( ""authentication"" )"
155850,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,164,,"        .addTag( ""name"" ).addText( ""ShiroProvider"" )"
155851,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,167,,"        .addTag( ""name"" ).addText( ""main.ldapRealm"" )"
155852,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,168,,"        .addTag( ""value"" ).addText( ""org.apache.knox.gateway.shirorealm.KnoxLdapRealm"" ).gotoParent()"
155853,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,170,,"        .addTag( ""name"" ).addText( ""main.ldapRealm.userDnTemplate"" )"
155854,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,171,,"        .addTag( ""value"" ).addText( ""uid={0},ou=people,dc=hadoop,dc=apache,dc=org"" ).gotoParent()"
155855,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,173,,"        .addTag( ""name"" ).addText( ""main.ldapRealm.contextFactory.url"" )"
155856,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,179,,"        .addTag( ""name"" ).addText( ""urls./**"" )"
155857,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,180,,"        .addTag( ""value"" ).addText( ""authcBasic"" ).gotoParent().gotoParent()"
155858,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,182,,"        .addTag( ""role"" ).addText( ""identity-assertion"" )"
155859,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,184,,"        .addTag( ""name"" ).addText( ""Default"" ).gotoParent()"
155860,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,320,,"    String username = ""admin"";"
155861,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,321,,"    String password = ""admin-password"";"
155862,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,322,,"    String serviceUrl = clusterUrl + ""/api/v1/topologies"";"
155863,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,326,,"        .header(""Accept"", MediaType.APPLICATION_JSON)"
155864,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,336,,"        .body(""topologies.topology[1].href"", not(nullValue()))"
155865,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,366,,"        .body(""topology.name"", equalTo(""test-cluster""))"
155866,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,806,,"        ""            <param>\n"" +"
155867,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,809,,"        ""            </param>\n"" +"
155868,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,974,,"        .header(""X-Forwarded-Host"", host )"
155869,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,975,,"        .header(""X-Forwarded-Port"", port )"
155870,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,977,,"        .header(""X-Forwarded-Context"", context)"
155871,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,978,,"        .header(""X-Forwarded-Proto"", proto)"
155872,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,1119,,"    final String serviceUrl = clusterUrl + ""/api/v1/providerconfig"";"
155873,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,1123,,"    final List<String> configFileNames = Arrays.asList(configNames.get(0) + "".xml"", configNames.get(1) + "".xml"");"
155874,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,1141,,"    List<String> items = responseBody.path(""items"");"
155875,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,1160,,"    assertEquals(configFileNames.get(0), responseBody.path(""items[0].name""));"
155876,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,1161,,"    String href1 = responseBody.path(""items[0].href"");"
155877,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,1180,,"    String pcTwo = responseBody.path(""items[1].name"");"
155878,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,1227,,"        .header(""Content-type"", MediaType.APPLICATION_XML)"
155879,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,1335,,"    String href2 = responseBody.path(""items[1].href"");"
155880,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,1345,,"    String deletedMsg = responseBody.path(""deleted"");"
155881,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,1346,,"    assertEquals(""provider config "" + FilenameUtils.getBaseName(name1), deletedMsg);"
155882,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,1383,,"    final String descriptorsUrl = clusterUrl + ""/api/v1/descriptors"";"
155883,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAdminTopologyFuncTest.java,1634,,"    final List<String> descriptorFileNames = Arrays.asList(descriptorNames.get(0) + "".json"","
155884,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAppFuncTest.java,167,,"    File topoFile = new File( config.getGatewayTopologyDir(), ""test-topology.xml"" );"
155885,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAppFuncTest.java,172,,"    String username = ""guest"";"
155886,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAppFuncTest.java,173,,"    String password = ""guest-password"";"
155887,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAppFuncTest.java,181,,"        .contentType( ""text/html"" )"
155888,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAppFuncTest.java,183,,"    assertThat( the(body), hasXPath( ""/html/head/title/text()"", equalTo(""Static Hello Application"") ) );"
155889,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAppFuncTest.java,183,,"    assertThat( the(body), hasXPath( ""/html/head/title/text()"", equalTo(""Static Hello Application"") ) );"
155890,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAppFuncTest.java,223,,"    String topoStr = TestUtils.merge( DAT, ""test-dynamic-app-topology.xml"", params );"
155891,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAppFuncTest.java,238,,"        .body( is( clusterUrl + ""/dynamic-app-path/?null"" ) )"
155892,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayAppFuncTest.java,239,,"        .when().get( clusterUrl + ""/dynamic-app-path"" );"
155893,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,154,,"    driver.setupService(""WEBHDFS"", ""http://"" + TEST_HOST + "":50070/webhdfs"", ""/cluster/webhdfs"", USE_MOCK_SERVICES);"
155894,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,154,,"    driver.setupService(""WEBHDFS"", ""http://"" + TEST_HOST + "":50070/webhdfs"", ""/cluster/webhdfs"", USE_MOCK_SERVICES);"
155895,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,155,,"    driver.setupService( ""DATANODE"", ""http://"" + TEST_HOST + "":50075/webhdfs"", ""/cluster/webhdfs/data"", USE_MOCK_SERVICES );"
155896,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,156,,"    driver.setupService( ""WEBHCAT"", ""http://"" + TEST_HOST + "":50111/templeton"", ""/cluster/templeton"", USE_MOCK_SERVICES );"
155897,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,157,,"    driver.setupService( ""OOZIE"", ""http://"" + TEST_HOST + "":11000/oozie"", ""/cluster/oozie"", USE_MOCK_SERVICES );"
155898,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,158,,"    driver.setupService( ""HIVE"", ""http://"" + TEST_HOST + "":10000"", ""/cluster/hive"", USE_MOCK_SERVICES );"
155899,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,159,,"    driver.setupService( ""WEBHBASE"", ""http://"" + TEST_HOST + "":60080"", ""/cluster/hbase"", USE_MOCK_SERVICES );"
155900,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,162,,"    driver.setupService( ""RESOURCEMANAGER"", ""http://"" + TEST_HOST + "":8088/ws"", ""/cluster/resourcemanager"", USE_MOCK_SERVICES );"
155901,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,163,,"    driver.setupService( ""FALCON"", ""http://"" + TEST_HOST + "":15000"", ""/cluster/falcon"", USE_MOCK_SERVICES );"
155902,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,164,,"    driver.setupService( ""STORM"", ""http://"" + TEST_HOST + "":8477"", ""/cluster/storm"", USE_MOCK_SERVICES );"
155903,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,166,,"    driver.setupService( ""SOLR"", ""http://"" + TEST_HOST + "":8983"", ""/cluster/solr"", USE_MOCK_SERVICES );"
155904,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,167,,"    driver.setupService( ""KAFKA"", ""http://"" + TEST_HOST + "":8477"", ""/cluster/kafka"", USE_MOCK_SERVICES );"
155905,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,195,,"            .addTag( ""provider"" )"
155906,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,196,,"              .addTag( ""role"" ).addText( ""webappsec"" )"
155907,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,197,,"              .addTag(""name"").addText(""WebAppSec"")"
155908,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,198,,"              .addTag(""enabled"").addText(""true"")"
155909,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,198,,"              .addTag(""enabled"").addText(""true"")"
155910,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,199,,"              .addTag( ""param"" )"
155911,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,201,,"                .addTag(""value"").addText(""true"").gotoParent().gotoParent()"
155912,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,233,,"          .addTag(""service"")"
155913,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,235,,"            .addTag(""url"").addText(driver.getRealUrl(""WEBHDFS"")).gotoParent()"
155914,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,284,,"    String username = ""hdfs"";"
155915,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,285,,"    String password = ""hdfs-password"";"
155916,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,298,,"        .method( ""PUT"" )"
155917,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,299,,"        .pathInfo( ""/v1"" + root + ""/dir"" )"
155918,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,299,,"        .pathInfo( ""/v1"" + root + ""/dir"" )"
155919,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,300,,"        .queryParam( ""op"", ""MKDIRS"" )"
155920,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,301,,"        .queryParam( ""user.name"", username )"
155921,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,305,,"        .contentType( ""application/json"" );"
155922,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,309,,"        .header(""X-XSRF-Header"", ""jksdhfkhdsf"")"
155923,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,309,,"        .header(""X-XSRF-Header"", ""jksdhfkhdsf"")"
155924,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,315,,"        .body( ""boolean"", is( true ) )"
155925,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,320,,"    assertThat( cookie.getPath(), is( ""/gateway/cluster"" ) );"
155926,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,339,,"        .pathInfo( ""/v1"" + root + ""/dir/file"" )"
155927,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,341,,"        .queryParam( ""op"", ""CREATE"" )"
155928,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,345,,"        .header(""Location"", driver.getRealUrl(""DATANODE"") + ""/v1"" + root + ""/dir/file?op=CREATE&user.name=hdfs"");"
155929,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,356,,"    log.debug( ""Redirect location: "" + response.getHeader( ""Location"" ) );"
155930,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,415,,"        .method( ""DELETE"" )"
155931,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,420,,"        .queryParam( ""recursive"", ""true"" )"
155932,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,436,,"          .when().delete( driver.getUrl( ""WEBHDFS"" ) + ""/v1/~"" + root + ( driver.isUseGateway() ? """" : ""?user.name="" + username ) );"
155933,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,537,,"        .method( ""GET"" )"
155934,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,539,,"        .queryParam( ""op"", ""LISTSTATUS"" )"
155935,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,584,,"      .auth().preemptive().basic( ""mapred-user"", ""mapred-password"" )"
155936,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,625,,"        .contentType( ""text/plain"" )"
155937,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,689,,"        .queryParam( ""op"", ""OPEN"" )"
155938,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,760,,"    String userB = ""mapred"";"
155939,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,771,,"    createDir( userA, passA, groupA, root + ""/dirA700"", ""700"", 200, 200 );"
155940,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,772,,"    createDir( userA, passA, groupA, root + ""/dirA770"", ""770"", 200, 200 );"
155941,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,773,,"    createDir( userA, passA, groupA, root + ""/dirA707"", ""707"", 200, 200 );"
155942,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,774,,"    createDir( userA, passA, groupA, root + ""/dirA777"", ""777"", 200, 200 );"
155943,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,782,,"    createFile( userA, passA, groupA, root + ""/dirA700/fileA700"", ""700"", ""text/plain"", ""small1.txt"", 307, 201, 200 );"
155944,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,782,,"    createFile( userA, passA, groupA, root + ""/dirA700/fileA700"", ""700"", ""text/plain"", ""small1.txt"", 307, 201, 200 );"
155945,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,783,,"    createFile( userA, passA, groupA, root + ""/dirA770/fileA770"", ""770"", ""text/plain"", ""small1.txt"", 307, 201, 200 );"
155946,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,784,,"    createFile( userA, passA, groupA, root + ""/dirA707/fileA707"", ""707"", ""text/plain"", ""small1.txt"", 307, 201, 200 );"
155947,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,785,,"    createFile( userA, passA, groupA, root + ""/dirA777/fileA777"", ""777"", ""text/plain"", ""small1.txt"", 307, 201, 200 );"
155948,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,787,,"    createFile( userA, passA, groupAB, root + ""/dirAB700/fileAB700"", ""700"", ""text/plain"", ""small1.txt"", 307, 201, 200 );"
155949,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,788,,"    createFile( userA, passA, groupAB, root + ""/dirAB770/fileAB770"", ""770"", ""text/plain"", ""small1.txt"", 307, 201, 200 );"
155950,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,848,,"    updateFile( userC, passC, root + ""/dirA700/fileA700"", ""text/plain"", ""small2.txt"", 307, 403 );"
155951,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,855,,"    deleteFile( userC, passC, root + ""/dirA700/fileA700"", ""false"", HttpStatus.SC_FORBIDDEN );"
155952,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,891,,"    createDir( user, pass, null, root+""/output"", ""777"", 200, 200 );"
155953,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,1065,,"        .method( ""POST"" )"
155954,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,1067,,"        .contentType( ""application/x-thrift"" )"
155955,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,1452,,"    String username = ""hbase"";"
155956,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,1453,,"    String password = ""hbase-password"";"
155957,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,1460,,"    .header( ""Accept"", ContentType.XML.toString() )"
155958,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,1463,,"    .content( driver.getResourceBytes( resourceName + "".xml"" ) )"
155959,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,1487,,"    .content( driver.getResourceBytes( resourceName + "".json"" ) )"
155960,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,1506,,"    .header( ""Accept"", ""application/x-protobuf"" )"
155961,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,1509,,"    .content( driver.getResourceString( resourceName + "".protobuf""), StandardCharsets.UTF_8 )"
155962,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,1681,,"    String resourceName = ""hbase/table-data"";"
155963,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,2178,,"    getYarnRmResource( ""/v1/cluster/"", ContentType.JSON, ""yarn/cluster-info"" );"
155964,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3297,,"    assertThat( link, containsString(""/storm/logviewer"") );"
155965,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3423,,"        .header(""X-Forwarded-Host"", Matchers.is(oneOf(gatewayHostName + "":"" + gatewayPort, gatewayAddrName + "":"" + gatewayPort)))"
155966,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3424,,"        .header(""X-Forwarded-Proto"", ""http"")"
155967,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3425,,"        .header(""X-Forwarded-Port"", Integer.toString(gatewayPort))"
155968,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3426,,"        .header(""X-Forwarded-Context"", ""/gateway/cluster"")"
155969,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3427,,"        .header( ""X-Forwarded-Server"", Matchers.is(oneOf( gatewayHostName, gatewayAddrName ) ))"
155970,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3428,,"        .header( ""X-Forwarded-For"", Matchers.is(oneOf( gatewayHostName, gatewayAddrName ) ))"
155971,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3483,,"        .header(""X-Forwarded-For"", Matchers.containsString(""what, boo""))"
155972,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3632,,"        .body(not(containsString(""\""httpCode\"" : 401"")))"
155973,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3633,,"        .body(not(containsString(""\""httpCode\"" : 404"")))"
155974,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3634,,"        .body(not(containsString(""\""httpCode\"" : 403"")))"
155975,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3711,,"    String[] args = {""service-test"", ""--master"", ""knox"", ""--cluster"", driver.clusterName, ""--hostname"", gatewayAddress.getHostName(),"
155976,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3711,,"    String[] args = {""service-test"", ""--master"", ""knox"", ""--cluster"", driver.clusterName, ""--hostname"", gatewayAddress.getHostName(),"
155977,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3711,,"    String[] args = {""service-test"", ""--master"", ""knox"", ""--cluster"", driver.clusterName, ""--hostname"", gatewayAddress.getHostName(),"
155978,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3711,,"    String[] args = {""service-test"", ""--master"", ""knox"", ""--cluster"", driver.clusterName, ""--hostname"", gatewayAddress.getHostName(),"
155979,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3711,,"    String[] args = {""service-test"", ""--master"", ""knox"", ""--cluster"", driver.clusterName, ""--hostname"", gatewayAddress.getHostName(),"
155980,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3712,,"        ""--port"", gatewayPort, ""--u"", ""kminder"",""--p"", ""kminder-password"" };"
155981,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3712,,"        ""--port"", gatewayPort, ""--u"", ""kminder"",""--p"", ""kminder-password"" };"
155982,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3712,,"        ""--port"", gatewayPort, ""--u"", ""kminder"",""--p"", ""kminder-password"" };"
155983,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,3896,,"        .queryParam( ""permission"", permsOctal )"
155984,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayBasicFuncTest.java,4017,,"        .queryParam( ""group"", group )"
155985,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayCorrelationIdTest.java,139,,"        .addTag( ""name"" ).addText( ""ShiroProvider"" )"
155986,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayCorrelationIdTest.java,141,,"        .addTag( ""param"" )"
155987,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayCorrelationIdTest.java,143,,"        .addTag( ""value"" ).addText( ""org.apache.knox.gateway.shirorealm.KnoxLdapRealm"" ).gotoParent()"
155988,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayDeployFuncTest.java,138,,"        .addTag( ""name"" ).addText( ""ShiroProvider"" )"
155989,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayDeployFuncTest.java,140,,"        .addTag( ""param"" )"
155990,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayDeployFuncTest.java,142,,"        .addTag( ""value"" ).addText( ""org.apache.knox.gateway.shirorealm.KnoxLdapRealm"" ).gotoParent()"
155991,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayHealthFuncTest.java,145,,"        .addTag(""name"").addText(""ShiroProvider"")"
155992,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayHealthFuncTest.java,147,,"        .addTag(""param"")"
155993,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayHealthFuncTest.java,149,,"        .addTag(""value"").addText(""org.apache.knox.gateway.shirorealm.KnoxLdapRealm"").gotoParent()"
155994,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapDynamicGroupFuncTest.java,76,,"    String serviceUrl = driver.getClusterUrl() + ""/test-service-path/test-service-resource"";"
155995,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapDynamicGroupFuncTest.java,99,,"        .addTag( ""role"" ).addText( ""authentication"" )"
155996,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapDynamicGroupFuncTest.java,100,,"        .addTag( ""name"" ).addText( ""ShiroProvider"" )"
155997,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapDynamicGroupFuncTest.java,101,,"        .addTag( ""enabled"" ).addText( ""true"" )"
155998,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapDynamicGroupFuncTest.java,102,,"        .addTag( ""param"" )"
155999,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapDynamicGroupFuncTest.java,104,,"        .addTag( ""value"" ).addText( ""org.apache.knox.gateway.shirorealm.KnoxLdapRealm"" )"
