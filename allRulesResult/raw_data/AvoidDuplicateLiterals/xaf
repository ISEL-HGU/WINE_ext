5000,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/failover/MultipleServerFailoverTestBase.java,178,,"         transportConfiguration = TransportConfigurationUtils.getNettyAcceptor(live, node, (live ? ""live-"" : ""backup-"") + node);"
5001,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/failover/MultipleServerFailoverTestBase.java,178,,"         transportConfiguration = TransportConfigurationUtils.getNettyAcceptor(live, node, (live ? ""live-"" : ""backup-"") + node);"
5002,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/failover/PagingFailoverTest.java,111,,"         msg.putIntProperty(new SimpleString(""key""), i);"
5003,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/failover/QuorumVoteServerConnectTest.java,62,,"      QuorumVoteServerConnect quorum = new QuorumVoteServerConnect(size, ""foo"", true, liveConnector);"
5004,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/failover/ReplicatedDistributionTest.java,58,,"         int received = msg.getIntProperty(""key"");"
5005,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/failover/ReplicatedFailoverUsingNodeGroupNameTest.java,27,,"      ((ReplicatedPolicyConfiguration) liveConfig.getHAPolicyConfiguration()).setGroupName(""liveNodeGroup1"");"
5006,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/failover/SharedStoreScaleDownBackupTest.java,48,,"      setupClusterConnection(""cluster0"", ""testAddress"", MessageLoadBalancingType.ON_DEMAND, 1, isNetty(), 0, 1);"
5007,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/failover/SingleLiveMultipleBackupsFailoverTest.java,84,,"      instanceLog.debug(""failing node "" + backupNode);"
5008,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/failover/StaticClusterWithBackupFailoverTest.java,25,,"      setupClusterConnectionWithBackups(""cluster0"", ""queues"", messageLoadBalancingType, 1, isNetty(), 0, new int[]{1, 2});"
5009,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/reattach/MultiThreadRandomReattachTestBase.java,251,,"      SimpleString subName = new SimpleString(""sub"" + threadNum);"
5010,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/reattach/MultiThreadRandomReattachTestBase.java,274,,"         throw new Exception(""Timed out waiting for messages on handler "" + System.identityHashCode(handler) +"
5011,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/reattach/MultiThreadRandomReattachTestBase.java,275,,"                                "" threadnum "" +"
5012,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/reattach/MultiThreadRandomReattachTestBase.java,280,,"         throw new Exception(""Handler failed: "" + handler.failure);"
5013,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/reattach/MultiThreadRandomReattachTestBase.java,367,,"      log.debug(""duration "" + (end - start));"
5014,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/reattach/MultiThreadRandomReattachTestBase.java,397,,"      sessSend.addMetaData(""some-data"", RandomUtil.randomString());"
5015,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/reattach/MultiThreadRandomReattachTestBase.java,568,,"         sessConsume.addMetaData(""data"", RandomUtil.randomString());"
5016,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/reattach/RandomReattachTest.java,246,,"         SimpleString subName = new SimpleString(""sub"" + i);"
5017,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/reattach/RandomReattachTest.java,267,,"         message.putIntProperty(new SimpleString(""count""), i);"
5018,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/reattach/RandomReattachTest.java,332,,"      log.debug(""duration "" + (end - start));"
5019,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/reattach/ReattachTest.java,89,,"            message.putIntProperty(new SimpleString(""count""), i);"
5020,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/reattach/ReattachTest.java,90,,"            message.getBodyBuffer().writeString(""aardvarks"");"
5021,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/restart/ClusterRestartTest.java,34,,"      setupClusterConnection(""cluster0"", ""queues"", MessageLoadBalancingType.ON_DEMAND, 1, isNetty(), 0, 1);"
5022,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/restart/ClusterRestartTest.java,47,,"      createQueue(0, ""queues.testaddress2"", ""queue0"", null, false);"
5023,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/restart/ClusterRestartTest.java,58,,"      createQueue(0, ""queues.testaddress"", ""queue10"", null, true);"
5024,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/restart/ClusterRestartTest.java,58,,"      createQueue(0, ""queues.testaddress"", ""queue10"", null, true);"
5025,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/topology/HAClientTopologyTest.java,38,,"      setupClusterConnection(""cluster0"", ""queues"", messageLoadBalancingType, 1, isNetty(), 0, 1, 2, 3, 4);"
5026,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/topology/HAClientTopologyWithDiscoveryTest.java,42,,"      setupDiscoveryClusterConnection(""cluster0"", 0, ""dg1"", ""queues"", messageLoadBalancingType, 1, isNetty());"
5027,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/topology/HAClientTopologyWithDiscoveryTest.java,42,,"      setupDiscoveryClusterConnection(""cluster0"", 0, ""dg1"", ""queues"", messageLoadBalancingType, 1, isNetty());"
5028,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/topology/IsolatedTopologyTest.java,48,,"      waitForTopology(server1, ""cc1"", 2, 5000);"
5029,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/topology/IsolatedTopologyTest.java,50,,"      waitForTopology(server1, ""cc2"", 2, 5000);"
5030,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/topology/IsolatedTopologyTest.java,59,,"      checkTopology(server1, ""cc1"", node1, node2, createInVMTransportConnectorConfig(1, ""srv1""), createInVMTransportConnectorConfig(3, ""srv1""));"
5031,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/topology/IsolatedTopologyTest.java,97,,"      connectTo.add(""other-cc1"");"
5032,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/topology/IsolatedTopologyTest.java,99,,"      ClusterConnectionConfiguration server1CC1 = new ClusterConnectionConfiguration().setName(""cc1"").setAddress(""jms"").setConnectorName(""local-cc1"").setRetryInterval(250).setConfirmationWindowSize(1024).setMessageLoadBalancingType(MessageLoadBalancingType.ON_DEMAND).setStaticConnectors(connectTo);"
5033,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/topology/IsolatedTopologyTest.java,99,,"      ClusterConnectionConfiguration server1CC1 = new ClusterConnectionConfiguration().setName(""cc1"").setAddress(""jms"").setConnectorName(""local-cc1"").setRetryInterval(250).setConfirmationWindowSize(1024).setMessageLoadBalancingType(MessageLoadBalancingType.ON_DEMAND).setStaticConnectors(connectTo);"
5034,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/topology/IsolatedTopologyTest.java,102,,"      connectTo2.add(""other-cc2"");"
5035,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/topology/IsolatedTopologyTest.java,104,,"      ClusterConnectionConfiguration server1CC2 = new ClusterConnectionConfiguration().setName(""cc2"").setAddress(""jms"").setConnectorName(""local-cc2"").setRetryInterval(250).setConfirmationWindowSize(1024).setMessageLoadBalancingType(MessageLoadBalancingType.ON_DEMAND).setStaticConnectors(connectTo2);"
5036,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/topology/TopologyClusterTestBase.java,218,,"      Assert.assertTrue(""Was not notified that all servers are UP"", upLatch.await(10, SECONDS));"
5037,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/cluster/util/MultiServerTestBase.java,159,,"      Configuration configuration = createBasicConfig(node).setJournalMaxIO_AIO(1000).setThreadPoolMaxSize(10).clearAcceptorConfigurations().addAcceptorConfiguration(serverConfigAcceptor).addConnectorConfiguration(""thisConnector"", thisConnector).setHAPolicyConfiguration(sharedStorage ? new SharedStoreMasterPolicyConfiguration() : new ReplicatedPolicyConfiguration());"
5038,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/crossprotocol/MessageIDMultiProtocolTest.java,60,,"         {""OPENWIRE"", ""OPENWIRE""},"
5039,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/crossprotocol/MessageIDMultiProtocolTest.java,61,,"         {""OPENWIRE"", ""CORE""},"
5040,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/crossprotocol/MessageIDMultiProtocolTest.java,62,,"         {""OPENWIRE"", ""AMQP""},"
5041,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/crossprotocol/RequestReplyMultiProtocolTest.java,68,,"         {""OPENWIRE"", ""OPENWIRE""},"
5042,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/crossprotocol/RequestReplyMultiProtocolTest.java,69,,"         {""OPENWIRE"", ""CORE""},"
5043,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/crossprotocol/RequestReplyMultiProtocolTest.java,70,,"         {""OPENWIRE"", ""AMQP""},"
5044,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/crossprotocol/RequestReplyMultiProtocolTest.java,173,,"               Assert.assertTrue(""Type is "" + received.getJMSReplyTo().getClass().toString(), received.getJMSReplyTo() instanceof Queue);"
5045,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/crossprotocol/RequestReplyNonJMSTest.java,91,,"      AmqpClient directClient = new AmqpClient(new URI(""tcp://localhost:61616""), null, null);"
5046,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/crossprotocol/RequestReplyNonJMSTest.java,105,,"         message.setMessageAnnotation(""x-opt-jms-reply-to"", new Byte((byte)10)); // that's invalid on the conversion, lets hope it doesn't fail"
5047,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/crossprotocol/RequestReplyNonJMSTest.java,106,,"         message.setMessageId(""msg-1"");"
5048,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/crossprotocol/RequestReplyNonJMSTest.java,155,,"         message.setText(""Test-Message"");"
5049,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/discovery/DiscoveryBaseTest.java,131,,"      System.out.println(""----------------------------"");"
5050,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/discovery/DiscoveryTest.java,122,,"      bg = new BroadcastGroupImpl(new FakeNodeManager(nodeID), ""broadcast"", 100, null, new JGroupsFileBroadcastEndpointFactory().setChannelName(""tst"").setFile(TEST_JGROUPS_CONF_FILE));"
5051,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/discovery/DiscoveryTest.java,909,,"      Assert.assertEquals(dg.getName(), notif.getProperties().getSimpleStringProperty(new SimpleString(""name"")).toString());"
5052,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/divert/DivertTest.java,72,,"      final String forwardAddress = ""forwardAddress"";"
5053,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/divert/DivertTest.java,74,,"      DivertConfiguration divertConf = new DivertConfiguration().setName(""divert1"").setRoutingName(""divert1"").setAddress(testAddress).setForwardingAddress(forwardAddress).setFilterString(""_AMQ_NotifType = 'CONSUMER_CREATED' OR _AMQ_NotifType = 'CONSUMER_CLOSED'"");"
5054,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/divert/DivertTest.java,105,,"      final String testAddress = ""testAddress"";"
5055,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/divert/DivertTest.java,123,,"      final SimpleString queueName1 = new SimpleString(""queue1"");"
5056,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/divert/DivertTest.java,125,,"      final SimpleString queueName2 = new SimpleString(""queue2"");"
5057,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/divert/DivertTest.java,141,,"      final SimpleString propKey = new SimpleString(""testkey"");"
5058,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/divert/DivertTest.java,526,,"      final SimpleString queueName3 = new SimpleString(""queue3"");"
5059,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/divert/DivertTest.java,528,,"      final SimpleString queueName4 = new SimpleString(""queue4"");"
5060,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/divert/DivertTest.java,754,,"      QueueConfiguration q1 = new QueueConfiguration(""forwardAddress1"").setDurable(true).setRoutingType(RoutingType.ANYCAST);"
5061,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/divert/DivertTest.java,764,,"      divertConf.setRoutingName(""divert2"");"
5062,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/divert/DivertTest.java,883,,"      final String forwardAddress2 = ""forwardAddress2"";"
5063,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/divert/DivertTest.java,932,,"      final String forwardAddress3 = ""forwardAddress3"";"
5064,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/divert/DivertTest.java,938,,"      DivertConfiguration divertConf3 = new DivertConfiguration().setName(""divert3"").setRoutingName(""divert3"").setAddress(testAddress).setForwardingAddress(forwardAddress3);"
5065,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/divert/PersistentDivertTest.java,59,,"      DivertConfiguration divertConf1 = new DivertConfiguration().setName(""divert1"").setRoutingName(""divert1"").setAddress(testAddress).setForwardingAddress(forwardAddress1);"
5066,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/divert/PersistentDivertTest.java,61,,"      DivertConfiguration divertConf2 = new DivertConfiguration().setName(""divert2"").setRoutingName(""divert2"").setAddress(testAddress).setForwardingAddress(forwardAddress2);"
5067,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/divert/PersistentDivertTest.java,63,,"      DivertConfiguration divertConf3 = new DivertConfiguration().setName(""divert3"").setRoutingName(""divert3"").setAddress(testAddress).setForwardingAddress(forwardAddress3);"
5068,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/federation/FederatedAddressTest.java,67,,"      FederationConfiguration federationConfiguration = FederatedTestUtil.createAddressDownstreamFederationConfiguration(""server1"", address,"
5069,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/federation/FederatedAddressTest.java,68,,"          getServer(0).getConfiguration().getTransportConfigurations(""server0"")[0]);"
5070,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/federation/FederatedAddressTest.java,154,,"         producer1.send(session1.createTextMessage(""hello""));"
5071,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/federation/FederatedQueueTest.java,76,,"      FederationConfiguration federationConfiguration = FederatedTestUtil.createQueueUpstreamFederationConfiguration(""server1"", queueName);"
5072,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/federation/FederatedQueueTest.java,102,,"      FederationConfiguration federationConfiguration = FederatedTestUtil.createQueueDownstreamFederationConfiguration(""server0"", queueName, ""server1"");"
5073,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/federation/FederatedQueueTest.java,131,,"         producer1.send(session1.createTextMessage(""hello""));"
5074,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/federation/FederatedQueueTest.java,309,,"      FederationConfiguration federationConfiguration0 = FederatedTestUtil.createQueueDownstreamFederationConfiguration(""server1-downstream"","
5075,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/federation/FederatedTestUtil.java,35,,"      addressPolicyConfiguration.setName( ""AddressPolicy"" + address);"
5076,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/federation/FederatedTestUtil.java,103,,"         new FederationTransformerConfiguration(""transformer"", new TransformerConfiguration(FederatedAddressTest.TestTransformer.class.getName())));"
5077,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/federation/FederatedTestUtil.java,120,,"      downstreamConfiguration.addPolicyRef(""QueuePolicy"" + queueName);"
5078,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/interceptors/InterceptorTest.java,94,,"            sm.putStringProperty(InterceptorTest.key, ""orange"");"
5079,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/interceptors/InterceptorTest.java,115,,"            msgPacket.getMessage().putStringProperty(""userName"", userName);"
5080,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/interceptors/InterceptorTest.java,410,,"         message.putIntProperty(""count"", i);"
5081,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/interceptors/InterceptorTest.java,412,,"         message.putStringProperty(InterceptorTest.key, ""apple"");"
5082,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/interceptors/InterceptorTest.java,456,,"      securityManager.getConfiguration().addUser(""dumb"", ""dumber"");"
5083,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/interceptors/InterceptorTest.java,456,,"      securityManager.getConfiguration().addUser(""dumb"", ""dumber"");"
5084,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/interceptors/InterceptorTest.java,457,,"      securityManager.getConfiguration().addUser(""an"", ""other"");"
5085,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/ActiveMQConnectionFactoryTest.java,83,,"         Assert.fail(""Should throw exception"");"
5086,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/ActiveMQConnectionFactoryTest.java,250,,"      assertTrue(""Object is "" + obj, obj instanceof TestClass1);"
5087,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/ActiveMQConnectionFactoryTest.java,258,,"      obj = receiveObjectMessage(blackList, whiteList, qname, new String(""hello""), useJndi, useBrowser);"
5088,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/ActiveMQConnectionFactoryTest.java,262,,"      blackList = ""org.apache.activemq.artemis.tests.integration.jms.serializables"";"
5089,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/ActiveMQConnectionFactoryTest.java,274,,"      blackList = ""some.other.package"";"
5090,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/JMSSecurityTest.java,46,,"      securityManager.getConfiguration().addUser(""IDo"", ""Exist"");"
5091,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/JMSSecurityTest.java,46,,"      securityManager.getConfiguration().addUser(""IDo"", ""Exist"");"
5092,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/JmsProducerTest.java,104,,"      context.createProducer().setProperty(""prop1"", 1).setProperty(""prop2"", 2).send(q1, ""Text1"");"
5093,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/JmsProducerTest.java,104,,"      context.createProducer().setProperty(""prop1"", 1).setProperty(""prop2"", 2).send(q1, ""Text1"");"
5094,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/JmsProducerTest.java,199,,"            byte value1 = producer.getByteProperty(""testGetNonExistentProperties"");"
5095,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/JmsProducerTest.java,202,,"               assertTrue(""value0: "" + value0 + "" value1: "" + value1, value1 == value0);"
5096,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/JmsProducerTest.java,202,,"               assertTrue(""value0: "" + value0 + "" value1: "" + value1, value1 == value0);"
5097,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/JmsProducerTest.java,210,,"               throw new Exception(""Expected exception: "" + expected.getClass().getName() +"
5098,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/JmsProducerTest.java,211,,"                                      "" but got: "" + t.getClass(), t);"
5099,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/JmsProducerTest.java,260,,"               fail(""non existent double property expects exception, but got value: "" + value1);"
5100,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/ProgrammaticRedeployTest.java,65,,"         Assert.assertNotNull(getAddressInfo(embeddedActiveMQ, ""config_test_queue_removal""));"
5101,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/ProgrammaticRedeployTest.java,70,,"         Assert.assertNotNull(getAddressInfo(embeddedActiveMQ, ""permanent_test_queue_removal""));"
5102,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/ProgrammaticRedeployTest.java,74,,"         Assert.assertNotNull(getAddressInfo(embeddedActiveMQ, ""config_test_queue_change""));"
5103,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/ProgrammaticRedeployTest.java,75,,"         Assert.assertTrue(listQueuesNamesForAddress(embeddedActiveMQ, ""config_test_queue_change"").contains(""config_test_queue_change_queue""));"
5104,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,73,,"      Path brokerXML = getTestDirfile().toPath().resolve(""broker.xml"");"
5105,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,85,,"         Queue queue = session.createQueue(""autoQueue"");"
5106,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,87,,"         producer.send(session.createTextMessage(""text""));"
5107,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,170,,"         Assert.assertEquals(""DLQ"", embeddedActiveMQ.getActiveMQServer().getAddressSettingsRepository().getMatch(""jms"").getDeadLetterAddress().toString());"
5108,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,181,,"         Assert.assertEquals(""NewQueue"", embeddedActiveMQ.getActiveMQServer().getAddressSettingsRepository().getMatch(""jms"").getDeadLetterAddress().toString());"
5109,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,229,,"            Queue queue = session.createQueue(""myFilterQueue"");"
5110,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,246,,"            Message message = session.createTextMessage(""hello"");"
5111,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,448,,"                 .getBinding(new SimpleString(""myQueue""));"
5112,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,691,,"         Assert.assertNotNull(getAddressInfo(embeddedActiveMQ, ""config_test_address_removal_no_queue""));"
5113,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,692,,"         Assert.assertNotNull(getAddressInfo(embeddedActiveMQ, ""config_test_address_removal""));"
5114,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,693,,"         Assert.assertNotNull(getAddressInfo(embeddedActiveMQ, ""config_test_queue_removal""));"
5115,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,694,,"         Assert.assertTrue(listQueuesNamesForAddress(embeddedActiveMQ, ""config_test_queue_removal"").contains(""config_test_queue_removal_queue_1""));"
5116,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,695,,"         Assert.assertTrue(listQueuesNamesForAddress(embeddedActiveMQ, ""config_test_queue_removal"").contains(""config_test_queue_removal_queue_2""));"
5117,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,698,,"         Assert.assertNotNull(getAddressInfo(embeddedActiveMQ, ""permanent_test_queue_removal""));"
5118,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,702,,"         Assert.assertNotNull(getAddressInfo(embeddedActiveMQ, ""config_test_queue_change""));"
5119,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,703,,"         Assert.assertTrue(listQueuesNamesForAddress(embeddedActiveMQ, ""config_test_queue_change"").contains(""config_test_queue_change_queue""));"
5120,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,757,,"            context.createProducer().send(context.createQueue(""myAddress""), ""hello"");"
5121,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,812,,"         Assert.assertEquals(getSecurityRoles(embeddedActiveMQ, ""security_address"").size(), 1);"
5122,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,815,,"         Assert.assertEquals(getAddressSettings(embeddedActiveMQ, ""address_settings_address"").getDeadLetterAddress(), SimpleString.toSimpleString(""OriginalDLQ""));"
5123,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java,830,,"         Assert.assertEquals(true, getQueue(embeddedActiveMQ, ""config_test_queue_change_queue_defaults"").isPurgeOnNoConsumers());"
5124,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,84,,"      props.put(Context.INITIAL_CONTEXT_FACTORY, ""org.apache.activemq.artemis.jndi.ActiveMQInitialContextFactory"");"
5125,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,85,,"      props.put(""connectionFactory.VmConnectionFactory"", ""vm://0"");"
5126,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,86,,"      props.put(""connectionFactory.TCPConnectionFactory"", ""tcp://localhost:61616"");"
5127,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,100,,"      props.put(""connectionFactory.ConnectionFactory"", ""vm://0"");"
5128,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,103,,"      ConnectionFactory connectionFactory = (ConnectionFactory) ctx.lookup(""ConnectionFactory"");"
5129,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,151,,"      props.put(""connectionFactory.myConnectionFactory"", ""vm://0?type=XA_CF"");"
5130,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,154,,"      ActiveMQConnectionFactory connectionFactory = (ActiveMQConnectionFactory) ctx.lookup(""myConnectionFactory"");"
5131,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,247,,"         ActiveMQInitialContextFactory.REFRESH_TIMEOUT + ""=5000&"" +"
5132,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,248,,"         ActiveMQInitialContextFactory.DISCOVERY_INITIAL_WAIT_TIMEOUT + ""=6000"");"
5133,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,472,,"      props.put(""queue.myQueue"", ""myQueue"");"
5134,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,542,,"      props.put(""topic.myTopic"", ""myTopic"");"
5135,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,676,,"      testContext(ctx, ""QueueConnectionFactory"", JMSFactoryType.QUEUE_CF);"
5136,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,677,,"      testContext(ctx, ""TopicConnectionFactory"", JMSFactoryType.TOPIC_CF);"
5137,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,678,,"      testContext(ctx, ""XAConnectionFactory"", JMSFactoryType.XA_CF);"
5138,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,679,,"      testContext(ctx, ""XAQueueConnectionFactory"", JMSFactoryType.QUEUE_XA_CF);"
5139,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,680,,"      testContext(ctx, ""XATopicConnectionFactory"", JMSFactoryType.TOPIC_XA_CF);"
5140,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,805,,"      assertTrue(((ActiveMQDestination)session.createQueue(""testQueue"")).getSimpleAddress().startsWith(PacketImpl.OLD_QUEUE_PREFIX));"
5141,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/SimpleJNDIClientTest.java,807,,"      assertTrue(((ActiveMQDestination)session.createTopic(""testTopic"")).getSimpleAddress().startsWith(PacketImpl.OLD_TOPIC_PREFIX));"
5142,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/ConsumerPriorityTest.java,62,,"         Queue queue1 = session.createQueue(queueName + ""?consumer-priority=3"");"
5143,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/ConsumerPriorityTest.java,64,,"         Queue queue3 = session.createQueue(queueName + ""?consumer-priority=1"");"
5144,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/ConsumerPriorityTest.java,89,,"            message.setText(""Message"" + j);"
5145,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/ExclusiveTest.java,80,,"            message.setText(""Message"" + j);"
5146,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/GroupingTest.java,91,,"         message.setText(""Message"" + j);"
5147,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/GroupingTest.java,97,,"         String prop = message.getStringProperty(""JMSXGroupID"");"
5148,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/GroupingTest.java,126,,"      Assume.assumeFalse(""only makes sense withOUT auto-group"", ((ActiveMQConnectionFactory) fact).isAutoGroup());"
5149,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/GroupingTest.java,127,,"      Assume.assumeTrue(""only makes sense withOUT explicit group-id"", ((ActiveMQConnectionFactory) fact).getGroupID() == null);"
5150,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/GroupingTest.java,324,,"      final String groupID1 = ""groupA"";"
5151,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/GroupingTest.java,325,,"      final String groupID2 = ""groupB"";"
5152,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/GroupingTest.java,326,,"      final String groupID3 = ""groupC"";"
5153,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/LVQTest.java,92,,"         org.apache.activemq.artemis.core.server.Queue serverQueue = server.locateQueue(""random"");"
5154,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/LVQTest.java,131,,"            message.setText(""Message"" + j);"
5155,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/LVQTest.java,132,,"            message.setStringProperty(Message.HDR_LAST_VALUE_NAME.toString(), ""key"");"
5156,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/LVQTest.java,141,,"         assertEquals(""Message99"", tm.getText());"
5157,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/LVQTest.java,217,,"         assertEquals(""reuters_code"", a.getQueueAttributes().getLastValueKey().toString());"
5158,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/MessageTest.java,87,,"            fail(""Should throw exception"");"
5159,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/MessageTest.java,184,,"      msg.setStringProperty(""Test"", ""SomeValue"");"
5160,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/MessageTest.java,265,,"      createTopic(true, ""Topic1"");"
5161,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/NoLocalSubscriberTest.java,126,,"         Connection connection = connectionFactory.createConnection(""guest"", ""guest"");"
5162,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/QueueAutoDeleteTest.java,82,,"         producer.send(session.createTextMessage(""hello1""));"
5163,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/QueueAutoDeleteTest.java,83,,"         producer.send(session.createTextMessage(""hello2""));"
5164,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/ReSendMessageTest.java,79,,"         mm.setInt(""int"", 9);"
5165,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/ReSendMessageTest.java,80,,"         mm.setLong(""long"", 10L);"
5166,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/ReSendMessageTest.java,81,,"         mm.setObject(""object"", new String(""this is an object""));"
5167,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/SessionMetadataAddExceptionTest.java,102,,"         con.setClientID(""valid"");"
5168,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/SessionTest.java,49,,"            qSess.createDurableConsumer(topic, ""mySub1"");"
5169,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/SessionTest.java,50,,"            fail(""exception expected"");"
5170,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/SessionTest.java,56,,"            qSess.createDurableConsumer(topic, ""mySub1"", ""TEST = 'test'"", false);"
5171,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,44,,"      server.getConfiguration().getConnectorConfigurations().put(""tst"", new TransportConfiguration(INVM_CONNECTOR_FACTORY));"
5172,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,52,,"      jmsServer.createConnectionFactory(true, factCFG, ""/someCF"", ""/someCF2"");"
5173,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,52,,"      jmsServer.createConnectionFactory(true, factCFG, ""/someCF"", ""/someCF2"");"
5174,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,56,,"      jmsServer.createConnectionFactory(false, nonPersisted, ""/nonPersisted"");"
5175,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,81,,"      jmsServer.addConnectionFactoryToBindingRegistry(""tst"", ""/newJNDI"");"
5176,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,117,,"      assertTrue(jmsServer.createTopic(true, ""topicOne"", ""/t1"", ""/t.1""));"
5177,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,117,,"      assertTrue(jmsServer.createTopic(true, ""topicOne"", ""/t1"", ""/t.1""));"
5178,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,117,,"      assertTrue(jmsServer.createTopic(true, ""topicOne"", ""/t1"", ""/t.1""));"
5179,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,119,,"      assertTrue(jmsServer.createTopic(false, ""topicTwo"", ""/t2"", ""/t.2""));"
5180,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,119,,"      assertTrue(jmsServer.createTopic(false, ""topicTwo"", ""/t2"", ""/t.2""));"
5181,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,148,,"      jmsServer.addTopicToBindingRegistry(""topicOne"", ""/tI"");"
5182,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,162,,"      assertFalse(jmsServer.removeTopicFromBindingRegistry(""topicOne"", ""nothing""));"
5183,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,219,,"      assertTrue(jmsServer.createQueue(true, ""queue1"", null, true, ""/q1"", ""/q.1""));"
5184,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,219,,"      assertTrue(jmsServer.createQueue(true, ""queue1"", null, true, ""/q1"", ""/q.1""));"
5185,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,219,,"      assertTrue(jmsServer.createQueue(true, ""queue1"", null, true, ""/q1"", ""/q.1""));"
5186,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,227,,"      assertTrue(jmsServer.createQueue(false, ""queue2"", null, true, ""/q2"", ""/q.2""));"
5187,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,227,,"      assertTrue(jmsServer.createQueue(false, ""queue2"", null, true, ""/q2"", ""/q.2""));"
5188,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/StoreConfigTest.java,239,,"      assertNullJNDI(""/qI"");"
5189,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/WildcardTest.java,185,,"         Assert.assertNotNull(""consumerA message - "" + i + "" is null"", received1);"
5190,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/WildcardTest.java,193,,"      long addressSizeA  = (Long)mbeanServer.getAttribute(new ObjectName(""org.apache.activemq.artemis:broker=\""localhost\"",component=addresses,address=\"""" + topicA + ""\""""), ""AddressSize"");"
5191,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/WildcardTest.java,193,,"      long addressSizeA  = (Long)mbeanServer.getAttribute(new ObjectName(""org.apache.activemq.artemis:broker=\""localhost\"",component=addresses,address=\"""" + topicA + ""\""""), ""AddressSize"");"
5192,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/client/WildcardTest.java,196,,"      Assert.assertTrue(topicA + "" AddressSize < 0"", addressSizeA >= 0);"
5193,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/cluster/BindingsClusterTest.java,88,,"      conn2.setClientID(""someClient2"");"
5194,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/cluster/BindingsClusterTest.java,104,,"         MessageConsumer cons2 = session2.createDurableSubscriber(topic2, ""sub2"");"
5195,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/cluster/JMSFailoverListenerTest.java,126,,"      SimpleString jmsQueueName = new SimpleString(""myqueue"");"
5196,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/cluster/JMSFailoverTest.java,207,,"      SimpleString jmsQueueName = new SimpleString(""myqueue"");"
5197,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/cluster/JMSReconnectTest.java,183,,"         coreSession.createQueue(new QueueConfiguration(""blahblah"").setAddress(""mytopic"").setDurable(false));"
5198,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/cluster/TemporaryQueueClusterTest.java,45,,"      jmsServer1.createQueue(false, QUEUE_NAME, null, true, ""/queue/target"");"
5199,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/connection/ConnectionFactorySerializationTest.java,74,,"      cf = (ActiveMQConnectionFactory) namingContext.lookup(""/MyConnectionFactory"");"
5200,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/connection/ConnectionFactorySerializationTest.java,82,,"      Assert.assertEquals(dgc.getName(), ""dg1"");"
5201,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/connection/ConnectionFactorySerializationTest.java,109,,"      Assert.assertEquals(""myChannel"", befc.getChannelName());"
5202,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/connection/ConnectionFactorySerializationTest.java,163,,"         .setName(""MyConnectionFactory"")"
5203,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/connection/ExceptionListenerTest.java,89,,"      coreSession.getConnection().fail(new ActiveMQInternalErrorException(""blah""));"
5204,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/consumer/CreateSubscriptionTest.java,60,,"      server.addAddressInfo(new AddressInfo(SimpleString.toSimpleString(""myTopic"")).addRoutingType(RoutingType.MULTICAST));"
5205,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/consumer/CreateSubscriptionTest.java,71,,"         MessageConsumer messageConsumer = session.createSharedConsumer(topic, ""consumer1"");"
5206,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/consumer/CreateSubscriptionTest.java,122,,"      testCreateManyConsumers(""createDurableSubscriber"");"
5207,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/consumer/JmsConsumerTest.java,559,,"      producer.send(session.createTextMessage(""test""));"
5208,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/consumer/JmsConsumerTest.java,631,,"      MessageConsumer cons = session.createSharedConsumer(topic, ""cons1"");"
5209,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/consumer/JmsConsumerTest.java,823,,"      String topic1 = ""durable.#"";"
5210,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/consumer/JmsConsumerTest.java,824,,"      String topic2 = ""durable.test"";"
5211,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/jms2client/InvalidDestinationTest.java,68,,"         fail(""Expected InvalidDestinationRuntimeException, received "" + e);"
5212,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/jms2client/InvalidDestinationTest.java,115,,"         context.createConsumer(invalidDestination, ""lastMessage = TRUE"");"
5213,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/jms2client/InvalidDestinationTest.java,131,,"         context.createDurableConsumer(invalidTopic, ""InvalidDestinationRuntimeException"");"
5214,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/jms2client/InvalidDestinationTest.java,198,,"            session.createDurableSubscriber(invalidTopic, ""InvalidDestinationException"");"
5215,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/jms2client/InvalidDestinationTest.java,202,,"            fail(""Expected InvalidDestinationException, received "" + e);"
5216,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/jms2client/SharedConsumerTest.java,54,,"         JMSConsumer con1 = context.createSharedDurableConsumer(topic1, ""mySharedCon"");"
5217,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/jms2client/SharedConsumerTest.java,126,,"         context.createSharedConsumer(topic1, ""mySharedCon"", ""sel = 'sel1'"");"
5218,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/jms2client/SharedConsumerTest.java,128,,"            context.createSharedConsumer(topic1, ""mySharedCon"", ""sel = 'sel2'"");"
5219,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/jms2client/SharedConsumerTest.java,129,,"            fail(""expected JMSRuntimeException"");"
5220,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/jms2client/SharedConsumerTest.java,133,,"            fail(""threw wrong exception expected JMSRuntimeException got "" + e);"
5221,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/largemessage/JMSLargeMessageTest.java,76,,"      m.setObjectProperty(""JMS_AMQ_InputStream"", ActiveMQTestBase.createFakeLargeStream(1024 * 1024));"
5222,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/journal/MappedSequentialFileFactoryTest.java,71,,"               SequentialFile file = factory.createSequentialFile(""file.txt"");"
5223,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/journal/NIOSequentialFileFactoryTest.java,74,,"               SequentialFile file = factory.createSequentialFile(""file.txt"");"
5224,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/journal/ValidateTransactionHealthTest.java,51,,"      internalTest(""aio"", getTestDir(), 10000, 100, true, true, 1);"
5225,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/journal/ValidateTransactionHealthTest.java,71,,"      internalTest(""nio"", getTestDir(), 10000, 100, true, true, 1);"
5226,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/journal/ValidateTransactionHealthTest.java,91,,"      internalTest(""nio2"", getTestDir(), 10000, 100, true, true, 1);"
5227,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/journal/ValidateTransactionHealthTest.java,111,,"      internalTest(""mmap"", getTestDir(), 10000, 100, true, true, 1);"
5228,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/largemessage/LargeMessageTestBase.java,317,,"                                 LargeMessageTestBase.log.debug(""Read "" + b + "" bytes"");"
5229,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/largemessage/ServerLargeMessageTest.java,72,,"      originalPath = System.getProperty(""java.security.auth.login.config"");"
5230,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,214,,"      ClientSession session = csf.createSession(""myUser"", ""myPass"", false, true, false, false, 0);"
5231,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,214,,"      ClientSession session = csf.createSession(""myUser"", ""myPass"", false, true, false, false, 0);"
5232,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,258,,"      Assert.assertEquals(connectorConfig.getName(), data.getString(""name""));"
5233,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,271,,"      serverControl.createAddress(address.toString(), ""ANYCAST"");"
5234,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,911,,"      serverControl.addSecuritySettings(addressMatch, ""foo"", ""foo, bar"", null, ""bar"", ""foo, bar"", """", """", ""bar"", ""foo"", ""foo"");"
5235,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,911,,"      serverControl.addSecuritySettings(addressMatch, ""foo"", ""foo, bar"", null, ""bar"", ""foo, bar"", """", """", ""bar"", ""foo"", ""foo"");"
5236,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,1656,,"      message.putStringProperty(""prop"", text);"
5237,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2456,,"      String key = ""creationTime"";"
5238,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2483,,"      Assert.assertTrue(first.getString(""connectionID"").length() > 0);"
5239,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2486,,"      Assert.assertEquals(0, first.getJsonNumber(""sessionCount"").longValue());"
5240,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2528,,"      Assert.assertNotNull(first.getJsonNumber(""consumerID"").longValue());"
5241,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2531,,"      Assert.assertTrue(first.getString(""sessionID"").length() > 0);"
5242,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2533,,"      Assert.assertTrue(first.getString(""queueName"").length() > 0);"
5243,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2535,,"      Assert.assertEquals(false, first.getBoolean(""browseOnly""));"
5244,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2537,,"      Assert.assertEquals(0, first.getJsonNumber(""deliveringCount"").longValue());"
5245,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2549,,"      Assert.assertTrue(second.getString(""filter"").length() > 0);"
5246,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2659,,"      Assert.assertTrue(first.getString(""principal"").length() > 0);"
5247,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2660,,"      Assert.assertEquals(""guest"", first.getString(""principal""));"
5248,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2662,,"      Assert.assertEquals(0, first.getJsonNumber(""consumerCount"").longValue());"
5249,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2734,,"      Assert.assertEquals(second.getJsonObject(""metadata"").getJsonString(""foo"").getString(), ""bar"");"
5250,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2766,,"      SimpleString queueName1 = new SimpleString(""my_queue_one"");"
5251,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2767,,"      SimpleString queueName2 = new SimpleString(""my_queue_two"");"
5252,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2768,,"      SimpleString queueName3 = new SimpleString(""other_queue_three"");"
5253,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2794,,"      String filterString = createJsonFilter(""name"", ""CONTAINS"", ""my_queue"");"
5254,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2794,,"      String filterString = createJsonFilter(""name"", ""CONTAINS"", ""my_queue"");"
5255,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2799,,"      JsonArray array = (JsonArray) queuesAsJsonObject.get(""data"");"
5256,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2801,,"      Assert.assertEquals(""number of queues returned from query"", 2, array.size());"
5257,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2826,,"      Assert.assertNotEquals(""address"", """", array.getJsonObject(0).getString(""address""));"
5258,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2829,,"      Assert.assertEquals(""durable"", ""false"", array.getJsonObject(0).getString(""durable""));"
5259,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2835,,"      Assert.assertEquals(""autoCreated"", ""false"", array.getJsonObject(0).getString(""autoCreated""));"
5260,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2836,,"      Assert.assertEquals(""user"", """", array.getJsonObject(0).getString(""user""));"
5261,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2895,,"      filterString = createJsonFilter(""name"", ""CONTAINS"", ""my_queue"", ""id"", ""desc"");"
5262,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,2917,,"      filterString = createJsonFilter(""name"", ""CONTAINS"", ""my_queue"", ""autoCreated"", ""asc"");"
5263,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3039,,"         String filterString = createJsonFilter(""CONSUMER_COUNT"", ""CONTAINS"", ""0"");"
5264,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3047,,"         filterString = createJsonFilter(""CONSUMER_COUNT"", ""LESS_THAN"", ""1"");"
5265,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3053,,"         Assert.assertEquals(""correct queue returned from query"", queueName4.toString(), array.getJsonObject(0).getString(""name""));"
5266,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3056,,"         filterString = createJsonFilter(""CONSUMER_COUNT"", ""GREATER_THAN"", ""2"");"
5267,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3061,,"         Assert.assertEquals(""number of queues returned from GREATER_THAN query"", 1, array.size());"
5268,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3065,,"         filterString = createJsonFilter(""CONSUMER_COUNT"", ""EQUALS"", ""3"");"
5269,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3175,,"         String filterString = createJsonFilter(""CONSUMER_COUNT"", ""CONTAINS"", ""NOT_NUMBER"");"
5270,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3249,,"      SimpleString addressName1 = new SimpleString(""my_address_one"");"
5271,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3282,,"      Assert.assertEquals(""number of addresses returned from query"", 2, array.size());"
5272,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3283,,"      Assert.assertTrue(""address name check"", array.getJsonObject(0).getString(""name"").contains(""my_address""));"
5273,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3432,,"         String filterString = createJsonFilter(""queue"", ""EQUALS"", queueName1.toString());"
5274,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3437,,"         Assert.assertEquals(""number of consumers returned from query"", 2, array.size());"
5275,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3484,,"         Assert.assertEquals(""consumer protocol "", ""CORE"", jsonConsumer.getString(""protocol""));"
5276,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3487,,"         Assert.assertNotEquals(""session"", """", jsonConsumer.getString(""session""));"
5277,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3488,,"         Assert.assertEquals(""clientID"", """", jsonConsumer.getString(""clientID""));"
5278,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3490,,"         Assert.assertNotEquals(""localAddress"", """", jsonConsumer.getString(""localAddress""));"
5279,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3491,,"         Assert.assertNotEquals(""remoteAddress"", """", jsonConsumer.getString(""remoteAddress""));"
5280,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3589,,"         Assert.assertEquals(""number of sessions returned from query"", 3, array.size());"
5281,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3682,,"         String filterString = createJsonFilter(""SESSION_COUNT"", ""GREATER_THAN"", ""1"");"
5282,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3688,,"         Assert.assertEquals(""number of connections returned from query"", 3, array.size());"
5283,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3694,,"         Assert.assertEquals(""users"", ""guest"", jsonConnection.getString(""users""));"
5284,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlTest.java,3877,,"      assertEquals(""MemoryUsagePercentage"", 0, serverControl.getAddressMemoryUsagePercentage());"
5285,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,139,,"            proxy.invokeOperation(""createQueue"", address, name);"
5286,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,171,,"            return (String) proxy.invokeOperation(""updateQueue"", queueConfiguration);"
5287,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,175,,"         public String updateQueue(@Parameter(name = ""name"", desc = ""Name of the queue"") String name,"
5288,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,175,,"         public String updateQueue(@Parameter(name = ""name"", desc = ""Name of the queue"") String name,"
5289,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,176,,"                                   @Parameter(name = ""routingType"", desc = ""The routing type used for this address, MULTICAST or ANYCAST"") String routingType,"
5290,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,176,,"                                   @Parameter(name = ""routingType"", desc = ""The routing type used for this address, MULTICAST or ANYCAST"") String routingType,"
5291,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,177,,"                                   @Parameter(name = ""maxConsumers"", desc = ""The maximum number of consumers allowed on this queue at any one time"") Integer maxConsumers,"
5292,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,177,,"                                   @Parameter(name = ""maxConsumers"", desc = ""The maximum number of consumers allowed on this queue at any one time"") Integer maxConsumers,"
5293,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,178,,"                                   @Parameter(name = ""purgeOnNoConsumers"", desc = ""Delete this queue when the last consumer disconnects"") Boolean purgeOnNoConsumers) throws Exception {"
5294,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,178,,"                                   @Parameter(name = ""purgeOnNoConsumers"", desc = ""Delete this queue when the last consumer disconnects"") Boolean purgeOnNoConsumers) throws Exception {"
5295,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,902,,"         public void addAddressSettings(@Parameter(desc = ""an address match"", name = ""addressMatch"") String addressMatch,"
5296,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,902,,"         public void addAddressSettings(@Parameter(desc = ""an address match"", name = ""addressMatch"") String addressMatch,"
5297,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,903,,"                                        @Parameter(desc = ""the dead letter address setting"", name = ""DLA"") String DLA,"
5298,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,903,,"                                        @Parameter(desc = ""the dead letter address setting"", name = ""DLA"") String DLA,"
5299,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,904,,"                                        @Parameter(desc = ""the expiry address setting"", name = ""expiryAddress"") String expiryAddress,"
5300,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,904,,"                                        @Parameter(desc = ""the expiry address setting"", name = ""expiryAddress"") String expiryAddress,"
5301,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,905,,"                                        @Parameter(desc = ""the expiry delay setting"", name = ""expiryDelay"") long expiryDelay,"
5302,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,905,,"                                        @Parameter(desc = ""the expiry delay setting"", name = ""expiryDelay"") long expiryDelay,"
5303,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,906,,"                                        @Parameter(desc = ""are any queues created for this address a last value queue"", name = ""lastValueQueue"") boolean lastValueQueue,"
5304,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,906,,"                                        @Parameter(desc = ""are any queues created for this address a last value queue"", name = ""lastValueQueue"") boolean lastValueQueue,"
5305,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,907,,"                                        @Parameter(desc = ""the delivery attempts"", name = ""deliveryAttempts"") int deliveryAttempts,"
5306,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,907,,"                                        @Parameter(desc = ""the delivery attempts"", name = ""deliveryAttempts"") int deliveryAttempts,"
5307,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,908,,"                                        @Parameter(desc = ""the max size in bytes"", name = ""maxSizeBytes"") long maxSizeBytes,"
5308,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,908,,"                                        @Parameter(desc = ""the max size in bytes"", name = ""maxSizeBytes"") long maxSizeBytes,"
5309,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,909,,"                                        @Parameter(desc = ""the page size in bytes"", name = ""pageSizeBytes"") int pageSizeBytes,"
5310,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,909,,"                                        @Parameter(desc = ""the page size in bytes"", name = ""pageSizeBytes"") int pageSizeBytes,"
5311,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,910,,"                                        @Parameter(desc = ""the max number of pages in the soft memory cache"", name = ""pageMaxCacheSize"") int pageMaxCacheSize,"
5312,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,910,,"                                        @Parameter(desc = ""the max number of pages in the soft memory cache"", name = ""pageMaxCacheSize"") int pageMaxCacheSize,"
5313,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,911,,"                                        @Parameter(desc = ""the redelivery delay"", name = ""redeliveryDelay"") long redeliveryDelay,"
5314,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,911,,"                                        @Parameter(desc = ""the redelivery delay"", name = ""redeliveryDelay"") long redeliveryDelay,"
5315,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,912,,"                                        @Parameter(desc = ""the redelivery delay multiplier"", name = ""redeliveryMultiplier"") double redeliveryMultiplier,"
5316,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,912,,"                                        @Parameter(desc = ""the redelivery delay multiplier"", name = ""redeliveryMultiplier"") double redeliveryMultiplier,"
5317,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,913,,"                                        @Parameter(desc = ""the maximum redelivery delay"", name = ""maxRedeliveryDelay"") long maxRedeliveryDelay,"
5318,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,913,,"                                        @Parameter(desc = ""the maximum redelivery delay"", name = ""maxRedeliveryDelay"") long maxRedeliveryDelay,"
5319,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,914,,"                                        @Parameter(desc = ""the redistribution delay"", name = ""redistributionDelay"") long redistributionDelay,"
5320,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,914,,"                                        @Parameter(desc = ""the redistribution delay"", name = ""redistributionDelay"") long redistributionDelay,"
5321,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,915,,"                                        @Parameter(desc = ""do we send to the DLA when there is no where to route the message"", name = ""sendToDLAOnNoRoute"") boolean sendToDLAOnNoRoute,"
5322,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,915,,"                                        @Parameter(desc = ""do we send to the DLA when there is no where to route the message"", name = ""sendToDLAOnNoRoute"") boolean sendToDLAOnNoRoute,"
5323,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,916,,"                                        @Parameter(desc = ""the policy to use when the address is full"", name = ""addressFullMessagePolicy"") String addressFullMessagePolicy,"
5324,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,916,,"                                        @Parameter(desc = ""the policy to use when the address is full"", name = ""addressFullMessagePolicy"") String addressFullMessagePolicy,"
5325,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,917,,"                                        @Parameter(desc = ""when a consumer falls below this threshold in terms of messages consumed per second it will be considered 'slow'"", name = ""slowConsumerThreshold"") long slowConsumerThreshold,"
5326,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,917,,"                                        @Parameter(desc = ""when a consumer falls below this threshold in terms of messages consumed per second it will be considered 'slow'"", name = ""slowConsumerThreshold"") long slowConsumerThreshold,"
5327,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,918,,"                                        @Parameter(desc = ""how often (in seconds) to check for slow consumers"", name = ""slowConsumerCheckPeriod"") long slowConsumerCheckPeriod,"
5328,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,918,,"                                        @Parameter(desc = ""how often (in seconds) to check for slow consumers"", name = ""slowConsumerCheckPeriod"") long slowConsumerCheckPeriod,"
5329,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,919,,"                                        @Parameter(desc = ""the policy to use when a slow consumer is detected"", name = ""slowConsumerPolicy"") String slowConsumerPolicy,"
5330,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,919,,"                                        @Parameter(desc = ""the policy to use when a slow consumer is detected"", name = ""slowConsumerPolicy"") String slowConsumerPolicy,"
5331,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,920,,"                                        @Parameter(desc = ""allow queues to be created automatically"", name = ""autoCreateJmsQueues"") boolean autoCreateJmsQueues,"
5332,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,920,,"                                        @Parameter(desc = ""allow queues to be created automatically"", name = ""autoCreateJmsQueues"") boolean autoCreateJmsQueues,"
5333,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,921,,"                                        @Parameter(desc = ""allow auto-created queues to be deleted automatically"", name = ""autoDeleteJmsQueues"") boolean autoDeleteJmsQueues,"
5334,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,921,,"                                        @Parameter(desc = ""allow auto-created queues to be deleted automatically"", name = ""autoDeleteJmsQueues"") boolean autoDeleteJmsQueues,"
5335,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,922,,"                                        @Parameter(desc = ""allow topics to be created automatically"", name = ""autoCreateJmsTopics"") boolean autoCreateJmsTopics,"
5336,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,922,,"                                        @Parameter(desc = ""allow topics to be created automatically"", name = ""autoCreateJmsTopics"") boolean autoCreateJmsTopics,"
5337,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,923,,"                                        @Parameter(desc = ""allow auto-created topics to be deleted automatically"", name = ""autoDeleteJmsTopics"") boolean autoDeleteJmsTopics) throws Exception {"
5338,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,923,,"                                        @Parameter(desc = ""allow auto-created topics to be deleted automatically"", name = ""autoDeleteJmsTopics"") boolean autoDeleteJmsTopics) throws Exception {"
5339,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,924,,"            proxy.invokeOperation(""addAddressSettings"","
5340,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,968,,"                                        @Parameter(desc = ""allow jms queues to be created automatically"", name = ""autoCreateJmsQueues"") boolean autoCreateJmsQueues,"
5341,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,969,,"                                        @Parameter(desc = ""allow auto-created jms queues to be deleted automatically"", name = ""autoDeleteJmsQueues"") boolean autoDeleteJmsQueues,"
5342,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,970,,"                                        @Parameter(desc = ""allow jms topics to be created automatically"", name = ""autoCreateJmsTopics"") boolean autoCreateJmsTopics,"
5343,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,971,,"                                        @Parameter(desc = ""allow auto-created jms topics to be deleted automatically"", name = ""autoDeleteJmsTopics"") boolean autoDeleteJmsTopics,"
5344,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,972,,"                                        @Parameter(desc = ""allow queues to be created automatically"", name = ""autoCreateQueues"") boolean autoCreateQueues,"
5345,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,973,,"                                        @Parameter(desc = ""allow auto-created queues to be deleted automatically"", name = ""autoDeleteQueues"") boolean autoDeleteQueues,"
5346,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,974,,"                                        @Parameter(desc = ""allow topics to be created automatically"", name = ""autoCreateAddresses"") boolean autoCreateAddresses,"
5347,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,975,,"                                        @Parameter(desc = ""allow auto-created topics to be deleted automatically"", name = ""autoDeleteAddresses"") boolean autoDeleteAddresses) throws Exception {"
5348,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,1369,,"            proxy.invokeOperation(""createDivert"", name, routingName, address, forwardingAddress, exclusive, filterString, transformerClassName);"
5349,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,1494,,"            proxy.invokeOperation(""createBridge"", name, queueName, forwardingAddress, filterString, transformerClassName, retryInterval, retryIntervalMultiplier, initialConnectAttempts, reconnectAttempts, useDuplicateDetection, confirmationWindowSize, producerWindowSize, clientFailureCheckPeriod, connectorNames, useDiscovery, ha, user, password);"
5350,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,1611,,"                                    @Parameter(name = ""Page Number"") int page,"
5351,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,1612,,"                                    @Parameter(name = ""Page Size"") int pageSize) throws Exception {"
5352,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ActiveMQServerControlUsingCoreTest.java,1617,,"         public String listConsumers(@Parameter(name = ""Options"") String options,"
5353,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/AddressControlTest.java,454,,"      addressControl.sendMessage(null, Message.BYTES_TYPE, Base64.encodeBytes(""test"".getBytes()), false, null, null);"
5354,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ClusterConnectionControl2Test.java,113,,"      connectorInfos.add(""netty"");"
5355,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/ManagementActivationTest.java,75,,"      ConnectionFactoryConfiguration config = new ConnectionFactoryConfigurationImpl().setName(""test"").setConnectorNames(connectorNames).setBindings(""/myConnectionFactory"");"
5356,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/MessageAuthorizationTest.java,86,,"      JmsConnectionFactory factory = new JmsConnectionFactory(""amqp://127.0.0.1:61616"");"
5357,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/MessageAuthorizationTest.java,87,,"      Connection connection = factory.createConnection(""first"", ""secret"");"
5358,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/MessageAuthorizationTest.java,87,,"      Connection connection = factory.createConnection(""first"", ""secret"");"
5359,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/MessageAuthorizationTest.java,93,,"      aMessage.setStringProperty(""requiredRole"", ""a"");"
5360,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/NotificationTest.java,168,,"      ClientSession mySession = sf.createSession(""myUser"", ""myPassword"", false, true, true, locator.isPreAcknowledge(), locator.getAckBatchSize());"
5361,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/NotificationTest.java,168,,"      ClientSession mySession = sf.createSession(""myUser"", ""myPassword"", false, true, true, locator.isPreAcknowledge(), locator.getAckBatchSize());"
5362,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/QueueControlTest.java,891,,"      message.putIntProperty(new SimpleString(""key""), intValue);"
5363,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/QueueControlTest.java,1281,,"      final SimpleString dla = new SimpleString(""DLA"");"
5364,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/QueueControlTest.java,1283,,"      final SimpleString adName = new SimpleString(""ad1"");"
5365,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/QueueControlTest.java,1285,,"      final String sampleText = ""Put me on DLQ"";"
5366,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/QueueControlTest.java,1531,,"      Field queueMemorySizeField = QueueImpl.class.getDeclaredField(""queueMemorySize"");"
5367,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/QueueControlTest.java,1667,,"      queueControlA.sendMessage(new HashMap<String, String>(), Message.BYTES_TYPE, Base64.encodeBytes(""theBody"".getBytes()), true, ""myUser"", ""myPassword"");"
5368,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/QueueControlTest.java,1667,,"      queueControlA.sendMessage(new HashMap<String, String>(), Message.BYTES_TYPE, Base64.encodeBytes(""theBody"".getBytes()), true, ""myUser"", ""myPassword"");"
5369,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/QueueControlTest.java,1667,,"      queueControlA.sendMessage(new HashMap<String, String>(), Message.BYTES_TYPE, Base64.encodeBytes(""theBody"".getBytes()), true, ""myUser"", ""myPassword"");"
5370,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/QueueControlTest.java,1866,,"      long messageID = (Long) messages[0].get(""messageID"");"
5371,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/QueueControlTest.java,2482,,"      Assert.assertEquals(0, jsonObject.getInt(""null""));"
5372,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/QueueControlUsingCoreTest.java,448,,"            return (Integer) proxy.invokeOperation(Integer.class, ""moveMessages"", filter, otherQueueName);"
5373,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/QueueControlUsingCoreTest.java,568,,"            Map map = (Map) proxy.invokeOperation(""browse"");"
5374,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/SSLSecurityNotificationTest.java,82,,"      tc.getParams().put(TransportConstants.TRUSTSTORE_PASSWORD_PROP_NAME, ""secureexample"");"
5375,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/SecurityNotificationTest.java,106,,"      securityManager.getConfiguration().addRole(""guest"", ""roleCanNotCreateQueue"");"
5376,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/management/SecurityNotificationTest.java,192,,"      securityManager.getConfiguration().addUser(""admin"", ""admin"");"
5377,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/MQTTConnnectionCleanupTest.java,47,,"      params.put(TransportConstants.PROTOCOLS_PROP_NAME, ""MQTT"");"
5378,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/MqttWildCardSubAutoCreateTest.java,197,,"         System.out.println(""1 All received message: "" + msg.getText() + "", dest: "" + msg.getJMSDestination());"
5379,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTSecurityCRLTest.java,134,,"         connection1 = retrieveMQTTConnection(""ssl://localhost:1883"", ""truststore.jks"", ""changeit"", ""client_revoked.jks"", ""changeit"");"
5380,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,124,,"      subscriptionProvider.subscribe(""foo/bah"", AT_MOST_ONCE);"
5381,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,134,,"                  assertNotNull(""Should get a message"", payload);"
5382,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,150,,"         String payload = ""Message "" + i + extraPayload;"
5383,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,230,,"      provider.subscribe(""foo"", EXACTLY_ONCE);"
5384,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,232,,"         String payload = ""Test Message: "" + i;"
5385,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,454,,"      String[] topics = {""TopicA"", ""/TopicA"", ""/"", ""TopicA/"", ""//""};"
5386,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,454,,"      String[] topics = {""TopicA"", ""/TopicA"", ""/"", ""TopicA/"", ""//""};"
5387,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,603,,"      final String[] clientIds = {null, ""foo"", ""durable""};"
5388,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,642,,"         assertNotNull(""No reset retained message for "" + clientId, msg);"
5389,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,744,,"            log.debug(""Client received:\n"" + frame);"
5390,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,750,,"                  fail(""Error decoding publish "" + e.getMessage());"
5391,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,758,,"            log.debug(""Client sent:\n"" + frame);"
5392,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,1044,,"      getServer().createQueue(new QueueConfiguration(""will""));"
5393,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,1048,,"      mqtt.setWillMessage(""test message"");"
5394,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,1174,,"      doTestSendMQTTReceiveJMS(""foo.*"", ""foo/bar"");"
5395,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,1291,,"      assertTrue(""KeepAlive didn't work properly"", Wait.waitFor(() -> connection.isConnected()));"
5396,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,1760,,"         SimpleString coreAddress = new SimpleString(""foo.bar"");"
5397,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTest.java,1780,,"      String clientId = ""testMqtt"";"
5398,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTestSupport.java,99,,"   protected String browseUser = ""browser"";"
5399,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MQTTTestSupport.java,102,,"   protected String guestUser = ""guest"";"
5400,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MqttClusterRemoteSubscribeTest.java,55,,"      final String ANYCAST_TOPIC = ""anycast/test/1/some/la"";"
5401,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MqttClusterRemoteSubscribeTest.java,56,,"      final String subClientId = ""subClientId"";"
5402,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MqttClusterRemoteSubscribeTest.java,57,,"      final String pubClientId = ""pubClientId"";"
5403,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MqttClusterRemoteSubscribeTest.java,69,,"         subConnection1 = retrieveMQTTConnection(""tcp://localhost:61616"", subClientId);"
5404,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MqttClusterRemoteSubscribeTest.java,73,,"         subConnection2 = retrieveMQTTConnection(""tcp://localhost:61617"", subClientId);"
5405,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MqttClusterRemoteSubscribeTest.java,89,,"         String payload1 = ""This is message 1"";"
5406,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MqttClusterRemoteSubscribeTest.java,90,,"         String payload2 = ""This is message 2"";"
5407,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MqttClusterRemoteSubscribeTest.java,91,,"         String payload3 = ""This is message 3"";"
5408,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MqttClusterRemoteSubscribeTest.java,147,,"      final String clientId1 = ""clientId1"";"
5409,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MqttClusterRemoteSubscribeTest.java,148,,"      final String clientId2 = ""clientId2"";"
5410,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MqttClusterRemoteSubscribeTest.java,243,,"      final String MULTICAST_TOPIC = ""multicast/test/1/some/la"";"
5411,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MqttClusterRemoteSubscribeTest.java,442,,"      final String ANYCAST_TOPIC = ""anycast/test/+/some/#"";"
5412,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MqttClusterRemoteSubscribeTest.java,882,,"         String payload4 = ""This is message 4"";"
5413,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/MqttClusterWildcardTest.java,85,,"         connection1.publish(""test/1/some/la"", payload1.getBytes(), QoS.AT_LEAST_ONCE, false);"
5414,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/mqtt/imported/PahoMQTTTest.java,77,,"      client.subscribe(""test"");"
5415,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/FQQNOpenWireTest.java,295,,"         TextMessage message = session.createTextMessage(""This is a text message"");"
5416,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/FQQNOpenWireTest.java,365,,"      SimpleString topic = new SimpleString(""VirtualTopic.Orders"");"
5417,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/FQQNOpenWireTest.java,366,,"      SimpleString subscriptionQ = new SimpleString(""Consumer.A"");"
5418,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/FQQNOpenWireTest.java,415,,"      this.server.getAddressSettingsRepository().getMatch(""VirtualTopic.#"").setAutoCreateQueues(true);"
5419,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/OpenWireDivertExclusiveTest.java,53,,"      final SimpleString queueName1 = new SimpleString(""queue1"");"
5420,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/OpenWireDivertExclusiveTest.java,55,,"      final SimpleString queueName2 = new SimpleString(""queue2"");"
5421,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/OpenWireDivertNonExclusiveTest.java,55,,"      final SimpleString queueName1 = new SimpleString(""queue1"");"
5422,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/OpenWireDivertNonExclusiveTest.java,57,,"      final SimpleString queueName2 = new SimpleString(""queue2"");"
5423,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/OpenWireTestBase.java,105,,"         Role advisoryReceiverRole = new Role(""advisoryReceiver"", false, true, false, false, true, true, false, true, true, false);"
5424,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/SecurityOpenWireTest.java,57,,"      securityManager.getConfiguration().addUser(""denyQ"", ""denyQ"");"
5425,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/SimpleOpenWireTest.java,153,,"         producer.send(session.createTextMessage(""test""));"
5426,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/SimpleOpenWireTest.java,220,,"      msg.setStringProperty(""testName"", ""testSendEmptyMessages"");"
5427,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/SimpleOpenWireTest.java,220,,"      msg.setStringProperty(""testName"", ""testSendEmptyMessages"");"
5428,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/SimpleOpenWireTest.java,224,,"      assertNotNull(""Didn't receive message"", queueReceiver.receive(1000));"
5429,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/SimpleOpenWireTest.java,296,,"         System.err.println(""Done!!!"");"
5430,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/SimpleOpenWireTest.java,498,,"      final String msgBase = ""MfromAMQ-"";"
5431,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/SimpleOpenWireTest.java,642,,"      msg.setStringProperty(""TESTKEY"", ""test"");"
5432,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/SimpleOpenWireTest.java,911,,"      Queue queue = session.createQueue(""foo"");"
5433,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/SimpleOpenWireTest.java,1047,,"      SimpleString durableQueue = new SimpleString(""exampleQueue"");"
5434,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/SimpleOpenWireTest.java,1063,,"         TextMessage message = session.createTextMessage(""This is a text message"");"
5435,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/SimpleOpenWireTest.java,1328,,"         producer.send(session.createTextMessage(""testXX"" + i));"
5436,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/SimpleOpenWireTest.java,1395,,"         msg.setStringProperty(""count"", ""str "" + i);"
5437,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/SimpleOpenWireTest.java,1395,,"         msg.setStringProperty(""count"", ""str "" + i);"
5438,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/VerySimpleOenwireTest.java,46,,"      SimpleString durableQueue = new SimpleString(""exampleQueue"");"
5439,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/VerySimpleOenwireTest.java,62,,"         TextMessage message = session.createTextMessage(""This is a text message"");"
5440,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/VirtualTopicToFQQNOpenWireTest.java,56,,"      this.server.getAddressSettingsRepository().getMatch(""VirtualTopic.#"").setAutoCreateQueues(true);"
5441,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/VirtualTopicToFQQNOpenWireTest.java,69,,"         MessageConsumer messageConsumerA = session.createConsumer(session.createQueue(""Consumer.A."" + topic.toString()));"
5442,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/VirtualTopicToFQQNOpenWireTest.java,73,,"         TextMessage message = session.createTextMessage(""This is a text message"");"
5443,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/JMSConsumer2Test.java,175,,"      assertEquals(2, msg.getLongProperty(""JMSXDeliveryCount""));"
5444,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/JmsConsumerResetActiveListenerTest.java,78,,"      producer.send(session.createTextMessage(""First""));"
5445,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/JmsConsumerResetActiveListenerTest.java,79,,"      producer.send(session.createTextMessage(""Second""));"
5446,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/JmsConsumerResetActiveListenerTest.java,86,,"      assertEquals(""result is first"", ""First"", ((TextMessage) result).getText());"
5447,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/JmsDurableTopicSendReceiveTest.java,65,,"      connection2.setClientID(""test"");"
5448,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/JmsTopicSelectorTest.java,84,,"      message.setStringProperty(""stringProperty"", ""a"");"
5449,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/JmsTopicSelectorTest.java,85,,"      message.setLongProperty(""longProperty"", 1);"
5450,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/JmsTopicSelectorTest.java,86,,"      message.setBooleanProperty(""booleanProperty"", true);"
5451,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/JmsTopicWildcardSendReceiveTest.java,83,,"         fail(""unexpected message:"" + text);"
5452,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/JmsTransactionTestSupport.java,154,,"      Message[] outbound = new Message[]{session.createTextMessage(""First Message""), session.createTextMessage(""Second Message"")};"
5453,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/JmsTransactionTestSupport.java,154,,"      Message[] outbound = new Message[]{session.createTextMessage(""First Message""), session.createTextMessage(""Second Message"")};"
5454,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/ProducerAutoCreateQueueTest.java,48,,"         connection = factory.createConnection(""admin"", ""password"");"
5455,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/ProducerAutoCreateQueueTest.java,48,,"         connection = factory.createConnection(""admin"", ""password"");"
5456,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/ProducerAutoCreateQueueTest.java,50,,"         Queue trash = session.createQueue(""trash"");"
5457,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/ProducerAutoCreateQueueTest.java,52,,"         producer.send(session.createTextMessage(""foo""));"
5458,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/ProducerFlowControlTest.java,51,,"      CountDownLatch pubishDoneToQeueuB = asyncSendTo(queueB, ""Message 1"");"
5459,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/ProducerFlowControlTest.java,58,,"      pubishDoneToQeueuB = asyncSendTo(queueB, ""Message 2"");"
5460,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/RedeliveryPolicyTest.java,94,,"      producer.send(session.createTextMessage(""1st""));"
5461,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/RedeliveryPolicyTest.java,95,,"      producer.send(session.createTextMessage(""2nd""));"
5462,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/RedeliveryPolicyTest.java,196,,"      ActiveMQQueue destination = new ActiveMQQueue(""TEST"");"
5463,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/amq/TransactionContextTest.java,57,,"            fail(""expected rollback exception"");"
5464,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/CompressedInteropTest.java,111,,"      streamMessage.writeObject(new String(""VVVV""));"
5465,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,73,,"      final String text = ""HelloWorld"";"
5466,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,96,,"      assertTrue(mapMessage.getBoolean(""aboolean""));"
5467,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,97,,"      assertEquals((byte) 4, mapMessage.getByte(""abyte""));"
5468,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,98,,"      byte[] bytes = mapMessage.getBytes(""abytes"");"
5469,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,102,,"      assertEquals('a', mapMessage.getChar(""achar""));"
5470,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,103,,"      Double doubleVal = mapMessage.getDouble(""adouble"");"
5471,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,105,,"      Float floatVal = mapMessage.getFloat(""afloat"");"
5472,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,107,,"      assertEquals(40, mapMessage.getInt(""aint""));"
5473,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,108,,"      assertEquals(80L, mapMessage.getLong(""along""));"
5474,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,109,,"      assertEquals(65, mapMessage.getShort(""ashort""));"
5475,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,110,,"      assertEquals(""hello"", mapMessage.getString(""astring""));"
5476,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,110,,"      assertEquals(""hello"", mapMessage.getString(""astring""));"
5477,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,147,,"      assertEquals(""hello streammessage"", streamMessage.readString());"
5478,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,173,,"      String value = genericMessage.getStringProperty(""stringProperty"");"
5479,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,174,,"      assertEquals(""HelloMessage"", value);"
5480,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,175,,"      assertFalse(genericMessage.getBooleanProperty(""booleanProperty""));"
5481,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,176,,"      assertEquals(99999L, genericMessage.getLongProperty(""longProperty""));"
5482,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,177,,"      assertEquals(979, genericMessage.getIntProperty(""intProperty""));"
5483,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/openwire/interop/GeneralInteropTest.java,178,,"      assertEquals((short) 1099, genericMessage.getShortProperty(""shortProperty""));"
5484,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/AddressFullLoggingTest.java,68,,"      final String MY_ADDRESS = ""myAddress"";"
5485,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingOrderTest.java,616,,"      server.getActiveMQServerControl().addAddressSettings(""TT"", ""DLQ"", ""DLQ"", -1, false, 5, 1024 * 1024, 1024 * 10, 5, 5, 1, 1000, 0, false, ""PAGE"", -1, 10, ""KILL"", true, true, true, true);"
5486,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingSizeWildcardTest.java,63,,"            assertNotNull("" on "" +  i, consumerA.receive(1000));"
5487,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingTest.java,731,,"      session.createQueue(new QueueConfiguration(PagingTest.ADDRESS + ""QueueOriginal"").setAddress(PagingTest.ADDRESS + ""Original""));"
5488,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingTest.java,1012,,"         message.putIntProperty(""count"", i);"
5489,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingTest.java,1272,,"      AddressSettings defaultSetting = new AddressSettings().setPageSizeBytes(PAGE_SIZE).setMaxSizeBytes(PAGE_MAX).setExpiryAddress(new SimpleString(""EXP"")).setAddressFullMessagePolicy(AddressFullMessagePolicy.PAGE);"
5490,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingTest.java,1837,,"         log.debug(""Received "" + msgCount);"
5491,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingTest.java,2753,,"                           PagingTest.log.debug(""Expected buffer:"" + ActiveMQTestBase.dumpBytesHex(body, 40));"
5492,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingTest.java,2754,,"                           PagingTest.log.debug(""Arriving buffer:"" + ActiveMQTestBase.dumpBytesHex(message2.getBodyBuffer().toByteBuffer().array(), 40));"
5493,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingTest.java,4801,,"         message.putIntProperty(""propTest"", i % NQUEUES);"
5494,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingTest.java,5119,,"      AddressSettings dla = new AddressSettings().setMaxDeliveryAttempts(5).setDeadLetterAddress(new SimpleString(""DLA"")).setRedeliveryDelay(0);"
5495,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingTest.java,5157,,"            message.putStringProperty(""id"", ""str"" + i);"
5496,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingTest.java,5744,,"      msg.putIntProperty(""dest"", 1);"
5497,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingTest.java,5840,,"            m.putIntProperty(""destQ"", 1);"
5498,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingTest.java,5841,,"            m.putBooleanProperty(""both"", false);"
5499,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingTest.java,6906,,"            msg.putIntProperty(""index"", i);"
5500,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingWithFailoverAndCountersTest.java,244,,"               session.createQueue(new QueueConfiguration(""new-queue"").setRoutingType(RoutingType.ANYCAST));"
5501,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/paging/PagingWithFailoverAndCountersTest.java,259,,"            Queue queue2 = inProcessBackup.getServer().locateQueue(SimpleString.toSimpleString(""cons2""));"
5502,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/persistence/ConfigChangeTest.java,49,,"         .setName(""myAddress"")"
5503,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/persistence/ConfigChangeTest.java,51,,"         .addQueueConfiguration(new QueueConfiguration(""myQueue"")"
5504,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/persistence/ConfigChangeTest.java,62,,"         context.createProducer().send(context.createQueue(""myAddress""), ""hello"");"
5505,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/persistence/JMSConnectionFactoryConfigurationStorageTest.java,69,,"      ConnectionFactoryConfiguration config = new ConnectionFactoryConfigurationImpl().setName(""some-name"").setConnectorNames(transportConfigs);"
5506,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/persistence/JMSDynamicConfigTest.java,51,,"      ConnectionFactoryConfiguration cfg = new ConnectionFactoryConfigurationImpl().setName(""tst"").setConnectorNames(connectors).setBindings(""tt"");"
5507,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/persistence/QueueConfigRestartTest.java,48,,"      SimpleString address = new SimpleString(""test.address"");"
5508,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/persistence/QueueConfigRestartTest.java,49,,"      SimpleString queue = new SimpleString(""test.queue"");"
5509,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/persistence/SyncSendTest.java,192,,"         System.out.println(""end - start = "" + (end - start) + "" milliseconds = "" + TimeUnit.NANOSECONDS.toMillis(end - start));"
5510,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/persistence/XmlImportExportTest.java,419,,"      session.createQueue(new QueueConfiguration(""queueName1"").setAddress(""addressName1""));"
5511,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/persistence/XmlImportExportTest.java,669,,"      session.createQueue(new QueueConfiguration(""myQueue1"").setAddress(""myAddress""));"
5512,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/persistence/XmlImportExportTest.java,669,,"      session.createQueue(new QueueConfiguration(""myQueue1"").setAddress(""myAddress""));"
5513,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/persistence/XmlImportExportTest.java,670,,"      session.createQueue(new QueueConfiguration(""myQueue2"").setAddress(""myAddress""));"
5514,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/persistence/metrics/JournalPendingMessageTest.java,286,,"      connection.setClientID(""clientId"");"
5515,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/persistence/metrics/JournalPendingMessageTest.java,314,,"      MessageConsumer consumer = session.createSharedConsumer(session.createTopic(defaultTopicName), ""sub1"");"
5516,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/plugin/CorePluginTest.java,145,,"      TextMessage msg1 = sess.createTextMessage(""test"");"
5517,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/plugin/FederationBrokerPluginTest.java,74,,"      FederationConfiguration federationConfiguration = FederatedTestUtil.createAddressUpstreamFederationConfiguration(""server1"", address);"
5518,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/plugin/FederationBrokerPluginTest.java,132,,"         producer1.send(session1.createTextMessage(""hello""));"
5519,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/plugin/MetricsPluginTest.java,146,,"              new Metric(""artemis.consumer.count"", ""number of consumers consuming messages from this queue"", 0.0),"
5520,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/plugin/MetricsPluginTest.java,149,,"              new Metric(""artemis.delivering.message.count"", ""number of messages that this queue is currently delivering to its consumers"", 0.0),"
5521,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/plugin/MetricsPluginTest.java,154,,"              new Metric(""artemis.message.count"", ""number of messages currently in this queue (includes scheduled, paged, and in-delivery messages)"", 0.0),"
5522,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/plugin/MetricsPluginTest.java,160,,"              new Metric(""artemis.routed.message.count"", ""number of messages routed to one or more bindings"", 0.0),"
5523,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/plugin/MetricsPluginTest.java,167,,"              new Metric(""artemis.unrouted.message.count"", ""number of messages not routed to any bindings"", 0.0),"
5524,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/plugin/MetricsPluginTest.java,205,,"      checkMetric(metrics, ""artemis.message.count"", ""queue"", queueName, 1.0, enabled);"
5525,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/plugin/MetricsPluginTest.java,210,,"      checkMetric(metrics, ""artemis.routed.message.count"", ""address"", addressName, 1.0, enabled);"
5526,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/plugin/StompPluginTest.java,150,,"      subscribe(newConn, ""a-sub"");"
5527,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ActiveMQClusteredTest.java,101,,"      message.getBodyBuffer().writeString(""test"");"
5528,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ActiveMQMessageHandlerTest.java,65,,"      spec.setDestinationType(""javax.jms.Queue"");"
5529,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ActiveMQMessageHandlerTest.java,75,,"      message.getBodyBuffer().writeString(""teststring"");"
5530,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ActiveMQMessageHandlerTest.java,123,,"      spec.setDestinationType(""javax.jms.Topic"");"
5531,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ActiveMQMessageHandlerTest.java,128,,"      spec.setSubscriptionDurability(""Durable"");"
5532,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ActiveMQMessageHandlerTest.java,163,,"      String blackList = ""org.apache.activemq.artemis.tests.integration.ra"";"
5533,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ActiveMQMessageHandlerTest.java,571,,"      spec.setDestination(""mdbTopic"");"
5534,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ActiveMQMessageHandlerTest.java,603,,"      spec.setSubscriptionName(""durable-mdb"");"
5535,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ActiveMQMessageHandlerTest.java,604,,"      spec.setClientID(""id-1"");"
5536,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ActiveMQMessageHandlerTest.java,768,,"      message.putStringProperty(""foo"", ""bar"");"
5537,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ActiveMQMessageHandlerTest.java,768,,"      message.putStringProperty(""foo"", ""bar"");"
5538,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ActiveMQMessageHandlerXATest.java,56,,"      spec.setDestinationType(""javax.jms.Queue"");"
5539,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ActiveMQMessageHandlerXATest.java,66,,"      message.getBodyBuffer().writeString(""teststring"");"
5540,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/JMSContextTest.java,61,,"      securityManager.getConfiguration().addUser(""guest"", ""guest"");"
5541,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/OutgoingConnectionJTATest.java,70,,"      ((ActiveMQJAASSecurityManager) server.getSecurityManager()).getConfiguration().addUser(""guest"", ""guest"");"
5542,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/OutgoingConnectionJTATest.java,117,,"      Message message = s.createTextMessage(""test"");"
5543,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/OutgoingConnectionJTATest.java,196,,"         producer.setProperty(""strvalue"", ""hello"");"
5544,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/OutgoingConnectionJTATest.java,196,,"         producer.setProperty(""strvalue"", ""hello"");"
5545,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/OutgoingConnectionNoJTATest.java,70,,"      ((ActiveMQJAASSecurityManager) server.getSecurityManager()).getConfiguration().addUser(""guest"", ""guest"");"
5546,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/OutgoingConnectionNoJTATest.java,117,,"      Message message = s.createTextMessage(""test"");"
5547,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/OutgoingConnectionNoJTATest.java,234,,"         producer.setProperty(""strvalue"", ""hello"");"
5548,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/OutgoingConnectionNoJTATest.java,234,,"         producer.setProperty(""strvalue"", ""hello"");"
5549,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/OutgoingConnectionTest.java,80,,"      securityManager.getConfiguration().addUser(""testuser"", ""testpassword"");"
5550,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/OutgoingConnectionTest.java,80,,"      securityManager.getConfiguration().addUser(""testuser"", ""testpassword"");"
5551,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/OutgoingConnectionTest.java,81,,"      securityManager.getConfiguration().addUser(""guest"", ""guest"");"
5552,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/OutgoingConnectionTest.java,154,,"         conn = qraConnectionFactory.createConnection(""IDont"", ""Exist"");"
5553,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/OutgoingConnectionTest.java,154,,"         conn = qraConnectionFactory.createConnection(""IDont"", ""Exist"");"
5554,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/OutgoingConnectionTest.java,155,,"         fail(""Exception was expected"");"
5555,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ResourceAdapterTest.java,60,,"      ActiveMQDestination queue = (ActiveMQDestination) ActiveMQJMSClient.createQueue(""test"");"
5556,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ResourceAdapterTest.java,123,,"      spec.setDestinationType(""javax.jms.Queue"");"
5557,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ResourceAdapterTest.java,315,,"      adapter.setDiscoveryAddress(""231.1.1.1"");"
5558,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ResourceAdapterTest.java,369,,"      qResourceAdapter.setConnectionParameters(""server-id=0"");"
5559,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ResourceAdapterTest.java,443,,"      qResourceAdapter.setDiscoveryAddress(""231.6.6.6"");"
5560,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ResourceAdapterTest.java,634,,"      String mask = codec.encode(""helloworld"");"
5561,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ra/ResourceAdapterTest.java,649,,"      mask = (String) codec.encode(""mdbpassword"");"
5562,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/remoting/ReconnectTest.java,165,,"            session.addMetaData(""meta1"", ""meta1"");"
5563,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/replication/SharedNothingReplicationFlowControlTest.java,117,,"      ServerLocator locator = ServerLocatorImpl.newLocator(""tcp://localhost:61616"");"
5564,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/replication/SharedNothingReplicationFlowControlTest.java,123,,"      sess.createQueue(new QueueConfiguration(""flowcontrol"").setRoutingType(RoutingType.ANYCAST));"
5565,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/replication/SharedNothingReplicationFlowControlTest.java,176,,"      File liveJournalDir = brokersFolder.getRoot().toPath().resolve(""live"").resolve(""data"").resolve(""journal"").toFile();"
5566,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/replication/SharedNothingReplicationFlowControlTest.java,195,,"      File backupJournalDir = brokersFolder.getRoot().toPath().resolve(""backup"").resolve(""data"").resolve(""journal"").toFile();"
5567,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/replication/SharedNothingReplicationTest.java,106,,"      ServerLocator locator = ServerLocatorImpl.newLocator(""tcp://localhost:61616"");"
5568,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/replication/SharedNothingReplicationTest.java,194,,"      File liveJournalDir = brokersFolder.getRoot().toPath().resolve(""live"").resolve(""data"").resolve(""journal"").toFile();"
5569,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/replication/SharedNothingReplicationTest.java,213,,"      File backupJournalDir = brokersFolder.getRoot().toPath().resolve(""backup"").resolve(""data"").resolve(""journal"").toFile();"
5570,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/rest/RestDeserializationTest.java,73,,"      order.setName(""Bill"");"
5571,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/rest/RestDeserializationTest.java,74,,"      order.setItem(""iPhone4"");"
5572,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/rest/RestDeserializationTest.java,75,,"      order.setAmount(""$199.99"");"
5573,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/rest/RestDeserializationTest.java,77,,"      jmsSendMessage(order, ""orders"", true);"
5574,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/rest/RestDeserializationTest.java,89,,"      jmsServer.getActiveMQServer().addAddressInfo(new AddressInfo(SimpleString.toSimpleString(""ordersTopic""), RoutingType.MULTICAST));"
5575,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/scheduling/DelayedMessageTest.java,81,,"         ClientMessage tm = createDurableMessage(session1, ""message"" + i);"
5576,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/scheduling/ScheduledMessageTest.java,279,,"      message.getBodyBuffer().writeString(""testINVMCoreClient"");"
5577,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/BasicSecurityManagerTest.java,79,,"         initProperties.put(ActiveMQBasicSecurityManager.BOOTSTRAP_USER, ""first"");"
5578,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/BasicSecurityManagerTest.java,80,,"         initProperties.put(ActiveMQBasicSecurityManager.BOOTSTRAP_PASSWORD, ""secret"");"
5579,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/BasicSecurityManagerTest.java,81,,"         initProperties.put(ActiveMQBasicSecurityManager.BOOTSTRAP_ROLE, ""programmers"");"
5580,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/BasicSecurityManagerTest.java,142,,"         server.createQueue(new QueueConfiguration(""queue"").setAddress(""address"").setRoutingType(RoutingType.ANYCAST));"
5581,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/BasicSecurityManagerTest.java,167,,"         Assert.fail(""should throw exception here"");"
5582,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/BasicSecurityManagerTest.java,277,,"         Assert.fail(""should not throw exception here"");"
5583,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/LDAPSecurityTest.java,84,,"   private static final String CREDENTIALS = ""secret"";"
5584,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/LDAPSecurityTest.java,146,,"         ClientSession session = cf.createSession(""first"", ""secret"", false, true, true, false, 0);"
5585,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/LDAPSecurityTest.java,163,,"         Assert.fail(""should throw exception here"");"
5586,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/LDAPSecurityTest.java,276,,"         Assert.fail(""should not throw exception here"");"
5587,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/LegacyLDAPSecuritySettingPluginListenerTest.java,92,,"   private static final String CREDENTIALS = ""secret"";"
5588,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/LegacyLDAPSecuritySettingPluginListenerTest.java,168,,"      ClientSession session = cf.createSession(""first"", ""secret"", false, true, true, false, 0);"
5589,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/LegacyLDAPSecuritySettingPluginListenerTest.java,184,,"      basicAttributes.put(""uniquemember"", ""cn=role2"");"
5590,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/LegacyLDAPSecuritySettingPluginListenerTest.java,273,,"      Attribute objclass = new BasicAttribute(""objectclass"");"
5591,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/LegacyLDAPSecuritySettingPluginListenerTest.java,274,,"      objclass.add(""top"");"
5592,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/LegacyLDAPSecuritySettingPluginListenerTest.java,277,,"      ctx.bind(""cn=read,cn="" + queue + "",ou=queues,ou=destinations,o=ActiveMQ,ou=system"", null, basicAttributes);"
5593,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/LegacyLDAPSecuritySettingPluginListenerTest.java,378,,"         ctx.bind(""uid="" + USERNAME + "",ou=system"", null, basicAttributes);"
5594,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/LegacyLDAPSecuritySettingPluginListenerTest.java,378,,"         ctx.bind(""uid="" + USERNAME + "",ou=system"", null, basicAttributes);"
5595,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/LegacyLDAPSecuritySettingPluginListenerTest.java,389,,"         ctx.bind(""cn="" + ROLE + "",ou=system"", null, basicAttributes);"
5596,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/LegacyLDAPSecuritySettingPluginTest.java,91,,"   private static final String CREDENTIALS = ""secret"";"
5597,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/LegacyLDAPSecuritySettingPluginTest.java,182,,"         Assert.fail(""should throw exception here"");"
5598,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/LegacyLDAPSecuritySettingPluginTest.java,255,,"         Assert.fail(""should not throw exception here"");"
5599,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityPerAcceptorTest.java,104,,"         Assert.fail(""should throw exception here"");"
5600,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityPerAcceptorTest.java,188,,"         Assert.fail(""should not throw exception here"");"
5601,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,115,,"      ActiveMQJAASSecurityManager securityManager = new ActiveMQJAASSecurityManager(""PropertiesLogin"");"
5602,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,121,,"         ClientSession session = cf.createSession(""first"", ""secret"", false, true, true, false, 0);"
5603,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,121,,"         ClientSession session = cf.createSession(""first"", ""secret"", false, true, true, false, 0);"
5604,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,125,,"         Assert.fail(""should not throw exception"");"
5605,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,135,,"      Role role = new Role(""programmers"", true, true, true, true, true, true, true, true, true, true);"
5606,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,143,,"         server.createQueue(new QueueConfiguration(""queue"").setAddress(""address"").setRoutingType(RoutingType.ANYCAST));"
5607,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,162,,"      testJAASSecurityManagerAuthenticationWithCerts(""CertLogin"", TransportConstants.NEED_CLIENT_AUTH_PROP_NAME);"
5608,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,186,,"      params.put(TransportConstants.KEYSTORE_PATH_PROP_NAME, ""server-side-keystore.jks"");"
5609,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,187,,"      params.put(TransportConstants.KEYSTORE_PASSWORD_PROP_NAME, ""secureexample"");"
5610,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,188,,"      params.put(TransportConstants.TRUSTSTORE_PATH_PROP_NAME, ""server-side-truststore.jks"");"
5611,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,198,,"      tc.getParams().put(TransportConstants.TRUSTSTORE_PATH_PROP_NAME, ""client-side-truststore.jks"");"
5612,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,200,,"      tc.getParams().put(TransportConstants.KEYSTORE_PATH_PROP_NAME, ""client-side-keystore.jks"");"
5613,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,289,,"            session.createConsumer(session.createQueue(""test.queue""));"
5614,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,290,,"            Assert.fail(""should throw exception here"");"
5615,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,441,,"      final SimpleString DURABLE_QUEUE = new SimpleString(""durableQueue"");"
5616,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,442,,"      final SimpleString NON_DURABLE_QUEUE = new SimpleString(""nonDurableQueue"");"
5617,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,570,,"         Assert.fail(""should not throw exception here"");"
5618,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,990,,"      roles.add(new Role(""bar"", true, true, true, true, true, true, true, false, true, true));"
5619,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1056,,"      securityManager.getConfiguration().addUser(""guest"", ""guest"");"
5620,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1087,,"         Assert.fail(""should throw exception"");"
5621,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1091,,"         fail(""Invalid Exception type:"" + e.getType());"
5622,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1099,,"      securityManager.getConfiguration().addUser(""newuser"", ""apass"");"
5623,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1136,,"      securityManager.getConfiguration().addUser(""auser"", ""pass"");"
5624,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1136,,"      securityManager.getConfiguration().addUser(""auser"", ""pass"");"
5625,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1137,,"      Role role = new Role(""arole"", false, false, true, false, false, false, false, false, true, false);"
5626,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1499,,"      Role receiveRole = new Role(""receiver"", false, true, false, false, false, false, false, false, false, false);"
5627,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1647,,"      prod.send(CreateMessage.createTextMessage(sendingSession, ""Test"", true));"
5628,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1766,,"      securityManager.getConfiguration().addUser(""all"", ""all"");"
5629,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1767,,"      securityManager.getConfiguration().addUser(""bill"", ""activemq"");"
5630,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1767,,"      securityManager.getConfiguration().addUser(""bill"", ""activemq"");"
5631,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1768,,"      securityManager.getConfiguration().addUser(""andrew"", ""activemq1"");"
5632,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1768,,"      securityManager.getConfiguration().addUser(""andrew"", ""activemq1"");"
5633,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1769,,"      securityManager.getConfiguration().addUser(""frank"", ""activemq2"");"
5634,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1769,,"      securityManager.getConfiguration().addUser(""frank"", ""activemq2"");"
5635,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1770,,"      securityManager.getConfiguration().addUser(""sam"", ""activemq3"");"
5636,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1770,,"      securityManager.getConfiguration().addUser(""sam"", ""activemq3"");"
5637,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1772,,"      securityManager.getConfiguration().addRole(""bill"", ""user"");"
5638,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1773,,"      securityManager.getConfiguration().addRole(""andrew"", ""europe-user"");"
5639,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1775,,"      securityManager.getConfiguration().addRole(""frank"", ""us-user"");"
5640,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,1776,,"      securityManager.getConfiguration().addRole(""frank"", ""news-user"");"
5641,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,2014,,"            return (username.equals(""foo"") || username.equals(""bar"") || username.equals(""all"")) && password.equals(""frobnicate"");"
5642,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,2014,,"            return (username.equals(""foo"") || username.equals(""bar"") || username.equals(""all"")) && password.equals(""frobnicate"");"
5643,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,2052,,"         factory.createSession(""baz"", ""frobnicate"", false, true, true, false, -1);"
5644,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,2062,,"         factory.createSession(""foo"", ""xxx"", false, true, true, false, -1);"
5645,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java,2090,,"            fail(""Unexpected call to overridden method"");"
5646,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/ExpiryRunnerTest.java,249,,"         server.addAddressInfo(new AddressInfo(""test"" + ad));"
5647,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/LVQTest.java,66,,"      SimpleString rh = new SimpleString(""SMID1"");"
5648,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/PredefinedQueueTest.java,54,,"      final String testAddress = ""testAddress"";"
5649,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/PredefinedQueueTest.java,56,,"      final String queueName1 = ""queue1"";"
5650,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/PredefinedQueueTest.java,58,,"      final String queueName2 = ""queue2"";"
5651,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/PredefinedQueueTest.java,153,,"      final SimpleString propKey = new SimpleString(""testkey"");"
5652,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/ResourceLimitTest.java,53,,"      resourceLimitSettings.setMatch(SimpleString.toSimpleString(""myUser""));"
5653,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/ResourceLimitTest.java,63,,"      securityManager.getConfiguration().addUser(""myUser"", ""password"");"
5654,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/ResourceLimitTest.java,103,,"      clientSession.createQueue(new QueueConfiguration(""queue"").setAddress(""address"").setRoutingType(RoutingType.ANYCAST).setDurable(false));"
5655,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/RetroactiveAddressTest.java,104,,"      internalTestRetroactiveResourceCreation(""myAddress"", ""myAddress"");"
5656,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/RetroactiveAddressTest.java,164,,"            message.putIntProperty(""xxx"", (i * COUNT) + j);"
5657,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/RingQueueTest.java,68,,"         ClientMessage m0 = createTextMessage(clientSession, ""hello"" + i);"
5658,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/RingQueueTest.java,97,,"      ClientMessage m0 = createTextMessage(clientSession, ""hello0"");"
5659,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/RingQueueTest.java,110,,"      ClientMessage m1 = createTextMessage(clientSession, ""hello1"");"
5660,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/ScaleDown3NodeTest.java,67,,"      setupClusterConnection(""cluster0"", ""testAddress"", MessageLoadBalancingType.ON_DEMAND, 1, isNetty(), 0, 1, 2);"
5661,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/ScaleDownTest.java,99,,"      setupClusterConnection(""cluster0"", ""testAddress"", MessageLoadBalancingType.ON_DEMAND, 1, isNetty(), 0, 1);"
5662,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/ScaleDownTest.java,123,,"      final String queueName1 = ""testQueue1"";"
5663,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/ScaleDownTest.java,124,,"      final String queueName2 = ""testQueue2"";"
5664,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/ScaleDownTest.java,396,,"      final String queueName = ""testQueue"";"
5665,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/SecureConfigurationTest.java,57,,"            {""CORE""}, {""AMQP""}, {""OPENWIRE""}"
5666,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/SecureConfigurationTest.java,89,,"      String message = ""blah"";"
5667,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/SecureConfigurationTest.java,128,,"      String messageRecieved = sendAndReceiveTextUsingTopic(connectionFactory, ""clientId"", message, ""secured_topic_durable"", (t, s) -> s.createDurableSubscriber(t, ""secured_topic_durable/queue""));"
5668,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/server/SecureConfigurationTest.java,128,,"      String messageRecieved = sendAndReceiveTextUsingTopic(connectionFactory, ""clientId"", message, ""secured_topic_durable"", (t, s) -> s.createDurableSubscriber(t, ""secured_topic_durable/queue""));"
5669,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ssl/CoreClientOverOneWaySSLTest.java,67,,"         {""SunJCE"", ""JCEKS"", false},"
5670,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ssl/CoreClientOverOneWaySSLTest.java,189,,"      createCustomSslServer(""myhost\\.com"");"
5671,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ssl/CoreClientOverOneWaySSLTest.java,629,,"      createCustomSslServer(getEnabledCipherSuites()[0], ""TLSv1.2"");"
5672,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ssl/CoreClientOverOneWaySSLTest.java,922,,"         fail(""Invalid Exception type:"" + e.getType());"
5673,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ssl/CoreClientOverTwoWaySSLTest.java,68,,"         {""SunJCE"", ""JCEKS"", TransportConstants.OPENSSL_PROVIDER, TransportConstants.OPENSSL_PROVIDER},"
5674,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ssl/CoreClientOverTwoWaySSLTest.java,68,,"         {""SunJCE"", ""JCEKS"", TransportConstants.OPENSSL_PROVIDER, TransportConstants.OPENSSL_PROVIDER},"
5675,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ssl/CoreClientOverTwoWaySSLTest.java,72,,"         {""SUN"", ""JKS"", TransportConstants.OPENSSL_PROVIDER, TransportConstants.OPENSSL_PROVIDER},"
5676,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ssl/CoreClientOverTwoWaySSLTest.java,72,,"         {""SUN"", ""JKS"", TransportConstants.OPENSSL_PROVIDER, TransportConstants.OPENSSL_PROVIDER},"
5677,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ssl/CoreClientOverTwoWaySSLTest.java,76,,"         {""SunJSSE"", ""PKCS12"", TransportConstants.OPENSSL_PROVIDER, TransportConstants.OPENSSL_PROVIDER},"
5678,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ssl/CoreClientOverTwoWaySSLTest.java,76,,"         {""SunJSSE"", ""PKCS12"", TransportConstants.OPENSSL_PROVIDER, TransportConstants.OPENSSL_PROVIDER},"
5679,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/ssl/CoreClientOverTwoWaySSLTest.java,256,,"      NettyAcceptor acceptor = (NettyAcceptor) server.getRemotingService().getAcceptor(""nettySSL"");"
5680,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/FQQNStompTest.java,81,,"      subscribeQueue(conn, ""sub-01"", getQueueName() + ""\\c\\c"" + getQueueName());"
5681,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/FQQNStompTest.java,81,,"      subscribeQueue(conn, ""sub-01"", getQueueName() + ""\\c\\c"" + getQueueName());"
5682,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/FQQNStompTest.java,82,,"      sendJmsMessage(""Hello World!"");"
5683,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/FQQNStompTest.java,92,,"      final SimpleString myAddress = SimpleString.toSimpleString(""myAddress"");"
5684,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,116,,"      server.getRemotingService().createAcceptor(""test"", ""tcp://127.0.0.1:"" + port + ""?connectionTtl=1000"").start();"
5685,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,146,,"         send(conn, getQueuePrefix() + getQueueName(), null, ""Hello World!"");"
5686,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,224,,"      send(conn, getQueuePrefix() + getQueueName(), null, ""Hello World"");"
5687,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,230,,"      Assert.assertEquals(""getJMSPriority"", 4, message.getJMSPriority());"
5688,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,243,,"      clientProvider.connect(""tcp://"" + hostname + "":"" + port);"
5689,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,435,,"      final String jmsxGroupID = ""JMSXGroupID"";"
5690,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,457,,"      ClientStompFrame frame = conn.createFrame(Stomp.Commands.SEND).addHeader(Stomp.Headers.Send.DESTINATION, getQueuePrefix() + getQueueName()).addHeader(""foo"", ""abc"").addHeader(""bar"", ""123"").setBody(""Hello World"");"
5691,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,457,,"      ClientStompFrame frame = conn.createFrame(Stomp.Commands.SEND).addHeader(Stomp.Headers.Send.DESTINATION, getQueuePrefix() + getQueueName()).addHeader(""foo"", ""abc"").addHeader(""bar"", ""123"").setBody(""Hello World"");"
5692,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,457,,"      ClientStompFrame frame = conn.createFrame(Stomp.Commands.SEND).addHeader(Stomp.Headers.Send.DESTINATION, getQueuePrefix() + getQueueName()).addHeader(""foo"", ""abc"").addHeader(""bar"", ""123"").setBody(""Hello World"");"
5693,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,457,,"      ClientStompFrame frame = conn.createFrame(Stomp.Commands.SEND).addHeader(Stomp.Headers.Send.DESTINATION, getQueuePrefix() + getQueueName()).addHeader(""foo"", ""abc"").addHeader(""bar"", ""123"").setBody(""Hello World"");"
5694,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,491,,"      ClientStompFrame frame = conn.createFrame(Stomp.Commands.SEND).addHeader(Stomp.Headers.Send.DESTINATION, getQueuePrefix() + getQueueName()).addHeader(""foo"", ""abc"").addHeader(""bar"", ""123"").addHeader(""correlation-id"", ""c123"").addHeader(""persistent"", ""true"").addHeader(""type"", ""t345"").addHeader(""JMSXGroupID"", ""abc"").addHeader(""priority"", ""3"").setBody(""Hello World"");"
5695,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,491,,"      ClientStompFrame frame = conn.createFrame(Stomp.Commands.SEND).addHeader(Stomp.Headers.Send.DESTINATION, getQueuePrefix() + getQueueName()).addHeader(""foo"", ""abc"").addHeader(""bar"", ""123"").addHeader(""correlation-id"", ""c123"").addHeader(""persistent"", ""true"").addHeader(""type"", ""t345"").addHeader(""JMSXGroupID"", ""abc"").addHeader(""priority"", ""3"").setBody(""Hello World"");"
5696,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,491,,"      ClientStompFrame frame = conn.createFrame(Stomp.Commands.SEND).addHeader(Stomp.Headers.Send.DESTINATION, getQueuePrefix() + getQueueName()).addHeader(""foo"", ""abc"").addHeader(""bar"", ""123"").addHeader(""correlation-id"", ""c123"").addHeader(""persistent"", ""true"").addHeader(""type"", ""t345"").addHeader(""JMSXGroupID"", ""abc"").addHeader(""priority"", ""3"").setBody(""Hello World"");"
5697,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,491,,"      ClientStompFrame frame = conn.createFrame(Stomp.Commands.SEND).addHeader(Stomp.Headers.Send.DESTINATION, getQueuePrefix() + getQueueName()).addHeader(""foo"", ""abc"").addHeader(""bar"", ""123"").addHeader(""correlation-id"", ""c123"").addHeader(""persistent"", ""true"").addHeader(""type"", ""t345"").addHeader(""JMSXGroupID"", ""abc"").addHeader(""priority"", ""3"").setBody(""Hello World"");"
5698,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,491,,"      ClientStompFrame frame = conn.createFrame(Stomp.Commands.SEND).addHeader(Stomp.Headers.Send.DESTINATION, getQueuePrefix() + getQueueName()).addHeader(""foo"", ""abc"").addHeader(""bar"", ""123"").addHeader(""correlation-id"", ""c123"").addHeader(""persistent"", ""true"").addHeader(""type"", ""t345"").addHeader(""JMSXGroupID"", ""abc"").addHeader(""priority"", ""3"").setBody(""Hello World"");"
5699,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,491,,"      ClientStompFrame frame = conn.createFrame(Stomp.Commands.SEND).addHeader(Stomp.Headers.Send.DESTINATION, getQueuePrefix() + getQueueName()).addHeader(""foo"", ""abc"").addHeader(""bar"", ""123"").addHeader(""correlation-id"", ""c123"").addHeader(""persistent"", ""true"").addHeader(""type"", ""t345"").addHeader(""JMSXGroupID"", ""abc"").addHeader(""priority"", ""3"").setBody(""Hello World"");"
5700,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,491,,"      ClientStompFrame frame = conn.createFrame(Stomp.Commands.SEND).addHeader(Stomp.Headers.Send.DESTINATION, getQueuePrefix() + getQueueName()).addHeader(""foo"", ""abc"").addHeader(""bar"", ""123"").addHeader(""correlation-id"", ""c123"").addHeader(""persistent"", ""true"").addHeader(""type"", ""t345"").addHeader(""JMSXGroupID"", ""abc"").addHeader(""priority"", ""3"").setBody(""Hello World"");"
5701,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,497,,"      Assert.assertEquals(""JMSCorrelationID"", ""c123"", message.getJMSCorrelationID());"
5702,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,498,,"      Assert.assertEquals(""getJMSType"", ""t345"", message.getJMSType());"
5703,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,545,,"      assertNull(""Should not receive message yet"", consumer.receive(100));"
5704,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,594,,"      Assert.assertTrue(error.getCommand().equals(""ERROR""));"
5705,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,758,,"      subscribe(conn, ""mysubid"", Stomp.Headers.Subscribe.AckModeValues.AUTO);"
5706,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,830,,"      sendJmsMessage(""Real message"", ""foo"", ""zzz"");"
5707,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,990,,"      sendJmsMessage(""second message"");"
5708,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,993,,"      log.debug(""Received frame: "" + frame);"
5709,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,994,,"      Assert.assertNull(""No message should have been received since subscription was removed"", frame);"
5710,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,1026,,"      beginTransaction(conn, ""tx1"");"
5711,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,1035,,"      Assert.assertNotNull(""Should have received a message"", message);"
5712,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,1198,,"      conn.connect(defUser, defPass, ""myclientid"");"
5713,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,1285,,"      assertNotNull(server.locateQueue(SimpleString.toSimpleString(""myclientid."" + getName())));"
5714,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,1501,,"      testPrefix(""/queue/"", RoutingType.ANYCAST, true);"
5715,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,1506,,"      testPrefix(""/topic/"", RoutingType.MULTICAST, true);"
5716,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompTest.java,1596,,"      frame = send(conn, ""/queue/"" + ADDRESS, null, ""Hello World 2"", true);"
5717,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompWithLargeMessagesTest.java,115,,"         frame.addHeader(""destination"", getQueuePrefix() + getQueueName());"
5718,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompWithLargeMessagesTest.java,121,,"      ClientStompFrame subFrame = conn.createFrame(""SUBSCRIBE"");"
5719,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompWithLargeMessagesTest.java,122,,"      subFrame.addHeader(""subscription-type"", ""ANYCAST"");"
5720,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompWithLargeMessagesTest.java,122,,"      subFrame.addHeader(""subscription-type"", ""ANYCAST"");"
5721,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompWithLargeMessagesTest.java,124,,"      subFrame.addHeader(""ack"", ""auto"");"
5722,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompWithLargeMessagesTest.java,124,,"      subFrame.addHeader(""ack"", ""auto"");"
5723,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompWithLargeMessagesTest.java,130,,"         Assert.assertTrue(frame.getCommand().equals(""MESSAGE""));"
5724,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompWithLargeMessagesTest.java,136,,"      ClientStompFrame unsubFrame = conn.createFrame(""UNSUBSCRIBE"");"
5725,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompWithLargeMessagesTest.java,138,,"      unsubFrame.addHeader(""receipt"", ""567"");"
5726,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/StompWithLargeMessagesTest.java,138,,"      unsubFrame.addHeader(""receipt"", ""567"");"
5727,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/util/StompClientConnectionFactory.java,24,,"   public static final String LATEST_VERSION = ""1.2"";"
5728,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/util/StompClientConnectionFactory.java,30,,"      if (""1.0"".equals(version)) {"
5729,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/util/StompClientConnectionFactory.java,33,,"      if (""1.1"".equals(version)) {"
5730,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/ExtraStompTest.java,107,,"      subscribe(conn, ""a-sub"");"
5731,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/ExtraStompTest.java,145,,"      frame.setBody(""Hello World"");"
5732,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,118,,"         assertEquals(""1.1"", connection.getVersion());"
5733,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,157,,"                                   .addHeader(Stomp.Headers.Connect.HOST, ""127.0.0.1"")"
5734,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,166,,"      assertEquals(null, reply.getHeader(""version""));"
5735,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,243,,"         server.getRemotingService().destroyAcceptor(""stomp"");"
5736,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,268,,"      ClientStompFrame response = send(conn, getQueuePrefix() + getQueueName(), ""text/plain"", ""Hello World 1!"");"
5737,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,268,,"      ClientStompFrame response = send(conn, getQueuePrefix() + getQueueName(), ""text/plain"", ""Hello World 1!"");"
5738,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,280,,"      subscribe(newConn, ""a-sub"");"
5739,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,284,,"      instanceLog.debug(""received "" + frame);"
5740,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,308,,"      send(conn, getQueuePrefix() + getQueueName(), ""application/xml"", ""Hello World 1!"");"
5741,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,467,,"                  .addHeader(Stomp.Headers.Connect.ACCEPT_VERSION, ""1.0,1.1"");"
5742,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,487,,"                  .addHeader(Stomp.Headers.Connect.HEART_BEAT, ""1,0"")"
5743,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,501,,"         send(conn, getQueuePrefix() + getQueueName(), ""text/plain"", ""Hello World"");"
5744,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,522,,"      instanceLog.debug(""========== start pinger!"");"
5745,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,552,,"      assertEquals(""500,500"", reply.getHeader(Stomp.Headers.Connect.HEART_BEAT));"
5746,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,562,,"                  .addHeader(Stomp.Headers.Connect.HEART_BEAT, ""500,1000"")"
5747,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,749,,"      server.getRemotingService().createAcceptor(""test"", ""tcp://127.0.0.1:"" + port + ""?connectionTtl=1000&connectionTtlMin=5000&connectionTtlMax=10000"").start();"
5748,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,948,,"      subscribe(conn, ""sub1"", Stomp.Headers.Subscribe.AckModeValues.CLIENT);"
5749,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,980,,"      nack(conn, ""sub2"", messageID);"
5750,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,984,,"      instanceLog.debug(""Receiver error: "" + error);"
5751,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,1120,,"                                      .addHeader(Stomp.Headers.RECEIPT_REQUESTED, ""answer-me"");"
5752,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,1378,,"      beginTransaction(conn, ""tx1"");"
5753,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,1580,,"                                   .addHeader(""JMSXGroupID"", ""TEST"")"
5754,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,1632,,"      sendJmsMessage(""Ignored message"", ""foo"", ""1234"");"
5755,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,1740,,"                                   .addHeader(""foo"", ""abc"")"
5756,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,1741,,"                                   .addHeader(""bar"", ""123"")"
5757,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,1741,,"                                   .addHeader(""bar"", ""123"")"
5758,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,1812,,"                                   .addHeader(Stomp.Headers.Message.CORRELATION_ID, ""c123"")"
5759,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v11/StompV11Test.java,1815,,"                                   .addHeader(Stomp.Headers.Message.TYPE, ""t345"")"
5760,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,132,,"      Assert.assertEquals(""1.2"", connection.getVersion());"
5761,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,159,,"      frame.addHeader(Stomp.Headers.Connect.HOST, ""127.0.0.1"");"
5762,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,276,,"      ClientStompFrame response = send(conn, getQueuePrefix() + getQueueName(), ""text/plain"", ""Hello World 1!"");"
5763,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,276,,"      ClientStompFrame response = send(conn, getQueuePrefix() + getQueueName(), ""text/plain"", ""Hello World 1!"");"
5764,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,285,,"      subscribe(newConn, ""a-sub"");"
5765,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,289,,"      instanceLog.debug(""received "" + frame);"
5766,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,316,,"      send(conn, getQueuePrefix() + getQueueName(), ""application/xml"", ""Hello World 1!"");"
5767,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,348,,"                                   .setBody(body + ""extra"");"
5768,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,405,,"                                   .addHeader(""foo"", ""value1"")"
5769,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,573,,"      Assert.assertFalse(""Should be disconnected in STOMP 1.2 after ERROR"", conn.isConnected());"
5770,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,602,,"                  .addHeader(Stomp.Headers.ACCEPT_VERSION, ""1.0,1.1,1.2"");"
5771,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,636,,"         send(conn, getQueuePrefix() + getQueueName(), ""text/plain"", ""Hello World"");"
5772,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,693,,"                  .addHeader(Stomp.Headers.Connect.HEART_BEAT, ""500,1000"")"
5773,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,873,,"      subscribe(conn, ""sub1"", ""client"");"
5774,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,873,,"      subscribe(conn, ""sub1"", ""client"");"
5775,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,938,,"      instanceLog.debug(""Receiver error: "" + error);"
5776,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,979,,"      subscribe(conn, ""sub1"", ""client-individual"");"
5777,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,1047,,"      ackFrame.addHeader(Stomp.Headers.Message.SUBSCRIPTION, ""sub2"");"
5778,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,1049,,"      ackFrame.addHeader(Stomp.Headers.RECEIPT_REQUESTED, ""answer-me"");"
5779,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,1057,,"      Assert.assertEquals(""answer-me"", error.getHeader(""receipt-id""));"
5780,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,1342,,"      beginTransaction(conn, ""tx1"");"
5781,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,1528,,"            ClientStompFrame frame = subscribeTopic(connection, UUID.randomUUID().toString(), ""client-individual"", ""123"");"
5782,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,1610,,"      frame.addHeader(""JMSXGroupID"", ""TEST"");"
5783,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,1778,,"                                   .addHeader(""foo"", ""abc"")"
5784,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,1779,,"                                   .addHeader(""bar"", ""123"")"
5785,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,1847,,"                                   .addHeader(""correlation-id"", ""c123"")"
5786,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,1850,,"                                   .addHeader(Stomp.Headers.Message.TYPE, ""t345"")"
5787,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/stomp/v12/StompV12Test.java,2180,,"                  .setBody(""second message"");"
5788,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/xa/BasicXaRecoveryTest.java,259,,"      Xid xid = new XidImpl(""xa1"".getBytes(), 1, UUIDGenerator.getInstance().generateStringUUID().getBytes());"
5789,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/xa/BasicXaRecoveryTest.java,603,,"      Xid xid2 = new XidImpl(""xa2"".getBytes(), 1, UUIDGenerator.getInstance().generateStringUUID().getBytes());"
5790,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/xa/BasicXaTest.java,124,,"      session.createQueue(new QueueConfiguration(""Test"").setRoutingType(RoutingType.ANYCAST));"
5791,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/xa/XaTimeoutTest.java,123,,"      Xid xid = new XidImpl(""xa1"".getBytes(), 1, UUIDGenerator.getInstance().generateStringUUID().getBytes());"
5792,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/xa/XaTimeoutTest.java,379,,"            m.putIntProperty(""msg"", i);"
5793,./TargetProjects/activemq-artemis/tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/util/JMSTestBase.java,114,,"      jmsServer.createQueue(storeConfig, queueName, null, true, ""/jms/"" + queueName);"
5794,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/AcknowledgementTest.java,55,,"      Message m = sess.createTextMessage(""testing123"");"
5795,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/AcknowledgementTest.java,126,,"      Message m3 = newsess.createTextMessage(""testing456"");"
5796,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/AcknowledgementTest.java,243,,"      log.trace(""Sent messages"");"
5797,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/AcknowledgementTest.java,256,,"      log.trace(""Received "" + count + "" messages"");"
5798,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/AcknowledgementTest.java,256,,"      log.trace(""Received "" + count + "" messages"");"
5799,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/AcknowledgementTest.java,264,,"      log.trace(""Session recover called"");"
5800,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/AcknowledgementTest.java,389,,"      log.trace(""Message is:"" + m);"
5801,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ActiveMQServerTestCase.java,120,,"      System.setProperty(""java.naming.factory.initial"", getContextFactory());"
5802,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionClosedTest.java,183,,"         ProxyAssertSupport.fail(""should throw exception"");"
5803,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionClosedTest.java,229,,"         ProxyAssertSupport.fail(""should throw IllegalStateException"");"
5804,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,66,,"      deployConnectionFactory(0, JMSFactoryType.QUEUE_CF, ""CF_QUEUE_XA_FALSE"", ""/CF_QUEUE_XA_FALSE"");"
5805,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,66,,"      deployConnectionFactory(0, JMSFactoryType.QUEUE_CF, ""CF_QUEUE_XA_FALSE"", ""/CF_QUEUE_XA_FALSE"");"
5806,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,79,,"      deployConnectionFactory(0, JMSFactoryType.TOPIC_CF, ""CF_TOPIC_XA_FALSE"", ""/CF_TOPIC_XA_FALSE"");"
5807,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,79,,"      deployConnectionFactory(0, JMSFactoryType.TOPIC_CF, ""CF_TOPIC_XA_FALSE"", ""/CF_TOPIC_XA_FALSE"");"
5808,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,112,,"      deployConnectionFactory(0, JMSFactoryType.TOPIC_CF, ""CF_XA_FALSE"", ""/CF_XA_FALSE"");"
5809,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,112,,"      deployConnectionFactory(0, JMSFactoryType.TOPIC_CF, ""CF_XA_FALSE"", ""/CF_XA_FALSE"");"
5810,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,184,,"      bindings.add(""TestSlowConsumersCF"");"
5811,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,301,,"      deployConnectionFactory(0, JMSFactoryType.CF, ""ConnectionFactory"", ""/ConnectionFactory"");"
5812,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,301,,"      deployConnectionFactory(0, JMSFactoryType.CF, ""ConnectionFactory"", ""/ConnectionFactory"");"
5813,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,302,,"      deployConnectionFactory(0, JMSFactoryType.QUEUE_XA_CF, ""CF_QUEUE_XA_TRUE"", ""/CF_QUEUE_XA_TRUE"");"
5814,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,302,,"      deployConnectionFactory(0, JMSFactoryType.QUEUE_XA_CF, ""CF_QUEUE_XA_TRUE"", ""/CF_QUEUE_XA_TRUE"");"
5815,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,304,,"      deployConnectionFactory(0, JMSFactoryType.XA_CF, ""CF_XA_TRUE"", ""/CF_XA_TRUE"");"
5816,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,304,,"      deployConnectionFactory(0, JMSFactoryType.XA_CF, ""CF_XA_TRUE"", ""/CF_XA_TRUE"");"
5817,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,306,,"      deployConnectionFactory(0, JMSFactoryType.QUEUE_CF, ""CF_QUEUE"", ""/CF_QUEUE"");"
5818,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,306,,"      deployConnectionFactory(0, JMSFactoryType.QUEUE_CF, ""CF_QUEUE"", ""/CF_QUEUE"");"
5819,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,307,,"      deployConnectionFactory(0, JMSFactoryType.TOPIC_CF, ""CF_TOPIC"", ""/CF_TOPIC"");"
5820,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,307,,"      deployConnectionFactory(0, JMSFactoryType.TOPIC_CF, ""CF_TOPIC"", ""/CF_TOPIC"");"
5821,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,308,,"      deployConnectionFactory(0, JMSFactoryType.TOPIC_XA_CF, ""CF_TOPIC_XA_TRUE"", ""/CF_TOPIC_XA_TRUE"");"
5822,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/ConnectionFactoryTest.java,308,,"      deployConnectionFactory(0, JMSFactoryType.TOPIC_XA_CF, ""CF_TOPIC_XA_TRUE"", ""/CF_TOPIC_XA_TRUE"");"
5823,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/DurableSubscriptionTest.java,59,,"         conn.setClientID(""brookeburke"");"
5824,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/DurableSubscriptionTest.java,65,,"         s.createDurableSubscriber(ActiveMQServerTestCase.topic1, ""monicabelucci"");"
5825,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/DurableSubscriptionTest.java,318,,"         MessageConsumer cons = s.createDurableSubscriber(ActiveMQServerTestCase.topic1, ""uzzi"");"
5826,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/DurableSubscriptionTest.java,406,,"      TopicSubscriber subscriber = s.createDurableSubscriber(ActiveMQServerTestCase.topic1, "".subscription.name.with.periods."");"
5827,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/JMSTest.java,66,,"      TextMessage m = session.createTextMessage(""message one"");"
5828,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/JMSTest.java,156,,"      m = session.createTextMessage(""message two"");"
5829,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/JMSTest.java,217,,"      TextMessage m = session.createTextMessage(""one"");"
5830,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/MessageConsumerTest.java,262,,"         TextMessage tm = producerSession.createTextMessage(""someText"");"
5831,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/MessageConsumerTest.java,547,,"         Message m = sessSend.createTextMessage(""hello"");"
5832,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/MessageConsumerTest.java,608,,"         tm.setText(""One"");"
5833,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/MessageConsumerTest.java,713,,"         tm.setText(""Two"");"
5834,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/MessageConsumerTest.java,808,,"         TextMessage tm1 = sess.createTextMessage(""hello1"");"
5835,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/MessageConsumerTest.java,809,,"         TextMessage tm2 = sess.createTextMessage(""hello2"");"
5836,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/MessageConsumerTest.java,810,,"         TextMessage tm3 = sess.createTextMessage(""hello3"");"
5837,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/MessageConsumerTest.java,1418,,"            Assert.fail(""must throw a JMS IllegalStateException"");"
5838,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/MessageConsumerTest.java,2122,,"            TextMessage m = producerSession.createTextMessage(""body"" + i);"
5839,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/MessageConsumerTest.java,2686,,"         TextMessage tm = sess3.createTextMessage(""nurse!"");"
5840,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/MessageConsumerTest.java,2793,,"         m.setStringProperty(""p1"", ""aardvark"");"
5841,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/MessageConsumerTest.java,2859,,"      final String CLIENT_ID1 = ""test-client-id1"";"
5842,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/MessageConsumerTest.java,2872,,"         MessageConsumer durable = sess1.createDurableSubscriber(ActiveMQServerTestCase.topic1, ""mySubscription"");"
5843,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/MessageConsumerTest.java,2918,,"         sess1.createDurableSubscriber(ActiveMQServerTestCase.topic1, ""mySubscription1"");"
5844,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/MessageProducerTest.java,111,,"         TextMessage m = ps.createTextMessage(""test"");"
5845,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/MessageProducerTest.java,341,,"            ProxyAssertSupport.fail(""should throw exception"");"
5846,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/PersistenceTest.java,45,,"            TextMessage tm = sess.createTextMessage(""message"" + i);"
5847,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/SecurityTest.java,113,,"      createConnection(""guest"", ""guest"");"
5848,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/SecurityTest.java,197,,"      SimpleString queueName = SimpleString.toSimpleString(""guest.cannot.send"");"
5849,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/SecurityTest.java,201,,"      ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(""tcp://localhost:61616"");"
5850,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/SecurityTest.java,208,,"         fail(""JMSSecurityException expected as guest is not allowed to send"");"
5851,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/SecurityTest.java,366,,"         ActiveMQServerTestCase.deployConnectionFactory(""dilbert-id"", ""preConfcf"", ""preConfcf"");"
5852,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/SecurityTest.java,385,,"      conn.setClientID(""myID"");"
5853,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/TemporaryDestinationTest.java,63,,"         final String messageText = ""This is a message"";"
5854,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/TopicTest.java,57,,"      p.send(s.createTextMessage(""payload""));"
5855,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/TransactedSessionTest.java,58,,"         ProxyAssertSupport.assertEquals(1, m.getIntProperty(""JMSXDeliveryCount""));"
5856,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/TransactedSessionTest.java,94,,"         Message mSent = sessSend.createTextMessage(""igloo"");"
5857,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/TransactedSessionTest.java,188,,"         mSent.setText(""rollback"");"
5858,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageBodyTest.java,428,,"      m1.setBoolean(""myBool"", myBool);"
5859,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageBodyTest.java,429,,"      m1.setByte(""myByte"", myByte);"
5860,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageBodyTest.java,430,,"      m1.setShort(""myShort"", myShort);"
5861,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageBodyTest.java,431,,"      m1.setInt(""myInt"", myInt);"
5862,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageBodyTest.java,432,,"      m1.setLong(""myLong"", myLong);"
5863,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageBodyTest.java,433,,"      m1.setFloat(""myFloat"", myFloat);"
5864,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageBodyTest.java,434,,"      m1.setDouble(""myDouble"", myDouble);"
5865,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageBodyTest.java,435,,"      m1.setString(""myString"", myString);"
5866,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageBodyTest.java,447,,"         m1.setObject(""myIllegal"", new Object());"
5867,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageHeaderTest.java,101,,"         m.setIntProperty(""count"", i);"
5868,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageHeaderTest.java,115,,"         m.setIntProperty(""count2"", i);"
5869,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageHeaderTest.java,174,,"      m1.setBooleanProperty(""myBool"", myBool);"
5870,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageHeaderTest.java,175,,"      m1.setByteProperty(""myByte"", myByte);"
5871,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageHeaderTest.java,176,,"      m1.setShortProperty(""myShort"", myShort);"
5872,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageHeaderTest.java,177,,"      m1.setIntProperty(""myInt"", myInt);"
5873,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageHeaderTest.java,178,,"      m1.setLongProperty(""myLong"", myLong);"
5874,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageHeaderTest.java,179,,"      m1.setFloatProperty(""myFloat"", myFloat);"
5875,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageHeaderTest.java,180,,"      m1.setDoubleProperty(""myDouble"", myDouble);"
5876,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageHeaderTest.java,181,,"      m1.setStringProperty(""myString"", myString);"
5877,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageHeaderTest.java,193,,"         m1.setObjectProperty(""myIllegal"", new Object());"
5878,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessageHeaderTestBase.java,265,,"         ProxyAssertSupport.fail(""should throw MessageEOFException"");"
5879,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,103,,"         ProxyAssertSupport.fail(""expected IllegalArgumentException"");"
5880,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,171,,"      producer.setProperty(""aboolean"", bool);"
5881,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,172,,"      producer.setProperty(""abyte"", bValue);"
5882,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,173,,"      producer.setProperty(""ashort"", nShort);"
5883,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,174,,"      producer.setProperty(""anint"", nInt);"
5884,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,175,,"      producer.setProperty(""afloat"", nFloat);"
5885,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,176,,"      producer.setProperty(""adouble"", nDouble);"
5886,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,178,,"      producer.setProperty(""along"", nLong);"
5887,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,181,,"      producer.setProperty(""anotherString"", ""1"");"
5888,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,190,,"         ProxyAssertSupport.fail(""MessageFormatRuntimeException expected"");"
5889,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,203,,"         ProxyAssertSupport.fail(""Caught unexpected exception: "" + ee);"
5890,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,629,,"      m1.setBooleanProperty(""myBool"", myBool);"
5891,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,682,,"      m1.setByteProperty(""myByte"", myByte);"
5892,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,719,,"      m1.setShortProperty(""myShort"", myShort);"
5893,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,761,,"      m1.setIntProperty(""myInt"", myInt);"
5894,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,808,,"      m1.setLongProperty(""myLong"", myLong);"
5895,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,860,,"      m1.setFloatProperty(""myFloat"", myFloat);"
5896,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,907,,"      m1.setDoubleProperty(""myDouble"", myDouble);"
5897,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/MessagePropertyConversionTest.java,990,,"      m3.setStringProperty(""myIllegal"", ""xyz123"");"
5898,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/ObjectMessageTest.java,107,,"      list.add(""hello"");"
5899,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/ObjectMessageTest.java,117,,"      list.add(""hello2"");"
5900,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/SimpleJMSBytesMessage.java,66,,"         throw new JMSException(""IOException"");"
5901,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/SimpleJMSBytesMessage.java,213,,"         throw new MessageNotWriteableException(""the message body is read-only"");"
5902,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/SimpleJMSMapMessage.java,51,,"         throw new MessageNotWriteableException(""Message is ReadOnly !"");"
5903,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/SimpleJMSMapMessage.java,222,,"         throw new MessageFormatException(""Invalid conversion"");"
5904,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/SimpleJMSMessage.java,350,,"      throw new UnsupportedOperationException(""JMS 2.0 / not implemented"");"
5905,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/SimpleJMSStreamMessage.java,63,,"         throw new MessageNotReadableException(""The message body is writeonly"");"
5906,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/SimpleJMSStreamMessage.java,71,,"            throw new NullPointerException(""Value is null"");"
5907,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/SimpleJMSStreamMessage.java,80,,"            throw new MessageFormatException(""Invalid conversion"");"
5908,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/message/SimpleJMSStreamMessage.java,398,,"         throw new MessageNotWriteableException(""The message body is readonly"");"
5909,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/selector/SelectorTest.java,69,,"         redMessage.setStringProperty(""color"", ""red"");"
5910,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/selector/SelectorTest.java,104,,"      String selector1 = ""beatle = 'john'"";"
5911,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/selector/SelectorTest.java,121,,"            m.setStringProperty(""beatle"", ""john"");"
5912,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/selector/SelectorTest.java,121,,"            m.setStringProperty(""beatle"", ""john"");"
5913,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/selector/SelectorTest.java,127,,"            m.setStringProperty(""beatle"", ""kermit the frog"");"
5914,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/selector/SelectorTest.java,172,,"            m.setIntProperty(""wibble"", j);"
5915,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/selector/SelectorTest.java,642,,"         TextMessage msg1 = session.createTextMessage(""msg1"");"
5916,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/selector/SelectorTest.java,645,,"         TextMessage msg2 = session.createTextMessage(""msg2"");"
5917,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/selector/SelectorTest.java,903,,"         tm.setStringProperty(""PROP1"", ""VALUE1"");"
5918,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/selector/SelectorTest.java,903,,"         tm.setStringProperty(""PROP1"", ""VALUE1"");"
5919,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/selector/SelectorTest.java,905,,"         log.debug(""Sent message with id ["" + tm.getJMSMessageID() + ""]"");"
5920,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/selector/SelectorTest.java,915,,"         tm.setStringProperty(""PROP2"", ""VALUE2"");"
5921,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/selector/SelectorTest.java,915,,"         tm.setStringProperty(""PROP2"", ""VALUE2"");"
5922,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/tools/container/LocalTestServer.java,110,,"      securityManager.getConfiguration().addUser(""guest"", ""guest"");"
5923,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/util/JNDIUtilTest.java,57,,"         ic.lookup(""/doesnotexistyet"");"
5924,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/util/JNDIUtilTest.java,67,,"      ic.unbind(""doesnotexistyet"");"
5925,./TargetProjects/activemq-artemis/tests/jms-tests/src/test/java/org/apache/activemq/artemis/jms/tests/util/ProxyAssertSupport.java,33,,"         ProxyAssertSupport.log.warn(""AssertionFailure::"" + e.toString(), e);"
5926,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/apache/activemq/artemis/jms/ActiveMQCoreAdmin.java,59,,"      jndiProps.put(""connectionFactory."" + name, ""tcp://127.0.0.1:61616?type=CF"");"
5927,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/message/headers/MessageHeaderTest.java,165,,"         admin.createQueue(""anotherQueue"");"
5928,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/message/properties/MessagePropertyConversionTest.java,68,,"         message.setStringProperty(""pi"", ""3.14159"");"
5929,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/message/properties/MessagePropertyConversionTest.java,87,,"         Assert.fail(""sec. 3.5.4 The String to numeric conversions must throw the java.lang.NumberFormatException "" + "" if the numeric's valueOf() method does not accept the String value as a valid representation.\n"");"
5930,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/message/properties/MessagePropertyConversionTest.java,87,,"         Assert.fail(""sec. 3.5.4 The String to numeric conversions must throw the java.lang.NumberFormatException "" + "" if the numeric's valueOf() method does not accept the String value as a valid representation.\n"");"
5931,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/message/properties/MessagePropertyConversionTest.java,173,,"         message.setStringProperty(""prop"", ""0"");"
5932,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/message/properties/MessagePropertyConversionTest.java,312,,"         message.setStringProperty(""prop"", ""true"");"
5933,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/message/properties/MessagePropertyConversionTest.java,359,,"         Assert.fail(""sec. 3.5.4 The unmarked cases [of Table 0-4] should raise a JMS MessageFormatException.\n"");"
5934,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/message/properties/MessagePropertyConversionTest.java,596,,"         Assert.assertEquals(""127"", message.getStringProperty(""prop""));"
5935,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/message/properties/MessagePropertyTest.java,46,,"         message.setObjectProperty(""prop"", new Vector());"
5936,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/message/properties/MessagePropertyTest.java,138,,"         Assert.fail(""Should raise a NumberFormatException.\n"");"
5937,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/message/properties/MessagePropertyTest.java,215,,"         message.setJMSCorrelationID(""foo"");"
5938,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/selector/SelectorSyntaxTest.java,43,,"         Assert.assertTrue(identifier + "" starts with an invalid Java identifier start character"", Character.isJavaIdentifierStart(identifier.charAt(0)));"
5939,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/selector/SelectorSyntaxTest.java,44,,"         receiver = receiverSession.createReceiver(receiverQueue, identifier + "" IS NULL"");"
5940,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/selector/SelectorTest.java,153,,"      dummyMessage.setLongProperty(""weight"", 3000);"
5941,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/selector/SelectorTest.java,217,,"      message.setText(""testEquals:2"");"
5942,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/selector/SelectorTest.java,277,,"      Assert.assertTrue(""Message not received"", msg != null);"
5943,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/selector/SelectorTest.java,278,,"      Assert.assertTrue(""Message of another test: "" + msg.getText(), msg.getText().startsWith(""testBetween""));"
5944,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/session/SessionTest.java,55,,"         Assert.fail(""Should raise a javax.jms.IllegalStateException, not a "" + e);"
5945,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/session/TopicSessionTest.java,131,,"         subscriber = subscriberSession.createDurableSubscriber(subscriberTopic, ""topic"");"
5946,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/session/UnifiedSessionTest.java,74,,"         Assert.fail(""Should throw a javax.jms.IllegalStateException"");"
5947,./TargetProjects/activemq-artemis/tests/joram-tests/src/test/java/org/objectweb/jtests/jms/conform/session/UnifiedSessionTest.java,77,,"         Assert.fail(""Should throw a javax.jms.IllegalStateException, not a "" + e);"
5948,./TargetProjects/activemq-artemis/tests/karaf-client-integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/karaf/client/PaxExamOptions.java,51,,"                           .groupId(""org.apache.activemq"")"
5949,./TargetProjects/activemq-artemis/tests/karaf-client-integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/karaf/client/PaxExamOptions.java,52,,"                           .artifactId(""artemis-features"")"
5950,./TargetProjects/activemq-artemis/tests/karaf-client-integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/karaf/client/PaxExamOptions.java,53,,"                           .type(""xml"")"
5951,./TargetProjects/activemq-artemis/tests/karaf-client-integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/karaf/client/PaxExamOptions.java,54,,"                           .classifier(""features"")"
5952,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/brokerConnection/QpidDispatchPeerTest.java,104,,"            ConnectionFactory factoryProducer = service.createCF(qpidServer, ""amqp"", 5672, ""?amqpIdleTimeout=1000"");"
5953,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/brokerConnection/QpidDispatchPeerTest.java,104,,"            ConnectionFactory factoryProducer = service.createCF(qpidServer, ""amqp"", 5672, ""?amqpIdleTimeout=1000"");"
5954,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/brokerConnection/QpidDispatchPeerTest.java,123,,"            Connection connectionConsumer = factoryConsumer.createConnection(""artemis"", ""artemis"");"
5955,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/common/ContainerService.java,161,,"         return CFUtil.createConnectionFactory(""amqp"", ""tcp://"" + getHost(container) + "":"" + getPort(container, port));"
5956,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/console/QueuesTest.java,48,,"      Wait.assertEquals(1, () -> queuesPage.countQueue(""DLQ""));"
5957,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/dnsswitch/DNSSwitchTest.java,81,,"   static ObjectNameBuilder liveNameBuilder = ObjectNameBuilder.create(ActiveMQDefaultConfiguration.getDefaultJmxDomain(), ""live"", true);"
5958,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/dnsswitch/DNSSwitchTest.java,82,,"   static ObjectNameBuilder backupNameBuilder = ObjectNameBuilder.create(ActiveMQDefaultConfiguration.getDefaultJmxDomain(), ""backup"", true);"
5959,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/dnsswitch/DNSSwitchTest.java,269,,"      NetUtil.netUp(FIRST_IP, ""lo:first"");"
5960,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/dnsswitch/DNSSwitchTest.java,270,,"      NetUtil.netUp(SECOND_IP, ""lo:second"");"
5961,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/dnsswitch/DNSSwitchTest.java,271,,"      saveConf(hostsFile, FIRST_IP, ""FIRST"", SECOND_IP, ""SECOND"");"
5962,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/dnsswitch/DNSSwitchTest.java,271,,"      saveConf(hostsFile, FIRST_IP, ""FIRST"", SECOND_IP, ""SECOND"");"
5963,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/dnsswitch/DNSSwitchTest.java,277,,"         serverLive = ServerUtil.startServer(args[1], ""live"", ""tcp://FIRST:61616"", 30_000);"
5964,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/dnsswitch/DNSSwitchTest.java,278,,"         serverBackup = ServerUtil.startServer(args[2], ""backup"", ""tcp://SECOND:61716"", 0);"
5965,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/dnsswitch/DNSSwitchTest.java,300,,"         ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(""tcp://FIRST:61616?ha=true"");"
5966,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/dnsswitch/DNSSwitchTest.java,307,,"         Queue queue = session.createQueue(""test"");"
5967,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/dnsswitch/DNSSwitchTest.java,311,,"         producer.send(session.createTextMessage(""hello""));"
5968,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/dnsswitch/DNSSwitchTest.java,314,,"         NetUtil.netUp(THIRD_IP, ""lo:third"");"
5969,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/dnsswitch/DNSSwitchTest.java,611,,"      saveConf(hostsFile, FIRST_IP, ""FIRST"", SECOND_IP, ""SECOND"", THIRD_IP, ""PINGPLACE"");"
5970,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/dnsswitch/DNSSwitchTest.java,861,,"      saveConf(hostsFile, ""192.0.0.3"", ""test"");"
5971,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/infinite/InfiniteRedeliverySmokeTest.java,86,,"         int numberOfFiles = fileFactory.listFiles(""amq"").size();"
5972,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/logging/AuditLoggerResourceTest.java,75,,"      String[]  credentials = new String[] {""admin"", ""admin""};"
5973,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/logging/AuditLoggerResourceTest.java,101,,"         serverControl.createAddress(""auditAddress"", ""ANYCAST,MULTICAST"");"
5974,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/logging/AuditLoggerResourceTest.java,107,,"         serverControl.createQueue(""auditAddress"", ""auditQueue"", ""ANYCAST"");"
5975,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/mmfactory/MMSFactoryTest.java,193,,"         consumers[i] = startConsumerProcess(theprotocol, timeForConsumers[i], ""MMFactory::MMConsumer"", 100, i);"
5976,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/replicationflow/SoakPagingTest.java,87,,"      if (consumerType.equals(""queue"")) {"
5977,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/replicationflow/SoakPagingTest.java,96,,"      return Arrays.asList(new Object[][]{{""MQTT"", ""topic"", false}, {""AMQP"", ""shared"", false}, {""AMQP"", ""queue"", false}, {""OPENWIRE"", ""topic"", false}, {""OPENWIRE"", ""queue"", false}, {""CORE"", ""shared"", false}, {""CORE"", ""queue"", false},"
5978,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/replicationflow/SoakPagingTest.java,96,,"      return Arrays.asList(new Object[][]{{""MQTT"", ""topic"", false}, {""AMQP"", ""shared"", false}, {""AMQP"", ""queue"", false}, {""OPENWIRE"", ""topic"", false}, {""OPENWIRE"", ""queue"", false}, {""CORE"", ""shared"", false}, {""CORE"", ""queue"", false},"
5979,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/replicationflow/SoakPagingTest.java,96,,"      return Arrays.asList(new Object[][]{{""MQTT"", ""topic"", false}, {""AMQP"", ""shared"", false}, {""AMQP"", ""queue"", false}, {""OPENWIRE"", ""topic"", false}, {""OPENWIRE"", ""queue"", false}, {""CORE"", ""shared"", false}, {""CORE"", ""queue"", false},"
5980,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/replicationflow/SoakPagingTest.java,96,,"      return Arrays.asList(new Object[][]{{""MQTT"", ""topic"", false}, {""AMQP"", ""shared"", false}, {""AMQP"", ""queue"", false}, {""OPENWIRE"", ""topic"", false}, {""OPENWIRE"", ""queue"", false}, {""CORE"", ""shared"", false}, {""CORE"", ""queue"", false},"
5981,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/replicationflow/SoakPagingTest.java,227,,"         System.out.println(""*******************************************************************************************************************************"");"
5982,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/replicationflow/SoakPagingTest.java,251,,"         Connection connection = factory.createConnection(""admin"", ""admin"");"
5983,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/transfer/TestTransfer.java,48,,"   String sourceTransferProtocol = ""amqp"";"
5984,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/transfer/TestTransfer.java,97,,"      return createConnectionFactory(consumerProtocol, ""tcp://localhost:61716"");"
5985,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/transfer/TestTransfer.java,141,,"         producer.send(session.createTextMessage(""hello "" + i));"
5986,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/transfer/TestTransfer.java,146,,"      String[] argsArray = new String[]{""transfer"", ""--target-url"", ""tcp://localhost:61716"", ""--source-queue"", getQueueName(), ""--target-queue"", getQueueName(), ""--source-protocol"", sourceTransferProtocol, ""--target-protocol"", targetTransferProtocol, ""--receive-timeout"", ""0""};"
5987,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/transfer/TestTransfer.java,146,,"      String[] argsArray = new String[]{""transfer"", ""--target-url"", ""tcp://localhost:61716"", ""--source-queue"", getQueueName(), ""--target-queue"", getQueueName(), ""--source-protocol"", sourceTransferProtocol, ""--target-protocol"", targetTransferProtocol, ""--receive-timeout"", ""0""};"
5988,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/transfer/TestTransfer.java,146,,"      String[] argsArray = new String[]{""transfer"", ""--target-url"", ""tcp://localhost:61716"", ""--source-queue"", getQueueName(), ""--target-queue"", getQueueName(), ""--source-protocol"", sourceTransferProtocol, ""--target-protocol"", targetTransferProtocol, ""--receive-timeout"", ""0""};"
5989,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/transfer/TestTransfer.java,146,,"      String[] argsArray = new String[]{""transfer"", ""--target-url"", ""tcp://localhost:61716"", ""--source-queue"", getQueueName(), ""--target-queue"", getQueueName(), ""--source-protocol"", sourceTransferProtocol, ""--target-protocol"", targetTransferProtocol, ""--receive-timeout"", ""0""};"
5990,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/transfer/TestTransfer.java,146,,"      String[] argsArray = new String[]{""transfer"", ""--target-url"", ""tcp://localhost:61716"", ""--source-queue"", getQueueName(), ""--target-queue"", getQueueName(), ""--source-protocol"", sourceTransferProtocol, ""--target-protocol"", targetTransferProtocol, ""--receive-timeout"", ""0""};"
5991,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/transfer/TestTransfer.java,146,,"      String[] argsArray = new String[]{""transfer"", ""--target-url"", ""tcp://localhost:61716"", ""--source-queue"", getQueueName(), ""--target-queue"", getQueueName(), ""--source-protocol"", sourceTransferProtocol, ""--target-protocol"", targetTransferProtocol, ""--receive-timeout"", ""0""};"
5992,./TargetProjects/activemq-artemis/tests/smoke-tests/src/test/java/org/apache/activemq/artemis/tests/smoke/transfer/TestTransfer.java,204,,"      MessageConsumer subscription = session.createSharedDurableConsumer(topic, ""testSubs"");"
5993,./TargetProjects/activemq-artemis/tests/stress-tests/src/test/java/org/apache/activemq/artemis/tests/stress/journal/AddAndRemoveStressTest.java,78,,"      JournalImpl impl = new JournalImpl(10 * 1024 * 1024, AddAndRemoveStressTest.NUMBER_OF_FILES_ON_JOURNAL, AddAndRemoveStressTest.NUMBER_OF_FILES_ON_JOURNAL, 0, 0, factory, ""amq"", ""amq"", 1000);"
5994,./TargetProjects/activemq-artemis/tests/stress-tests/src/test/java/org/apache/activemq/artemis/tests/stress/paging/PageCursorStressTest.java,88,,"      System.out.println(""NumberOfPages = "" + numberOfPages);"
5995,./TargetProjects/activemq-artemis/tests/stress-tests/src/test/java/org/apache/activemq/artemis/tests/stress/paging/PageCursorStressTest.java,123,,"         assertEquals(key++, msg.getMessage().getIntProperty(""key"").intValue());"
5996,./TargetProjects/activemq-artemis/tests/stress-tests/src/test/java/org/apache/activemq/artemis/tests/stress/paging/PageCursorStressTest.java,154,,"            Boolean property = message.getBooleanProperty(""even"");"
5997,./TargetProjects/activemq-artemis/tests/stress-tests/src/test/java/org/apache/activemq/artemis/tests/stress/paging/PageCursorStressTest.java,276,,"      System.out.println(""cursorProvider = "" + cursorProvider);"
5998,./TargetProjects/activemq-artemis/tests/stress-tests/src/test/java/org/apache/activemq/artemis/tests/stress/paging/PageCursorStressTest.java,280,,"      System.out.println(""Cursor: "" + cursor);"
5999,./TargetProjects/activemq-artemis/tests/stress-tests/src/test/java/org/apache/activemq/artemis/tests/stress/paging/PageStressTest.java,55,,"      settings.put(""page-adr"", setting);"
