222000,./TargetProjects/qpid-jms/qpid-jms-client/src/test/java/org/apache/qpid/jms/util/PropertyUtilTest.java,513,,"        properties.put(""firstName"", ""foo"");"
222001,./TargetProjects/qpid-jms/qpid-jms-client/src/test/java/org/apache/qpid/jms/util/PropertyUtilTest.java,514,,"        properties.put(""lastName"", ""bar"");"
222002,./TargetProjects/qpid-jms/qpid-jms-client/src/test/java/org/apache/qpid/jms/util/PropertyUtilTest.java,514,,"        properties.put(""lastName"", ""bar"");"
222003,./TargetProjects/qpid-jms/qpid-jms-client/src/test/java/org/apache/qpid/jms/util/PropertyUtilTest.java,770,,"        String value = ""prefixed.option"";"
222004,./TargetProjects/qpid-jms/qpid-jms-client/src/test/java/org/apache/qpid/jms/util/StringArrayConverterTest.java,46,,"        String[] array = StringArrayConverter.convertToStringArray(""foo"");"
222005,./TargetProjects/qpid-jms/qpid-jms-client/src/test/java/org/apache/qpid/jms/util/StringArrayConverterTest.java,53,,"        assertEquals(""bar"", array[1]);"
222006,./TargetProjects/qpid-jms/qpid-jms-client/src/test/java/org/apache/qpid/jms/util/TypeConversionSupportTest.java,84,,"        assertEquals(""42.0"", result);"
222007,./TargetProjects/qpid-jms/qpid-jms-client/src/test/java/org/apache/qpid/jms/util/URISupportTest.java,107,,"        assertTrue(data.getParameters().containsKey(""updateURIsURL""));"
222008,./TargetProjects/qpid-jms/qpid-jms-client/src/test/java/org/apache/qpid/jms/util/URISupportTest.java,224,,"        parameters.put(""t.proxyHost"", ""localhost"");"
222009,./TargetProjects/qpid-jms/qpid-jms-client/src/test/java/org/apache/qpid/jms/util/URISupportTest.java,306,,"            assertTrue(uri + "" must be detected as composite URI"", URISupport.isCompositeURI(uri));"
222010,./TargetProjects/qpid-jms/qpid-jms-client/src/test/java/org/apache/qpid/jms/util/URISupportTest.java,365,,"            fail(""Should have thrown URISyntaxException"");"
222011,./TargetProjects/qpid-jms/qpid-jms-client/src/test/java/org/apache/qpid/jms/util/VariableExpansionTest.java,101,,"            VariableExpansion.expand(""no-expansion-needed"", null);"
222012,./TargetProjects/qpid-jms/qpid-jms-client/src/test/java/org/apache/qpid/jms/util/VariableExpansionTest.java,129,,"        assertEquals(""Expanded variable not as expected"", testPropValue, expanded);"
222013,./TargetProjects/qpid-jms/qpid-jms-client/src/test/java/org/apache/qpid/jms/util/VariableExpansionTest.java,178,,"        String prefix = ""prefix"";"
222014,./TargetProjects/qpid-jms/qpid-jms-client/src/test/java/org/apache/qpid/jms/util/VariableExpansionTest.java,182,,"        String suffix = ""suffix"";"
222015,./TargetProjects/qpid-jms/qpid-jms-client/src/test/java/org/apache/qpid/jms/util/VariableExpansionTest.java,231,,"        String propName1 = ""propName1"";"
222016,./TargetProjects/qpid-jms/qpid-jms-discovery/src/test/java/org/apache/qpid/jms/provider/discovery/DiscoveryProviderFactoryTest.java,51,,"        assertEquals(""Unexpected option prefix"", ""failover."", optionPrefix);"
222017,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/JmsConnectionTest.java,115,,"        factory.setUsername(""unknown"");"
222018,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/JmsQueueConnectionTest.java,55,,"        factory.setUsername(""unknown"");"
222019,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/JmsTopicConnectionTest.java,63,,"        factory.setUsername(""unknown"");"
222020,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/consumer/JmsClientAckTest.java,65,,"        producer.send(session.createTextMessage(""Hello""));"
222021,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/consumer/JmsClientAckTest.java,76,,"        assertTrue(""Queued message not consumed."", Wait.waitFor(new Wait.Condition() {"
222022,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/consumer/JmsDurableSubscriberTest.java,69,,"        connection.setClientID(""DURABLE-AMQP"");"
222023,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/consumer/JmsQueueBrowserTest.java,135,,"            LOG.debug(""Recv: {}"", msg);"
222024,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/consumer/JmsZeroPrefetchTest.java,73,,"        assertNotNull(""Should have received a message!"", answer);"
222025,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/consumer/JmsZeroPrefetchTest.java,119,,"        producer.send(session.createTextMessage(""Msg1""));"
222026,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/discovery/FileWatcherDiscoveryTest.java,88,,"        assertTrue(""connection never connected."", connected.await(30, TimeUnit.SECONDS));"
222027,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/discovery/JmsAmqpDiscoveryTest.java,101,,"        assertTrue(""connection never connected."", Wait.waitFor(new Wait.Condition() {"
222028,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/failover/JmsFailoverTest.java,166,,"        assertTrue(""Should have a new connection."", Wait.waitFor(new Wait.Condition() {"
222029,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/failover/JmsTxConsumerFailoverTest.java,90,,"            assertNotNull(""Mesage was not expected but not received"", received);"
222030,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/failover/JmsTxProducerFailoverTest.java,94,,"            LOG.debug(""Producer sening message #{}"", i + 1);"
222031,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/failover/JmsTxProducerFailoverTest.java,95,,"            producer.send(session.createTextMessage(""Message: "" + i));"
222032,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/producer/JmsProduceMessageTypesTest.java,63,,"        String payload = ""TEST"";"
222033,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/support/AmqpTestSupport.java,68,,"                return brokerService.getTransportConnectorByName(""openwire"").getPublishableConnectURI();"
222034,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/support/AmqpTestSupport.java,80,,"        if (portMap.containsKey(""amqp"")) {"
222035,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/support/QpidJmsTestSupport.java,420,,"        entry.setRead(""admins,anonymous"");"
222036,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/support/QpidJmsTestSupport.java,426,,"        entry.setRead(""users,anonymous"");"
222037,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/support/QpidJmsTestSupport.java,433,,"        entry.setWrite(""guests,users,anonymous"");"
222038,./TargetProjects/qpid-jms/qpid-jms-interop-tests/qpid-jms-activemq-tests/src/test/java/org/apache/qpid/jms/transactions/JmsTransactedConsumerTest.java,144,,"        assertNotNull(""Should have re-received the message again!"", message);"
222039,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/client/AMQDestination.java,243,,"        _logger.debug(""Based on "" + address + "" the selected destination syntax is "" + _destSyntax);"
222040,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/client/AMQDestination.java,243,,"        _logger.debug(""Based on "" + address + "" the selected destination syntax is "" + _destSyntax);"
222041,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/client/AMQDestination.java,619,,"                sb.append(""='true'"");"
222042,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/client/AMQSession.java,128,,"    public static final String STRICT_AMQP_FATAL_DEFAULT = ""true"";"
222043,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/client/AMQSession.java,825,,"                throw JMSExceptionHelper.chainJMSException(new JMSException(""Error closing session: "" + e), e);"
222044,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/client/BrokerDetails.java,139,,"                        connection = new URI(DEFAULT_TRANSPORT + ""://"" + url);"
222045,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/client/message/AMQMessageDelegate_0_8.java,460,,"            throw new UnsupportedOperationException(""JMS Properties not supported in AMQP"");"
222046,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/client/message/AMQPEncodedListMessage.java,649,,"        throw new MessageFormatException(""Property at "" + index + "" of type """
222047,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/client/message/AMQPEncodedListMessage.java,649,,"        throw new MessageFormatException(""Property at "" + index + "" of type """
222048,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/client/message/JMSHeaderAdapter.java,93,,"                    throw new MessageFormatException(""getBoolean can't use "" + name + "" item."");"
222049,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/client/message/JMSMapMessage.java,111,,"            throw new MessageFormatException(""Property "" + propName + "" of type "" + value.getClass().getName()"
222050,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/client/message/JMSMapMessage.java,111,,"            throw new MessageFormatException(""Property "" + propName + "" of type "" + value.getClass().getName()"
222051,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/client/security/scram/AbstractScramSaslClient.java,157,,"                throw new SaslException(""Server challenge '"" + serverFirstMessage + ""' cannot be parsed"");"
222052,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/filter/ArithmeticExpression.java,56,,"                    throw new SelectorParsingException(""Cannot call plus operation on: "" + lvalue + "" and: "" + rvalue);"
222053,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/filter/selector/SelectorParser.java,85,,"    throw new Error(""Missing return statement in function"");"
222054,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/framing/AMQShortString.java,66,,"            throw new IllegalArgumentException(""Cannot create AMQShortString with number of octets over 255!"");"
222055,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/framing/AMQType.java,97,,"                throw new NumberFormatException(""Cannot convert: "" + value + ""("" + value.getClass().getName() + "") to int."");"
222056,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/jms/failover/FailoverExchangeMethod.java,161,,"        _logger.info(""============================================================"");"
222057,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/typedmessage/TypedBytesContentReader.java,92,,"                    throw new TypedBytesFormatException(""Unable to convert "" + wireType + "" to a boolean"");"
222058,./TargetProjects/qpid-jms-amqp-0-x/client/src/main/java/org/apache/qpid/util/CommandLineParser.java,136,,"                (nextOptionSpec.length > 3) ? (""true"".equals(nextOptionSpec[3]) ? true : false) : false,"
222059,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/AMQDestinationTest.java,171,,"        assertEquals(""Foo"", queue.getQueueName());"
222060,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/AMQSession_0_10Test.java,61,,"            fail(""JMSException should be thrown"");"
222061,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/AMQSession_0_10Test.java,65,,"            assertTrue(""JMSException is expected"", e instanceof JMSException);"
222062,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/AMQSession_0_10Test.java,66,,"            assertEquals(""541 error code is expected"", ""541"", ((JMSException) e).getErrorCode());"
222063,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/AMQSession_0_10Test.java,66,,"            assertEquals(""541 error code is expected"", ""541"", ((JMSException) e).getErrorCode());"
222064,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/AMQSession_0_10Test.java,185,,"            fail(""Unexpected exception is caught:"" + e.getMessage());"
222065,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/AMQSession_0_10Test.java,271,,"            session.sendQueueDelete(""test"");"
222066,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/handler/PooledConnectionFactoryTest.java,80,,"        _connectionFactory.setConnectionURLString(""amqp://user:pass@/?brokerlist='tcp://localhost:5672'"");"
222067,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/handler/PooledConnectionFactoryTest.java,321,,"                when(connection.createSession(anyBoolean(),anyInt())).thenThrow(new JMSException(""foo""));"
222068,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/message/AMQPEncodedListMessageUnitTest.java,66,,"        m.add(""Msg"");"
222069,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/security/CallbackHandlerRegistryTest.java,47,,"        props.put(""TESTA.1"", TestACallbackHandler.class.getName());"
222070,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/security/CallbackHandlerRegistryTest.java,52,,"        final CallbackHandler handler = _registry.createCallbackHandler(""TESTA"");"
222071,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/security/CallbackHandlerRegistryTest.java,78,,"        props.put(""TESTB.2"", TestBCallbackHandler.class.getName());"
222072,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/security/DynamicSaslRegistrarTest.java,70,,"        assertEquals(""Unexpected registration result"", ProviderRegistrationResult.SUCCEEDED, firstRegistrationResult);"
222073,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/security/DynamicSaslRegistrarTest.java,89,,"        assertNull(""Provider should not be registered"", DynamicSaslRegistrar.findProvider(JCAProvider.QPID_CLIENT_SASL_PROVIDER_NAME));"
222074,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/security/scram/AbstractScramSHAMechanismTestBase.java,78,,"            fail(""Exception not thrown"");"
222075,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/client/util/ClassLoadingAwareObjectInputStreamTest.java,68,,"        out.writeObject(""testString"");"
222076,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/codec/AMQDecoderTest.java,81,,"            fail(""decode was not a frame"");"
222077,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/filter/JMSSelectorFilterTest.java,83,,"        message.setIntProperty(""select"", 4);"
222078,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/AMQShortStringTest.java,53,,"            bytes = ""test"".getBytes(""UTF-8"");"
222079,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,44,,"        table1.setBoolean(""value"", true);"
222080,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,95,,"        Assert.assertEquals(null, table1.getBoolean(""Rubbish""));"
222081,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,403,,"        table1.setString(""value"", ""Hello"");"
222082,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,451,,"        innerTable.setBoolean(""bool"", true);"
222083,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,452,,"        innerTable.setByte(""byte"", Byte.MAX_VALUE);"
222084,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,453,,"        innerTable.setBytes(""bytes"", testBytes);"
222085,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,454,,"        innerTable.setChar(""char"", 'c');"
222086,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,455,,"        innerTable.setDouble(""double"", Double.MAX_VALUE);"
222087,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,456,,"        innerTable.setFloat(""float"", Float.MAX_VALUE);"
222088,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,457,,"        innerTable.setInteger(""int"", Integer.MAX_VALUE);"
222089,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,458,,"        innerTable.setLong(""long"", Long.MAX_VALUE);"
222090,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,459,,"        innerTable.setShort(""short"", Short.MAX_VALUE);"
222091,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,460,,"        innerTable.setString(""string"", ""hello"");"
222092,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,460,,"        innerTable.setString(""string"", ""hello"");"
222093,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,461,,"        innerTable.setString(""null-string"", null);"
222094,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,521,,"        table.setObject(""object-bool"", true);"
222095,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,522,,"        table.setObject(""object-byte"", Byte.MAX_VALUE);"
222096,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,523,,"        table.setObject(""object-bytes"", bytes);"
222097,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,524,,"        table.setObject(""object-char"", 'c');"
222098,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,525,,"        table.setObject(""object-double"", Double.MAX_VALUE);"
222099,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,526,,"        table.setObject(""object-float"", Float.MAX_VALUE);"
222100,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,527,,"        table.setObject(""object-int"", Integer.MAX_VALUE);"
222101,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,528,,"        table.setObject(""object-long"", Long.MAX_VALUE);"
222102,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,529,,"        table.setObject(""object-short"", Short.MAX_VALUE);"
222103,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/framing/FieldTableTest.java,737,,"            table.setObject((String) null, ""String"");"
222104,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/jms/FailoverPolicyTest.java,67,,"        assertTrue(""Unexpected failover method"", _failoverPolicy.getCurrentMethod() instanceof FailoverSingleServer);"
222105,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/jndi/ObjectFactoryTest.java,100,,"        assertTrue(""Unexpected object type : "" + factory , factory instanceof AMQConnectionFactory);"
222106,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/jndi/ObjectFactoryTest.java,122,,"        assertEquals(""Unexpected binding URL"", TEST_QUEUE_BINDING_URL, ((AMQQueue) queue).toURL());"
222107,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/jndi/ObjectFactoryTest.java,142,,"        assertTrue(""Unexpected address "" + ((AMQQueue) queue).getAddress(),"
222108,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/jndi/PropertiesFileInitialContextFactoryTest.java,83,,"        properties.put(""java.naming.factory.initial"", ""org.apache.qpid.jndi.PropertiesFileInitialContextFactory"");"
222109,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/ssl/TrustManagerTest.java,93,,"            peerManager.checkClientTrusted(this.getClientChain(TestSSLConstants.KEYSTORE, TestSSLConstants.CERT_ALIAS_APP1), ""RSA"");"
222110,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/ssl/TrustManagerTest.java,186,,"            fail(""Trusted client's validation against the broker's multi store manager failed."");"
222111,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/ssl/TrustManagerTest.java,205,,"            fail(""Untrusted client's validation against the broker's multi store manager unexpectedly passed."");"
222112,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/BrokerDetails/BrokerDetailsTest.java,33,,"        String brokerURL = ""tcp://localhost:5672"";"
222113,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/BrokerDetails/BrokerDetailsTest.java,133,,"        assertEquals(""Unexpected toString"", expectedToString, actualToString);"
222114,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/BrokerDetails/BrokerDetailsTest.java,272,,"        assertEquals(""foo"", connectionSettings.getEncryptionTrustStorePassword());"
222115,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/connectionurl/ConnectionURLTest.java,47,,"        assertTrue(connectionurl.getVirtualHost().equals(""/test""));"
222116,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/connectionurl/ConnectionURLTest.java,53,,"        assertTrue(service.getTransport().equals(""tcp""));"
222117,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/connectionurl/ConnectionURLTest.java,54,,"        assertTrue(service.getHost().equals(""localhost""));"
222118,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/connectionurl/ConnectionURLTest.java,130,,"        assertTrue(connectionurl.getUsername().equals(""guest""));"
222119,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/connectionurl/ConnectionURLTest.java,189,,"        assertTrue(connectionurl.getOption(""routingkey"").equals(""jim""));"
222120,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/connectionurl/ConnectionURLTest.java,265,,"        assertEquals(""Unexpected toString form"", expectedToString, actualToString);"
222121,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/connectionurl/ConnectionURLTest.java,293,,"        assertEquals(""Unexpected toString"", expectedToString, url.toString());"
222122,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/destinationurl/BindingURLTest.java,41,,"        assertEquals(""exchangeName"", burl.getExchangeName());"
222123,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/destinationurl/BindingURLTest.java,42,,"        assertEquals(""Destination"", burl.getDestinationName());"
222124,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/destinationurl/BindingURLTest.java,43,,"        assertEquals(""Queue"", burl.getQueueName());"
222125,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/destinationurl/BindingURLTest.java,55,,"        assertEquals(""exchangeClass"", burl.getExchangeClass());"
222126,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/destinationurl/BindingURLTest.java,264,,"            fail(""Exception not thrown"");"
222127,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/message/BytesMessageTest.java,45,,"            fail(""expected exception did not occur"");"
222128,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/message/BytesMessageTest.java,294,,"            fail(""expected MessageEOFException, got "" + e);"
222129,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/message/MapMessageTest.java,44,,"            mm.setBoolean(""value"", true);"
222130,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/message/MapMessageTest.java,50,,"            Assert.fail(""JMSException received."" + e);"
222131,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/message/MapMessageTest.java,226,,"            mm.getByte(""random"");"
222132,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/message/MapMessageTest.java,235,,"            Assert.fail(""JMSException received:"" + e);"
222133,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/message/StreamMessageTest.java,50,,"            fail(""expected exception did not occur"");"
222134,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/message/StreamMessageTest.java,273,,"            fail(""expected MessageEOFException, got "" + e);"
222135,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/message/TextMessageTest.java,61,,"            tm.setBooleanProperty(""value"", true);"
222136,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/message/TextMessageTest.java,67,,"            Assert.fail(""JMSException received."" + e);"
222137,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/message/TextMessageTest.java,191,,"            mm.getByteProperty(""random"");"
222138,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/client/message/TextMessageTest.java,200,,"            Assert.fail(""JMSException received:"" + e);"
222139,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/unit/message/NonQpidMessage.java,188,,"            throw new JMSException(""property does not exist: "" + string);"
222140,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/test/utils/TestSSLConstants.java,25,,"    String KEYSTORE_PASSWORD = ""password"";"
222141,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/ConnectionSettingsTest.java,56,,"    @SuppressWarnings(""deprecation"")"
222142,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/ConnectionTest.java,183,,"        conn.connect(""localhost"", port, null, ""guest"", ""guest"", false, null);"
222143,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/ConnectionTest.java,183,,"        conn.connect(""localhost"", port, null, ""guest"", ""guest"", false, null);"
222144,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/io/IdleTimeoutTickerTest.java,70,,"        assertEquals(""Incorrect next tick calculation"", 500l, nextTime);"
222145,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/io/IdleTimeoutTickerTest.java,71,,"        assertFalse(""Incorrectly caused reader idle"", _readerIdle);"
222146,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/io/IdleTimeoutTickerTest.java,72,,"        assertFalse(""Incorrectly caused writer idle"", _writerIdle);"
222147,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,56,,"        String[] enabled = {""TLS"", ""TLSv1.1"", ""TLSv1.2"", ""TLSv1.3""};"
222148,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,56,,"        String[] enabled = {""TLS"", ""TLSv1.1"", ""TLSv1.2"", ""TLSv1.3""};"
222149,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,56,,"        String[] enabled = {""TLS"", ""TLSv1.1"", ""TLSv1.2"", ""TLSv1.3""};"
222150,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,56,,"        String[] enabled = {""TLS"", ""TLSv1.1"", ""TLSv1.2"", ""TLSv1.3""};"
222151,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,60,,"        assertTrue(""unexpected filtered list: expected "" + Arrays.toString(expected) + "" actual "" + Arrays.toString("
222152,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,60,,"        assertTrue(""unexpected filtered list: expected "" + Arrays.toString(expected) + "" actual "" + Arrays.toString("
222153,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,147,,"                           Arrays.asList(""amqp.example.com""),"
222154,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,148,,"                           Arrays.asList(""amqp.example.net"", ""example.com"", ""*.example.com""));"
222155,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,148,,"                           Arrays.asList(""amqp.example.net"", ""example.com"", ""*.example.com""));"
222156,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,160,,"                           Arrays.asList(""amqp.example.net"", ""example.com"", ""foo.bar.example.com""));"
222157,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,164,,"                           Arrays.asList(""amqp.example.net"", ""example.com"", ""foo.bar.example.com"", ""foo.org""));"
222158,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,171,,"                           Arrays.asList(""amqp.example.org"", ""amqp1.example.org"", ""amqp2.example.org""),"
222159,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,171,,"                           Arrays.asList(""amqp.example.org"", ""amqp1.example.org"", ""amqp2.example.org""),"
222160,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,175,,"                           Arrays.asList(""amqp.example.org"", ""example.org""),"
222161,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,184,,"                           Arrays.asList(""example.org"", ""a.mqp.example.org""));"
222162,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,327,,"                                                                           +""EwJVUzEQMA4GA1UECBMHcHJpdmF0ZTERMA8GA1UEBxMIcHJvdmluY2UxDTALBgNVBAoTBGNpdHkx"""
222163,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/transport/network/security/ssl/SSLUtilTest.java,355,,"                                                                           +""VQQGEwJVUzEQMA4GA1UECBMHcHJpdmF0ZTERMA8GA1UEBxMIcHJvdmluY2UxDTALBgNVBAoTBGNp"""
222164,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/util/ByteBufferInputStreamTest.java,58,,"        assertEquals(""Unexpected length"", 2, length);"
222165,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/util/ByteBufferInputStreamTest.java,85,,"        assertEquals(""Unexpected number of available bytes"", _data.length, available);"
222166,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/util/CommandLineParserTest.java,87,,"                    { ""t1"", ""Test Flag 1."" },"
222167,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/util/CommandLineParserTest.java,88,,"                    { ""t2"", ""Test Option 2."", ""test"" },"
222168,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/util/CommandLineParserTest.java,88,,"                    { ""t2"", ""Test Option 2."", ""test"" },"
222169,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/util/CommandLineParserTest.java,89,,"                    { ""t3"", ""Test Option 3."", ""test"", ""true"" },"
222170,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/util/CommandLineParserTest.java,89,,"                    { ""t3"", ""Test Option 3."", ""test"", ""true"" },"
222171,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/util/CommandLineParserTest.java,90,,"                    { ""t4"", ""Test Option 4."", ""test"", null, ""^test$"" }"
222172,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/util/CommandLineParserTest.java,90,,"                    { ""t4"", ""Test Option 4."", ""test"", null, ""^test$"" }"
222173,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/util/CommandLineParserTest.java,286,,"                    { ""t"", ""Test Option."", ""test"", null, ""^test$"" }"
222174,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/util/CommandLineParserTest.java,318,,"        assertTrue(""The test option was not equal to \""test\"" but was: "" + testProps.get(""t""),"
222175,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/util/FileUtilsTest.java,84,,"            assertTrue(""Unable to cleanup"", FileUtils.deleteFile(fileNameCopy));"
222176,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/util/FileUtilsTest.java,284,,"        assertEquals(""File creation was no registered"", fileCountBefore + 1, fileCountCreated);"
222177,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/util/FileUtilsTest.java,420,,"        String directoryName = ""FileUtilsTest-testRecursiveDelete"";"
222178,./TargetProjects/qpid-jms-amqp-0-x/client/src/test/java/org/apache/qpid/util/FileUtilsTest.java,428,,"        assertTrue(""Directory exists"", !test.exists());"
222179,./TargetProjects/qpid-jms-amqp-0-x/systests/src/main/java/org/apache/qpid/systest/core/brokerj/AmqpManagementFacade.java,58,,"    @SuppressWarnings(""unused"")"
222180,./TargetProjects/qpid-jms-amqp-0-x/systests/src/main/java/org/apache/qpid/systest/core/brokerj/AmqpManagementFacade.java,80,,"        createMessage.setStringProperty(""type"", type);"
222181,./TargetProjects/qpid-jms-amqp-0-x/systests/src/main/java/org/apache/qpid/systest/core/brokerj/AmqpManagementFacade.java,81,,"        createMessage.setStringProperty(""operation"", ""CREATE"");"
222182,./TargetProjects/qpid-jms-amqp-0-x/systests/src/main/java/org/apache/qpid/systest/core/brokerj/AmqpManagementFacade.java,83,,"        createMessage.setString(""object-path"", name);"
222183,./TargetProjects/qpid-jms-amqp-0-x/systests/src/main/java/org/apache/qpid/systest/core/brokerj/AmqpManagementFacade.java,101,,"                int statusCode = response.getIntProperty(""statusCode"");"
222184,./TargetProjects/qpid-jms-amqp-0-x/systests/src/main/java/org/apache/qpid/systest/core/brokerj/AmqpManagementFacade.java,122,,"                            @SuppressWarnings(""unchecked"")"
222185,./TargetProjects/qpid-jms-amqp-0-x/systests/src/main/java/org/apache/qpid/systest/core/brokerj/AmqpManagementFacade.java,130,,"                    throw new OperationUnsuccessfulException(response.getStringProperty(""statusDescription""),"
222186,./TargetProjects/qpid-jms-amqp-0-x/systests/src/main/java/org/apache/qpid/systest/core/brokerj/AmqpManagementFacade.java,159,,"        createMessage.setStringProperty(""index"", ""object-path"");"
222187,./TargetProjects/qpid-jms-amqp-0-x/systests/src/main/java/org/apache/qpid/systest/core/brokerj/AmqpManagementFacade.java,160,,"        createMessage.setStringProperty(""key"", name);"
222188,./TargetProjects/qpid-jms-amqp-0-x/systests/src/main/java/org/apache/qpid/systest/core/brokerj/SpawnQpidBrokerAdmin.java,171,,"                logLevel = ""INFO"";"
222189,./TargetProjects/qpid-jms-amqp-0-x/systests/src/main/java/org/apache/qpid/systest/core/brokerj/SpawnQpidBrokerAdmin.java,308,,"        attributes.put(""name"", virtualHostNodeName);"
222190,./TargetProjects/qpid-jms-amqp-0-x/systests/src/main/java/org/apache/qpid/systest/core/brokerj/SpawnQpidBrokerAdmin.java,310,,"        attributes.put(""qpid-type"", nodeType);"
222191,./TargetProjects/qpid-jms-amqp-0-x/systests/src/main/java/org/apache/qpid/systest/core/dependency/ConsoleRepositoryListener.java,45,,"        _out.println(""Deployed "" + event.getArtifact() + "" to "" + event.getRepository());"
222192,./TargetProjects/qpid-jms-amqp-0-x/systests/src/main/java/org/apache/qpid/systest/core/dependency/ConsoleRepositoryListener.java,76,,"        _out.println(""Resolved artifact "" + event.getArtifact() + "" from "" + event.getRepository());"
222193,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/connection/ConnectionFactoryTest.java,107,,"            con2 = factory.createConnection(""admin"", ""admin"");"
222194,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/connection/FailoverBehaviourTest.java,716,,"        System.setProperty(""qpid.failover_method_timeout"", ""10000"");"
222195,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/connection/HeartbeatTest.java,73,,"            assertTrue(""Too few heartbeats received: ""+_listener.getHeartbeatsReceived() +"" (expected at least 2)"", _listener.getHeartbeatsReceived() >=2);"
222196,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/connection/HeartbeatTest.java,73,,"            assertTrue(""Too few heartbeats received: ""+_listener.getHeartbeatsReceived() +"" (expected at least 2)"", _listener.getHeartbeatsReceived() >=2);"
222197,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/connection/HeartbeatTest.java,74,,"            assertTrue(""Too few heartbeats sent ""+_listener.getHeartbeatsSent() +"" (expected at least 2)"", _listener.getHeartbeatsSent() >=2);"
222198,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/connection/TlsTest.java,225,,"                                                             ""org.apache.qpid.AmqpPort"","
222199,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/core/brokerj/SpawnQpidBrokerAdminTest.java,86,,"            spawnQpidBrokerAdmin.createVirtualHost(""test"");"
222200,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/destination/AddressBasedDestinationTest.java,129,,"        assertFalse(""Queue should not be created"", ("
222201,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/destination/AddressBasedDestinationTest.java,137,,"        assertTrue(""Queue not created as expected"", ("
222202,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/destination/AddressBasedDestinationTest.java,139,,"        assertTrue(""Queue not bound as expected"", ("
222203,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/destination/AddressBasedDestinationTest.java,237,,"                      ""node: "" +"
222204,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/destination/AddressBasedDestinationTest.java,240,,"                      ""x-declare: "" +"
222205,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/destination/AddressBasedDestinationTest.java,270,,"                (AMQSession) jmsSession).isQueueBound(""amq.direct"","
222206,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/destination/AddressBasedDestinationTest.java,271,,"                                                      dest.getAddressName(), ""test"", null));"
222207,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/destination/AddressBasedDestinationTest.java,596,,"        assumeThat(""Only supported by AMQP 0-10"", getProtocol(), is(equalTo(""0-10"")));"
222208,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/destination/AddressBasedDestinationTest.java,736,,"        producer.send(jmsSession.createTextMessage(""Hello""));"
222209,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/destination/AddressBasedDestinationTest.java,786,,"                                               ""my-queue"", ""my-queue"", null));"
222210,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/destination/AddressBasedDestinationTest.java,789,,"        assertNotNull(""consumer should receive a message"", cons.receive(getReceiveTimeout()));"
222211,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/destination/AddressBasedDestinationTest.java,902,,"                                               ""my-topic"", ""bus"", null));"
222212,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/destination/AddressBasedDestinationTest.java,968,,"        prod.send(ssn.createTextMessage(""Test1""));"
222213,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/destination/AddressBasedDestinationTest.java,1116,,"        Topic topic = new AMQAnyDestination(""ADDR:amq.topic/test"");"
222214,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/destination/AddressBasedDestinationTest.java,1199,,"        assertNotNull(""Message has not been received"", receivedMessage);"
222215,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/destination/AddressBasedDestinationTest.java,1200,,"        assertEquals(""Unexpected message"", messageToSend.getText(), ((TextMessage) receivedMessage).getText());"
222216,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/extension/encryption/MessageEncryptionTest.java,148,,"                message.setBooleanProperty(""x-qpid-encrypt"", true);"
222217,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/extension/encryption/MessageEncryptionTest.java,149,,"                message.setStringProperty(""x-qpid-encrypt-recipients"","
222218,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/extension/encryption/MessageEncryptionTest.java,150,,"                                          ""cn=app1@acme.org,ou=art,o=acme,l=toronto,st=on,c=ca"");"
222219,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/message/AMQPEncodedMapMessageTest.java,97,,"        assertNotNull(""Message was not received on time"",msg);"
222220,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/message/AMQPEncodedMapMessageTest.java,98,,"        assertEquals(""Message content-type is incorrect"","
222221,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/message/AMQPEncodedMapMessageTest.java,120,,"        m.setString(""String"", ""Hello"");"
222222,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/message/AMQPEncodedMapMessageTest.java,121,,"        m.setObject(""uuid"", myUUID);"
222223,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/message/AMQPEncodedMapMessageTest.java,164,,"        @SuppressWarnings(""unchecked"")"
222224,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/message/AMQPEncodedMapMessageTest.java,187,,"        m.setObject(""Map"", myMap);"
222225,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/message/JMSXUserIDTest.java,55,,"            assertEquals(""Unexpected user ID"", brokerAdmin.getValidUsername(), message.getStringProperty(""JMSXUserID""));"
222226,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/producer/ReturnUnroutableMandatoryMessageTest.java,118,,"                    TextMessage msg1 = producerSession.createTextMessage(""msg1"");"
222227,./TargetProjects/qpid-jms-amqp-0-x/systests/src/test/java/org/apache/qpid/systest/producer/ReturnUnroutableMandatoryMessageTest.java,123,,"                    TextMessage msg2 = producerSession.createTextMessage(""msg2"");"
222228,./TargetProjects/qpid-proton-j/proton-j/src/main/java/org/apache/qpid/proton/codec/DecoderImpl.java,81,,"    @SuppressWarnings(""rawtypes"")"
222229,./TargetProjects/qpid-proton-j/proton-j/src/main/java/org/apache/qpid/proton/codec/MapType.java,266,,"                    throw new DecodeException(""Unknown constructor"");"
222230,./TargetProjects/qpid-proton-j/proton-j/src/main/java/org/apache/qpid/proton/codec/impl/DataImpl.java,549,,"        throw new IllegalStateException(""Current value not array"");"
222231,./TargetProjects/qpid-proton-j/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/FrameParser.java,129,,"                            frameParsingError = new TransportException(""AMQP header mismatch value %x, expecting %x. In state: %s"", c, HEADER[0], state);"
222232,./TargetProjects/qpid-proton-j/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/SaslFrameParser.java,98,,"                            frameParsingError = new TransportException(""AMQP SASL header mismatch value %x, expecting %x. In state: %s"", c, SASL_HEADER[0], state);"
222233,./TargetProjects/qpid-proton-j/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SslEngineFacadeFactory.java,329,,"                throw new TransportException(""Unexpected exception creating SSLContext"", e);"
222234,./TargetProjects/qpid-proton-j/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SslEngineFacadeFactory.java,385,,"           throw new TransportException(""Unexpected exception creating keystore"", e);"
222235,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/amqp/BinaryTest.java,66,,"        assertFalse(""Objects should not be equal"", bin1.equals(bin2));"
222236,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/amqp/UnsignedLongTest.java,41,,"            fail(""Expected exception was not thrown"");"
222237,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/amqp/UnsignedLongTest.java,68,,"        assertEquals(""unexpected value"", 0, min.longValue());"
222238,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/ArrayTypeCodecTest.java,332,,"            assertEquals(""Unexpected source array length"", count, source.length);"
222239,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/ArrayTypeCodecTest.java,359,,"            assertFalse(""Should have filled expected encoding array"", expectedEncodingWrapper.hasRemaining());"
222240,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/ArrayTypeCodecTest.java,362,,"            assertEquals(""Unexpected buffer position"", 0, buffer.position());"
222241,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/ArrayTypeCodecTest.java,364,,"            assertEquals(""Unexpected encoded payload length"", expectedEncodedArraySize, buffer.position());"
222242,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/ArrayTypeCodecTest.java,369,,"            assertFalse(""Should have drained the encoder buffer contents"", buffer.hasRemaining());"
222243,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/ArrayTypeCodecTest.java,371,,"            assertArrayEquals(""Unexpected actual array encoding"", expectedEncoding, actualEncoding);"
222244,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/ArrayTypeCodecTest.java,381,,"            assertArrayEquals(""Unexpected decoding"", source, (byte[]) decoded);"
222245,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/ArrayTypeCodecTest.java,384,,"            System.err.println(""Error during test, source array: "" + Arrays.toString(source));"
222246,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/CompositeReadableBufferTest.java,148,,"            fail(""Should throw a IllegalArgumentException"");"
222247,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/CompositeReadableBufferTest.java,235,,"            fail(""Should throw InvalidMarkException"");"
222248,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/CompositeReadableBufferTest.java,303,,"            fail(""Should throw a BufferUnderflowException"");"
222249,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/CompositeReadableBufferTest.java,325,,"            fail(""Should not be able to read past end"");"
222250,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/CompositeReadableBufferTest.java,601,,"            fail(""Should throw NullPointerException"");"
222251,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/CompositeReadableBufferTest.java,718,,"            fail(""Should throw IndexOutOfBoundsException"");"
222252,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/CompositeReadableBufferTest.java,965,,"            fail(""Should throw UnsupportedOperationException"");"
222253,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/CompositeReadableBufferTest.java,1086,,"        assertEquals(""Unexpected get result"", 0, buffer.get());"
222254,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/CompositeReadableBufferTest.java,3148,,"            fail(""should throw IllegalArgumentException"");"
222255,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/CompositeReadableBufferTest.java,3357,,"        String expected = ""\u1f4a9\u1f4a9\u1f4a9"";"
222256,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/CompositeReadableBufferTest.java,3372,,"        assertEquals(""Failed to round trip String correctly: "", expected, result);"
222257,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/MapTypeCodecTest.java,133,,"        map.put(""unknown"", new MyUnknownTestType());"
222258,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/PropertiesCodecTest.java,65,,"        properties.setGroupId(""group-1"");"
222259,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/impl/DataImplTest.java,54,,"        assertEquals(""unexpected array length"", 2, data2.getArray());"
222260,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/impl/DataImplTest.java,103,,"        assertEquals(""unexpected encoding size"", expectedEncodedSize, encoded.getLength());"
222261,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/codec/impl/DataImplTest.java,111,,"        assertEquals(""unexpected encoding"", new Binary(expectedEncoding.array()), encoded);"
222262,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/EventDelegationTest.java,75,,"                                new ExecutionFlowTracer(""A.A.A""),"
222263,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/EventDelegationTest.java,76,,"                                new ExecutionFlowTracer(""A.A.B"")"
222264,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/EventDelegationTest.java,79,,"                                new ExecutionFlowTracer(""A.B"")"
222265,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/DeferredSettlementTest.java,167,,"            assertNotNull(""Should have had a delivery"", d);"
222266,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/DeliveryImplTest.java,62,,"        assertEquals(""Unexpected message format"", DeliveryImpl.DEFAULT_MESSAGE_FORMAT, delivery.getMessageFormat());"
222267,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/EventImplTest.java,47,,"        assertNotNull(""No transport returned"", event.getTransport());"
222268,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/EventImplTest.java,48,,"        assertSame(""Incorrect transport returned"", transport, event.getTransport());"
222269,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/SaslFrameParserTest.java,97,,"            fail(""expected exception"");"
222270,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/StringUtilsTest.java,33,,"        assertEquals(""unexpected result"", ""\""\"""", StringUtils.toQuotedString(null, 10, true));"
222271,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/StringUtilsTest.java,33,,"        assertEquals(""unexpected result"", ""\""\"""", StringUtils.toQuotedString(null, 10, true));"
222272,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,412,,"        assertEquals(""When the deadline hasn't been reached tick() should return the previous deadline"",  2000, deadline);"
222273,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,413,,"        assertEquals(""When the deadline hasn't been reached tick() shouldn't write data"", 0, transport.writes.size());"
222274,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,417,,"        assertEquals(""tick() should have written data"", 1, transport.writes.size());"
222275,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,418,,"        assertEquals(""tick() should have written an empty frame"", null, transport.writes.get(0));"
222276,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,466,,"        assertEquals(""Calling tick() after the deadline should result in the connection being closed"", EndpointState.CLOSED, connection.getLocalState());"
222277,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,486,,"        assertEquals(""Unexpected frames written: "" + getFrameTypesWritten(transport), 0, transport.writes.size());"
222278,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,494,,"        assertTrue(""Unexpected frame type"", transport.writes.get(0) instanceof Open);"
222279,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,532,,"            link = session.receiver(""myReceiver"");"
222280,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,536,,"            link = session.sender(""mySender"");"
222281,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,816,,"        sendMessage(sender, ""tag1"", ""content1"");"
222282,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,816,,"        sendMessage(sender, ""tag1"", ""content1"");"
222283,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,1106,,"        assertEquals(""Unexpected session window"", UnsignedInteger.valueOf(expectedWindowSize), sentBegin.getIncomingWindow());"
222284,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,1490,,"        assertNull(""Should not yet have a delivery"", delivery);"
222285,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,1516,,"        assertNotNull(""Should now have a delivery"", delivery);"
222286,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,1665,,"        assertTrue(""given array was too small"", len < BUFFER_SIZE);"
222287,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,1932,,"        assertEquals(""should have written data"", 1, transport.writes.size());"
222288,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,1934,,"        assertNotNull(""should have written a non-empty frame"", sentOpenFrame);"
222289,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,1935,,"        assertTrue(""should have written an open frame"", sentOpenFrame instanceof Open);"
222290,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,1950,,"        assertEquals(""Unexpected deadline returned"", 0, deadline);"
222291,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,2013,,"        assertEquals(""When the deadline has been reached expected a new local deadline to be returned"", expectedDeadline2, deadline);"
222292,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,2027,,"        assertEquals(""Connection should be active"", EndpointState.ACTIVE, connection.getLocalState());"
222293,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,2032,,"        assertTrue(""should have written a close frame"", transport.writes.get(1) instanceof Close);"
222294,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,2087,,"        assertEquals(""When the deadline has been reached expected a new remote deadline to be returned"", expectedDeadline2, deadline);"
222295,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,2200,,"            assertEquals(""tick() shouldn't have written data"", 3, transport.writes.size());"
222296,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,2284,,"            assertEquals(""Receiving data should have reset the deadline (to the remote one)"",  Long.MIN_VALUE + (3* remoteTimeoutHalf) - offset -1, deadline);"
222297,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,2722,,"        sendMessage(sender2, ""tag2"", messageContent2);"
222298,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,2800,,"        assertEquals(""Unexpected delivery tag"", new Binary(""tag1"".getBytes(StandardCharsets.UTF_8)), transfer.getDeliveryTag());"
222299,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,2801,,"        assertEquals(""Unexpected deliveryId"", UnsignedInteger.ZERO, transfer.getDeliveryId());"
222300,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,2802,,"        assertEquals(""Unexpected more flag"", true, transfer.getMore());"
222301,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,2856,,"        String linkName1 = ""myReceiver1"";"
222302,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,2877,,"        assertEquals(""Unexpected handle"", ((Attach) frame).getHandle(), r1handle);"
222303,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,2947,,"        assertEquals(""Unexpected queued count"", 1, receiver1.getQueued());"
222304,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,2964,,"        assertEquals(""Unexpected delivery id"", ((Disposition) frame).getFirst(), UnsignedInteger.ONE);"
222305,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,3479,,"        assertEquals(""Unexpected incoming bytes count"", 1, session.getIncomingBytes());"
222306,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,3484,,"        assertEquals(""Unexpected credit"", 3, receiver1.getCredit());"
222307,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,3575,,"        assertNotNull(""Expected a Condition"", populatedErrorCondition.getCondition());"
222308,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,3578,,"        assertNotNull(""Expected an ErrorCondition to be returned"", transport.getCondition());"
222309,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,3579,,"        assertEquals(""Unexpected ErrorCondition returned"", populatedErrorCondition, transport.getCondition());"
222310,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,3684,,"        assertEquals(""Unexpected condition"", origErrorCondition, ((Close) frameBody).getError());"
222311,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,3790,,"        assertTrue(""Unexpected transport capacity: "" + capacity, capacity > bytes.length);"
222312,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,3818,,"        doInvalidBeginProvokesDecodeErrorTestImpl(bytes, ""The outgoing-window field cannot be omitted"");"
222313,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,4306,,"        assertEquals(sasl ? ""SASL"" : ""AMQP"", headerRef.get());"
222314,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,4306,,"        assertEquals(sasl ? ""SASL"" : ""AMQP"", headerRef.get());"
222315,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/TransportImplTest.java,4680,,"        assertSame(""Unexpected event context"", receiver, recieverRemoteOpenEvent.getContext());"
222316,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/ssl/SimpleSslTransportWrapperTest.java,70,,"        String encodedBytes = ""<-A->"";"
222317,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/ssl/SimpleSslTransportWrapperTest.java,105,,"        assertEquals(""a_b_"", _underlyingInput.getAcceptedInput());"
222318,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/ssl/SimpleSslTransportWrapperTest.java,160,,"        assertEquals(""Unexpected max encoded chunk size"", encodedPacketSize, CapitalisingDummySslEngine.MAX_ENCODED_CHUNK_SIZE);"
222319,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/ssl/SimpleSslTransportWrapperTest.java,169,,"        assertEquals(""Unexpected number of bytes poured into the wrapper input buffer"", encodedPacketSize, numberPoured);"
222320,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/ssl/SimpleSslTransportWrapperTest.java,170,,"        assertEquals(""Unexpected position in encoded source byte buffer"", encodedPacketSize * 1, encodedByteSource.position());"
222321,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/ssl/SimpleSslTransportWrapperTest.java,171,,"        assertEquals(""Unexpected capacity"", 0, _sslWrapper.capacity());"
222322,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/ssl/SimpleSslTransportWrapperTest.java,278,,"        assertEquals(""Unexpected wrapper capacity"", 0, _sslWrapper.capacity());"
222323,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/engine/impl/ssl/SslDomainImplTest.java,63,,"        assertNotEquals(""Unexpected verification mode"", VerifyMode.VERIFY_PEER, clientSslDomain.getPeerAuthentication());"
222324,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/reactor/ReactorTest.java,169,,"        reactor.setConnectionHost(connection, ""127.0.0.1"", 5672);"
222325,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/reactor/impl/AddressTest.java,40,,"        testParse(""host"", null, null, null, ""host"", null, null);"
222326,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/reactor/impl/AddressTest.java,41,,"        testParse(""host:423"", null, null, null, ""host"", ""423"", null);"
222327,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/reactor/impl/AddressTest.java,42,,"        testParse(""user@host"", null, ""user"", null, ""host"", null, null);"
222328,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/reactor/impl/AddressTest.java,43,,"        testParse(""user:1243^&^:pw@host:423"", null, ""user"", ""1243^&^:pw"", ""host"", ""423"", null);"
222329,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/reactor/impl/AddressTest.java,44,,"        testParse(""user:1243^&^:pw@host:423/Foo.bar:90087"", null, ""user"", ""1243^&^:pw"", ""host"", ""423"", ""Foo.bar:90087"");"
222330,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/reactor/impl/AddressTest.java,46,,"        testParse(""[::1]"", null, null, null, ""::1"", null, null);"
222331,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/reactor/impl/AddressTest.java,47,,"        testParse(""[::1]:amqp"", null, null, null, ""::1"", ""amqp"", null);"
222332,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/systemtests/DeliveryTest.java,143,,"        sendMessageToClient(""delivery1"", ""Msg1"", null); // Don't set it, so it should be defaulted"
222333,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/systemtests/DeliveryTest.java,158,,"        assertEquals(""Unexpected message format"", 0, clientDelivery1.getMessageFormat());"
222334,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/systemtests/LinkTest.java,84,,"        LOGGER.fine(bold(""======== About to create transports""));"
222335,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/systemtests/LinkTest.java,90,,"        ProtocolTracerEnabler.setProtocolTracer(getServer().transport, ""            "" + TestLoggingHelper.SERVER_PREFIX);"
222336,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/systemtests/LinkTest.java,100,,"        LOGGER.fine(bold(""======== About to open connections""));"
222337,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/systemtests/LinkTest.java,106,,"        LOGGER.fine(bold(""======== About to open sessions""));"
222338,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/systemtests/LinkTest.java,129,,"        getClient().receiver = getClient().session.receiver(""link1"");"
222339,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/systemtests/LinkTest.java,147,,"        LOGGER.fine(bold(""======== About to set up implicitly created sender""));"
222340,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/systemtests/LinkTest.java,505,,"        assertEquals(""Expected value to be set"", CLIENT_MAX_MSG_SIZE, clientReceiver.getMaxMessageSize());"
222341,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/systemtests/SaslTest.java,124,,"        assertEquals(""Unexpected SASL outcome at client"", SaslOutcome.PN_SASL_NONE, clientSasl.getOutcome());"
222342,./TargetProjects/qpid-proton-j/proton-j/src/test/java/org/apache/qpid/proton/systemtests/engine/SslTest.java,81,,"            fail(""Expected an exception to be thrown"");"
222343,./TargetProjects/qpid-proton-j/tests/performance-jmh/src/main/java/org/apache/qpid/proton/codec/CompositeReadableBufferBenchmark.java,49,,"        ""0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789"""
222344,./TargetProjects/qpid-proton-j/tests/performance-jmh/src/main/java/org/apache/qpid/proton/message/StringsBenchmark.java,32,,"    private static final String PAYLOAD = ""0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789"""
222345,./TargetProjects/rampart/modules/rampart-core/src/main/java/org/apache/rampart/RampartMessageData.java,381,,"            throw new RampartException(""errorInExtractingMsgProps"", e);"
222346,./TargetProjects/rampart/modules/rampart-core/src/main/java/org/apache/rampart/builder/AsymmetricBindingBuilder.java,187,,"                    throw new RampartException(""errorInEncryption"", e);"
222347,./TargetProjects/rampart/modules/rampart-core/src/main/java/org/apache/rampart/builder/AsymmetricBindingBuilder.java,298,,"                        ""Element""));"
222348,./TargetProjects/rampart/modules/rampart-core/src/main/java/org/apache/rampart/builder/BindingBuilder.java,173,,"                    throw new RampartException(""errorInGettingPasswordForUser"", "
222349,./TargetProjects/rampart/modules/rampart-core/src/main/java/org/apache/rampart/builder/BindingBuilder.java,363,,"                        throw new RampartException(""errorInRetrievingTokenId"","
222350,./TargetProjects/rampart/modules/rampart-core/src/main/java/org/apache/rampart/builder/SymmetricBindingBuilder.java,200,,"                    throw new RampartException(""errorInDKEncr"");"
222351,./TargetProjects/rampart/modules/rampart-core/src/main/java/org/apache/rampart/builder/SymmetricBindingBuilder.java,344,,"                    secondEncrParts.add(new WSEncryptionPart(this.mainSigId, ""Element""));"
222352,./TargetProjects/rampart/modules/rampart-core/src/main/java/org/apache/rampart/builder/TransportBindingBuilder.java,203,,"                        ""Content"");"
222353,./TargetProjects/rampart/modules/rampart-core/src/main/java/org/apache/rampart/builder/TransportBindingBuilder.java,269,,"                throw new RampartException(""errorInDerivedKeyTokenSignature"", e);"
222354,./TargetProjects/rampart/modules/rampart-core/src/main/java/org/apache/rampart/handler/PostDispatchVerificationHandler.java,129,,"                throw new AxisFault(""InvalidSecurity"");"
222355,./TargetProjects/rampart/modules/rampart-core/src/main/java/org/apache/rampart/policy/model/RampartConfig.java,286,,"        throw new UnsupportedOperationException(""TODO"");"
222356,./TargetProjects/rampart/modules/rampart-core/src/main/java/org/apache/rampart/util/RampartUtil.java,1082,,"                            wsuId, namespace, ""Content"", expression));"
222357,./TargetProjects/rampart/modules/rampart-integration/src/main/java/org/apache/rampart/PWCallback.java,129,,"                    if(pc.getIdentifier().equals(""alice"") && pc.getPassword().equals(""password"")) {"
222358,./TargetProjects/rampart/modules/rampart-integration/src/test/java/org/apache/rampart/RampartKerberosTest.java,123,,"        OMElement method = fac.createOMElement(""echo"", omNs);"
222359,./TargetProjects/rampart/modules/rampart-policy/src/main/java/org/apache/ws/secpolicy/Constants.java,171,,"    public final static String P_SHA1 = ""http://schemas.xmlsoap.org/ws/2005/02/sc/dk/p_sha1"";"
222360,./TargetProjects/rampart/modules/rampart-policy/src/main/java/org/apache/ws/secpolicy/SPConstants.java,277,,"    public final static String P_SHA1 = ""http://schemas.xmlsoap.org/ws/2005/02/sc/dk/p_sha1"";"
222361,./TargetProjects/rampart/modules/rampart-samples/src/test/java/org/apache/rampart/samples/runner/SampleTest.java,39,,"        suite.addTest(new SampleTest(""policy"", ""01""));"
222362,./TargetProjects/rampart/modules/rampart-tests/src/test/java/org/apache/rahas/SimpleTokenStoreTest.java,37,,"            store.add(getTestToken(""id-1""));"
222363,./TargetProjects/rampart/modules/rampart-tests/src/test/java/org/apache/rahas/SimpleTokenStoreTest.java,163,,"        Token t = new Token(""#1232122"", elt11, new Date(), new Date());"
222364,./TargetProjects/rampart/modules/rampart-tests/src/test/java/org/apache/rampart/NonceCacheTest.java,36,,"        cache.addToCache(""j8EqKYJ/CxOZfN8CySMm0g=="", ""apache"");"
222365,./TargetProjects/rampart/modules/rampart-tests/src/test/java/org/apache/rampart/NonceCacheTest.java,36,,"        cache.addToCache(""j8EqKYJ/CxOZfN8CySMm0g=="", ""apache"");"
222366,./TargetProjects/rampart/modules/rampart-tests/src/test/java/org/apache/rampart/PolicyAssertionsTest.java,47,,"        env = (SOAPEnvelope) soapBuilder.processDocument(inStream, ""text/xml"", ctx);"
222367,./TargetProjects/rampart/modules/rampart-trust/src/main/java/org/apache/rahas/RahasConstants.java,101,,"    public static final String RST_ACTION_ISSUE = ""/RST"" + REQ_TYPE_ISSUE;"
222368,./TargetProjects/rampart/modules/rampart-trust/src/main/java/org/apache/rahas/RahasConstants.java,109,,"    public static final String RSTR_ACTION_ISSUE = ""/RSTR"" + REQ_TYPE_ISSUE;"
222369,./TargetProjects/rampart/modules/rampart-trust/src/main/java/org/apache/rahas/TokenRequestDispatcherConfig.java,93,,"                throw new TrustException(""missingClassName"");"
222370,./TargetProjects/rampart/modules/rampart-trust/src/main/java/org/apache/rahas/TokenRequestDispatcherConfig.java,280,,"                throw new TrustException(""cannotLoadClass"","
222371,./TargetProjects/rampart/modules/rampart-trust/src/main/java/org/apache/rahas/client/STSClient.java,126,,"            QName rstQn = new QName(""requestSecurityToken"");"
222372,./TargetProjects/rampart/modules/rampart-trust/src/main/java/org/apache/rahas/client/STSClient.java,141,,"            client.engageModule(""addressing"");"
222373,./TargetProjects/rampart/modules/rampart-trust/src/main/java/org/apache/rahas/client/STSClient.java,142,,"            client.engageModule(""rampart"");"
222374,./TargetProjects/rampart/modules/rampart-trust/src/main/java/org/apache/rahas/client/STSClient.java,247,,"            log.error(""errorInRenewingToken"", e);"
222375,./TargetProjects/rampart/modules/rampart-trust/src/main/java/org/apache/rahas/impl/util/SAML2Utils.java,117,,"                    WSSecurityException.FAILURE, ""Failure in unmarshelling the assertion"", null, e);"
222376,./TargetProjects/rampart/modules/rampart-trust/src/main/java/org/apache/rahas/impl/util/SAML2Utils.java,157,,"                            ""invalidSAML2Token"", new Object[]{""for Signature (no Subject)""});"
222377,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/destination/FileAuditDestination.java,182,,"						+ getName() + "", fileName="" + currentFileName);"
222378,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/provider/BaseAuditHandler.java,401,,"						""failed to log audit event: """
222379,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/provider/MiscUtil.java,672,,"					if (entry.getOptions().get(""principal"") != null) {"
222380,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/provider/MiscUtil.java,815,,"				options.put(""useKeyTab"", ""true"");"
222381,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/queue/AuditBatchQueue.java,292,,"							+ "", dest="" + consumer.getName());"
222382,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/queue/AuditFileCacheProviderSpool.java,148,,"                    + "", queueName="" + FILE_CACHE_PROVIDER_NAME);"
222383,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/queue/AuditFileCacheProviderSpool.java,300,,"                + FILE_CACHE_PROVIDER_NAME + "", consumer="""
222384,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/queue/AuditFileCacheProviderSpool.java,502,,"                    + FILE_CACHE_PROVIDER_NAME + "", fileName="" + fileName);"
222385,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/queue/AuditFileCacheProviderSpool.java,505,,"                    outLogFile),""UTF-8"")));"
222386,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/queue/AuditFileQueueSpool.java,162,,"                    + "", queueName="" + FILE_QUEUE_PROVIDER_NAME);"
222387,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/queue/AuditFileQueueSpool.java,319,,"                + FILE_QUEUE_PROVIDER_NAME + "", consumer="""
222388,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/queue/AuditFileQueueSpool.java,521,,"                    + FILE_QUEUE_PROVIDER_NAME + "", fileName="" + fileName);"
222389,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/queue/AuditFileQueueSpool.java,524,,"                    outLogFile),""UTF-8"")));"
222390,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/queue/AuditFileSpool.java,159,,"					+ "", queueName="" + queueProvider.getName());"
222391,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/queue/AuditFileSpool.java,304,,"				+ queueProvider.getName() + "", consumer="""
222392,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/queue/AuditFileSpool.java,499,,"					+ queueProvider.getName() + "", fileName="" + fileName);"
222393,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/utils/ORCFileUtil.java,157,,"            logger.error(""Error while writing into ORC File:"", e);"
222394,./TargetProjects/ranger/agents-audit/src/main/java/org/apache/ranger/audit/utils/ORCFileUtil.java,257,,"            case ""string"":"
222395,./TargetProjects/ranger/agents-common/src/main/java/org/apache/hadoop/security/SecureClientLogin.java,166,,"		kerberosOptions.put(""debug"", ""false"");"
222396,./TargetProjects/ranger/agents-common/src/main/java/org/apache/hadoop/security/SecureClientLogin.java,168,,"			kerberosOptions.put(""useKeyTab"", ""true"");"
222397,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/admin/client/RangerAdminRESTClient.java,151,,"						LOG.error(""Failed to get response, Error is : ""+e.getMessage());"
222398,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/admin/client/RangerAdminRESTClient.java,167,,"				LOG.error(""Error getting policies; Received NULL response!!. secureMode="" + isSecureMode + "", user="" + user + "", serviceName="" + serviceName);"
222399,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/admin/client/RangerAdminRESTClient.java,167,,"				LOG.error(""Error getting policies; Received NULL response!!. secureMode="" + isSecureMode + "", user="" + user + "", serviceName="" + serviceName);"
222400,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/admin/client/RangerAdminRESTClient.java,171,,"					LOG.debug(""No change in policies. secureMode="" + isSecureMode + "", user="" + user + "", response="" + resp + "", serviceName="" + serviceName);"
222401,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/admin/client/RangerAdminRESTClient.java,181,,"					+ "", "" + ""lastActivationTimeInMillis="" + lastActivationTimeInMillis);"
222402,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/admin/client/RangerAdminRESTClient.java,187,,"			LOG.warn(""Received 404 error code with body:["" + exceptionMsg + ""], Ignoring"");"
222403,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/admin/client/RangerAdminRESTClient.java,187,,"			LOG.warn(""Received 404 error code with body:["" + exceptionMsg + ""], Ignoring"");"
222404,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/admin/client/RangerAdminRESTClient.java,195,,"			LOG.debug(""<== RangerAdminRESTClient.getServicePoliciesIfUpdated("" + lastKnownVersion + "", "" + lastActivationTimeInMillis + ""): "" + ret);"
222405,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/admin/client/RangerAdminRESTClient.java,321,,"			LOG.error(""createRole() failed: HTTP status="" + response.getStatus() + "", message="" + resp.getMessage() + "", isSecure="" + isSecureMode + (isSecureMode ? ("", user="" + user) : """"));"
222406,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/admin/client/RangerAdminRESTClient.java,321,,"			LOG.error(""createRole() failed: HTTP status="" + response.getStatus() + "", message="" + resp.getMessage() + "", isSecure="" + isSecureMode + (isSecureMode ? ("", user="" + user) : """"));"
222407,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/admin/client/RangerAdminRESTClient.java,327,,"			throw new Exception(""HTTP "" + response.getStatus() + "" Error: "" + resp.getMessage());"
222408,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/admin/client/RangerAdminRESTClient.java,327,,"			throw new Exception(""HTTP "" + response.getStatus() + "" Error: "" + resp.getMessage());"
222409,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/authorization/hadoop/config/RangerPluginConfig.java,231,,"        String auditCfg    = ""ranger-"" + serviceType + ""-audit.xml"";"
222410,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/client/HadoopConfigHolder.java,393,,"			LOG.debug(""==> HadoopConfigHolder.getHadoopSecurityAuthentication( "" + "" DataSource : "" + sectionName + "" Property : "" +  HADOOP_SECURITY_AUTHENTICATION + "")"" );"
222411,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/client/HadoopConfigHolder.java,393,,"			LOG.debug(""==> HadoopConfigHolder.getHadoopSecurityAuthentication( "" + "" DataSource : "" + sectionName + "" Property : "" +  HADOOP_SECURITY_AUTHENTICATION + "")"" );"
222412,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/conditionevaluator/RangerIpMatcher.java,100,,"			LOG.debug(""<== RangerIpMatcher.isMatched("" + request+ ""): "" + ipMatched);"
222413,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/contextenricher/RangerAbstractGeolocationProvider.java,71,,"				LOG.error(""RangerAbstractGeolocationProvider.init() - Class "" + geoSourceLoader + "" not found, exception="" + exception);"
222414,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/contextenricher/RangerTagEnricher.java,120,,"				LOG.error(""Class "" + tagRetrieverClassName + "" not found, exception="" + exception);"
222415,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/contextenricher/RangerTagEnricher.java,921,,"			setName(""RangerTagRefresher(serviceName="" + tagRetriever.getServiceName() + "")-"" + getId());"
222416,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/contextenricher/RangerTagEnricher.java,946,,"						perf = RangerPerfTracer.getPerfTracer(PERF_CONTEXTENRICHER_INIT_LOG, ""RangerTagRefresher("" + getName() + "").populateTags(lastKnownVersion="" + lastKnownVersion + "")"");"
222417,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/contextenricher/RangerUserStoreEnricher.java,75,,"                LOG.error(""Class "" + userStoreRetrieverClassName + "" not found, exception="" + exception);"
222418,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/contextenricher/RangerUserStoreRefresher.java,410,,"                LOG.error(""Error getting UserStore; Received NULL response!!. secureMode="" + isSecureMode + "", user="" + user);"
222419,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/errors/ValidationErrorCode.java,31,,"    SERVICE_VALIDATION_ERR_MISSING_FIELD(1002, ""Internal error: missing field[{0}]""),"
222420,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/model/RangerServiceDef.java,444,,"		sb.append(""name={"").append(name).append(""} "");"
222421,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/model/RangerServiceDef.java,447,,"		sb.append(""label={"").append(label).append(""} "");"
222422,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/model/RangerServiceDef.java,448,,"		sb.append(""description={"").append(description).append(""} "");"
222423,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/model/RangerServiceDef.java,449,,"		sb.append(""rbKeyLabel={"").append(rbKeyLabel).append(""} "");"
222424,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/model/RangerServiceDef.java,450,,"		sb.append(""rbKeyDescription={"").append(rbKeyDescription).append(""} "");"
222425,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/model/RangerServiceDef.java,641,,"			sb.append(""itemId={"").append(itemId).append(""} "");"
222426,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/model/validation/RangerPolicyValidator.java,75,,"			LOG.debug(String.format(""==> RangerPolicyValidator.isValid(%s, %s, %s)"", id, action, failures));"
222427,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/model/validation/RangerPolicyValidator.java,180,,"						.field(""service name"")"
222428,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/model/validation/RangerSecurityZoneValidator.java,99,,"                failures.add(new ValidationFailureDetailsBuilder().becauseOf(""security zone name was null/missing"").field(""name"").isMissing().errorCode(error.getErrorCode()).becauseOf(error.getMessage(""name"")).build());"
222429,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/model/validation/RangerServiceDefValidator.java,307,,"				.field(""access types"")"
222430,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/model/validation/RangerServiceDefValidator.java,336,,"						failures.add((new ValidationFailureDetailsBuilder()).field(""access type name"").isSemanticallyIncorrect().errorCode(error.getErrorCode()).becauseOf(String.format(""changing %s[%s] in %s is not supported"", ""access type name"", name, ""access types"")).build());"
222431,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/model/validation/RangerServiceDefValidator.java,561,,"					.field(""resources"")"
222432,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/model/validation/RangerValidator.java,86,,"				LOG.debug(""<== RangerValidator.validate("" + id + ""): valid"");"
222433,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/model/validation/RangerValidator.java,189,,"			LOG.debug(""<== RangerValidator.getRequiredParameters("" + serviceDef + ""): "" + result);"
222434,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyEngineImpl.java,115,,"			LOG.debug(""==> RangerPolicyEngineImpl.evaluatePolicies("" + request + "", policyType="" + policyType + "")"");"
222435,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyEngineImpl.java,133,,"					LOG.debug(""Acquired lock - "" + readLock);"
222436,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyEngineImpl.java,159,,"			LOG.debug(""<== RangerPolicyEngineImpl.evaluatePolicies("" + request + "", policyType="" + policyType + ""): "" + ret);"
222437,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyEngineImpl.java,586,,"			LOG.debug(""==> RangerPolicyEngineImpl.zoneAwareAccessEvaluationWithNoAudit("" + request + "", policyType ="" + policyType + "")"");"
222438,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyEngineImpl.java,661,,"			LOG.debug(""==> RangerPolicyEngineImpl.evaluatePoliciesNoAudit("" + request + "", policyType ="" + policyType + "", zoneName="" + zoneName + "")"");"
222439,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyEngineImpl.java,730,,"					LOG.debug(""RangerPolicyEngineImpl.evaluatePoliciesNoAudit() - audit determined and access denied by a tag policy. Higher priority resource policies will be evaluated to check for allow, request="" + request + "", result="" + ret);"
222440,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyEngineImpl.java,826,,"							LOG.debug(""Tag policy [zone:"" + policyZoneName + ""] does not belong to default zone. Not evaluating this policy:["" + evaluator.getPolicy() + ""]"");"
222441,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyEngineOptions.java,60,,"		disableContextEnrichers = conf.getBoolean(propertyPrefix + "".policyengine.option.disable.context.enrichers"", false);"
222442,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyEngineOptions.java,61,,"		disableCustomConditions = conf.getBoolean(propertyPrefix + "".policyengine.option.disable.custom.conditions"", false);"
222443,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyEngineOptions.java,62,,"		disableTagPolicyEvaluation = conf.getBoolean(propertyPrefix + "".policyengine.option.disable.tagpolicy.evaluation"", false);"
222444,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyEngineOptions.java,63,,"		disableTrieLookupPrefilter = conf.getBoolean(propertyPrefix + "".policyengine.option.disable.trie.lookup.prefilter"", false);"
222445,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyEngineOptions.java,64,,"		disablePolicyRefresher = conf.getBoolean(propertyPrefix + "".policyengine.option.disable.policy.refresher"", false);"
222446,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyEngineOptions.java,65,,"		disableTagRetriever = conf.getBoolean(propertyPrefix + "".policyengine.option.disable.tag.retriever"", false);"
222447,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyEngineOptions.java,75,,"		optimizeTrieForRetrieval = conf.getBoolean(propertyPrefix + "".policyengine.option.optimize.trie.for.retrieval"", false);"
222448,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyRepository.java,966,,"            LOG.debug(""policy evaluation order: "" + this.policyEvaluators.size() + "" policies"");"
222449,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyRepository.java,972,,"                LOG.debug(""policy evaluation order: #"" + (++order) + "" - policy id="" + policy.getId() + ""; name="" + policy.getName() + ""; evalOrder="" + policyEvaluator.getEvalOrder());"
222450,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyRepository.java,972,,"                LOG.debug(""policy evaluation order: #"" + (++order) + "" - policy id="" + policy.getId() + ""; name="" + policy.getName() + ""; evalOrder="" + policyEvaluator.getEvalOrder());"
222451,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyRepository.java,972,,"                LOG.debug(""policy evaluation order: #"" + (++order) + "" - policy id="" + policy.getId() + ""; name="" + policy.getName() + ""; evalOrder="" + policyEvaluator.getEvalOrder());"
222452,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerPolicyRepository.java,1090,,"            LOG.debug(""<== RangerPolicyRepository.buildContextEnricher("" + enricherDef + ""): "" + ret);"
222453,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerResourceTrie.java,96,,"            TRACE_LOG.trace(""Trie Dump from RangerResourceTrie.copyTrie(name="" + other.resourceDef.getName() + ""):\n{"" + sb.toString() + ""}"");"
222454,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyengine/RangerResourceTrie.java,102,,"            LOG.debug(""==> RangerResourceTrie("" + resourceDef.getName() + "", evaluatorCount="" + evaluators.size() + "", isOptimizedForRetrieval="" + isOptimizedForRetrieval + "")"");"
222455,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyevaluator/RangerAuditPolicyEvaluator.java,232,,"                LOG.debug(""RangerAuditPolicyItemEvaluator.isMatch("" + request + "", "" + result + ""): ret="" + ret);"
222456,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyevaluator/RangerDefaultPolicyEvaluator.java,306,,"			LOG.debug(""<== RangerDefaultPolicyEvaluator.isMatch("" + resource + "", "" + evalContext + ""): "" + ret);"
222457,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyevaluator/RangerDefaultPolicyItemEvaluator.java,119,,"			LOG.debug(""<== RangerDefaultPolicyItemEvaluator.isMatch("" + request + ""): "" + ret);"
222458,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyevaluator/RangerValidityScheduleEvaluator.java,385,,"                            LOG.debug(""Need to borrow from previous month, initialDayOfMonth:["" + initialDayOfMonth + ""], previousDayOfMonth:["" + previousDayOfMonth + ""], dayOfMonthCalc:["" + dayOfMonthCalc.getTime() + ""]"");"
222459,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/policyresourcematcher/RangerDefaultPolicyResourceMatcher.java,307,,"            LOG.debug(""<== RangerDefaultPolicyResourceMatcher.isCompleteMatch("" + resource + "", "" + evalContext + ""): "" + ret);"
222460,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/resourcematcher/RangerPathResourceMatcher.java,287,,"				LOG.debug(""==> StringResourceMatcher.isMatch(resourceValue="" + resourceValue + "", evalContext="" + evalContext + "")"");"
222461,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/resourcematcher/RangerPathResourceMatcher.java,305,,"				LOG.debug(""<== StringResourceMatcher.isMatch(resourceValue="" + resourceValue + "", expandedValue="" + expandedValue + "") : result:["" + ret + ""]"");"
222462,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/store/AbstractServiceStore.java,290,,"			LOG.error(""AbstractServiceStore.updateTagServiceDefForUpdatingAccessTypes"" + serviceDef.getName() + ""): could not find TAG ServiceDef.. "", e);"
222463,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/store/TagValidator.java,242,,"			throw new Exception(""Attempt to create existing association between resourceId="" + resourceGuid + "" and tagId="" + tagGuid);"
222464,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/util/PerfDataRecorder.java,90,,"                             "", totalTimeTaken: "" + perfStatistic.microSecondsSpent.get() + "" μs"" +"
222465,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/util/PolicyRefresher.java,66,,"			LOG.debug(""==> PolicyRefresher(serviceName="" + plugIn.getServiceName() + "").PolicyRefresher()"");"
222466,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/util/PolicyRefresher.java,97,,"		setName(""PolicyRefresher(serviceName="" + serviceName + "")-"" + getId());"
222467,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/util/PolicyRefresher.java,100,,"			LOG.debug(""<== PolicyRefresher(serviceName="" + serviceName + "").PolicyRefresher()"");"
222468,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/util/RangerRESTClient.java,317,,"				throw new IllegalStateException(""Unable to find keystore file :"" + keyStoreFile + "", error :"" + e.getMessage(), e);"
222469,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/util/RangerRESTClient.java,468,,"				LOG.warn(""Failed to communicate with Ranger Admin, URL : "" + configuredURLs.get(currentIndex));"
222470,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/util/RangerRolesProvider.java,62,,"			LOG.debug(""==> RangerRolesProvider(serviceName="" + serviceName + "").RangerRolesProvider()"");"
222471,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/util/RangerRolesProvider.java,94,,"			LOG.debug(""<== RangerRolesProvider(serviceName="" + serviceName + "").RangerRolesProvider()"");"
222472,./TargetProjects/ranger/agents-common/src/main/java/org/apache/ranger/plugin/util/RangerRolesProvider.java,190,,"				LOG.info(""RangerRolesProvider(serviceName="" + serviceName + ""): found updated version. lastKnownRoleVersion="" + lastKnownRoleVersion + ""; newVersion="" + newVersion );"
222473,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/conditionevaluator/RangerCustomConditionMatcherTest.java,55,,"		RangerAccessRequest request = createRequest(Arrays.asList(""PCI"", ""PII""));"
222474,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/conditionevaluator/RangerCustomConditionMatcherTest.java,55,,"		RangerAccessRequest request = createRequest(Arrays.asList(""PCI"", ""PII""));"
222475,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/conditionevaluator/RangerCustomConditionMatcherTest.java,94,,"		List<String> resourceTags = Arrays.asList(""PCI"", ""PHI"");"
222476,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/conditionevaluator/RangerCustomConditionMatcherTest.java,96,,"		resourceTags = Arrays.asList(""PHI"", ""PII"" ,""HIPPA"");"
222477,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/conditionevaluator/RangerIpMatcherTest.java,78,,"		Assert.assertTrue(matcher.isWildcardMatched(ips, ""1.2.3.4""));"
222478,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/conditionevaluator/RangerIpMatcherTest.java,208,,"		ipMatcher = createMatcher(new String[]{""99:a9:b9:c9:d9:e9""} );"
222479,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/conditionevaluator/RangerTimeOfDayMatcherTest.java,51,,"				""11am-12pm"", ""11pm-12am"", ""12am-12pm"", ""12pm-12am"""
222480,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/conditionevaluator/RangerTimeOfDayMatcherTest.java,51,,"				""11am-12pm"", ""11pm-12am"", ""12am-12pm"", ""12pm-12am"""
222481,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/TestRangerPolicyResourceSignature.java,115,,"			{ ""table"", new String[] { ""tbl3"", ""tbl1"", ""tbl2""}, true,  false},"
222482,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/TestRangerPolicyResourceSignature.java,115,,"			{ ""table"", new String[] { ""tbl3"", ""tbl1"", ""tbl2""}, true,  false},"
222483,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/TestRangerPolicyResourceSignature.java,115,,"			{ ""table"", new String[] { ""tbl3"", ""tbl1"", ""tbl2""}, true,  false},"
222484,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/TestRangerPolicyResourceSignature.java,115,,"			{ ""table"", new String[] { ""tbl3"", ""tbl1"", ""tbl2""}, true,  false},"
222485,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/TestRangerPolicyResourceSignature.java,116,,"			{ ""db"",    new String[] { ""db1"", ""db2""},           false, null},"
222486,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/TestRangerPolicyResourceSignature.java,116,,"			{ ""db"",    new String[] { ""db1"", ""db2""},           false, null},"
222487,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/TestRangerPolicyResourceSignature.java,117,,"			{ ""col"",   new String[] { ""col2"", ""col1"", ""col3""}, null,  true},"
222488,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/TestRangerPolicyResourceSignature.java,117,,"			{ ""col"",   new String[] { ""col2"", ""col1"", ""col3""}, null,  true},"
222489,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/TestRangerPolicyResourceSignature.java,117,,"			{ ""col"",   new String[] { ""col2"", ""col1"", ""col3""}, null,  true},"
222490,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/TestRangerPolicyResourceSignature.java,117,,"			{ ""col"",   new String[] { ""col2"", ""col1"", ""col3""}, null,  true},"
222491,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/RangerSecurityZoneValidatorTest.java,66,,"		Mockito.when(_store.getSecurityZone(""MyZone"")).thenReturn(null);"
222492,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/RangerSecurityZoneValidatorTest.java,67,,"		Mockito.when(_store.getServiceByName(""hdfsSvc"")).thenReturn(rangerSvc);"
222493,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,91,,"				""accesses"", new String[] { ""r"", ""w"" },"
222494,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,92,,"				""isAllowed"", new Boolean[] { true, true }),"
222495,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,112,,"			{ ""tbl"", true,              true,               true,      null,          ""db"" },       // regex == null => anything goes; excludes == true, recursive == true"
222496,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,113,,"			{ ""col"", false,             true,               false,     ""col\\d{1,2}"", ""tbl"" },      // valid: col1, col47, etc.; invalid: col, col238, col1, etc., excludes == false, recursive == true"
222497,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,126,,"			{ ""db"", new String[] { ""db1"", ""db2"" }, null, null },"
222498,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,126,,"			{ ""db"", new String[] { ""db1"", ""db2"" }, null, null },"
222499,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,195,,"		when(existingPolicy.getService()).thenReturn(""service-name"");"
222500,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,198,,"		when(service.getType()).thenReturn(""service-type"");"
222501,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,204,,"		when(service2.getName()).thenReturn(""service-name2"");"
222502,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,255,,"						when(_policy.getName()).thenReturn(""policy-name-1"");"
222503,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,303,,"		when(policySignature.getSignature()).thenReturn(""hash-1"");"
222504,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,329,,"			case ""missing"":"
222505,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,332,,"			case ""semantic"":"
222506,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,370,,"		when(_policy.getName()).thenReturn(""policy-name"");"
222507,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,405,,"				_utils.checkFailureForMissingValue(_failures, ""service name"");"
222508,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,496,,"				_utils.checkFailureForSemanticError(_failures, ""isExcludes"", ""col""); // for specifying it as true when def did not allow it"
222509,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,505,,"				_utils.checkFailureForSemanticError(_failures, ""policy resources"");"
222510,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,679,,"		Assert.assertTrue(_validator.isValidResourceFlags(resourceMap, _failures, resourceDefs, ""a-service-def"", ""a-policy"", true));"
222511,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,813,,"		when(_policy.getName()).thenReturn(""my-all"");"
222512,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,814,,"		when(_policy.getService()).thenReturn(""hdfssvc"");"
222513,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerPolicyValidator.java,815,,"		when(_policy.getZoneName()).thenReturn(""zone1"");"
222514,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefHelper.java,71,,"		RangerResourceDef Database = createResourceDef(""Database"", """");"
222515,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefHelper.java,73,,"		RangerResourceDef Table = createResourceDef(""Table"", ""Database"");"
222516,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefHelper.java,129,,"		RangerResourceDef database = createResourceDef(""database"", """");"
222517,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefHelper.java,133,,"		RangerResourceDef namespace = createResourceDef(""namespace"", """");"
222518,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefHelper.java,134,,"		RangerResourceDef function = createResourceDef(""function"", ""namespace"", true);"
222519,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefHelper.java,135,,"		RangerResourceDef Package = createResourceDef(""package"", ""namespace"", true);"
222520,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,57,,"			{ 1L, ""read"",  null },                                // ok, null implied grants"
222521,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,58,,"			{ 2L, ""write"", new String[] {   } },                  // ok, empty implied grants"
222522,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,59,,"			{ 3L, ""admin"", new String[] { ""READ"",  ""write"" } }    // ok, admin access implies read/write, access types are case-insensitive"
222523,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,63,,"			{ 1L, ""authentication-type"", new String[] { ""simple"", ""kerberos"" } },"
222524,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,63,,"			{ 1L, ""authentication-type"", new String[] { ""simple"", ""kerberos"" } },"
222525,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,63,,"			{ 1L, ""authentication-type"", new String[] { ""simple"", ""kerberos"" } },"
222526,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,64,,"			{ 2L, ""time-unit"", new String[] { ""day"", ""hour"", ""minute"" } },"
222527,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,64,,"			{ 2L, ""time-unit"", new String[] { ""day"", ""hour"", ""minute"" } },"
222528,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,64,,"			{ 2L, ""time-unit"", new String[] { ""day"", ""hour"", ""minute"" } },"
222529,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,64,,"			{ 2L, ""time-unit"", new String[] { ""day"", ""hour"", ""minute"" } },"
222530,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,203,,"			{ 3L, ""admin"", new String[] { ""ReaD"",  ""execute"" } }  // non-existent access type (execute), read is good (case should not matter)"
222531,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,279,,"			{ 2L, ""anEnum"", new String[] { } }, // enum elements collection is empty"
222532,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,307,,"		_utils.checkFailureForMissingValue(_failures, ""enum def name"");"
222533,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,374,,"		_utils.checkFailureForMissingValue(_failures, ""enum element name"", ""anEnum"");"
222534,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,394,,"			{ 1L,      10,    ""table"" }, // id is duplicate"
222535,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,438,,"				{ ""column-family"", null, null, null, null, ""table"",         null }, // level is null!"
222536,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,439,,"				{ ""column"",        null, null, null, null, ""column-family"", 20 },   // level is duplicate for [db->table->column-family-> column] hierarchy"
222537,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,440,,"				{ ""udf"",           null, null, null, null, ""db"",            10 },   // udf's id conflicts with that of db in the [db->udf] hierarchy"
222538,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,449,,"		_utils.checkFailureForMissingValue(_failures, ""resource level"");"
222539,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,542,,"				{ 1L, ""security"", ""blah"" }, // bad type for service def"
222540,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceDefValidator.java,576,,"				{ 1L, ""condition-1"", null }, // missing evaluator"
222541,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceValidator.java,61,,"		case ""missing"":"
222542,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceValidator.java,64,,"		case ""semantic"":"
222543,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceValidator.java,84,,"		rangerService.setType(""yarn"");"
222544,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceValidator.java,94,,"		configDef.setName(""myconfig1"");"
222545,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceValidator.java,187,,"		Assert.assertEquals(""name"",failureMessage.getFieldName());"
222546,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceValidator.java,441,,"		when(service.getName()).thenReturn(""aName"");"
222547,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceValidator.java,452,,"		when(service.getType()).thenReturn(""aType"");"
222548,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceValidator.java,477,,"				{ ""param1"", true },"
222549,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceValidator.java,478,,"				{ ""param2"", true },"
222550,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerServiceValidator.java,479,,"				{ ""param3"", false },"
222551,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerValidator.java,155,,"			when(_store.getServiceDefByName(""return null"")).thenReturn(null);"
222552,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerValidator.java,156,,"			when(_store.getServiceDefByName(""throw"")).thenThrow(new Exception());"
222553,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/model/validation/TestRangerValidator.java,158,,"			when(_store.getServiceDefByName(""good-service"")).thenReturn(serviceDef);"
222554,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/policyengine/TestPolicyEngine.java,156,,"				""        <property>\n"" +"
222555,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/policyengine/TestPolicyEngine.java,159,,"				""        </property>\n"" +"
222556,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/policyengine/TestPolicyEngine.java,667,,"				assertNotNull(""result was null! - "" + test.name, result);"
222557,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/policyengine/TestPolicyEngine.java,692,,"                assertEquals(""policyId mismatched! - "" + test.name, expected.getPolicyId(), result.getPolicyId());"
222558,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/policyengine/TestPolicyEngineComparison.java,90,,"        assertTrue(""invalid input: "" + testName, testCases != null && testCases.testCases != null);"
222559,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/policyengine/TestPolicyEngineForDeltas.java,145,,"				""        <property>\n"" +"
222560,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/policyengine/TestPolicyEngineForDeltas.java,148,,"				""        </property>\n"" +"
222561,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/policyengine/TestPolicyEngineForDeltas.java,406,,"				assertNotNull(""result was null! - "" + test.name, result);"
222562,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/policyengine/TestPolicyEngineForDeltas.java,432,,"                assertEquals(""policyId mismatched! - "" + test.name, expected.getPolicyId(), result.getPolicyId());"
222563,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/resourcematcher/RangerDefaultResourceMatcherTest.java,36,,"            { ""*"",  ""*"",  false, true, ""user"" },  // resource is all values"
222564,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/resourcematcher/RangerPathResourceMatcherTest.java,37,,"            { ""/app/hive/test.db"",    ""/"",                 true, false, false, ""user"" },"
222565,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/resourcematcher/RangerPathResourceMatcherTest.java,37,,"            { ""/app/hive/test.db"",    ""/"",                 true, false, false, ""user"" },"
222566,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/resourcematcher/RangerPathResourceMatcherTest.java,40,,"            { ""/app/hbase/test.tbl"",  ""/*"",                true, false, true, ""user"" },"
222567,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/resourcematcher/RangerPathResourceMatcherTest.java,42,,"            { ""/app/hive/test.db"",    ""/app/"",             true, false, false, ""user"" },"
222568,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/resourcematcher/RangerPathResourceMatcherTest.java,44,,"            { ""/app/hive/test.db"",    ""/app/*"",            true, false, true, ""user"" },"
222569,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/resourcematcher/RangerPathResourceMatcherTest.java,46,,"            { ""/app/hive/test.db"",    ""/app/hive/*"",       true, false, true, ""user"" },"
222570,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/resourcematcher/RangerPathResourceMatcherTest.java,48,,"            { ""/app/hive/test.db"",    ""/app/hive/test*"",   true, false, true, ""user"" },"
222571,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/resourcematcher/RangerPathResourceMatcherTest.java,71,,"            { ""/app/hbase/test.db"",   ""/app/hbase"",        true, true, true,   ""user"" },"
222572,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/resourcematcher/RangerPathResourceMatcherTest.java,72,,"            { ""/app/hbase/test.db"",   ""/app/hbase/test.db/test.tbl"", true, true, true, ""user"" },"
222573,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/resourcematcher/RangerURLResourceMatcherTest.java,36,,"            { ""hdfs://hostname:8020/app/warehouse/data/emp.db"",    ""hdfs://hostname:8020/app/warehouse/*"", true, true, true, ""user"" },"
222574,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/resourcematcher/RangerURLResourceMatcherTest.java,36,,"            { ""hdfs://hostname:8020/app/warehouse/data/emp.db"",    ""hdfs://hostname:8020/app/warehouse/*"", true, true, true, ""user"" },"
222575,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/resourcematcher/RangerURLResourceMatcherTest.java,44,,"            { ""/app/warehouse/data/emp.db"",                         ""hdfs://app/*"",               true,  true,  false, ""user"" },"
222576,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/util/PasswordUtilsTest.java,37,,"		String encryptedPassword = PasswordUtils.encryptPassword(""secretPasswordNoOneWillEverKnow"");"
222577,./TargetProjects/ranger/agents-common/src/test/java/org/apache/ranger/plugin/util/PasswordUtilsTest.java,87,,"		String freeTextPasswordMetaData = ""PBEWITHHMACSHA512ANDAES_128,tzL1AKl5uc4NKYaoQ4P3WLGIBFPXWPWdu1fRm9004jtQiV,f77aLYLo,1000,9f3vNL0ijeHF4RWN/yUo0A=="";"
222578,./TargetProjects/ranger/agents-cred/src/test/java/org/apache/ranger/authorization/hadoop/utils/RangerCredentialProviderTest.java,50,,"		url = ""jceks://file@/"" + keystoreFile;"
222579,./TargetProjects/ranger/agents-cred/src/test/java/org/apache/ranger/authorization/hadoop/utils/RangerCredentialProviderTest.java,53,,"			argsCreate = new String[] {""create"", ""TestCredential001"", ""-f"",  ""-value"", ""PassworD123"", ""-provider"", ""jceks://file@/"" + keystoreFile};"
222580,./TargetProjects/ranger/agents-cred/src/test/java/org/apache/ranger/authorization/hadoop/utils/RangerCredentialProviderTest.java,53,,"			argsCreate = new String[] {""create"", ""TestCredential001"", ""-f"",  ""-value"", ""PassworD123"", ""-provider"", ""jceks://file@/"" + keystoreFile};"
222581,./TargetProjects/ranger/agents-installer/src/main/java/org/apache/ranger/utils/install/XmlConfigChanger.java,113,,"			helpFormatter.printHelp(""java "" + XmlConfigChanger.class.getName(), header, options, null, true);"
222582,./TargetProjects/ranger/credentialbuilder/src/main/java/org/apache/ranger/credentialapi/CredentialReader.java,40,,"		  String crendentialProviderPrefixJceks=JavaKeyStoreProvider.SCHEME_NAME + ""://file"";"
222583,./TargetProjects/ranger/credentialbuilder/src/main/java/org/apache/ranger/credentialapi/buildks.java,40,,"					if(command.equalsIgnoreCase(""create"")){"
222584,./TargetProjects/ranger/credentialbuilder/src/main/java/org/apache/ranger/credentialapi/buildks.java,42,,"					}else if(command.equalsIgnoreCase(""list"")){"
222585,./TargetProjects/ranger/credentialbuilder/src/main/java/org/apache/ranger/credentialapi/buildks.java,193,,"					(!providerPath.startsWith(""localjceks://file"")&&!providerPath.startsWith(""jceks://file"") &&"
222586,./TargetProjects/ranger/credentialbuilder/src/main/java/org/apache/ranger/credentialapi/buildks.java,194,,"					!providerPath.startsWith(""localbcfks://file"")&&!providerPath.startsWith(""bcfks://file"")))"
222587,./TargetProjects/ranger/credentialbuilder/src/main/java/org/apache/ranger/credentialapi/buildks.java,204,,"    		providerOption=""-provider"";"
222588,./TargetProjects/ranger/credentialbuilder/src/main/java/org/apache/ranger/credentialapi/buildks.java,334,,"        		System.out.println(""Found:'""+alias+""'"");"
222589,./TargetProjects/ranger/credentialbuilder/src/main/java/org/apache/ranger/credentialapi/buildks.java,397,,"				System.out.println(""Invalid provider option in credential get command!!"");"
222590,./TargetProjects/ranger/credentialbuilder/src/main/java/org/apache/ranger/credentialapi/buildks.java,445,,"			if (command != null && command.trim().equalsIgnoreCase(""get"")) {"
222591,./TargetProjects/ranger/credentialbuilder/src/test/java/org/apache/ranger/credentialapi/Testbuildks.java,52,,"        String[] argsCreateCommand = {""create"", ""TestCredential1"", ""-value"", ""PassworD123"", ""-provider"", ""jceks://file@/"" + keystoreFile, """",""jceks""};"
222592,./TargetProjects/ranger/credentialbuilder/src/test/java/org/apache/ranger/credentialapi/Testbuildks.java,52,,"        String[] argsCreateCommand = {""create"", ""TestCredential1"", ""-value"", ""PassworD123"", ""-provider"", ""jceks://file@/"" + keystoreFile, """",""jceks""};"
222593,./TargetProjects/ranger/credentialbuilder/src/test/java/org/apache/ranger/credentialapi/Testbuildks.java,52,,"        String[] argsCreateCommand = {""create"", ""TestCredential1"", ""-value"", ""PassworD123"", ""-provider"", ""jceks://file@/"" + keystoreFile, """",""jceks""};"
222594,./TargetProjects/ranger/credentialbuilder/src/test/java/org/apache/ranger/credentialapi/Testbuildks.java,52,,"        String[] argsCreateCommand = {""create"", ""TestCredential1"", ""-value"", ""PassworD123"", ""-provider"", ""jceks://file@/"" + keystoreFile, """",""jceks""};"
222595,./TargetProjects/ranger/embeddedwebserver/src/main/java/org/apache/ranger/server/tomcat/EmbeddedServer.java,137,,"		boolean isHttpsEnabled = Boolean.valueOf(EmbeddedServerUtil.getConfig(""ranger.service.https.attrib.ssl.enabled"", ""false""));"
222596,./TargetProjects/ranger/embeddedwebserver/src/main/java/org/apache/ranger/server/tomcat/EmbeddedServer.java,157,,"			ssl.setAttribute(""SSLEnabled"", ""true"");"
222597,./TargetProjects/ranger/hbase-agent/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessor.java,429,,"							LOG.debug(""evaluateAccess: Setting denied access audit event with last auth failure audit event."");"
222598,./TargetProjects/ranger/hbase-agent/src/main/java/org/apache/ranger/services/hbase/client/HBaseClient.java,88,,"		final String errMsg = "" You can still save the repository and start creating """
222599,./TargetProjects/ranger/hbase-agent/src/main/java/org/apache/ranger/services/hbase/client/HBaseClient.java,89,,"				+ ""policies, but you would not be able to use autocomplete for """
222600,./TargetProjects/ranger/hbase-agent/src/main/java/org/apache/ranger/services/hbase/client/HBaseClient.java,90,,"				+ ""resource names. Check ranger_admin.log for more info."";"
222601,./TargetProjects/ranger/hbase-agent/src/main/java/org/apache/ranger/services/hbase/client/HBaseConnectionMgr.java,62,,"										LOG.error(""Error connecting HBase repository : "", ex);"
222602,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/AuthorizationSessionTest.java,74,,"		RangerBasePlugin plugin = new RangerBasePlugin(""hbase"", ""hbase"");"
222603,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,92,,"        utility.getConfiguration().set(""zookeeper.znode.parent"", ""/hbase-unsecure"");"
222604,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,92,,"        utility.getConfiguration().set(""zookeeper.znode.parent"", ""/hbase-unsecure"");"
222605,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,105,,"        conf.set(""hbase.zookeeper.quorum"", ""localhost"");"
222606,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,105,,"        conf.set(""hbase.zookeeper.quorum"", ""localhost"");"
222607,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,106,,"        conf.set(""hbase.zookeeper.property.clientPort"", """" + port);"
222608,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,118,,"            tableDescriptor.addFamily(new HColumnDescriptor(""colfam1""));"
222609,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,119,,"            tableDescriptor.addFamily(new HColumnDescriptor(""colfam2""));"
222610,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,134,,"        Put put = new Put(Bytes.toBytes(""row1""));"
222611,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,135,,"        put.addColumn(Bytes.toBytes(""colfam1""), Bytes.toBytes(""col1""), Bytes.toBytes(""val1""));"
222612,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,135,,"        put.addColumn(Bytes.toBytes(""colfam1""), Bytes.toBytes(""col1""), Bytes.toBytes(""val1""));"
222613,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,136,,"        Table table = conn.getTable(TableName.valueOf(""temp""));"
222614,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,140,,"        put.addColumn(Bytes.toBytes(""colfam2""), Bytes.toBytes(""col1""), Bytes.toBytes(""val2""));"
222615,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,144,,"        NamespaceDescriptor ns = NamespaceDescriptor.create(""test_namespace"").build();"
222616,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,235,,"        HTableDescriptor tableDescriptor = new HTableDescriptor(TableName.valueOf(""temp2""));"
222617,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,257,,"                    Assert.fail(""Failure expected on an unauthorized user"");"
222618,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,330,,"        String user = ""public"";"
222619,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,434,,"                Put put = new Put(Bytes.toBytes(""row3""));"
222620,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,517,,"        HTableDescriptor tableDescriptor = new HTableDescriptor(TableName.valueOf(""temp4""));"
222621,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,648,,"        List<SnapshotDescription> snapshots = admin.listSnapshots(""test_snapshot"");"
222622,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,749,,"        final HTableDescriptor tableDescriptor = new HTableDescriptor(TableName.valueOf(""temp3""));"
222623,./TargetProjects/ranger/hbase-agent/src/test/java/org/apache/ranger/authorization/hbase/HBaseRangerAuthorizationTest.java,778,,"        ugi = UserGroupInformation.createUserForTesting(""dev"", new String[] {""dev""});"
222624,./TargetProjects/ranger/hdfs-agent/src/main/java/org/apache/ranger/authorization/hadoop/RangerHdfsAuthorizer.java,159,,"			LOG.debug(""<== RangerHdfsAuthorizer.getAttributes("" + fullPath + ""): "" + ret);"
222625,./TargetProjects/ranger/hdfs-agent/src/main/java/org/apache/ranger/authorization/hadoop/RangerHdfsAuthorizer.java,261,,"						+ "", snapshotId="" + snapshotId + "", user="" + context.user + "", provided-path="" + path + "", ancestorIndex="" + ancestorIndex"
222626,./TargetProjects/ranger/hdfs-agent/src/main/java/org/apache/ranger/authorization/hadoop/RangerHdfsAuthorizer.java,263,,"						+ "", access="" + access + "", subAccess="" + subAccess + "", ignoreEmptyDir="" + ignoreEmptyDir + "", operationName="" + operationName"
222627,./TargetProjects/ranger/hdfs-agent/src/main/java/org/apache/ranger/services/hdfs/client/HdfsClient.java,116,,"					LOG.debug(""<== HdfsClient listFilesInternal Error : "" + uhe);"
222628,./TargetProjects/ranger/hdfs-agent/src/main/java/org/apache/ranger/services/hdfs/client/HdfsClient.java,288,,"						""Value for "" + ""fs.default.name element"" + fsDefaultNameElement + "" not specified"");"
222629,./TargetProjects/ranger/hdfs-agent/src/main/java/org/apache/ranger/services/hdfs/client/HdfsClient.java,288,,"						""Value for "" + ""fs.default.name element"" + fsDefaultNameElement + "" not specified"");"
222630,./TargetProjects/ranger/hdfs-agent/src/main/java/org/apache/ranger/services/hdfs/client/HdfsClient.java,294,,"			configs.put(""dfs.nameservices"", ""hdfscluster"");"
222631,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/HDFSRangerTest.java,66,,"        defaultFs = conf.get(""fs.defaultFS"");"
222632,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/HDFSRangerTest.java,89,,"            out.write((""data"" + i + ""\n"").getBytes(""UTF-8""));"
222633,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/HDFSRangerTest.java,89,,"            out.write((""data"" + i + ""\n"").getBytes(""UTF-8""));"
222634,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/HDFSRangerTest.java,95,,"        UserGroupInformation ugi = UserGroupInformation.createUserForTesting(""bob"", new String[] {});"
222635,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/HDFSRangerTest.java,113,,"        ugi = UserGroupInformation.createUserForTesting(""alice"", new String[] {""IT""});"
222636,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/HDFSRangerTest.java,131,,"        ugi = UserGroupInformation.createUserForTesting(""eve"", new String[] {});"
222637,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/HDFSRangerTest.java,143,,"                    Assert.fail(""Failure expected on an incorrect permission"");"
222638,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/HDFSRangerTest.java,269,,"                Assert.assertTrue(content.startsWith(""data0""));"
222639,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/RangerAdminClientImpl.java,54,,"            relativePath = ""/src/test/resources/"" + hdfsVersion + ""/"";"
222640,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/RangerHdfsAuthorizerTest.java,239,,"        fs.checkAccess(null,  ""bob""); // traverse check"
222641,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/RangerHdfsAuthorizerTest.java,243,,"        fs.checkAccess(null, ""alice"", ""IT""); // traverse check"
222642,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/RangerHdfsAuthorizerTest.java,247,,"        fs.checkAccess(null, ""eve""); // traverse check"
222643,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/client/HdfsClientTest.java,39,,"    configs.put(""username"", ""hdfsuser"");"
222644,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/client/HdfsClientTest.java,39,,"    configs.put(""username"", ""hdfsuser"");"
222645,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/client/HdfsClientTest.java,46,,"    configs.put(""password"", ""hdfsuser"");"
222646,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/client/HdfsClientTest.java,55,,"    configs.put(""hadoop.security.authentication"", ""simple"");"
222647,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/client/HdfsClientTest.java,55,,"    configs.put(""hadoop.security.authentication"", ""simple"");"
222648,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/client/HdfsClientTest.java,65,,"    configs.put(""fs.default.name"", ""hdfs://hwqe-1425428405"");"
222649,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/client/HdfsClientTest.java,65,,"    configs.put(""fs.default.name"", ""hdfs://hwqe-1425428405"");"
222650,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/client/HdfsClientTest.java,66,,"    configs.put(""dfs.nameservices"", ""hwqe-1425428405"");"
222651,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/client/HdfsClientTest.java,66,,"    configs.put(""dfs.nameservices"", ""hwqe-1425428405"");"
222652,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/client/HdfsClientTest.java,78,,"    configs.put(""dfs.client.failover.proxy.provider.hwqe-1425428405"","
222653,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/client/HdfsClientTest.java,79,,"      ""org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider"");"
222654,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/client/HdfsClientTest.java,93,,"    configs.put(""dfs.ha.namenodes.hwqe-1425428405"", ""nn1,nn2"");"
222655,./TargetProjects/ranger/hdfs-agent/src/test/java/org/apache/ranger/services/hdfs/client/HdfsClientTest.java,93,,"    configs.put(""dfs.ha.namenodes.hwqe-1425428405"", ""nn1,nn2"");"
222656,./TargetProjects/ranger/hive-agent/src/main/java/org/apache/ranger/authorization/hive/authorizer/RangerHiveAuthorizer.java,835,,"                  String.format(""Permission denied: user [%s] does not have [%s] privilege on [%s]"", user,"
222657,./TargetProjects/ranger/hive-agent/src/main/java/org/apache/ranger/authorization/hive/authorizer/RangerHiveAuthorizer.java,1231,,"							LOG.debug(""rowFilter(database="" + database + "", table="" + table + ""): "" + rowFilterExpr);"
222658,./TargetProjects/ranger/hive-agent/src/main/java/org/apache/ranger/authorization/hive/authorizer/RangerHiveAuthorizer.java,2758,,"		sb.append("", 'commandString':"").append(context == null ? ""null"" : context.getCommandString());"
222659,./TargetProjects/ranger/hive-agent/src/main/java/org/apache/ranger/services/hive/client/HiveClient.java,597,,"						+ ""So unable to initiate connection to hive thrift server instance."";"
222660,./TargetProjects/ranger/hive-agent/src/test/java/org/apache/ranger/services/hive/HIVERangerAuthorizerTest.java,106,,"        String initialUrl = ""jdbc:hive2://localhost:"" + port;"
222661,./TargetProjects/ranger/hive-agent/src/test/java/org/apache/ranger/services/hive/HIVERangerAuthorizerTest.java,107,,"        Connection connection = DriverManager.getConnection(initialUrl, ""admin"", ""admin"");"
222662,./TargetProjects/ranger/hive-agent/src/test/java/org/apache/ranger/services/hive/HIVERangerAuthorizerTest.java,117,,"        String url = ""jdbc:hive2://localhost:"" + port + ""/rangerauthz"";"
222663,./TargetProjects/ranger/hive-agent/src/test/java/org/apache/ranger/services/hive/HIVERangerAuthorizerTest.java,131,,"        ResultSet resultSet = statement.executeQuery(""SELECT * FROM words where count == '100'"");"
222664,./TargetProjects/ranger/hive-agent/src/test/java/org/apache/ranger/services/hive/HIVERangerAuthorizerTest.java,133,,"            Assert.assertEquals(""Mr."", resultSet.getString(1));"
222665,./TargetProjects/ranger/hive-agent/src/test/java/org/apache/ranger/services/hive/HIVERangerAuthorizerTest.java,135,,"            Assert.fail(""No ResultSet found"");"
222666,./TargetProjects/ranger/hive-agent/src/test/java/org/apache/ranger/services/hive/HIVERangerAuthorizerTest.java,162,,"        Connection connection = DriverManager.getConnection(url, ""bob"", ""bob"");"
222667,./TargetProjects/ranger/hive-agent/src/test/java/org/apache/ranger/services/hive/HIVERangerAuthorizerTest.java,181,,"        UserGroupInformation ugi = UserGroupInformation.createUserForTesting(""alice"", new String[] {""IT""});"
222668,./TargetProjects/ranger/hive-agent/src/test/java/org/apache/ranger/services/hive/HIVERangerAuthorizerTest.java,190,,"                    Assert.fail(""Failure expected on an unauthorized call"");"
222669,./TargetProjects/ranger/hive-agent/src/test/java/org/apache/ranger/services/hive/HIVERangerAuthorizerTest.java,210,,"        ResultSet resultSet = statement.executeQuery(""SELECT count FROM words where count == '100'"");"
222670,./TargetProjects/ranger/hive-agent/src/test/java/org/apache/ranger/services/hive/HIVERangerAuthorizerTest.java,494,,"        statement.execute(""drop TABLE words2"");"
222671,./TargetProjects/ranger/hive-agent/src/test/java/org/apache/ranger/services/hive/HIVERangerAuthorizerTest.java,575,,"        Connection connection = DriverManager.getConnection(url, ""dave"", ""dave"");"
222672,./TargetProjects/ranger/hive-agent/src/test/java/org/apache/ranger/services/hive/HIVERangerAuthorizerTest.java,763,,"        connection = DriverManager.getConnection(url, ""da_test_user"", ""da_test_user"");"
222673,./TargetProjects/ranger/hive-agent/src/test/java/org/apache/ranger/services/hive/HIVERangerAuthorizerTest.java,770,,"            Assert.fail(""access should have been granted to da_test_user"");"
222674,./TargetProjects/ranger/intg/src/main/java/org/apache/ranger/RangerClient.java,57,,"    private static final String URI_SERVICEDEF_BY_ID      = URI_SERVICEDEF + ""/%d"";"
222675,./TargetProjects/ranger/intg/src/main/java/org/apache/ranger/RangerClient.java,58,,"    private static final String URI_SERVICEDEF_BY_NAME    = URI_SERVICEDEF + ""/name/%s"";"
222676,./TargetProjects/ranger/intg/src/main/java/org/apache/ranger/RangerClient.java,490,,"            LOG.debug(""------------------------------------------------------"");"
222677,./TargetProjects/ranger/intg/src/test/java/org/apache/ranger/TestRangerClient.java,100,,"            Assert.fail(""supposed to fail with RangerServiceException"");"
222678,./TargetProjects/ranger/jisql/src/main/java/org/apache/util/sql/Jisql.java,285,,"            props.put(""user"", userName);"
222679,./TargetProjects/ranger/kms/src/main/java/org/apache/hadoop/crypto/key/RangerKMSDB.java,179,,"			if(""true"".equalsIgnoreCase(db_ssl_enabled)){"
222680,./TargetProjects/ranger/kms/src/main/java/org/apache/hadoop/crypto/key/RangerKeyStore.java,302,,"        SecretKeyFactory secretKeyFactory = SecretKeyFactory.getInstance(""PBEWithMD5AndTripleDES"");"
222681,./TargetProjects/ranger/kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMS.java,196,,"    public Response deleteKey(@PathParam(""name"") final String name, @Context HttpServletRequest request)"
222682,./TargetProjects/ranger/kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMS.java,269,,"  @Path(KMSRESTConstants.KEY_RESOURCE + ""/{name:.*}/"" + KMSRESTConstants.INVALIDATECACHE_RESOURCE)"
222683,./TargetProjects/ranger/kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMS.java,444,,"      @PathParam(""versionName"") final String versionName, @Context HttpServletRequest request) throws Exception {"
222684,./TargetProjects/ranger/kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSAudit.java,227,,"    op(OpStatus.OK, op, user, key, ""Unknown"", extraMsg);"
222685,./TargetProjects/ranger/kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/RangerKeyStoreProviderTest.java,53,,"                            ""AES"");"
222686,./TargetProjects/ranger/kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/RangerKeyStoreProviderTest.java,95,,"        KeyVersion keyVersion = keyProvider.createKey(""newkey1"", options);"
222687,./TargetProjects/ranger/kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMSACLs.java,72,,"    conf.set(DEFAULT_KEY_ACL_PREFIX + ""MANAGEMENT"", ""ROLLOVER"");"
222688,./TargetProjects/ranger/kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMSACLs.java,73,,"    conf.set(WHITELIST_KEY_ACL_PREFIX + ""MANAGEMENT"", ""DECRYPT_EEK"");"
222689,./TargetProjects/ranger/kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMSACLs.java,92,,"    conf.set(KEY_ACL + ""test_key_1.DECRYPT_EEK"", ""decrypt2"");"
222690,./TargetProjects/ranger/kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMSACLs.java,115,,"    conf.set(DEFAULT_KEY_ACL_PREFIX + ""READ"", ""read1"");"
222691,./TargetProjects/ranger/kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMSACLs.java,117,,"    conf.set(DEFAULT_KEY_ACL_PREFIX + ""GENERATE_EEK"", ""*"");"
222692,./TargetProjects/ranger/kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMSACLs.java,119,,"    conf.set(KEY_ACL + ""testuser1.ALL"", ""testkey1"");"
222693,./TargetProjects/ranger/kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMSACLs.java,127,,"    conf.set(DEFAULT_KEY_ACL_PREFIX + ""READ"", ""read2"");"
222694,./TargetProjects/ranger/kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMSACLs.java,132,,"    conf.set(WHITELIST_KEY_ACL_PREFIX + ""READ"", ""admin_read2"");"
222695,./TargetProjects/ranger/kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMSACLs.java,135,,"    conf.set(WHITELIST_KEY_ACL_PREFIX + ""DECRYPT_EEK"", ""admin_decrypt2"");"
222696,./TargetProjects/ranger/kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMSAudit.java,94,,"    kmsAudit.ok(luser, KMSOp.DECRYPT_EEK, ""k1"", ""testmsg"");"
222697,./TargetProjects/ranger/kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMSAudit.java,154,,"            + ""OK\\[op=GENERATE_EEK, key=k3, user=luser@REALM, accessCount=1, interval=[^m]{1,4}ms\\] testmsg"""
222698,./TargetProjects/ranger/kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKeyAuthorizationKeyProvider.java,54,,"    when(mock.isACLPresent(""foo"", KeyOpType.MANAGEMENT)).thenReturn(true);"
222699,./TargetProjects/ranger/kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKeyAuthorizationKeyProvider.java,113,,"    when(mock.isACLPresent(""testKey"", KeyOpType.MANAGEMENT)).thenReturn(true);"
222700,./TargetProjects/ranger/knox-agent/src/main/java/org/apache/ranger/admin/client/RangerAdminJersey2RESTClient.java,116,,"			LOG.debug(""<== RangerAdminJersey2RESTClient.init("" + configPropertyPrefix + ""): "" + _client.toString());"
222701,./TargetProjects/ranger/knox-agent/src/main/java/org/apache/ranger/admin/client/RangerAdminJersey2RESTClient.java,197,,"				LOG.warn(String.format(""Unexpected: Received status[%d] with body[%s] form url[%s]"", httpResponseCode, body, relativeURL));"
222702,./TargetProjects/ranger/knox-agent/src/main/java/org/apache/ranger/services/knox/client/KnoxClient.java,71,,"		String errMsg = "" You can still save the repository and start creating """
222703,./TargetProjects/ranger/knox-agent/src/main/java/org/apache/ranger/services/knox/client/KnoxClient.java,72,,"				+ ""policies, but you would not be able to use autocomplete for """
222704,./TargetProjects/ranger/knox-agent/src/main/java/org/apache/ranger/services/knox/client/KnoxClient.java,73,,"				+ ""resource names. Check ranger_admin.log for more info."";"
222705,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,54,,"        driver.setupService(""WEBHDFS"", ""http://localhost:50070/webhdfs"", ""/cluster/webhdfs"", true);"
222706,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,55,,"        driver.setupService(""STORM"", ""http://localhost:8477"", ""/cluster/storm"", true);"
222707,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,56,,"        driver.setupService(""SOLR"", ""http://localhost:8983"", ""/cluster/solr"", true);"
222708,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,57,,"        driver.setupService(""WEBHBASE"", ""http://localhost:60080"", ""/cluster/hbase"", true);"
222709,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,58,,"        driver.setupService(""KAFKA"", ""http://localhost:8477"", ""/cluster/kafka"", true);"
222710,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,77,,"            .addTag( ""provider"" )"
222711,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,78,,"            .addTag( ""role"" ).addText( ""webappsec"" )"
222712,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,79,,"            .addTag(""name"").addText(""WebAppSec"")"
222713,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,80,,"            .addTag(""enabled"").addText(""true"")"
222714,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,80,,"            .addTag(""enabled"").addText(""true"")"
222715,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,81,,"            .addTag( ""param"" )"
222716,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,83,,"            .addTag(""value"").addText(""true"").gotoParent().gotoParent()"
222717,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,112,,"            .addTag(""service"")"
222718,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,114,,"            .addTag(""url"").addText(driver.getRealUrl(""WEBHDFS"")).gotoParent()"
222719,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,133,,"        makeWebHDFSInvocation(HttpStatus.SC_OK, ""alice"", ""password"");"
222720,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,133,,"        makeWebHDFSInvocation(HttpStatus.SC_OK, ""alice"", ""password"");"
222721,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,138,,"        makeWebHDFSInvocation(HttpStatus.SC_FORBIDDEN, ""bob"", ""password"");"
222722,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,183,,"        String basedir = System.getProperty(""basedir"");"
222723,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,191,,"          .method( ""GET"" )"
222724,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,197,,"          .contentType( ""application/json"" );"
222725,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,202,,"          .header(""X-XSRF-Header"", ""jksdhfkhdsf"")"
222726,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,202,,"          .header(""X-XSRF-Header"", ""jksdhfkhdsf"")"
222727,./TargetProjects/ranger/knox-agent/src/test/java/org/apache/ranger/services/knox/KnoxRangerTest.java,234,,"            .header(""Accept"", ""application/json"")"
222728,./TargetProjects/ranger/plugin-atlas/src/main/java/org/apache/ranger/authorization/atlas/authorizer/RangerAtlasAuthorizer.java,106,,"            LOG.debug(""==> isAccessAllowed("" + request + "")"");"
222729,./TargetProjects/ranger/plugin-atlas/src/main/java/org/apache/ranger/authorization/atlas/authorizer/RangerAtlasAuthorizer.java,114,,"                perf = RangerPerfTracer.getPerfTracer(PERF_LOG, ""RangerAtlasAuthorizer.isAccessAllowed("" + request + "")"");"
222730,./TargetProjects/ranger/plugin-atlas/src/main/java/org/apache/ranger/authorization/atlas/authorizer/RangerAtlasAuthorizer.java,134,,"            LOG.debug(""<== isAccessAllowed("" + request + ""): "" + ret);"
222731,./TargetProjects/ranger/plugin-atlas/src/main/java/org/apache/ranger/authorization/atlas/authorizer/RangerAtlasAuthorizer.java,134,,"            LOG.debug(""<== isAccessAllowed("" + request + ""): "" + ret);"
222732,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerGSSTest.java,113,,"        tempDir = Files.createTempDirectory(""kafka"");"
222733,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerGSSTest.java,128,,"        props.put(""security.inter.broker.protocol"", ""SASL_PLAINTEXT"");"
222734,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerGSSTest.java,129,,"        props.put(""sasl.enabled.mechanisms"", ""GSSAPI"");"
222735,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerGSSTest.java,131,,"        props.put(""sasl.kerberos.service.name"", ""kafka"");"
222736,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerGSSTest.java,148,,"        adminProps.put(CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG, ""localhost:"" + port);"
222737,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerGSSTest.java,205,,"        producerProps.put(""bootstrap.servers"", ""localhost:"" + port);"
222738,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerGSSTest.java,207,,"        producerProps.put(""key.serializer"", ""org.apache.kafka.common.serialization.StringSerializer"");"
222739,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerGSSTest.java,210,,"        producerProps.put(""sasl.mechanism"", ""GSSAPI"");"
222740,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerGSSTest.java,232,,"        consumer.subscribe(Arrays.asList(""test""));"
222741,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerGSSTest.java,250,,"        Assert.assertEquals(""somevalue"", record.value());"
222742,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerSASLSSLTest.java,90,,"    	keystore.load(null, ""security"".toCharArray());"
222743,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerSASLSSLTest.java,94,,"    					""sspass"", ""myservicekey"", ""skpass"", keystore);"
222744,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerSASLSSLTest.java,94,,"    					""sspass"", ""myservicekey"", ""skpass"", keystore);"
222745,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerSASLSSLTest.java,122,,"        props.put(""security.inter.broker.protocol"", ""SASL_SSL"");"
222746,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerSASLSSLTest.java,123,,"        props.put(""sasl.enabled.mechanisms"", ""PLAIN"");"
222747,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerSASLSSLTest.java,147,,"        adminProps.put(CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG, ""localhost:"" + port);"
222748,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerSASLSSLTest.java,188,,"        producerProps.put(""key.serializer"", ""org.apache.kafka.common.serialization.StringSerializer"");"
222749,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,84,,"    	keystore.load(null, ""security"".toCharArray());"
222750,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,88,,"    					""sspass"", ""myservicekey"", ""skpass"", keystore);"
222751,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,88,,"    					""sspass"", ""myservicekey"", ""skpass"", keystore);"
222752,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,91,,"    					""cspass"", ""myclientkey"", ""ckpass"", keystore);"
222753,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,91,,"    					""cspass"", ""myclientkey"", ""ckpass"", keystore);"
222754,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,123,,"        props.put(""security.inter.broker.protocol"", ""SSL"");"
222755,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,141,,"        adminProps.put(CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG, ""localhost:"" + port);"
222756,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,183,,"        producerProps.put(""bootstrap.servers"", ""localhost:"" + port);"
222757,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,184,,"        producerProps.put(""acks"", ""all"");"
222758,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,184,,"        producerProps.put(""acks"", ""all"");"
222759,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,185,,"        producerProps.put(""key.serializer"", ""org.apache.kafka.common.serialization.StringSerializer"");"
222760,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,185,,"        producerProps.put(""key.serializer"", ""org.apache.kafka.common.serialization.StringSerializer"");"
222761,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,186,,"        producerProps.put(""value.serializer"", ""org.apache.kafka.common.serialization.StringSerializer"");"
222762,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,188,,"        producerProps.put(SslConfigs.SSL_KEYSTORE_TYPE_CONFIG, ""JKS"");"
222763,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,200,,"        consumerProps.put(""group.id"", ""test"");"
222764,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,205,,"        consumerProps.put(""key.deserializer"", ""org.apache.kafka.common.serialization.StringDeserializer"");"
222765,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,219,,"        producer.send(new ProducerRecord<String, String>(""test"", ""somekey"", ""somevalue""));"
222766,./TargetProjects/ranger/plugin-kafka/src/test/java/org/apache/ranger/authorization/kafka/authorizer/KafkaRangerAuthorizerTest.java,219,,"        producer.send(new ProducerRecord<String, String>(""test"", ""somekey"", ""somevalue""));"
222767,./TargetProjects/ranger/plugin-kms/src/main/java/org/apache/ranger/services/kms/client/KMSClient.java,210,,"						LOG.debug(""getKeyList():response.getStatus()= """
222768,./TargetProjects/ranger/plugin-kms/src/test/java/org/apache/ranger/authorization/kms/authorizer/RangerKmsAuthorizerTest.java,112,,"        final UserGroupInformation ugi = UserGroupInformation.createRemoteUser(""bob"");"
222769,./TargetProjects/ranger/plugin-kms/src/test/java/org/apache/ranger/authorization/kms/authorizer/RangerKmsAuthorizerTest.java,116,,"                KMSWebApp.getACLs().assertAccess(Type.CREATE, ugi, KMSOp.CREATE_KEY, ""newkey1"", ""127.0.0.1"");"
222770,./TargetProjects/ranger/plugin-kms/src/test/java/org/apache/ranger/authorization/kms/authorizer/RangerKmsAuthorizerTest.java,116,,"                KMSWebApp.getACLs().assertAccess(Type.CREATE, ugi, KMSOp.CREATE_KEY, ""newkey1"", ""127.0.0.1"");"
222771,./TargetProjects/ranger/plugin-kms/src/test/java/org/apache/ranger/authorization/kms/authorizer/RangerKmsAuthorizerTest.java,122,,"        final UserGroupInformation ugi2 = UserGroupInformation.createRemoteUser(""eve"");"
222772,./TargetProjects/ranger/plugin-kms/src/test/java/org/apache/ranger/authorization/kms/authorizer/RangerKmsAuthorizerTest.java,128,,"                    Assert.fail(""Failure expected"");"
222773,./TargetProjects/ranger/plugin-kms/src/test/java/org/apache/ranger/authorization/kms/authorizer/RangerKmsAuthorizerTest.java,137,,"        final UserGroupInformation ugi3 = UserGroupInformation.createUserForTesting(""alice"", new String[]{""IT""});"
222774,./TargetProjects/ranger/plugin-nifi-registry/src/main/java/org/apache/ranger/services/nifi/registry/client/NiFiRegistryConnectionMgr.java,98,,"                validateNotBlank(keystore, ""Keystore is required for "" + serviceName + "" with Authentication Type of SSL"");"
222775,./TargetProjects/ranger/plugin-nifi-registry/src/test/java/org/apache/ranger/services/nifi/registry/client/TestNiFiRegistryConnectionMgr.java,38,,"        NiFiRegistryConnectionMgr.getNiFiRegistryClient(""nifi-registry"", configs);"
222776,./TargetProjects/ranger/plugin-nifi-registry/src/test/java/org/apache/ranger/services/nifi/registry/client/TestNiFiRegistryConnectionMgr.java,83,,"        configs.put(NiFiRegistryConfigs.NIFI_REG_SSL_KEYSTORE, ""src/test/resources/missing.jks"");"
222777,./TargetProjects/ranger/plugin-nifi-registry/src/test/java/org/apache/ranger/services/nifi/registry/client/TestNiFiRegistryConnectionMgr.java,84,,"        configs.put(NiFiRegistryConfigs.NIFI_REG_SSL_KEYSTORE_PASSWORD, ""password"");"
222778,./TargetProjects/ranger/plugin-nifi-registry/src/test/java/org/apache/ranger/services/nifi/registry/client/TestNiFiRegistryConnectionMgr.java,85,,"        configs.put(NiFiRegistryConfigs.NIFI_REG_SSL_KEYSTORE_TYPE, ""JKS"");"
222779,./TargetProjects/ranger/plugin-nifi/src/main/java/org/apache/ranger/services/nifi/client/NiFiConnectionMgr.java,95,,"                validateNotBlank(keystore, ""Keystore is required for "" + serviceName + "" with Authentication Type of SSL"");"
222780,./TargetProjects/ranger/plugin-nifi/src/test/java/org/apache/ranger/services/nifi/client/TestNiFiClient.java,45,,"            ""    {\n"" +"
222781,./TargetProjects/ranger/plugin-nifi/src/test/java/org/apache/ranger/services/nifi/client/TestNiFiClient.java,48,,"            ""    },\n"" +"
222782,./TargetProjects/ranger/plugin-nifi/src/test/java/org/apache/ranger/services/nifi/client/TestNiFiConnectionMgr.java,38,,"        NiFiConnectionMgr.getNiFiClient(""nifi"", configs);"
222783,./TargetProjects/ranger/plugin-nifi/src/test/java/org/apache/ranger/services/nifi/client/TestNiFiConnectionMgr.java,83,,"        configs.put(NiFiConfigs.NIFI_SSL_KEYSTORE, ""src/test/resources/missing.jks"");"
222784,./TargetProjects/ranger/plugin-nifi/src/test/java/org/apache/ranger/services/nifi/client/TestNiFiConnectionMgr.java,84,,"        configs.put(NiFiConfigs.NIFI_SSL_KEYSTORE_PASSWORD, ""password"");"
222785,./TargetProjects/ranger/plugin-nifi/src/test/java/org/apache/ranger/services/nifi/client/TestNiFiConnectionMgr.java,85,,"        configs.put(NiFiConfigs.NIFI_SSL_KEYSTORE_TYPE, ""JKS"");"
222786,./TargetProjects/ranger/plugin-presto/src/main/java/org/apache/ranger/authorization/presto/authorizer/RangerSystemAccessControl.java,279,,"      LOG.debug(""RangerSystemAccessControl.checkCanImpersonateUser("" + userName + "") denied"");"
222787,./TargetProjects/ranger/plugin-presto/src/main/java/org/apache/ranger/services/presto/client/PrestoClient.java,184,,"        String msgDesc = ""Time Out, Unable to execute SQL ["" + sql"
222788,./TargetProjects/ranger/plugin-presto/src/main/java/org/apache/ranger/services/presto/client/PrestoClient.java,191,,"        String msg = ""Unable to execute SQL ["" + sql + ""]. "";"
222789,./TargetProjects/ranger/plugin-presto/src/test/java/org/apache/ranger/authorization/presto/authorizer/RangerSystemAccessControlTest.java,57,,"  private static final Set<String> allCatalogs = ImmutableSet.of(""open-to-all"", ""all-allowed"", ""alice-catalog"");"
222790,./TargetProjects/ranger/plugin-presto/src/test/java/org/apache/ranger/authorization/presto/authorizer/RangerSystemAccessControlTest.java,60,,"  private static final CatalogSchemaName aliceSchema = new CatalogSchemaName(""alice-catalog"", ""schema"");"
222791,./TargetProjects/ranger/plugin-schema-registry/src/test/java/org/apache/ranger/services/schema/registry/client/AutocompletionAgentTest.java,42,,"                new AutocompletionAgent(""schema-registry"", client);"
222792,./TargetProjects/ranger/plugin-schema-registry/src/test/java/org/apache/ranger/services/schema/registry/client/AutocompletionAgentTest.java,77,,"                groups.add(""testGroup"");"
222793,./TargetProjects/ranger/plugin-schema-registry/src/test/java/org/apache/ranger/services/schema/registry/client/AutocompletionAgentTest.java,94,,"        res = autocompletionAgent.getSchemaGroupList(""tes"", initialGroups);"
222794,./TargetProjects/ranger/plugin-schema-registry/src/test/java/org/apache/ranger/services/schema/registry/client/AutocompletionAgentTest.java,128,,"                if(!schemaGroup.contains(""Group1"")) {"
222795,./TargetProjects/ranger/plugin-schema-registry/src/test/java/org/apache/ranger/services/schema/registry/client/connection/util/SecurityUtilsTest.java,95,,"        conf.put(RANGER_AUTH_TYPE, ""kerberos"");"
222796,./TargetProjects/ranger/plugin-schema-registry/src/test/java/org/apache/ranger/services/schema/registry/client/connection/util/SecurityUtilsTest.java,96,,"        conf.put(""schema-registry.authentication"", ""kerberos"");"
222797,./TargetProjects/ranger/plugin-yarn/src/main/java/org/apache/ranger/authorization/yarn/authorizer/RangerYarnAuthorizer.java,152,,"			LOG.debug(""<== RangerYarnAuthorizer.checkPermission("" + accessType + "", "" + toString(entity) + "", "" + ugi + ""): "" + ret);"
222798,./TargetProjects/ranger/ranger-plugin-classloader/src/main/java/org/apache/ranger/plugin/classloader/RangerPluginClassLoader.java,104,,"            LOG.debug(""<== RangerPluginClassLoader.findClass("" + name + ""): "" + ret);"
222799,./TargetProjects/ranger/ranger-plugin-classloader/src/main/java/org/apache/ranger/plugin/classloader/RangerPluginClassLoaderUtil.java,109,,"								LOG.error(""getFilesInDirectory('"" + dirPath + ""'): "" + dirFile.getAbsolutePath() + "" is not readable!"");"
222800,./TargetProjects/ranger/ranger-presto-plugin-shim/src/main/java/org/apache/ranger/authorization/presto/authorizer/RangerConfig.java,34,,"  @SuppressWarnings(""unused"")"
222801,./TargetProjects/ranger/ranger-tools/src/main/java/org/apache/ranger/policyengine/RangerPluginPerfTester.java,146,,"					""        <property>\n"" +"
222802,./TargetProjects/ranger/ranger-tools/src/main/java/org/apache/ranger/policyengine/RangerPluginPerfTester.java,147,,"					""                <name>"" + propertyPrefix + "".policy.pollIntervalMs</name>\n"" +"
222803,./TargetProjects/ranger/ranger-tools/src/main/java/org/apache/ranger/policyengine/RangerPluginPerfTester.java,148,,"					""                <value>"" + pollingInterval + ""</value>\n"" +"
222804,./TargetProjects/ranger/ranger-tools/src/main/java/org/apache/ranger/policyengine/RangerPluginPerfTester.java,148,,"					""                <value>"" + pollingInterval + ""</value>\n"" +"
222805,./TargetProjects/ranger/ranger-tools/src/main/java/org/apache/ranger/policyengine/RangerPluginPerfTester.java,149,,"					""        </property>\n"" +"
222806,./TargetProjects/ranger/ranger-util/src/main/java/org/apache/ranger/common/RangerVersionInfo.java,55,,"		return version != null ? version.version() : ""Unknown"";"
222807,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/AccessAuditsService.java,81,,"        searchFields.add(new SearchField(""-requestUser"", ""-reqUser"","
222808,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/AssetMgr.java,330,,"				resourceMap.put(""policyStatus"", RangerCommonEnums"
222809,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/AssetMgr.java,338,,"					resourceMap.put(""audit"", 1);"
222810,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/AssetMgr.java,392,,"					resourceMap.put(""encrypt"", 1);"
222811,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/AssetMgr.java,1025,,"                                if (searchCriteria.getParamList().containsKey(""startDate"")) {"
222812,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/AssetMgr.java,1032,,"                                if (searchCriteria.getParamList().containsKey(""endDate"")) {"
222813,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/AssetMgr.java,1039,,"                                if (searchCriteria.getParamList().containsKey(""owner"")) {"
222814,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/AssetMgr.java,1092,,"            searchCriteria.setSortType(""desc"");"
222815,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/AssetMgr.java,1171,,"						if(tempPrevious.contains(""{\""password"") && tempPrevious.contains(""}"")) {"
222816,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/AssetMgr.java,1177,,"						} else if(tempPrevious.contains(""\""password"") && tempPrevious.contains(""}"")) {"
222817,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/KmsKeyMgr.java,119,,"			logger.error(""getKey("" + repoName + "") failed"", e);"
222818,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/KmsKeyMgr.java,129,,"			logger.error(""checkKerberos("" + repoName + "") failed"", e1);"
222819,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/KmsKeyMgr.java,141,,"					uri = uri.concat(""?user.name=""+currentUserLoginId);"
222820,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/KmsKeyMgr.java,143,,"					uri = uri.concat(""?doAs=""+currentUserLoginId);"
222821,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/KmsKeyMgr.java,240,,"				String rollRest = KMS_ROLL_KEY_URI.replaceAll(Pattern.quote(""${alias}""), vXKey.getName());"
222822,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/PolicyRefUpdater.java,165,,"				throw new Exception(resource + "": is not a valid resource-type. policy='""+  policy.getName() + ""' service='""+ policy.getService() + ""'"");"
222823,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/RangerBizUtil.java,246,,"								.setMsgDesc(""You're not permitted to perform """
222824,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/RangerBizUtil.java,247,,"										+ ""the action for resource path : """
222825,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/RangerBizUtil.java,338,,"			logger.debug(""Unable to find session."");"
222826,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/RangerPolicyAdminImpl.java,123,,"                    LOG.debug(""Acquired lock - "" + readLock);"
222827,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/RangerPolicyAdminImpl.java,157,,"            LOG.debug(""<== RangerPolicyAdminImpl.isDelegatedAdminAccessAllowed("" + resource + "", "" + zoneName + "", "" + user + "", "" + userGroups + "", "" + accessTypes + ""): "" + ret);"
222828,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/RangerTagDBRetriever.java,90,,"					LOG.error(""Failed to get tags for service:["" + xService.getName() + ""] in the same thread and using an existing transaction"");"
222829,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/RoleRefUpdater.java,288,,"					LOG.debug(""Group:["" + context.group + ""] creation failed!"");"
222830,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/SecurityZoneRefUpdater.java,142,,"                                        throw restErrorUtil.createRESTException(""Tag Service named: "" + tagService + "" does not exist "","
222831,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/ServiceDBStore.java,590,,"				throw restErrorUtil.createRESTException(""accessType with name: """
222832,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/ServiceDBStore.java,591,,"								+ accessType.getName() + "" does not exists"", MessageEnums.DATA_NOT_FOUND);"
222833,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/ServiceDBStore.java,633,,"				throw restErrorUtil.createRESTException(""resource with name: """
222834,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/ServiceDBStore.java,678,,"			LOG.debug(""<== ServiceDBStore.createServiceDef("" + serviceDef + ""): "" + createdServiceDef);"
222835,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/ServiceDBStore.java,1329,,"			LOG.info(""Found Version Value: `null`, so setting value of version to 1, While updating object, version should not be null."");"
222836,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/ServiceDBStore.java,2436,,"			LOG.debug(""<== ServiceDBStore.getPaginatedPolicies("" + filter + ""): count="" + policyList.getListSize());"
222837,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/ServiceDBStore.java,4300,,"                if (policyConditionType == null && ServiceType.equalsIgnoreCase(""tag"")) {"
222838,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/ServiceDBStore.java,4450,,"			LOG.error(""Service Name or Policy Name is not provided!!"");"
222839,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/ServiceDBStore.java,5074,,"                searchCriteria.setSortType(""asc"");"
222840,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/ServiceDBStore.java,5108,,"                                                LOG.error(""ServiceDBStore.getMetricByType("" + type + ""): Error calculating Metric for usergroup : "" + e.getMessage());"
222841,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/ServiceDBStore.java,5170,,"                            serviceFilter.setSortBy(""serviceId"");"
222842,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/ServiceDBStore.java,5181,,"                                    serviceFilter.setParam(""serviceType"", serviceName);"
222843,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/ServiceMgr.java,300,,"			LOG.debug(""<== ServiceMgr.getRangerServiceByName("" + serviceName + ""): "" + ret);"
222844,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/ServiceMgr.java,370,,"							LOG.debug(""ServiceMgr.getClassForServiceType("" + serviceType + ""): service-class "" + clsName + "" not found in cache"");"
222845,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/ServiceMgr.java,370,,"							LOG.debug(""ServiceMgr.getClassForServiceType("" + serviceType + ""): service-class "" + clsName + "" not found in cache"");"
222846,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/ServiceMgr.java,455,,"							LOG.warn(""getFilesInDirectory('"" + dirPath + ""'): adding "" + dirFile.getAbsolutePath());"
222847,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/SessionMgr.java,150,,"				if (session.getAttribute(""auditLoginId"") == null) {"
222848,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/SessionMgr.java,175,,"			if(httpRequest.getAttribute(""spnegoEnabled"") != null && (boolean)httpRequest.getAttribute(""spnegoEnabled"")){"
222849,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/TagDBStore.java,156,,"			LOG.debug(""<== TagDBStore.updateTagDef("" + tagDef + ""): "" + ret);"
222850,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/TagDBStore.java,406,,"			LOG.debug(""<== TagDBStore.getTagsByType("" + type + ""): count="" + (ret == null ? 0 : ret.size()));"
222851,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/UserMgr.java,266,,"		if(""null"".equalsIgnoreCase(userProfile.getFirstName())){"
222852,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/UserMgr.java,489,,"					""emailAddress"", changeEmail.toString());"
222853,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/UserMgr.java,772,,"			} else if (sortBy.equalsIgnoreCase(""loginId"")) {"
222854,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgr.java,185,,"		if (userName == null || ""null"".equalsIgnoreCase(userName)"
222855,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgr.java,234,,"				createdXUser, ""create"");"
222856,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgr.java,236,,"		String hiddenPassword = PropertiesUtil.getProperty(""ranger.password.hidden"", ""*****"");"
222857,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgr.java,236,,"		String hiddenPassword = PropertiesUtil.getProperty(""ranger.password.hidden"", ""*****"");"
222858,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgr.java,331,,"				logger.info(""Permission assigned to user: ["" + vXUserPermission.getUserName() + ""] For Module: ["" + vXUserPermission.getModuleName() + ""]"");"
222859,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgr.java,488,,"				oldUserProfile, ""update"");"
222860,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgr.java,503,,"			searchCriteria.addParam(""xUserId"", userId);"
222861,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgr.java,540,,"						trxLogList.addAll(xGroupUserService.getTransactionLog(vXGroupUser, ""delete""));"
222862,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgr.java,600,,"			logger.error(""createXUserGroupFromMap("" + vXUser.getName() + "") failed"", excp);"
222863,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgr.java,682,,"		searchCriteria.addParam(""xGroupId"", xGroup.getId());"
222864,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgr.java,1346,,"				vXResponse.setMsgDesc(""Operation"" + "" denied. LoggedInUser="" + (session != null ? session.getXXPortalUser().getId() : ""Not Logged In"")"
222865,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgr.java,1346,,"				vXResponse.setMsgDesc(""Operation"" + "" denied. LoggedInUser="" + (session != null ? session.getXXPortalUser().getId() : ""Not Logged In"")"
222866,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgr.java,1353,,"			vXResponse.setMsgDesc(""Bad Credentials"");"
222867,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgr.java,1466,,"				throw restErrorUtil.create403RESTException(""Permission"""
222868,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgr.java,1681,,"			if(searchCriteria.getParamList() != null && searchCriteria.getParamList().get(""name"") != null){"
222869,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgr.java,2087,,"						logger.warn(""Deleting '"" + AppConstants.getLabelFor_XAPermType(vXPermMap.getPermType()) + ""' permission from policy ID='"" + vXPermMap.getResourceId() + ""' for group '"" + vXPermMap.getGroupName() + ""'"");"
222870,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/biz/XUserMgrBase.java,101,,"				""serverMsg.modelMgrBaseDeleteModel"","
222871,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/AppConstants.java,664,,"			return ""Unknown""; //ASSET_UNKNOWN"
222872,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/AppConstants.java,1046,,"			return ""Ranger Security Zone""; //CLASS_TYPE_RANGER_SECURITY_ZONE"
222873,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/JSONUtil.java,64,,"					""Invalid input data: "" + e.getMessage(),"
222874,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/MapUtil.java,40,,"    	policyExportAuditSyncStatusMessageMap.put(Integer.valueOf(202), ""Error syncing policies"");"
222875,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/PropertiesUtil.java,78,,"	if (propertiesMap!=null && propertiesMap.containsKey(""ranger.truststore.file"")) {"
222876,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/PropertiesUtil.java,86,,"				if(propertiesMap!=null && propertiesMap.containsKey(""ranger.credential.provider.path"")){"
222877,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/PropertiesUtil.java,91,,"						if(trustStorePassword!=null&& !trustStorePassword.trim().isEmpty() && !trustStorePassword.trim().equalsIgnoreCase(""none"")){"
222878,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/PropertiesUtil.java,105,,"	if (propertiesMap!=null && propertiesMap.containsKey(""ranger.keystore.file"")) {"
222879,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/PropertiesUtil.java,188,,"	if(propertiesMap!=null && propertiesMap.containsKey(""ranger.authentication.method"")){"
222880,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/PropertiesUtil.java,246,,"		String sha256PasswordUpdateDisable=""false"";"
222881,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/PropertiesUtil.java,247,,"		if(propertiesMap.containsKey(""ranger.sha256Password.update.disable"")){"
222882,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/PropertiesUtil.java,249,,"			if(sha256PasswordUpdateDisable==null || sha256PasswordUpdateDisable.trim().isEmpty()|| !""true"".equalsIgnoreCase(sha256PasswordUpdateDisable)){"
222883,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/PropertiesUtil.java,257,,"		if(propertiesMap!=null && propertiesMap.containsKey(""ranger.db.ssl.enabled"")){"
222884,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/PropertiesUtil.java,286,,"				String ranger_jpa_jdbc_url=propertiesMap.get(""ranger.jpa.jdbc.url"");"
222885,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/RESTErrorUtil.java,63,,"		logger.info(""Request failed. loginId="""
222886,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/RESTErrorUtil.java,64,,"				+ loginId + "", logMessage="" + gjResponse.getMsgDesc(),"
222887,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/RangerCommonEnums.java,960,,"			return ""None""; //BOOL_NONE"
222888,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/RangerCommonEnums.java,973,,"			return ""Unknown""; //DATA_TYPE_UNKNOWN"
222889,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/RangerConstants.java,89,,"				""Email address not provided""), INVALID_EMAIL_ADDR("
222890,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/RangerConstants.java,96,,"				""xa.validation.userprofile.noemailaddr"","
222891,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/RangerSearchUtil.java,258,,"						""Invalid value for "" + searchField.getClientFieldName(),"
222892,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/RangerSearchUtil.java,264,,"						whereClause.append("" and "")"
222893,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/SearchUtil.java,141,,"					request.getParameter(paramName), ""Invalid value for """
222894,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/SearchUtil.java,412,,"			whereClause.append("" and "").append("
222895,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/ServiceUtil.java,247,,"		toRangerResourceList(resource.getName(), ""path"", Boolean.FALSE, isPathRecursive, ret.getResources());"
222896,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/ServiceUtil.java,248,,"		toRangerResourceList(resource.getTables(), ""table"", isTableExcludes, Boolean.FALSE, ret.getResources());"
222897,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/ServiceUtil.java,249,,"		toRangerResourceList(resource.getColumnFamilies(), ""column-family"", Boolean.FALSE, Boolean.FALSE, ret.getResources());"
222898,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/ServiceUtil.java,250,,"		toRangerResourceList(resource.getColumns(), ""column"", isColumnExcludes, Boolean.FALSE, ret.getResources());"
222899,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/ServiceUtil.java,251,,"		toRangerResourceList(resource.getDatabases(), ""database"", Boolean.FALSE, Boolean.FALSE, ret.getResources());"
222900,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/ServiceUtil.java,252,,"		toRangerResourceList(resource.getUdfs(), ""udf"", Boolean.FALSE, Boolean.FALSE, ret.getResources());"
222901,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/ServiceUtil.java,253,,"		toRangerResourceList(resource.getTopologies(), ""topology"", Boolean.FALSE, Boolean.FALSE, ret.getResources());"
222902,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/ServiceUtil.java,254,,"		toRangerResourceList(resource.getServices(), ""service"", Boolean.FALSE, Boolean.FALSE, ret.getResources());"
222903,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/ServiceUtil.java,255,,"		toRangerResourceList(resource.getHiveServices(), ""hiveservice"", Boolean.FALSE, Boolean.FALSE, ret.getResources());"
222904,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/ServiceUtil.java,301,,"				if(StringUtils.equalsIgnoreCase(accessType, ""Admin"")) {"
222905,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/ServiceUtil.java,733,,"		Object statusObj = searchCriteria.getParamValue(""status"");"
222906,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/ServiceUtil.java,1350,,"			throw restErrorUtil.createRESTException(""Unauthorized access."","
222907,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/common/ServiceUtil.java,1358,,"			LOG.error(""Requested Service not found. serviceName="" + serviceName);"
222908,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/credentialapi/CredentialReader.java,38,,"			  String crendentialProviderPrefixJceks=JavaKeyStoreProvider.SCHEME_NAME + ""://file"";"
222909,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/db/XXDataHistDao.java,45,,"					.setParameter(""classType"", classType)"
222910,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/db/XXGlobalStateDao.java,45,,"            logger.error(""Invalid name for state:["" + stateName +""]"");"
222911,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/db/XXGroupPermissionDao.java,49,,"							.setParameter(""moduleId"", moduleId).getResultList();"
222912,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/db/XXPolicyDao.java,64,,"					.setParameter(""polName"", polName).setParameter(""serviceId"", serviceId).setParameter(""zoneId"", zoneId)"
222913,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/db/XXPolicyDao.java,126,,"					.setParameter(""serviceName"", serviceName)"
222914,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/db/XXRMSResourceMappingDao.java,66,,"				.setParameter(""llResourceId"", llResourceId)"
222915,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/db/XXRMSServiceResourceDao.java,68,,"						.setParameter(""serviceId"", serviceId).getResultList();"
222916,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/db/XXResourceDao.java,66,,"						.setParameter(""assetId"", assetId)"
222917,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/db/XXServiceResourceDao.java,59,,"					.setParameter(""serviceId"", serviceId).getResultList();"
222918,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/db/XXServiceResourceElementValueDao.java,50,,"	@SuppressWarnings(""unchecked"")"
222919,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/db/XXUserPermissionDao.java,48,,"							.setParameter(""moduleId"", moduleId)"
222920,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/db/XXUserPermissionDao.java,60,,"			logger.debug(""ResourceUserId not provided."");"
222921,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/PatchAssignSecurityZonePersmissionToAdmin_J10026.java,127,,"					logger.info(""Security Zone Permissions assigned to ""+countUserPermissionUpdated + "" of total ""+loginIdList.size());"
222922,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/PatchForAtlasServiceDefUpdate_J10013.java,123,,"		LOG.info(""Renaming service-def "" + serviceDefName + "" as "" + serviceDefNewName);"
222923,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/PatchForKafkaServiceDefUpdate_J10033.java,332,,"								+ xxPolicy.getName() + ""' service='"" + xxPolicy.getService() + ""'"");"
222924,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/PatchForMigratingOldRegimePolicyJson_J10046.java,236,,"			throw new Exception(""Failed to convert policy to json string. Policy: [id="" +  policy.getId() + ""; name="" + policy.getName() + ""; serviceType="" + serviceType + ""]"");"
222925,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/PatchForUpdatingPolicyJson_J10019.java,256,,"			throw new Exception(""Failed to convert policy to json string. Policy: [id="" +  policy.getId() + ""; name="" + policy.getName() + ""; serviceType="" + serviceType + ""]"");"
222926,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/cliutil/ChangePasswordUtil.java,77,,"					System.out.println(""Invalid login ID. Exiting!!!"");"
222927,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/cliutil/ChangePasswordUtil.java,82,,"					System.out.println(""Invalid current password. Exiting!!!"");"
222928,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/cliutil/ChangePasswordUtil.java,87,,"					System.out.println(""Invalid new password. Exiting!!!"");"
222929,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/cliutil/ChangePasswordUtil.java,141,,"							logger.info(""User '"" + userLoginId + ""' Password updated sucessfully."");"
222930,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/cliutil/ChangePasswordUtil.java,141,,"							logger.info(""User '"" + userLoginId + ""' Password updated sucessfully."");"
222931,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/cliutil/ChangePasswordUtil.java,144,,"									""Skipping default password change request as provided password doesn't match with existing password."");"
222932,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/cliutil/ChangePasswordUtil.java,175,,"						System.out.println(""Invalid user password"");"
222933,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/cliutil/DbToSolrMigrationUtil.java,177,,"								logger.error(""Error while writing audit log id '""+xXAccessAudit.getId()+""' to Solr."", e);"
222934,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/cliutil/DbToSolrMigrationUtil.java,177,,"								logger.error(""Error while writing audit log id '""+xXAccessAudit.getId()+""' to Solr."", e);"
222935,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/cliutil/MetricUtil.java,139,,"			searchCriteria.setSortType(""asc"");			"
222936,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/cliutil/MetricUtil.java,248,,"						serviceFilter.setSortBy(""serviceId"");"
222937,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/cliutil/MetricUtil.java,259,,"								serviceFilter.setParam(""serviceType"", serviceName);"
222938,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/patch/cliutil/RoleBasedUserSearchUtil.java,169,,"	                    		System.out.println(entry.getValue() + "" : "" + entry.getKey());"
222939,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/AssetREST.java,131,,"	@Produces({ ""application/xml"", ""application/json"" })"
222940,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/AssetREST.java,131,,"	@Produces({ ""application/xml"", ""application/json"" })"
222941,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/AssetREST.java,132,,"	@PreAuthorize(""@rangerPreAuthSecurityHandler.isAPIAccessible(\"""" + RangerAPIList.GET_X_ASSET + ""\"")"")"
222942,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/AssetREST.java,132,,"	@PreAuthorize(""@rangerPreAuthSecurityHandler.isAPIAccessible(\"""" + RangerAPIList.GET_X_ASSET + ""\"")"")"
222943,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/AssetREST.java,143,,"			logger.debug(""<== AssetREST.getXAsset("" + id + ""): "" + ret);"
222944,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/AssetREST.java,571,,"		searchUtil.extractDate(request, searchCriteria, ""startDate"","
222945,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/AssetREST.java,573,,"		searchUtil.extractDate(request, searchCriteria, ""endDate"","
222946,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/AssetREST.java,599,,"		searchUtil.extractDate(request, searchCriteria, ""startDate"", ""Trasaction date since"", ""MM/dd/yyyy"");"
222947,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/AssetREST.java,697,,"			 logger.error( HttpServletResponse.SC_BAD_REQUEST + ""Bad Request parameter"");"
222948,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/PublicAPIs.java,82,,"	@Produces({ ""application/json"", ""application/xml"" })"
222949,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/PublicAPIs.java,82,,"	@Produces({ ""application/json"", ""application/xml"" })"
222950,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/PublicAPIsv2.java,93,,"	public void deleteSecurityZone(@PathParam(""name"") String zoneName) {"
222951,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/PublicAPIsv2.java,130,,"	@Produces({ ""application/json"", ""application/xml"" })"
222952,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/PublicAPIsv2.java,130,,"	@Produces({ ""application/json"", ""application/xml"" })"
222953,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/PublicAPIsv2.java,151,,"	@PreAuthorize(""hasRole('ROLE_SYS_ADMIN')"")"
222954,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/PublicAPIsv2.java,239,,"	@PreAuthorize(""@rangerPreAuthSecurityHandler.isAPISpnegoAccessible()"")"
222955,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/PublicAPIsv2.java,373,,"	public RangerPolicy getPolicyByName(@PathParam(""servicename"") String serviceName,"
222956,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/PublicAPIsv2.java,408,,"													 @DefaultValue("""") @QueryParam(""serviceName"") String serviceName,"
222957,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/RoleREST.java,135,,"    public RangerRole createRole(@QueryParam(""serviceName"") String serviceName,  RangerRole role"
222958,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/RoleREST.java,156,,"            LOG.error(""createRole("" + role + "") failed"", excp);"
222959,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/RoleREST.java,412,,"            LOG.debug(""==> addUsersAndGroups(id="" + roleId + "", users="" + Arrays.toString(users.toArray()) + "", groups="" + Arrays.toString(groups.toArray()) + "", isAdmin="" + isAdmin + "")"");"
222960,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/RoleREST.java,412,,"            LOG.debug(""==> addUsersAndGroups(id="" + roleId + "", users="" + Arrays.toString(users.toArray()) + "", groups="" + Arrays.toString(groups.toArray()) + "", isAdmin="" + isAdmin + "")"");"
222961,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/RoleREST.java,412,,"            LOG.debug(""==> addUsersAndGroups(id="" + roleId + "", users="" + Arrays.toString(users.toArray()) + "", groups="" + Arrays.toString(groups.toArray()) + "", isAdmin="" + isAdmin + "")"");"
222962,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/RoleREST.java,576,,"    @Consumes({ ""application/json"", ""application/xml"" })"
222963,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/RoleREST.java,576,,"    @Consumes({ ""application/json"", ""application/xml"" })"
222964,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/RoleREST.java,676,,"            LOG.debug(""==> revokeRole(serviceName="" + serviceName + "", users="" + Arrays.toString(revokeRoleRequest.getUsers().toArray()) + "", roles="" + Arrays.toString(revokeRoleRequest.getRoles().toArray()) + "", isAdmin="" + revokeRoleRequest.getGrantOption() + "")"");"
222965,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/RoleREST.java,1005,,"                LOG.debug(""==> ensureRoleAccess(): user ""+ username + "" has permission for role "" + role.getName());"
222966,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/SecurityZoneREST.java,125,,"            LOG.error(""createSecurityZone("" + securityZone + "") failed"", excp);"
222967,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/SecurityZoneREST.java,324,,"					throwRestError(""User : "" + userName"
222968,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,167,,"	final static public String PARAM_SERVICE_NAME     = ""serviceName"";"
222969,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,170,,"	final static public String PARAM_ZONE_NAME        = ""zoneName"";"
222970,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,270,,"	@Produces({ ""application/json"", ""application/xml"" })"
222971,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,270,,"	@Produces({ ""application/json"", ""application/xml"" })"
222972,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,271,,"	@PreAuthorize(""@rangerPreAuthSecurityHandler.isAPIAccessible(\"""" + RangerAPIList.CREATE_SERVICE_DEF + ""\"")"")"
222973,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,271,,"	@PreAuthorize(""@rangerPreAuthSecurityHandler.isAPIAccessible(\"""" + RangerAPIList.CREATE_SERVICE_DEF + ""\"")"")"
222974,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,294,,"			bizUtil.hasAdminPermissions(""Service-Def"");"
222975,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,301,,"			LOG.error(""createServiceDef("" + serviceDef + "") failed"", excp);"
222976,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,309,,"			LOG.debug(""<== ServiceREST.createServiceDef("" + serviceDef + ""): "" + ret);"
222977,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,394,,"				if (!StringUtils.isEmpty(forceDeleteStr) && ""true"".equalsIgnoreCase(forceDeleteStr)) {"
222978,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,458,,"			throw restErrorUtil.createRESTException(HttpServletResponse.SC_NOT_FOUND, ""Not found"", true);"
222979,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,584,,"			LOG.debug(""==> ServiceREST.getPoliciesForResource(service-type="" + serviceDefName + "", service-name="" + serviceName + "")"");"
222980,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,738,,"				bizUtil.hasAdminPermissions(""Services"");"
222981,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,2228,,"										LOG.error(""Service Name or Policy Name is not provided!!"");"
222982,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,2401,,"										LOG.debug(""Policy "" + policy.getName() + "" created successfully."");"
222983,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,2918,,"			LOG.debug(""<== ServiceREST.getServicePolicies("" + serviceId + ""): count="""
222984,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/ServiceREST.java,3820,,"					throw restErrorUtil.createGrantRevokeRESTException(""Grantor user "" + grantor + "" doesn't exist"");"
222985,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/TagREST.java,116,,"    @Produces({ ""application/json"", ""application/xml"" })"
222986,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/TagREST.java,116,,"    @Produces({ ""application/json"", ""application/xml"" })"
222987,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/TagREST.java,117,,"    @PreAuthorize(""hasRole('ROLE_SYS_ADMIN')"")"
222988,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/TagREST.java,132,,"                throw new Exception(""tag-definition with Id "" + exist.getId() + "" already exists"");"
222989,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/TagREST.java,135,,"            LOG.error(""createTagDef("" + tagDef + "") failed"", excp);"
222990,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/TagREST.java,141,,"            LOG.debug(""<== TagREST.createTagDef("" + tagDef + "", "" + updateIfExists + ""): "" + ret);"
222991,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/TagREST.java,149,,"    @Path(TagRESTConstants.TAGDEF_RESOURCE + ""{id}"")"
222992,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/TagREST.java,201,,"    @Path(TagRESTConstants.TAGDEF_RESOURCE + ""guid/{guid}"")"
222993,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/TagREST.java,204,,"    public void deleteTagDefByGuid(@PathParam(""guid"") String guid) {"
222994,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/TagREST.java,245,,"            throw restErrorUtil.createRESTException(HttpServletResponse.SC_NOT_FOUND, ""Not found"", true);"
222995,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/TagREST.java,711,,"    public void deleteServiceResourceByGuid(@PathParam(""guid"") String guid, @DefaultValue(""false"") @QueryParam(""deleteReferences"") boolean deleteReferences) {"
222996,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/TagREST.java,786,,"    public List<RangerServiceResource> getServiceResourcesByService(@PathParam(""serviceName"") String serviceName) {"
222997,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/UserREST.java,114,,"	@Produces({ ""application/xml"", ""application/json"" })"
222998,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/UserREST.java,114,,"	@Produces({ ""application/xml"", ""application/json"" })"
222999,./TargetProjects/ranger/security-admin/src/main/java/org/apache/ranger/rest/UserREST.java,115,,"	@PreAuthorize(""@rangerPreAuthSecurityHandler.isAPIAccessible(\"""" + RangerAPIList.SEARCH_USERS + ""\"")"")"
