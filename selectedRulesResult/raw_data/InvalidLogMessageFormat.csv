Detection ID,Path,Start Line Num,End Line Num,Code
1,./TargetProjects/activemq-artemis/tests/activemq5-unit-tests/src/main/java/org/apache/activemq/broker/BrokerService.java,177,,"      LOG.info(""Apache ActiveMQ Artemis Wrapper {} ({}, {}) is starting"", new Object[]{getBrokerVersion(), getBrokerName(), brokerId});"
2,./TargetProjects/activemq-artemis/tests/activemq5-unit-tests/src/main/java/org/apache/activemq/broker/BrokerService.java,187,,"      LOG.info(""Apache ActiveMQ Artemis Wrapper {} ({}, {}) started"", new Object[]{getBrokerVersion(), getBrokerName(), brokerId});"
3,./TargetProjects/activemq-artemis/tests/activemq5-unit-tests/src/main/java/org/apache/activemq/broker/BrokerService.java,196,,"      LOG.info(""Apache ActiveMQ Artemis{} ({}, {}) is shutting down"", new Object[]{getBrokerVersion(), getBrokerName(), brokerId});"
4,./TargetProjects/activemq-artemis/tests/activemq5-unit-tests/src/main/java/org/apache/activemq/broker/BrokerService.java,203,,"      LOG.info(""Apache ActiveMQ Artemis {} ({}, {}) is shutdown"", new Object[]{getBrokerVersion(), getBrokerName(), brokerId});"
5,./TargetProjects/activemq-artemis/tests/activemq5-unit-tests/src/test/java/org/apache/activemq/broker/NioQueueSubscriptionTest.java,108,,"         LOG.error("">>>> "" + exceptions.size() + "" exceptions like"", exceptions.values().iterator().next());"
6,./TargetProjects/activemq-artemis/tests/activemq5-unit-tests/src/test/java/org/apache/activemq/transport/failover/FailoverTransactionTest.java,988,,"         LOG.info(""commit failed, consumer2 should get it"", exceptions.get(0));"
7,./TargetProjects/activemq-artemis/tests/activemq5-unit-tests/src/test/java/org/apache/activemq/usecases/DurableSubscriptionOffline4Test.java,59,,"      LOG.info("">>>> running {} with keepDurableSubsActive: {}, journalMaxFileLength"", testName.getMethodName(), this.keepDurableSubsActive, journalMaxFileLength);"
8,./TargetProjects/activemq-artemis/tests/artemis-test-support/src/main/java/org/apache/activemq/transport/amqp/client/AmqpSender.java,501,,"      LOG.trace(""Sender {} flow update, credit = {}"", getEndpoint().getCredit());"
9,./TargetProjects/aries/application/application-install/src/main/java/org/apache/aries/application/install/EBAInstaller.java,67,,"    LOGGER.debug(""created app from {} : {} {} with contents {}"", new Object[] {"
10,./TargetProjects/aries/application/application-install/src/main/java/org/apache/aries/application/install/EBAInstaller.java,73,,"    LOGGER.debug(""installed app {} {} state: {}"", new Object[] {"
11,./TargetProjects/aries/application/application-install/src/main/java/org/apache/aries/application/install/EBAInstaller.java,79,,"    LOGGER.debug(""started app {} {} state: {}"", new Object[] {"
12,./TargetProjects/aries/application/application-install/src/main/java/org/apache/aries/application/install/EBAInstaller.java,95,,"    LOGGER.debug(""uninstalling {} {} "", new Object[] {"
13,./TargetProjects/aries/application/application-install/src/main/java/org/apache/aries/application/install/EBAInstaller.java,105,,"    LOGGER.debug(""uninstalled {} {} state: {}"", new Object[] {"
14,./TargetProjects/aries/application/application-management/src/main/java/org/apache/aries/application/management/impl/AriesApplicationImpl.java,138,,"      _logger.warn(""APPMANAGEMENT0001E"", tempDir);"
15,./TargetProjects/aries/application/application-management/src/main/java/org/apache/aries/application/management/impl/AriesApplicationManagerImpl.java,186,,"                _logger.error(""APPMANAGEMENT0004E"", new Object[]{f.getName(), appName, cx});"
16,./TargetProjects/aries/application/application-management/src/main/java/org/apache/aries/application/management/impl/AriesApplicationManagerImpl.java,230,,"      _logger.error (""APPMANAGEMENT0006E"", new Object []{appPath, iox});"
17,./TargetProjects/aries/application/application-management/src/main/java/org/apache/aries/application/management/impl/AriesApplicationManagerImpl.java,399,,"        _logger.error (""APPMANAGEMENT0007E"", new Object[]{source.getName(), iox});"
18,./TargetProjects/aries/application/application-utils/src/main/java/org/apache/aries/application/impl/ApplicationMetadataImpl.java,121,,"        _logger.warn(""APPUTILS0013E"", new Object[] {s, appSymbolicName});"
19,./TargetProjects/aries/application/application-utils/src/main/java/org/apache/aries/application/impl/ApplicationMetadataImpl.java,132,,"        _logger.warn(""APPUTILS0014E"", new Object[] {s, appSymbolicName});"
20,./TargetProjects/aries/blueprint/blueprint-cm/src/main/java/org/apache/aries/blueprint/compendium/cm/CmManagedProperties.java,235,,"                                    LOGGER.debug(""Setter can not be invoked: "" + method, getRealCause(t));"
21,./TargetProjects/aries/blueprint/blueprint-cm/src/main/java/org/apache/aries/blueprint/compendium/cm/CmManagedProperties.java,260,,"                    LOGGER.warn(""Unable to call method "" + method + "" on bean "" + beanName, getRealCause(t));"
22,./TargetProjects/aries/blueprint/blueprint-cm/src/main/java/org/apache/aries/blueprint/compendium/cm/CmProperties.java,135,,"                LOGGER.debug(""Service properties updated for service={} / pid={}, {}"", new Object[]{serviceId, persistentId, props});"
23,./TargetProjects/aries/blueprint/blueprint-cm/src/main/java/org/apache/aries/blueprint/compendium/cm/CmProperties.java,137,,"                LOGGER.debug(""Service properties updated for pid={}, {}"", new Object[]{persistentId, props});"
24,./TargetProjects/aries/blueprint/blueprint-cm/src/main/java/org/apache/aries/blueprint/compendium/cm/CmProperties.java,161,,"        LOGGER.debug(""Service properties initialized for service={} / pid={}, {}"", new Object[] {serviceId, persistentId, props});"
25,./TargetProjects/aries/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BeanRecipe.java,755,,"            LOGGER.error(""An exception occurred while calling the destroy method of the blueprint bean  in bundle {}/{}."", getName(), b.getSymbolicName(), b.getVersion(), getRealCause(e));"
26,./TargetProjects/aries/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintContainerImpl.java,949,,"        LOGGER.debug(""Blueprint container {} quiesced"", getBundle().getSymbolicName(), getBundle().getVersion());"
27,./TargetProjects/aries/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ServiceRecipe.java,189,,"        LOGGER.debug(""Registering service {} with interfaces {} and properties {}"","
28,./TargetProjects/aries/blueprint/blueprint-noosgi/src/main/java/org/apache/aries/blueprint/container/BeanRecipe.java,886,,"            LOGGER.error(""An exception occurred while calling the destroy method of the blueprint bean "" + getName() + ""."", getRealCause(e));"
29,./TargetProjects/aries/ejb/ejb-modeller/src/main/java/org/apache/aries/ejb/modelling/impl/EJBModeller.java,48,,"    logger.debug(""modelServices"", new Object[] {manifest, bundle});"
30,./TargetProjects/aries/ejb/ejb-modeller/src/main/java/org/apache/aries/ejb/modelling/impl/EJBModeller.java,66,,"    logger.debug(""ejbServices"", ejbServices);"
31,./TargetProjects/aries/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AbstractAction.java,74,,"				logger.debug(""Done waiting for subsystem {} in state {} to change from state {}"", new Object[]{target.getSymbolicName(), target.getState(), fromState});"
32,./TargetProjects/aries/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Activator.java,113,,"		logger.debug(LOG_ENTRY, ""getSubsystemServiceRegistrar"");"
33,./TargetProjects/aries/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Activator.java,130,,"		logger.debug(LOG_EXIT, ""start"");"
34,./TargetProjects/aries/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Activator.java,139,,"		logger.debug(LOG_EXIT, ""stop"");"
35,./TargetProjects/aries/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/util/RepositoryGenerator.java,235,,"                LOGGER.warn(""Unable to resolve subsystem content {} subsystem resource {} because of unsatisfied requirement {}"", "
36,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/catalog/internal/CatalogBundleLoader.java,96,,"            LOG.debug(""Catalog load, found catalog BOM in {} {} {}"", CatalogUtils.bundleIds(bundle));"
37,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/catalog/internal/CatalogBundleLoader.java,133,,"            LOG.debug(""No BOM found in {} {} {}"", CatalogUtils.bundleIds(bundle));"
38,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/config/external/vault/VaultAppIdExternalConfigSupplier.java,58,,"        LOG.info(""Config supplier named {} using Vault at {} appID {} userID {} path {}"", new Object[] {"
39,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/effector/CompositeEffector.java,128,,"            LOG.info(""{} invoking effector on {}, effector={}, parameters={}"","
40,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/effector/Effectors.java,160,,"                    log.debug(""Replacing invocation of {} on {} with {} which is the impl defined at that entity"", new Object[] { eff, entity, eff2 });"
41,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/effector/Effectors.java,163,,"                    log.warn(""Effector {} defined on {} has no body; invoking caller-supplied {} instead"", new Object[] { eff2, entity, eff });"
42,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/effector/Effectors.java,167,,"            log.debug(""Effector {} does not exist on {}; attempting to invoke anyway"", new Object[] { eff, entity });"
43,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/effector/ProxyEffector.java,88,,"            LOG.debug(""{} forwarding effector invocation on {} to entity={}, effector={}, parameters={}"","
44,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/AbstractEntity.java,365,,"            LOG.warn(""bulk/flag configuration being made to {} after deployment: may not be supported in future versions ({})"", "
45,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/AbstractEntity.java,844,,"                    LOG.info(""Adding location {} to entity {}, which is already owned by another entity {}. "" +"
46,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/AbstractEntity.java,1139,,"                LOG.debug(""configuration being made to {} after deployment: {} = {}; change may not be visible in other contexts"", "
47,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/EntityDynamicType.java,308,,"                        LOG.trace(""multiple definitions for effector {} on {}; preferring {} from {} to {} from {}"", new Object[] {"
48,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/EntityDynamicType.java,334,,"                        LOG.trace(""multiple definitions for effector {} on {}; preferring {} from {} to {} from {}"", new Object[] {"
49,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/EntityDynamicType.java,368,,"                            LOG.trace(""multiple definitions for config sensor {} on {}; preferring {} from {} to {} from {}"", new Object[] {"
50,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/EntityDynamicType.java,371,,"                            LOG.warn(""multiple definitions for sensor {} on {}; preferring {} from {} to {} from {}"", new Object[] {"
51,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/internal/ConfigUtilsInternal.java,149,,"                    if (LOG.isDebugEnabled()) LOG.debug(""multiple definitions for config key {} on {}; preferring that in sub-class: {} to {}"", new Object[] {"
52,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/internal/ConfigUtilsInternal.java,152,,"                    LOG.warn(""multiple definitions for config key {} on {}; preferring {} to {}"", new Object[] {"
53,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/lifecycle/ServiceStateLogic.java,633,,"            if (log.isTraceEnabled()) log.trace(""{} updating map sensor {} with {}"", new Object[] { this, sensor, value });"
54,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/AttributePollHandler.java,167,,"                        log.debug(""Trace for ""+type+"" reading ""+getBriefDescription()+"": ""+val, (Throwable)val);"
55,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/AttributePollHandler.java,183,,"                        log.debug(""Trace for ""+type+"" reading ""+getBriefDescription()+"": ""+val, (Throwable)val);"
56,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/AttributePollHandler.java,186,,"                        log.debug(""Recurring {} reading {} in {} (still in grace period): {}"", new Object[] {type, this, getBriefDescription(), val});"
57,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/Poller.java,130,,"        if (log.isDebugEnabled()) log.debug(""Starting poll for {} (using {})"", new Object[] {entity, this});"
58,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/Poller.java,171,,"                if (log.isDebugEnabled()) log.debug(""Activating poll (but leaving off, as period {}) for {} (using {})"", new Object[] {pollJob.pollPeriod, entity, this});"
59,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/Poller.java,181,,"        if (log.isDebugEnabled()) log.debug(""Stopping poll for {} (using {})"", new Object[] {entity, this});"
60,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/location/AbstractLocation.java,581,,"                    LOG.error(""Location extension can not be loaded (rethrowing): {} {} {}"", new Object[] {extension.getKey(), extension.getValue(), e});"
61,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/location/LocationConfigUtils.java,324,,"                    log.debug(""Encountered error handling key ""+label+"": ""+e, e);"
62,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/location/LocationPropertiesFromBrooklynProperties.java,220,,"                LOG.warn(""Deprecated key {}, transformed to {}; will not be supported in future versions"", new Object[] {key, transformedKey});"
63,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/location/access/BrooklynAccessUtils.java,81,,"                    log.debug(""BrooklynAccessUtils found port-forwarded address {} for entity {}, port {}, using machine {}"","
64,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/location/access/BrooklynAccessUtils.java,97,,"                        log.debug(""BrooklynAccessUtils created port-forwarded address {} for entity {}, port {}, using {}"","
65,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/ha/HighAvailabilityManagerImpl.java,749,,"        if (LOG.isDebugEnabled()) LOG.debug(""Healthy-master check result={}; masterId={}; masterMemento={}; ourMemento={}"","
66,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/ha/HighAvailabilityManagerImpl.java,827,,"            LOG.debug(""Management node master-change required: newMaster={}; oldMaster={}; plane={}, self={}; heartbeatTimeout={}"", "
67,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/ha/ManagementPlaneSyncRecordPersisterToObjectStore.java,216,,"        LOG.trace(""Loading nodes from {}; {} nodes."","
68,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/EffectorUtils.java,264,,"            if (log.isDebugEnabled()) log.debug(""Invoking effector {} on {}"", new Object[] {name, entity});"
69,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/EffectorUtils.java,265,,"            if (log.isTraceEnabled()) log.trace(""Invoking effector {} on {} with args {}"", new Object[] {name, entity, Sanitizer.sanitize(args)});"
70,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/EffectorUtils.java,330,,"        if (log.isDebugEnabled()) log.debug(""Invoking-async effector {} on {}"", new Object[] { name, entity });"
71,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/EffectorUtils.java,331,,"        if (log.isTraceEnabled()) log.trace(""Invoking-async effector {} on {} with args {}"", new Object[] { name, entity, Sanitizer.sanitize(parameters) });"
72,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalEntityManager.java,713,,"                log.warn(""Activating local management for {} due to effector invocation on {}: {}"", new Object[]{rootUnmanaged, entity, context});"
73,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalEntityManager.java,759,,"                log.warn(""{} redundant call to pre-start management of entity {}, mode {}; ignoring"", new Object[] { this, e, mode });"
74,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalEntityManager.java,765,,"            if (log.isTraceEnabled()) log.trace(""{} pre-start management of entity {}, mode {}"", "
75,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalEntityManager.java,885,,"                log.error(""{} call to stop management of entity {} removed different entity {}"", new Object[] { this, e, old });"
76,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalEntityManager.java,903,,"                    log.debug(""Unmanaging entity {}, which contains a location {} owned by another entity {}. "" +"
77,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalLocationManager.java,429,,"            log.error(""{} call to stop management of location {} removed different location {}; ignoring"", new Object[] { this, loc, old });"
78,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalManagementContext.java,204,,"            log.warn(""Management plane ID at {} {} changed from {} to {} (can happen on concurrent startup of multiple nodes)"", new Object[] { getManagementNodeId(), getHighAvailabilityManager().getNodeState(), managementPlaneId, newPlaneId });"
79,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalManagementContext.java,205,,"            log.debug(""Management plane ID at {} {} changed from {} to {} (can happen on concurrent startup of multiple nodes)"", new Object[] {getManagementNodeId(), getHighAvailabilityManager().getNodeState(), managementPlaneId, newPlaneId, new RuntimeException(""Stack trace for setManagementPlaneId"")});"
80,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalSubscriptionManager.java,143,,"        if (LOG.isDebugEnabled()) LOG.debug(""Creating subscription {} for {} on {} {} in {}"", new Object[] {s.id, s.subscriber, producer, sensor, this});"
81,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalSubscriptionManager.java,172,,"            if (LOG.isTraceEnabled()) LOG.trace(""sending initial value of {} -> {} to {}"", new Object[] {s.producer, s.sensor, s});"
82,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalSubscriptionManager.java,195,,"                        if (LOG.isDebugEnabled()) LOG.debug(""skipping initial value delivery of {} -> {} to {} as value changed from {} to {}"", new Object[] {s.producer, s.sensor, s, lastVal, val});"
83,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalSubscriptionManager.java,269,,"            if (LOG.isTraceEnabled()) LOG.trace(""sending {}, {} to {}"", new Object[] {event.getSensor().getName(), event, join(subs, "","")});"
84,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalUsageManager.java,237,,"        log.debug(""Storing application lifecycle usage event: application {} in state {}"", new Object[] {app, state});"
85,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalUsageManager.java,312,,"            log.trace(""Not recording location lifecycle usage event for {} in state {}, because no caller context"", new Object[] {loc, state});"
86,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalUsageManager.java,317,,"        log.debug(""Storing location lifecycle usage event: location {} in state {}; caller context {}"", new Object[] {loc, state, caller});"
87,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/ManagementNodeStateListenerManager.java,118,,"                LOG.debug(""Notifying {} listener(s) of management-node state changed to {}"", new Object[] {listeners.size(), state});"
88,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/ManagementNodeStateListenerManager.java,126,,"                                    LOG.info(""Not notifying listener {} of management-node state {} because did not finish rebinding"", "
89,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/persist/BrooklynMementoPersisterToObjectStore.java,309,,"        LOG.debug(""Loaded rebind lists; took {}: {} entities, {} locations, {} policies, {} enrichers, {} feeds, {} catalog items, {} bundles; from {}"", new Object[]{"
90,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/persist/BrooklynMementoPersisterToObjectStore.java,365,,"            LOG.debug(""Loaded rebind raw data; took {}; {} entities, {} locations, {} policies, {} enrichers, {} feeds, {} catalog items, {} bundles, from {}"", new Object[]{"
91,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/persist/BrooklynMementoPersisterToObjectStore.java,459,,"            LOG.debug(""Loaded rebind manifests; took {}: {} entities, {} locations, {} policies, {} enrichers, {} feeds, {} catalog items, {} bundles; from {}"", new Object[]{"
92,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/persist/BrooklynMementoPersisterToObjectStore.java,515,,"            LOG.debug(""Loaded rebind mementos; took {}: {} entities, {} locations, {} policies, {} enrichers, {} feeds, {} catalog items, {} bundles, from {}"", new Object[]{"
93,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/persist/BrooklynMementoPersisterToObjectStore.java,658,,"        if (LOG.isDebugEnabled()) LOG.debug(""Checkpointed ""+(previouslyQueued ? ""previously queued "" : """")+""delta of memento in {}: """
94,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/persist/FileBasedObjectStore.java,364,,"            log.trace(""Completly moved from {} to {} completed"", new Object[] { srcFile, destFile });"
95,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/AbstractBrooklynObjectRebindSupport.java,95,,"                    LOG.warn(""Item not found; discarding item {} relation {} of entity {}({})"","
96,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicEntityRebindSupport.java,128,,"                LOG.warn(""Policy not found; discarding policy {} of entity {}({})"","
97,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicEntityRebindSupport.java,146,,"                LOG.warn(""Enricher not found; discarding enricher {} of entity {}({})"","
98,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicEntityRebindSupport.java,171,,"                LOG.warn(""Feed not found; discarding feed {} of entity {}({})"","
99,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicEntityRebindSupport.java,185,,"                        LOG.warn(""Entity not found; discarding member {} of group {}({})"","
100,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicEntityRebindSupport.java,205,,"                LOG.warn(""Entity not found; discarding child {} of entity {}({})"","
101,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicEntityRebindSupport.java,216,,"            LOG.warn(""Entity not found; discarding parent {} of entity {}({}), so entity will be orphaned and unmanaged"","
102,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicEntityRebindSupport.java,227,,"                LOG.warn(""Location not found; discarding location {} of entity {}({})"","
103,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicEntityRebindSupport.java,255,,"        LOG.warn(""Entity {} being marked as on-fire because it was in state {} on rebind; indicators={}"", new Object[] {entity, expectedState, entity.getAttribute(Attributes.SERVICE_NOT_UP_INDICATORS)});"
104,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicLocationRebindSupport.java,140,,"                LOG.warn(""Ignoring child {} of location {}({}), as cannot be found"", new Object[] {childId, memento.getType(), memento.getId()});"
105,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicLocationRebindSupport.java,150,,"            LOG.warn(""Ignoring parent {} of location {}({}), as cannot be found"", new Object[] {memento.getParent(), memento.getType(), memento.getId()});"
106,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/PeriodicDeltaChangeListener.java,468,,"            if (LOG.isDebugEnabled() && shouldLogCheckpoint()) LOG.debug(""Checkpointing delta of memento: """
107,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/PeriodicDeltaChangeListener.java,478,,"                if (LOG.isTraceEnabled()) LOG.trace(""Checkpointing delta of memento with references: """
108,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/RebindManagerImpl.java,200,,"        LOG.debug(""{} initialized, settings: policies={}, enrichers={}, feeds={}, catalog={}"","
109,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/transformer/impl/DeleteOrphanedStateTransformer.java,94,,"        LOG.info(""Deleting {} orphaned location{} (of {}): {}"", new Object[] {locsToDelete.size(), Strings.s(locsToDelete.size()), input.getLocations().size(), locsToDelete});"
110,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/transformer/impl/DeleteOrphanedStateTransformer.java,95,,"        LOG.info(""Deleting {} orphaned enricher{} (of {}): {}"", new Object[] {enrichersToDelete.size(), Strings.s(enrichersToDelete.size()), input.getEnrichers().size(), enrichersToDelete});"
111,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/transformer/impl/DeleteOrphanedStateTransformer.java,96,,"        LOG.info(""Deleting {} orphaned polic{} (of {}): {}"", new Object[] {policiesToDelete.size(), (policiesToDelete.size() == 1 ? ""y"" : ""ies""), input.getPolicies().size(), policiesToDelete});"
112,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/transformer/impl/DeleteOrphanedStateTransformer.java,97,,"        LOG.info(""Deleting {} orphaned feed{} (of {}): {}"", new Object[] {feedsToDelete.size(), Strings.s(feedsToDelete.size()), input.getFeeds().size(), feedsToDelete});"
113,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/network/AbstractOnNetworkEnricher.java,139,,"                LOG.debug(""{} attempting transformations, triggered by location-added {}, to {}"", new Object[] {AbstractOnNetworkEnricher.this, event.getValue(), entity});"
114,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/network/AbstractOnNetworkEnricher.java,146,,"                    LOG.debug(""{} attempting transformations, triggered by sensor-event {}->{}, to {}"", "
115,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/network/AbstractOnNetworkEnricher.java,156,,"                        LOG.debug(""{} attempting transformations, triggered by sensor-event {}->{}, to {}"", "
116,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/network/AbstractOnNetworkEnricher.java,223,,"        LOG.debug(""{} publishing value {} (original sensor value {}) for mapped sensor {}, of entity {}"", "
117,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/network/AbstractOnNetworkEnricher.java,302,,"                LOG.trace(""network-facing enricher not transforming {} URI {}, because no port-mapping for {}"", new Object[] {source, sensorVal, machine});"
118,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/network/AbstractOnNetworkEnricher.java,306,,"                LOG.debug(""network-facing enricher not transforming {} URI {}, because no port in target {} for {}"", new Object[] {source, sensorVal, mappedEndpoint, machine});"
119,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/network/AbstractOnNetworkEnricher.java,329,,"                LOG.debug(""network-facing enricher not transforming {} host-and-port {}, because no port-mapping for {}"", new Object[] {source, sensorVal, machine});"
120,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/network/AbstractOnNetworkEnricher.java,333,,"                LOG.debug(""network-facing enricher not transforming {} host-and-port {}, because no port in target {} for {}"", new Object[] {source, sensorVal, mappedEndpoint, machine});"
121,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/network/AbstractOnNetworkEnricher.java,347,,"                LOG.debug(""network-facing enricher not transforming {} port {}, because no port-mapping for {}"", new Object[] {source, sensorVal, machine});"
122,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/network/AbstractOnNetworkEnricher.java,351,,"                LOG.debug(""network-facing enricher not transforming {} port {}, because no port in target {} for {}"", new Object[] {source, sensorVal, mappedEndpoint, machine});"
123,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/network/OnPublicNetworkEnricher.java,126,,"                LOG.debug(""{} attempting transformations, triggered by port-association {}, with machine {} of entity {}"", "
124,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/objs/BrooklynDynamicType.java,233,,"                            LOG.trace(""multiple definitions for config key {} on {}; same value {}; "" +"
125,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/objs/BrooklynDynamicType.java,243,,"                            LOG.trace(""multiple definitions for config key {} on {}; "" +"
126,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/objs/BrooklynDynamicType.java,252,,"                        LOG.warn(""multiple ambiguous definitions for config key {} on {}; "" +"
127,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/AttributeMap.java,155,,"            log.trace(""setting sensor {}={} for {}"", new Object[] {path, newValue, entity});"
128,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/AttributeMap.java,202,,"                    log.trace(""setting attribute {} to {} (was {}) on {}"", new Object[] {attribute.getName(), newValue, oldValue, entity});"
129,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/AttributeMap.java,204,,"                    log.trace(""setting attribute {} to {} (unchanged) on {}"", new Object[] {attribute.getName(), newValue, this});"
130,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/AttributeMap.java,228,,"                if (log.isTraceEnabled()) log.trace(""modified attribute {} to {} (was {}) on {}"", new Object[] {attribute.getName(), newValue, oldValue, entity});"
131,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/AttributeMap.java,231,,"                if (log.isTraceEnabled()) log.trace(""modified attribute {} unchanged; not emitting on {}"", new Object[] {attribute.getName(), newValue, this});"
132,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/AttributeMap.java,257,,"            log.trace(""removing sensor {} for {}"", new Object[] {path, entity});"
133,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/PortAttributeSensorAndConfigKey.java,95,,"                LOG.trace(""Convert config to sensor for {} found locations: {}. Selected: {}"", new Object[] {entity, locations, lo});"
134,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/PortAttributeSensorAndConfigKey.java,108,,"                        LOG.debug(""{}: choosing port {} for {}"", new Object[] { entity, p, getName() });"
135,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/PortAttributeSensorAndConfigKey.java,115,,"                            LOG.warn(""{}: no port available for {} (empty range {})"", new Object[] { entity, getName(), value });"
136,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/PortAttributeSensorAndConfigKey.java,119,,"                                LOG.warn(""{}: port {} not available for {}"", new Object[] { entity, pp, getName() });"
137,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/PortAttributeSensorAndConfigKey.java,121,,"                                LOG.warn(""{}: port {} not available for {} (root may be required?)"", new Object[] { entity, pp, getName() });"
138,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/PortAttributeSensorAndConfigKey.java,124,,"                            LOG.warn(""{}: no port available for {} (tried range {})"", new Object[] { entity, getName(), value });"
139,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/PortAttributeSensorAndConfigKey.java,131,,"                LOG.debug(""{}: choosing port {} (unconfirmed) for {}"", new Object[] { entity, v, getName() });"
140,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/PortAttributeSensorAndConfigKey.java,134,,"                LOG.warn(""{}: ports not applicable, or not yet applicable, because has multiple locations {}; ignoring "", new Object[] { entity, locations, getName() });"
141,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/ReleaseableLatch.java,85,,"                    LOG.warn(""Entity {} acquiring permit multiple times with ~{} permits available and ~{} threads waiting in queue"","
142,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/enricher/stock/AbstractAggregator.java,257,,"        if (LOG.isDebugEnabled()) LOG.debug(""{} stopped listening to {}"", new Object[] {this, producer });"
143,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/enricher/stock/Aggregator.java,212,,"                if (LOG.isDebugEnabled()) LOG.debug(""{} already had value ({}) for producer ({}); but that producer has just been added"", new Object[] {this, vo, producer});"
144,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/enricher/stock/PercentageEnricher.java,128,,"            LOG.trace(""Can't calculate percentage value for entity {} as current ({}) or total ({}) from producer {} is negative"","
145,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/enricher/stock/Propagator.java,191,,"        if (LOG.isTraceEnabled()) LOG.trace(""enricher {} got {}, propagating via {}{}"", "
146,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/enricher/stock/YamlTimeWeightedDeltaEnricher.java,79,,"                            if (LOG.isTraceEnabled()) LOG.trace(""{} received event but no last value so will not emit, null -> {} at {}"", new Object[] {this, current, eventTime}); "
147,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/enricher/stock/reducer/Reducer.java,157,,"        if (LOG.isTraceEnabled()) LOG.trace(""enricher {} got {}, propagating via {} as {}"","
148,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,411,,"            LOG.warn(""On start of cluster {}, misconfigured initial quorum size {} greater than initial size{}; using {}"", new Object[] {initialQuorumSize, initialSize, initialSize});"
149,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,510,,"            LOG.warn("
150,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,631,,"                LOG.info(""Resize {} from {} to {}"", new Object[] {this, originalSize, desiredSize});"
151,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,633,,"                if (LOG.isDebugEnabled()) LOG.debug(""Resize no-op {} from {} to {}"", new Object[] {this, originalSize, desiredSize});"
152,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,661,,"        LOG.info(""In {}, replacing member {} ({})"", new Object[] {this, memberId, member});"
153,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,685,,"                            LOG.debug(""In {} replacing member {} ({}), inferred its sub-location is {}"", new Object[] {this, memberId, member, memberLoc});"
154,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,693,,"                        LOG.warn(""In {} replacing member {} ({}), has no locations; falling back to first availability zone: {}"", new Object[] {this, memberId, member, memberLoc});"
155,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,696,,"                        LOG.warn(""In {} replacing member {} ({}), could not find matching sub-location; falling back to its actual location: {}"", new Object[] {this, memberId, member, memberLoc});"
156,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,1020,,"            LOG.trace(""Creating and adding a node to cluster {}({}) with properties {}"", new Object[] { this, getId(), Sanitizer.sanitize(createFlags) });"
157,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicFabricImpl.java,256,,"        logger.info(""Creating entity in fabric {} at {}{}"", new Object[] {this, location, "
158,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicGroupImpl.java,205,,"            log.debug(""{} filtering {} with {}"", new Object[]{this, unfiltered, entityFilter()});"
159,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/SshCommandMembershipTrackingPolicy.java,133,,"        LOG.trace(""Event {} received for {} in {}"", new Object[] { type, member, getGroup() });"
160,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/feed/ssh/SshFeed.java,115,,"        if (log.isTraceEnabled()) log.trace(""Ssh polling for {}, executing {} with env {}"", new Object[] {machine, command, env});"
161,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/location/ssh/SshMachineLocation.java,348,,"                            LOG.debug(""{} building ssh pool for {} with properties: {}"","
162,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/location/ssh/SshMachineLocation.java,869,,"        LOG.debug(""installing {} to {} on {}, attempting remote curl"", new Object[] { url, destPath, this });"
163,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/location/ssh/SshMachineLocation.java,884,,"                LOG.debug(""installing {} to {} on {}, curl failed, attempting local fetch and copy"", new Object[] { url, destPath, this });"
164,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/location/ssh/SshMachineLocation.java,895,,"                LOG.debug(""installing {} complete; {} on {}"", new Object[] { url, destPath, this });"
165,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/location/ssh/SshMachineLocation.java,897,,"                LOG.warn(""installing {} failed; {} on {}: {}"", new Object[] { url, destPath, this, result });"
166,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/location/ssh/SshMachineLocation.java,979,,"                if (LOG.isDebugEnabled()) LOG.debug(""Not reachable: {}, executing `{}`, exit code {}"", new Object[] {this, cmd, result});"
167,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/policy/AbstractInvokeEffectorPolicy.java,132,,"        LOG.trace(""{} taskCount={}, isBusy={}"", new Object[]{this, getTaskCounter().get(), busy});"
168,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/policy/InvokeEffectorOnCollectionSensorChange.java,184,,"            LOG.debug(""{} invoking {} on {} with parameters {}"", new Object[]{this, effector, entity, parameters});"
169,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/policy/InvokeEffectorOnSensorChange.java,71,,"        LOG.debug(""{} subscribed to {} events on {}"", new Object[]{this, sensor, entity});"
170,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/internal/ssh/BackoffLimitedRetryHandler.java,64,,"        if (LOG.isDebugEnabled()) LOG.debug(""Retry {}/{}: delaying for {} ms: {}"", "
171,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/internal/ssh/cli/SshCliTool.java,153,,"                        LOG.warn(""Error setting file owner to {}, after copying file {} to {}:{}; exit code {}"", new Object[] { uid, pathAndFileOnRemoteServer, this, f, result });"
172,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/internal/ssh/cli/SshCliTool.java,157,,"                LOG.warn(""Error setting file permissions to {}, after copying file {} to {}:{}; exit code {}"", new Object[] { permissions, pathAndFileOnRemoteServer, this, f, result });"
173,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/internal/ssh/cli/SshCliTool.java,160,,"            LOG.warn(""Error copying file {} to {}:{}; exit code {}"", new Object[] {pathAndFileOnRemoteServer, this, f, result});"
174,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/internal/ssh/sshj/SshjTool.java,634,,"                if (LOG.isTraceEnabled()) LOG.trace(""SSH Performance: {} {} took {}"", new Object[] {"
175,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/internal/ssh/sshj/SshjTool.java,656,,"                    LOG.debug(""<< {} (rethrowing, out of time - max {}): {}"", new Object[] { fullMessage, Time.makeTimeStringRounded(sshTriesTimeout), e.getMessage() });"
176,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/task/BasicExecutionManager.java,690,,"            log.trace(""Submitting task {} ({}), with flags {}, and tags {}, job {}; caller {}"", "
177,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/task/DynamicSequentialTask.java,221,,"            log.trace(""task {} - submitting background task {} ({})"", new Object[] { Tasks.current(), task, ec });"
178,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/task/system/internal/ExecWithLoggingHelpers.java,108,,"            commandLogger.debug(""{}, initiating ""+shortName.toLowerCase()+"" on machine {}{}: {}"","
179,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/task/system/internal/ExecWithLoggingHelpers.java,159,,"                        commandLogger.debug(""{}, on machine {}, completed: return status {}"","
180,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/xstream/ClassRenamingMapper.java,114,,"            LOG.trace(""Failed to load class using super.realClass({}), for orig class {}, attempting fallbacks: {}"", new Object[] {elementName, elementNamOrig, e});"
181,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/xstream/ClassRenamingMapper.java,128,,"                LOG.trace(""Fallback loadClass({}) attempt failed (orig class {}): {}"", new Object[] {elementName, elementNamOrig, e});"
182,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/xstream/ClassRenamingMapper.java,148,,"                    LOG.trace(""Fallback super.realClass({}) attempt failed (orig class {}): {}"", new Object[] {elementName, elementNamOrig, e});"
183,./TargetProjects/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/xstream/ClassRenamingMapper.java,156,,"                    LOG.trace(""Fallback loadClass({}) attempt failed (orig class {}): {}"", new Object[] {elementName, elementNamOrig, e});"
184,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/core/mgmt/internal/TestEntityWithEffectorsImpl.java,34,,"        log.info(""Invoked effector from resetPassword with params {} {}"", new Object[] {newPassword, secretPin});"
185,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/core/mgmt/internal/TestEntityWithEffectorsImpl.java,40,,"        log.info(""Invoked effector from resetPasswordThrowsException with params {} {}"", new Object[] {newPassword, secretPin});"
186,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/core/mgmt/internal/TestEntityWithEffectorsImpl.java,46,,"        log.info(""Invoked effector from invokeUserAndPassword with params {} {} {}"", new Object[] {user, newPassword, paramDefault});"
187,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/enricher/stock/CustomAggregatingEnricherTest.java,326,,"        log.debug(""created {} and the entities it will contain {} {}"", new Object[] {group, p1, p2});"
188,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/entity/group/DynamicClusterTest.java,1450,,"                LOG.debug(""{} starting (members={})"", new Object[]{this, getParent().sensors().get(AbstractGroup.GROUP_MEMBERS)});"
189,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/entity/group/MembershipTrackingPolicyRebindTest.java,77,,"            LOG.info(""{} notified of new member: {} (count={})"","
190,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/location/ssh/SshMachineLocationPerformanceTest.java,165,,"            LOG.info(""Executing {}; completed {}; took {}; fraction cpu {}"","
191,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/internal/ssh/SshToolAbstractPerformanceTest.java,119,,"            LOG.info(""Executing {}; completed {}; took {}; fraction cpu {}"", new Object[] {context, (i+1), Time.makeTimeStringRounded(elapsedTime), fractionCpu});"
192,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/internal/ssh/SshToolAbstractPerformanceTest.java,135,,"        if (LOG.isTraceEnabled()) LOG.trace(""Executed: result={}; stdout={}; stderr={}"", new Object[] {result, outlen, errlen});"
193,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/BasicTaskExecutionPerformanceTest.java,202,,"        log.info(""Executed {} tasks; {}ms total; {}ms to submit"", new Object[] {numTasks, totalTime, submitTime});"
194,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,72,,"        log.info(""done one ({}) {} {}"", new Object[] {interimResult, t, t.getStatusDetail(false)});"
195,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,76,,"        log.info(""ended ({}) {} {}"", new Object[] {finalResult, t, t.getStatusDetail(false)});"
196,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,152,,"        log.info(""done one ({}) {} {}"", new Object[] {interimResult, t, t.getStatusDetail(false)});"
197,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,156,,"        log.info(""ended ({}) {} {}"", new Object[] {finalResult, t, t.getStatusDetail(false)});"
198,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,184,,"        log.info(""done one ({}) {} {}"", new Object[] {interimResult, t, t.getStatusDetail(false)});"
199,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,188,,"        log.info(""ended ({}) {} {}"", new Object[] {i, t, t.getStatusDetail(false)});"
200,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,220,,"        log.info(""done one ({}) {} {}"", new Object[] {interimResult, t, t.getStatusDetail(false)});"
201,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,231,,"        log.info(""blocked until ended ({}) {} {}, in {}"", new Object[] {i, t, t.getStatusDetail(false), Duration.of(timer)});"
202,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,239,,"        log.info(""ended ({}) {} {}, in {}"", new Object[] {i, t, t.getStatusDetail(false), Duration.of(timer)});"
203,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,276,,"        log.info(""done one ({}) {} {}"", new Object[] {interimResult, t, t.getStatusDetail(false)});"
204,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,287,,"        log.info(""blocked until ended ({}) {} {}, in {}"", new Object[] {i, t, t.getStatusDetail(false), Duration.of(timer)});"
205,./TargetProjects/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,296,,"        log.info(""ended ({}) {} {}, in {}"", new Object[] {i, t, t.getStatusDetail(false), Duration.of(timer)});"
206,./TargetProjects/brooklyn-server/launcher-common/src/main/java/org/apache/brooklyn/launcher/common/BasicLauncher.java,715,,"                    LOG.info(""Starting brooklyn application {} in location{} {}"", new Object[] { app, locations.size()!=1?""s"":"""", locations });"
207,./TargetProjects/brooklyn-server/launcher-common/src/main/java/org/apache/brooklyn/launcher/common/BasicLauncher.java,724,,"                    LOG.info(""Started brooklyn application {} in location{} {}{}"", new Object[] { app, locations.size()!=1?""s"":"""", locations,"
208,./TargetProjects/brooklyn-server/launcher-common/src/main/java/org/apache/brooklyn/launcher/common/BasicLauncher.java,727,,"                    LOG.error(""Error starting ""+app+"": ""+Exceptions.collapseText(e), Exceptions.getFirstInteresting(e));"
209,./TargetProjects/brooklyn-server/locations/container/src/main/java/org/apache/brooklyn/container/location/docker/DockerJcloudsLocation.java,107,,"                        LOG.debug(""Setting default image regex to {}, for obtain call in {}; removing osFamily={} and osVersionRegex={}"","
210,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/BasicJcloudsLocationCustomizer.java,88,,"        LOG.debug(""{} set location customizers on {}: {}"", new Object[]{this, entity, Iterables.toString(merged)});"
211,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/CreateUserStatements.java,225,,"                    LOG.info(""Default SSH keys not found or not usable; will create new keys for each machine. "" +"
212,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/CreateUserStatements.java,249,,"            LOG.debug(""Password '{}' being created for user '{}' at the machine we are about to provision in {}; {}"","
213,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/DefaultConnectivityResolver.java,158,,"        LOG.debug(""{} set itself as the {} on {}"", new Object[]{this, sensorName, entity});"
214,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/DefaultConnectivityResolver.java,171,,"        LOG.debug(""{} resolving management parameters for {}, node={}, config={}, options={}"","
215,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/DefaultConnectivityResolver.java,204,,"                LOG.debug(""{} set on {} but pollForFirstReachableAddress={}"","
216,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/DefaultConnectivityResolver.java,220,,"            LOG.error(""None of the addresses of node {} are reachable in mode {}"", new Object[]{node, getNetworkMode()});"
217,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/DefaultConnectivityResolver.java,257,,"        LOG.debug(""{} resolved management parameters for {} in {}: {}"","
218,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/DefaultConnectivityResolver.java,298,,"                LOG.info(""Ignoring mode {} in favour of port forwarding override for management candidates of {}: {}"","
219,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/DefaultConnectivityResolver.java,335,,"        LOG.warn(""No resolvable address in {} ({}/{}); using first; may cause future failures"","
220,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/DefaultConnectivityResolver.java,434,,"            LOG.debug(""Using username {}, from custom credentials, on node {}. User was previously {}"","
221,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,580,,"        LOG.debug(""Destroyed nodes %s%n"", destroyed);"
222,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,633,,"                LOG.warn(""Attempt #{}/{} to obtain machine threw error: {}"", new Object[]{i, attempts, e});"
223,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,714,,"                LOG.info(""Waiting in {} for machine-creation permit ({} other queuing requests already)"", new Object[] {this, machineCreationSemaphore.getQueueLength()});"
224,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,770,,"                LOG.debug(""jclouds using template {} / options {} to provision machine in {}"","
225,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,795,,"                LOG.debug(""jclouds created Windows VM {}; transforming connection details: loginPort from {} to {}; loginUser from {} to {}"","
226,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,827,,"            LOG.info(""Using host-and-port={} and user={} when connecting to {}"","
227,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,848,,"                LOG.debug(""Skipping ssh check for {} ({}) due to config waitForConnectable={}, windows={}"","
228,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,1041,,"                        LOG.warn(""Ignoring flag EXTRA_PUBLIC_KEY_URLS_TO_AUTH on Windows location"", machineLocation);"
229,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,1057,,"                        LOG.warn(""Ignoring flag EXTRA_PUBLIC_KEY_DATA_TO_AUTH on Windows location"", machineLocation);"
230,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsSshMachineLocation.java,250,,"                      if (LOG.isDebugEnabled()) LOG.debug(""Cannot get image (with id {}) for {}, because cannot get compute-service from parent {}"", new Object[] {imageId, this, getParent()});"
231,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsSshMachineLocation.java,531,,"                LOG.trace(""Machine details for {} missing from Jclouds, but skipping SSH test because {}. name={}, version={}, "" +"
232,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsSshMachineLocation.java,540,,"                LOG.trace(""Machine details for {} missing from Jclouds, using SSH test instead. name={}, version={}, "" +"
233,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizer.java,276,,"            LOG.warn(""Security group extension for {} absent; cannot update node {} with {}"","
234,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizer.java,305,,"            LOG.warn(""Security group extension for {} absent; cannot update node {} with {}"","
235,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizer.java,360,,"                    LOG.warn(""Couldn't determine which security group is shared between instances in app {}. Expected={}, found={}"","
236,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizer.java,366,,"                LOG.info(""Loaded unique security group for node {} (in {}): {}"","
237,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizer.java,373,,"                LOG.warn(""Expected to find two security groups on node {} in app {} (one shared, one unique). Found {}: {}"","
238,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizer.java,462,,"            LOG.info(""Found existing shared security group in {} for app {}: {}"","
239,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizer.java,466,,"            LOG.info(""Creating new shared security group in {} for app {}: {}"","
240,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/networking/creator/DefaultAzureArmNetworkCreator.java,154,,"            LOG.debug(""Created subnet {} in wrong state, expected state {} but found {}"", new Object[] {subnetName, PROVISIONING_STATE_SUCCEEDED, lastProvisioningState});"
241,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/softlayer/SoftLayerSameVlanLocationCustomizer.java,147,,"            LOG.debug(""SoftLayer VLANs private {} and public {} already configured in template options for scope: {}"","
242,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/softlayer/SoftLayerSameVlanLocationCustomizer.java,207,,"        LOG.debug(""Setting VLAN template options private {} and public {} for scope: {}"","
243,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/softlayer/SoftLayerSameVlanLocationCustomizer.java,244,,"                LOG.warn(""SoftLayer VLANs private {} and public {} already configured for location {} scope {}"","
244,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/softlayer/SoftLayerSameVlanLocationCustomizer.java,267,,"            LOG.debug(""Saving VLAN details private {} and public {} for location {} scope {}"","
245,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/templates/customize/TemplateOptionsOption.java,61,,"                    LOG.warn(""Ignoring request to set template option {} because this is not supported by {}"", new Object[]{option.getKey(), clazz.getCanonicalName()});"
246,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/AbstractJcloudsStubbedUnitTest.java,117,,"                LOG.debug(""Overridden default value for {} with: {}"", new Object[]{key, overrideVal});"
247,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/networking/JcloudsReachableAddressStubbedTest.java,369,,"        LOG.info(""Checking {} preferred when mode={}, other reachable IPs={}, public addresses={} and private={}"","
248,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/action/AbstractScheduledEffectorPolicy.java,242,,"            LOG.warn(""{}: Time should be formatted as {}: {}"", new Object[] { this, TIME_FORMAT, e.getMessage() });"
249,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/action/AbstractScheduledEffectorPolicy.java,279,,"            LOG.debug(""{}: Resolving arguments for {}: {}"", new Object[] { this, effector.getName(), Iterables.toString(args.keySet()) });"
250,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/action/AbstractScheduledEffectorPolicy.java,285,,"            LOG.debug(""{}: Invoking effector on {}, {}({})"", new Object[] { this, entity, effector.getName(), resolved });"
251,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/action/AbstractScheduledEffectorPolicy.java,289,,"            LOG.debug(""{}: Effector {} returned {}"", new Object[] { this, effector.getName(), result });"
252,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/action/AbstractScheduledEffectorPolicy.java,294,,"            LOG.warn(""{}: Exception running {}: {}"", new Object[] { this, effector.getName(), t.getMessage() });"
253,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,548,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing metricLowerBound from {} to {}"", new Object[] {this, getMetricLowerBound(), val});"
254,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,553,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing metricUpperBound from {} to {}"", new Object[] {this, getMetricUpperBound(), val});"
255,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,563,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing resizeUpIterationIncrement from {} to {}"", new Object[] {this, getResizeUpIterationIncrement(), val});"
256,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,568,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing resizeDownIterationIncrement from {} to {}"", new Object[] {this, getResizeDownIterationIncrement(), val});"
257,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,573,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing resizeUpIterationMax from {} to {}"", new Object[] {this, getResizeUpIterationMax(), val});"
258,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,578,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing resizeDownIterationMax from {} to {}"", new Object[] {this, getResizeDownIterationMax(), val});"
259,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,583,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing minPeriodBetweenExecs from {} to {}"", new Object[] {this, getMinPeriodBetweenExecs(), val});"
260,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,588,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing resizeUpStabilizationDelay from {} to {}"", new Object[] {this, getResizeUpStabilizationDelay(), val});"
261,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,593,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing resizeDownStabilizationDelay from {} to {}"", new Object[] {this, getResizeDownStabilizationDelay(), val});"
262,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,598,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing minPoolSize from {} to {}"", new Object[] {this, getMinPoolSize(), val});"
263,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,603,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing maxPoolSize from {} to {}"", new Object[] {this, getMaxPoolSize(), val});"
264,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,707,,"                LOG.info(""{} resetting {} to {}, which will enable resizing above previous level of {}"","
265,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,762,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} checking pool size on limits changed for {} (between {} and {})"", new Object[] {this, poolEntity, min, max});"
266,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,772,,"                            if (LOG.isInfoEnabled()) LOG.info(""{} resizing pool {} triggering resize computation due to new pool size limits, current {} exceeds bound of {}"", new Object[] {this, poolEntity, currentSize, desiredSize});"
267,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,814,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording pool-metric for {}: {}"", new Object[] {this, poolEntity, val});"
268,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,818,,"            if (LOG.isTraceEnabled()) LOG.trace(""{} not resizing pool {}, inbound metric is null"", new Object[] {this, poolEntity});"
269,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,832,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording pool-cold for {}: {}"", new Object[] {this, poolEntity, properties});"
270,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,837,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording pool-hot for {}: {}"", new Object[] {this, poolEntity, properties});"
271,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,886,,"            if (LOG.isTraceEnabled()) LOG.trace(""{} not resizing pool {} from {} ({} within range {}..{})"", new Object[] {this, poolEntity, data.currentSize, data.currentMetricValue, data.metricLowerBound, data.metricUpperBound});"
272,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,891,,"        if (LOG.isTraceEnabled()) LOG.debug(""{} detected unconstrained desired size {}"", new Object[] {this, desiredSizeUnconstrained});"
273,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,911,,"                    if (LOG.isTraceEnabled()) LOG.trace(""{} when resizing back pool {} from {}, tweaking from {} to prevent thrashing"", new Object[] {this, poolEntity, data.currentSize, desiredSize });"
274,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,938,,"            if (LOG.isDebugEnabled()) LOG.debug(""{} provisionally resizing {} {} from {} to {} ({} < {}; ideal size {})"", new Object[] {this, description, poolEntity, data.currentSize, desiredSize, data.currentMetricValue, data.metricLowerBound, desiredSizeUnconstrained});"
275,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,941,,"            if (LOG.isTraceEnabled()) LOG.trace(""{} not resizing {} {} from {} to {}, {} out of healthy range {}..{} but unconstrained size {} blocked by bounds/check"", new Object[] {this, description, poolEntity, data.currentSize, desiredSize, data.currentMetricValue, data.metricLowerBound, data.metricUpperBound, desiredSizeUnconstrained});"
276,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,964,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording pool-ok for {}: {}"", new Object[] {this, poolEntity, properties});"
277,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,968,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} not resizing ok pool {} from {}"", new Object[] {this, poolEntity, poolCurrentSize});"
278,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,1073,,"            if (LOG.isDebugEnabled()) LOG.debug(""{} notifying listener of max pool size reached; current {}, max {}, unbounded current {}, unbounded max {}"", "
279,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,1089,,"            if (LOG.isTraceEnabled()) LOG.trace(""{} re-scheduling max-reached check for {}, as unbounded size not stable (min {}, max {}, latest {})"", "
280,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,1110,,"            if (LOG.isTraceEnabled()) LOG.trace(""{} re-scheduling resize check for {}, as desired size not stable (current {}, desired {}); continuing with resize..."", "
281,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,1115,,"            if (LOG.isTraceEnabled()) LOG.trace(""{} not resizing pool {} from {} to {}"", "
282,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,1120,,"        if (LOG.isDebugEnabled()) LOG.debug(""{} requesting resize to {}; current {}, min {}, max {}"", "
283,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,1135,,"                        LOG.warn(""{} failed to resize {} due to insufficient capacity; setting high-water mark to {}, """
284,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,1191,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} calculated desired pool size: from {} to {}; minDesired {}, maxDesired {}; "" +"
285,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/enricher/TimeFractionDeltaEnricher.java,130,,"            if (LOG.isTraceEnabled()) LOG.trace(""ignoring null value in {}, at {}"", new Object[] {this, eventTimestamp});"
286,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/enricher/TimeFractionDeltaEnricher.java,137,,"                if (LOG.isTraceEnabled()) LOG.trace(""{} received event but no last value so will not emit, null -> {} at {}"", "
287,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/enricher/TimeFractionDeltaEnricher.java,140,,"                LOG.warn(""{} has lastValue {} but last timestamp {}; new value is {} at {}; not publishing"", "
288,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/enricher/TimeFractionDeltaEnricher.java,146,,"                if (LOG.isTraceEnabled()) LOG.trace(""set {} to {}, {} -> {} at {} (previous at {})"", "
289,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/enricher/TimeWeightedDeltaEnricher.java,136,,"            if (LOG.isTraceEnabled()) LOG.trace(""set {} to {}, {} -> {} at {}"", new Object[] {this, deltaPostProcessed, lastValue, current, eventTime});"
290,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/enricher/TimeWeightedDeltaEnricher.java,143,,"                if (LOG.isTraceEnabled()) LOG.trace(""{} received event but no last value so will not emit, null -> {} at {}"", new Object[] {this, current, eventTime}); "
291,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/enricher/TimeWeightedDeltaEnricher.java,150,,"                if (LOG.isTraceEnabled()) LOG.trace(""set {} to {}, {} -> {} at {}"", new Object[] {this, deltaPostProcessed, lastValue, current, eventTime}); "
292,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/followthesun/FollowTheSunPolicy.java,220,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording addition of container {} in location {}"", new Object[] {this, container, location});"
293,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/followthesun/FollowTheSunPolicy.java,235,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording addition of item {} in container {}"", new Object[] {this, item, parentContainer});"
294,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/followthesun/FollowTheSunPolicy.java,259,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording moving of item {} to {}"", new Object[] {this, item, parentContainer});"
295,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/followthesun/FollowTheSunPolicy.java,266,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording location for container {}, new value {}"", new Object[] {this, container, location});"
296,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/followthesun/FollowTheSunPolicy.java,272,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording usage update for item {}, new value {}"", new Object[] {this, item, newValues});"
297,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/followthesun/FollowTheSunStrategy.java,83,,"                if (LOG.isTraceEnabled()) LOG.trace(""POLICY {} detected {} msgs/sec in {}, split up as: {}"", new Object[] {name, total, itemName, sendsByLocation});"
298,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/followthesun/FollowTheSunStrategy.java,111,,"                    if (LOG.isDebugEnabled()) LOG.debug(""POLICY {} detected {} is already in optimal permitted location ({} of {} msgs/sec)"", new Object[] {name, itemName, highestMsgRate, total});"
299,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,232,,"                    LOG.info(""{} check for {}, now recovering: {}"", new Object[] {this, entity, getDescription(status)});"
300,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,236,,"                    if (LOG.isTraceEnabled()) LOG.trace(""{} check for {}, continuing recovering: {}"", new Object[] {this, entity, getDescription(status)});"
301,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,240,,"                    LOG.info(""{} check for {}, now healthy: {}"", new Object[] {this, entity, getDescription(status)});"
302,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,243,,"                    if (LOG.isTraceEnabled()) LOG.trace(""{} check for {}, still healthy: {}"", new Object[] {this, entity, getDescription(status)});"
303,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,250,,"                    LOG.info(""{} check for {}, now failing: {}"", new Object[] {this, entity, getDescription(status)});"
304,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,254,,"                    if (LOG.isTraceEnabled()) LOG.trace(""{} check for {}, continuing failing: {}"", new Object[] {this, entity, getDescription(status)});"
305,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,258,,"                    LOG.info(""{} check for {}, now failing: {}"", new Object[] {this, entity, getDescription(status)});"
306,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,261,,"                    if (LOG.isTraceEnabled()) LOG.trace(""{} check for {}, still failed: {}"", new Object[] {this, entity, getDescription(status)});"
307,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,304,,"                    LOG.warn(""{} check for {}, publishing recovered: {}"", new Object[] {this, entity, description});"
308,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,320,,"                    LOG.warn(""{} connectivity-check for {}, publishing failed: {}"", new Object[] {this, entity, description});"
309,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,184,,"                        if (LOG.isDebugEnabled()) LOG.debug(""{} health-check for {}, component was recovering, now failing: {}"", new Object[] {this, entity, getExplanation(state)});"
310,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,188,,"                        if (LOG.isTraceEnabled()) LOG.trace(""{} health-check for {}, component still failed: {}"", new Object[] {this, entity, getExplanation(state)});"
311,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,194,,"                        if (LOG.isDebugEnabled()) LOG.debug(""{} health-check for {}, component now failing: {}"", new Object[] {this, entity, getExplanation(state)});"
312,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,198,,"                        if (LOG.isTraceEnabled()) LOG.trace(""{} health-check for {}, component continuing failing: {}"", new Object[] {this, entity, getExplanation(state)});"
313,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,210,,"                        if (LOG.isDebugEnabled()) LOG.debug(""{} health-check for {}, component now recovering: {}"", new Object[] {this, entity, getExplanation(state)});"
314,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,214,,"                        if (LOG.isTraceEnabled()) LOG.trace(""{} health-check for {}, component continuing recovering: {}"", new Object[] {this, entity, getExplanation(state)});"
315,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,218,,"                        if (LOG.isDebugEnabled()) LOG.debug(""{} health-check for {}, component was failing, now healthy: {}"", new Object[] {this, entity, getExplanation(state)});"
316,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,220,,"                        if (LOG.isTraceEnabled()) LOG.trace(""{} health-check for {}, component still healthy: {}"", new Object[] {this, entity, getExplanation(state)});"
317,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,228,,"                if (LOG.isTraceEnabled()) LOG.trace(""{} health-check for {}, in unconfirmed sate: {}"", new Object[] {this, entity, getExplanation(state)});"
318,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,236,,"                    if (LOG.isDebugEnabled()) LOG.debug(""{} publishing failed (state={}; currentFailureStartTime={}; now={}"", "
319,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,253,,"                    if (LOG.isDebugEnabled()) LOG.debug(""{} publishing recovered (state={}; currentRecoveryStartTime={}; now={}"", "
320,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,266,,"                    if (LOG.isDebugEnabled()) LOG.debug(""{} setting on-fire, now that deferred period has passed (state={})"", "
321,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/ItemsInContainersGroupImpl.java,136,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} processing moved item {}, to container {}"", new Object[] {this, item, container});"
322,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/ItemsInContainersGroupImpl.java,139,,"                if (LOG.isDebugEnabled()) LOG.debug(""{} removing moved item {} from group, as new container {} is not a member"", new Object[] {this, item, container});"
323,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/ItemsInContainersGroupImpl.java,144,,"                if (LOG.isDebugEnabled()) LOG.debug(""{} adding moved item {} to group, as new container {} is a member"", new Object[] {this, item, container});"
324,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/LoadBalancingPolicy.java,211,,"                        if (LOG.isDebugEnabled()) LOG.debug(""{} post-rebalance: poolSize={}; workrate={}; lowThreshold={}; "" + "
325,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/LoadBalancingPolicy.java,227,,"                                    LOG.info(""{} emitted COLD (suggesting {}): {}"", new Object[] {this, desiredPoolSize, eventVal});"
326,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/LoadBalancingPolicy.java,245,,"                                    LOG.info(""{} emitted HOT (suggesting {}): {}"", new Object[] {this, desiredPoolSize, eventVal});"
327,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/LoadBalancingPolicy.java,311,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording addition of item {} in container {}"", new Object[] {this, item, parentContainer});"
328,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/LoadBalancingPolicy.java,333,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording moving of item {} to {}"", new Object[] {this, item, parentContainer});"
329,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/LoadBalancingPolicy.java,339,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording metric update for item {}, new value {}"", new Object[] {this, item, newValue});"
330,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/loadbalancing/MockContainerEntityImpl.java,162,,"        if (LOG.isDebugEnabled()) LOG.debug(""Mocks: offloading container {} to {} (items {})"", new Object[] {this, otherContainer, getBalanceableItems()});"
331,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/loadbalancing/MockItemEntityImpl.java,68,,"        if (LOG.isDebugEnabled()) LOG.debug(""Mocks: moving item {} from {} to {}"", new Object[] {this, currentContainer, rawDestination});"
332,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/filter/BrooklynSecurityProviderFilterJavax.java,78,,"            log.trace(""BrooklynSecurityProviderFilterJavax.doFilter caught SecurityProviderDeniedAuthentication"", e);"
333,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/BundleResource.java,224,,"                log.trace(""Unable to create from archive, returning 400: ""+result.getError().getMessage(), result.getError());"
334,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/CatalogResource.java,152,,"                log.trace(""Unable to create, format '""+format+""', returning 400: ""+result.getError().getMessage(), result.getError());"
335,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/EntityConfigResource.java,74,,"                LOG.trace(""User {} not authorized to see config {} of entity {}; excluding from ConfigKey list results"", "
336,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/EntityConfigResource.java,132,,"                    LOG.trace(""User {} not authorized to see sensor {} of entity {}; excluding from current-state results"", "
337,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/SensorResource.java,64,,"                log.trace(""User {} not authorized to see sensor {} of entity {}; excluding from AttributeSensor list results"", "
338,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/SensorResource.java,89,,"                log.trace(""User {} not authorized to see sensor {} of entity {}; excluding from current-state results"", "
339,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/ServerResource.java,591,,"                        log.trace(""Unable to create, format '', returning 400: ""+result.getError().getMessage(), result.getError());"
340,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/UsageResource.java,62,,"        log.debug(""REST call to get application usage for all applications: dates {} -> {}"", new Object[] {start, end});"
341,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/UsageResource.java,87,,"        log.debug(""REST call to get application usage for application {}: dates {} -> {}"", new Object[] {application, start, end});"
342,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/UsageResource.java,107,,"        log.debug(""Determining application usage for application {}: dates {} -> {}"", new Object[] {usage.getApplicationId(), startDate, endDate});"
343,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/UsageResource.java,151,,"        log.debug(""REST call to get machine usage for application {}: dates {} -> {}"", new Object[] {application, start, end});"
344,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/UsageResource.java,197,,"        log.debug(""REST call to get machine usage for machine {}: dates {} -> {}"", new Object[] {machine, start, end});"
345,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/util/BrooklynRestResourceUtils.java,446,,"            log.debug(""Setting key {} to {} for REST creation of {}"", new Object[] { entry.getKey(), entry.getValue(), javaType});"
346,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/util/WebResourceUtils.java,70,,"            log.debug(""responding {} {} ({})"","
347,./TargetProjects/brooklyn-server/rest/rest-server/src/main/java/org/apache/brooklyn/rest/filter/LoggingFilter.java,83,,"                LOG.debug(message, args);"
348,./TargetProjects/brooklyn-server/rest/rest-server/src/main/java/org/apache/brooklyn/rest/filter/LoggingFilter.java,85,,"                LOG.trace(message, args);"
349,./TargetProjects/brooklyn-server/rest/rest-server/src/main/java/org/apache/brooklyn/rest/filter/LoggingFilter.java,108,,"                    LOG.debug(message);"
350,./TargetProjects/brooklyn-server/rest/rest-server/src/main/java/org/apache/brooklyn/rest/filter/LoggingFilter.java,110,,"                    LOG.trace(message);"
351,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/brooklynnode/EntityHttpClientImpl.java,104,,"            LOG.warn(""Invalid response invoking {}: response code {}\n{}: {}"","
352,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/java/JavaSoftwareProcessSshDriver.java,290,,"                log.debug(""Java {} already installed at {}@{}"", new Object[]{installedJavaVersion.get(), getEntity(), getLocation()});"
353,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/java/JavaSoftwareProcessSshDriver.java,319,,"            log.debug(""Installing Java {} at {}@{}"", new Object[]{version, getEntity(), getLocation()});"
354,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/java/JavaSoftwareProcessSshDriver.java,326,,"                log.warn(""Installation of Java {} failed at {}@{}: {}"","
355,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/java/JavaSoftwareProcessSshDriver.java,347,,"            log.debug(""Found Java version at {}@{}: {}"", new Object[] {getEntity(), getLocation(), stdOut});"
356,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/java/JavaSoftwareProcessSshDriver.java,369,,"            log.debug(""Found Java version at {}@{}: {}"", new Object[] {getEntity(), getLocation(), stdOut});"
357,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/machine/MachineEntityImpl.java,69,,"            LOG.warn(""Not adding machine-metrics feed as no suitable location available on entity {}: machine={}; locations={}"", "
358,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/machine/SetHostnameCustomizer.java,206,,"        log.info(""No hostname found for {} (got {}; {})"", new Object[] {machine, cmd.getStdout(), cmd.getStderr()});"
359,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/machine/SetHostnameCustomizer.java,220,,"        log.info(""No local ip found for {} (got {}; {})"", new Object[] {machine, cmd.getStdout(), cmd.getStderr()});"
360,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/machine/pool/ServerPoolImpl.java,192,,"        LOG.info(""Resolved and registered dynamic location {} for server pool {}: {}"", new Object[] {locationName, this, location});"
361,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/machine/pool/ServerPoolImpl.java,312,,"                LOG.warn(""Too few removable machines in {} to shrink by delta {}. Altered delta to {}"","
362,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/machine/pool/ServerPoolImpl.java,434,,"            LOG.info(""{} in {}: {} service up is {}"", new Object[]{type.name(), entity, member, isUp});"
363,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/machine/pool/ServerPoolImpl.java,440,,"                    LOG.debug(""{} observed event {} but {} is not up (yet) and will not be used by the pool"","
364,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/AbstractSoftwareProcessSshDriver.java,315,,"                log.debug(""Copied file for {}: {} to {} - result {}"", new Object[] { entity, source, destination, result });"
365,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/AbstractSoftwareProcessSshDriver.java,360,,"            log.debug(""copying stream complete; {} on {}"", new Object[] { destination, getMachine() });"
366,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/AbstractSoftwareProcessSshDriver.java,362,,"            log.warn(""copying stream failed; {} on {}: {}"", new Object[] { destination, getMachine(), result });"
367,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/SoftwareProcessImpl.java,493,,"            LOG.warn(""Rebinding entity {}, even though actual state is {}. Expected state is {}"", new Object[] { this, actualState, expectedState });"
368,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/lifecycle/MachineLifecycleEffectorTasks.java,406,,"                log.info(""Starting {}, obtaining a new location instance in {} with ports {}"", new Object[]{entity(), location, flags.get(""inboundPorts"")});"
369,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/lifecycle/MachineLifecycleEffectorTasks.java,1194,,"                log.debug(""{} finished waiting for {} (value {}); waiting to acquire the latch"", new Object[] {entity, configKey, latch});"
370,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/lifecycle/MachineLifecycleEffectorTasks.java,1201,,"                log.debug(""{} Acquired latch {} (value {}); continuing..."", new Object[] {entity, configKey, latch});"
371,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/lifecycle/MachineLifecycleEffectorTasks.java,1206,,"                if (rawValue != null) log.debug(""{} finished waiting for {} (value {}); continuing..."", new Object[] {entity, configKey, val});"
372,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxFeed.java,341,,"                        if (log.isDebugEnabled()) log.debug(""jmx operation polling for {} sensors at {} -> {}"", new Object[] {getEntity(), getJmxUri(), operationName});"
373,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxFeed.java,372,,"                        if (log.isTraceEnabled()) log.trace(""jmx attribute polling for {} sensors at {} -> {}"", new Object[] {getEntity(), getJmxUri(), jmxAttributeName});"
374,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxHelper.java,387,,"                    if (LOG.isDebugEnabled()) LOG.debug(""Attempt {} failed connecting to {} ({})"", new Object[] {attempt + 1, url, e.getMessage()});"
375,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxHelper.java,536,,"                    LOG.warn(""JMX object name query returned {} values for {} at {}; ignoring all"","
376,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxHelper.java,539,,"                    if (LOG.isDebugEnabled()) LOG.debug(""JMX object name query returned {} values for {} at {} (repeating); ignoring all"", "
377,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxHelper.java,645,,"            if (LOG.isTraceEnabled()) LOG.trace(""From {}, for jmx attribute {}.{}, got value {}"", new Object[] {url, objectName.getCanonicalName(), attribute, result});"
378,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxHelper.java,666,,"            if (LOG.isTraceEnabled()) LOG.trace(""From {}, for jmx attribute {}.{}, set value {}"", new Object[] {url, objectName.getCanonicalName(), attribute, val});"
379,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxHelper.java,668,,"            if (LOG.isDebugEnabled()) LOG.debug(""From {}, cannot set attribute {}.{}, because mbean not found"", new Object[] {url, objectName.getCanonicalName(), attribute});"
380,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxHelper.java,694,,"        if (LOG.isTraceEnabled()) LOG.trace(""From {}, for jmx operation {}.{}({}), got value {}"", new Object[] {url, realObjectName.getCanonicalName(), method, Arrays.asList(arguments), "
381,./TargetProjects/brooklyn-server/software/winrm/src/main/java/org/apache/brooklyn/feed/windows/WindowsPerformanceCounterFeed.java,320,,"                        log.warn(""Failed to coerce value '{}' to {} for {} -> {}"", new Object[] {rawValue, clazz, entity, attribute});"
382,./TargetProjects/brooklyn-server/software/winrm/src/main/java/org/apache/brooklyn/feed/windows/WindowsPerformanceCounterFeed.java,322,,"                        if (log.isTraceEnabled()) log.trace(""Failed (repeatedly) to coerce value '{}' to {} for {} -> {}"", new Object[] {rawValue, clazz, entity, attribute});"
383,./TargetProjects/brooklyn-server/software/winrm/src/main/java/org/apache/brooklyn/feed/windows/WindowsPerformanceCounterFeed.java,334,,"            log.error(""Windows Performance Counter query did not respond as expected. exitcode={} stdout={} stderr={}"","
384,./TargetProjects/brooklyn-server/software/winrm/src/main/java/org/apache/brooklyn/location/winrm/WinRmMachineLocation.java,519,,"        LOG.debug(""installing {} to {} on {}, attempting remote curl"", new Object[] { url, destPath, this });"
385,./TargetProjects/brooklyn-server/software/winrm/src/main/java/org/apache/brooklyn/location/winrm/WinRmMachineLocation.java,538,,"                LOG.debug(""installing {} to {} on {}, curl failed, attempting local fetch and copy"", new Object[] { url, destPath, this });"
386,./TargetProjects/brooklyn-server/software/winrm/src/main/java/org/apache/brooklyn/location/winrm/WinRmMachineLocation.java,549,,"                LOG.debug(""installing {} complete; {} on {}"", new Object[] { url, destPath, this });"
387,./TargetProjects/brooklyn-server/software/winrm/src/main/java/org/apache/brooklyn/location/winrm/WinRmMachineLocation.java,551,,"                LOG.warn(""installing {} failed; {} on {}: {}"", new Object[] { url, destPath, this, result });"
388,./TargetProjects/brooklyn-server/test-framework/src/main/java/org/apache/brooklyn/test/framework/LoopOverGroupMembersTestCaseImpl.java,87,,"                    logger.warn(""Problem in child test-case of {}, child {} targetting {}"", new Object[] {this, targetableTestComponent, member});"
389,./TargetProjects/brooklyn-server/test-framework/src/main/java/org/apache/brooklyn/test/framework/TestSshCommandImpl.java,206,,"        LOG.debug(""{}, Result is {}\nwith output [\n{}\n] and error [\n{}\n]"", new Object[] {"
390,./TargetProjects/brooklyn-server/test-framework/src/main/java/org/apache/brooklyn/test/framework/TestWinrmCommandImpl.java,174,,"        LOG.debug(""{}, Result is {}\nwith output [\n{}\n] and error [\n{}\n]"", new Object[] {"
391,./TargetProjects/brooklyn-server/test-support/src/main/java/org/apache/brooklyn/test/HttpTestUtils.java,140,,"            LOG.debug(""connection to {} ({}ms) gives {}"", new Object[] { url, (System.currentTimeMillis()-startTime), status });"
392,./TargetProjects/brooklyn-server/test-support/src/main/java/org/apache/brooklyn/test/HttpTestUtils.java,328,,"                LOG.debug(""read of err {} ({}ms) complete; http code {}"", new Object[] { url, Time.makeTimeStringRounded(System.currentTimeMillis()-startTime), status});"
393,./TargetProjects/brooklyn-server/test-support/src/main/java/org/apache/brooklyn/test/performance/PerformanceTestUtils.java,116,,"                            LOG.info(""CPU fraction over last {} was {} ({})"", new Object[] {"
394,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/test/Asserts.java,968,,"                    if (log.isTraceEnabled()) log.trace(""Attempt {} after {} ms: {}"", new Object[] {attempt, System.currentTimeMillis() - startTime, result});"
395,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/test/Asserts.java,984,,"                    if (log.isTraceEnabled()) log.trace(""Attempt {} after {} ms: {}"", new Object[] {attempt, System.currentTimeMillis() - startTime, e.getMessage()});"
396,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/test/Asserts.java,996,,"            log.info(""succeedsEventually exceeded max attempts or timeout - {} attempts lasting {} ms, for {}"", new Object[] {attempt, System.currentTimeMillis()-startTime, c});"
397,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/test/Asserts.java,1038,,"                log.info(""succeedsContinually failed - {} attempts lasting {} ms, for {} (rethrowing)"", new Object[] {attempt, System.currentTimeMillis()-startTime, job});"
398,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/http/HttpTool.java,171,,"            LOG.debug(""connection to {} ({}ms) gives {}"", new Object[] { url, (System.currentTimeMillis()-startTime), status });"
399,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/http/HttpTool.java,200,,"                LOG.debug(""read of err {} ({}ms) complete; http code {}"", new Object[] { url, Time.makeTimeStringRounded(System.currentTimeMillis() - startTime), status});"
400,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/io/FileUtil.java,73,,"            if (LOG.isTraceEnabled()) LOG.trace(""Failed to set permissions to {} for file {}: {}"","
401,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/io/FileUtil.java,77,,"                if (LOG.isDebugEnabled()) LOG.debug(""Failed to set permissions to {} for file {}; expected behaviour on Windows; {}; subsequent failures (on any file) will be logged at trace"","
402,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/io/FileUtil.java,80,,"                LOG.warn(""Failed to set permissions to {} for file {}: {}; subsequent failures (on any file) will be logged at trace"","
403,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/net/Networking.java,158,,"                                if (log.isTraceEnabled()) log.trace(""Port {} : {} @ {} is taken and the address is valid"", new Object[] {a, port, nis});"
404,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/net/Networking.java,184,,"                    log.warn(msg, args);"
405,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/net/Networking.java,186,,"                    log.debug(msg, args);"
406,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/net/Networking.java,188,,"                    log.trace(msg, args);"
407,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/pool/BasicPool.java,124,,"                    if (LOG.isTraceEnabled()) LOG.trace(""{} reusing existing pool entry {} ({})"", new Object[] {this, existing, getMetrics()});"
408,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/pool/BasicPool.java,137,,"        if (LOG.isDebugEnabled()) LOG.debug(""{} acquired and returning new entry {} ({})"", new Object[] {this, result, getMetrics()});"
409,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/pool/BasicPool.java,145,,"            if (LOG.isTraceEnabled()) LOG.trace(""{} executing {} with leasee {}"", new Object[] {this, receiver, lease.leasedObject()});"
410,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/pool/BasicPool.java,155,,"            if (LOG.isDebugEnabled()) LOG.debug(""{} closing, with {} resources ({})"", new Object[] {this, pool.size(), getMetrics()});"
411,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/pool/BasicPool.java,171,,"                if (LOG.isDebugEnabled()) LOG.debug(""{} closing returned leasee {}, because pool closed ({})"", new Object[] {this, val, getMetrics()});"
412,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/pool/BasicPool.java,174,,"                if (LOG.isTraceEnabled()) LOG.trace(""{} adding {} back into pool ({})"", new Object[] {this, val, getMetrics()});"
413,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/repeat/Repeater.java,439,,"                    log.debug(""{}: condition not satisfied, with {} elapsed (limit {})"", "
414,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/time/Time.java,483,,"            log.trace(""Unable to parse '%s' as pure number. Trying smart parse."", timeStringOrig, e);"
415,./TargetProjects/brooklyn-server/utils/rt-felix/src/main/java/org/apache/brooklyn/rt/felix/EmbeddedFelixFramework.java,163,,"                if (LOG.isTraceEnabled()) LOG.trace(""Unable to install manifest from ""+url+"": ""+installResult.getError(), installResult.getError());"
416,./TargetProjects/camel/components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/BindyCsvFactory.java,118,,"                        LOG.debug(""Position defined in the class: {}, position: {}, Field: {}"","
417,./TargetProjects/camel/components/camel-caffeine/src/test/java/org/apache/camel/component/caffeine/cache/CaffeineCacheTestSupport.java,97,,"            LOG.info(""Key %s was removed (%s)%n"", key, cause);"
418,./TargetProjects/camel/components/camel-google/camel-google-bigquery/src/test/java/org/apache/camel/component/google/bigquery/integration/BigQueryITSupport.java,150,,"                LOGGER.info(""Table {} already exist"");"
419,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/example/DataFormatConcurrentTest.java,187,,"        LOG.info(""Sending {} messages to {} took {} ms"","
420,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/example/DataFormatConcurrentTest.java,213,,"        LOG.info(""Sending {} messages to {} took {} ms"","
421,./TargetProjects/camel/components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaConsumer.java,409,,"                                        LOG.warn("
422,./TargetProjects/camel/components/camel-milo/src/main/java/org/apache/camel/component/milo/client/internal/SubscriptionManager.java,327,,"                        LOG.debug(""Failed to write"", error);"
423,./TargetProjects/camel/components/camel-milo/src/main/java/org/apache/camel/component/milo/client/internal/SubscriptionManager.java,351,,"                            LOG.debug(""Failed to call"", error);"
424,./TargetProjects/camel/components/camel-mllp/src/test/java/org/apache/camel/test/junit/rule/mllp/MllpClientResource.java,100,,"            log.warn(String.format(""Exception encountered closing connection to {}:{}"", mllpHost, mllpPort), e);"
425,./TargetProjects/camel/components/camel-mllp/src/test/java/org/apache/camel/test/junit/rule/mllp/MllpClientResource.java,144,,"            log.warn(String.format(""Exception encountered resetting connection to {}:{}"", mllpHost, mllpPort), e);"
426,./TargetProjects/camel/components/camel-mllp/src/test/java/org/apache/camel/test/junit/rule/mllp/MllpServerResource.java,1057,,"                            log.debug(""Client socket was closed - ignoring exception"", clientSocket);"
427,./TargetProjects/camel/components/camel-netty-http/src/main/java/org/apache/camel/component/netty/http/handlers/HttpServerChannelHandler.java,100,,"                    LOG.debug(""Netty request decoder failure (stacktrace)"", decoderResult.cause());"
428,./TargetProjects/camel/components/camel-paho-mqtt5/src/main/java/org/apache/camel/component/paho/mqtt5/PahoMqtt5Consumer.java,96,,"                LOG.debug(""MQTT broker disconnected due {}"", response.getReasonString(), response.getException());"
429,./TargetProjects/camel/components/camel-salesforce/camel-salesforce-component/src/test/java/org/apache/camel/component/salesforce/AnalyticsApiIntegrationTest.java,195,,"        LOG.debug(""Default options"", convertResults);"
430,./TargetProjects/camel/components/camel-vertx/camel-vertx/src/main/java/org/apache/camel/component/vertx/VertxComponent.java,177,,"                            LOG.warn(""Error creating Clustered Vertx {}:{} due {}"", host, port,"
431,./TargetProjects/camel/components/camel-zookeeper/src/main/java/org/apache/camel/component/zookeeper/ZooKeeperProducer.java,193,,"                        LOG.error(format(""Error creating node '%s'"", node), result.getException());"
432,./TargetProjects/camel/core/camel-support/src/main/java/org/apache/camel/saga/InMemorySagaCoordinator.java,171,,"                LOG.error(""Cannot finalize {} the saga"", description, ex);"
433,./TargetProjects/camel-spring-boot/tests/camel-itest-spring-boot/src/main/java/org/apache/camel/itest/springboot/command/UnitTestCommand.java,124,,"                logger.warn(""Exception thrown from test"", f.getException());"
434,./TargetProjects/cayenne/modeler/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/dialog/db/load/DbLoaderContext.java,215,,"        LOGGER.info(""Exception on reverse engineering"", Util.unwindException(th));"
435,./TargetProjects/empire-db/empire-db-jsf2/src/main/java/org/apache/empire/jsf2/pages/PageDefinitions.java,78,,"            log.info(""Registering managed bean '{}' of class '{}' for page '{}'."", new Object[] { beanName, beanClass, v.getPath() });"
436,./TargetProjects/empire-db/empire-db-jsf2/src/main/java/org/apache/empire/jsf2/pages/PagePhaseListener.java,143,,"                log.debug(""Creating page bean {} for {} in Phase {}."", new Object[] { pageClass.getName(), viewId, pe.getPhaseId() });"
437,./TargetProjects/empire-db/empire-db-jsf2/src/main/java/org/apache/empire/jsf2/utils/ValueExpressionUnwrapper.java,111,,"                        log.warn(""Unexpected: ValueExpressionImpl has no Node. Expression \""{}\"" remains unchanged."");"
438,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/DBDDLGenerator.java,328,,"                log.warn(""Error creating the view {0}. This view will be ignored."", v.getName());"
439,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/DBDatabase.java,497,,"            log.warn(""No driver attached for appending qualified name {0}."", name);"
440,./TargetProjects/flume/flume-ng-auth/src/main/java/org/apache/flume/auth/KerberosAuthenticator.java,174,,"        LOG.info(""Attempting kerberos login as principal ({}) from keytab "" +"
441,./TargetProjects/flume/flume-ng-auth/src/main/java/org/apache/flume/auth/KerberosAuthenticator.java,194,,"      LOG.info(""\n{} \nUser: {} \nAuth method: {} \nKeytab: {} \n"","
442,./TargetProjects/flume/flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java,493,,"          LOGGER.error(""Error while matching and filtering configFilter: {} and key: {}"","
443,./TargetProjects/flume/flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java,602,,"            LOGGER.warn("
444,./TargetProjects/flume/flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java,676,,"            LOGGER.warn("
445,./TargetProjects/flume/flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java,780,,"            LOGGER.warn("
446,./TargetProjects/flume/flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java,884,,"            LOGGER.warn("
447,./TargetProjects/flume/flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java,946,,"            LOGGER.warn("
448,./TargetProjects/flume/flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java,985,,"          LOGGER.warn("
449,./TargetProjects/flume/flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java,994,,"          LOGGER.warn(""Agent configuration for '{}' sinkgroup '{}' sink not found: '{}', "" +"
450,./TargetProjects/flume/flume-ng-core/src/main/java/org/apache/flume/client/avro/AvroCLIClient.java,110,,"      logger.error(""Unable to load headerFile"", headerFile, e);"
451,./TargetProjects/flume/flume-ng-core/src/main/java/org/apache/flume/client/avro/ReliableSpoolingFileEventReader.java,169,,"      logger.debug(""Initializing {} with directory={}, metaDir={}, "" +"
452,./TargetProjects/flume/flume-ng-core/src/main/java/org/apache/flume/instrumentation/GangliaServer.java,301,,"        logger.warn(""Invalid ganglia host: "", host);"
453,./TargetProjects/flume/flume-ng-core/src/main/java/org/apache/flume/interceptor/RemoveHeaderInterceptor.java,159,,"        LOG.debug(""Creating RemoveHeaderInterceptor with: withName={}, fromList={}, "" +"
454,./TargetProjects/flume/flume-ng-core/src/main/java/org/apache/flume/lifecycle/LifecycleController.java,56,,"      logger.debug(""Waiting for state {} for delegate:{} up to {}ms"","
455,./TargetProjects/flume/flume-ng-core/src/main/java/org/apache/flume/lifecycle/LifecycleSupervisor.java,135,,"      logger.debug(""Supervising service:{} policy:{} desiredState:{}"","
456,./TargetProjects/flume/flume-ng-core/src/main/java/org/apache/flume/lifecycle/LifecycleSupervisor.java,241,,"            logger.debug(""Want to transition {} from {} to {} (failures:{})"","
457,./TargetProjects/flume/flume-ng-core/src/main/java/org/apache/flume/sink/AbstractRpcSink.java,212,,"      logger.info(""Rpc sink {}: Building RpcClient with hostname: {}, "" +"
458,./TargetProjects/flume/flume-ng-core/src/main/java/org/apache/flume/sink/FailoverSinkProcessor.java,101,,"      logger.debug(""Sink {} failed again, new refresh is at {}, current time {}"","
459,./TargetProjects/flume/flume-ng-core/src/main/java/org/apache/flume/sink/FailoverSinkProcessor.java,133,,"        logger.warn(""{} is not a valid value for {}"","
460,./TargetProjects/flume/flume-ng-core/src/main/java/org/apache/flume/source/AvroSource.java,165,,"      logger.warn(""AVRO source\'s \""threads\"" property must specify an integer value."","
461,./TargetProjects/flume/flume-ng-core/src/main/java/org/apache/flume/source/SequenceGeneratorSource.java,116,,"    logger.info(""Sequence generator source do stopped. Metrics:{}"",getName(), sourceCounter);"
462,./TargetProjects/flume/flume-ng-core/src/main/java/org/apache/flume/source/ThriftSource.java,403,,"        logger.warn(""Thrift source %s could not append events to the channel."", getName());"
463,./TargetProjects/flume/flume-ng-sdk/src/test/java/org/apache/flume/api/RpcTestUtils.java,183,,"    logger.info(""Server started on hostname: {}, port: {}"","
464,./TargetProjects/flume/flume-ng-sinks/flume-dataset-sink/src/main/java/org/apache/flume/sink/kite/DatasetSink.java,461,,"    LOG.debug(""Current time: {}, lastRolled: {}, diff: {} sec"","
465,./TargetProjects/flume/flume-ng-sinks/flume-dataset-sink/src/main/java/org/apache/flume/sink/kite/DatasetSink.java,484,,"        LOG.info(""Closed writer for {} after {} seconds and {} bytes parsed"","
466,./TargetProjects/flume/flume-ng-sinks/flume-hive-sink/src/main/java/org/apache/flume/sink/hive/HiveSink.java,325,,"      LOG.warn(getName() + "" : "" + e.getMessage(), e);"
467,./TargetProjects/flume/flume-ng-sinks/flume-ng-elasticsearch-sink/src/main/java/org/apache/flume/sink/elasticsearch/ElasticSearchSink.java,357,,"    logger.info(""ElasticSearch sink {} started"");"
468,./TargetProjects/flume/flume-ng-sinks/flume-ng-elasticsearch-sink/src/main/java/org/apache/flume/sink/elasticsearch/ElasticSearchSink.java,383,,"    logger.info(""ElasticSearch sink {} stopping"");"
469,./TargetProjects/flume/flume-ng-sinks/flume-ng-kafka-sink/src/main/java/org/apache/flume/sink/kafka/KafkaSink.java,184,,"            logger.debug(""{} was set to true but header {} was null. Producing to {}"" + "
470,./TargetProjects/flume/flume-ng-sinks/flume-ng-morphline-solr-sink/src/main/java/org/apache/flume/sink/solr/morphline/MorphlineSink.java,114,,"      LOGGER.info(""Morphline Sink {} stopped. Metrics: {}, {}"", getName(), sinkCounter);"
471,./TargetProjects/flume/flume-ng-sinks/flume-ng-morphline-solr-sink/src/test/java/org/apache/flume/sink/solr/morphline/TestMorphlineSolrSink.java,372,,"    LOGGER.trace(""sink: "", sink);"
472,./TargetProjects/flume/flume-ng-sinks/flume-ng-morphline-solr-sink/src/test/java/org/apache/flume/sink/solr/morphline/TestMorphlineSolrSink.java,424,,"    LOGGER.info(""sink: "", sink);"
473,./TargetProjects/flume/flume-ng-sources/flume-kafka-source/src/main/java/org/apache/flume/source/kafka/KafkaSource.java,283,,"            log.trace(""Topic: {} Partition: {} Message: {}"", new String[]{"
474,./TargetProjects/flume/flume-ng-sources/flume-taildir-source/src/main/java/org/apache/flume/source/taildir/ReliableTaildirEventReader.java,76,,"      logger.debug(""Initializing {} with directory={}"","
475,./TargetProjects/incubator-brooklyn/brooklyn-library/qa/src/main/java/org/apache/brooklyn/qa/longevity/MonitorUtils.java,70,,"                LOG.info(""Error reading URL {}: {}, {}"", new Object[]{url, statuscode, result.getReasonPhrase()});"
476,./TargetProjects/incubator-brooklyn/brooklyn-library/sandbox/extra/src/main/java/org/apache/brooklyn/entity/database/postgresql/PostgreSqlNodeSaltImpl.java,151,,"            LOG.warn(""Location(s) %s not an ssh-machine location, so not polling for status; setting serviceUp immediately"", getLocations());"
477,./TargetProjects/incubator-brooklyn/brooklyn-library/software/messaging/src/main/java/org/apache/brooklyn/entity/messaging/activemq/ActiveMQQueueImpl.java,43,,"        log.debug(""{} adding queue {} to broker {}"", new Object[] {this, getName(), jmxHelper.getAttribute(brokerMBeanName, ""BrokerName"")});"
478,./TargetProjects/incubator-brooklyn/brooklyn-library/software/messaging/src/test/java/org/apache/brooklyn/entity/messaging/storm/StormAbstractCloudLiveTest.java,174,,"                    if (log.isDebugEnabled()) log.debug(""Attempt {} failed connecting to {} ({})"", new Object[] {attempt + 1, nimbus.getConfig(Storm.NIMBUS_HOSTNAME), e.getMessage()});"
479,./TargetProjects/incubator-brooklyn/brooklyn-library/software/monitoring/src/test/java/org/apache/brooklyn/entity/monitoring/monit/MonitIntegrationTest.java,193,,"                    LOG.debug(""Old PID: {}, New PID: {} read from PID file: {}"", new String[] {initialPid[0], newPid, pidFileLocation});"
480,./TargetProjects/incubator-brooklyn/brooklyn-library/software/network/src/main/java/org/apache/brooklyn/entity/network/bind/BindDnsServerImpl.java,209,,"            LOG.debug(""Skipped update of {} when service state is {} and running is {}"","
481,./TargetProjects/incubator-brooklyn/brooklyn-library/software/network/src/main/java/org/apache/brooklyn/entity/network/bind/BindDnsServerSshDriver.java,136,,"        LOG.info(""Updated named configuration and zone file for '{}' on {} (exit code {})."","
482,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraDatacenterImpl.java,110,,"                    if (log.isDebugEnabled()) log.debug(""Not refreshed seeds of cluster {}, because still waiting for quorum (need {}; have {} potentials)"", new Object[] {CassandraDatacenterImpl.class, quorumSize, potentialSeeds.size()});"
483,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraDatacenterImpl.java,116,,"                            log.warn(""Cluster {} lost all its seeds while starting! Subsequent failure likely, but changing seeds during startup would risk split-brain: seeds={}"", new Object[] {CassandraDatacenterImpl.this, currentSeeds});"
484,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraDatacenterImpl.java,126,,"                        log.debug(""Cluster {} updating seeds: chosen={}; potentialRunning={}"", new Object[] {CassandraDatacenterImpl.this, result, potentialRunningSeeds});"
485,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraDatacenterImpl.java,131,,"                    if (log.isDebugEnabled()) log.debug(""Cluster {} has reached seed quorum: seeds={}"", new Object[] {CassandraDatacenterImpl.this, result});"
486,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraDatacenterImpl.java,522,,"                if (log.isTraceEnabled()) log.trace(""Seeds considered stable for cluster {} (node {} removed)"", new Object[] {CassandraDatacenterImpl.this, member});"
487,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraDatacenterImpl.java,536,,"                if (log.isTraceEnabled()) log.trace(""Seeds considered stable for cluster {} (node {} changed hostname {})"", new Object[] {CassandraDatacenterImpl.this, member, hostname});"
488,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraDatacenterImpl.java,556,,"                if (log.isTraceEnabled()) log.trace(""Seeds considered stable for cluster {} (node {} changed serviceUp {})"", new Object[] {CassandraDatacenterImpl.this, member, serviceUp});"
489,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraDatacenterImpl.java,568,,"                if (log.isTraceEnabled()) log.debug(""Seed refresh no-op for cluster {}: still={}"", new Object[] {CassandraDatacenterImpl.this, oldseeds});"
490,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraDatacenterImpl.java,570,,"                if (log.isDebugEnabled()) log.debug(""Refreshing seeds of cluster {}: now={}; old={}"", new Object[] {this, newseeds, oldseeds});"
491,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraDatacenterImpl.java,584,,"            if (log.isTraceEnabled()) log.trace(""Viable seeds in Cluster {}: {}"", new Object[] {result});"
492,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraDatacenterImpl.java,594,,"            if (log.isTraceEnabled()) log.trace(""Viable running seeds in Cluster {}: {}"", new Object[] {result});"
493,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraDatacenterImpl.java,606,,"            if (log.isTraceEnabled()) log.trace(""Node {} in Cluster {}: viableSeed={}; hostname={}; serviceUp={}; serviceState={}; hasFailed={}"", new Object[] {member, this, result, hostname, serviceUp, serviceState, hasFailed});"
494,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraDatacenterImpl.java,614,,"            if (log.isTraceEnabled()) log.trace(""Node {} in Cluster {}: runningSeed={}; viableSeed={}; serviceUp={}; serviceState={}"", new Object[] {member, this, result, viableSeed, serviceUp, serviceState});"
495,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraFabricImpl.java,98,,"                            log.warn(""Fabric {} lost all its seeds while starting! Subsequent failure likely, but changing seeds during startup would risk split-brain: seeds={}"", new Object[] {CassandraFabricImpl.this, currentSeeds});"
496,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraFabricImpl.java,102,,"                        if (log.isTraceEnabled()) log.trace(""Fabric {} ignoring any potential seed-changes, because {}: seeds={}"", new Object[] {CassandraFabricImpl.this, serviceState, currentSeeds});"
497,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraFabricImpl.java,115,,"                            log.debug(""Fabric {} updating seeds: chosen={}; potential={}"", new Object[] {CassandraFabricImpl.this, result, potentialSeeds});"
498,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraFabricImpl.java,120,,"                    if (log.isDebugEnabled()) log.debug(""Not setting seeds of fabric {} yet, because still waiting for quorum (need {}; have {} potentials from {} members)"", new Object[] {CassandraFabricImpl.this, quorumSize, potentialSeedCount, getMembers()});"
499,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraFabricImpl.java,125,,"                        log.debug(""Not setting seeds of fabric {} yet, because not all datacenters have seeds (sizes are {})"", new Object[] {CassandraFabricImpl.this, datacenterCounts});"
500,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraFabricImpl.java,131,,"                    log.info(""Fabric {} has reached seed quorum: seeds={}"", new Object[] {CassandraFabricImpl.this, result});"
501,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraFabricImpl.java,153,,"                if (log.isTraceEnabled()) log.trace(""Not refresheed seeds of fabric {}, because have quorum {} (of {} members), and none are down: seeds={}"", "
502,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraFabricImpl.java,195,,"            if (log.isTraceEnabled()) log.trace(""Node {} in Fabric {}: viableSeed={}; hostname={}; serviceUp={}; serviceState={}; hasFailed={}"", new Object[] {member, CassandraFabricImpl.this, result, hostname, serviceUp, serviceState, hasFailed});"
503,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraNodeImpl.java,171,,"                    log.debug(""Cassandra NICs inferred {} for {}; using location {}, based on provider {}"", new Object[] {result, this, loc, provider});"
504,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraNodeImpl.java,173,,"                    log.debug(""Cassandra NICs auto-detection failed for {} in location {}: {}"", new Object[] {this, loc, e});"
505,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/couchbase/CouchbaseClusterImpl.java,220,,"                log.info(""Number of SERVICE_UP nodes:{} in cluster:{} reached Quorum:{}, adding the servers"", new Object[]{serversToAdd.size(), getId(), getQuorumSize()});"
506,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/couchbase/CouchbaseClusterImpl.java,315,,"        if (log.isTraceEnabled()) log.trace(""For {}, considering membership of {} which is in locations {}"","
507,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/couchbase/CouchbaseClusterImpl.java,349,,"                    log.info(""Removing couchbase node {}: {}; from cluster"", new Object[]{this, member});"
508,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/couchbase/CouchbaseNodeImpl.java,195,,"                log.warn(""Invalid response code, renaming {} ({}): {}"","
509,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/mongodb/MongoDBClientSupport.java,162,,"                LOG.debug(""Unexpected result of {} on {}: {}"","
510,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/mongodb/MongoDBReplicaSetImpl.java,274,,"                        LOG.trace(""Rescheduling addition of member {} to replica set {}: service_up={}, primary={}"","
511,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/mongodb/MongoDBReplicaSetImpl.java,328,,"                            LOG.trace(""Rescheduling removal of member {} from replica set {}: service_up={}, primary={}"","
512,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/mongodb/sharding/MongoDBShardClusterImpl.java,116,,"                LOG.info(""{} adding shard {}"", new Object[] {MongoDBShardClusterImpl.this, member});"
513,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/mongodb/sharding/MongoDBShardClusterImpl.java,152,,"                                LOG.info(""{} added shard {} via {}"", new Object[]{MongoDBShardClusterImpl.this, replicaSetURL, router});"
514,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/mongodb/sharding/MongoDBShardClusterImpl.java,174,,"                        LOG.warn(""Timeout after {} attempts ({}) adding shard {}; aborting"", "
515,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/riak/RiakClusterImpl.java,160,,"            log.trace(""For {}, considering membership of {} which is in locations {}"", new Object[]{ this, member, member.getLocations() });"
516,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/riak/RiakClusterImpl.java,183,,"                    log.info(""Added initial Riak node {}: {}; {} to new cluster"", new Object[] { this, member, getRiakName(member) });"
517,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/riak/RiakClusterImpl.java,196,,"                            log.info(""Added Riak node {}: {}; {} to cluster"", new Object[] { this, member, getRiakName(member) });"
518,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/riak/RiakClusterImpl.java,215,,"                    log.info(""Removed Riak node {}: {}; {} from cluster"", new Object[]{ this, member, getRiakName(member) });"
519,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/test/java/org/apache/brooklyn/entity/nosql/cassandra/CassandraNodeLiveTest.java,59,,"        log.info(""Testing Cassandra on {}{} using {} ({})"", new Object[] { provider, Strings.isNonEmpty(region) ? "":"" + region : """", description, imageId });"
520,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/test/java/org/apache/brooklyn/entity/nosql/couchdb/CouchDBNodeLiveTest.java,59,,"        log.info(""Testing CouchDB on {}{} using {} ({})"", new Object[] { provider, Strings.isNonEmpty(region) ? "":"" + region : """", description, imageId });"
521,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/test/java/org/apache/brooklyn/entity/nosql/mongodb/MongoDBTestHelper.java,53,,"        LOG.info(""Inserting {}:{} at {}"", new Object[]{key, value, entity});"
522,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/test/java/org/apache/brooklyn/entity/nosql/mongodb/MongoDBTestHelper.java,69,,"        LOG.info(""Getting {} from {}"", new Object[]{id, entity});"
523,./TargetProjects/incubator-brooklyn/brooklyn-library/software/nosql/src/test/java/org/apache/brooklyn/entity/nosql/solr/SolrServerLiveTest.java,65,,"        log.info(""Testing Solr on {}{} using {} ({})"", new Object[] { provider, Strings.isNonEmpty(region) ? "":"" + region : """", description, imageId });"
524,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/dns/AbstractGeoDnsServiceImpl.java,347,,"                log.warn(""Invalid URL {} for entity {} in {}"", new Object[] {url, entity, this});"
525,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/dns/AbstractGeoDnsServiceImpl.java,371,,"                    if (log.isTraceEnabled()) log.trace(""GeoDns failed to infer GeoInfo from hostname {}; will try with IP {} ({})"", new Object[] {hostname, ip, e});"
526,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/dns/AbstractGeoDnsServiceImpl.java,381,,"                if (log.isTraceEnabled()) log.trace(""GeoDns inferred GeoInfo {} from ip {} (could not infer from hostname {})"", new Object[] {geoH, ip, hostname});"
527,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/dns/AbstractGeoDnsServiceImpl.java,384,,"                if (log.isTraceEnabled()) log.trace(""GeoDns inferred GeoInfo {} from hostname {}; switching it to ip {}"", new Object[] {geoH, hostname, ip});"
528,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/dns/geoscaling/GeoscalingDnsServiceImpl.java,170,,"            log.info(""GeoScaling {} smart subdomain '{}.{}' does not exist, creating it now"", new Object[] {this, smartSubdomainName, primaryDomainName});"
529,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractControllerImpl.java,157,,"        LOG.info(""Resetting {}, server pool targets {}"", new Object[] {this, serverPoolTargets});"
530,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractControllerImpl.java,393,,"                LOG.info(""Updating {}, server pool targets {}"", new Object[] {this, getAttribute(SERVER_POOL_TARGETS)});"
531,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractControllerImpl.java,405,,"            if (LOG.isTraceEnabled()) LOG.trace(""For {}, considering membership of {} which is in locations {}"", "
532,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractControllerImpl.java,438,,"                LOG.info(""Removing from {}, member {} with old address {}, because inferred address is now null"", new Object[] {this, member, oldAddress});"
533,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractControllerImpl.java,441,,"                    LOG.info(""Replacing in {}, member {} with old address {}, new address {}"", new Object[] {this, member, oldAddress, newAddress});"
534,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractControllerImpl.java,443,,"                    LOG.info(""Adding to {}, new member {} with address {}"", new Object[] {this, member, newAddress});"
535,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractControllerImpl.java,448,,"                if (LOG.isTraceEnabled()) LOG.trace(""For {}, ignoring change in member {} because address still {}"", new Object[] {this, member, newAddress});"
536,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractControllerImpl.java,462,,"                if (LOG.isTraceEnabled()) LOG.trace(""For {}, not removing as don't have member {}"", new Object[] {this, member});"
537,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractControllerImpl.java,468,,"            LOG.info(""Removing from {}, member {} with address {}"", new Object[] {this, member, address});"
538,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractControllerImpl.java,481,,"                LOG.error(""No host:port set for {} (using attribute {}); skipping in {}"", "
539,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractControllerImpl.java,491,,"            LOG.error(""Unable to construct hostname:port representation for {} ({}:{}); skipping in {}"", "
540,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractNonProvisionedControllerImpl.java,150,,"            LOG.info(""Resetting {}, members {} with addresses {}"", new Object[] {this, serverPoolTargets, serverPoolAddresses});"
541,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractNonProvisionedControllerImpl.java,181,,"        if (LOG.isTraceEnabled()) LOG.trace(""For {}, considering membership of {} which is in locations {}"", "
542,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractNonProvisionedControllerImpl.java,222,,"            if (LOG.isTraceEnabled()) LOG.trace(""For {}, not adding as already have member {}"", new Object[] {this, member});"
543,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractNonProvisionedControllerImpl.java,231,,"        LOG.info(""Adding to {}, new member {} with address {}"", new Object[] {this, member, address});"
544,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractNonProvisionedControllerImpl.java,239,,"            if (LOG.isTraceEnabled()) LOG.trace(""For {}, not removing as don't have member {}"", new Object[] {this, member});"
545,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractNonProvisionedControllerImpl.java,248,,"        LOG.info(""Removing from {}, member {} with address {}"", new Object[] {this, member, address});"
546,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractNonProvisionedControllerImpl.java,261,,"                LOG.error(""No host:port set for {} (using attribute {}); skipping in {}"", "
547,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/AbstractNonProvisionedControllerImpl.java,271,,"            LOG.error(""Unable to construct hostname:port representation for {} ({}:{}); skipping in {}"", "
548,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/nginx/NginxControllerImpl.java,249,,"        if (LOG.isDebugEnabled()) LOG.debug(""Reconfiguring {}, targetting {} and {}"", new Object[] {this, getServerPoolAddresses(), getUrlMappings()});"
549,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/nginx/NginxDefaultConfigGenerator.java,131,,"                            LOG.warn(""{} mapping {} provides SSL config for {} when a different config had already been provided by another mapping, ignoring this one"","
550,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/nginx/NginxDefaultConfigGenerator.java,138,,"                            LOG.warn(""{} mapping {} provides SSL config for {} when a different config had been provided at root nginx scope, ignoring this one"","
551,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/nginx/NginxSshDriver.java,463,,"                        if (log.isDebugEnabled()) log.debug(""Executing {}; incremented count to {}"", new Object[] {summary, counter});"
552,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/nginx/NginxSshDriver.java,466,,"                        if (log.isDebugEnabled()) log.debug(""Failed executing {}; reseting count to {} and propagating exception: {}"", new Object[] {summary, preCount, e});"
553,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/proxy/nginx/NginxSshDriver.java,471,,"                    if (log.isDebugEnabled()) log.debug(""Not executing {} because executed by another thread subsequent to us attempting (preCount {}; count {})"", new Object[] {summary, preCount, counter});"
554,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/main/java/org/apache/brooklyn/entity/webapp/ControlledDynamicWebAppClusterImpl.java,116,,"            log.warn(""In {}, not setting cluster's {} because already set on webClusterSpec"", new Object[] {this, webClusterFlags.keySet()});"
555,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/test/java/org/apache/brooklyn/entity/dns/geoscaling/GeoscalingIntegrationTest.java,140,,"        LOG.info(""geo-scaling test, using {}.{}; expect to be wired to {}"", new Object[] {subDomain, primaryDomain, addrWithGeo});"
556,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/test/java/org/apache/brooklyn/entity/dns/geoscaling/GeoscalingIntegrationTest.java,153,,"        LOG.info(""geo-scaling test, using {}.{}; expect not to be wired to {}"", new Object[] {subDomain, primaryDomain, addrWithoutGeo});"
557,./TargetProjects/incubator-brooklyn/brooklyn-library/software/webapp/src/test/java/org/apache/brooklyn/entity/dns/geoscaling/GeoscalingIntegrationTest.java,170,,"        LOG.info(""geo-scaling test, using {}.{}; expect to be wired to {}"", new Object[] {subDomain, primaryDomain, addrWithoutGeo});"
558,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/config/external/vault/VaultAppIdExternalConfigSupplier.java,57,,"        LOG.info(""Config supplier named {} using Vault at {} appID {} userID {} path {}"", new Object[] {"
559,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/config/external/vault/VaultExternalConfigSupplier.java,98,,"            LOG.debug(""Vault response - code: {} {}"", new Object[]{Integer.toString(response.getResponseCode()), response.getReasonPhrase()});"
560,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/config/external/vault/VaultExternalConfigSupplier.java,120,,"            LOG.debug(""Vault response - code: {} {}"", new Object[]{Integer.toString(response.getResponseCode()), response.getReasonPhrase()});"
561,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/effector/Effectors.java,148,,"                    log.debug(""Replacing invocation of {} on {} with {} which is the impl defined at that entity"", new Object[] { eff, entity, eff2 });"
562,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/effector/Effectors.java,151,,"                    log.warn(""Effector {} defined on {} has no body; invoking caller-supplied {} instead"", new Object[] { eff2, entity, eff });"
563,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/effector/Effectors.java,155,,"            log.debug(""Effector {} does not exist on {}; attempting to invoke anyway"", new Object[] { eff, entity });"
564,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/AbstractEntity.java,342,,"            LOG.warn(""bulk/flag configuration being made to {} after deployment: may not be supported in future versions ({})"", "
565,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/AbstractEntity.java,1249,,"                LOG.debug(""configuration being made to {} after deployment: {} = {}; change may not be visible in other contexts"", "
566,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/EntityDynamicType.java,301,,"                        LOG.trace(""multiple definitions for effector {} on {}; preferring {} from {} to {} from {}"", new Object[] {"
567,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/EntityDynamicType.java,327,,"                        LOG.trace(""multiple definitions for effector {} on {}; preferring {} from {} to {} from {}"", new Object[] {"
568,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/EntityDynamicType.java,361,,"                            LOG.trace(""multiple definitions for config sensor {} on {}; preferring {} from {} to {} from {}"", new Object[] {"
569,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/EntityDynamicType.java,364,,"                            LOG.warn(""multiple definitions for sensor {} on {}; preferring {} from {} to {} from {}"", new Object[] {"
570,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/entity/lifecycle/ServiceStateLogic.java,552,,"            if (log.isTraceEnabled()) log.trace(""{} updating map sensor {} with {}"", new Object[] { this, sensor, value });"
571,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/AttributePollHandler.java,98,,"        if (log.isTraceEnabled()) log.trace(""poll for {} got: {}"", new Object[] {getBriefDescription(), val});"
572,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/AttributePollHandler.java,140,,"            if (log.isTraceEnabled()) log.trace(""Read of {} in {} gave exception (while not connected or not yet connected): {}"", new Object[] {this, getBriefDescription(), exception});"
573,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/AttributePollHandler.java,161,,"                log.trace(""Recurring {} reading {} in {}: {}"", new Object[] {type, this, getBriefDescription(), val});"
574,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/AttributePollHandler.java,179,,"                        log.debug(""Trace for ""+type+"" reading ""+getBriefDescription()+"": ""+val, (Throwable)val);"
575,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/AttributePollHandler.java,195,,"                        log.debug(""Trace for ""+type+"" reading ""+getBriefDescription()+"": ""+val, (Throwable)val);"
576,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/AttributePollHandler.java,198,,"                        log.debug(""Recurring {} reading {} in {} (still in grace period): {}"", new Object[] {type, this, getBriefDescription(), val});"
577,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/Poller.java,84,,"                            if (log.isTraceEnabled()) log.trace(""PollJob for {}, repeated consecutive failures, handling {} using {}"", new Object[] {job, e, handler});"
578,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/Poller.java,86,,"                            if (log.isDebugEnabled()) log.debug(""PollJob for {} handling {} using {}"", new Object[] {job, e, handler});"
579,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/Poller.java,130,,"        if (log.isDebugEnabled()) log.debug(""Starting poll for {} (using {})"", new Object[] {entity, this});"
580,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/Poller.java,166,,"                if (log.isDebugEnabled()) log.debug(""Activating poll (but leaving off, as period {}) for {} (using {})"", new Object[] {pollJob.pollPeriod, entity, this});"
581,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/feed/Poller.java,172,,"        if (log.isDebugEnabled()) log.debug(""Stopping poll for {} (using {})"", new Object[] {entity, this});"
582,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/location/LocationConfigUtils.java,327,,"                    log.debug(""Encountered error handling key ""+label+"": ""+e, e);"
583,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/location/LocationPropertiesFromBrooklynProperties.java,210,,"                LOG.warn(""Deprecated key {}, transformed to {}; will not be supported in future versions"", new Object[] {key, transformedKey});"
584,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/location/access/BrooklynAccessUtils.java,74,,"                        log.debug(""BrooklynAccessUtils found port-forwarded address {} for entity {}, port {}, using machine {}"","
585,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/location/access/BrooklynAccessUtils.java,90,,"                            log.debug(""BrooklynAccessUtils created port-forwarded address {} for entity {}, port {}, using {}"","
586,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/ha/HighAvailabilityManagerImpl.java,698,,"        if (LOG.isDebugEnabled()) LOG.debug(""Healthy-master check result={}; masterId={}; masterMemento={}; ourMemento={}"","
587,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/ha/HighAvailabilityManagerImpl.java,774,,"            LOG.debug(""Management node master-change required: newMaster={}; oldMaster={}; plane={}, self={}; heartbeatTimeout={}"", "
588,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/ha/ManagementPlaneSyncRecordPersisterToObjectStore.java,201,,"        LOG.trace(""Loading nodes from {}; {} nodes."","
589,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/EffectorUtils.java,243,,"            if (log.isDebugEnabled()) log.debug(""Invoking effector {} on {}"", new Object[] {name, entity});"
590,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/EffectorUtils.java,244,,"            if (log.isTraceEnabled()) log.trace(""Invoking effector {} on {} with args {}"", new Object[] {name, entity, args});"
591,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/EffectorUtils.java,280,,"        if (log.isDebugEnabled()) log.debug(""Invoking-async effector {} on {}"", new Object[] { name, entity });"
592,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/EffectorUtils.java,281,,"        if (log.isTraceEnabled()) log.trace(""Invoking-async effector {} on {} with args {}"", new Object[] { name, entity, parameters });"
593,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalEntityManager.java,572,,"                log.warn(""Activating local management for {} due to effector invocation on {}: {}"", new Object[]{rootUnmanaged, entity, context});"
594,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalEntityManager.java,618,,"                log.warn(""{} redundant call to pre-start management of entity {}, mode {}; ignoring"", new Object[] { this, e, mode });"
595,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalEntityManager.java,624,,"            if (log.isTraceEnabled()) log.trace(""{} pre-start management of entity {}, mode {}"", "
596,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalEntityManager.java,738,,"                log.error(""{} call to stop management of entity {} removed different entity {}"", new Object[] { this, e, old });"
597,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalLocationManager.java,435,,"            log.error(""{} call to stop management of location {} removed different location {}; ignoring"", new Object[] { this, loc, old });"
598,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalSubscriptionManager.java,114,,"        if (LOG.isDebugEnabled()) LOG.debug(""Creating subscription {} for {} on {} {} in {}"", new Object[] {s.id, s.subscriber, producer, sensor, this});"
599,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalSubscriptionManager.java,132,,"                if (LOG.isTraceEnabled()) LOG.trace(""sending initial value of {} -> {} to {}"", new Object[] {s.producer, s.sensor, s});"
600,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalSubscriptionManager.java,216,,"            if (LOG.isTraceEnabled()) LOG.trace(""sending {}, {} to {}"", new Object[] {event.getSensor().getName(), event, join(subs, "","")});"
601,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalUsageManager.java,244,,"        log.debug(""Storing application lifecycle usage event: application {} in state {}"", new Object[] {app, state});"
602,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalUsageManager.java,300,,"            log.debug(""Storing location lifecycle usage event: location {} in state {}; caller context {}"", new Object[] {loc, state, callerContext});"
603,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/internal/LocalUsageManager.java,328,,"            log.trace(""Not recording location lifecycle usage event for {} in state {}, because no caller context"", new Object[] {loc, state});"
604,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/persist/BrooklynMementoPersisterToObjectStore.java,270,,"        LOG.debug(""Loaded rebind lists; took {}: {} entities, {} locations, {} policies, {} enrichers, {} feeds, {} catalog items; from {}"", new Object[]{"
605,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/persist/BrooklynMementoPersisterToObjectStore.java,311,,"            LOG.debug(""Loaded rebind raw data; took {}; {} entities, {} locations, {} policies, {} enrichers, {} feeds, {} catalog items, from {}"", new Object[]{"
606,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/persist/BrooklynMementoPersisterToObjectStore.java,376,,"            LOG.debug(""Loaded rebind manifests; took {}: {} entities, {} locations, {} policies, {} enrichers, {} feeds, {} catalog items; from {}"", new Object[]{"
607,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/persist/BrooklynMementoPersisterToObjectStore.java,424,,"            LOG.debug(""Loaded rebind mementos; took {}: {} entities, {} locations, {} policies, {} enrichers, {} feeds, {} catalog items, from {}"", new Object[]{"
608,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/persist/BrooklynMementoPersisterToObjectStore.java,552,,"        if (LOG.isDebugEnabled()) LOG.debug(""Checkpointed ""+(previouslyQueued ? ""previously queued "" : """")+""delta of memento in {}: """
609,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/persist/FileBasedObjectStore.java,371,,"            log.trace(""Completly moved from {} to {} completed"", new Object[] { srcFile, destFile });"
610,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/AbstractBrooklynObjectRebindSupport.java,96,,"                    LOG.warn(""Item not found; discarding item {} relation {} of entity {}({})"","
611,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicEntityRebindSupport.java,132,,"                LOG.warn(""Policy not found; discarding policy {} of entity {}({})"","
612,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicEntityRebindSupport.java,150,,"                LOG.warn(""Enricher not found; discarding enricher {} of entity {}({})"","
613,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicEntityRebindSupport.java,175,,"                LOG.warn(""Feed not found; discarding feed {} of entity {}({})"","
614,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicEntityRebindSupport.java,189,,"                        LOG.warn(""Entity not found; discarding member {} of group {}({})"","
615,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicEntityRebindSupport.java,209,,"                LOG.warn(""Entity not found; discarding child {} of entity {}({})"","
616,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicEntityRebindSupport.java,220,,"            LOG.warn(""Entity not found; discarding parent {} of entity {}({}), so entity will be orphaned and unmanaged"","
617,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicEntityRebindSupport.java,231,,"                LOG.warn(""Location not found; discarding location {} of entity {}({})"","
618,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicLocationRebindSupport.java,124,,"                LOG.warn(""Ignoring child {} of location {}({}), as cannot be found"", new Object[] {childId, memento.getType(), memento.getId()});"
619,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/BasicLocationRebindSupport.java,134,,"            LOG.warn(""Ignoring parent {} of location {}({}), as cannot be found"", new Object[] {memento.getParent(), memento.getType(), memento.getId()});"
620,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/PeriodicDeltaChangeListener.java,393,,"            if (LOG.isDebugEnabled() && shouldLogCheckpoint()) LOG.debug(""Checkpointing delta of memento: """
621,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/PeriodicDeltaChangeListener.java,402,,"            if (LOG.isTraceEnabled()) LOG.trace(""Checkpointing delta of memento with references: """
622,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/mgmt/rebind/RebindManagerImpl.java,190,,"        LOG.debug(""{} initialized, settings: policies={}, enrichers={}, feeds={}, catalog={}"","
623,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/objs/AdjunctType.java,147,,"                    if (LOG.isDebugEnabled()) LOG.debug(""multiple definitions for config key {} on {}; preferring that in sub-class: {} to {}"", new Object[] {"
624,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/objs/AdjunctType.java,150,,"                    LOG.warn(""multiple definitions for config key {} on {}; preferring {} to {}"", new Object[] {"
625,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/objs/BrooklynDynamicType.java,207,,"                            LOG.trace(""multiple definitions for config key {} on {}; same value {}; "" +"
626,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/objs/BrooklynDynamicType.java,217,,"                            LOG.trace(""multiple definitions for config key {} on {}; "" +"
627,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/objs/BrooklynDynamicType.java,226,,"                        LOG.warn(""multiple ambiguous definitions for config key {} on {}; "" +"
628,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/AttributeMap.java,118,,"            log.trace(""setting sensor {}={} for {}"", new Object[] {path, newValue, entity});"
629,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/AttributeMap.java,141,,"                log.trace(""setting attribute {} to {} (was {}) on {}"", new Object[] {attribute.getName(), newValue, oldValue, entity});"
630,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/AttributeMap.java,143,,"                log.trace(""setting attribute {} to {} (unchanged) on {}"", new Object[] {attribute.getName(), newValue, this});"
631,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/AttributeMap.java,161,,"                if (log.isTraceEnabled()) log.trace(""modified attribute {} to {} (was {}) on {}"", new Object[] {attribute.getName(), newValue, oldValue, entity});"
632,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/AttributeMap.java,164,,"                if (log.isTraceEnabled()) log.trace(""modified attribute {} unchanged; not emitting on {}"", new Object[] {attribute.getName(), newValue, this});"
633,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/AttributeMap.java,182,,"            log.trace(""removing sensor {} for {}"", new Object[] {path, entity});"
634,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/PortAttributeSensorAndConfigKey.java,95,,"                LOG.trace(""Convert config to sensor for {} found locations: {}. Selected: {}"", new Object[] {entity, locations, lo});"
635,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/PortAttributeSensorAndConfigKey.java,108,,"                        LOG.debug(""{}: choosing port {} for {}"", new Object[] { entity, p, getName() });"
636,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/PortAttributeSensorAndConfigKey.java,115,,"                            LOG.warn(""{}: no port available for {} (empty range {})"", new Object[] { entity, getName(), value });"
637,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/PortAttributeSensorAndConfigKey.java,119,,"                                LOG.warn(""{}: port {} not available for {}"", new Object[] { entity, pp, getName() });"
638,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/PortAttributeSensorAndConfigKey.java,121,,"                                LOG.warn(""{}: port {} not available for {} (root may be required?)"", new Object[] { entity, pp, getName() });"
639,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/PortAttributeSensorAndConfigKey.java,124,,"                            LOG.warn(""{}: no port available for {} (tried range {})"", new Object[] { entity, getName(), value });"
640,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/PortAttributeSensorAndConfigKey.java,131,,"                LOG.debug(""{}: choosing port {} (unconfirmed) for {}"", new Object[] { entity, v, getName() });"
641,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/core/sensor/PortAttributeSensorAndConfigKey.java,134,,"                LOG.warn(""{}: ports not applicable, or not yet applicable, because has multiple locations {}; ignoring "", new Object[] { entity, locations, getName() });"
642,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/enricher/stock/AbstractAggregatingEnricher.java,87,,"        if (LOG.isDebugEnabled()) LOG.debug(""{} linked ({}, {}) to {}"", new Object[] {this, producer, source, target});"
643,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/enricher/stock/AbstractAggregatingEnricher.java,99,,"                if (LOG.isDebugEnabled()) LOG.debug(""{} already had value ({}) for producer ({}); but that producer has just been added"", new Object[] {this, vo, producer});"
644,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/enricher/stock/AbstractAggregatingEnricher.java,107,,"        if (LOG.isDebugEnabled()) LOG.debug(""{} unlinked ({}, {}) from {}"", new Object[] {this, producer, source, target});"
645,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/enricher/stock/AbstractAggregator.java,214,,"        if (LOG.isDebugEnabled()) LOG.debug(""{} stopped listening to {}"", new Object[] {this, producer });"
646,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/enricher/stock/Aggregator.java,173,,"                if (LOG.isDebugEnabled()) LOG.debug(""{} already had value ({}) for producer ({}); but that producer has just been added"", new Object[] {this, vo, producer});"
647,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/enricher/stock/Propagator.java,172,,"        if (LOG.isTraceEnabled()) LOG.trace(""enricher {} got {}, propagating via {}{}"", "
648,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/enricher/stock/SensorPropagatingEnricher.java,145,,"        if (log.isTraceEnabled()) log.trace(""policy {} got {}, propagating via {}{}"", "
649,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/enricher/stock/YamlTimeWeightedDeltaEnricher.java,67,,"                            if (LOG.isTraceEnabled()) LOG.trace(""{} received event but no last value so will not emit, null -> {} at {}"", new Object[] {this, current, eventTime}); "
650,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/enricher/stock/reducer/Reducer.java,133,,"        if (LOG.isTraceEnabled()) LOG.trace(""enricher {} got {}, propagating via {} as {}"","
651,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,358,,"            LOG.warn(""On start of cluster {}, misconfigured initial quorum size {} greater than initial size{}; using {}"", new Object[] {initialQuorumSize, initialSize, initialSize});"
652,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,451,,"            LOG.warn("
653,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,556,,"                LOG.info(""Resize {} from {} to {}"", new Object[] {this, originalSize, desiredSize});"
654,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,558,,"                if (LOG.isDebugEnabled()) LOG.debug(""Resize no-op {} from {} to {}"", new Object[] {this, originalSize, desiredSize});"
655,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,586,,"        LOG.info(""In {}, replacing member {} ({})"", new Object[] {this, memberId, member});"
656,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,610,,"                            LOG.debug(""In {} replacing member {} ({}), inferred its sub-location is {}"", new Object[] {this, memberId, member, memberLoc});"
657,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,618,,"                        LOG.warn(""In {} replacing member {} ({}), has no locations; falling back to first availability zone: {}"", new Object[] {this, memberId, member, memberLoc});"
658,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,621,,"                        LOG.warn(""In {} replacing member {} ({}), could not find matching sub-location; falling back to its actual location: {}"", new Object[] {this, memberId, member, memberLoc});"
659,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicClusterImpl.java,920,,"            LOG.debug(""Creating and adding a node to cluster {}({}) with properties {}"", new Object[] { this, getId(), Sanitizer.sanitize(createFlags) });"
660,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicFabricImpl.java,235,,"        logger.info(""Creating entity in fabric {} at {}{}"", new Object[] {this, location, "
661,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/entity/group/DynamicGroupImpl.java,201,,"                log.debug(""{} not (yet) scanning for children: no filter defined"", this, this);"
662,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/feed/ssh/SshFeed.java,271,,"        if (log.isTraceEnabled()) log.trace(""Ssh polling for {}, executing {} with env {}"", new Object[] {machine, command, env});"
663,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/location/ssh/SshMachineLocation.java,364,,"                            LOG.debug(""{} building ssh pool for {} with properties: {}"","
664,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/location/ssh/SshMachineLocation.java,899,,"        LOG.debug(""installing {} to {} on {}, attempting remote curl"", new Object[] { url, destPath, this });"
665,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/location/ssh/SshMachineLocation.java,914,,"                LOG.debug(""installing {} to {} on {}, curl failed, attempting local fetch and copy"", new Object[] { url, destPath, this });"
666,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/location/ssh/SshMachineLocation.java,925,,"                LOG.debug(""installing {} complete; {} on {}"", new Object[] { url, destPath, this });"
667,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/location/ssh/SshMachineLocation.java,927,,"                LOG.warn(""installing {} failed; {} on {}: {}"", new Object[] { url, destPath, this, result });"
668,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/location/ssh/SshMachineLocation.java,999,,"                if (LOG.isDebugEnabled()) LOG.debug(""Not reachable: {}, executing `{}`, exit code {}"", new Object[] {this, cmd, result});"
669,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/internal/ssh/BackoffLimitedRetryHandler.java,64,,"        if (LOG.isDebugEnabled()) LOG.debug(""Retry {}/{}: delaying for {} ms: {}"", "
670,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/internal/ssh/cli/SshCliTool.java,157,,"                        LOG.warn(""Error setting file owner to {}, after copying file {} to {}:{}; exit code {}"", new Object[] { uid, pathAndFileOnRemoteServer, this, f, result });"
671,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/internal/ssh/cli/SshCliTool.java,161,,"                LOG.warn(""Error setting file permissions to {}, after copying file {} to {}:{}; exit code {}"", new Object[] { permissions, pathAndFileOnRemoteServer, this, f, result });"
672,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/internal/ssh/cli/SshCliTool.java,164,,"            LOG.warn(""Error copying file {} to {}:{}; exit code {}"", new Object[] {pathAndFileOnRemoteServer, this, f, result});"
673,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/internal/ssh/sshj/SshjTool.java,643,,"                if (LOG.isTraceEnabled()) LOG.trace(""SSH Performance: {} {} took {}"", new Object[] {"
674,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/internal/ssh/sshj/SshjTool.java,665,,"                    LOG.debug(""<< {} (rethrowing, out of time - max {}): {}"", new Object[] { fullMessage, Time.makeTimeStringRounded(sshTriesTimeout), e.getMessage() });"
675,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/task/BasicExecutionManager.java,659,,"            log.trace(""Submitting task {} ({}), with flags {}, and tags {}, job {}; caller {}"", "
676,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/task/DynamicSequentialTask.java,216,,"            log.trace(""task {} - submitting background task {} ({})"", new Object[] { Tasks.current(), task, ec });"
677,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/task/system/internal/ExecWithLoggingHelpers.java,113,,"            commandLogger.debug(""{}, initiating ""+shortName.toLowerCase()+"" on machine {}{}: {}"","
678,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/task/system/internal/ExecWithLoggingHelpers.java,168,,"                            commandLogger.debug(""{}, on machine {}, completed: return status {}"","
679,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/main/java/org/apache/brooklyn/util/core/task/system/internal/ExecWithLoggingHelpers.java,179,,"                commandLogger.debug(""{}, on machine {}, failed: {}"", new Object[] {summaryForLogging, getTargetName(), e});"
680,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/enricher/stock/CustomAggregatingEnricherTest.java,327,,"        log.debug(""created {} and the entities it will contain {} {}"", new Object[] {group, p1, p2});"
681,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/location/ssh/SshMachineLocationPerformanceTest.java,164,,"            LOG.info(""Executing {}; completed {}; took {}; fraction cpu {}"","
682,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/internal/ssh/SshToolAbstractPerformanceTest.java,118,,"            LOG.info(""Executing {}; completed {}; took {}; fraction cpu {}"", new Object[] {context, (i+1), Time.makeTimeStringRounded(elapsedTime), fractionCpu});"
683,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/internal/ssh/SshToolAbstractPerformanceTest.java,134,,"        if (LOG.isTraceEnabled()) LOG.trace(""Executed: result={}; stdout={}; stderr={}"", new Object[] {result, outlen, errlen});"
684,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/BasicTaskExecutionPerformanceTest.java,201,,"        log.info(""Executed {} tasks; {}ms total; {}ms to submit"", new Object[] {numTasks, totalTime, submitTime});"
685,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,71,,"        log.info(""done one ({}) {} {}"", new Object[] {interimResult, t, t.getStatusDetail(false)});"
686,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,75,,"        log.info(""ended ({}) {} {}"", new Object[] {finalResult, t, t.getStatusDetail(false)});"
687,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,145,,"        log.info(""done one ({}) {} {}"", new Object[] {interimResult, t, t.getStatusDetail(false)});"
688,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,149,,"        log.info(""ended ({}) {} {}"", new Object[] {finalResult, t, t.getStatusDetail(false)});"
689,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,175,,"        log.info(""done one ({}) {} {}"", new Object[] {interimResult, t, t.getStatusDetail(false)});"
690,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,179,,"        log.info(""ended ({}) {} {}"", new Object[] {i, t, t.getStatusDetail(false)});"
691,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,209,,"        log.info(""done one ({}) {} {}"", new Object[] {interimResult, t, t.getStatusDetail(false)});"
692,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,220,,"        log.info(""blocked until ended ({}) {} {}, in {}"", new Object[] {i, t, t.getStatusDetail(false), Duration.of(timer)});"
693,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,228,,"        log.info(""ended ({}) {} {}, in {}"", new Object[] {i, t, t.getStatusDetail(false), Duration.of(timer)});"
694,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,263,,"        log.info(""done one ({}) {} {}"", new Object[] {interimResult, t, t.getStatusDetail(false)});"
695,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,274,,"        log.info(""blocked until ended ({}) {} {}, in {}"", new Object[] {i, t, t.getStatusDetail(false), Duration.of(timer)});"
696,./TargetProjects/incubator-brooklyn/brooklyn-server/core/src/test/java/org/apache/brooklyn/util/core/task/ScheduledExecutionTest.java,283,,"        log.info(""ended ({}) {} {}, in {}"", new Object[] {i, t, t.getStatusDetail(false), Duration.of(timer)});"
697,./TargetProjects/incubator-brooklyn/brooklyn-server/launcher/src/main/java/org/apache/brooklyn/launcher/BrooklynLauncher.java,996,,"                    LOG.info(""Starting brooklyn application {} in location{} {}"", new Object[] { app, locations.size()!=1?""s"":"""", locations });"
698,./TargetProjects/incubator-brooklyn/brooklyn-server/launcher/src/main/java/org/apache/brooklyn/launcher/BrooklynLauncher.java,999,,"                    LOG.error(""Error starting ""+app+"": ""+Exceptions.collapseText(e), Exceptions.getFirstInteresting(e));"
699,./TargetProjects/incubator-brooklyn/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,613,,"                LOG.warn(""Attempt #{}/{} to obtain machine threw error: {}"", new Object[]{i, attempts, e});"
700,./TargetProjects/incubator-brooklyn/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,665,,"                LOG.info(""Waiting in {} for machine-creation permit ({} other queuing requests already)"", new Object[] {this, machineCreationSemaphore.getQueueLength()});"
701,./TargetProjects/incubator-brooklyn/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,713,,"                LOG.debug(""jclouds using template {} / options {} to provision machine in {}"","
702,./TargetProjects/incubator-brooklyn/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,736,,"                LOG.debug(""jclouds created Windows VM {}; transforming connection details: loginPort from {} to {}; loginUser from {} to {}"", "
703,./TargetProjects/incubator-brooklyn/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,778,,"                LOG.debug(""node {} username {} / {} (customCredentials)"", new Object[] { node, customCredentials.getUser(), oldUsername });"
704,./TargetProjects/incubator-brooklyn/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,824,,"                    LOG.warn(""No port-forward manager for {} so could not associate {} -> {} for {}"","
705,./TargetProjects/incubator-brooklyn/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,962,,"                        LOG.warn(""Ignoring flag EXTRA_PUBLIC_KEY_URLS_TO_AUTH on Windows location"", machineLocation);"
706,./TargetProjects/incubator-brooklyn/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsSshMachineLocation.java,543,,"                LOG.trace(""Machine details for {} missing from Jclouds, but skipping SSH test because waitForSshable=false. name={}, version={}, "" +"
707,./TargetProjects/incubator-brooklyn/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsSshMachineLocation.java,552,,"                LOG.trace(""Machine details for {} missing from Jclouds, using SSH test instead. name={}, version={}, "" +"
708,./TargetProjects/incubator-brooklyn/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizer.java,258,,"            LOG.warn(""Security group extension for {} absent; cannot update node {} with {}"","
709,./TargetProjects/incubator-brooklyn/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizer.java,285,,"            LOG.warn(""Security group extension for {} absent; cannot update node {} with {}"","
710,./TargetProjects/incubator-brooklyn/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizer.java,338,,"                    LOG.warn(""Couldn't determine which security group is shared between instances in app {}. Expected={}, found={}"","
711,./TargetProjects/incubator-brooklyn/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizer.java,344,,"                LOG.info(""Loaded unique security group for node {} (in {}): {}"","
712,./TargetProjects/incubator-brooklyn/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizer.java,351,,"                LOG.warn(""Expected to find two security groups on node {} in app {} (one shared, one unique). Found {}: {}"","
713,./TargetProjects/incubator-brooklyn/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizer.java,428,,"            LOG.info(""Found existing shared security group in {} for app {}: {}"","
714,./TargetProjects/incubator-brooklyn/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizer.java,432,,"            LOG.info(""Creating new shared security group in {} for app {}: {}"","
715,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,482,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing metricLowerBound from {} to {}"", new Object[] {this, getMetricLowerBound(), val});"
716,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,487,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing metricUpperBound from {} to {}"", new Object[] {this, getMetricUpperBound(), val});"
717,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,497,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing resizeUpIterationIncrement from {} to {}"", new Object[] {this, getResizeUpIterationIncrement(), val});"
718,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,502,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing resizeDownIterationIncrement from {} to {}"", new Object[] {this, getResizeDownIterationIncrement(), val});"
719,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,507,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing resizeUpIterationMax from {} to {}"", new Object[] {this, getResizeUpIterationMax(), val});"
720,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,512,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing resizeDownIterationMax from {} to {}"", new Object[] {this, getResizeDownIterationMax(), val});"
721,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,517,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing minPeriodBetweenExecs from {} to {}"", new Object[] {this, getMinPeriodBetweenExecs(), val});"
722,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,522,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing resizeUpStabilizationDelay from {} to {}"", new Object[] {this, getResizeUpStabilizationDelay(), val});"
723,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,527,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing resizeDownStabilizationDelay from {} to {}"", new Object[] {this, getResizeDownStabilizationDelay(), val});"
724,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,532,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing minPoolSize from {} to {}"", new Object[] {this, getMinPoolSize(), val});"
725,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,537,,"        if (LOG.isInfoEnabled()) LOG.info(""{} changing maxPoolSize from {} to {}"", new Object[] {this, getMaxPoolSize(), val});"
726,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,641,,"                LOG.info(""{} resetting {} to {}, which will enable resizing above previous level of {}"","
727,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,692,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} checking pool size on limits changed for {} (between {} and {})"", new Object[] {this, poolEntity, min, max});"
728,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,702,,"                            if (LOG.isInfoEnabled()) LOG.info(""{} resizing pool {} immediateley from {} to {} (due to new pool size limits)"", new Object[] {this, poolEntity, currentSize, desiredSize});"
729,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,744,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording pool-metric for {}: {}"", new Object[] {this, poolEntity, val});"
730,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,748,,"            if (LOG.isTraceEnabled()) LOG.trace(""{} not resizing pool {}, inbound metric is null"", new Object[] {this, poolEntity});"
731,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,762,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording pool-cold for {}: {}"", new Object[] {this, poolEntity, properties});"
732,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,767,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording pool-hot for {}: {}"", new Object[] {this, poolEntity, properties});"
733,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,810,,"            if (LOG.isTraceEnabled()) LOG.trace(""{} not resizing pool {} from {} ({} within range {}..{})"", new Object[] {this, poolEntity, data.currentSize, data.currentMetricValue, data.metricLowerBound, data.metricUpperBound});"
734,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,815,,"        if (LOG.isTraceEnabled()) LOG.debug(""{} detected unconstrained desired size {}"", new Object[] {this, desiredSizeUnconstrained});"
735,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,835,,"                    if (LOG.isTraceEnabled()) LOG.trace(""{} when resizing back pool {} from {}, tweaking from {} to prevent thrashing"", new Object[] {this, poolEntity, data.currentSize, desiredSize });"
736,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,862,,"            if (LOG.isDebugEnabled()) LOG.debug(""{} provisionally resizing {} {} from {} to {} ({} < {}; ideal size {})"", new Object[] {this, description, poolEntity, data.currentSize, desiredSize, data.currentMetricValue, data.metricLowerBound, desiredSizeUnconstrained});"
737,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,865,,"            if (LOG.isTraceEnabled()) LOG.trace(""{} not resizing {} {} from {} to {}, {} out of healthy range {}..{} but unconstrained size {} blocked by bounds/check"", new Object[] {this, description, poolEntity, data.currentSize, desiredSize, data.currentMetricValue, data.metricLowerBound, data.metricUpperBound, desiredSizeUnconstrained});"
738,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,888,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording pool-ok for {}: {}"", new Object[] {this, poolEntity, properties});"
739,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,892,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} not resizing ok pool {} from {}"", new Object[] {this, poolEntity, poolCurrentSize});"
740,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,996,,"            if (LOG.isDebugEnabled()) LOG.debug(""{} notifying listener of max pool size reached; current {}, max {}, unbounded current {}, unbounded max {}"", "
741,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,1012,,"            if (LOG.isTraceEnabled()) LOG.trace(""{} re-scheduling max-reached check for {}, as unbounded size not stable (min {}, max {}, latest {})"", "
742,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,1033,,"            if (LOG.isTraceEnabled()) LOG.trace(""{} re-scheduling resize check for {}, as desired size not stable (current {}, desired {}); continuing with resize..."", "
743,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,1038,,"            if (LOG.isTraceEnabled()) LOG.trace(""{} not resizing pool {} from {} to {}"", "
744,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,1043,,"        if (LOG.isDebugEnabled()) LOG.debug(""{} requesting resize to {}; current {}, min {}, max {}"", "
745,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,1058,,"                        LOG.warn(""{} failed to resize {} due to insufficient capacity; setting high-water mark to {}, """
746,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,1112,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} calculated desired pool size: from {} to {}; minDesired {}, maxDesired {}; "" +"
747,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/enricher/TimeFractionDeltaEnricher.java,82,,"            if (LOG.isTraceEnabled()) LOG.trace(""ignoring null value in {}, at {}"", new Object[] {this, eventTimestamp});"
748,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/enricher/TimeFractionDeltaEnricher.java,89,,"                if (LOG.isTraceEnabled()) LOG.trace(""{} received event but no last value so will not emit, null -> {} at {}"", "
749,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/enricher/TimeFractionDeltaEnricher.java,92,,"                LOG.warn(""{} has lastValue {} but last timestamp {}; new value is {} at {}; not publishing"", "
750,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/enricher/TimeFractionDeltaEnricher.java,98,,"                if (LOG.isTraceEnabled()) LOG.trace(""set {} to {}, {} -> {} at {} (previous at {})"", "
751,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/enricher/TimeWeightedDeltaEnricher.java,107,,"            if (LOG.isTraceEnabled()) LOG.trace(""set {} to {}, {} -> {} at {}"", new Object[] {this, deltaPostProcessed, lastValue, current, eventTime});"
752,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/enricher/TimeWeightedDeltaEnricher.java,114,,"                if (LOG.isTraceEnabled()) LOG.trace(""{} received event but no last value so will not emit, null -> {} at {}"", new Object[] {this, current, eventTime}); "
753,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/enricher/TimeWeightedDeltaEnricher.java,121,,"                if (LOG.isTraceEnabled()) LOG.trace(""set {} to {}, {} -> {} at {}"", new Object[] {this, deltaPostProcessed, lastValue, current, eventTime}); "
754,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/followthesun/FollowTheSunPolicy.java,218,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording addition of container {} in location {}"", new Object[] {this, container, location});"
755,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/followthesun/FollowTheSunPolicy.java,233,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording addition of item {} in container {}"", new Object[] {this, item, parentContainer});"
756,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/followthesun/FollowTheSunPolicy.java,257,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording moving of item {} to {}"", new Object[] {this, item, parentContainer});"
757,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/followthesun/FollowTheSunPolicy.java,264,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording location for container {}, new value {}"", new Object[] {this, container, location});"
758,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/followthesun/FollowTheSunPolicy.java,270,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording usage update for item {}, new value {}"", new Object[] {this, item, newValues});"
759,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/followthesun/FollowTheSunStrategy.java,83,,"                if (LOG.isTraceEnabled()) LOG.trace(""POLICY {} detected {} msgs/sec in {}, split up as: {}"", new Object[] {name, total, itemName, sendsByLocation});"
760,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/followthesun/FollowTheSunStrategy.java,111,,"                    if (LOG.isDebugEnabled()) LOG.debug(""POLICY {} detected {} is already in optimal permitted location ({} of {} msgs/sec)"", new Object[] {name, itemName, highestMsgRate, total});"
761,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,235,,"                    LOG.info(""{} check for {}, now recovering: {}"", new Object[] {this, entity, getDescription(status)});"
762,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,239,,"                    if (LOG.isTraceEnabled()) LOG.trace(""{} check for {}, continuing recovering: {}"", new Object[] {this, entity, getDescription(status)});"
763,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,243,,"                    LOG.info(""{} check for {}, now healthy: {}"", new Object[] {this, entity, getDescription(status)});"
764,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,246,,"                    if (LOG.isTraceEnabled()) LOG.trace(""{} check for {}, still healthy: {}"", new Object[] {this, entity, getDescription(status)});"
765,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,253,,"                    LOG.info(""{} check for {}, now failing: {}"", new Object[] {this, entity, getDescription(status)});"
766,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,257,,"                    if (LOG.isTraceEnabled()) LOG.trace(""{} check for {}, continuing failing: {}"", new Object[] {this, entity, getDescription(status)});"
767,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,261,,"                    LOG.info(""{} check for {}, now failing: {}"", new Object[] {this, entity, getDescription(status)});"
768,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,264,,"                    if (LOG.isTraceEnabled()) LOG.trace(""{} check for {}, still failed: {}"", new Object[] {this, entity, getDescription(status)});"
769,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,307,,"                    LOG.warn(""{} check for {}, publishing recovered: {}"", new Object[] {this, entity, description});"
770,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/AbstractFailureDetector.java,323,,"                    LOG.warn(""{} connectivity-check for {}, publishing failed: {}"", new Object[] {this, entity, description});"
771,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,169,,"                        if (LOG.isDebugEnabled()) LOG.debug(""{} health-check for {}, component was recovering, now failing: {}"", new Object[] {this, entity, getExplanation(state)});"
772,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,173,,"                        if (LOG.isTraceEnabled()) LOG.trace(""{} health-check for {}, component still failed: {}"", new Object[] {this, entity, getExplanation(state)});"
773,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,179,,"                        if (LOG.isDebugEnabled()) LOG.debug(""{} health-check for {}, component now failing: {}"", new Object[] {this, entity, getExplanation(state)});"
774,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,183,,"                        if (LOG.isTraceEnabled()) LOG.trace(""{} health-check for {}, component continuing failing: {}"", new Object[] {this, entity, getExplanation(state)});"
775,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,195,,"                        if (LOG.isDebugEnabled()) LOG.debug(""{} health-check for {}, component now recovering: {}"", new Object[] {this, entity, getExplanation(state)});"
776,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,199,,"                        if (LOG.isTraceEnabled()) LOG.trace(""{} health-check for {}, component continuing recovering: {}"", new Object[] {this, entity, getExplanation(state)});"
777,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,203,,"                        if (LOG.isDebugEnabled()) LOG.debug(""{} health-check for {}, component was failing, now healthy: {}"", new Object[] {this, entity, getExplanation(state)});"
778,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,205,,"                        if (LOG.isTraceEnabled()) LOG.trace(""{} health-check for {}, component still healthy: {}"", new Object[] {this, entity, getExplanation(state)});"
779,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,213,,"                if (LOG.isTraceEnabled()) LOG.trace(""{} health-check for {}, in unconfirmed sate: {}"", new Object[] {this, entity, getExplanation(state)});"
780,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,221,,"                    if (LOG.isDebugEnabled()) LOG.debug(""{} publishing failed (state={}; currentFailureStartTime={}; now={}"", "
781,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,238,,"                    if (LOG.isDebugEnabled()) LOG.debug(""{} publishing recovered (state={}; currentRecoveryStartTime={}; now={}"", "
782,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceFailureDetector.java,251,,"                    if (LOG.isDebugEnabled()) LOG.debug(""{} setting on-fire, now that deferred period has passed (state={})"", "
783,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/ItemsInContainersGroupImpl.java,134,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} processing moved item {}, to container {}"", new Object[] {this, item, container});"
784,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/ItemsInContainersGroupImpl.java,137,,"                if (LOG.isDebugEnabled()) LOG.debug(""{} removing moved item {} from group, as new container {} is not a member"", new Object[] {this, item, container});"
785,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/ItemsInContainersGroupImpl.java,142,,"                if (LOG.isDebugEnabled()) LOG.debug(""{} adding moved item {} to group, as new container {} is a member"", new Object[] {this, item, container});"
786,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/LoadBalancingPolicy.java,206,,"                        if (LOG.isDebugEnabled()) LOG.debug(""{} post-rebalance: poolSize={}; workrate={}; lowThreshold={}; "" + "
787,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/LoadBalancingPolicy.java,222,,"                                    LOG.info(""{} emitted COLD (suggesting {}): {}"", new Object[] {this, desiredPoolSize, eventVal});"
788,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/LoadBalancingPolicy.java,240,,"                                    LOG.info(""{} emitted HOT (suggesting {}): {}"", new Object[] {this, desiredPoolSize, eventVal});"
789,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/LoadBalancingPolicy.java,304,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording addition of item {} in container {}"", new Object[] {this, item, parentContainer});"
790,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/LoadBalancingPolicy.java,326,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording moving of item {} to {}"", new Object[] {this, item, parentContainer});"
791,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/LoadBalancingPolicy.java,332,,"        if (LOG.isTraceEnabled()) LOG.trace(""{} recording metric update for item {}, new value {}"", new Object[] {this, item, newValue});"
792,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/loadbalancing/MockContainerEntityImpl.java,59,,"        if (LOG.isDebugEnabled()) LOG.debug(""Mocks: container {} setting {} to {}"", new Object[] {this, attribute, val});"
793,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/loadbalancing/MockContainerEntityImpl.java,168,,"        if (LOG.isDebugEnabled()) LOG.debug(""Mocks: offloading container {} to {} (items {})"", new Object[] {this, otherContainer, getBalanceableItems()});"
794,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/loadbalancing/MockItemEntityImpl.java,60,,"        if (LOG.isDebugEnabled()) LOG.debug(""Mocks: item {} setting {} to {}"", new Object[] {this, attribute, val});"
795,./TargetProjects/incubator-brooklyn/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/loadbalancing/MockItemEntityImpl.java,74,,"        if (LOG.isDebugEnabled()) LOG.debug(""Mocks: moving item {} from {} to {}"", new Object[] {this, currentContainer, rawDestination});"
796,./TargetProjects/incubator-brooklyn/brooklyn-server/rest/rest-server/src/main/java/org/apache/brooklyn/rest/filter/LoggingFilter.java,81,,"                LOG.debug(message, args);"
797,./TargetProjects/incubator-brooklyn/brooklyn-server/rest/rest-server/src/main/java/org/apache/brooklyn/rest/filter/LoggingFilter.java,83,,"                LOG.trace(message, args);"
798,./TargetProjects/incubator-brooklyn/brooklyn-server/rest/rest-server/src/main/java/org/apache/brooklyn/rest/filter/LoggingFilter.java,106,,"                    LOG.debug(message);"
799,./TargetProjects/incubator-brooklyn/brooklyn-server/rest/rest-server/src/main/java/org/apache/brooklyn/rest/filter/LoggingFilter.java,108,,"                    LOG.trace(message);"
800,./TargetProjects/incubator-brooklyn/brooklyn-server/rest/rest-server/src/main/java/org/apache/brooklyn/rest/resources/UsageResource.java,61,,"        log.debug(""REST call to get application usage for all applications: dates {} -> {}"", new Object[] {start, end});"
801,./TargetProjects/incubator-brooklyn/brooklyn-server/rest/rest-server/src/main/java/org/apache/brooklyn/rest/resources/UsageResource.java,83,,"        log.debug(""REST call to get application usage for application {}: dates {} -> {}"", new Object[] {application, start, end});"
802,./TargetProjects/incubator-brooklyn/brooklyn-server/rest/rest-server/src/main/java/org/apache/brooklyn/rest/resources/UsageResource.java,100,,"        log.debug(""Determining application usage for application {}: dates {} -> {}"", new Object[] {usage.getApplicationId(), startDate, endDate});"
803,./TargetProjects/incubator-brooklyn/brooklyn-server/rest/rest-server/src/main/java/org/apache/brooklyn/rest/resources/UsageResource.java,141,,"        log.debug(""REST call to get machine usage for application {}: dates {} -> {}"", new Object[] {application, start, end});"
804,./TargetProjects/incubator-brooklyn/brooklyn-server/rest/rest-server/src/main/java/org/apache/brooklyn/rest/resources/UsageResource.java,184,,"        log.debug(""REST call to get machine usage for machine {}: dates {} -> {}"", new Object[] {machine, start, end});"
805,./TargetProjects/incubator-brooklyn/brooklyn-server/rest/rest-server/src/main/java/org/apache/brooklyn/rest/util/BrooklynRestResourceUtils.java,484,,"            log.debug(""Setting key {} to {} for REST creation of {}"", new Object[] { entry.getKey(), entry.getValue(), javaType});"
806,./TargetProjects/incubator-brooklyn/brooklyn-server/rest/rest-server/src/main/java/org/apache/brooklyn/rest/util/WebResourceUtils.java,51,,"            log.debug(""responding {} {} ({})"","
807,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/brooklynnode/EntityHttpClientImpl.java,104,,"            LOG.warn(""Invalid response invoking {}: response code {}\n{}: {}"","
808,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/chef/ChefAttributeFeed.java,338,,"                        log.error(""Entity {}: bad Chef attribute {} for sensor {}: {}"", new Object[]{"
809,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/chef/ChefAttributeFeed.java,346,,"                        log.debug(""Entity {}: apply Chef attribute {} to sensor {} with value {}"", new Object[]{"
810,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/chef/ChefAttributeFeed.java,357,,"                    log.debug(""Entity {}: no Chef attribute matching {}; setting sensor {} to null"", new Object[]{"
811,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/chef/ChefAttributeFeed.java,382,,"            log.error(""Chef attribute query did not respond as expected. exitcode={} stdout={} stderr={}"", new Object[]{val.getExitStatus(), val.getStdout(), val.getStderr()});"
812,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/java/JavaSoftwareProcessSshDriver.java,297,,"                log.debug(""Java {} already installed at {}@{}"", new Object[]{installedJavaVersion.get(), getEntity(), getLocation()});"
813,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/java/JavaSoftwareProcessSshDriver.java,307,,"            log.debug(""Installing Java {} at {}@{}"", new Object[]{version, getEntity(), getLocation()});"
814,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/java/JavaSoftwareProcessSshDriver.java,314,,"                log.warn(""Installation of Java {} failed at {}@{}: {}"","
815,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/java/JavaSoftwareProcessSshDriver.java,343,,"            log.debug(""Found Java version at {}@{}: {}"", new Object[] {getEntity(), getLocation(), stdOut});"
816,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/java/JavaSoftwareProcessSshDriver.java,365,,"            log.debug(""Found Java version at {}@{}: {}"", new Object[] {getEntity(), getLocation(), stdOut});"
817,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/machine/SetHostnameCustomizer.java,205,,"        log.info(""No hostname found for {} (got {}; {})"", new Object[] {machine, cmd.getStdout(), cmd.getStderr()});"
818,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/machine/SetHostnameCustomizer.java,219,,"        log.info(""No local ip found for {} (got {}; {})"", new Object[] {machine, cmd.getStdout(), cmd.getStderr()});"
819,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/machine/pool/ServerPoolImpl.java,299,,"                LOG.warn(""Too few removable machines in {} to shrink by delta {}. Altered delta to {}"","
820,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/machine/pool/ServerPoolImpl.java,421,,"            LOG.info(""{} in {}: {} service up is {}"", new Object[]{type.name(), entity, member, isUp});"
821,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/machine/pool/ServerPoolImpl.java,426,,"                    LOG.debug(""{} observed event {} but {} is not up (yet) and will not be used by the pool"","
822,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/AbstractSoftwareProcessDriver.java,483,,"        if (val != null) log.debug(""{} finished waiting for {} (value {}); continuing..."", new Object[] {this, configKey, val});"
823,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/AbstractSoftwareProcessSshDriver.java,368,,"                log.debug(""Copied file for {}: {} to {} - result {}"", new Object[] { entity, source, destination, result });"
824,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/AbstractSoftwareProcessSshDriver.java,412,,"            log.debug(""copying stream complete; {} on {}"", new Object[] { destination, getMachine() });"
825,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/AbstractSoftwareProcessSshDriver.java,414,,"            log.warn(""copying stream failed; {} on {}: {}"", new Object[] { destination, getMachine(), result });"
826,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/SoftwareProcessImpl.java,448,,"            log.warn(""Rebinding entity {}, even though actual state is {}. Expected state is {}"", new Object[] {this, actualState, expectedState});"
827,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/lifecycle/MachineLifecycleEffectorTasks.java,376,,"                log.info(""Starting {}, obtaining a new location instance in {} with ports {}"", new Object[]{entity(), location, flags.get(""inboundPorts"")});"
828,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/lifecycle/MachineLifecycleEffectorTasks.java,554,,"        if (val != null) log.debug(""{} finished waiting for start-latch; continuing..."", entity(), val);"
829,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxFeed.java,338,,"                        if (log.isDebugEnabled()) log.debug(""jmx operation polling for {} sensors at {} -> {}"", new Object[] {getEntity(), getJmxUri(), operationName});"
830,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxFeed.java,368,,"                        if (log.isTraceEnabled()) log.trace(""jmx attribute polling for {} sensors at {} -> {}"", new Object[] {getEntity(), getJmxUri(), jmxAttributeName});"
831,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxHelper.java,372,,"                    if (LOG.isDebugEnabled()) LOG.debug(""Attempt {} failed connecting to {} ({})"", new Object[] {attempt + 1, url, e.getMessage()});"
832,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxHelper.java,520,,"                    LOG.warn(""JMX object name query returned {} values for {} at {}; ignoring all"","
833,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxHelper.java,523,,"                    if (LOG.isDebugEnabled()) LOG.debug(""JMX object name query returned {} values for {} at {} (repeating); ignoring all"", "
834,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxHelper.java,612,,"            if (LOG.isTraceEnabled()) LOG.trace(""From {}, for jmx attribute {}.{}, got value {}"", new Object[] {url, objectName.getCanonicalName(), attribute, result});"
835,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxHelper.java,632,,"            if (LOG.isTraceEnabled()) LOG.trace(""From {}, for jmx attribute {}.{}, set value {}"", new Object[] {url, objectName.getCanonicalName(), attribute, val});"
836,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxHelper.java,634,,"            if (LOG.isDebugEnabled()) LOG.debug(""From {}, cannot set attribute {}.{}, because mbean not found"", new Object[] {url, objectName.getCanonicalName(), attribute});"
837,./TargetProjects/incubator-brooklyn/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/feed/jmx/JmxHelper.java,659,,"        if (LOG.isTraceEnabled()) LOG.trace(""From {}, for jmx operation {}.{}({}), got value {}"", new Object[] {url, realObjectName.getCanonicalName(), method, Arrays.asList(arguments), "
838,./TargetProjects/incubator-brooklyn/brooklyn-server/software/winrm/src/main/java/org/apache/brooklyn/feed/windows/WindowsPerformanceCounterFeed.java,314,,"                        log.warn(""Failed to coerce value '{}' to {} for {} -> {}"", new Object[] {rawValue, clazz, entity, attribute});"
839,./TargetProjects/incubator-brooklyn/brooklyn-server/software/winrm/src/main/java/org/apache/brooklyn/feed/windows/WindowsPerformanceCounterFeed.java,316,,"                        if (log.isTraceEnabled()) log.trace(""Failed (repeatedly) to coerce value '{}' to {} for {} -> {}"", new Object[] {rawValue, clazz, entity, attribute});"
840,./TargetProjects/incubator-brooklyn/brooklyn-server/software/winrm/src/main/java/org/apache/brooklyn/feed/windows/WindowsPerformanceCounterFeed.java,324,,"            log.error(""Windows Performance Counter query did not respond as expected. exitcode={} stdout={} stderr={}"","
841,./TargetProjects/incubator-brooklyn/brooklyn-server/test-framework/src/main/java/org/apache/brooklyn/test/framework/SimpleShellCommandTestImpl.java,116,,"        LOG.debug(""{}, Result is {}\nwith output [\n{}\n] and error [\n{}\n]"", new Object[] {"
842,./TargetProjects/incubator-brooklyn/brooklyn-server/test-support/src/main/java/org/apache/brooklyn/test/HttpTestUtils.java,139,,"            LOG.debug(""connection to {} ({}ms) gives {}"", new Object[] { url, (System.currentTimeMillis()-startTime), status });"
843,./TargetProjects/incubator-brooklyn/brooklyn-server/test-support/src/main/java/org/apache/brooklyn/test/HttpTestUtils.java,324,,"                LOG.debug(""read of err {} ({}ms) complete; http code {}"", new Object[] { url, Time.makeTimeStringRounded(System.currentTimeMillis()-startTime), status});"
844,./TargetProjects/incubator-brooklyn/brooklyn-server/test-support/src/main/java/org/apache/brooklyn/test/performance/PerformanceTestUtils.java,92,,"                            LOG.info(""CPU fraction over last {} was {} ({})"", new Object[] {"
845,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/test/Asserts.java,931,,"                    if (log.isTraceEnabled()) log.trace(""Attempt {} after {} ms: {}"", new Object[] {attempt, System.currentTimeMillis() - startTime, result});"
846,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/test/Asserts.java,946,,"                    if (log.isTraceEnabled()) log.trace(""Attempt {} after {} ms: {}"", new Object[] {attempt, System.currentTimeMillis() - startTime, e.getMessage()});"
847,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/test/Asserts.java,955,,"            log.info(""succeedsEventually exceeded max attempts or timeout - {} attempts lasting {} ms, for {}"", new Object[] {attempt, System.currentTimeMillis()-startTime, c});"
848,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/test/Asserts.java,995,,"                log.info(""succeedsContinually failed - {} attempts lasting {} ms, for {} (rethrowing)"", new Object[] {attempt, System.currentTimeMillis()-startTime, job});"
849,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/http/HttpTool.java,165,,"            LOG.debug(""connection to {} ({}ms) gives {}"", new Object[] { url, (System.currentTimeMillis()-startTime), status });"
850,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/http/HttpTool.java,194,,"                LOG.debug(""read of err {} ({}ms) complete; http code {}"", new Object[] { url, Time.makeTimeStringRounded(System.currentTimeMillis() - startTime), status});"
851,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/io/FileUtil.java,73,,"            if (LOG.isTraceEnabled()) LOG.trace(""Failed to set permissions to {} for file {}: {}"","
852,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/io/FileUtil.java,77,,"                if (LOG.isDebugEnabled()) LOG.debug(""Failed to set permissions to {} for file {}; expected behaviour on Windows; {}; subsequent failures (on any file) will be logged at trace"","
853,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/io/FileUtil.java,80,,"                LOG.warn(""Failed to set permissions to {} for file {}: {}; subsequent failures (on any file) will be logged at trace"","
854,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/net/Networking.java,133,,"                                if (log.isTraceEnabled()) log.trace(""Port {} : {} @ {} is taken and the address is valid"", new Object[] {a, port, nis});"
855,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/net/Networking.java,159,,"                    log.warn(msg, args);"
856,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/net/Networking.java,161,,"                    log.debug(msg, args);"
857,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/net/Networking.java,163,,"                    log.trace(msg, args);"
858,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/pool/BasicPool.java,124,,"                    if (LOG.isTraceEnabled()) LOG.trace(""{} reusing existing pool entry {} ({})"", new Object[] {this, existing, getMetrics()});"
859,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/pool/BasicPool.java,137,,"        if (LOG.isDebugEnabled()) LOG.debug(""{} acquired and returning new entry {} ({})"", new Object[] {this, result, getMetrics()});"
860,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/pool/BasicPool.java,145,,"            if (LOG.isTraceEnabled()) LOG.trace(""{} executing {} with leasee {}"", new Object[] {this, receiver, lease.leasedObject()});"
861,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/pool/BasicPool.java,155,,"            if (LOG.isDebugEnabled()) LOG.debug(""{} closing, with {} resources ({})"", new Object[] {this, pool.size(), getMetrics()});"
862,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/pool/BasicPool.java,171,,"                if (LOG.isDebugEnabled()) LOG.debug(""{} closing returned leasee {}, because pool closed ({})"", new Object[] {this, val, getMetrics()});"
863,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/pool/BasicPool.java,174,,"                if (LOG.isTraceEnabled()) LOG.trace(""{} adding {} back into pool ({})"", new Object[] {this, val, getMetrics()});"
864,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/repeat/Repeater.java,366,,"                if (log.isDebugEnabled()) log.debug(""{}: condition not satisfied, with {} elapsed (limit {})"", "
865,./TargetProjects/incubator-brooklyn/brooklyn-server/utils/rt-felix/src/main/java/org/apache/brooklyn/rt/felix/EmbeddedFelixFramework.java,148,,"                LOG.warn(""Unable to install manifest from ""+url+"": ""+installResult.getError(), installResult.getError());"
866,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/main/java/org/apache/sentry/hdfs/ha/HdfsHAClientInvocationHandler.java,125,,"          LOGGER.info(""Transport exception while opening transport:"", e, e.getMessage());"
867,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-namenode-plugin/src/main/java/org/apache/sentry/hdfs/SentryAuthorizationInfo.java,89,,"      LOG.debug(""Refresh interval [{}]ms, retry wait [{}], stale threshold "" +"
868,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-namenode-plugin/src/main/java/org/apache/sentry/hdfs/SentryAuthorizationProvider.java,121,,"      LOG.info(""Config: hdfs-user[{}] hdfs-group[{}] hdfs-permission[{}] "" +"
869,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-common/src/main/java/org/apache/sentry/provider/common/ResourceAuthorizationProvider.java,113,,"          LOGGER.debug(""ProviderPrivilege {}, RequestPrivilege {}, RoleSet, {}, Result {}"","
870,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/service/thrift/HAClientInvocationHandler.java,115,,"          LOGGER.info(""Transport exception while opening transport:"", e, e.getMessage());"
871,./TargetProjects/jackrabbit/jackrabbit-aws-ext/src/main/java/org/apache/jackrabbit/aws/ext/ds/S3Backend.java,308,,"        LOG.debug(""exists [{}]: [{}] took [{}] ms."", new Object[] { identifier,"
872,./TargetProjects/jackrabbit/jackrabbit-aws-ext/src/main/java/org/apache/jackrabbit/aws/ext/ds/S3Backend.java,366,,"                LOG.debug(""[{}] touched. time taken [{}] ms "", new Object[] {"
873,./TargetProjects/jackrabbit/jackrabbit-aws-ext/src/main/java/org/apache/jackrabbit/aws/ext/ds/S3Backend.java,369,,"                LOG.trace(""[{}] touch not required. time taken [{}] ms "","
874,./TargetProjects/jackrabbit/jackrabbit-aws-ext/src/main/java/org/apache/jackrabbit/aws/ext/ds/S3Backend.java,451,,"            LOG.debug("
875,./TargetProjects/jackrabbit/jackrabbit-aws-ext/src/main/java/org/apache/jackrabbit/aws/ext/ds/S3Backend.java,480,,"            LOG.debug(""Identifier [{}]'s length = [{}] took [{}]ms."","
876,./TargetProjects/jackrabbit/jackrabbit-aws-ext/src/main/java/org/apache/jackrabbit/aws/ext/ds/S3Backend.java,504,,"            LOG.debug(""Identifier [{}] deleted. It took [{}]ms."", new Object[] {"
877,./TargetProjects/jackrabbit/jackrabbit-aws-ext/src/main/java/org/apache/jackrabbit/aws/ext/ds/S3Backend.java,576,,"        LOG.info("
878,./TargetProjects/jackrabbit/jackrabbit-aws-ext/src/main/java/org/apache/jackrabbit/aws/ext/ds/S3Backend.java,693,,"        LOG.debug("
879,./TargetProjects/jackrabbit/jackrabbit-aws-ext/src/main/java/org/apache/jackrabbit/aws/ext/ds/S3Backend.java,757,,"                    LOG.info("
880,./TargetProjects/jackrabbit/jackrabbit-aws-ext/src/main/java/org/apache/jackrabbit/aws/ext/ds/S3Backend.java,831,,"                    LOG.error("" Exception in renaming [{}] to [{}] "","
881,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/CachingHierarchyManager.java,1063,,"                    log.trace(msg, new Object[]{id, this.cache.size(), upperLimit}, new Exception());"
882,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/CachingHierarchyManager.java,1066,,"                    log.debug(msg, new Object[]{id, this.cache.size(), upperLimit}, new Exception());"
883,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/cluster/ClusterNode.java,712,,"               	auditLogger.info(""[{}] {} {} ({})"", new Object[]{updateCount.incrementAndGet(), "
884,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/cluster/ClusterNode.java,922,,"           	auditLogger.info(""[{}] {} {}"", new Object[]{updateCount.incrementAndGet(), "
885,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/OnWorkspaceInconsistency.java,58,,"            log.error(""Node {} ({}) has missing child '{}' ({})"","
886,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/OnWorkspaceInconsistency.java,83,,"            log.error(""Node {} ({}) has missing child '{}' ({}). Please run a consistency check on this workspace!"","
887,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/CachingIndexReader.java,573,,"                log.debug(""initialized {} DocIds in {} ms, {} foreign parents"","
888,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/CachingIndexReader.java,667,,"                log.debug("
889,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DescendantSelfAxisQuery.java,543,,"                    log.debug(""Collected {} context hits in {} ms for {}"","
890,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SearchIndex.java,610,,"        log.info(""Index initialized: {} Version: {}"","
891,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SearchIndex.java,686,,"        log.debug(""created the removeCollection {} and addCollection {} in {}ms"", new Object[] {removeCollection.size(), addCollection.size(), time});"
892,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SearchIndex.java,1726,,"                log.warn("
893,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SortedLuceneQueryHits.java,163,,"        log.debug(""getHits() in {} ms. {}/{}/{}"", new Object[] {timeMs, scoreDocs.length, numHits, size});"
894,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/TermDocsCache.java,142,,"                log.debug(""#{} TermDocs({},{})"","
895,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/TermDocsCache.java,173,,"                log.debug(""CachedTermDocs({},{},{}/{})"", new Object[]{"
896,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/user/AuthorizableImpl.java,379,,"            log.debug(""Collected {} {} group ids for [{}] in {}us, loaded {} groups in {}us (collect={}, cachesize={})"", new Object[]{"
897,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/user/MembershipCache.java,224,,"            log.debug(""  collected {} groups for {} via references in {}us"", new Object[]{"
898,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/user/MembershipCache.java,236,,"                log.debug(""  collected {} groups for {} via traversal in {}us"", new Object[]{"
899,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/user/MembershipCache.java,297,,"            log.debug(""Membership cache {} {} declared memberships of {} in {}us. cache size = {}"", new Object[]{"
900,./TargetProjects/jackrabbit/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/security/user/XPathQueryEvaluator.java,80,,"                log.warn(""Ignoring bound {} since no sort order is specified"");"
901,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/AsyncUploadCache.java,239,,"        LOG.info("
902,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/CachingDataStore.java,422,,"            LOG.debug(""Digest of [{}], length =[{}] took [{}]ms "","
903,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/CachingDataStore.java,445,,"            LOG.debug(""addRecord [{}] of length [{}] took [{}]ms."","
904,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/CachingDataStore.java,739,,"            LOG.warn(""Async Upload failed. Dataidentifer [ "" + identifier"
905,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/CachingDataStore.java,811,,"            LOG.debug("" Async Touch failed. exception"", result.getException());"
906,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/CachingDataStore.java,956,,"                LOG.info(""Uploaded:  [{}/{}] files, [{}/{}] size data"","
907,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/CachingDataStore.java,963,,"        LOG.info("
908,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/CachingDataStore.java,1276,,"            LOG.info(""Uploaded:  [{}/{}] files, [{}/{}] size data"","
909,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/CachingDataStore.java,1318,,"            LOG.info("
910,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/CachingDataStore.java,1357,,"            LOG.debug("
911,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/FSBackend.java,416,,"                LOG.debug(""Deleted parent [{}] of file [{}]: {}"", new Object[] {"
912,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/FileDataStore.java,302,,"                log.debug(""Deleted parent [{}] of file [{}]: {}"","
913,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/LocalCache.java,105,,"        LOG.info("
914,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/LocalCache.java,228,,"            LOG.debug("
915,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/LocalCache.java,262,,"            LOG.info(""local cache misses [{}] in [{}] sec"", new Object[] {"
916,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/LocalCache.java,270,,"            LOG.debug("
917,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/LocalCache.java,424,,"            LOG.info("
918,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/LocalCache.java,430,,"            LOG.debug("
919,./TargetProjects/jackrabbit/jackrabbit-data/src/main/java/org/apache/jackrabbit/core/data/LocalCache.java,657,,"            LOG.debug("
920,./TargetProjects/jackrabbit/jackrabbit-vfs-ext/src/main/java/org/apache/jackrabbit/vfs/ext/ds/VFSBackend.java,662,,"                LOG.debug(""Deleted parent folder [{}] of file [{}]: {}"","
921,./TargetProjects/knox/gateway-server/src/test/java/org/apache/knox/gateway/AuditLoggingTest.java,142,,"    LOG.info(""Executing %d total requests with %d concurrently"", numberTotalRequests, numberConcurrentRequests);"
922,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/LogbackSubstitution.java,48,,"        logger.debug(""Hello, {}"");"
923,./TargetProjects/logging-log4j2/log4j-slf4j-impl/src/test/java/org/apache/logging/slf4j/Log4j2_1482_Slf4jTest.java,36,,"		logger.info(""Info Message!"", val1, val2, val3);"
924,./TargetProjects/logging-log4j2/log4j-slf4j-impl/src/test/java/org/apache/logging/slf4j/Log4j2_1482_Slf4jTest.java,37,,"		logger.info(""Info Message!"", val1, val2, val3);"
925,./TargetProjects/logging-log4j2/log4j-slf4j-impl/src/test/java/org/apache/logging/slf4j/Log4j2_1482_Slf4jTest.java,38,,"		logger.info(""Info Message!"", val1, val2, val3);"
926,./TargetProjects/logging-log4j2/log4j-slf4j-impl/src/test/java/org/apache/logging/slf4j/LoggerTest.java,96,,"        logger.debug(""Debug message {}"");"
927,./TargetProjects/logging-log4j2/log4j-slf4j18-impl/src/test/java/org/apache/logging/slf4j/Log4j2_1482_Slf4jTest.java,36,,"		logger.info(""Info Message!"", val1, val2, val3);"
928,./TargetProjects/logging-log4j2/log4j-slf4j18-impl/src/test/java/org/apache/logging/slf4j/Log4j2_1482_Slf4jTest.java,37,,"		logger.info(""Info Message!"", val1, val2, val3);"
929,./TargetProjects/logging-log4j2/log4j-slf4j18-impl/src/test/java/org/apache/logging/slf4j/Log4j2_1482_Slf4jTest.java,38,,"		logger.info(""Info Message!"", val1, val2, val3);"
930,./TargetProjects/logging-log4j2/log4j-slf4j18-impl/src/test/java/org/apache/logging/slf4j/LoggerTest.java,93,,"        logger.debug(""Debug message {}"");"
931,./TargetProjects/mahout/community/mahout-mr/mr/src/main/java/org/apache/mahout/clustering/lda/cvb/CVB0Driver.java,260,,"    log.info(infoString);"
932,./TargetProjects/metron/metron-platform/metron-common/src/main/java/org/apache/metron/common/cli/ConfigurationManager.java,368,,"      LOG.error(""Unable to load patch file '%s'"", patchPath, e);"
933,./TargetProjects/metron/metron-platform/metron-data-management/src/main/java/org/apache/metron/dataloads/nonbulk/taxii/TaxiiHandler.java,227,,"                  LOG.info(""Found Threat Intel: {} => "", kv.getKey(), kv.getValue());"
934,./TargetProjects/metron/metron-platform/metron-elasticsearch/metron-elasticsearch-common/src/main/java/org/apache/metron/elasticsearch/dao/ElasticsearchRequestSubmitter.java,133,,"      LOG.error(msg, fail.getCause());"
935,./TargetProjects/metron/metron-platform/metron-enrichment/metron-enrichment-storm/src/main/java/org/apache/metron/enrichment/bolt/UnifiedEnrichmentBolt.java,282,,"        LOG.error(""[Metron] Unable to enrich message: {}"", message, t);"
936,./TargetProjects/metron/metron-platform/metron-parsing/metron-parsers/src/main/java/org/apache/metron/parsers/cef/CEFParser.java,152,,"				LOG.debug(""Found %d groups"", matcher.groupCount());"
937,./TargetProjects/metron/metron-platform/metron-parsing/metron-parsers/src/main/java/org/apache/metron/parsers/leef/LEEFParser.java,145,,"          LOG.debug(""Found %d groups"", matcher.groupCount());"
938,./TargetProjects/mina/core/src/main/java/org/apache/mina/service/idlechecker/IndexedIdleChecker.java,215,,"            LOG.trace(""checking idle time, last = {}, now = {}, delta = {}"", new Object[] { lastCheckTimeMs, timeMs,"
939,./TargetProjects/mina/core/src/main/java/org/apache/mina/transport/nio/NioSelectorLoop.java,115,,"            LOG.debug(""registering : {} for accept : {}, connect: {}, read : {}, write : {}, channel : {}"","
940,./TargetProjects/mina/core/src/main/java/org/apache/mina/transport/nio/NioSelectorLoop.java,160,,"            LOG.debug(""modifying registration : {} for accept : {}, read : {}, write : {}, channel : {}"", new Object[] {"
941,./TargetProjects/mina/core/src/main/java/org/apache/mina/transport/nio/NioTcpSession.java,339,,"            LOG.debug(""session {} ready for accept={}, connect={}, read={}, write={}"", new Object[] { this, accept,"
942,./TargetProjects/mina/core/src/main/java/org/apache/mina/transport/nio/NioUdpSession.java,265,,"            LOG.debug(""session {} ready for accept={}, connect={}, read={}, write={}"", new Object[] { this, accept,"
943,./TargetProjects/mina-sshd/sshd-sftp/src/main/java/org/apache/sshd/sftp/client/fs/SftpFileSystemProvider.java,768,,"                log.debug(""readSymbolicLink({})[{}] {} => {}"", fsLink, link, linkPath);"
944,./TargetProjects/myfaces-tobago/tobago-core/src/main/java/org/apache/myfaces/tobago/internal/renderkit/renderer/SelectManyRendererBase.java,626,,"                LOG.debug(message, objects);"
945,./TargetProjects/myfaces-tobago/tobago-core/src/main/java/org/apache/myfaces/tobago/internal/renderkit/renderer/SelectManyRendererBase.java,628,,"                LOG.warn(message, objects);"
946,./TargetProjects/phoenix-omid/benchmarks/src/main/java/org/apache/omid/benchmarks/tso/RawTxRunner.java,173,,"            LOG.info(""Finishing TxRunner in 3 secs"", txRunnerId);"
947,./TargetProjects/phoenix-omid/hbase-coprocessor/src/main/java/org/apache/omid/transaction/CompactorScanner.java,320,,"            LOG.trace(""...with shadow cell {}"", cell, shadowCell.get());"
948,./TargetProjects/phoenix-omid/transaction-client/src/main/java/org/apache/omid/tso/client/TSOClient.java,1039,,"                LOG.warn(""Received unknown message"", msg);"
949,./TargetProjects/phoenix-omid/tso-server/src/main/java/org/apache/omid/tso/TSOChannelHandler.java,197,,"            LOG.error(""Unknown message type"", msg);"
950,./TargetProjects/phoenix-omid/tso-server/src/test/java/org/apache/omid/tso/ProgrammableTSOServer.java,172,,"            LOG.error(""Unknown message type"", msg);"
951,./TargetProjects/phoenix-omid/tso-server/src/test/java/org/apache/omid/tso/client/TSOClientRaw.java,114,,"            LOG.info(""Message received"", msg);"
952,./TargetProjects/phoenix-omid/tso-server/src/test/java/org/apache/omid/tso/client/TSOClientRaw.java,125,,"                LOG.warn(""Received unknown message"", msg);"
953,./TargetProjects/ranger/kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java,294,,"        LOG.debug(""Checking user [{}] for: {}: {}"" + ugi.getShortUserName(),"
954,./TargetProjects/sentry/sentry-hdfs/sentry-hdfs-common/src/main/java/org/apache/sentry/hdfs/HMSPaths.java,443,,"          LOG.debug(""[createChild] Updating type to"", child.getType().toString());"
955,./TargetProjects/sentry/sentry-hdfs/sentry-hdfs-common/src/main/java/org/apache/sentry/hdfs/HMSPaths.java,468,,"        LOG.debug(""Creating entries for prefix paths"", pathElements.toString());"
956,./TargetProjects/sentry/sentry-hdfs/sentry-hdfs-namenode-plugin/src/main/java/org/apache/sentry/hdfs/SentryINodeAttributesProvider.java,311,,"      LOG.info(""Config: hdfs-user[{}] hdfs-group[{}] hdfs-permission[{}] "" +"
957,./TargetProjects/sentry/sentry-hdfs/sentry-hdfs-namenode-plugin/src/main/java/org/apache/sentry/hdfs/SentryPermissions.java,254,,"        LOG.warn(""Permissions for Invalid AclEntryType: %s"", permission.getKey().getType());"
958,./TargetProjects/sentry/sentry-hdfs/sentry-hdfs-service/src/main/java/org/apache/sentry/hdfs/SentryPlugin.java,260,,"      LOGGER.trace(""onAlterSentryRoleGrantPrivilege: {}"", roleName, privileges);"
959,./TargetProjects/sentry/sentry-hdfs/sentry-hdfs-service/src/main/java/org/apache/sentry/hdfs/SentryPlugin.java,288,,"      LOGGER.trace(""onAlterSentryUserGrantPrivilege: {}"", userName, privileges);"
960,./TargetProjects/sentry/sentry-hdfs/sentry-hdfs-service/src/main/java/org/apache/sentry/hdfs/SentryPlugin.java,360,,"      LOGGER.trace(""onAlterSentryRoleRevokePrivilege: {}"", roleName, privileges);"
961,./TargetProjects/sentry/sentry-hdfs/sentry-hdfs-service/src/main/java/org/apache/sentry/hdfs/SentryPlugin.java,389,,"      LOGGER.trace(""onAlterSentryUserRevokePrivilege: {}"", userName, privileges);"
962,./TargetProjects/sentry/sentry-provider/sentry-provider-common/src/main/java/org/apache/sentry/provider/common/ResourceAuthorizationProvider.java,144,,"          LOGGER.debug(""ProviderPrivilege {}, RequestPrivilege {}, RoleSet {}, Result {}"","
963,./TargetProjects/sentry/sentry-service/sentry-service-server/src/main/java/org/apache/sentry/provider/db/service/model/MAuthzPathsMapping.java,201,,"    LOGGER.debug(""Entries deleted are %d"", delCount);"
964,./TargetProjects/sentry/sentry-service/sentry-service-server/src/main/java/org/apache/sentry/service/thrift/SentryHMSClient.java,220,,"      LOGGER.error(""Root Exception"", ExceptionUtils.getRootCause(exception));"
965,./TargetProjects/servicemix-components/bindings/servicemix-jms/src/main/java/org/apache/servicemix/jms/jca/JcaConsumerProcessor.java,134,,"                    logger.info(""Exchange in error: {}"", exchange, exchange.getError());"
966,./TargetProjects/servicemix-components/engines/servicemix-wsn2005/src/main/java/org/apache/servicemix/wsn/AbstractCreatePullPoint.java,119,,"                    logger.info(""Error destroying pullPoint"", e);"
967,./TargetProjects/servicemix-components/engines/servicemix-wsn2005/src/main/java/org/apache/servicemix/wsn/AbstractNotificationBroker.java,214,,"                    logger.info(""Error destroying subscription"", e);"
968,./TargetProjects/servicemix-components/engines/servicemix-wsn2005/src/main/java/org/apache/servicemix/wsn/AbstractNotificationBroker.java,308,,"                    logger.info(""Error destroying publisher"", e);"
969,./TargetProjects/servicemix3/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/InstallationService.java,539,,"        LOGGER.debug(""Building component from directory {}"" + componentDirectory.getPath());"
970,./TargetProjects/shiro/config/ogdl/src/main/java/org/apache/shiro/config/ogdl/ReflectionBuilder.java,681,,"                log.trace(""Applying property [{}] value [{}] on object of type [{}]"","
971,./TargetProjects/shiro/config/ogdl/src/main/java/org/apache/shiro/config/ogdl/event/LoggingBeanEventListener.java,40,,"        logger.trace(""{} bean '{}' [{}]"", new Object[]{subclassPrefix, e.getBeanName(), e.getBean()});"
972,./TargetProjects/shiro/core/src/main/java/org/apache/shiro/realm/ldap/JndiLdapContextFactory.java,472,,"            log.debug(""Initializing LDAP context using URL [{}] and principal [{}] with pooling {}"","
973,./TargetProjects/shiro/web/src/main/java/org/apache/shiro/web/filter/PathMatchingFilter.java,217,,"                log.trace(""Filter '{}' is enabled for the current request under path '{}' with config [{}].  "" +"
974,./TargetProjects/shiro/web/src/main/java/org/apache/shiro/web/filter/PathMatchingFilter.java,227,,"            log.trace(""Filter '{}' is disabled for the current request under path '{}' with config [{}].  "" +"
975,./TargetProjects/shiro/web/src/main/java/org/apache/shiro/web/servlet/SimpleCookie.java,443,,"                log.warn(""Found '{}' cookie at path '{}', but should be only used for '{}'"", "
976,./TargetProjects/storm/external/storm-autocreds/src/main/java/org/apache/storm/hdfs/security/AutoHDFSCommand.java,55,,"        LOG.info(""Got HDFS credentials"", autoHdfs.getCredentials(creds));"
977,./TargetProjects/storm/external/storm-autocreds/src/main/java/org/apache/storm/hdfs/security/AutoHDFSCommand.java,62,,"        LOG.info(""renewed credentials"", autoHdfs.getCredentials(creds));"
978,./TargetProjects/storm/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/client/impl/DefaultClient.java,79,,"            LOG.info(""Connect to cluster using keyspace %s"", keyspace);"
979,./TargetProjects/storm/external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueState.java,223,,"                LOG.debug(""Prepared txn already exists, will merge"", txid);"
980,./TargetProjects/storm/external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/state/HBaseMapState.java,182,,"            LOG.info(""Partiton: {}, Key: {}, Value: {}"","
981,./TargetProjects/storm/external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStoreImpl.java,255,,"        LOG.debug(""{} Looking for {} in {}"", new Object[]{fullPath, key, hash});"
982,./TargetProjects/storm/external/storm-hive/src/main/java/org/apache/storm/hive/bolt/HiveBolt.java,70,,"                LOG.error(""Hive kerberos authentication failed "" + ex.getMessage(), ex);"
983,./TargetProjects/storm/external/storm-hive/src/main/java/org/apache/storm/hive/bolt/HiveBolt.java,110,,"            LOG.info(""Serialization exception occurred, tuple is acknowledged but not written to Hive."", tuple);"
984,./TargetProjects/storm/external/storm-hive/src/main/java/org/apache/storm/hive/bolt/HiveBolt.java,266,,"            LOG.error(""Failed to create HiveWriter for endpoint: "" + endPoint, e);"
985,./TargetProjects/storm/external/storm-hive/src/main/java/org/apache/storm/hive/trident/HiveState.java,71,,"            LOG.warn(""Commit failed. Failing the batch."", ex);"
986,./TargetProjects/storm/external/storm-hive/src/main/java/org/apache/storm/hive/trident/HiveState.java,82,,"                LOG.error(""Hive kerberos authentication failed "" + ex.getMessage(), ex);"
987,./TargetProjects/storm/external/storm-hive/src/main/java/org/apache/storm/hive/trident/HiveState.java,204,,"            LOG.error(""Failed to create HiveWriter for endpoint: "" + endPoint, e);"
988,./TargetProjects/storm/external/storm-redis/src/main/java/org/apache/storm/redis/state/RedisKeyValueState.java,192,,"                LOG.debug(""Prepared txn already exists, will merge"", txid);"
989,./TargetProjects/storm/external/storm-solr/src/main/java/org/apache/storm/solr/mapper/SolrFieldsMapper.java,42,,"        log.debug(""Created {} with the following configuration: [{}] """
990,./TargetProjects/storm/flux/flux-core/src/main/java/org/apache/storm/flux/FluxBuilder.java,578,,"            LOG.warn(""Found multiple invokable methods for class {}, method {}, given arguments {}. """
991,./TargetProjects/storm/storm-client/src/jvm/org/apache/storm/messaging/local/Context.java,52,,"            LOG.info(""Replacing existing server for key {}"", existing, ret, key);"
992,./TargetProjects/storm/storm-client/src/jvm/org/apache/storm/messaging/netty/SaslNettyServer.java,128,,"                LOG.debug(""handle: SASL server DIGEST-MD5 callback: setting password for client: "","
993,./TargetProjects/storm/storm-client/src/jvm/org/apache/storm/messaging/netty/SaslNettyServer.java,145,,"                    LOG.debug(""handle: SASL server DIGEST-MD5 callback: setting canonicalized client ID: "","
994,./TargetProjects/storm/storm-client/src/jvm/org/apache/storm/trident/windowing/StoreBasedTridentWindowManager.java,77,,"                LOG.debug(""Received earlier unsuccessful trigger [{}] from windows store [{}]"", key);"
995,./TargetProjects/storm/storm-client/src/jvm/org/apache/storm/utils/NimbusClient.java,200,,"                LOG.warn(""You have specified a doAsUser as param {} and a doAsParam as config, config will take precedence."","
996,./TargetProjects/storm/storm-client/src/jvm/org/apache/storm/utils/SupervisorClient.java,67,,"                LOG.warn(""You have specified a doAsUser as param {} and a doAsParam as config, config will take precedence."","
997,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/blobstore/FileBlobStoreImpl.java,131,,"        LOG.debug(""{} Looking for {} in {}"", new Object[]{ fullPath, key, hash });"
998,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java,909,,"                    LOG.warn(""Memory over-scheduled on {}"", id, availableMem);"
999,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java,913,,"                    LOG.warn(""CPU over-scheduled on {}"", id, availableCpu);"
1000,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java,1895,,"                    LOG.info(""desired replication count of {} not achieved for {} but we have hit the max wait time {}"""
1001,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/logging/ThriftAccessLogger.java,33,,"        LOG.info(accessLogBase + functionPart,"
1002,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/logging/ThriftAccessLogger.java,41,,"            LOG.info(accessLogBase + "" storm-name: {} access result: {}"","
1003,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/logging/ThriftAccessLogger.java,44,,"            LOG.info(accessLogBase + "" access result: {}"","
1004,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/logging/ThriftAccessLogger.java,48,,"            LOG.info(accessLogBase + "" storm-name: {}"","
1005,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/scheduler/resource/strategies/scheduling/ConstraintSolverConfig.java,110,,"                                    LOG.warn(""TopoId {}: {} {} declared for Comp {} for topoId {} is not valid, expected >= 1"","
