63000,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLOptimizerTraceTest.java,416,,"             ""select * from table\n"" +"
63001,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLOptimizerTraceTest.java,419,,"             ""    (\n"" +"
63002,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLOptimizerTraceTest.java,420,,"             ""        '"" + traceFile.getPath() + ""',\n"" +"
63003,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLOptimizerTraceTest.java,420,,"             ""        '"" + traceFile.getPath() + ""',\n"" +"
63004,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLOptimizerTraceTest.java,421,,"             ""        'decoration',\n"" +"
63005,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLOptimizerTraceTest.java,424,,"             ""    )\n"" +"
63006,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLOptimizerTraceTest.java,425,,"             "") v\n"""
63007,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLOptimizerTraceTest.java,542,,"             ""where conglomerateName like '%_A' and estimatedCost is not null\n"" +"
63008,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,110,,"        assertCompileError(""42818"","
63009,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,158,,"        assertCompileError(""42821"", ""insert into t1 values (3, 'hmm')"");"
63010,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,244,,"        assertCompileError(""42846"","
63011,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,298,,"        assertCompileError(""42Y95"", ""select i + x from t1"");"
63012,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,304,,"        assertCompileError(""42X25"", ""select substr(x, 0) from t1"");"
63013,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,341,,"        assertStatementError(""42Z71"", cSt);"
63014,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,414,,"        assertCompileError(""42Z74"","
63015,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,423,,"            + ""preserve whitespace))"");"
63016,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,435,,"            + ""preserve whitespace)"");"
63017,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,529,,"            {""<update2> document was inserted as part of an """
63018,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,530,,"                + ""UPDATE </update2>""},"
63019,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,534,,"            {""<hmm/>""},"
63020,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,535,,"            {""<half> <masted> bass </masted> boosted. </half>""},"
63021,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,536,,"            {""<umm> decl check </umm>""},"
63022,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,537,,"            {""<lets> <try> this out </try> </lets>""}"
63023,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,640,,"        assertCompileError(""42X01"", ""select xmlserialize(x as) from t1"");"
63024,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,747,,"        assertStatementError(""22001"", st,"
63025,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,771,,"        assertEquals(""Incorrect XMLSERIALIZE result type:"","
63026,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,913,,"        assertCompileError(""42Z77"","
63027,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,977,,"            {""false""},"
63028,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,984,,"            {""true""}"
63029,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,1316,,"            + ""passing by ref x) from xqExists3"");"
63030,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,1575,,"            ""select i,"""
63031,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,1576,,"            + ""  xmlserialize("""
63032,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,1578,,"            + ""returning sequence empty on empty)"""
63033,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,1579,,"            + ""  as char(70))"""
63034,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,1580,,"            + ""from t1"");"
63035,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,1620,,"            + ""sequence empty on empty)"""
63036,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,1828,,"            {""1"", ""NaN""},"
63037,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,1934,,"            {""9"", ""<here><is><my height=\""4.4\"">attribute</my></is></here>""},"
63038,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,1947,,"        assertStatementError(""2200L"", st,"
63039,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,1950,,"            + ""  (select"""
63040,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,1953,,"            + ""    from xqInsert2 where i = 9"""
63041,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,1954,,"            + ""  )"""
63042,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,1958,,"            "" insert into xqInsert1 (i, x) values ("""
63043,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,2139,,"            "" update xqUpdate"""
63044,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,2147,,"            + ""    empty on empty)"""
63045,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,2148,,"            + ""where i = 30"");"
63046,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,2239,,"            + ""        xmlparse(document '<okay><lets """
63047,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,2240,,"            + ""boki=\""inigo\""/></okay>' preserve whitespace)"""
63048,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,2241,,"            + ""      empty on empty)"""
63049,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,2243,,"            + ""  as char(100))"""
63050,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,2244,,"            + ""from t1 where i > 5"");"
63051,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,2421,,"            ""select"""
63052,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,2427,,"            + "" from attserTable"""
63053,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,2570,,"            {""1"", ""<name> john </name>""},"
63054,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java,2571,,"            {""2"", ""<name> ally </name>""}"
63055,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLXXETest.java,168,,"             ""(\n"" +"
63056,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XMLXXETest.java,172,,"             "")\n"" +"
63057,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,508,,"            if (hasTable(s, ""XPLTEST"", tableNames[i]))"
63058,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,554,,"                    ""select stmt_id from XPLTEST.sysxplain_statements"");"
63059,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,639,,"                    rs.getString(""no_opens"")+"",""+"
63060,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,652,,"                    rs.getString(""returned_rows"")+"",""+"
63061,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,961,,"            ""select count(*) from xpltest.sysxplain_statements""),"
63062,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1010,,"            ""select count(*) from xpltest.sysxplain_resultsets""), ""2"");"
63063,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1023,,"                new String[][] { {""PROJECTION""}, {""TABLESCAN""} } );"
63064,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1023,,"                new String[][] { {""PROJECTION""}, {""TABLESCAN""} } );"
63065,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1027,,"                    "" from xpltest.sysxplain_statements""),"
63066,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1043,,"                    ""from xpltest.sysxplain_resultsets "" +"
63067,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1051,,"                    ""select sp.scan_object_name, sp.scan_object_type, "" +"
63068,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1052,,"                    ""sp.scan_type, sp.isolation_level, "" +"
63069,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1053,,"                    ""sp.no_visited_rows, sp.no_qualified_rows, ""+"
63070,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1056,,"                    ""from xpltest.sysxplain_scan_props sp "" +"
63071,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1057,,"                    ""join xpltest.sysxplain_resultsets rs "" +"
63072,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1058,,"                    ""on sp.scan_rs_id = rs.scan_rs_id "" +"
63073,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1061,,"                    ""RC"", ""114"", ""6"", ""2"", ""2"", ""{0, 2}""} } );"
63074,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1103,,"        			getNodeAttribute(stmt_id,""scanned_object"",1));"
63075,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1105,,"        			getNodeAttribute(stmt_id,""scan_type"",1));"
63076,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1107,,"        			getNodeAttribute(stmt_id,""visited_pages"",1));"
63077,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1153,,"            ""select count(*) from xpltest.sysxplain_resultsets ""+"
63078,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1154,,"	    ""where stmt_id='""+stmt_id+""'""), ""2"");"
63079,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1221,,"                    ""select op_identifier from xpltest.sysxplain_resultsets "" +"
63080,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1222,,"                    ""order by op_identifier""),"
63081,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1224,,"                {""GROUPBY""},{""PROJECTION""},{""PROJECTION""},{""TABLESCAN""} } );"
63082,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1227,,"            ""where scan_rs_id is not null""), ""1"");"
63083,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1230,,"            ""where sort_rs_id is not null""), ""1"");"
63084,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1232,,"                    ""select s.stmt_text, rs.op_identifier,"" +"
63085,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1233,,"                    "" srt.no_input_rows, srt.no_output_rows "" +"
63086,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1234,,"                    "" from xpltest.sysxplain_sort_props srt, "" +"
63087,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1235,,"                    "" xpltest.sysxplain_resultsets rs, "" +"
63088,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1236,,"                    "" xpltest.sysxplain_statements s "" +"
63089,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1237,,"                    "" where rs.stmt_id = s.stmt_id and "" +"
63090,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1238,,"                    "" rs.sort_rs_id = srt.sort_rs_id""),"
63091,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1243,,"                    ""select srt.sort_type, srt.no_input_rows, "" +"
63092,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1244,,"                    "" srt.no_output_rows, srt.no_merge_runs, "" +"
63093,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1245,,"                    "" srt.merge_run_details, srt.eliminate_duplicates, "" +"
63094,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1246,,"                    "" srt.in_sort_order, srt.distinct_aggregate "" +"
63095,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1247,,"                    ""from xpltest.sysxplain_sort_props srt "" +"
63096,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1249,,"                    ""on srt.sort_rs_id = rs.sort_rs_id "" +"
63097,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1250,,"                    ""where rs.op_identifier='GROUPBY'""),"
63098,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1318,,"                {""Africa"", ""19""}, {""Asia"", ""15""},"
63099,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1611,,"            new String[][] { {""PROJECTION""}, {""ROWIDSCAN""}, {""INDEXSCAN""} } );"
63100,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1641,,"                new String[][] { {""DESTINDEX"", ""I"", ""BTREE"","
63101,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1700,,"                {""PROJECTION""}, {""ROWIDSCAN""}, {""CONSTRAINTSCAN""} } );"
63102,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1846,,"        			getNodeAttribute(stmt_id,""sort_type"",1));"
63103,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1848,,"        			getNodeAttribute(stmt_id,""sorter_output"",1));"
63104,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,1999,,"                    ""select stmt_type, stmt_text "" +"
63105,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,2021,,"                    ""select op_identifier, op_details, no_opens, "" +"
63106,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,2022,,"                    ""       seen_rows, filtered_rows, returned_rows "" +"
63107,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,2162,,"                        ""1"", ""1"", ""1"", ""0"", ""2"", ""ALL"", ""None""} } );"
63108,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,2337,,"                    {""SORT"", null, ""1"",""114"",""0"",""0"",""0""} } );"
63109,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java,2723,,"            "">= on first 1 column(s)."","
63110,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/concateTests.java,129,,"			verifyStringData(s.executeQuery(""select lvc1 from t1""), columnLVC1value);"
63111,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/concateTests.java,221,,"				if (e.getSQLState().equals(""54006""))"
63112,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/concateTests.java,222,,"					System.out.println(""expected exception "" + e.getMessage());"
63113,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/concateTests.java,305,,"			verifyStringData(s.executeQuery(""select clob2 from testCLOB_MAIN""), columnCLOB2value);"
63114,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/concateTests.java,319,,"			verifyStringData(s.executeQuery(""select clob1 from testCLOB_MAIN""), columnCLOB1value);"
63115,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/concateTests.java,540,,"			verifyByteData(s.executeQuery(""select lvcbd1 from t2""), columnLVCBD1value);"
63116,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/concateTests.java,725,,"			verifyByteData(s.executeQuery(""select blob2 from testBLOB_MAIN""), columnBLOB2value);"
63117,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/concateTests.java,747,,"			verifyByteData(s.executeQuery(""select blob1 from testBLOB_MAIN""), columnBLOB1value);"
63118,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,68,,"			s.executeUpdate(""insert into t1(c11) values ('"" +  stringConstant32671 + ""')"");"
63119,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,69,,"			s.executeUpdate(""insert into t1(c12) values (X'"" +  hexConstant16334 + ""')"");"
63120,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,72,,"			s.execute(""values ('"" +  stringConstant32671 + ""')"");"
63121,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,73,,"			s.execute(""values (X'"" +  hexConstant16334 + ""')"");"
63122,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,76,,"			s.executeUpdate(""insert into t1(c11) values ('"" +  stringConstant32671 + ""a')"");"
63123,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,77,,"			s.executeUpdate(""insert into t1(c12) values (X'"" +  hexConstant16334 + ""ab')"");"
63124,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,86,,"				System.out.println(""FAIL - should have gotten string constant too long error for this insert statement"");"
63125,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,89,,"				if (e.getSQLState().equals(""54002""))"
63126,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,90,,"					System.out.println(""expected exception "" + e.getMessage());"
63127,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,108,,"				System.out.println(""FAIL - should have gotten string constant too long error for this values statement"");"
63128,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,194,,"			s.executeUpdate(""drop table t1"");"
63129,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,215,,"			tempString = (sbTableElements.toString()).concat(""c"" + i + "" int)"");"
63130,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,225,,"				if (e.getSQLState().equals(""54011""))"
63131,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,233,,"			tempString = (sbTableElements.toString()).concat(""c"" + i +"" int, c"" + (i+1) + "" int)"");"
63132,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,248,,"			getCount(met.getColumns("""", ""APP"", ""T1"", null));"
63133,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,307,,"			tempString = ""create view v1("" + sbViewColumnNames.toString() + ""c"" + i + "") as values ("" + sbValuesClause.toString() + ""1)"";"
63134,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,307,,"			tempString = ""create view v1("" + sbViewColumnNames.toString() + ""c"" + i + "") as values ("" + sbValuesClause.toString() + ""1)"";"
63135,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,312,,"			tempString = ""create view v1("" + sbViewColumnNames.toString() + ""c"" + i + "", c"" + (i+1)+ "") as values ("" + sbValuesClause.toString() + ""1,1)"";"
63136,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/dbManagerLimits.java,378,,"				if (e.getSQLState().equals(""54004""))"
63137,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/outparams.java,414,,"		System.out.println(""=============================================="");"
63138,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/outparams.java,416,,"		System.out.println(""==============================================\n"");"
63139,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/outparams.java,421,,"						""EXTERNAL NAME '"" + CLASS_NAME + ""takesString'"" +"
63140,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/outparams.java,422,,"						"" NO SQL LANGUAGE JAVA PARAMETER STYLE JAVA"");"
63141,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/outparams.java,435,,"			System.out.println(""Expected exception ""+se);"
63142,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/outparams.java,668,,"					scp.execute(""CREATE PROCEDURE "" + methodName + ""(INOUT P1 "" + outputProcParam[method] + "", IN P2 INT) "" +"
63143,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/outparams.java,670,,"						""' NO SQL LANGUAGE JAVA PARAMETER STYLE JAVA"");"
63144,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/outparams.java,674,,"						str = ""{call ""+methodName+""(?,?)}"";"
63145,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/outparams.java,710,,"						System.out.println(""\tException ""+se);"
63146,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/outparams.java,1018,,"				strbuf.append(""setObject(""+arg+"", true)"");"
63147,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/outparams.java,1033,,"				strbuf.append(""setObject(""+arg+"", 666)"");"
63148,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/outparams.java,1193,,"				strbuf.append(""getBoolean(""+arg+"") = "");"
63149,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/outparams.java,1254,,"				strbuf.append(date == null ? ""null"" : date.toString());"
63150,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/wisconsin.java,82,,"											 ""two int, "" +"
63151,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/wisconsin.java,83,,"											 ""four int, "" +"
63152,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/wisconsin.java,84,,"											 ""ten int, "" +"
63153,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/wisconsin.java,85,,"											 ""twenty int, "" +"
63154,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/wisconsin.java,86,,"											 ""onePercent int, "" +"
63155,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/wisconsin.java,87,,"											 ""tenPercent int, "" +"
63156,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/wisconsin.java,88,,"											 ""twentyPercent int, "" +"
63157,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/wisconsin.java,89,,"											 ""fiftyPercent int, "" +"
63158,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/wisconsin.java,90,,"											 ""unique3 int, "" +"
63159,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/wisconsin.java,91,,"											 ""evenOnePercent int, "" +"
63160,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/wisconsin.java,92,,"											 ""oddOnePercent int, "" +"
63161,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/lang/wisconsin.java,188,,"		ps2.setString(1, ""APP"");"
63162,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/largedata/Derby6317Test.java,350,,"        stmt.execute(""call SYSCS_UTIL.SYSCS_SET_RUNTIMESTATISTICS(1)"");"
63163,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/largedata/Derby6884Test.java,90,,"        doExportTableLobsToExtFile(""APP"", ""DERBY_6884_TESTCLOB"", fileName6884, "
63164,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/largedata/LobLimitsTest.java,367,,"                assertSQLState(""XSDA4"", sqle);"
63165,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/largedata/LobLimitsTest.java,493,,"        println(""========================================"");"
63166,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/largedata/LobLimitsTest.java,494,,"        println(""START "" + testId + ""insertBlob of size = """
63167,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/largedata/LobLimitsTest.java,509,,"        println(""Insert Blob ("" + bloblen + "")"" + "" rows= """
63168,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/largedata/LobLimitsTest.java,510,,"                   + count + "" = "" + (long) (System.currentTimeMillis() - ST));"
63169,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/largedata/LobLimitsTest.java,512,,"                + "") ="");"
63170,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/largedata/LobLimitsTest.java,577,,"            assertEquals(""FAIL - MISMATCH LENGTHS GOT "" + l"
63171,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/largedata/LobLimitsTest.java,578,,"                       + "" expected "" + dlen + "" for row in BLOBTBL with ID="""
63172,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/largedata/LobLimitsTest.java,578,,"                       + "" expected "" + dlen + "" for row in BLOBTBL with ID="""
63173,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/largedata/LobLimitsTest.java,1502,,"        throw new SQLException(""Not implemented"");"
63174,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/management/CacheManagerMBeanTest.java,48,,"        ""CollectAccessCounts"", ""HitCount"", ""MissCount"", ""EvictionCount"","
63175,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/management/CacheManagerMBeanTest.java,48,,"        ""CollectAccessCounts"", ""HitCount"", ""MissCount"", ""EvictionCount"","
63176,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/management/CacheManagerMBeanTest.java,48,,"        ""CollectAccessCounts"", ""HitCount"", ""MissCount"", ""EvictionCount"","
63177,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/management/CacheManagerMBeanTest.java,48,,"        ""CollectAccessCounts"", ""HitCount"", ""MissCount"", ""EvictionCount"","
63178,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/management/CacheManagerMBeanTest.java,49,,"        ""MaxEntries"", ""AllocatedEntries"", ""UsedEntries"""
63179,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/management/CacheManagerMBeanTest.java,49,,"        ""MaxEntries"", ""AllocatedEntries"", ""UsedEntries"""
63180,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/management/CacheManagerMBeanTest.java,49,,"        ""MaxEntries"", ""AllocatedEntries"", ""UsedEntries"""
63181,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/management/InactiveManagementMBeanTest.java,59,,"        assertBooleanAttribute(true, appMgmtBean, ""ManagementActive"");"
63182,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/management/InactiveManagementMBeanTest.java,61,,"        assertNotNull(getAttribute(appMgmtBean, ""SystemIdentifier""));"
63183,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/management/MBeanTest.java,460,,"        println(name + "" = "" + unboxedValue); // for debugging"
63184,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/management/ManagementMBeanTest.java,90,,"        assertBooleanAttribute(true, mbean, ""ManagementActive"");"
63185,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memory/ConnectionHandling.java,63,,"                    System.out.println(""UNKNOWN ERROR "" + e.getSQLState() + "" """
63186,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memory/TriggerTests.java,308,,"			""insert into table2 (id) values (?)"");"
63187,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memory/TriggerTests.java,335,,"			""new as n_row for each row "" +"
63188,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memory/TriggerTests.java,361,,"        		""(p1 int) parameter style java language ""+"
63189,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memory/TriggerTests.java,362,,"        		""java MODIFIES SQL DATA external name ""+"
63190,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memory/TriggerTests.java,378,,"        Connection conn = DriverManager.getConnection(""jdbc:default:connection"");"
63191,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memory/TriggerTests.java,405,,"				""old as o_row for each row "" +"
63192,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memory/TriggerTests.java,573,,"        		""java READS SQL DATA external name ""+"
63193,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memory/TriggerTests.java,589,,"        PreparedStatement ps = conn.prepareStatement(""select updates from "" +"
63194,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memory/TriggerTests.java,590,,"        		""table2 where table2.id = "" + p1);"
63195,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memory/TriggerTests.java,771,,"        s.execute(""drop table table2"");"
63196,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memory/TriggerTests.java,772,,"		s.execute(""create table table2 (id int, bl_table2 blob(2G))"");"
63197,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memorydb/BasicInMemoryDbTest.java,173,,"            assertSQLState(""08006"", sqle);"
63198,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memorydb/BasicInMemoryDbTest.java,279,,"                    ""select * from sys.systables""));"
63199,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memorydb/ClusMogSQL.java,95,,"    final String clusterN = ""cluster"" + uniq;"
63200,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memorydb/ClusMogSQL.java,96,,"    final String sampleN = ""sample"" + uniq;"
63201,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memorydb/ClusMogSQL.java,102,,"      stmt.executeUpdate(""CREATE TABLE "" + clusterN + ""(weight double, mean double, var double, bucket int PRIMARY KEY)"");"
63202,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memorydb/ClusMogSQL.java,105,,"      pstmt = conn.prepareStatement(""INSERT INTO "" + sampleN + ""(value, id) VALUES (?, ?)"");"
63203,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memorydb/ClusMogSQL.java,156,,"                         ""  FROM "" + sampleN + "" \n"" +"
63204,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memorydb/ClusMogSQL.java,156,,"                         ""  FROM "" + sampleN + "" \n"" +"
63205,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/memorydb/ClusMogSQL.java,178,,"      stmt.executeUpdate(""DROP TABLE "" + mm);"
63206,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/multi/StressMultiTest.java,117,,"        sysprops.put(""derby.storage.keepTransactionLog"", ""true"");"
63207,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/multi/StressMultiTest.java,407,,"                        println(name + "" - Run "" + i + "" - Create "" + n + "" "" +"
63208,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/multi/StressMultiTest.java,410,,"                        String n = ""main"";"
63209,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/multi/StressMultiTest.java,411,,"                        if (rnd.nextInt(2) == 1) n = ""main2"";"
63210,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/multi/StressMultiTest.java,467,,"                s.execute(""insert into "" + table + "" values (1)"");"
63211,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/multi/StressMultiTest.java,467,,"                s.execute(""insert into "" + table + "" values (1)"");"
63212,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/multi/StressMultiTest.java,477,,"                        || e.equals(""42Y55"") || e.equals(""42000"")"
63213,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/multi/StressMultiTest.java,477,,"                        || e.equals(""42Y55"") || e.equals(""42000"")"
63214,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/multi/StressMultiTest.java,478,,"                        || e.equals(""40001"") || e.equals(""40XL1"")"
63215,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/multi/StressMultiTest.java,478,,"                        || e.equals(""40001"") || e.equals(""40XL1"")"
63216,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/multi/StressMultiTest.java,479,,"                        || e.equals(""40XL2"") || e.equals(""42Y07"")"
63217,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/multi/StressMultiTest.java,479,,"                        || e.equals(""40XL2"") || e.equals(""42Y07"")"
63218,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/nist/NistScripts.java,43,,"    { ""schema5"", ""FLATER""},"
63219,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/nist/NistScripts.java,44,,"    { ""schema8"", ""SUN""},"
63220,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/nist/NistScripts.java,47,,"    { ""temp_cts5tab"", ""CTS1""},"
63221,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/nist/NistScripts.java,109,,"    {""dml080"", ""SCHANZLE""},"
63222,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,76,,"    static String masterServerHost = ""localhost""; "
63223,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,447,,"                msg = se.getErrorCode() + ""' '"" + se.getSQLState()"
63224,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,563,,"        String ijClassPath = derbyVersion +FS+ ""derbyclient.jar"""
63225,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,564,,"                + PS + derbyVersion +FS+ ""derbyTesting.jar"""
63226,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,565,,"                + PS + derbyVersion +FS+ ""derbytools.jar"";"
63227,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,567,,"                + PS + derbyVersion +FS+ ""derbynet.jar"" // WHY IS THIS NEEDED?"
63228,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,574,,"        final boolean isIjTest = (replicationTest.indexOf("".sql"") >= 0);"
63229,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,630,,"                    ""cd "" + workingDir + "";"" + util.splice(command, ' '),"
63230,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,851,,"                    + "" -Dij.driver="" + DRIVER_CLASS_NAME"
63231,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,853,,"                    + "" -classpath "" + ijClassPath + "" org.apache.derby.tools.ij"""
63232,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,853,,"                    + "" -classpath "" + ijClassPath + "" org.apache.derby.tools.ij"""
63233,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,965,,"                +"";slavePort=""+slaveReplPort;"
63234,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,1635,,"        util.printDebug = System.getProperty(""derby.tests.repltrace"", ""false"")"
63235,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,1636,,"                                                     .equalsIgnoreCase(""true"");"
63236,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,1756,,"        util.DEBUG(""--------------------------------------------------------"");"
63237,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,2694,,"            String pid = ""test."" + id;"
63238,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,3018,,"        return masterJvmVersion+FS+""..""+FS+""bin""+FS+""java"";"
63239,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java,3018,,"        return masterJvmVersion+FS+""..""+FS+""bin""+FS+""java"";"
63240,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun_Distributed.java,191,,"        util.printDebug = cp.getProperty(""test.printDebug"",""false"").equalsIgnoreCase(""true"");"
63241,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun_Distributed.java,191,,"        util.printDebug = cp.getProperty(""test.printDebug"",""false"").equalsIgnoreCase(""true"");"
63242,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun_Distributed.java,317,,"        util.DEBUG(""--------------------------------------------------------"");"
63243,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun_Local_StateTest_part1.java,196,,"        String connectionURL = ""jdbc:derby:"""
63244,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun_Local_StateTest_part1.java,264,,"            util.DEBUG(""Unexpectedly connected: "" + connectionURL);"
63245,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun_Local_StateTest_part1.java,343,,"            util.DEBUG(""2. Unexpectedly connected as: "" + connectionURL);"
63246,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun_Local_StateTest_part1_2.java,159,,"        connectionURL = ""jdbc:derby:""  "
63247,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun_Local_StateTest_part1_2.java,162,,"                + "";stopMaster=true"";"
63248,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun_Local_StateTest_part2.java,294,,"        String connectionURL = ""jdbc:derby:""  "
63249,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/TestPostStartedMasterAndSlave_StopMaster.java,92,,"        connectionURL = ""jdbc:derby:""  "
63250,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/TestPostStartedMasterAndSlave_StopMaster.java,95,,"                + "";stopMaster=true"";"
63251,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/TestPostStartedMasterAndSlave_StopSlave.java,94,,"        connectionURL = ""jdbc:derby:""  "
63252,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/replicationTests/TestPreInitSlave.java,99,,"            System.out.println(""Unexpectedly connected: "" + connectionURL);"
63253,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,133,,"        cSt = prepareCall(""call SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY("" +"
63254,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,139,,"            ""'derby.storage.pageSize', NULL)"");"
63255,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,160,,"        st.executeUpdate(""drop table a"");"
63256,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,221,,"        st.executeUpdate(""drop table foo"");"
63257,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,325,,"        st.executeUpdate(""set ISOLATION to RR"");"
63258,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,334,,"        st.execute(""call SYSCS_UTIL.SYSCS_SET_RUNTIMESTATISTICS(1)"");"
63259,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,385,,"            if (expectedScan.equals(""Table""))"
63260,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,387,,"            else if (expectedScan.equals(""Index""))"
63261,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,419,,"            if (expQualifier.equals(""None""))"
63262,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,421,,"            else if (expQualifier.equals(""Equals""))"
63263,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,435,,"            ""Table"", null, null, ""All"", ""5"", null, ""1"", ""2"", ""2"", "
63264,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,436,,"            ""heap"",""null"",""null"",""None"", null);"
63265,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,436,,"            ""heap"",""null"",""null"",""None"", null);"
63266,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,445,,"            ""Table"", null, null, ""{0, 2, 4}"", ""3"", null, ""1"", ""2"", ""2"", "
63267,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,460,,"            ""Table"", null, null, ""{0, 1}"", ""2"", null, ""1"", ""2"", ""2"", "
63268,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,467,,"            ""Index"", ""FOO"", ""FOO_COVER"", "
63269,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,467,,"            ""Index"", ""FOO"", ""FOO_COVER"", "
63270,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,468,,"            ""{0, 1, 2, 3, 4}"", ""5"", ""0"", ""1"", ""2"", ""2"", ""btree"","
63271,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,474,,"            ""{0}"", ""1"", ""0"", ""1"", ""2"", ""2"", ""btree"","
63272,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,487,,"            ""btree"","">= on first 1 column(s)."",""> on first 1 column(s)."",""None"", null);"
63273,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,487,,"            ""btree"","">= on first 1 column(s)."",""> on first 1 column(s)."",""None"", null);"
63274,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,690,,"        assertStatementError(""XSCB6"", st,"
63275,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,703,,"            ""'derby.storage.pageSize', '1024')"");"
63276,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,789,,"        assertUpdateCount(st, 2, ""update long1 set a = a||a||a||a||a||a"");"
63277,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,797,,"        expRS = new String [][]{{""5328""},{""5760""}};"
63278,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,797,,"        expRS = new String [][]{{""5328""},{""5760""}};"
63279,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,822,,"        st.executeUpdate(""insert into long2 select * from long1"");"
63280,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,926,,"        expRS = new String [][]{{""3024""},{""3240""}};"
63281,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,926,,"        expRS = new String [][]{{""3024""},{""3240""}};"
63282,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,1075,,"            ""PADSTRING('a',4000), PADSTRING('a',4000))"");"
63283,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,1212,,"        st.executeUpdate(""insert into foo "" +"
63284,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,1397,,"            ""lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll"" +"
63285,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,1498,,"        rs = st.executeQuery(""select max(b) from foo"");"
63286,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,1641,,"        rs = st.executeQuery(""select a from foo where a = 2"");"
63287,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,1669,,"        st.execute(""insert into foo values (1, 1)"");"
63288,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AccessTest.java,1772,,"        st.executeUpdate(""create table foo (a int, b int)"");"
63289,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AutomaticIndexStatisticsTest.java,117,,"        JDBCDataSource.setBeanProperty(ds, ""databaseName"", db);"
63290,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AutomaticIndexStatisticsTest.java,124,,"                ""select * from "" + TAB + "" where id = ?"");"
63291,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AutomaticIndexStatisticsTest.java,124,,"                ""select * from "" + TAB + "" where id = ?"");"
63292,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AutomaticIndexStatisticsTest.java,296,,"        stmt.executeUpdate(""create table "" + TAB +"
63293,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/AutomaticIndexStatisticsTest.java,301,,"        PreparedStatement ps = prepareStatement(""insert into "" + TAB +"
63294,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/BTreeMaxScanTest.java,90,,"        s.execute(""create index i on t(x)"");"
63295,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/BTreeMaxScanTest.java,105,,"                    ""select max(x) from t --derby-properties index=i"");"
63296,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/BootAllTest.java,65,,"            db3.addTest(new BootAllTest(""createShutdownDatabase""));"
63297,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/ClobReclamationTest.java,379,,"        checkNumAllocatedPages(""CLOBTAB3"", 1, true);"
63298,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/CryptoCrashRecoveryTest.java,98,,"        assertDirectoryDeleted(new File(""system"", db));"
63299,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/CryptoCrashRecoveryTest.java,497,,"            connAttrs += ""bootPassword="" + OLD_PASSWORD;"
63300,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/CryptoCrashRecoveryTest.java,500,,"            connAttrs += ""encryptionKey="" + OLD_KEY;"
63301,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/CryptoCrashRecoveryTest.java,502,,"        JDBCDataSource.setBeanProperty(ds, ""createDatabase"", ""create"");"
63302,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/CryptoCrashRecoveryTest.java,503,,"        JDBCDataSource.setBeanProperty(ds, ""connectionAttributes"", connAttrs);"
63303,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/CryptoCrashRecoveryTest.java,548,,"        println(""re-encrypting "" + db(ds) + "" with "" + connAttrs);"
63304,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/DecryptDatabaseTest.java,89,,"            assertSQLState(""XBM06"", sqle);"
63305,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/EncryptDatabaseTest.java,84,,"                          ""Thursday""); // only initial bootPassword, though.."
63306,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/EncryptDatabaseTest.java,103,,"        s.executeUpdate(""call SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY("" +"
63307,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/EncryptDatabaseTest.java,125,,"            s.executeQuery(""values SYSCS_UTIL.SYSCS_GET_DATABASE_PROPERTY("" +"
63308,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/EncryptDatabaseTest.java,126,,"                           ""'bootPassword')""),"
63309,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/EncryptDatabaseTest.java,131,,"                           ""'encryptedBootPassword')""),"
63310,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/EncryptionAESTest.java,133,,"        String[] bootPassword = {""bootPassword=Thursday""};"
63311,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/EncryptionAESTest.java,196,,"            {(""encryptionKeyLength="" + encryptionKeyLength),"
63312,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/EncryptionKeyTest.java,159,,"            assertSQLState(""XJ040"", sqle);"
63313,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/EncryptionKeyTest.java,237,,"                new File(SupportFilesSetup.EXTINOUT, ""backups"").getPath());"
63314,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/EncryptionKeyTest.java,277,,"                ""createFrom="" + backupDbLocation);"
63315,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/EncryptionKeyTest.java,280,,"        shutdown(dbNameRestored, ""restored"");"
63316,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorExternalSortJDBC30Test.java,102,,"        stUtil.executeUpdate(""call SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY("" +"
63317,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorExternalSortJDBC30Test.java,110,,"        st.execute(""CALL SYSCS_UTIL.SYSCS_SET_RUNTIMESTATISTICS(1)"");"
63318,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorExternalSortJDBC30Test.java,125,,"                        test1.getString(""data""));"
63319,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorJDBC30Test.java,118,,"        createStatement().execute(""call SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY("" +"
63320,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorJDBC30Test.java,140,,"            fail(""Should be unable to establish cursor!"");"
63321,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorJDBC30Test.java,141,,"        } catch (SQLException e) { assertSQLState(""XCL16"", e); }"
63322,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorJDBC30Test.java,143,,"        test1 = st.executeQuery(""select * from foo1 for update"");"
63323,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorJDBC30Test.java,256,,"        ResultSet test1 = st.executeQuery(""select * from foo2 for update"");"
63324,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorJDBC30Test.java,276,,"        assertEquals(10,test1.getInt(""data""));"
63325,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorJDBC30Test.java,413,,"        ResultSet test1 = st.executeQuery(""select * from foo3 for update of data"");"
63326,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorJDBC30Test.java,435,,"            fail(""Should be Should be unable to establish cursor!"");"
63327,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorJDBC30Test.java,539,,"        ResultSet test1 = st.executeQuery(""select * from foo4 for update of data"");"
63328,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorJDBC30Test.java,797,,"        ResultSet test1 = st.executeQuery(""select * from foo5"");"
63329,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorJDBC30Test.java,924,,"        ResultSet test1 = st.executeQuery(""select * from foo6"");"
63330,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorJDBC30Test.java,1084,,"        ResultSet test1 = st.executeQuery(""select a,data from foo7 order by data desc"");"
63331,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorJDBC30Test.java,1655,,"        assertEquals(1, test11.getInt(""t1_i1""));"
63332,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorJDBC30Test.java,1656,,"        assertEquals(10, test11.getInt(""t1_i2""));"
63333,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorJDBC30Test.java,1657,,"        assertEquals(1, test11.getInt(""t2_i1""));"
63334,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/HoldCursorJDBC30Test.java,1658,,"        assertEquals(10, test11.getInt(""t2_i2""));"
63335,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/IndexSplitDeadlockTest.java,146,,"        s.executeUpdate(""create table t (x int)"");"
63336,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/IndexSplitDeadlockTest.java,147,,"        s.executeUpdate(""create index idx on t(x)"");"
63337,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/IndexSplitDeadlockTest.java,148,,"        PreparedStatement ins = prepareStatement(""insert into t values ?"");"
63338,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/IndexSplitDeadlockTest.java,158,,"                ""select * from t --DERBY-PROPERTIES index=IDX"");"
63339,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/InterruptResilienceTest.java,177,,"        Connection c = DriverManager.getConnection(""jdbc:default:connection"");"
63340,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/InterruptResilienceTest.java,221,,"            ""external name 'org.apache.derbyTesting.functionTests"" +"
63341,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/InterruptResilienceTest.java,223,,"            ""language java parameter style java"");"
63342,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/InterruptResilienceTest.java,436,,"                            if (""08000"".equals(e.getSQLState())) {"
63343,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/InterruptResilienceTest.java,556,,"            fail(""expected CONN_INTERRUPT"");"
63344,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/LongColumnTest.java,88,,"        ResultSet rs = st.executeQuery(""select a from testing"");  "
63345,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/LongColumnTest.java,90,,"                {""1 2 3 4 5 6 7 8 9 0""},"
63346,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/LongColumnTest.java,91,,"                {""a b c d e f g h i j""},"
63347,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/LongColumnTest.java,92,,"                {""11 22 33 44 55 66 77""},"
63348,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/LongColumnTest.java,93,,"                {""aa bb cc dd ee ff gg""}"
63349,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/LongColumnTest.java,111,,"        ResultSet rs = st.executeQuery(""select * from testing"");"
63350,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/LongColumnTest.java,127,,"        rs = st.executeQuery(""select b from testing"");        "
63351,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/LongColumnTest.java,252,,"                {""update five times""},"
63352,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/LongColumnTest.java,344,,"                {""1 2 3 4 5 6 7 8 9 0"", ""1"", ""update 9""},"
63353,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/LongColumnTest.java,482,,"                {""a a a a a a a a a a"", ""b b b b b b b b b b"", ""c c c c c c c c c c"", "
63354,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/LongColumnTest.java,482,,"                {""a a a a a a a a a a"", ""b b b b b b b b b b"", ""c c c c c c c c c c"", "
63355,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/LongColumnTest.java,482,,"                {""a a a a a a a a a a"", ""b b b b b b b b b b"", ""c c c c c c c c c c"", "
63356,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/LongColumnTest.java,483,,"                    ""d d d d d d d d d d"", ""e e e e e e e e""},"
63357,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/LongColumnTest.java,483,,"                    ""d d d d d d d d d d"", ""e e e e e e e e""},"
63358,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/LongColumnTest.java,608,,"                {""1 1 1 1 1 1 1 1 1 1"", ""9 9 9 9 9 9 9 9 9 9""},"
63359,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/LongColumnTest.java,608,,"                {""1 1 1 1 1 1 1 1 1 1"", ""9 9 9 9 9 9 9 9 9 9""},"
63360,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OCRecoveryTest.java,58,,"            ""OCRecoveryDB"");"
63361,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OCRecoveryTest.java,68,,"        assertLaunchedJUnitTestMethod(""org.apache.derbyTesting."" +"
63362,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OSReadOnlyTest.java,120,,"            ""select count(*) from foo""), new String[][] {{""512""}});"
63363,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OSReadOnlyTest.java,144,,"        moveDatabaseOnOS(phDbName, ""readOnly"");"
63364,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OSReadOnlyTest.java,167,,"        moveDatabaseOnOS(""readWrite"", ""readOnly2"");"
63365,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OfflineBackupTest.java,47,,"        File origdbloc = new File(""system"",""wombat"");"
63366,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineBackupTest1.java,41,,"	private static final String TEST_TABLE_NAME   =    ""emp"";"
63367,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineBackupTest3.java,190,,"            logMessage(""Backup is not waiting for unlogged "" +  "
63368,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineBackupTest3.java,199,,"        conn1_stmt.execute(""CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY( "" + "
63369,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineBackupTest3.java,200,,"                           ""'derby.database.classpath', "" + "
63370,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineBackupTest3.java,205,,"        logMessage(""The transaction that was blocking the backup has ended"");"
63371,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineBackupTest3.java,276,,"        logMessage(""No of rows in table t1: "" + countRows(conn1, ""T1""));"
63372,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineBackupTest3.java,277,,"        logMessage(""No of rows in table customer: "" + "
63373,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineBackupTest3.java,278,,"                   countRows(conn1, ""customer""));"
63374,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineCompressTest.java,105,,"                ""create table "" + tblname + "
63375,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineCompressTest.java,112,,"                ""insert into "" + tblname + "" values(?, ?, ?, ?, ?, ?)"");"
63376,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineCompressTest.java,153,,"                ""create index "" + tblname + ""_idx_keycol on "" + tblname +"
63377,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineCompressTest.java,495,,"            testProgress(""Calling compress."");"
63378,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineCompressTest.java,498,,"        int[] ret_before = getSpaceInfo(conn, ""APP"", table_name, true);"
63379,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineCompressTest.java,505,,"                ""Expected no alloc page change."", "
63380,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineCompressTest.java,513,,"            testProgress(""calling consistency checker."");"
63381,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineCompressTest.java,517,,"            logError(""conistency check failed."");"
63382,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineCompressTest.java,524,,"        executeQuery(conn, ""delete from "" + table_name, true);"
63383,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineCompressTest.java,540,,"                ""Expected all pages to be truncated."","
63384,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineCompressTest.java,557,,"        testProgress(""end deleteAllRows,"" + num_rows + "" row test."");"
63385,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/OnlineCompressTest.java,925,,"            executeQuery(conn, ""drop table "" + table_name, true);"
63386,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/RowLockBasicTest.java,76,,"                + ""select """
63387,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/RowLockBasicTest.java,86,,"                + ""from """
63388,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/RowLockBasicTest.java,152,,"                "" select * from lock_table order by tabname, type """
63389,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/RowLockBasicTest.java,153,,"                + ""desc, mode, cnt, lockname"");"
63390,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/RowLockBasicTest.java,155,,"                {""APP"", ""UserTran"", ""TABLE"", ""1"", ""IX"", ""A"", ""Tablelock"", ""GRANT"", ""ACTIVE""},"
63391,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/RowLockBasicTest.java,155,,"                {""APP"", ""UserTran"", ""TABLE"", ""1"", ""IX"", ""A"", ""Tablelock"", ""GRANT"", ""ACTIVE""},"
63392,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/RowLockBasicTest.java,155,,"                {""APP"", ""UserTran"", ""TABLE"", ""1"", ""IX"", ""A"", ""Tablelock"", ""GRANT"", ""ACTIVE""},"
63393,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/RowLockBasicTest.java,155,,"                {""APP"", ""UserTran"", ""TABLE"", ""1"", ""IX"", ""A"", ""Tablelock"", ""GRANT"", ""ACTIVE""},"
63394,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/RowLockBasicTest.java,155,,"                {""APP"", ""UserTran"", ""TABLE"", ""1"", ""IX"", ""A"", ""Tablelock"", ""GRANT"", ""ACTIVE""},"
63395,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/RowLockBasicTest.java,155,,"                {""APP"", ""UserTran"", ""TABLE"", ""1"", ""IX"", ""A"", ""Tablelock"", ""GRANT"", ""ACTIVE""},"
63396,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/RowLockBasicTest.java,156,,"                {""APP"", ""UserTran"", ""ROW"", ""1"", ""X"", ""A"", ""(1,7)"", ""GRANT"", ""ACTIVE""}"
63397,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/RowLockBasicTest.java,156,,"                {""APP"", ""UserTran"", ""ROW"", ""1"", ""X"", ""A"", ""(1,7)"", ""GRANT"", ""ACTIVE""}"
63398,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/RowLockBasicTest.java,167,,"                {""APP"", ""UserTran"", ""ROW"", ""1"", ""X"", ""A"", ""(1,8)"", ""GRANT"", ""ACTIVE""}"
63399,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/RowLockBasicTest.java,250,,"                {""APP"", ""UserTran"", ""ROW"", ""1"", ""X"", ""A"", ""(1,10)"", ""GRANT"", ""ACTIVE""},"
63400,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/RowLockBasicTest.java,274,,"        ResultSet rs = st.executeQuery(""select a from a"");"
63401,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/RowLockBasicTest.java,293,,"                ""select * from lock_table order by tabname, type desc, mode, cnt, lockname"");"
63402,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,94,,"        dropTable(""IDELETEU"");"
63403,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,95,,"        dropTable(""PLATYPUS"");"
63404,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,99,,"        stmt.execute(""call SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY("" +"
63405,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,108,,"                ""'derby.storage.pageSize', '4096')"");"
63406,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,112,,"                Formatters.padString(""rrrrrrrrrr"",2000) + ""', '"" +"
63407,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,118,,"                new String[][]{{""IDELETEU"",""0"",""6"",""0"",""4096"",""0""}}, false);"
63408,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,148,,"                {""ECHIDNA"",""1"",""1"",""0"",""4096"",""0""},"
63409,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,149,,"                {""KOOKABURRA"",""1"",""1"",""0"",""4096"",""0""},"
63410,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,151,,"                {""WALLABY"",""1"",""1"",""0"",""4096"",""0""},"
63411,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,178,,"                {""ECHIDNA"",""1"",""1"",""2"",""4096"",""8192""},"
63412,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,238,,"        stmt.executeUpdate(""create table foo_int (a int)"");"
63413,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,239,,"        stmt.executeUpdate(""create table foo_char (a char(100))"");"
63414,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,240,,"        stmt.executeUpdate(""create table foo_varchar (a varchar(32000))"");"
63415,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,244,,"        stmt.executeUpdate(""create table foo_longvarchar (a long varchar)"");"
63416,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,245,,"        stmt.executeUpdate(""create table foo_longvarbinary "" +"
63417,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,246,,"                ""(a long varchar for bit data)"");"
63418,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,250,,"        stmt.executeUpdate(""create table foo_bit (a char(100) for bit data)"");"
63419,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,251,,"        stmt.executeUpdate(""create table foo_varbinary "" +"
63420,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,252,,"                ""(a varchar(1000) for bit data)"");"
63421,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,255,,"                {""FOO_BIT"",""4096""},"
63422,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,256,,"                {""FOO_CHAR"",""4096""},"
63423,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,257,,"                {""FOO_INT"",""4096""},"
63424,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,258,,"                {""FOO_LONGVARBINARY"",""32768""},"
63425,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,258,,"                {""FOO_LONGVARBINARY"",""32768""},"
63426,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,259,,"                {""FOO_LONGVARCHAR"",""32768""},"
63427,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,260,,"                {""FOO_VARBINARY"",""4096""},"
63428,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/SpaceTableTest.java,261,,"                {""FOO_VARCHAR"",""4096""},"
63429,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,71,,"        fileName[0] = ""extin/short.data""; // set up a short (fit in one page)"
63430,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,120,,"                println(""No truncation and hence no error"");"
63431,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,124,,"                        assertSQLState(""XJ001"", e); // was getting data longer"
63432,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,127,,"                        assertSQLState(""22001"", e); // was getting data longer"
63433,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,130,,"                    println(""expected exception for data > """
63434,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,131,,"                            + DB2_LONGVARCHAR_MAXWIDTH + "" in length"");"
63435,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,226,,"        insertLongString(10, ""ssssssssss"", false, ""foo1"");"
63436,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,309,,"        insertLongString(1, pad(""Broadway"", length), false, tableName);"
63437,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,310,,"        insertLongString(2, pad(""Franklin"", length), false, tableName);"
63438,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,311,,"        insertLongString(3, pad(""Webster"", length), false, tableName);"
63439,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,313,,"        sourceStmt.executeUpdate(""insert into "" + tableName + "" select a+100, """
63440,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,381,,"        PreparedStatement ps = prepareStatement(""update "" + tableName + "" set """
63441,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,431,,"            println(""Testing with "" + fileName[i] + "" length = """
63442,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,680,,"                    .getBytes(""US-ASCII""));"
63443,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,812,,"            String checkSQL = ""insert into "" + tableName + "" select * from """
63444,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,836,,"            assertEquals(""FAIL -- bad result string:"" + ""canon: "" + canon"
63445,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,837,,"                    + ""resultString: "" + resultString, 0, canon"
63446,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,1162,,"        String fileName2 = ""extin/char32675.data"";"
63447,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,1371,,"        println(""======================================"");"
63448,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,2123,,"                        .execute(""call SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY('derby.storage.pageSize', NULL)"");"
63449,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,2159,,"                String binaryType = length > 32700 ? ""BLOB(1G)"""
63450,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/StreamingColumnTest.java,2160,,"                        : ""long varchar for bit data"";"
63451,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,77,,"                + ""select """
63452,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,87,,"                + ""from """
63453,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,152,,"                "" select * from lock_table order by tabname, type """
63454,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,153,,"                + ""desc, mode, cnt, lockname"");"
63455,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,155,,"                {""APP"", ""UserTran"", ""TABLE"", ""1"", ""X"", ""HEAP_ONLY"", ""Tablelock"", ""GRANT"", ""ACTIVE""},"
63456,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,155,,"                {""APP"", ""UserTran"", ""TABLE"", ""1"", ""X"", ""HEAP_ONLY"", ""Tablelock"", ""GRANT"", ""ACTIVE""},"
63457,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,155,,"                {""APP"", ""UserTran"", ""TABLE"", ""1"", ""X"", ""HEAP_ONLY"", ""Tablelock"", ""GRANT"", ""ACTIVE""},"
63458,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,155,,"                {""APP"", ""UserTran"", ""TABLE"", ""1"", ""X"", ""HEAP_ONLY"", ""Tablelock"", ""GRANT"", ""ACTIVE""},"
63459,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,155,,"                {""APP"", ""UserTran"", ""TABLE"", ""1"", ""X"", ""HEAP_ONLY"", ""Tablelock"", ""GRANT"", ""ACTIVE""},"
63460,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,155,,"                {""APP"", ""UserTran"", ""TABLE"", ""1"", ""X"", ""HEAP_ONLY"", ""Tablelock"", ""GRANT"", ""ACTIVE""},"
63461,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,155,,"                {""APP"", ""UserTran"", ""TABLE"", ""1"", ""X"", ""HEAP_ONLY"", ""Tablelock"", ""GRANT"", ""ACTIVE""},"
63462,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,172,,"        dropTable(""heap_only"");"
63463,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,279,,"                {""APP"", ""UserTran"", ""TABLE"", ""1"", ""X"", ""INDEXED_HEAP"", ""Tablelock"", ""GRANT"", ""ACTIVE""},"
63464,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,297,,"        dropTable(""indexed_heap"");"
63465,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,498,,"        rs =  st.executeQuery(""values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS()"");"
63466,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,501,,"                {""Statement Name: \n"""
63467,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,502,,"                    + ""	"" + (getTestConfiguration().getJDBCClient().isEmbedded() ? ""null\n"" : ""SQL_CURLH000C3\n"")"
63468,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,503,,"                    + ""Statement Text: \n"""
63469,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,505,,"                    + ""Parse Time: 0\n"""
63470,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,506,,"                    + ""Bind Time: 0\n"""
63471,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,507,,"                    + ""Optimize Time: 0\n"""
63472,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,508,,"                    + ""Generate Time: 0\n"""
63473,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,509,,"                    + ""Compile Time: 0\n"""
63474,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,510,,"                    + ""Execute Time: 0\n"""
63475,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,511,,"                    + ""Begin Compilation Timestamp : null\n"""
63476,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,512,,"                    + ""End Compilation Timestamp : null\n"""
63477,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,513,,"                    + ""Begin Execution Timestamp : null\n"""
63478,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,514,,"                    + ""End Execution Timestamp : null\n"""
63479,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,515,,"                    + ""Statement Execution Plan Text: \n"""
63480,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,517,,"                    + ""Number of opens = 1\n"""
63481,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,519,,"                    + ""Rows filtered = 0\n"""
63482,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,520,,"                    + ""Fetch Size = 16\n"""
63483,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,521,,"                    + ""	constructor time (milliseconds) = 0\n"""
63484,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,522,,"                    + ""	open time (milliseconds) = 0\n"""
63485,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,523,,"                    + ""	next time (milliseconds) = 0\n"""
63486,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,526,,"                    + ""scan information:\n"""
63487,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,527,,"                    + ""	Bit set of columns fetched=All\n"""
63488,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,528,,"                    + ""	Number of columns fetched=1\n"""
63489,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,529,,"                    + ""	Number of pages visited=1\n"""
63490,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,532,,"                    + ""	Scan type=heap\n"""
63491,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,533,,"                    + ""	start position:\n"""
63492,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,534,,"                    + ""		null\n"""
63493,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,535,,"                    + ""	stop position:\n"""
63494,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,537,,"                    + ""	qualifiers:\n"""
63495,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,538,,"                    + ""		None\n"""
63496,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,539,,"                    + ""	optimizer estimated row count: 6.00\n"""
63497,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,540,,"                    + ""	optimizer estimated cost: 100.40"""
63498,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,566,,"                    + ""	"" + (getTestConfiguration().getJDBCClient().isEmbedded() ? ""null\n"" : ""SQL_CURLH000C2\n"")"
63499,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,582,,"                    + ""Rows seen = 0\n"""
63500,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,588,,"                    + ""	close time (milliseconds) = 0\n\n"""
63501,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,593,,"                    + ""	Number of rows qualified=0\n"""
63502,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/TableLockBasicTest.java,594,,"                    + ""	Number of rows visited=0\n"""
63503,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,213,,"        s.executeUpdate(""create table a(a int, b int)"");"
63504,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,214,,"        s.executeUpdate(""alter table a add column c varchar(1900)"");"
63505,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,291,,"        s.executeUpdate(""insert into a values (1, 10, "" +"
63506,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,293,,"        s.executeUpdate(""insert into a values (2, 20, "" +"
63507,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,295,,"        s.executeUpdate(""insert into a values (3, 30, "" +"
63508,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,297,,"        s.executeUpdate(""insert into a values (4, 40, "" +"
63509,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,299,,"        s.executeUpdate(""insert into a values (5, 50, "" +"
63510,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,301,,"        s.executeUpdate(""insert into a values (6, 60, "" +"
63511,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,303,,"        s.executeUpdate(""insert into a values (7, 70, "" +"
63512,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,332,,"                        ""    PADSTRING('one',1900), "" +"
63513,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,335,,"                        ""    PADSTRING('two',1900), "" +"
63514,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,338,,"                        ""    PADSTRING('three',1900), "" +"
63515,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,341,,"                        ""    PADSTRING('four',1900), "" +"
63516,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,344,,"                        ""    PADSTRING('five',1900), "" +"
63517,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,347,,"                        ""    PADSTRING('six',1900), "" +"
63518,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,350,,"                        ""    PADSTRING('seven',1900), "" +"
63519,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,465,,"            ""select a, b, c from a for update"");"
63520,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,490,,"        assertRow(rs, new String[] {""1"", ""10"", pad2(""one"", pad)});"
63521,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,503,,"                    {_app, _ut, _r, ""1"", _U, _A, ""(1,7)"", _g, _a}}"
63522,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,506,,"        assertRow(rs, new String[] {""2"", ""20"", pad2(""two"", pad)});"
63523,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,520,,"                    {_app, _ut, _r, ""1"", _U, _A, ""(1,8)"", _g, _a}}"
63524,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,529,,"        assertRow(rs, new String[] {""3"", ""30"", pad2(""three"", pad)});"
63525,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,545,,"                    {_app, _ut, _r, ""1"", _U, _A, ""(1,9)"", _g, _a}}"
63526,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,551,,"                      {_app, _ut, _r, ""1"", _U, _A, ""(2,6)"", _g, _a}}"
63527,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,567,,"        assertRow(rs, new String[] {""4"", ""40"", pad2(""four"", pad)});"
63528,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,580,,"                    {_app, _ut, _r, ""1"", _U, _A, ""(1,10)"", _g, _a},"
63529,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,590,,"                     {_app, _ut, _r, ""1"", _U, _A, ""(2,7)"", _g, _a}}"
63530,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,606,,"        assertRow(rs, new String[] {""5"", ""50"", pad2(""five"", pad)});"
63531,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,621,,"                    {_app, _ut, _r, ""1"", _U, _A, ""(1,11)"", _g, _a},"
63532,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,632,,"                     {_app, _ut, _r, ""1"", _U, _A, ""(3,6)"", _g, _a}}"
63533,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,647,,"        assertRow(rs, new String[] {""6"", ""60"", pad2(""six"", pad)});"
63534,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,663,,"                    {_app, _ut, _r, ""1"", _U, _A, ""(1,12)"", _g, _a},"
63535,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,675,,"                     {_app, _ut, _r, ""1"", _U, _A, ""(3,7)"", _g, _a}}"
63536,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,690,,"        assertRow(rs, new String[] {""7"", ""70"", pad2(""seven"", pad)});"
63537,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,707,,"                    {_app, _ut, _r, ""1"", _U, _A, ""(1,13)"", _g, _a},"
63538,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,720,,"                     {_app, _ut, _r, ""1"", _U, _A, ""(4,6)"", _g, _a}}"
63539,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,1249,,"        s.execute(""call wait_for_post_commit()"");"
63540,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,1256,,"                ""select * from a""),"
63541,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,1544,,"        rs.updateString(""C"", pad2(""-three"", pad));"
63542,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,1590,,"        rs.updateString(""C"", pad2(""-five"", pad));"
63543,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,1785,,"                {""-3"", ""-30"", pad2(""-three"", pad)},"
63544,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,1786,,"                {""-5"", ""-50"", pad2(""-five"", pad)},"
63545,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,2301,,"        rs.updateString(""C"", ""threethree"");"
63546,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,2421,,"                {""33"", ""3030"", ""threethree""}});"
63547,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,2424,,"        s.executeUpdate(""drop table a"");"
63548,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,3112,,"                {""1"", ""10"", pad2(""one"", pad), pad2(""index pad 1"", idxPad)},"
63549,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,3113,,"                {""2"", ""20"", pad2(""two"", pad), pad2(""index pad 2"", idxPad)},"
63550,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,3114,,"                {""3"", ""30"", pad2(""three"", pad), pad2(""index pad 3"", idxPad)},"
63551,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,3116,,"                {""5"", ""50"", pad2(""five"", pad), pad2(""index pad 5"", idxPad)},"
63552,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,3117,,"                {""6"", ""60"", pad2(""six"", pad), pad2(""index pad 6"", idxPad)},"
63553,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,3118,,"                {""7"", ""70"", pad2(""seven"", pad), pad2(""index pad 7"", idxPad)}},"
63554,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,3159,,"                 {_app, _ut, _r, ""1"", _U, _A, ""(1,3)"", _g, _a},"
63555,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,3325,,"                 {_app, _ut, _r, ""1"", _U, _A, ""(5,6)"", _g, _a}}"
63556,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,3378,,"                 {_app, _ut, _r, ""1"", _U, _A, ""(6,6)"", _g, _a}}"
63557,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,3435,,"                 {_app, _ut, _r, ""1"", _U, _A, ""(7,6)"", _g, _a}}"
63558,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,3588,,"            ""select a, b, c from a where a >= 1 and a < 20 for update of b, c"");"
63559,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,4950,,"                {_app, _ut, _t, ""2"", _IX, _A, ""Tablelock "", _g, _a},"
63560,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/UpdateLocksTest.java,4951,,"                {_app, _ut, _r, ""1  "", _U, _A, ""(1,8)"", _g, _a},"
63561,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/backupRestore1.java,118,,"			System.out.println(""FAIL -- unexpected exception:"" + e.toString());"
63562,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/backupRestore1.java,124,,"			TestUtil.getConnection(""wombat"", ""shutdown=true"");"
63563,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/backupRestore1.java,124,,"			TestUtil.getConnection(""wombat"", ""shutdown=true"");"
63564,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/backupRestore1.java,126,,"				if (se.getSQLState() != null && se.getSQLState().equals(""08006""))"
63565,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/store/backupRestore1.java,127,,"					System.out.println(""database shutdown properly"");"
63566,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/storetests/Derby94Test.java,104,,"                    { ""TABLE"", ""2"", ""IX"", ""T1"", ""Tablelock"", ""GRANT"" },"
63567,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/storetests/Derby94Test.java,104,,"                    { ""TABLE"", ""2"", ""IX"", ""T1"", ""Tablelock"", ""GRANT"" },"
63568,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/storetests/Derby94Test.java,104,,"                    { ""TABLE"", ""2"", ""IX"", ""T1"", ""Tablelock"", ""GRANT"" },"
63569,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/storetests/Derby94Test.java,105,,"                    { ""ROW"",   ""1"", ""U"",  ""T1"", ""(1,8)"",     ""GRANT"" },"
63570,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/storetests/st_reclaim_longcol.java,95,,"        dropTable(""LONGCOL"");"
63571,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/storetests/st_reclaim_longcol.java,159,,"        assertTrue(""Space table was empty"", rs.next());"
63572,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/storetests/st_reclaim_longcol.java,161,,"        int allocated = rs.getInt(""NUMALLOCATEDPAGES"");"
63573,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/storetests/st_reclaim_longcol.java,162,,"        int free = rs.getInt(""NUMFREEPAGES"");"
63574,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ConnectWrongSubprotocolTest.java,89,,"        		new ByteArrayInputStream(ijScript.getBytes(""US-ASCII""));"
63575,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportBinaryDataTest.java,121,,"        doExportTable(""APP"", ""BIN_TAB"", fileName, null, null , null);"
63576,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportBinaryDataTest.java,121,,"        doExportTable(""APP"", ""BIN_TAB"", fileName, null, null , null);"
63577,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportBinaryDataTest.java,122,,"	    doImportTable(""APP"", ""BIN_TAB_IMP"", fileName, null, null, null, 0);"
63578,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportBinaryDataTest.java,145,,"        doExportTable(""APP"", ""TABLE1"", dataFileName, null, null, ""UTF-16"");"
63579,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportBinaryDataTest.java,145,,"        doExportTable(""APP"", ""TABLE1"", dataFileName, null, null, ""UTF-16"");"
63580,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportBinaryDataTest.java,150,,"        assertStatementError(""23505"", stmt,"
63581,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportBinaryDataTest.java,270,,"            assertSQLState(""XIE0J"", e);"
63582,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportBinaryDataTest.java,316,,"        s.executeUpdate(""insert into hex_tab "" + "
63583,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportBinaryDataTest.java,446,,"        s.executeUpdate(""insert into bin_tab values "" + "
63584,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java,124,,"        doExportTable(""APP"", ""BOOKS"", fileName, null, null , null);"
63585,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java,124,,"        doExportTable(""APP"", ""BOOKS"", fileName, null, null , null);"
63586,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java,125,,"	    doImportTable(""APP"", ""BOOKS_IMP"", fileName, null, null, null, 0);"
63587,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java,126,,"        verifyData("" * "");"
63588,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java,144,,"        doImportData(null, ""BOOKS_IMP"", ""PIC, CONTENT, NAME, ID"", "
63589,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java,167,,"        doExportQuery(""select id, name, content, pic from BOOKS"",  "
63590,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java,169,,"        doImportData(null, ""BOOKS_IMP"", ""ID,PIC"", ""1 , 4"","
63591,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java,169,,"        doImportData(null, ""BOOKS_IMP"", ""ID,PIC"", ""1 , 4"","
63592,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java,172,,"        doImportData(null, ""BOOKS_IMP"", ""ID, PIC, NAME"", ""1, 4, 2"","
63593,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java,175,,"        doImportData(null, ""BOOKS_IMP"", ""ID, CONTENT, NAME"", ""1, 3, 2"","
63594,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java,201,,"        s.executeUpdate(""insert into hex_tab "" + "
63595,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java,306,,"                                    ""\t"", ""|"", ""UTF-16"", "
63596,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java,396,,"            assertSQLState(""XIE0J"", e);"
63597,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java,480,,"	doExportTableLobsToExtFile(""APP"", ""DERBY_2925_LOB"", fileName,"
63598,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java,548,,"        s.executeUpdate(""insert into books values "" + "
63599,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,43,,"    private static final String INVALID_DELIMITER = ""XIE0J"";"
63600,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,98,,"        SupportFilesSetup.deleteFile(""extinout/emp.dat"");        "
63601,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,101,,"            ""call SYSCS_UTIL.SYSCS_EXPORT_TABLE (null, 'EX_EMP' """
63602,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,174,,"        expColNames = new String [] {""ID"", ""NAME"", ""SKILLS"", ""SALARY""};"
63603,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,174,,"        expColNames = new String [] {""ID"", ""NAME"", ""SKILLS"", ""SALARY""};"
63604,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,174,,"        expColNames = new String [] {""ID"", ""NAME"", ""SKILLS"", ""SALARY""};"
63605,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,179,,"            {""99"", ""smith"", ""tennis\""p,l,ayer\"""", ""190.55""},"
63606,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,179,,"            {""99"", ""smith"", ""tennis\""p,l,ayer\"""", ""190.55""},"
63607,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,179,,"            {""99"", ""smith"", ""tennis\""p,l,ayer\"""", ""190.55""},"
63608,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,180,,"            {""100"", ""smith"", ""tennis\""player\"""", ""190.55""},"
63609,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,180,,"            {""100"", ""smith"", ""tennis\""player\"""", ""190.55""},"
63610,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,181,,"            {""101"", ""smith"", ""tennis\""player"", ""190.55""},"
63611,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,181,,"            {""101"", ""smith"", ""tennis\""player"", ""190.55""},"
63612,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,182,,"            {""102"", ""smith"", ""\""tennis\""player"", ""190.55""},"
63613,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,182,,"            {""102"", ""smith"", ""\""tennis\""player"", ""190.55""},"
63614,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,183,,"            {""103"", ""smith"", ""\""tennis\""player\"""", ""190.55""},"
63615,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,183,,"            {""103"", ""smith"", ""\""tennis\""player\"""", ""190.55""},"
63616,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,184,,"            {""104"", ""smith"", ""\""tennis\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\"""""
63617,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,184,,"            {""104"", ""smith"", ""\""tennis\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\"""""
63618,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,185,,"                + ""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""player\"""", null},"
63619,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,186,,"            {""105"", ""smith"", ""\""\"""", ""190.55""},"
63620,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,186,,"            {""105"", ""smith"", ""\""\"""", ""190.55""},"
63621,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,187,,"            {""106"", ""smith"", ""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\"""", ""190.55""},"
63622,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,187,,"            {""106"", ""smith"", ""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\""\"""", ""190.55""},"
63623,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,188,,"            {""107"", ""smith\"""", null, ""190.55""},"
63624,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,188,,"            {""107"", ""smith\"""", null, ""190.55""},"
63625,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,189,,"            {""108"", null, null, null}"
63626,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,221,,"            ""select count(*) from imp_emp, ex_emp where """
63627,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,222,,"            + ""ex_emp.id = imp_emp.id and """
63628,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,223,,"            + ""(ex_emp.skills=imp_emp.skills or (ex_emp.skills is """
63629,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,224,,"            + ""NULL and imp_emp.skills is NULL))"");"
63630,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,252,,"            "" call SYSCS_UTIL.SYSCS_IMPORT_TABLE (null, """
63631,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,584,,"            {""2004-04-03"", ""15:18:31"", ""2004-09-09 11:14:11.0""},"
63632,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,628,,"            "" select * from t1"");"
63633,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,644,,"            "" insert into t1 values(3) "");"
63634,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,647,,"            "" insert into t1 values(4) "");"
63635,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,654,,"        assertStatementError(""38000"", cSt);"
63636,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,658,,"            "" select * from t1 "");"
63637,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,684,,"        assertStatementError(""XIE0M"", cSt);"
63638,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1052,,"            {""chartype string"", ""9223372036854775807"", ""1993-10-29"", ""12345.54321"", ""1.0E308"", ""2147483647"", ""long varchar testing"", ""10000.0"", ""32767"", ""09:39:43"", ""2004-09-09 11:14:11.0"", ""varchar testing""},"
63639,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1052,,"            {""chartype string"", ""9223372036854775807"", ""1993-10-29"", ""12345.54321"", ""1.0E308"", ""2147483647"", ""long varchar testing"", ""10000.0"", ""32767"", ""09:39:43"", ""2004-09-09 11:14:11.0"", ""varchar testing""},"
63640,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1052,,"            {""chartype string"", ""9223372036854775807"", ""1993-10-29"", ""12345.54321"", ""1.0E308"", ""2147483647"", ""long varchar testing"", ""10000.0"", ""32767"", ""09:39:43"", ""2004-09-09 11:14:11.0"", ""varchar testing""},"
63641,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1052,,"            {""chartype string"", ""9223372036854775807"", ""1993-10-29"", ""12345.54321"", ""1.0E308"", ""2147483647"", ""long varchar testing"", ""10000.0"", ""32767"", ""09:39:43"", ""2004-09-09 11:14:11.0"", ""varchar testing""},"
63642,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1052,,"            {""chartype string"", ""9223372036854775807"", ""1993-10-29"", ""12345.54321"", ""1.0E308"", ""2147483647"", ""long varchar testing"", ""10000.0"", ""32767"", ""09:39:43"", ""2004-09-09 11:14:11.0"", ""varchar testing""},"
63643,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1052,,"            {""chartype string"", ""9223372036854775807"", ""1993-10-29"", ""12345.54321"", ""1.0E308"", ""2147483647"", ""long varchar testing"", ""10000.0"", ""32767"", ""09:39:43"", ""2004-09-09 11:14:11.0"", ""varchar testing""},"
63644,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1052,,"            {""chartype string"", ""9223372036854775807"", ""1993-10-29"", ""12345.54321"", ""1.0E308"", ""2147483647"", ""long varchar testing"", ""10000.0"", ""32767"", ""09:39:43"", ""2004-09-09 11:14:11.0"", ""varchar testing""},"
63645,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1052,,"            {""chartype string"", ""9223372036854775807"", ""1993-10-29"", ""12345.54321"", ""1.0E308"", ""2147483647"", ""long varchar testing"", ""10000.0"", ""32767"", ""09:39:43"", ""2004-09-09 11:14:11.0"", ""varchar testing""},"
63646,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1052,,"            {""chartype string"", ""9223372036854775807"", ""1993-10-29"", ""12345.54321"", ""1.0E308"", ""2147483647"", ""long varchar testing"", ""10000.0"", ""32767"", ""09:39:43"", ""2004-09-09 11:14:11.0"", ""varchar testing""},"
63647,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1052,,"            {""chartype string"", ""9223372036854775807"", ""1993-10-29"", ""12345.54321"", ""1.0E308"", ""2147483647"", ""long varchar testing"", ""10000.0"", ""32767"", ""09:39:43"", ""2004-09-09 11:14:11.0"", ""varchar testing""},"
63648,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1289,,"        assertStatementError(""XIE0R"", cSt);"
63649,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1447,,"            "" CALL """
63650,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1554,,"        SupportFilesSetup.deleteFile(""extinout/order.dat"");"
63651,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1647,,"            + ""'extinout/order.dat'   , null , null , null, 1) "");"
63652,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1648,,"        assertStatementError(""XIE08"", cSt);"
63653,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1667,,"        "" select * from \""Group\"".\""Order\"""");"
63654,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1669,,"        expColNames = new String [] {""select"", ""delete"", ""ITEMNAME""};"
63655,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1669,,"        expColNames = new String [] {""select"", ""delete"", ""ITEMNAME""};"
63656,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1669,,"        expColNames = new String [] {""select"", ""delete"", ""ITEMNAME""};"
63657,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1674,,"            {""1"", ""2"", ""memory""},"
63658,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1675,,"            {""3"", ""4"", ""disk""},"
63659,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1676,,"            {""5"", ""6"", ""mouse""},"
63660,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1918,,"	st.executeUpdate(""delete from pet"");"
63661,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1922,,"            "" call SYSCS_UTIL.SYSCS_IMPORT_DATA_BULK(null, """
63662,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1924,,"            + ""  , null , null , null, 0, 3) "");"
63663,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1928,,"                	st.executeQuery(""select * from pet""),"
63664,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1931,,"			      {""Rover"",""Dog"",""4""},"
63665,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1931,,"			      {""Rover"",""Dog"",""4""},"
63666,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1932,,"                              { ""Spot"", ""Cat"", ""2""},"
63667,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1932,,"                              { ""Spot"", ""Cat"", ""2""},"
63668,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1933,,"                              { ""Squawky"", ""Parrot"", ""37""},"
63669,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1933,,"                              { ""Squawky"", ""Parrot"", ""37""},"
63670,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1979,,"	assertStatementError(""42XAU"", cSt);"
63671,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,1987,,"	assertStatementError(""42XAV"", cSt);"
63672,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,2281,,"            "" call SYSCS_UTIL.SYSCS_IMPORT_DATA(null, """
63673,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,2283,,"            + ""  , null , null , null, 0) "");"
63674,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,2320,,"            "" call SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE(null, """
63675,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,2499,,"            ""call SYSCS_UTIL.SYSCS_EXPORT_TABLE ('IEP', 'T1' , """
63676,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,2512,,"        SupportFilesSetup.deleteFile(""extinout/t1.dat"");"
63677,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,2564,,"            "" call SYSCS_UTIL.SYSCS_EXPORT_TABLE ('IEP', 'T1' , """
63678,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,2869,,"            {""1"", ""3.5"", ""8"", ""test strings""},"
63679,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,2869,,"            {""1"", ""3.5"", ""8"", ""test strings""},"
63680,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,2884,,"            ""call SYSCS_UTIL.SYSCS_IMPORT_DATA('IEP', 'T3' , """
63681,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java,2886,,"            + ""null, null, 0) "");"
63682,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/ImportExportTest.java,132,,"        doImportAndExport(null, ""T1"", null, null, ""8859_1"");"
63683,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/SysinfoAPITest.java,70,,"        assertEquals(-1, sysinfo.getMajorVersion(""foo""));"
63684,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/SysinfoAPITest.java,93,,"        assertEquals(""Apache Derby"", sysinfo.getProductName());"
63685,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/SysinfoAPITest.java,99,,"        assertEquals(""<no name found>"", sysinfo.getProductName(""foo""));"
63686,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/Test_6661.java,117,,"             ""(\n"" +"
63687,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/Test_6661.java,118,,"             ""    keyCol  int not null,\n"" +"
63688,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/Test_6661.java,120,,"             "")\n"""
63689,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/dblook_test.java,148,,"		jdbcProtocol = ""jdbc:derby:"";"
63690,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/dblook_test.java,190,,"		dumpFileToSysOut(""dblook.log"");"
63691,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/dblook_test.java,195,,"		createDBFromDDL(newDBName, dbName + "".sql"");"
63692,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/dblook_test.java,333,,"			""-td"", """""
63693,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/dblook_test.java,357,,"		printAsHeader(""\nDumping DDL for all objects "" +"
63694,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/dblook_test.java,594,,"		System.out.println(""\n************\n"" +"
63695,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/tools/dblook_test.java,596,,"			""************\n"");"
63696,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,394,,"        			(modeDb2SqlOptional?"""":""MODE DB2SQL "") +"
63697,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,512,,"            s.execute(""update ATDC_TAB1 set c11=11"");"
63698,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,520,,"                assertStatementError(""42802"", s, "" update ATDC_TAB1 set c11=2"");            "
63699,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,520,,"                assertStatementError(""42802"", s, "" update ATDC_TAB1 set c11=2"");            "
63700,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,673,,"            	rs = s.executeQuery(""select * from TAB1_5044_5120"");"
63701,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,687,,"        	rs = s.executeQuery(""select * from BKUP1_5044_5120"");"
63702,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,795,,"        	rs = s.executeQuery(""select * from ATDC_13_TAB1_BACKUP"");"
63703,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,798,,"        	rs = s.executeQuery(""select * from ATDC_13_TAB2"");"
63704,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,804,,"            s.executeUpdate(""update ATDC_13_TAB1 set c12=999"");"
63705,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,812,,"            s.execute(""insert into ATDC_13_TAB1_BACKUP values (1,11)"");"
63706,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,813,,"            s.execute(""insert into ATDC_13_TAB2 values (1,11)"");"
63707,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,992,,"            		""name varchar(20) not null, "" +"
63708,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,993,,"            		""description int not null, id int)"");"
63709,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,996,,"            		""referencing new as nr for each ROW ""+"
63710,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,1000,,"            s.execute(""insert into UPGRADE_tab2(name,description) ""+"
63711,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,1001,,"            		""values ( 'Foo1 Name', 0 )"");"
63712,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,1003,,"        	s.execute(""update UPGRADE_tab2 "" +"
63713,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,1004,,"        			""set name = 'Another name' , description = 1"");"
63714,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,1005,,"        	rs = s.executeQuery(""select * from UPGRADE_tab1"");"
63715,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,1013,,"                   		new String[][]{{""1"",""Another name""}});        		"
63716,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,1017,,"        	s.execute(""delete from UPGRADE_tab1"");"
63717,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,1018,,"        	s.execute(""delete from UPGRADE_tab2"");"
63718,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,1068,,"            s.execute(""insert into HARD_UPGRADE_tab2(name,description) ""+"
63719,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,1071,,"        	s.execute(""update HARD_UPGRADE_tab2 "" +"
63720,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,1073,,"        	rs = s.executeQuery(""select * from HARD_UPGRADE_tab1"");"
63721,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,1085,,"        	s.execute(""delete from HARD_UPGRADE_tab1"");"
63722,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java,1086,,"        	s.execute(""delete from HARD_UPGRADE_tab2"");"
63723,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_10.java,415,,"            assertSQLState(""22003"", e);"
63724,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_12.java,114,,"                        ""update t1_6414 set e='ccccc', a=-a, c=default"");"
63725,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_12.java,129,,"                        ""update t2_6414 set e='ccccc', a=-a, c=default, d='ccc'"");"
63726,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_12.java,153,,"                                { ""-1"", ""3"", null, ""ccccc"" },"
63727,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_12.java,164,,"                                { ""-1"", ""2"", ""ccc"", ""ccccc"" },"
63728,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_13.java,136,,"                          { ""1"", ""100"" },"
63729,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_13.java,137,,"                          { ""2"", ""200"" },"
63730,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_13.java,192,,"                        { ""3"", ""300"" },"
63731,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_2.java,104,,"               (modeDb2SqlOptional?"""":""mode db2sql "") +"
63732,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_2.java,369,,"            JDBCDataSource.setBeanProperty(ds, ""connectionAttributes"","
63733,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_2.java,376,,"                assertSQLState(""XJ040"", e);"
63734,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_3.java,406,,"                insert_stmt.setString(1, ""create""); "
63735,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_3.java,423,,"                insert_stmt.setString(1, ""soft""); "
63736,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_3.java,453,,"                checkNewHeap(""testNewHeap1"", ""create"");"
63737,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_4.java,251,,"        s.executeUpdate(""insert into "" + tableName + "" values ("" + val +"")"");"
63738,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_4.java,264,,"                assertSQLState(""duplicate record"", ""23505"", e);"
63739,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_4.java,314,,"        s.executeUpdate(""create table  "" + prefix + ""_indextest1"" +"
63740,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_4.java,359,,"                testIndexes(s, ""ph_create_indextest1"", 1, false, false);"
63741,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_4.java,360,,"                testIndexes(s, ""ph_create_indextest2"", 1, true, false);"
63742,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_4.java,361,,"                testIndexes(s, ""ph_create_indextest3"", 1, false, true);"
63743,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_4.java,362,,"                testIndexes(s, ""ph_create_indextest4"", 1, true, true);"
63744,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_4.java,363,,"                testIndexes(s, ""ph_create_indextest5"", 1, false, false);"
63745,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_5.java,49,,"    private static  final   String  BAD_SYNTAX = ""42X01"";"
63746,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_5.java,95,,"                    ""call SYSCS_UTIL.SYSCS_UPDATE_STATISTICS"" +"
63747,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_5.java,233,,"        String createRoleText = ""create role foo"";"
63748,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_7.java,239,,"            assertStatementError(""X0Y25"", s,"
63749,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_7.java,241,,"            		"" drop column c11 restrict"");"
63750,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_7.java,244,,"                    "" select triggername from sys.systriggers where "" +"
63751,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_7.java,253,,"            		"" drop column c11 CASCADE"");"
63752,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_7.java,254,,"            checkWarning(s, ""01502"");"
63753,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_7.java,359,,"        			""TAB1_POSTSOFT_UPGRADE_RESTRICT_TR1"", ""RESTRICT"");"
63754,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_7.java,586,,"                    (modeDb2SqlOptional?"""":""MODE DB2SQL "") +"
63755,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_7.java,590,,"            s.executeUpdate(""UPDATE DERBY1482_table1 SET c12=-1 WHERE c11=1"");"
63756,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_7.java,592,,"            rs = s.executeQuery(""SELECT COUNT(*) FROM DERBY1482_table2"");"
63757,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_7.java,620,,"            rs = s.executeQuery(""SELECT COUNT(*) FROM DERBY1482_table3"");"
63758,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_9.java,125,,"            vetProcs(s, ""call syscs_util.syscs_drop_statistics( 'APP', 'DROPSTATST1', null )"", false);"
63759,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_9.java,282,,"            setDatabaseProperty( s, ""derby.authentication.provider"", ""NATIVE::LOCAL"" );"
63760,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_9.java,493,,"            installJar(""dcl_emc1.jar"", ""EMC.MAIL_APP"");"
63761,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_9.java,493,,"            installJar(""dcl_emc1.jar"", ""EMC.MAIL_APP"");"
63762,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_9.java,928,,"            stats.assertTableStats(""TEST_TAB_2"",1);"
63763,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_9.java,952,,"            ""CALL SYSCS_UTIL.SYSCS_DROP_STATISTICS('APP','TEST_TAB_2', null)"");"
63764,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/helpers/DisposableIndexStatistics.java,106,,"        stmt.executeUpdate(""alter table "" + pktbl + "" add constraint "" +"
63765,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/helpers/DisposableIndexStatistics.java,106,,"        stmt.executeUpdate(""alter table "" + pktbl + "" add constraint "" +"
63766,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/upgradeTests/helpers/DisposableIndexStatistics.java,118,,"                ""FKS_MAIN foreign key (fk_self) references "" + tbl + ""(id)"");"
63767,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/util/BigDecimalHandler.java,110,,"				new Exception(""Failed: Invalid Big Decimal representation"").printStackTrace();"
63768,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/util/PrivilegedFileOpsForTests.java,63,,"            throw new IllegalArgumentException(""file cannot be <null>"");"
63769,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/util/ProcedureTest.java,42,,"		Connection conn = DriverManager.getConnection(""jdbc:default:connection"");"
63770,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/util/ProcedureTest.java,293,,"		PreparedStatement ps2 = conn.prepareStatement(""select * from MRS.FIVERS  where i > ?"");"
63771,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/util/ProcedureTest.java,653,,"		String s = p1 == null ? ""NULL"" : p1.toString();"
63772,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/util/SQLToJUnit.java,451,,"                junit.write("" = "");"
63773,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/util/SampleVTI.java,129,,"        throw new UnsupportedOperationException(""Not supported yet."");"
63774,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/util/TestUtil.java,277,,"				driverName =  ""org.apache.derby.jdbc.EmbeddedDriver"";"
63775,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/util/Triggers.java,48,,"		Connection conn = DriverManager.getConnection(""jdbc:default:connection"");"
63776,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/BaseJDBCTestCase.java,1196,,"            errorMsg += ""' but no error was thrown."";            "
63777,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/BaseTestCase.java,952,,"        return getSystemProperty(""java.version"").startsWith(""1.5"");"
63778,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/BigDecimalHandler.java,110,,"				new Exception(""Failed: Invalid Big Decimal representation"").printStackTrace();"
63779,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/ConnectionPoolDataSourceConnector.java,91,,"                config.getJDBCClient().isEmbedded() ? ""XJ004"" : ""08004"";"
63780,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/ConnectionPoolDataSourceConnector.java,104,,"        JDBCDataSource.setBeanProperty(ds, ""databaseName"", databaseName);"
63781,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/DataSourceConnector.java,62,,"                config.getJDBCClient().isEmbedded() ? ""XJ004"" : ""08004"";"
63782,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/DataSourceConnector.java,74,,"        JDBCDataSource.setBeanProperty(ds, ""databaseName"", databaseName);"
63783,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/DriverManagerConnector.java,243,,"            throw new SQLException(""Failed to load JDBC driver '"" + driverClass"
63784,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/DriverManagerConnector.java,244,,"                    + ""': "" + cnfe.getMessage());"
63785,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/JDBC.java,352,,"		dropUsingDMD(s, rs, schema, ""TABLE_NAME"", ""VIEW"");"
63786,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/JDBC.java,837,,"        Assert.assertEquals(""Unexpected column count:"","
63787,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/JDBCDataSource.java,59,,"        setBeanProperty(ds, ""databaseName"", dbName);"
63788,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/JDBCDataSource.java,272,,"        setBeanProperty(ds, ""shutdownDatabase"", ""shutdown"");"
63789,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/NetworkServerTestSetup.java,618,,"            String oldValue = BaseTestCase.getSystemProperty(""derby.drda.sslMode"");"
63790,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/SecurityManagerSetup.java,234,,"            BaseTestCase.setSystemProperty(""java.security.policy"", """");"
63791,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/TestConfiguration.java,594,,"            return new BaseTestSuite(""empty: no network server support"");"
63792,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/XADataSourceConnector.java,62,,"                config.getJDBCClient().isEmbedded() ? ""XJ004"" : ""08004"";"
63793,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/junit/XADataSourceConnector.java,75,,"        JDBCDataSource.setBeanProperty(ds, ""databaseName"", databaseName);"
63794,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/perf/basic/jdbc/BlobAccessTest.java,261,,"                ""select dBlob, length from largeBlobs where id = 4"");"
63795,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/perf/basic/jdbc/ClobAccessTest.java,282,,"                ""select dClob, length from largeClobs where id = 4"");"
63796,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/perf/clients/BankAccountFiller.java,149,,"        s.executeUpdate(""CREATE TABLE "" + ACCOUNT_TABLE +"
63797,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/perf/clients/BankAccountFiller.java,156,,"                        ""EXTRA_DATA CHAR("" + ACCOUNT_EXTRA + "") NOT NULL)"");"
63798,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/perf/clients/BankAccountFiller.java,156,,"                        ""EXTRA_DATA CHAR("" + ACCOUNT_EXTRA + "") NOT NULL)"");"
63799,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/system/mailjdbc/utils/DbTasks.java,77,,"		        setSystemProperty(""database"", ""jdbc:derby:mailsdb"");"
63800,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/system/mailjdbc/utils/DbTasks.java,176,,"				MailJdbc.logAct.logMsg(LogFile.INFO + thread_name + "" : """
63801,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/system/mailjdbc/utils/ThreadUtils.java,50,,"			MailJdbc.logAct.logMsg(LogFile.INFO + ""Started: "" + t.getName());"
63802,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/system/nstest/NsTest.java,83,,"        ""    -D"" + BACKUP_FLAG + ""=false    Turns off backup, restore, and re-encryption.\n"" +"
63803,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/system/oe/direct/Standard.java,234,,"                ""FROM CUSTOMER WHERE C_W_ID = ? AND C_D_ID = ? AND C_ID = ?"");"
63804,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/system/sttest/utils/Datatypes.java,187,,"					+ "" SQLSTATE: "" + m);"
63805,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/harness/BasicUnitTestManager.java,187,,"				emitAMessage(""Test '"" + thisTestName + ""' passed"");"
63806,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/MissingPermissionsTest.java,113,,"        props.setProperty(""derby.user.APP"", ""APPPW"");"
63807,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/MissingPermissionsTest.java,116,,"        t = TestConfiguration.changeUserDecorator(t, ""APP"", ""APPPW"");"
63808,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/PathUtilTest.java,45,,"        assertEquals(""seg0"","
63809,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/PathUtilTest.java,46,,"                PathUtil.getParent(join(""seg0"",""c1.dat"")));"
63810,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/ReaderToUTF8StreamTest.java,198,,"            fail(""reset-call was expected to throw IOException"");"
63811,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/StatementKeyFactoryTest.java,75,,"        StatementKey stdKey = StatementKeyFactory.newPrepared(""values 1"", ""APP"", "
63812,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/StatementKeyFactoryTest.java,78,,"                ""select * from sys.systables"", ""APP"", "
63813,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/StatementKeyFactoryTest.java,103,,"                ""values 2"", ""APP"", holdability);"
63814,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/SystemPrivilegesPermissionTest.java,154,,"        ""server"", ""engine"", ""jmx"""
63815,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/SystemPrivilegesPermissionTest.java,154,,"        ""server"", ""engine"", ""jmx"""
63816,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/SystemPrivilegesPermissionTest.java,154,,"        ""server"", ""engine"", ""jmx"""
63817,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/SystemPrivilegesPermissionTest.java,159,,"        ""shutdown"", ""control"", ""monitor"""
63818,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/SystemPrivilegesPermissionTest.java,159,,"        ""shutdown"", ""control"", ""monitor"""
63819,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/SystemPrivilegesPermissionTest.java,159,,"        ""shutdown"", ""control"", ""monitor"""
63820,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/SystemPrivilegesPermissionTest.java,240,,"            fail(""expected NullPointerException"");"
63821,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/SystemPrivilegesPermissionTest.java,248,,"            fail(""expected IllegalArgumentException"");"
63822,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/SystemPrivilegesPermissionTest.java,453,,"                        new SystemPermission(""server"", ""shutdown,monitor"")));"
63823,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/SystemPrivilegesPermissionTest.java,588,,"            new DatabasePermission(""directory:dir"", null);"
63824,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/SystemPrivilegesPermissionTest.java,741,,"        assertEquals(""create"", perm.getActions());"
63825,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/SystemPrivilegesPermissionTest.java,984,,"        setField(SystemPrincipal.class, ""name"", p, null);"
63826,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/UTF8UtilTest.java,227,,"            fail(""Reading invalid UTF-8 should fail"");"
63827,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/VirtualFileTest.java,56,,"        VirtualFile vFile = new VirtualFile(""seg0"", store);"
63828,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/junit/VirtualFileTest.java,252,,"        VirtualFile vFile = new VirtualFile(""mydir"", store);"
63829,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/lang/T_Like.java,94,,"			PASS(""TEST [""+desc+""] == result[""+result+""] "");"
63830,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/lang/T_Like.java,149,,"		expect(""'hello' like 'hello ' escape null"", Like.like(caHello, caHello.length, ""hello "".toCharArray(), ""hello "".toCharArray().length, caNull, 0, null), Boolean.FALSE);"
63831,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/lang/T_Like.java,151,,"		expect(""'hello' like 'hellox' escape null"", Like.like(caHello, caHello.length, ""hellox"".toCharArray(), ""hellox"".toCharArray().length, caNull, 0, null), Boolean.FALSE);"
63832,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/lang/T_Like.java,153,,"		expect(""'xhellox' like 'hello' escape null"", Like.like(""xhellox"".toCharArray(), ""xhellox"".toCharArray().length, caHello, caHello.length, caNull, 0, null), Boolean.FALSE);"
63833,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/services/T_CacheService.java,74,,"				throw T_Fail.testFailMsg(""unable to create cache manager"");"
63834,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/services/T_Diagnosticable.java,107,,"                ""DiagnosticUtil.toDiagString() failed, got: ("" + str + "
63835,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/services/T_Diagnosticable.java,108,,"                ""), expected: ("" + expected_str + "")."");"
63836,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/services/T_LockFactory.java,141,,"			throw T_Fail.testFailMsg(""invalid unlock count, expected 1, got "" + count);"
63837,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_AccessFactory.java,209,,"                    ""heap"", // create a heap conglomerate"
63838,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_AccessFactory.java,626,,"					+ "" should have been """
63839,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_AccessFactory.java,628,,"					+ "", was """
63840,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_AccessFactory.java,1046,,"        prop.put(Property.PAGE_SIZE_PARAMETER,           ""8192"");"
63841,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_AccessFactory.java,1390,,"                ""(alterTable) Bad column value after alter."");"
63842,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_AccessFactory.java,2236,,"		tc.setProperty(""T_Key_Frog"", new SQLLongint(479), false);"
63843,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_AccessFactory.java,2237,,"		tc.setProperty(""T_Key_Tiger"", ""Roar, ROAR"", false);"
63844,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_AccessFactory.java,3591,,"                ""(holdCursor) some problem with get/set row count."");"
63845,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_AccessFactory.java,3665,,"                ""(holdCursor) 1st row is not 0."");"
63846,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_AccessFactory.java,4084,,"                ""(readUncommitted) delete should ret false for reclaimed page."");"
63847,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_FileSystemData.java,431,,"										 + "" got "" + p.getPageNumber());"
63848,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_QualifierTest.java,264,,"                              expect_key + "")"" + ""but got ("" + key + "").""));"
63849,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_QualifierTest.java,292,,"                 expect_numrows + "" rows, but got "" + numrows + ""rows.""));"
63850,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_QualifierTest.java,292,,"                 expect_numrows + "" rows, but got "" + numrows + ""rows.""));"
63851,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_QualifierTest.java,436,,"                        fail(""(t_scanFetchNext) wrong key, expected ("" + "
63852,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,401,,"		REPORT(""Thread "" + threadNumber + "" entering temp tests "");"
63853,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,833,,"			throw T_Fail.testFailMsg(""Dropped Container should not open"");"
63854,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,1140,,"			throw T_Fail.testFailMsg(""Could get container's last page"");"
63855,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,1143,,"			throw T_Fail.testFailMsg(""Initial page must be "" + ContainerHandle.FIRST_PAGE_NUMBER + "", is "" + lastPage.getPageNumber());"
63856,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,1143,,"			throw T_Fail.testFailMsg(""Initial page must be "" + ContainerHandle.FIRST_PAGE_NUMBER + "", is "" + lastPage.getPageNumber());"
63857,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,1147,,"			throw T_Fail.testFailMsg(""No room for record on page"");"
63858,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,1350,,"			throw T_Fail.testFailMsg(""Couldn't get container's last page"");"
63859,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,2678,,"								   (rcount-1) + "" got "" + page.recordCount());"
63860,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,2743,,"				T_Fail.testFailMsg(""page expect to have 5 records, recordCount() = "" +"
63861,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,2758,,"				T_Fail.testFailMsg(""page expect to have 2 records, recordCount() = "" +"
63862,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,2928,,"		for (i = 0, row = new T_RawStoreRow(""row at slot "" + i);"
63863,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,3604,,"			throw T_Fail.testFailMsg(""insert of first long row failed."");"
63864,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,3757,,"			throw T_Fail.testFailMsg(""an extra page has appeared in the container"");"
63865,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,3915,,"			throw T_Fail.testFailMsg(""insert of long row failed."");"
63866,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,3921,,"			REPORT(""about to check fetch..."");"
63867,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,4167,,"				throw T_Fail.testFailMsg(""expect the 3rd row to not fit on page"");"
63868,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,4262,,"				throw T_Fail.testFailMsg(""fail to reuse row pieces expect next page="" + "
63869,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RawStoreFactory.java,4263,,"					nextPageNumber + "" but got "" + checkNextPageNumber );"
63870,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RecoverBadLog.java,253,,"				REPORT(""_______________________________________________________"");"
63871,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RecoverBadLog.java,468,,"			String string1 = ""01234567890123456789""; // 20 char string"
63872,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RecoverBadLog.java,484,,"				throw T_Fail.testFailMsg(""cannot fit any column into the page"");"
63873,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RecoverBadLog.java,491,,"			String string2 = ""abcdefghijklmnopqrst""; // 20 char string"
63874,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RecoverBadLog.java,528,,"			REPORT(""badlog test1: cid = "" + cid + "" numcol "" + numcol);"
63875,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RecoverBadLog.java,575,,"					throw T_Fail.testFailMsg(""Column "" + i + "" value incorrect, got :"" + column.toString());"
63876,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RecoverBadLog.java,575,,"					throw T_Fail.testFailMsg(""Column "" + i + "" value incorrect, got :"" + column.toString());"
63877,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RecoverBadLog.java,582,,"											 "" expect Null, got : "" + column.toString());"
63878,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_RecoverFullLog.java,186,,"				REPORT(""_______________________________________________________"");"
63879,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_Recovery.java,545,,"			REPORT(""setup S002: containerId "" + cid + "" recordCount "" + page.recordCount());"
63880,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_Recovery.java,869,,"				   page.recordCount() + "" numPurges "" + numPurged);"
63881,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_Recovery.java,1126,,"				throw T_Fail.testFailMsg(""got a deallcated page "" + p1);"
63882,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_Recovery.java,1853,,"				   "" container2 "" + cid2 + "" container3 "" + cid3 +"
63883,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_Recovery.java,1853,,"				   "" container2 "" + cid2 + "" container3 "" + cid3 +"
63884,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_Recovery.java,1854,,"				   "" page "" + pageId);"
63885,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_Recovery.java,2080,,"				   "" container3 "" + cid20 + "" container4 "" + cid21);"
63886,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_Util.java,107,,"			throw T_Fail.testFailMsg(""page number expected to be "" + pageNumber + "", is "" +"
63887,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_Util.java,161,,"			throw T_Fail.testFailMsg(""Record does not exist"");"
63888,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_Util.java,174,,"			throw T_Fail.testFailMsg(""Failed to read record"");"
63889,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_Util.java,185,,"			throw T_Fail.testFailMsg(""Record's value incorrect, expected :"" + data + "": - got :"" + readRow.toString());"
63890,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_Util.java,185,,"			throw T_Fail.testFailMsg(""Record's value incorrect, expected :"" + data + "": - got :"" + readRow.toString());"
63891,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_Util.java,574,,"							 + slot + "" field "" + fieldId);"
63892,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_Util.java,907,,"			throw T_Fail.testFailMsg(""add container"");"
63893,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_XA.java,218,,"                ""heap"",       // create a heap conglomerate"
63894,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_XA.java,300,,"                ""prepare of idle xact did not return XA_RDONLY."");"
63895,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_XA.java,326,,"                ""A XA_RDONLY prepare-committed xact should not be findable."");"
63896,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_XA.java,357,,"                ""prepare of update xact did not return XA_OK."");"
63897,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_XA.java,823,,"                ""recover incorrectly returned prepared xacts."");"
63898,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,279,,"                ""heap"",   // create a heap conglomerate"
63899,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,322,,"                ""BTREE"",    	    // create a btree secondary"
63900,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,549,,"			throw T_Fail.testFailMsg(""openConglomerate returned wrong type"");"
63901,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,573,,"			throw T_Fail.testFailMsg(""insert failed"");"
63902,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,999,,"        REPORT(""scan (x = 5)"");"
63903,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,1018,,"        REPORT(""scan (x > 5)"");"
63904,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,1036,,"        REPORT(""scan (x >= 5)"");"
63905,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,1055,,"        REPORT(""scan (x <= 5)"");"
63906,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,1073,,"        REPORT(""scan (x < 5)"");"
63907,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,1094,,"        REPORT(""scan (x >= 5 and x <= 7)"");"
63908,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,1113,,"        REPORT(""scan (x = 5 and y > 2)"");"
63909,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,1135,,"        REPORT(""scan (x = 5 and y >= 2)"");"
63910,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,1157,,"        REPORT(""scan (x = 5 and y < 5)"");"
63911,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,1179,,"        REPORT(""scan (x = 2)"");"
63912,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,1207,,"            throw T_Fail.testFailMsg(""found no max."");"
63913,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,1216,,"                throw T_Fail.testFailMsg(""wrong max found."");"
63914,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,1320,,"            string_1500char += ""mikem"";"
63915,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,1445,,"                throw T_Fail.testFailMsg(""delete could not find key"");"
63916,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,1452,,"                    throw T_Fail.testFailMsg(""delete found more than one key"");"
63917,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,3590,,"            throw T_Fail.testFailMsg(""found no min."");"
63918,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,4071,,"        REPORT(""last row in the last leaf, table locked."");"
63919,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/unitTests/store/T_b2i.java,4089,,"                throw T_Fail.testFailMsg(""wrong last row in the last leaf found."");"
63920,./TargetProjects/derby/java/org.apache.derby.tools/org/apache/derby/impl/tools/dblook/DB_GrantRevoke.java,106,,"				Logs.reportString(""----------------------------------------------"");"
63921,./TargetProjects/derby/java/org.apache.derby.tools/org/apache/derby/impl/tools/dblook/DB_GrantRevoke.java,108,,"				Logs.reportString(""----------------------------------------------\n"");"
63922,./TargetProjects/derby/java/org.apache.derby.tools/org/apache/derby/impl/tools/dblook/DB_GrantRevoke.java,183,,"		grantStmt.append("" ON "" + fullName + "" TO "" + authName);"
63923,./TargetProjects/derby/java/org.apache.derby.tools/org/apache/derby/impl/tools/dblook/Logs.java,191,,"		logFile.println(""-- **--> DEBUG: "" + msg);"
63924,./TargetProjects/derby/java/org.apache.derby.tools/org/apache/derby/impl/tools/ij/mtTestCase.java,166,,"               String dbUrl = p.getProperty(""ij.database"");"
63925,./TargetProjects/derby/java/org.apache.derby.tools/org/apache/derby/impl/tools/ij/xaHelper.java,136,,"			  xaHelper.setDataSourceProperty(currentXADataSource, ""databaseName"", databaseName);"
63926,./TargetProjects/derby/java/org.apache.derby.tools/org/apache/derby/impl/tools/planexporter/AccessDatabase.java,181,,"                ""from SYSXPLAIN_RESULTSETS "" +"
63927,./TargetProjects/derby/java/org.apache.derby.tools/org/apache/derby/impl/tools/planexporter/AccessDatabase.java,182,,"                ""where STMT_ID = ?"", ID);"
63928,./TargetProjects/derby/java/org.apache.derby.tools/org/apache/derby/impl/tools/planexporter/AccessDatabase.java,215,,"                ""from (SYSXPLAIN_SCAN_PROPS "" +"
63929,./TargetProjects/derby/java/org.apache.derby.tools/org/apache/derby/impl/tools/planexporter/AccessDatabase.java,216,,"                ""NATURAL RIGHT OUTER JOIN SYSXPLAIN_RESULTSETS) "" +"
63930,./TargetProjects/derby/java/org.apache.derby.tools/org/apache/derby/impl/tools/sysinfo/Main.java,618,,"                          new StringBuffer(crLf() + Main.getTextMessage(""SIF08.E"") + crLf());"
63931,./TargetProjects/derby/java/org.apache.derby.tools/org/apache/derby/tools/JDBCDisplayUtil.java,359,,"        checkNotNull(rsmd, ""ResultSetMetaData"");"
63932,./TargetProjects/derby/java/org.apache.derby.tools/org/apache/derby/tools/JDBCDisplayUtil.java,690,,"				if (o == null) { s = ""NULL""; }"
63933,./TargetProjects/derby/java/org.apache.derby.tools/org/apache/derby/tools/PlanExporter.java,106,,"                				generateXML(access,""temp.xml"",stmt,time,null);"
63934,./TargetProjects/derby/java/pptesting/org/apache/derby/client/am/LogicalStatementEntityTest.java,70,,"            assertSQLState(""XJ012"", sqle);"
63935,./TargetProjects/derby/java/pptesting/org/apache/derby/impl/jdbc/InternalClobTest.java,131,,"            fail(""Exception should have been raised, but was not"");"
63936,./TargetProjects/derby/java/stubs/felix/org/osgi/framework/BundlePermission.java,217,,"									""invalid permission: "" + actions);"
63937,./TargetProjects/derby/java/stubs/felix/org/osgi/framework/PackagePermission.java,190,,"					throw new IllegalArgumentException(""invalid permission: """
63938,./TargetProjects/derby/java/stubs/felix/org/osgi/framework/ServicePermission.java,184,,"					throw new IllegalArgumentException(""invalid permission: """
63939,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/cache/CacheConcurrentTest.java,72,,"        final String key = ""test-"" + count.incrementAndGet();"
63940,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/cache/CacheLightConcurrentTest.java,73,,"        final String key = ""test-"" + count.incrementAndGet();"
63941,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/memory/AbstractMemoryManagerServiceTest.java,157,,"        Assert.assertNotNull( ""Cannot store "" + size1 + "" bytes"", pointer1 );"
63942,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/memory/AbstractMemoryManagerServiceTest.java,157,,"        Assert.assertNotNull( ""Cannot store "" + size1 + "" bytes"", pointer1 );"
63943,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/memory/BaseTest.java,155,,"        logger.info( ""total used="" + Ram.inMb( mem.used() ) );"
63944,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/memory/Concurrent2Test.java,73,,"        final String key = ""test-"" + count.incrementAndGet();"
63945,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/memory/Concurrent3Test.java,73,,"        final String key = ""test-"" + count.incrementAndGet();"
63946,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/memory/ConcurrentTest.java,82,,"        final String key = ""test-"" + count.incrementAndGet();"
63947,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/memory/MallocTest.java,91,,"        logger.info( ""payload size="" + size );"
63948,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/memory/MallocTest.java,92,,"        logger.info( ""entries="" + howMany );"
63949,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/memory/MallocWithUnsafeTest.java,80,,"        logger.info( ""payload size="" + size );"
63950,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/memory/MallocWithUnsafeTest.java,81,,"        logger.info( ""entries="" + howMany );"
63951,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/memory/buffer/IntLongCompressionTestCase.java,141,,"            assertEquals( ""Compressed bytesize for value "" + value + "" is too large"", 2, delta );"
63952,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/memory/buffer/IntLongCompressionTestCase.java,141,,"            assertEquals( ""Compressed bytesize for value "" + value + "" is too large"", 2, delta );"
63953,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/preliminary/MicroBenchmark.java,86,,"        logger.info( ""payload.length="" + payload.length );"
63954,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/preliminary/PreliminarBenchmark.java,83,,"        logger.info( ""payload is "" + payload.length + "" bytes"" );"
63955,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/preliminary/PreliminarBenchmark.java,83,,"        logger.info( ""payload is "" + payload.length + "" bytes"" );"
63956,./TargetProjects/directmemory/directmemory-cache/src/test/java/org/apache/directmemory/serialization/SerializerTest.java,79,,"        testSerializer( ""java-serialization"", new StandardSerializer(), Ram.Kb( 1 ), 20000 );"
63957,./TargetProjects/directmemory/integrations/solr/src/test/java/org/apache/directmemory/solr/SolrOffHeapIntegrationTest.java,47,,"        assertQ(req(""text:something""), ""//*[@numFound='1']"");"
63958,./TargetProjects/directmemory/itests/osgi/src/test/java/org/apache/directmemory/tests/osgi/DirectMemoryOsgiTestSupport.java,168,,"            mavenBundle().groupId( ""org.apache.servicemix.bundles"" ).artifactId("
63959,./TargetProjects/directmemory/serializers/protostuff/src/test/java/org/apache/directmemory/serialization/protostuff/ProtostuffTestCase.java,61,,"        testSerializer( ""protostuff-old"", new ProtoStuffSerializerV1(), Ram.Kb( 1 ), 20000 );"
63960,./TargetProjects/directmemory/serializers/protostuff/src/test/java/org/apache/directmemory/serialization/protostuff/ProtostuffTestCase.java,71,,"        testSerializer( ""protostuff-new"", new ProtoStuffWithLinkedBufferSerializer(), Ram.Kb( 1 ), 20000 );"
63961,./TargetProjects/directmemory/server/directmemory-server-commons/src/test/java/org/apache/directmemory/server/commons/DirectMemoryWriterTest.java,46,,"            new DirectMemoryRequest().setKey( ""101"" ).setUpdate( true ).setExpiresIn( 123 ).setCacheContent("
63962,./TargetProjects/directmemory/server/directmemory-server-commons/src/test/java/org/apache/directmemory/server/commons/DirectMemoryWriterTest.java,47,,"                ""foo bar"".getBytes() );"
63963,./TargetProjects/directmemory/server/directmemory-server/src/test/java/org/apache/directmemory/server/services/AbstractServletWithClientTest.java,130,,"        Wine bordeaux = new Wine( ""Bordeaux"", ""very great wine"" );"
63964,./TargetProjects/directmemory/server/directmemory-server/src/test/java/org/apache/directmemory/server/services/AbstractServletWithClientTest.java,130,,"        Wine bordeaux = new Wine( ""Bordeaux"", ""very great wine"" );"
63965,./TargetProjects/directmemory/server/directmemory-server/src/test/java/org/apache/directmemory/server/services/AbstractServletWithClientTest.java,131,,"        assertTrue( client.put( new DirectMemoryRequest<Wine>( ""bordeaux"", bordeaux ) ).isStored() );"
63966,./TargetProjects/directmemory/server/directmemory-server/src/test/java/org/apache/directmemory/server/services/DirectMemoryServletTest.java,75,,"        request.addHeader( ""Accept"", MediaType.APPLICATION_JSON );"
63967,./TargetProjects/directmemory/server/directmemory-server/src/test/java/org/apache/directmemory/server/services/DirectMemoryServletTest.java,94,,"        request.setServletPath( ""cache"" );"
63968,./TargetProjects/directmemory/server/directmemory-server/src/test/java/org/apache/directmemory/server/services/DirectMemoryServletTest.java,126,,"        putRequest.setPathInfo( ""/bordeaux"" );"
63969,./TargetProjects/directmemory/server/directmemory-server/src/test/java/org/apache/directmemory/server/services/ServletWithClientTextPlainTypeTest.java,47,,"        client.put( new DirectMemoryRequest<String>( ""bordeaux"", ""very great wine"" ).setSerializer("
63970,./TargetProjects/directmemory/server/directmemory-server/src/test/java/org/apache/directmemory/server/services/ServletWithClientTextPlainTypeTest.java,47,,"        client.put( new DirectMemoryRequest<String>( ""bordeaux"", ""very great wine"" ).setSerializer("
63971,./TargetProjects/directmemory-lightning/lightning-core/src/main/java/org/apache/directmemory/lightning/internal/beans/ReflectionPropertyAccessorFactory.java,76,,"            @SuppressWarnings( ""unchecked"" )"
63972,./TargetProjects/directmemory-lightning/lightning-core/src/main/java/org/apache/directmemory/lightning/internal/beans/ReflectionPropertyAccessorFactory.java,85,,"                    throw new IllegalPropertyAccessException( ""Exception while reading field "" + getField().getName(),"
63973,./TargetProjects/directmemory-lightning/lightning-core/src/main/java/org/apache/directmemory/lightning/internal/generator/BytecodeMarshallerGenerator.java,145,,"                cw.visitField( ACC_FINAL & ACC_PRIVATE, toFinalFieldName( ""descriptor"", propertyDescriptor ),"
63974,./TargetProjects/directmemory-lightning/lightning-core/src/main/java/org/apache/directmemory/lightning/internal/generator/BytecodeMarshallerGenerator.java,154,,"                    cw.visitField( ACC_FINAL & ACC_PRIVATE, toFinalFieldName( ""component"", propertyDescriptor ),"
63975,./TargetProjects/directmemory-lightning/lightning-core/src/main/java/org/apache/directmemory/lightning/internal/generator/BytecodeMarshallerGenerator.java,161,,"                cw.visitField( ACC_FINAL & ACC_PRIVATE, toFinalFieldName( ""marshaller"", propertyDescriptor ),"
63976,./TargetProjects/directmemory-lightning/lightning-core/src/main/java/org/apache/directmemory/lightning/internal/generator/BytecodeMarshallerGenerator.java,167,,"                cw.visitField( ACC_FINAL & ACC_PRIVATE, toFinalFieldName( ""accessor"", propertyDescriptor ),"
63977,./TargetProjects/directmemory-lightning/lightning-core/src/main/java/org/apache/directmemory/lightning/internal/generator/BytecodeMarshallerGenerator.java,870,,"            mv.visitMethodInsn( INVOKESTATIC, ""java/lang/Boolean"", ""valueOf"", BOOLEAN_VALUE_OF_SIGNATURE );"
63978,./TargetProjects/directmemory-lightning/lightning-core/src/main/java/org/apache/directmemory/lightning/internal/util/BeanUtil.java,149,,"        if ( method.getName().startsWith( ""set"" ) )"
63979,./TargetProjects/directmemory-lightning/lightning-core/src/main/java/org/apache/directmemory/lightning/internal/util/BeanUtil.java,197,,"        if ( method.getName().startsWith( ""get"" ) || method.getName().startsWith( ""is"" ) )"
63980,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/CustomBenchmark.java,102,,"        System.out.println( ""Lightning Serialization Avg: "" + String.format( ""%5.2f"", avg ) + "" ns, runs: """
63981,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/CustomBenchmark.java,102,,"        System.out.println( ""Lightning Serialization Avg: "" + String.format( ""%5.2f"", avg ) + "" ns, runs: """
63982,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/CustomBenchmark.java,103,,"            + BENCHMARK_ROUNDS + "", size: "" + size + "" bytes"" );"
63983,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/CustomBenchmark.java,103,,"            + BENCHMARK_ROUNDS + "", size: "" + size + "" bytes"" );"
63984,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/PropertyFinderTestCase.java,51,,"                serialize( Standard.class ).attributes( attribute( ""value1"" ) );"
63985,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/PropertyFinderTestCase.java,67,,"        standard.setValue1( ""Foo"" );"
63986,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/PropertyFinderTestCase.java,222,,"        inherted.setValue3( ""Bar"" );"
63987,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/WhatShouldItLookLike.java,102,,"            serialize( Foo.class ).attributes().exclude( ""value"" );"
63988,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/WhatShouldItLookLike.java,103,,"            serialize( Foo.class ).attributes().exclude( ""value1"" ).exclude( ""value2"" );"
63989,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/WhatShouldItLookLike.java,103,,"            serialize( Foo.class ).attributes().exclude( ""value1"" ).exclude( ""value2"" );"
63990,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/internal/beans/ReflectionPropertyAccessorTestCase.java,41,,"        Field field = BooleanArrayTest.class.getDeclaredField( ""array"" );"
63991,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/internal/beans/UnsafePropertyAccessorTestCase.java,41,,"        Field field = BooleanArrayTest.class.getDeclaredField( ""array"" );"
63992,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/internal/marshaller/ListMarshallerTestCase.java,61,,"        list.add( ""Foo"" );"
63993,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/internal/marshaller/MapMarshallerTestCase.java,63,,"        map.put( ""Foo"", 20 );"
63994,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/internal/marshaller/SetMarshallerTestCase.java,61,,"        set.add( ""Foo"" );"
63995,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/internal/util/StringUtilTestCase.java,35,,"        assertEquals( ""thatIsImpossible"", result );"
63996,./TargetProjects/directmemory-lightning/lightning-core/src/test/java/org/apache/directmemory/lightning/internal/util/StringUtilTestCase.java,60,,"        assertEquals( ""ThatIsImpossible"", result );"
63997,./TargetProjects/directmemory-lightning/lightning-maven-plugin/src/main/java/org/apache/directmemory/lightning/maven/AbstractCompilerMojo.java,630,,"                getLog().info( ""-------------------------------------------------------------"" );"
63998,./TargetProjects/directmemory-lightning/lightning-maven-plugin/src/main/java/org/apache/directmemory/lightning/maven/SourceMarshallerGenerator.java,121,,"                sb.append( ""Boolean("" ).append( instanceName ).append( "", ((Boolean) "" ).append( propertyDescriptor.getPropertyName() ).append( ""Value"" ).append( "").booleanValue())"" );"
63999,./TargetProjects/directmemory-lightning/lightning-maven-plugin/src/main/java/org/apache/directmemory/lightning/maven/SourceMarshallerGenerator.java,165,,"                sb.append( ""Boolean.valueOf("" ).append( propertyDescriptor.getPropertyName() ).append( ""PropertyAccessor"" ).append( "".readBoolean("" );"
