140000,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,705,,"        assertEquals(""Ordering doesn't match"", asList(""/test/jcr:content"", ""/test/d2"", ""/test/d3"", ""/test/d1""), result);"
140001,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,705,,"        assertEquals(""Ordering doesn't match"", asList(""/test/jcr:content"", ""/test/d2"", ""/test/d3"", ""/test/d1""), result);"
140002,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,705,,"        assertEquals(""Ordering doesn't match"", asList(""/test/jcr:content"", ""/test/d2"", ""/test/d3"", ""/test/d1""), result);"
140003,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,705,,"        assertEquals(""Ordering doesn't match"", asList(""/test/jcr:content"", ""/test/d2"", ""/test/d3"", ""/test/d1""), result);"
140004,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,806,,"            a.setProperty(""foo"", ""bar"" + idx);"
140005,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,983,,"                ""lucene:upper(/oak:index/upper)"", asList(""/a"", ""/c"", ""/b"", ""/e"", ""/d""));"
140006,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregation2CommonTest.java,77,,"                .newRuleWithName(NT_FILE, newArrayList(""jcr:content""))"
140007,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregation2CommonTest.java,83,,"                        newArrayList(""metadata"", ""renditions"", ""renditions/original"", ""comments"","
140008,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregation2CommonTest.java,127,,"        Tree content = root.getTree(""/"").addChild(""content"");"
140009,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregation2CommonTest.java,167,,"        node.setProperty(""format"", ""image/jpeg"", STRING);"
140010,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregation2CommonTest.java,167,,"        node.setProperty(""format"", ""image/jpeg"", STRING);"
140011,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregation2CommonTest.java,181,,"        assertQuery(statement, ""xpath"", expected);"
140012,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,53,,"                .newRuleWithName(NT_FOLDER, newArrayList(""myFile"", ""subfolder/subsubfolder/file""));"
140013,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,75,,"        resource.setProperty(JCR_PRIMARYTYPE, ""nt:resource"", Type.NAME);"
140014,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,76,,"        resource.setProperty(""jcr:lastModified"", Calendar.getInstance());"
140015,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,77,,"        resource.setProperty(""jcr:encoding"", ""UTF-8"");"
140016,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,77,,"        resource.setProperty(""jcr:encoding"", ""UTF-8"");"
140017,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,78,,"        resource.setProperty(""jcr:mimeType"", ""text/plain"");"
140018,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,78,,"        resource.setProperty(""jcr:mimeType"", ""text/plain"");"
140019,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,80,,"                ""the quick brown fox jumps over the lazy dog.""));"
140020,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,82,,"        assertQuery(sqlDog, ImmutableList.of(""/myFile""));"
140021,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,103,,"        Tree foo = unstrContent.addChild(""foo"");"
140022,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,148,,"        resource.setProperty(""jcr:title"", ""title"");"
140023,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,148,,"        resource.setProperty(""jcr:title"", ""title"");"
140024,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,149,,"        resource.setProperty(""jcr:description"", ""description"");"
140025,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,149,,"        resource.setProperty(""jcr:description"", ""description"");"
140026,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,154,,"        assertQuery(matchContentSimple, ""xpath"", ImmutableList.of(""/myFile""));"
140027,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,172,,"        Tree folder = root.getTree(""/"").addChild(""myFolder"");"
140028,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,190,,"        assertQuery(matchContentSimple, ""xpath"", ImmutableList.of(""/myFolder""));"
140029,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexAggregationCommonTest.java,229,,"        assertQuery(matchContentSimple, ""xpath"", ImmutableList.of(""/myFolder/myFile""));"
140030,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexDescendantSpellcheckCommonTest.java,92,,"        tree1.addNode(""test2"", NT_OAK_UNSTRUCTURED);"
140031,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexDescendantSpellcheckCommonTest.java,94,,"        tree2.addNode(""test3"", NT_OAK_UNSTRUCTURED);"
140032,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexDescendantSpellcheckCommonTest.java,104,,"        content3.addNode(""test5"", NT_OAK_UNSTRUCTURED);"
140033,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexDescendantSpellcheckCommonTest.java,106,,"        subChild.addNode(""test6"", NT_OAK_UNSTRUCTURED);"
140034,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexDescendantSpellcheckCommonTest.java,167,,"                createSpellcheckQuery(NT_OAK_UNSTRUCTURED, ""taste"", null),"
140035,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexDescendantSuggestionCommonTest.java,93,,"        tree1.addNode(""test2"", NT_OAK_UNSTRUCTURED);"
140036,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexDescendantSuggestionCommonTest.java,95,,"        tree2.addNode(""test3"", NT_OAK_UNSTRUCTURED);"
140037,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexDescendantSuggestionCommonTest.java,105,,"        content3.addNode(""test5"", NT_OAK_UNSTRUCTURED);"
140038,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexDescendantSuggestionCommonTest.java,107,,"        subChild.addNode(""test6"", NT_OAK_UNSTRUCTURED);"
140039,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexExclusionQueryCommonTest.java,60,,"        one.setProperty(""jcr:title"", ""abc"");"
140040,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexExclusionQueryCommonTest.java,60,,"        one.setProperty(""jcr:title"", ""abc"");"
140041,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexImproperUsageCommonTest.java,89,,"        Tree idx = createIndex(""test1"", of(""propa"", ""propb""));"
140042,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexImproperUsageCommonTest.java,89,,"        Tree idx = createIndex(""test1"", of(""propa"", ""propb""));"
140043,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexImproperUsageCommonTest.java,101,,"            assertThat(explain(""select [jcr:path] from [nt:base] where [propa] = 10 and isDescendantNode('/test/a')""), containsString(indexOptions.getIndexType() + "":test1""));"
140044,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexQueryCommonTest.java,97,,"        Tree test = root.getTree(""/"").addChild(""test"");"
140045,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexQueryCommonTest.java,100,,"        a.setProperty(""name"", ""hello"");"
140046,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexQueryCommonTest.java,107,,"            Iterator<String> result = executeQuery(query, ""JCR-SQL2"").iterator();"
140047,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexQueryCommonTest.java,140,,"            assertEquals(""/test/a"", result.next());"
140048,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexQueryCommonTest.java,141,,"            assertEquals(""/test/b"", result.next());"
140049,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexQueryCommonTest.java,149,,"        test.addChild(""a"").setProperty(""name"", asList(""Hello"", ""World""), STRINGS);"
140050,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexQueryCommonTest.java,149,,"        test.addChild(""a"").setProperty(""name"", asList(""Hello"", ""World""), STRINGS);"
140051,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexQueryCommonTest.java,204,,"                assertQuery(""/jcr:root//*[jcr:contains(., '"" + h + ""')]"", ""xpath"", asList(""/test/a"", ""/test/b""))"
140052,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexQueryCommonTest.java,307,,"        test.addChild(""a"").setProperty(""title"", ""foo"");"
140053,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexQueryCommonTest.java,308,,"        test.addChild(""b"").setProperty(""title"", ""bar"");"
140054,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexQueryCommonTest.java,324,,"        test.addChild(""a"").setProperty(""text"", ""Hello World"");"
140055,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexQueryCommonTest.java,399,,"        assertEventually(() -> assertQuery(""/jcr:root//*[jcr:contains(@"" + mulValuedProp + "", 'foo')]"", ""xpath"", singletonList(""/test/"" + child)));"
140056,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexQueryCommonTest.java,399,,"        assertEventually(() -> assertQuery(""/jcr:root//*[jcr:contains(@"" + mulValuedProp + "", 'foo')]"", ""xpath"", singletonList(""/test/"" + child)));"
140057,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexSuggestionCommonTest.java,137,,"            indexedNode = root.addNode(""indexedNode2"", queryNodeType);"
140058,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexSuggestionCommonTest.java,156,,"                    assertTrue(""There should be some suggestion"", getAllResults(queryManager, suggQuery).size() > 0);"
140059,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexSuggestionCommonTest.java,199,,"        final String nodeType = ""nt:unstructured"";"
140060,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexSuggestionCommonTest.java,203,,"        root.addNode(""indexedNode"", nodeType);"
140061,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexSuggestionCommonTest.java,222,,"        final String indexPropName = ""description"";"
140062,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexSuggestionCommonTest.java,223,,"        final String indexPropValue = ""this is just a sample text which should get some response in suggestions"";"
140063,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/PropertyIndexCommonTest.java,46,,"        indexOptions.setIndex(root, ""test1"", indexOptions.createIndex(indexOptions.createIndexDefinitionBuilder(), false, ""propa""));"
140064,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/PropertyIndexCommonTest.java,46,,"        indexOptions.setIndex(root, ""test1"", indexOptions.createIndex(indexOptions.createIndexDefinitionBuilder(), false, ""propa""));"
140065,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/PropertyIndexCommonTest.java,48,,"        Tree test = root.getTree(""/"").addChild(""test"");"
140066,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/PropertyIndexCommonTest.java,50,,"            test.addChild(""a"" + i).setProperty(""propa"", ""foo"" + i);"
140067,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/PropertyIndexCommonTest.java,59,,"            assertThat(explain(propaQuery), containsString(indexOptions.getIndexType() + "":test1""));"
140068,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/PropertyIndexCommonTest.java,80,,"        indexOptions.setIndex(root, ""test1"", indexOptions.createIndex(indexOptions.createIndexDefinitionBuilder(), false, ""propa"", ""propb""));"
140069,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/PropertyIndexCommonTest.java,103,,"            assertQuery(propaQuery, Arrays.asList(""/test/a"", ""/test/b""));"
140070,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/PropertyIndexCommonTest.java,103,,"            assertQuery(propaQuery, Arrays.asList(""/test/a"", ""/test/b""));"
140071,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/PropertyIndexCommonTest.java,105,,"            assertQuery(""select [jcr:path] from [nt:base] where [propc] = 'foo'"", singletonList(""/test/d""));"
140072,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/PropertyIndexCommonTest.java,181,,"        Tree prop = TestUtil.enablePropertyIndex(props, ""date"", false);"
140073,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/SecureFacetCommonTest.java,79,,"        indexRule.property(""cons"").propertyIndex();"
140074,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/SecureFacetCommonTest.java,80,,"        indexRule.property(""foo"").propertyIndex().getBuilderTree().setProperty(FACET_PROP, true, Type.BOOLEAN);"
140075,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/SecureFacetCommonTest.java,158,,"        Node facetConfig = getOrCreateByPath(indexNode.getPath() + ""/"" + FACETS, ""nt:unstructured"", adminSession);"
140076,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/SecureFacetCommonTest.java,175,,"        assertEventually(() -> assertEquals(""Unexpected number of facets"", actualAclLabelCount.size(), getFacets().size()));"
140077,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/SecureFacetCommonTest.java,182,,"                assertTrue(""Facet count for label: "" + facetLabel + "" is outside of 10% margin of error. "" +"
140078,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/SecureFacetCommonTest.java,183,,"                                ""Expected: "" + facet.getValue() + ""; Got: "" + facetCount + ""; Ratio: "" + ratio,"
140079,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/SecureFacetCommonTest.java,183,,"                                ""Expected: "" + facet.getValue() + ""; Got: "" + facetCount + ""; Ratio: "" + ratio,"
140080,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/SecureFacetCommonTest.java,183,,"                                ""Expected: "" + facet.getValue() + ""; Got: "" + facetCount + ""; Ratio: "" + ratio,"
140081,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/SpellcheckCommonTest.java,60,,"        indexRule.property(""foo"").propertyIndex();"
140082,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/SpellcheckCommonTest.java,72,,"        Node par = allow(getOrCreateByPath(""/parent"", ""oak:Unstructured"", adminSession));"
140083,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/SpellcheckCommonTest.java,72,,"        Node par = allow(getOrCreateByPath(""/parent"", ""oak:Unstructured"", adminSession));"
140084,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/SpellcheckCommonTest.java,73,,"        Node n1 = par.addNode(""node1"");"
140085,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/SpellcheckCommonTest.java,81,,"                assertTrue(getResult(q.execute(), ""rep:spellcheck()"").isEmpty());"
140086,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/StrictPathRestrictionEnableCommonTest.java,63,,"        Tree idx = createIndex(""test1"", of(""propa"", ""propb""));"
140087,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/StrictPathRestrictionEnableCommonTest.java,74,,"            assertFalse(explain(""select [jcr:path] from [nt:base] where [propa] = 10"").contains(indexOptions.getIndexType() + "":test1""));"
140088,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/AggregateTest.java,75,,"        Aggregate ag = new Aggregate(""nt:base"", of(ni(""*"")));"
140089,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/AggregateTest.java,126,,"        Aggregate ag = new Aggregate(""nt:base"", of(ni(""nt:resource"",""*"", false)));"
140090,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/AggregateTest.java,138,,"        Aggregate ag = new Aggregate(""nt:base"", of(ni(""mix:title"",""*"", false)));"
140091,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/AggregateTest.java,211,,"        Aggregate agFile = new Aggregate(""nt:file"", of(ni(""*""), ni(""*/*"")));"
140092,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/AggregateTest.java,273,,"        assertTrue(ag.hasRelativeNodeInclude(""foo""));"
140093,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/AggregateTest.java,289,,"        Aggregate agFolder = new Aggregate(""nt:folder"", of(ni(""nt:file"", ""*"", true)));"
140094,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/AggregateTest.java,291,,"        Aggregate agFile = new Aggregate(""nt:file"", of(ni(null, ""jcr:content"", true)));"
140095,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/AggregateTest.java,297,,"        createFile(nb, ""b"", ""hello world"");"
140096,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/AggregateTest.java,302,,"        assertThat(col.getNodePaths(), hasItems(""b"", ""c"", ""b/jcr:content"", ""c/jcr:content""));"
140097,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/AggregateTest.java,384,,"        IndexDefinition defn = new IndexDefinition(root, builder.getNodeState(), ""/foo"");"
140098,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/ExtractedTextCacheTest.java,59,,"        Blob b = new IdBlob(""hello"", ""a"");"
140099,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/ExtractedTextCacheTest.java,60,,"        String text = cache.get(""/a"", ""foo"", b, false);"
140100,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/ExtractedTextCacheTest.java,63,,"        cache.put(b, new ExtractedText(ExtractionResult.SUCCESS, ""test hello""));"
140101,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/ExtractedTextCacheTest.java,126,,"            .thenReturn(new ExtractedText(ExtractionResult.SUCCESS, ""bar""));"
140102,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionFacetConfigTest.java,62,,"        builder.setProperty(PROP_SECURE_FACETS, ""insecure"");"
140103,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionFacetConfigTest.java,185,,"        IndexDefinition idxDefn = new IndexDefinition(root, root, ""/foo"");"
140104,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,76,,"        IndexDefinition idxDefn = new IndexDefinition(root, builder.getNodeState(), ""/foo"");"
140105,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,85,,"        assertTrue(""By default everything is indexed"", rule.isIndexed(""foo""));"
140106,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,96,,"        builder.setProperty(createProperty(INCLUDE_PROPERTY_NAMES, of(""foo"" , ""bar""), STRINGS));"
140107,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,140,,"        rules.child(""nt:folder"").setProperty(FulltextIndexConstants.FIELD_BOOST, 2.0);"
140108,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,141,,"        TestUtil.child(rules, ""nt:folder/properties/prop1"")"
140109,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,147,,"        assertNull(defn.getApplicableIndexingRule(asState(newNode(""nt:base""))));"
140110,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,153,,"        assertTrue(rule1.isIndexed(""prop1""));"
140111,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,154,,"        assertFalse(rule1.isIndexed(""prop2""));"
140112,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,165,,"        rules.child(""nt:hierarchyNode"").setProperty(FulltextIndexConstants.FIELD_BOOST, 2.0);"
140113,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,253,,"        TestUtil.child(rules, ""nt:folder/properties/prop2"")"
140114,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,265,,"        assertTrue(rule1.isIndexed(""fooProp""));"
140115,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,374,,"                ""lucene"", of(TYPENAME_STRING), of(""foo"", ""Bar""), ""async"");"
140116,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,374,,"                ""lucene"", of(TYPENAME_STRING), of(""foo"", ""Bar""), ""async"");"
140117,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,479,,"        app.child(""test"").setProperty(FulltextIndexConstants.TIKA_MAPPED_TYPE, ""text/plain"");"
140118,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,512,,"        TestUtil.child(rules, ""oak:TestNode/properties/prop2"")"
140119,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,856,,"        defnb.indexRule(""oak:TestSuperType"");"
140120,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java,871,,"        assertNull(getRule(defn, ""oak:TestMixA""));"
140121,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/util/FunctionIndexProcessorTest.java,37,,"                FunctionIndexProcessor.getProperties(new String[] { ""function"","
140122,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/util/FunctionIndexProcessorTest.java,46,,"                EMPTY_NODE.builder().setProperty(""data"", ""Hello World"").getNodeState(),"
140123,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/util/FunctionIndexProcessorTest.java,47,,"                new String[]{""function"", ""length"", ""@data""}).toString());"
140124,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/util/IndexDefinitionBuilderTest.java,60,,"        assertEquals(""async"", state.getString(""async""));"
140125,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/util/IndexDefinitionBuilderTest.java,61,,"        assertEquals(""fulltext"", state.getString(""type""));"
140126,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/util/IndexDefinitionBuilderTest.java,69,,"        builder.indexRule(""nt:base"")"
140127,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/util/IndexDefinitionBuilderTest.java,70,,"                    .property(""foo"")"
140128,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/util/IndexDefinitionBuilderTest.java,73,,"                    .property(""bar"")"
140129,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/util/IndexDefinitionBuilderTest.java,81,,"        assertTrue(state.getChildNode(""indexRules"").exists());"
140130,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/util/IndexDefinitionBuilderTest.java,138,,"        builder.indexRule(""nt:unstructured"");"
140131,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/util/IndexDefinitionBuilderTest.java,223,,"        builder.indexRule(""nt:file"");"
140132,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/util/NodeStateCopyUtilsTest.java,62,,"        builder.setProperty(""foo"", ""x"");"
140133,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/plugins/tree/AbstractTreeTest.java,73,,"        when(rootTree.getChild(""nonExisting"")).thenReturn(nonExisting);"
140134,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/plugins/tree/TreeUtilTest.java,100,,"        when(rootTree.addChild(""newChild"")).thenReturn(newChild);"
140135,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/plugins/tree/TreeUtilTest.java,109,,"        when(typeRoot.getChild(""rep:NonExistingType"")).thenReturn(nonExisting);"
140136,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/plugins/tree/TreeUtilTest.java,198,,"        assertEquals(""def"", TreeUtil.getString(nonExisting, ""p"", ""def""));"
140137,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/plugins/tree/TreeUtilTest.java,283,,"        Tree parent = mockTree(""/some/tree"", true);"
140138,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/plugins/tree/TreeUtilTest.java,284,,"        TreeUtil.addChild(parent, ""grandChild"", null, typeRoot, ""userid"");"
140139,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/plugins/tree/TreeUtilTest.java,290,,"        TreeUtil.addChild(parent, ""name"", ""rep:NonExistingType"", typeRoot, ""userid"");"
140140,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/plugins/tree/TreeUtilTest.java,382,,"        TreeUtil.addMixin(child, ""rep:NonExistingType"", typeRoot, ""userId"");"
140141,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/plugins/tree/TreeUtilTest.java,475,,"                mockTree(""/some/path/""+ REP_PRIMARY_TYPE, true),"
140142,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/plugins/tree/TreeUtilTest.java,554,,"        when(child.hasChild(""autoChild"")).thenReturn(true);"
140143,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/plugins/tree/TreeUtilTest.java,592,,"        assertNull(TreeUtil.autoCreateProperty(""anyName"", propDef, ""userId""));"
140144,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/plugins/tree/TreeUtilTest.java,659,,"        assertNull(TreeUtil.getDefaultChildType(typeRoot, child, ""newChild[4]""));"
140145,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/CompositeConfigurationTest.java,198,,"        CompositeConfiguration cc = new CompositeConfiguration(""name"") {};"
140146,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/ConfigurationParametersTest.java,142,,"        assertEquals(""v2"", options.getConfigValue(""missing"", ""v2""));"
140147,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/ConfigurationParametersTest.java,186,,"        TestObject[] result = ConfigurationParameters.EMPTY.getConfigValue(""test"", new TestObject[0]);"
140148,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/ConfigurationParametersTest.java,225,,"        m.put(""TEST"", testObject);"
140149,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/ConfigurationParametersTest.java,226,,"        m.put(""String"", ""1000"");"
140150,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/ConfigurationParametersTest.java,226,,"        m.put(""String"", ""1000"");"
140151,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/ConfigurationParametersTest.java,227,,"        m.put(""Int2"", 1000);"
140152,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/ConfigurationParametersTest.java,228,,"        m.put(""Int3"", 1000);"
140153,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/ConfigurationParametersTest.java,300,,"        map.put(""string"", ""v"");"
140154,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/ConfigurationParametersTest.java,344,,"        Set<String> defaultStrings = ImmutableSet.of(""abc"", ""def"", ""ghi"");"
140155,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/ConfigurationParametersTest.java,352,,"                config = ConfigurationParameters.of(""key"", value);"
140156,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/ConfigurationParametersTest.java,379,,"            assertEquals(defaultStrings, config.getConfigValue(""nonexisting"", defaultStrings));"
140157,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/ConfigurationParametersTest.java,394,,"        ConfigurationParameters options = ConfigurationParameters.of(""str"", ""abc"");"
140158,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/ConfigurationParametersTest.java,520,,"        assertEquals(""value"", options.getConfigValue(""test"", ""value""));"
140159,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/ConfigurationParametersTest.java,540,,"        TestObject value = new TestObject(""name"");"
140160,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/ConfigurationParametersTest.java,586,,"        options.put(""test"", ""val"");"
140161,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/MillisecondsTest.java,36,,"        assertEquals(1, ConfigurationParameters.Milliseconds.of(""1ms"").value);"
140162,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/AbstractLoginModuleTest.java,150,,"        Subject subject = new Subject(false, ImmutableSet.<Principal>of(new PrincipalImpl(""pName"")), ImmutableSet.of(new TestCredentials()), ImmutableSet.of());"
140163,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/AbstractLoginModuleTest.java,280,,"        TestPrincipalProvider pp = new TestPrincipalProvider(""principal"");"
140164,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/AbstractLoginModuleTest.java,403,,"        sharedState.put(AbstractLoginModule.SHARED_KEY_LOGIN_NAME, ""test"");"
140165,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/JaasLoginContextTest.java,50,,"        JaasLoginContext ctx = new JaasLoginContext(""name"");"
140166,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/credentials/AbstractCredentialsTest.java,50,,"        credentials.getAttributes().put(""attr"", ""value"");"
140167,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/credentials/CompositeCredentialsSupportTest.java,59,,"        assertEquals(""uid"", credentialsSupport.getUserId(new SimpleCredentials(""uid"", new char[0])));"
140168,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/credentials/SimpleCredentialsSupportTest.java,50,,"        assertEquals(""uid"", credentialsSupport.getUserId(new SimpleCredentials(""uid"", new char[0])));"
140169,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/accesscontrol/AbstractAccessControlListTest.java,150,,"        paths.put(""/jr:testPath"", ""/jr:testPath"");"
140170,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/accesscontrol/AbstractAccessControlListTest.java,151,,"        paths.put(""/{http://jackrabbit.apache.org}testPath"", ""/jr:testPath"");"
140171,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/accesscontrol/AbstractAccessControlListTest.java,168,,"        String oakPath = ""/oak:testPath"";"
140172,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/accesscontrol/ImmutableACLTest.java,194,,"        assertNotEquals(acl, createACL(""/anotherPath"", ace1, ace2));"
140173,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/accesscontrol/ReadPolicyTest.java,40,,"        assertFalse(ReadPolicy.hasEffectiveReadPolicy(ImmutableSet.of(""/some/path"", ""/another/path""), null));"
140174,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/permission/PermissionsTest.java,434,,"        TreeLocation nonExistingTree = createNonExistingTreeLocation(""/nonExisting"");"
140175,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/restriction/AbstractRestrictionProviderTest.java,73,,"        nameValue = valueFactory.createValue(""nt:file"", PropertyType.NAME);"
140176,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/restriction/AbstractRestrictionProviderTest.java,81,,"        RestrictionDefinition mand = new RestrictionDefinitionImpl(""mandatory"", Type.BOOLEAN, true);"
140177,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/restriction/CompositeRestrictionProviderTest.java,161,,"        assertEquals(crp.getSupportedRestrictions(""/testPath""), crp2.getSupportedRestrictions(""/testPath""));"
140178,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/restriction/CompositeRestrictionProviderTest.java,252,,"        Set<Restriction> restrictions = provider.readRestrictions(""/test"", aceTree);"
140179,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/restriction/EmptyRestrictionProviderTest.java,37,,"        assertTrue(RestrictionProvider.EMPTY.getSupportedRestrictions(""/any/path"").isEmpty());"
140180,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/principal/PrincipalImplTest.java,36,,"    private final Principal principal = new PrincipalImpl(""name"");"
140181,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/principal/PrincipalManagerImplTest.java,242,,"            assertTrue(""findPrincipals does not find principal with filter '"" + pcpl.getName() + '\'', Iterators.contains(it, pcpl));"
140182,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/privilege/ImmutablePrivilegeDefinitionTest.java,31,,"    private final ImmutablePrivilegeDefinition def = new ImmutablePrivilegeDefinition(""name"", true, ImmutableList.of(""aggrName""));"
140183,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/privilege/ImmutablePrivilegeDefinitionTest.java,31,,"    private final ImmutablePrivilegeDefinition def = new ImmutablePrivilegeDefinition(""name"", true, ImmutableList.of(""aggrName""));"
140184,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/privilege/JcrAllUtilTest.java,44,,"    private static final PropertyState DYNAMIC_ALL_PROPERTY = PropertyStates.createProperty(""anyName"", Longs.asList(DYNAMIC_JCR_ALL_VALUE), Type.LONGS);"
140185,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/privilege/JcrAllUtilTest.java,122,,"        assertFalse(JcrAllUtil.denotesDynamicJcrAll(PropertyStates.createProperty(""any"", ""String"")));"
140186,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/privilege/PrivilegeBitsProviderTest.java,340,,"        Tree priv2 = mockPrivilegeDefinitionTree(""priv2"", priv2ps);"
140187,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/privilege/PrivilegeBitsTest.java,143,,"                fail(""UnsupportedOperation expected"");"
140188,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/privilege/PrivilegeUtilTest.java,60,,"        Tree defTree = when(mock(Tree.class).getName()).thenReturn(""name"").getMock();"
140189,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/user/action/AccessControlActionTest.java,205,,"        initSecurityProvider(DEFAULT_ADMIN_ID, DEFAULT_ANONYMOUS_ID, ""administrativePrincipal"");"
140190,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/user/action/AccessControlActionTest.java,256,,"        User user = mockUser(""userId"", ""pName"", ""/none"");"
140191,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/user/util/PasswordUtilTest.java,169,,"        assertTrue(""Not the same '"" + pw + ""', "" + pwHash, PasswordUtil.isSame(pwHash, pw));"
140192,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/user/util/PasswordUtilTest.java,169,,"        assertTrue(""Not the same '"" + pw + ""', "" + pwHash, PasswordUtil.isSame(pwHash, pw));"
140193,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/xml/PropInfoTest.java,73,,"        PropInfo propInfo = new PropInfo(""string"", PropertyType.STRING, mockTextValue(""value"", PropertyType.STRING, true));"
140194,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/xml/PropInfoTest.java,73,,"        PropInfo propInfo = new PropInfo(""string"", PropertyType.STRING, mockTextValue(""value"", PropertyType.STRING, true));"
140195,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/xml/PropInfoTest.java,101,,"        PropInfo prop = new PropInfo(""long"", PropertyType.LONG, mockTextValue(""23"",PropertyType.LONG));"
140196,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/xml/PropInfoTest.java,151,,"        PropInfo propInfo = new PropInfo(""longs"", PropertyType.LONG, ImmutableList.of());"
140197,./TargetProjects/jackrabbit-oak/oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/xml/ReferenceChangeTrackerTest.java,34,,"        assertNull(rct.get(""old""));"
140198,./TargetProjects/jackrabbit-oak/oak-segment-aws/src/test/java/org/apache/jackrabbit/oak/segment/aws/AwsArchiveManagerTest.java,79,,"        SegmentArchiveWriter writer = manager.create(""data00000a.tar"");"
140199,./TargetProjects/jackrabbit-oak/oak-segment-aws/src/test/java/org/apache/jackrabbit/oak/segment/aws/AwsArchiveManagerTest.java,102,,"        FileStore fs = FileStoreBuilder.fileStoreBuilder(new File(""target"")).withCustomPersistence(p).build();"
140200,./TargetProjects/jackrabbit-oak/oak-segment-aws/src/test/java/org/apache/jackrabbit/oak/segment/aws/AwsArchiveManagerTest.java,105,,"        builder.setProperty(""foo"", ""bar"");"
140201,./TargetProjects/jackrabbit-oak/oak-segment-aws/src/test/java/org/apache/jackrabbit/oak/segment/aws/AwsArchiveManagerTest.java,105,,"        builder.setProperty(""foo"", ""bar"");"
140202,./TargetProjects/jackrabbit-oak/oak-segment-aws/src/test/java/org/apache/jackrabbit/oak/segment/spi/persistence/split/SplitPersistenceTest.java,91,,"        builder.child(""foo"").child(""bar"").setProperty(""version"", ""v1"");"
140203,./TargetProjects/jackrabbit-oak/oak-segment-aws/src/test/java/org/apache/jackrabbit/oak/segment/spi/persistence/split/SplitPersistenceTest.java,91,,"        builder.child(""foo"").child(""bar"").setProperty(""version"", ""v1"");"
140204,./TargetProjects/jackrabbit-oak/oak-segment-aws/src/test/java/org/apache/jackrabbit/oak/segment/spi/persistence/split/SplitPersistenceTest.java,91,,"        builder.child(""foo"").child(""bar"").setProperty(""version"", ""v1"");"
140205,./TargetProjects/jackrabbit-oak/oak-segment-azure/src/test/java/org/apache/jackrabbit/oak/segment/azure/AzureArchiveManagerTest.java,79,,"        SegmentArchiveManager manager = new AzurePersistence(container.getDirectoryReference(""oak"")).createArchiveManager(false, false, new IOMonitorAdapter(), new FileStoreMonitorAdapter(), new RemoteStoreMonitorAdapter());"
140206,./TargetProjects/jackrabbit-oak/oak-segment-azure/src/test/java/org/apache/jackrabbit/oak/segment/azure/AzureArchiveManagerTest.java,80,,"        SegmentArchiveWriter writer = manager.create(""data00000a.tar"");"
140207,./TargetProjects/jackrabbit-oak/oak-segment-azure/src/test/java/org/apache/jackrabbit/oak/segment/azure/AzureArchiveManagerTest.java,133,,"        FileStore fs = FileStoreBuilder.fileStoreBuilder(new File(""target"")).withCustomPersistence(p).build();"
140208,./TargetProjects/jackrabbit-oak/oak-segment-azure/src/test/java/org/apache/jackrabbit/oak/segment/azure/AzureArchiveManagerTest.java,136,,"        builder.setProperty(""foo"", ""bar"");"
140209,./TargetProjects/jackrabbit-oak/oak-segment-azure/src/test/java/org/apache/jackrabbit/oak/segment/azure/AzureArchiveManagerTest.java,136,,"        builder.setProperty(""foo"", ""bar"");"
140210,./TargetProjects/jackrabbit-oak/oak-segment-azure/src/test/java/org/apache/jackrabbit/oak/segment/azure/util/CaseInsensitiveKeysMapAccessTest.java,30,,"        Map<String, String> map = CaseInsensitiveKeysMapAccess.convert(Collections.singletonMap(""hello"", ""world""));"
140211,./TargetProjects/jackrabbit-oak/oak-segment-azure/src/test/java/org/apache/jackrabbit/oak/segment/spi/persistence/split/SplitPersistenceTest.java,83,,"        builder.child(""foo"").child(""bar"").setProperty(""version"", ""v1"");"
140212,./TargetProjects/jackrabbit-oak/oak-segment-azure/src/test/java/org/apache/jackrabbit/oak/segment/spi/persistence/split/SplitPersistenceTest.java,83,,"        builder.child(""foo"").child(""bar"").setProperty(""version"", ""v1"");"
140213,./TargetProjects/jackrabbit-oak/oak-segment-azure/src/test/java/org/apache/jackrabbit/oak/segment/spi/persistence/split/SplitPersistenceTest.java,83,,"        builder.child(""foo"").child(""bar"").setProperty(""version"", ""v1"");"
140214,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/main/java/org/apache/jackrabbit/oak/segment/CheckpointCompactor.java,154,,"        return node.hasChildNode(""root"")"
140215,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/main/java/org/apache/jackrabbit/oak/segment/CommitsTracker.java,178,,"            return ""other"";"
140216,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/main/java/org/apache/jackrabbit/oak/segment/SegmentNodeStoreFactory.java,119,,"                ""Default value is '"" + DEFAULT_MAX_FILE_SIZE + ""'."""
140217,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/main/java/org/apache/jackrabbit/oak/segment/SegmentNodeStoreService.java,117,,"                ""Default value is '"" + DEFAULT_MAX_FILE_SIZE + ""'."""
140218,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/main/java/org/apache/jackrabbit/oak/segment/SegmentNodeStoreStats.java,138,,"                ""writerName"");"
140219,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/main/java/org/apache/jackrabbit/oak/segment/data/SegmentDataRaw.java,64,,"        throw new IllegalStateException(""invalid operation"");"
140220,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/main/java/org/apache/jackrabbit/oak/segment/standby/store/StandbyStoreService.java,73,,"                @Option(label = ""primary"", value = ""primary""),"
140221,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/CacheAccessTrackerTest.java,77,,"        cache.put(""one"", RecordId.NULL);"
140222,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/CancelableDiffTest.java,73,,"        doReturn(true).when(wrapped).childNodeAdded(""name"", after);"
140223,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/CheckpointTest.java,43,,"        addTestNode(store, ""test-checkpoint"");"
140224,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/CompactionAndCleanupIT.java,127,,"            NodeBuilder content = extra.child(""content"");"
140225,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/CompactionAndCleanupIT.java,175,,"            builder.setProperty(""blob1"", createBlob(nodeStore, blobSize));"
140226,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/CompactionAndCleanupIT.java,180,,"            assertTrue(""the store should grow"", size2 > size1);"
140227,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/CompactionAndCleanupIT.java,181,,"            assertTrue(""the store should grow of at least the size of the blob"", size2 - size1 >= blobSize);"
140228,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/CompactionAndCleanupIT.java,200,,"            builder.setProperty(""blob2"", createBlob(nodeStore, blobSize));"
140229,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/CompactionAndCleanupIT.java,659,,"        createNodes(root.setChildNode(""test""), 10, 3);"
140230,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/CompactionAndCleanupIT.java,1214,,"                    builder.setProperty(""blob-"" + counter.getAndIncrement(), createBlob(nodeStore, 512 * 512));"
140231,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/CompareAgainstBaseStateTest.java,55,,"        builder.setProperty(""foo"", ""abc"");"
140232,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/CompareAgainstBaseStateTest.java,57,,"        builder.child(""baz"");"
140233,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/CompareAgainstBaseStateTest.java,85,,"        builder.setProperty(""test"", ""test"");"
140234,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/DefaultSegmentWriterTest.java,201,,"        MapRecord one = new MapRecord(store.fileStore().getReader(), writer.writeMap(null, ImmutableMap.of(""one"", blockId)));"
140235,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/ExternalBlobIT.java,114,,"        NodeBuilder cb = nb.child(""hello"");"
140236,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/ExternalBlobIT.java,144,,"        builder.getChildNode(""hello"").setProperty(""world"", blob);"
140237,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/LoggingHookTest.java,128,,"            root -> root.setProperty(""a string"", ""a string/slash:colon%percent$dollar\\backslash\nnewline"")"
140238,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/MergeTest.java,40,,"        assertFalse(store.getRoot().hasProperty(""foo""));"
140239,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/MergeTest.java,41,,"        assertFalse(store.getRoot().hasProperty(""bar""));"
140240,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/RecordCacheTest.java,48,,"        cache.put(""key"", (newRecordId(idProvider, rnd)));"
140241,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/RecordTest.java,145,,"            builder = builder.child(""test"");"
140242,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/SegmentCompactionIT.java,294,,"                new ObjectName(""IT:TYPE="" + segmentCacheStats.getName())));"
140243,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/TemplateTest.java,45,,"        PropertyState primary = createProperty(""primary"", ""primary"");"
140244,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/TemplateTest.java,46,,"        PropertyState mixin = createProperty(""mixin"", ""mixin"");"
140245,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/FileStoreIT.java,121,,"        builder.setProperty(""step"", ""a"");"
140246,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/JournalReaderTest.java,53,,"            assertEquals(""one"", entry.getRevision());"
140247,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/PriorityCacheTest.java,63,,"        assertTrue(cache.put(""one"", 1, 0, (byte) 0));"
140248,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/PriorityCacheTest.java,66,,"        assertFalse(cache.put(""two"", 2, 0, (byte) 0));"
140249,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/PriorityCacheTest.java,85,,"            if (cache.put(""key-"" + k, k, 0, (byte) 0)) {"
140250,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/ReclaimersTest.java,43,,"        .put(""00w"", newGCGeneration(0, 0, false))"
140251,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/ReclaimersTest.java,46,,"        .put(""11c"", newGCGeneration(1, 1, true))"
140252,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/ReclaimersTest.java,47,,"        .put(""11w"", newGCGeneration(1, 1, false))"
140253,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/ReclaimersTest.java,50,,"        .put(""21c"", newGCGeneration(2, 1, true))"
140254,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/ReclaimersTest.java,51,,"        .put(""21w"", newGCGeneration(2, 1, false))"
140255,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/ReclaimersTest.java,54,,"        .put(""31c"", newGCGeneration(3, 1, true))"
140256,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/ReclaimersTest.java,55,,"        .put(""31w"", newGCGeneration(3, 1, false))"
140257,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/ReclaimersTest.java,59,,"        .put(""42w"", newGCGeneration(4, 2, false))"
140258,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/ReclaimersTest.java,63,,"        .put(""52w"", newGCGeneration(5, 2, false))"
140259,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/cancel/CancellerTest.java,49,,"        Cancellation c = Canceller.newCanceller().withCondition(""reason"", () -> true).check();"
140260,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/cancel/CancellerTest.java,62,,"            .withCondition(""parent"", () -> true)"
140261,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/TarFileTest.java,75,,"        try (TarWriter writer = new TarWriter(archiveManager, ""data00000a.tar"")) {"
140262,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderTest.java,83,,"            .putInt(length(""1.1.1"")).put(bytes(""1.1.1""))"
140263,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderTest.java,84,,"            .putInt(length(""1.1.2"")).put(bytes(""1.1.2""))"
140264,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderTest.java,88,,"            .putInt(length(""1.2.1"")).put(bytes(""1.2.1""))"
140265,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderTest.java,89,,"            .putInt(length(""1.2.2"")).put(bytes(""1.2.2""))"
140266,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderTest.java,96,,"            .putInt(length(""2.1.1"")).put(bytes(""2.1.1""))"
140267,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderTest.java,97,,"            .putInt(length(""2.1.2"")).put(bytes(""2.1.2""))"
140268,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderTest.java,101,,"            .putInt(length(""2.2.1"")).put(bytes(""2.2.1""))"
140269,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderTest.java,102,,"            .putInt(length(""2.2.2"")).put(bytes(""2.2.2""));"
140270,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderV1Test.java,108,,"            .putInt(length(""1.1.1"")).put(bytes(""1.1.1""))"
140271,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderV1Test.java,109,,"            .putInt(length(""1.1.2"")).put(bytes(""1.1.2""))"
140272,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderV1Test.java,113,,"            .putInt(length(""1.2.1"")).put(bytes(""1.2.1""))"
140273,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderV1Test.java,114,,"            .putInt(length(""1.2.2"")).put(bytes(""1.2.2""))"
140274,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderV1Test.java,121,,"            .putInt(length(""2.1.1"")).put(bytes(""2.1.1""))"
140275,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderV1Test.java,122,,"            .putInt(length(""2.1.2"")).put(bytes(""2.1.2""))"
140276,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderV1Test.java,126,,"            .putInt(length(""2.2.1"")).put(bytes(""2.2.1""))"
140277,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderV1Test.java,127,,"            .putInt(length(""2.2.2"")).put(bytes(""2.2.2""));"
140278,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderV2Test.java,108,,"            .putInt(length(""1.1.1"")).put(bytes(""1.1.1""))"
140279,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderV2Test.java,109,,"            .putInt(length(""1.1.2"")).put(bytes(""1.1.2""))"
140280,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderV2Test.java,113,,"            .putInt(length(""1.2.1"")).put(bytes(""1.2.1""))"
140281,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderV2Test.java,114,,"            .putInt(length(""1.2.2"")).put(bytes(""1.2.2""))"
140282,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderV2Test.java,121,,"            .putInt(length(""2.1.1"")).put(bytes(""2.1.1""))"
140283,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderV2Test.java,122,,"            .putInt(length(""2.1.2"")).put(bytes(""2.1.2""))"
140284,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderV2Test.java,126,,"            .putInt(length(""2.2.1"")).put(bytes(""2.2.1""))"
140285,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/file/tar/binaries/BinaryReferencesIndexLoaderV2Test.java,127,,"            .putInt(length(""2.2.2"")).put(bytes(""2.2.2""));"
140286,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/migration/DepthFirstNodeIteratorTest.java,49,,"        NodeBuilder countries = rootBuilder.child(""countries"");"
140287,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/migration/DepthFirstNodeIteratorTest.java,50,,"        countries.child(""uk"").child(""cities"").child(""london"").child(""districts"").child(""frognal"");"
140288,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/migration/DepthFirstNodeIteratorTest.java,50,,"        countries.child(""uk"").child(""cities"").child(""london"").child(""districts"").child(""frognal"");"
140289,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/migration/DepthFirstNodeIteratorTest.java,52,,"        countries.child(""france"").child(""cities"").child(""paris"");"
140290,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/osgi/SegmentNodeStoreFactoryTest.java,39,,"            .withValue(""false"")"
140291,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/osgi/SegmentNodeStoreServiceTest.java,42,,"            .withValue(""256"")"
140292,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/osgi/SegmentNodeStoreServiceTest.java,70,,"            .withValue(""false"")"
140293,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/osgi/StandbyStoreServiceTest.java,40,,"            .withValue(""false"")"
140294,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/DataStoreTestBase.java,112,,"        builder.child(child).setProperty(""testBlob"", blob);"
140295,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/DataStoreTestBase.java,147,,"        byte[] data = addTestContent(store, ""server"", blobSize);"
140296,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/DataStoreTestBase.java,203,,"        PropertyState ps = secondary.getHead().getChildNode(""root"")"
140297,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/FailoverIPRangeIT.java,70,,"        assumeFalse(jenkinsNodeLabel(""beam""));"
140298,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/FailoverIPRangeIT.java,72,,"        createTestWithConfig(""::1"", new String[] {""::1""}, true);"
140299,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/FailoverIPRangeIT.java,114,,"        createTestWithConfig(new String[] {""127-128"", ""126.0.0.1"", ""127.0.0.0-127.255.255.255""}, true);"
140300,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/FailoverIPRangeIT.java,114,,"        createTestWithConfig(new String[] {""127-128"", ""126.0.0.1"", ""127.0.0.0-127.255.255.255""}, true);"
140301,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/MBeanIT.java,79,,"            assertEquals(""primary"", jmxServer.getAttribute(status, ""Mode""));"
140302,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/MBeanIT.java,80,,"            String m = jmxServer.getAttribute(status, ""Status"").toString();"
140303,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/MBeanIT.java,86,,"            assertEquals(true, jmxServer.getAttribute(status, ""Running""));"
140304,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/MBeanIT.java,87,,"            jmxServer.invoke(status, ""stop"", null, null);"
140305,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/MBeanIT.java,90,,"            jmxServer.invoke(status, ""start"", null, null);"
140306,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/MBeanIT.java,126,,"            assertEquals(""1"", jmxServer.getAttribute(status, ""FailedRequests"").toString());"
140307,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/MBeanIT.java,127,,"            assertEquals(""-1"", jmxServer.getAttribute(status, ""SecondsSinceLastSuccess"").toString());"
140308,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/StandbyTestIT.java,100,,"            byte[] data = addTestContent(store, ""server"", blobSize, 150);"
140309,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/StandbyTestIT.java,110,,"            PropertyState ps = secondary.getHead().getChildNode(""root"")"
140310,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/StandbyTestIT.java,111,,"                .getChildNode(""server"").getProperty(""testBlob"");"
140311,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/StandbyTestIT.java,202,,"        KeyStore keyStore = KeyStore.getInstance(""JKS"");"
140312,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/StandbyTestIT.java,203,,"        keyStore.load(null, ""changeit"".toCharArray());"
140313,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/StandbyTestIT.java,204,,"        Certificate c = CertificateFactory.getInstance(""X.509"").generateCertificate(new ByteArrayInputStream(caCert.getBytes()));"
140314,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/StandbyTestIT.java,205,,"        keyStore.setCertificateEntry(""the-ca-cert"", c);"
140315,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/StandbyTestIT.java,207,,"        System.setProperty(""javax.net.ssl.trustStore"", keyStoreFile.getAbsolutePath());"
140316,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/StandbyTestIT.java,445,,"    @Ignore(""This test takes ~7s and is therefore disabled by default"")"
140317,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/TestBase.java,53,,"        ""-----BEGIN CERTIFICATE-----\n"" +"
140318,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/TestBase.java,75,,"        ""-----END CERTIFICATE-----\n"";"
140319,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/codec/RequestDecoderTest.java,31,,"        channel.writeInbound(Messages.newGetBlobRequest(""clientId"", ""blobId"", false));"
140320,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/codec/RequestDecoderTest.java,48,,"        channel.writeInbound(Messages.newGetSegmentRequest(""clientId"", ""segmentId"", false));"
140321,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/codec/ResponseDecoderTest.java,65,,"        String blobId = ""blobId"";"
140322,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/server/ClientIPFilterHostnameTest.java,43,,"        InetSocketAddress address = new InetSocketAddress(""localhost"", 8080);"
140323,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/server/ClientIpFilterTest.java,36,,"                {null, ""127.0.0.1"", true},"
140324,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/server/ClientIpFilterTest.java,40,,"                {""::1"", ""::1"", true},"
140325,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/server/GetBlobRequestHandlerTest.java,42,,"        when(reader.readBlob(""blobId"")).thenReturn(new ByteArrayInputStream(blobData));"
140326,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/store/CommunicationObserverTest.java,77,,"        observer.gotMessageFrom(""client"", ""request"", ""127.0.0.1"", 8080);"
140327,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/store/CommunicationObserverTest.java,77,,"        observer.gotMessageFrom(""client"", ""request"", ""127.0.0.1"", 8080);"
140328,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/store/CommunicationObserverTest.java,77,,"        observer.gotMessageFrom(""client"", ""request"", ""127.0.0.1"", 8080);"
140329,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/tool/CheckValidRepositoryTest.java,64,,"        assertExpectedOutput(strOut.toString(), Lists.newArrayList(""Checking head"", ""Searched through 1 revisions and 0 checkpoints"","
140330,./TargetProjects/jackrabbit-oak/oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/tool/CheckValidRepositoryTest.java,64,,"        assertExpectedOutput(strOut.toString(), Lists.newArrayList(""Checking head"", ""Searched through 1 revisions and 0 checkpoints"","
140331,./TargetProjects/jackrabbit-oak/oak-solr-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/solr/index/SolrIndexEditor.java,124,,"                        ""Solr"", 2, ""Failed to add a document to Solr"", e);"
140332,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,40,,"        Node n1 = testRootNode.addNode(""node1"");"
140333,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,41,,"        n1.setProperty(""text"", ""hello"");"
140334,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,41,,"        n1.setProperty(""text"", ""hello"");"
140335,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,42,,"        Node n2 = testRootNode.addNode(""node2"");"
140336,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,43,,"        n2.setProperty(""text"", ""hallo"");"
140337,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,44,,"        Node n3 = testRootNode.addNode(""node3"");"
140338,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,45,,"        n3.setProperty(""text"", ""oh hallo"");"
140339,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,80,,"        n1.setProperty(""jcr:title"", ""apache jackrabbit oak"");"
140340,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,81,,"        n1.setProperty(""tags"", new String[]{""software"", ""repository"", ""apache""});"
140341,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryFulltextTest.java,40,,"        Node n1 = testRootNode.addNode(""node1"");"
140342,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryFulltextTest.java,41,,"        n1.setProperty(""text"", ""hello hello hello"");"
140343,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryFulltextTest.java,42,,"        Node n2 = testRootNode.addNode(""node2"");"
140344,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryFulltextTest.java,43,,"        n2.setProperty(""text"", ""hello"");"
140345,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryFulltextTest.java,58,,"        String sql2 = ""select [jcr:path] as [path] from [nt:base] "" +"
140346,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryFulltextTest.java,84,,"        assertEquals("""", getResult(q.execute(), ""path""));"
140347,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/SpellcheckTest.java,44,,"        n1.setProperty(""jcr:title"", ""hello hello hello alt"");"
140348,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/SuggestTest.java,44,,"        n1.setProperty(""jcr:title"", ""in 2015 my fox is red, like mike's fox and john's fox"");"
140349,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/SuggestTest.java,44,,"        n1.setProperty(""jcr:title"", ""in 2015 my fox is red, like mike's fox and john's fox"");"
140350,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/jcr/query/SuggestTest.java,46,,"        n2.setProperty(""jcr:title"", ""in 2015 a red fox is still a fox"");"
140351,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/configuration/DefaultAnalyzersConfigurationTest.java,138,,"            TokenStream ts = allChildrenPathIndexingAnalyzer.tokenStream(""text"", new StringReader(""/jcr:a/jcr:b/c/jcr:d""));"
140352,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/configuration/DefaultAnalyzersConfigurationTest.java,139,,"            assertTokenStreamContents(ts, new String[]{""/jcr:a"", ""/"", ""/jcr:a/jcr:b"", ""/jcr:a/jcr:b/c"", ""/jcr:a/jcr:b/c/jcr:d""});"
140353,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/configuration/DefaultAnalyzersConfigurationTest.java,139,,"            assertTokenStreamContents(ts, new String[]{""/jcr:a"", ""/"", ""/jcr:a/jcr:b"", ""/jcr:a/jcr:b/c"", ""/jcr:a/jcr:b/c/jcr:d""});"
140354,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/configuration/DefaultAnalyzersConfigurationTest.java,139,,"            assertTokenStreamContents(ts, new String[]{""/jcr:a"", ""/"", ""/jcr:a/jcr:b"", ""/jcr:a/jcr:b/c"", ""/jcr:a/jcr:b/c/jcr:d""});"
140355,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/configuration/DefaultAnalyzersConfigurationTest.java,159,,"            assertTokenStreamContents(ts, new String[]{""/jcr:a/b""});"
140356,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/index/SolrIndexEditorIT.java,36,,"                setProperty(""text"", ""hit that hot hat tattoo"");"
140357,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,107,,"        Tree test = root.getTree(""/"").addChild(""test"");"
140358,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,114,,"                ""JCR-SQL2"").iterator();"
140359,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,116,,"        assertEquals(""/test/a"", result.next());"
140360,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,118,,"        assertEquals(""/test/a/c"", result.next());"
140361,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,120,,"        assertEquals(""/test/b"", result.next());"
140362,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,129,,"        test.addChild(""a"").addChild(""c"").setProperty(""name"", asList(""Hello"", ""World""), STRINGS);"
140363,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,129,,"        test.addChild(""a"").addChild(""c"").setProperty(""name"", asList(""Hello"", ""World""), STRINGS);"
140364,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,129,,"        test.addChild(""a"").addChild(""c"").setProperty(""name"", asList(""Hello"", ""World""), STRINGS);"
140365,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,249,,"        test.addChild(""a"").setProperty(""text"", ""Hello World today weather is nice"");"
140366,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,294,,"        Iterator<String> result = executeQuery(query, ""xpath"").iterator();"
140367,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,501,,"        a.setProperty(""foo"", ""bar"");"
140368,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,501,,"        a.setProperty(""foo"", ""bar"");"
140369,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,525,,"        Tree index = root.getTree(""/oak:index/"" + TEST_INDEX_NAME);"
140370,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,529,,"        index.setProperty(""reindex"", true);"
140371,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,532,,"        Tree content = root.getTree(""/"").addChild(""content"");"
140372,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,535,,"        a.setProperty(""type"", ""doc doc doc"");"
140373,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,546,,"        assertEquals(""/content/a"", results.next());"
140374,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexIT.java,564,,"        Tree aContent = a.addChild(""jcr:content"");"
140375,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrIndexLookupTest.java,51,,"        newSolrIndexDefinition(index, ""l1"", of(""foo""));"
140376,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrQueryIndexTest.java,70,,"        builder.child(""oak:index"").child(""solr"")"
140377,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrQueryIndexTest.java,70,,"        builder.child(""oak:index"").child(""solr"")"
140378,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrQueryIndexTest.java,126,,"                .setProperty(""propertyRestrictions"", true);"
140379,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrQueryIndexTest.java,147,,"        FilterImpl filter = new FilterImpl(selector, ""select * from [nt:base] as a where name = 'hello')"", new QueryEngineSettings());"
140380,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrQueryIndexTest.java,148,,"        filter.restrictProperty(""name"", Operator.EQUAL, PropertyValues.newString(""hello""));"
140381,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrQueryIndexTest.java,148,,"        filter.restrictProperty(""name"", Operator.EQUAL, PropertyValues.newString(""hello""));"
140382,./TargetProjects/jackrabbit-oak/oak-solr-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/query/SolrQueryIndexTest.java,245,,"                .setProperty(""usedProperties"", Collections.singleton(""foo""), Type.STRINGS)"
140383,./TargetProjects/jackrabbit-oak/oak-store-composite/src/main/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreStats.java,181,,"                new String[]{""count"", ""path""},"
140384,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/CompositeChildrenCountTest.java,72,,"        MountInfoProvider mip = Mounts.newBuilder().readOnlyMount(""libs"", ""/libs"", ""/libs1"", ""/libs2"", ""/libs3"", ""/libs4"").build();"
140385,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/CompositeChildrenCountTest.java,72,,"        MountInfoProvider mip = Mounts.newBuilder().readOnlyMount(""libs"", ""/libs"", ""/libs1"", ""/libs2"", ""/libs3"", ""/libs4"").build();"
140386,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/CompositeCompareTest.java,50,,"        mipBuilder.readOnlyMount(""libs"", ""/libs"");"
140387,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/CompositeCompareTest.java,59,,"        builder.child(""changed"");"
140388,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/CompositeCompareTest.java,60,,"        builder.child(""deleted"");"
140389,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/CompositeCompareTest.java,111,,"        builder.setProperty(""global-prop-1"", ""val"");"
140390,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreServiceTest.java,54,,"		ctx.registerService(NodeStoreProvider.class, new SimpleNodeStoreProvider(global), ImmutableMap.of(""role"", ""composite-global"", ""registerDescriptors"", Boolean.TRUE));"
140391,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreStatsTest.java,31,,"                stats.onCreateNodeObject(""/xyz"" + i);"
140392,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/InitialContentMigratorTest.java,66,,"        root.child(""first"");"
140393,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/InitialContentMigratorTest.java,67,,"        root.child(""second"");"
140394,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/InitialContentMigratorTest.java,72,,"        root.child(""third"");"
140395,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/InitialContentMigratorTest.java,80,,"        MountInfoProvider mip = Mounts.newBuilder().mount(""seed"", ""/first"").build();"
140396,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/checks/NamespacePrefixNodestoreCheckerTest.java,68,,"        builder.child(""libs"").child(""foo:first"");"
140397,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/checks/NodeTypeDefinitionNodeStoreCheckerTest.java,59,,"                builder.child(""first"")"
140398,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/checks/NodeTypeMountedNodeStoreCheckerTest.java,49,,"        builder.child(""first"")"
140399,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/checks/UniqueIndexNodeStoreCheckerTest.java,55,,"                readOnlyMount(""libs"", ""/libs"", ""/libs2"")."
140400,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/checks/UniqueIndexNodeStoreCheckerTest.java,66,,"        populateStore(globalStore, b  -> b.child(""first"").setProperty(""foo"", ""bar""));"
140401,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/checks/UniqueIndexNodeStoreCheckerTest.java,66,,"        populateStore(globalStore, b  -> b.child(""first"").setProperty(""foo"", ""bar""));"
140402,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/checks/UniqueIndexNodeStoreCheckerTest.java,66,,"        populateStore(globalStore, b  -> b.child(""first"").setProperty(""foo"", ""bar""));"
140403,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/impl/NonDefaultMountWriteReportingObserverTest.java,65,,"            .child(""foo"")"
140404,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/impl/NonDefaultMountWriteReportingObserverTest.java,66,,"            .child(""bar"")"
140405,./TargetProjects/jackrabbit-oak/oak-store-composite/src/test/java/org/apache/jackrabbit/oak/composite/impl/NonDefaultMountWriteReportingObserverTest.java,67,,"            .child(""baz"");"
140406,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/Branch.java,130,,"        checkArgument(checkNotNull(head).isBranch(), ""Not a branch revision: %s"", head);"
140407,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo.java,746,,"            throw leaseExpired(LEASE_CHECK_FAILED_MSG + "" (since "" + asISO8601(leaseEndTime) + "")"", true);"
140408,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo.java,1144,,"        return ""id: "" + id + "",\n"" +"
140409,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/Commit.java,578,,"                    conflictMessage = ""The node "" +"
140410,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore.java,1544,,"                    LOG.debug(""nodeChildrenCache.put({},{})"", key, ""NO_CHILDREN"");"
140411,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranch.java,793,,"            throw new IllegalStateException(""Branch has already been merged"");"
140412,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreService.java,552,,"    @SuppressWarnings(""UnusedDeclaration"")"
140413,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore.java,452,,"    @SuppressWarnings(""unchecked"")"
140414,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore.java,766,,"        log(""remove"", key);"
140415,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore.java,780,,"            throw DocumentStoreException.convert(e, ""Remove failed for "" + key);"
140416,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/persistentCache/CacheType.java,46,,"        @SuppressWarnings(""unchecked"")"
140417,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBBlobStore.java,346,,"                    prep = con.prepareStatement(""select DATA from "" + this.tnData + "" where ID = ?"");"
140418,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBBlobStore.java,523,,"            prepDelMeta = con.prepareStatement(""delete from "" + this.tnMeta + "" where ID = ?"");"
140419,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBBlobStoreDB.java,55,,"            return ""create table "" + tableName + "" (ID varchar("" + RDBBlobStore.IDSIZE + "") not null primary key, DATA blob("""
140420,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBBlobStoreDB.java,55,,"            return ""create table "" + tableName + "" (ID varchar("" + RDBBlobStore.IDSIZE + "") not null primary key, DATA blob("""
140421,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBCommonVendorSpecificCode.java,76,,"                LOG.debug(""while getting diagnostics"", ex);"
140422,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStore.java,983,,"            .unmodifiableSet(new HashSet<String>(Arrays.asList(new String[] { ""version"", ""sdtype"", ""sdmaxrevtime"" })));"
140423,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStore.java,1830,,"            LOG.error(""SQL exception on query"", ex);"
140424,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreDB.java,98,,"                                result.put(""_data"", raw);"
140425,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreDB.java,101,,"                                result.put(conglomerateName + ""._data"", raw);"
140426,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreDB.java,115,,"                LOG.debug(""while getting diagnostics"", ex);"
140427,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreDB.java,162,,"            return (""create table "" + tableName"
140428,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreDB.java,164,,"                    + (schema >= 1 ? ""VERSION smallint, "" : """")"
140429,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreDB.java,165,,"                    + (schema >= 2 ? ""SDTYPE smallint, SDMAXREVTIME bigint, "" : """")"
140430,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreDB.java,255,,"            statements.add(""alter table "" + tableName + "" add constraint "" + pkName + "" primary key ( ID )"");"
140431,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreDB.java,306,,"                            result.put(""index."" + index + ""._data"", data);"
140432,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreDB.java,732,,"        result.add(""create index "" + tableName + ""_MOD on "" + tableName + "" (MODIFIED)"");"
140433,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreJDBC.java,148,,"            String sql = ""delete from "" + tmd.getName() + "" where "" + inClause.getStatementComponent();"
140434,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreJDBC.java,993,,"            whereSep = "" and "";"
140435,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBExport.java,465,,"        System.err.println(""Usage: "" + RDBExport.class.getName()"
140436,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/util/LoggingDocumentStoreWrapper.java,148,,"            logMethod(""remove"", collection, key);"
140437,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/util/TimingDocumentStoreWrapper.java,193,,"            updateAndLogTimes(""remove"", start, 0, 0);"
140438,./TargetProjects/jackrabbit-oak/oak-store-document/src/main/java/org/apache/jackrabbit/oak/plugins/document/util/TimingDocumentStoreWrapper.java,195,,"                logCommonCall(start, ""remove "" + collection + "" "" + key);"
140439,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BasicDocumentStoreTest.java,246,,"        up.set(existingProp, ""lock"");"
140440,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BasicDocumentStoreTest.java,252,,"        up.notEquals(nonExistingProp, ""none"");"
140441,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BasicDocumentStoreTest.java,363,,"            up.equals(""foo"", ""bar"");"
140442,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BasicDocumentStoreTest.java,363,,"            up.equals(""foo"", ""bar"");"
140443,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BasicDocumentStoreTest.java,434,,"            up.set(""_modified"", modTime);"
140444,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BasicDocumentStoreTest.java,439,,"        assertEquals(""Number of entries removed didn't match"", 3,"
140445,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BasicDocumentStoreTest.java,552,,"                    + "" (potentially non-ASCII, actual octet length with UTF-8 encoding: "" + pval.getBytes(""UTF-8"").length + "") in """
140446,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BasicDocumentStoreTest.java,1113,,"        docs.add(newDocument(""/foo"", 100));"
140447,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BasicDocumentStoreTest.java,1115,,"        docs.add(newDocument(""/bar"", 200));"
140448,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BlobCollectorTest.java,62,,"            blobs.add(new ReferencedBlob(b, ""/x/y""));"
140449,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BlobTest.java,96,,"        Blob blob = new BlobStoreBlob(blobStore, ""foo"");"
140450,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BranchTest.java,63,,"        bc1.track(Path.fromString(""/foo""));"
140451,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BranchTest.java,68,,"        bc2.track(Path.fromString(""/bar""));"
140452,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BranchTest.java,205,,"        assertNotNull(store.find(NODES, Utils.getIdFromPath(""/"")).get(""_bc""));"
140453,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BulkCreateOrUpdateClusterTest.java,64,,"            String id = this.getClass().getName() + "".testConcurrentNoConflict"" + i;"
140454,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BulkCreateOrUpdateClusterTest.java,66,,"            up.set(""prop"", 100);"
140455,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BulkCreateOrUpdateClusterTest.java,228,,"                op1a.set(""foo"", 1);"
140456,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BulkCreateOrUpdateTest.java,102,,"            up.set(""prop"", 100);"
140457,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BulkCreateOrUpdateTest.java,122,,"            assertEquals(""The old value is not correct"", 100l, oldDoc.get(""prop""));"
140458,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BulkCreateOrUpdateTest.java,123,,"            assertEquals(""The document hasn't been updated"", 200l, newDoc.get(""prop""));"
140459,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/BulkCreateOrUpdateTest.java,188,,"            String id = this.getClass().getName() + "".testConcurrentNoConflict"" + i;"
140460,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CacheConsistencyTestBase.java,69,,"        up1.set(""_test"", ""oldvalue"");"
140461,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CacheConsistencyTestBase.java,69,,"        up1.set(""_test"", ""oldvalue"");"
140462,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CacheConsistencyTestBase.java,99,,"                fail(""should have failed with DocumentStoreException"");"
140463,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CacheConsistencyTestBase.java,101,,"                assertEquals(""should fail with enforced exception"", ex.getCause().getMessage(), random);"
140464,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CheckpointsTest.java,216,,"        Document doc = docStore.find(Collection.SETTINGS, ""checkpoint"");"
140465,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CheckpointsTest.java,219,,"        Map<Revision, String> data = (Map<Revision, String>) doc.get(""data"");"
140466,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CheckpointsTest.java,263,,"        String infoString = ""{\""expires\"":\"""" + expires + ""\"",\""foo\"":\""bar\""}"";"
140467,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CheckpointsTest.java,266,,"        assertEquals(Collections.singleton(""foo""), info.get().keySet());"
140468,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CheckpointsTest.java,267,,"        assertEquals(""bar"", info.get().get(""foo""));"
140469,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CheckpointsTest.java,358,,"        b2.child(""baz"");"
140470,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfoTest.java,97,,"            fail(""must fail with DocumentStoreException"");"
140471,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfoTest.java,145,,"            fail(""must throw DocumentStoreException"");"
140472,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfoTest.java,281,,"        String instanceId1 = ""node1"";"
140473,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfoTest.java,304,,"        String instanceId2 = ""node2"";"
140474,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterNodeRestartTest.java,47,,"        builder.child(""foo"").child(""bar"");"
140475,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterNodeRestartTest.java,47,,"        builder.child(""foo"").child(""bar"");"
140476,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterRevisionComparisonTest.java,65,,"        createNode(c2, ""/a/c2"");"
140477,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterRevisionComparisonTest.java,88,,"        createNode(c1, ""/a/c1"");"
140478,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterTest.java,81,,"        mk1.commit(""/"", ""+\""test\"":{}"", null, null);"
140479,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterTest.java,96,,"        String n3 = mk3.getNodes(""/test"", mk3.getHeadRevision(), 0, 0, 10, null);"
140480,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterTest.java,152,,"        mk1.commit(""/"", ""+\""a\"": {}"", null, null);"
140481,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterTest.java,153,,"        mk1.commit(""/"", ""-\""a\"""", null, null);"
140482,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterViewTest.java,50,,"            fail(""should complain"");"
140483,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterViewTest.java,122,,"        assertEquals(""10"", props.get(""seq""));"
140484,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterViewTest.java,125,,"        assertEquals(asJsonArray(21), props.get(""active""));"
140485,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterViewTest.java,126,,"        assertEquals(asJsonArray(), props.get(""deactivating""));"
140486,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterViewTest.java,127,,"        assertEquals(asJsonArray(), props.get(""inactive""));"
140487,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ClusterViewTest.java,157,,"        assertEquals(""true"", props.get(""final""));"
140488,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CollisionTest.java,126,,"        b.child(""test"").setProperty(""p"", ""a"");"
140489,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CollisionTest.java,235,,"        Path p = Path.fromString(""/n-0"");"
140490,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CollisionTest.java,241,,"        builder.child(""n-0"");"
140491,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CommitBuilderTest.java,95,,"        Path foo = Path.fromString(""/foo"");"
140492,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CommitDiffTest.java,74,,"        diff.childNodeAdded(""file"", ntFile.getNodeState());"
140493,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CommitDiffTest.java,78,,"        UpdateOp op = c.getUpdateOperationForNode(Path.fromString(""/file""));"
140494,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CommitRootUpdateTest.java,64,,"        b.child(""foo"");"
140495,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CommitTest.java,57,,"        b.child(""foo"");"
140496,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CommitValueResolverTest.java,61,,"        addNode(""/foo"");"
140497,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConcurrentDocumentStoreTest.java,46,,"        up.set(""counter"", 0L);"
140498,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConcurrentReadAndAddTest.java,77,,"        builder.child(""test"");"
140499,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,31,,"        String rev = mk.commit(""/"", ""+\""foo\"":{}"", null, null);"
140500,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,32,,"        mk.commit(""/foo"", ""^\""prop\"":\""value\"""", rev, null);"
140501,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,32,,"        mk.commit(""/foo"", ""^\""prop\"":\""value\"""", rev, null);"
140502,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,36,,"            fail(""Must fail with conflict for addExistingProperty"");"
140503,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,111,,"        String rev = mk.commit(""/"", ""+\""foo\"":{\""prop\"":\""value\""}"", null, null);"
140504,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,112,,"        mk.commit(""/foo"", ""^\""prop\"":null"", rev, null);"
140505,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,116,,"            fail(""Must fail with conflict for removeRemovedProperty"");"
140506,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,192,,"        mk.commit(""/foo"", ""^\""prop\"":\""bar\"""", rev, null);"
140507,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,196,,"            fail(""Must fail with conflict for removeChangedProperty"");"
140508,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,275,,"            fail(""Must fail with conflict for changeRemovedProperty"");"
140509,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,353,,"            mk.commit(""/foo"", ""^\""prop\"":\""baz\"""", rev, null);"
140510,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,354,,"            fail(""Must fail with conflict for changeChangedProperty"");"
140511,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,429,,"        mk.commit(""/foo"", ""+\""bar\"":{}"", rev, null);"
140512,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,433,,"            fail(""Must fail with conflict for addExistingNode"");"
140513,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,509,,"        mk.commit(""/"", ""-\""foo\"""", rev, null);"
140514,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,513,,"            fail(""Must fail with conflict for removeRemovedNode"");"
140515,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,592,,"            fail(""Must fail with conflict for removeChangedNode"");"
140516,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,671,,"            fail(""Must fail with conflict for changeRemovedNode"");"
140517,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,745,,"        String rev = mk.commit(""/"", ""+\""foo\"":{\""prop1\"":\""value\"", \""prop2\"":\""value\""}"", null, null);"
140518,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,746,,"        mk.commit(""/foo"", ""^\""prop1\"":\""bar\"""", rev, null);"
140519,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ConflictTest.java,747,,"        mk.commit(""/foo"", ""^\""prop2\"":\""baz\"""", rev, null);"
140520,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/CountingDocumentStore.java,84,,"            new Exception(""find ["" + getStats(collection).numFindCalls + ""] ("" + collection + "") "" + key).printStackTrace();"
140521,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentBatchSplitTest.java,92,,"        createOrUpdateBatchSize = System.getProperty(""oak.documentMK.createOrUpdateBatchSize"");"
140522,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentDiscoveryLiteInvisibleServiceCrashTest.java,168,,"        waitFor(expectation1AfterCrashBeforeLastRevRecoveryLocking, TEST_WAIT_TIMEOUT, ""first should still see itself as active"");"
140523,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentDiscoveryLiteServiceTest.java,157,,"        assertTrue(DocumentDiscoveryLiteService.versionPredates(""1.3.5"", ""1.0.0""));"
140524,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMK.java,332,,"                        throw new DocumentStoreException(""Node not found: "" + path + "" in revision "" + baseRevId);"
140525,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMK.java,332,,"                        throw new DocumentStoreException(""Node not found: "" + path + "" in revision "" + baseRevId);"
140526,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,36,,"        addNodes(null, ""/trunk"", ""/trunk/child1"");"
140527,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,36,,"        addNodes(null, ""/trunk"", ""/trunk/child1"");"
140528,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,41,,"        branchRev = addNodes(branchRev, ""/branch1"", ""/branch1/child1"");"
140529,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,41,,"        branchRev = addNodes(branchRev, ""/branch1"", ""/branch1/child1"");"
140530,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,46,,"        addNodes(null, ""/trunk/child2"");"
140531,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,61,,"        branchRev = addNodes(branchRev, ""/trunk/child1/child2"");"
140532,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,66,,"        addNodes(null, ""/trunk/child3"");"
140533,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,76,,"        addNodes(null, ""/root"", ""/root/child1"");"
140534,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,76,,"        addNodes(null, ""/root"", ""/root/child1"");"
140535,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,82,,"        addNodes(null, ""/root/child2"");"
140536,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,87,,"        branchRev = addNodes(branchRev, ""/root/child1/child3"", ""/root/child4"");"
140537,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,87,,"        branchRev = addNodes(branchRev, ""/root/child1/child3"", ""/root/child4"");"
140538,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,151,,"        setProp(null, ""/trunk/child1/prop1"", ""value1"");"
140539,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,154,,"        assertPropExists(null, ""/trunk/child1"", ""prop1"");"
140540,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,155,,"        assertPropExists(null, ""/trunk/child1"", ""prop2"");"
140541,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,159,,"        branchRev = setProp(branchRev, ""/trunk/child1/prop1"", ""value1a"");"
140542,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,177,,"        addNodes(null, ""/trunk"", ""/trunk/child1"", ""/trunk/child1/child2"", ""/trunk/child1/child2/child3"");"
140543,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,182,,"        branchRev = addNodes(branchRev, ""/branch1"", ""/branch1/child1"", ""/branch1/child1/child2"", ""/branch1/child1/child2/child3"");"
140544,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,182,,"        branchRev = addNodes(branchRev, ""/branch1"", ""/branch1/child1"", ""/branch1/child1/child2"", ""/branch1/child1/child2/child3"");"
140545,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,187,,"        addNodes(null, ""/trunk/child1/child2/child3/child4"", ""/trunk/child5"");"
140546,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,238,,"        branchRev2 = addNodes(branchRev2, ""/branch2"", ""/branch2/child2"");"
140547,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,283,,"        String rev = setProp(null, ""/trunk/prop1"", ""value1"");"
140548,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchMergeTest.java,295,,"            fail(""Expected: Concurrent modification exception"");"
140549,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKBranchTest.java,89,,"        String branchRev1 = mk.commit(""/test/node"", ""+\""branch-node\"":{}"", branchRev, null);"
140550,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitAddTest.java,38,,"        mk.commit(""/"", ""+\""a\"" : {}"", null, null);"
140551,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitAddTest.java,42,,"        assertPropertyValue(obj, "":childNodeCount"", 1L);"
140552,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitAddTest.java,50,,"        assertTrue(mk.nodeExists(""/a/b"", null));"
140553,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitAddTest.java,52,,"        assertTrue(mk.nodeExists(""/a/d"", null));"
140554,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitAddTest.java,61,,"        assertTrue(mk.nodeExists(""/a/b/c"", null));"
140555,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitAddTest.java,121,,"        assertPropertyValue(obj, ""key1"", ""value1"");"
140556,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitAddTest.java,150,,"        assertPropertyValue(obj, ""_id"", ""value"");"
140557,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitCopyTest.java,46,,"        assertTrue(mk.nodeExists(""/a/b"", null));"
140558,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitCopyTest.java,97,,"        assertPropertyValue(obj, ""a/key1"", ""value1"");"
140559,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitCopyTest.java,97,,"        assertPropertyValue(obj, ""a/key1"", ""value1"");"
140560,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitCopyTest.java,103,,"        assertPropertyValue(obj, ""c/key1"", ""value1"");"
140561,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitCopyTest.java,135,,"        mk.commit(""/"", ""+\""a\"":{}"", null, null);"
140562,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitCopyTest.java,182,,"                        ""*\""a\"":\""c\"""", null, null);"
140563,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitMoveTest.java,47,,"        assertTrue(mk.nodeExists(""/a/b"", null));"
140564,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitMoveTest.java,67,,"        assertTrue(mk.nodeExists(""/c/b"", null));"
140565,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitMoveTest.java,105,,"        assertTrue(mk.nodeExists(""/e/b/c/d"", null));"
140566,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitMoveTest.java,123,,"        assertPropertyValue(obj, ""key1"", ""value1"");"
140567,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitMoveTest.java,123,,"        assertPropertyValue(obj, ""key1"", ""value1"");"
140568,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitMoveTest.java,158,,"        mk.commit(""/"", ""+\""a\"":{}"", null, null);"
140569,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitMoveTest.java,208,,"                        "">\""a\"":\""c\"""", null, null);"
140570,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKCommitRemoveTest.java,73,,"        assertTrue(mk.nodeExists(""/a/b"", null));"
140571,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKDiffTest.java,49,,"        String rev1 = mk.commit(""/"", ""+\""level1\"":{}"", null, null);"
140572,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKDiffTest.java,50,,"        assertTrue(mk.nodeExists(""/level1"", null));"
140573,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKDiffTest.java,65,,"        rev1 = mk.commit(""/"", ""+\""level1/level2\"":{}"", null, null);"
140574,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKDiffTest.java,67,,"        assertTrue(mk.nodeExists(""/level1/level2"", null));"
140575,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKDiffTest.java,147,,"        assertTrue(mk.nodeExists(""/level1new"", null));"
140576,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKDiffTest.java,148,,"        assertTrue(mk.nodeExists(""/level1new/level2"", null));"
140577,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKDiffTest.java,192,,"        assertPropertyExists(obj, ""prop1"");"
140578,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKDiffTest.java,266,,"        String base = mk.commit(""/"", ""+\""foo\"":{}"", null, null);"
140579,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKDiffTest.java,314,,"        assertTrue(jsop, jsop.contains(""^\""/node-new\""""));"
140580,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKGetNodesTest.java,57,,"        assertPropertyValue(root, "":childNodeCount"", 1L);"
140581,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKNodeExistsTest.java,39,,"        exists = mk.nodeExists(""/a/b"", revisionId);"
140582,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKRebaseTest.java,74,,"        assertNotNull(mk.getNodes(""/x/a"", null, 0, 0, -1, null));"
140583,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKRebaseTest.java,86,,"        mk.commit("""", ""+\""/x\"":{\""y\"":{}}"", null, null);"
140584,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKRebaseTest.java,88,,"        branch = mk.commit("""", ""-\""/x/y\"""", branch, null);"
140585,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKRebaseTest.java,94,,"        assertNotNull(mk.getNodes(""/x/y"", null, 0, 0, -1, null));"
140586,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKRebaseTest.java,111,,"        assertTrue(branchNode.contains(""\""p\"":42""));"
140587,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKRebaseTest.java,112,,"        assertFalse(branchNode.contains(""\""q\"":99""));"
140588,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKRebaseTest.java,125,,"        mk.commit("""", ""+\""/x\"":{\""y\"":{\""p\"":42}}"", null, null);"
140589,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKRebaseTest.java,127,,"        branch = mk.commit("""", ""^\""/x/y/p\"":null"", branch, null);"
140590,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKRebaseTest.java,169,,"        branch = mk.commit("""", ""^\""/x/y/p\"":99"", branch, null);"
140591,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKRebaseTest.java,174,,"        assertTrue(branchNode.contains(""\""p\"":99""));"
140592,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKRebaseTest.java,184,,"    @Ignore(""Conflict handling"")"
140593,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKRebaseTest.java,212,,"        String conflict = mk.getNodes(""/x/y/:conflict"", branch, 100, 0, -1, null);"
140594,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKResetTest.java,41,,"        rev = addNodes(rev, ""/foo"");"
140595,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKResetTest.java,51,,"            fail(""DocumentStoreException expected"");"
140596,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKResetTest.java,59,,"        addNodes(rev, ""/bar"");"
140597,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKResetTest.java,116,,"            fail(""merge with conflict must fail"");"
140598,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKResetTest.java,169,,"        String b1 = addNodes(b0, ""/foo/bar"");"
140599,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentMKTestBase.java,107,,"        assertNotNull(""not found: "" + relPath, val);"
140600,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranchInCommitHookTest.java,58,,"        builder.child(""test"");"
140601,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranchesTest.java,151,,"            NodeBuilder child = nb.child(""foo"").child(""node-"" + i);"
140602,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranchesTest.java,151,,"            NodeBuilder child = nb.child(""foo"").child(""node-"" + i);"
140603,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranchesTest.java,171,,"                    NodeBuilder nb = after.builder().child(""bar"");"
140604,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranchesTest.java,181,,"                    throw new CommitFailedException(CommitFailedException.OAK, 1, ""failure"");"
140605,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranchesTest.java,184,,"            fail(""Merge must fail with CommitFailedException"");"
140606,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranchesTest.java,192,,"        Path bar = Path.fromString(""/bar"");"
140607,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreIT.java,90,,"        builder1.child(""node"");"
140608,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreServiceTest.java,82,,"        String persistentCache = FilenameUtils.concat(repoHome, ""cache"");"
140609,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreServiceTest.java,88,,"        String journalCache = FilenameUtils.concat(repoHome, ""diff-cache"");"
140610,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreSweepTest.java,82,,"        builder.child(""foo"");"
140611,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,176,,"        builder.child(""node2"");"
140612,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,255,,"            root.child(""node-"" + i);"
140613,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,292,,"        builder.child(""updateNode"").setProperty(""foo"", ""bar"");"
140614,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,292,,"        builder.child(""updateNode"").setProperty(""foo"", ""bar"");"
140615,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,307,,"                        .updateProperty(Path.fromString(""/updateNode""), ""foo"", ""baz"")"
140616,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,337,,"        assertNotNull(""document with id "" + id + "" does not exist"", doc);"
140617,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,379,,"        b2.setProperty(""q"", ""value"");"
140618,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,461,,"                assertEquals(""test"", p.getValue(Type.STRING));"
140619,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,479,,"        builder1.child(""node"");"
140620,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,488,,"        builder2.child(""node"").child(""child-2"");"
140621,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,498,,"        builder1.child(""node"").child(""child-1"");"
140622,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,563,,"        builder.child(""test"").setProperty(""prop"", ""initial"");"
140623,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,574,,"        NodeDocument doc = docStore.find(NODES, Utils.getIdFromPath(""/test""));"
140624,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,720,,"            ns1.getMBean().recover(""/foo"", -1);"
140625,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,757,,"            fail(""must fail with DocumentStoreException"");"
140626,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,1105,,"        assertFalse(""Non existing children should be reported as such"", nonExistingChild.exists());"
140627,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,1153,,"            parentBuilder.child(""child"" + i);"
140628,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,1213,,"        NodeBuilder parentBuilder = builder.child(""parent"");"
140629,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,1294,,"            fail(""must fail with CommitFailedException"");"
140630,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,1316,,"        builder.child("":hidden"");"
140631,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,1339,,"            fail(""parent node of unseen children must not get deleted"");"
140632,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,1371,,"        builder.child("":hidden"").child(""parent1"");"
140633,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,1454,,"        builder.child("":dynHidden"").child(""c"");"
140634,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,2934,,"        builder.child(""node-1"");"
140635,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreTest.java,3997,,"        System.setProperty(""oak.documentMK.createOrUpdateBatchSize"","
140636,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentSplitTest.java,92,,"        revisions.add(Revision.fromString(mk.commit(""/"", ""+\""foo\"":{}+\""bar\"":{}"", null, null)));"
140637,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentSplitTest.java,126,,"        NodeDocument doc = store.find(NODES, Utils.getIdFromPath(""/foo""));"
140638,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentSplitTest.java,209,,"        Map<Revision, String> valueMap = doc.getValueMap(""prop"");"
140639,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentSplitTest.java,247,,"        NodeDocument doc = ds.find(NODES, Utils.getIdFromPath(""/test""));"
140640,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentSplitTest.java,333,,"        NodeDocument doc = store.find(NODES, Utils.getIdFromPath(""/test/foo""));"
140641,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentSplitTest.java,368,,"        b1.child(""test"").child(""foo"").child(""bar"");"
140642,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentSplitTest.java,368,,"        b1.child(""test"").child(""foo"").child(""bar"");"
140643,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentSplitTest.java,368,,"        b1.child(""test"").child(""foo"").child(""bar"");"
140644,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentSplitTest.java,842,,"                        builder.child(""foo"").child(""node"").child(""node"").child(""node"").child(""node"");"
140645,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentStoreExceptionTest.java,38,,"        String msg = ""foo"";"
140646,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentStoreFixture.java,51,,"            ""rdb-db2-jdbc-passwd"", ""geheim""));"
140647,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentStorePerformanceTest.java,91,,"                up.set(""foo"", pval);"
140648,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentStorePerformanceTest.java,101,,"        LOG.info(""document creation with property of size "" + size + "" and batch size "" + amount + "" for "" + super.dsname + "" was """
140649,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentStorePerformanceTest.java,102,,"                + cnt + "" in "" + duration + ""ms ("" + (cnt / (duration / 1000f)) + ""/s)"");"
140650,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentStorePerformanceTest.java,102,,"                + cnt + "" in "" + duration + ""ms ("" + (cnt / (duration / 1000f)) + ""/s)"");"
140651,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentStorePerformanceTest.java,102,,"                + cnt + "" in "" + duration + ""ms ("" + (cnt / (duration / 1000f)) + ""/s)"");"
140652,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentStoreStatsTest.java,55,,"        stats.doneFindCached(Collection.NODES, ""foo"");"
140653,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/DocumentStoreStatsTest.java,84,,"        stats.doneQuery(100, Collection.NODES, ""foo"", ""bar"", false, 5, -1, false);"
140654,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ExternalChangesTest.java,95,,"        b1.setProperty(""foo1"", ""bar"");"
140655,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/HierarchyConflictTest.java,75,,"        root.child(""foo"").child(""bar"").child(""baz"");"
140656,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/HierarchyConflictTest.java,75,,"        root.child(""foo"").child(""bar"").child(""baz"");"
140657,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/IsolationTest.java,32,,"        branchRev1 = mk.commit(""/test"", ""+\""node1\"":{}"", branchRev1, null);"
140658,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/IsolationTest.java,40,,"        assertNodesExist(branchRev1, ""/test/node1"", ""/test/node3"");"
140659,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/JournalDiffLoaderTest.java,78,,"        builder.child(""foo"");"
140660,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/JournalDiffLoaderTest.java,111,,"        builder.child(""bar"");"
140661,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/JournalDiffLoaderTest.java,134,,"        builder.child(""baz"");"
140662,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/JournalEntryTest.java,78,,"        sort.add(""/foo"");"
140663,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/JournalEntryTest.java,79,,"        sort.add(""/foo/a"");"
140664,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/JournalEntryTest.java,80,,"        sort.add(""/foo/b"");"
140665,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/JournalEntryTest.java,81,,"        sort.add(""/bar"");"
140666,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/JournalEntryTest.java,82,,"        sort.add(""/bar/a"");"
140667,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/JournalEntryTest.java,83,,"        sort.add(""/bar/b"");"
140668,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/JournalEntryTest.java,362,,"        assertFalse(""Incorrect hasChanges"", entry.hasChanges());"
140669,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/JournalEntryTest.java,366,,"        assertEquals(""Incorrect number of paths"", 2, entry.getNumChangedNodes());"
140670,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/JournalGCTest.java,87,,"        builder.child(""foo"");"
140671,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/LargeTreeOperationTest.java,39,,"        NodeBuilder test = builder.child(""test"");"
140672,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/LastRevRecoveryRandomizedIT.java,91,,"        currentState.put(""/root"", ns.getRoot().getChildNode(""root""));"
140673,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/LastRevRecoveryRandomizedIT.java,266,,"        assertTrue(""missing nodes: "" + states.keySet() + "" (seed="" + SEED + "")"","
140674,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/MongoDbTest.java,49,,"        index.put(""_mod"", -1L);"
140675,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/MongoDbTest.java,51,,"        index.put(""_id"", 1L);"
140676,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/MongoDocumentStoreIT.java,50,,"        final String id = Utils.getIdFromPath(""/test"");"
140677,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/MongoDocumentStoreTest.java,91,,"        updateOp.setMapEntry(""property1"", r1, ""value1"");"
140678,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/MongoDocumentStoreTest.java,91,,"        updateOp.setMapEntry(""property1"", r1, ""value1"");"
140679,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/MongoDocumentStoreTest.java,92,,"        updateOp.increment(""property2"", 1);"
140680,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/MongoDocumentStoreTest.java,93,,"        updateOp.set(""property3"", ""value3"");"
140681,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/MongoDocumentStoreTest.java,93,,"        updateOp.set(""property3"", ""value3"");"
140682,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/MongoDocumentStoreTest.java,122,,"            String path = ""/node"" + i;"
140683,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/MongoDocumentStoreTest.java,190,,"        op.setMapEntry(""map"", r, ""value"");"
140684,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/MongoDocumentStoreTest.java,190,,"        op.setMapEntry(""map"", r, ""value"");"
140685,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/MongoDocumentStoreTest.java,194,,"        op.set(""prop"", ""value"");"
140686,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/MultiDocumentStoreTest.java,73,,"                up.set(""_createdby"", ""ds1"");"
140687,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/MultiDocumentStoreTest.java,201,,"        op.set(""_ds1"", 1);"
140688,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/MultiDocumentStoreTest.java,384,,"                UpdateOp op = new UpdateOp(getIdFromPath(""/bulktracelog-"" + i), true);"
140689,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/NodeDocumentTest.java,324,,"            if (builder.hasChildNode(""test"")) {"
140690,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/NodeDocumentTest.java,326,,"                builder.child(""foo"").remove();"
140691,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/NodeDocumentTest.java,335,,"                        NODES, Utils.getIdFromPath(""/test""));"
140692,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/NodeDocumentTest.java,356,,"        assertTrue(""too many calls for previous documents: "" + prevDocCalls,"
140693,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/NodeDocumentTest.java,975,,"        setProperty(ns, ""/test/p"", 1);"
140694,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/OrphanedBranchTest.java,95,,"            NodeBuilder child = builder.child(""foo"");"
140695,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/OrphanedBranchTest.java,101,,"                child.setProperty(""prop"", count++);"
140696,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/PathTest.java,40,,"    private final Path foo = new Path(root, ""foo"");"
140697,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/PathTest.java,41,,"    private final Path fooBar = new Path(foo, ""bar"");"
140698,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/PathTest.java,42,,"    private final Path fooBarQuux = new Path(fooBar, ""quux"");"
140699,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/RandomizedClusterTest.java,218,,"                log(""get "" + node);"
140700,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/RecoveryLockTest.java,66,,"                null, ""node1"", 1);"
140701,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/RecoveryTest.java,60,,"        builder.child(""node"");"
140702,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/RecoveryTest.java,61,,"        builder.child(""parent"").child(""test"").child(""c1"");"
140703,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/RecoveryTest.java,61,,"        builder.child(""parent"").child(""test"").child(""c1"");"
140704,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ResurrectNodeAfterRevisionGCTest.java,86,,"        builder.child(""foo"").child(""bar"");"
140705,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ResurrectNodeAfterRevisionGCTest.java,86,,"        builder.child(""foo"").child(""bar"");"
140706,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/RevisionGCTest.java,83,,"        b.child(""child"");"
140707,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/SharedBlobStoreGCTest.java,112,,"        log.debug(""Initialized {}"", cluster1);"
140708,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/SimpleTest.java,59,,"        assertEquals(""0:/"", Utils.getIdFromPath(""/""));"
140709,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/SimpleTest.java,61,,"        assertEquals(""1:/test"", Utils.getIdFromPath(""/test""));"
140710,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/SimpleTest.java,107,,"        String r0 = mk.getNodes(""/"", rev0, 0, 0, Integer.MAX_VALUE, "":id"");"
140711,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/SimpleTest.java,201,,"        String test2 = mk.getNodes(""/test2"", rev, 0, 0, Integer.MAX_VALUE, null);"
140712,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/SimpleTest.java,275,,"        mk.commit(""/testDel"", ""+\""a\"":{\""name\"": \""World\""}"", null, null);"
140713,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/SimpleTest.java,323,,"                    key("":childNodeCount"").value(0).endObject();"
140714,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/Sweep2Test.java,550,,"        builder.child(""base"").child(""camp"");"
140715,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/Sweep2Test.java,550,,"        builder.child(""base"").child(""camp"");"
140716,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/Sweep2TestHelper.java,162,,"        Set<Revision> expectedBcs = new HashSet<>(expectedNode.getValueMap(""_bc"").keySet());"
140717,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/UpdateOpTest.java,37,,"        UpdateOp.Key k1 = new UpdateOp.Key(""foo"", null);"
140718,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/UpdateOpTest.java,66,,"        op1.set(""p"", ""value"");"
140719,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/UpdateUtilsTest.java,66,,"        op.setMapEntry(""t"", r, ""value"");"
140720,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/UpdateUtilsTest.java,164,,"        op.notEquals(""other"", 7L);"
140721,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/V18BranchCommitTest.java,60,,"        builder.child(""foo"");"
140722,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/V18BranchCommitTest.java,64,,"        NodeDocument doc = docForPath(""/foo"");"
140723,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/ValueMapTest.java,54,,"        op.setMapEntry(""prop"", r0, ""0"");"
140724,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/VersionGCDeletionTest.java,339,,"        NodeBuilder node = builder.child(""node"");"
140725,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/VersionGCQueryTest.java,90,,"            builder.child(""test"").child(""node-"" + i).setProperty(p);"
140726,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/VersionGCSplitDocTest.java,127,,"        builder.child(""createNoBranchSplitDocument"" + longpath).child(parent).child(""bar"");"
140727,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/VersionGCSplitDocTest.java,147,,"        b1.child(""createCommitOnlyAndNoChildSplitDocument"" + longpath).child(parent1).child(child).child(""bar"");"
140728,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/VersionGCSplitDocTest.java,158,,"                    .setProperty(""prop"", i);"
140729,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/VersionGCSplitDocTest.java,170,,"        b1.child(""createCommitOnlySplitDocument"" + longpath).child(parent1).child(child).child(""bar"");"
140730,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/VersionGCSplitDocTest.java,255,,"        builder.child(""qux"");"
140731,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/VersionGCWithSplitTest.java,116,,"        builder.child(""test"").setProperty(""prop"", -1);"
140732,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollectorIT.java,221,,"        gcSplitDocsInternal(""foo"");"
140733,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollectorIT.java,234,,"        b1.child(""test"").child(subNodeName).child(""bar"");"
140734,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollectorIT.java,234,,"        b1.child(""test"").child(subNodeName).child(""bar"");"
140735,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollectorIT.java,244,,"            b1.child(""test"").child(subNodeName).setProperty(""prop"",i);"
140736,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollectorIT.java,256,,"        builder.child(""qux"");"
140737,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollectorIT.java,302,,"        assertTrue(getDoc(""/test"").getLocalRevisions().isEmpty());"
140738,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollectorIT.java,413,,"        NodeDocument doc = getDoc(""/foo"");"
140739,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/blob/RDBBlobStoreFixture.java,43,,"            ""rdb-db2-jdbc-passwd"", ""geheim""));"
140740,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundledDocumentDifferTest.java,83,,"                .forType(""app:Asset"")"
140741,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundledDocumentDifferTest.java,117,,"        childBuilder(builder, ""/test/book.jpg/jcr:content"").setProperty(""foo"", ""bar"");"
140742,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundledDocumentDifferTest.java,117,,"        childBuilder(builder, ""/test/book.jpg/jcr:content"").setProperty(""foo"", ""bar"");"
140743,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundledDocumentDifferTest.java,126,,"        path = ""/test/book.jpg"";"
140744,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundledTypesRegistryTest.java,47,,"        builder.child(""nt:file"").setProperty(createProperty(PROP_PATTERN, asList(""jcr:content""), STRINGS));"
140745,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundledTypesRegistryTest.java,47,,"        builder.child(""nt:file"").setProperty(createProperty(PROP_PATTERN, asList(""jcr:content""), STRINGS));"
140746,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundledTypesRegistryTest.java,69,,"        builder.child(""mix:foo"").setProperty(createProperty(PROP_PATTERN, asList(""jcr:content""), STRINGS));"
140747,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundlingHandlerTest.java,48,,"        assertEquals(""foo"", handler.getPropertyPath(""foo""));"
140748,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundlingHandlerTest.java,63,,"        BundledTypesRegistry registry = BundledTypesRegistry.builder().forType(""nt:file"", ""jcr:content"").buildRegistry();"
140749,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundlingHandlerTest.java,65,,"        childBuilder(builder, ""sunrise.jpg/jcr:content"").setProperty(""jcr:data"", ""foo"");"
140750,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundlingHandlerTest.java,67,,"        type(childBuilder(builder, ""sunrise.jpg""), ""nt:file"");"
140751,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundlingHandlerTest.java,73,,"        BundlingHandler fileHandler = childHandler(handler, state, ""/sunrise.jpg"");"
140752,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundlorConflictTest.java,83,,"                .forType(""nt:file"", ""jcr:content"")"
140753,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundlorConflictTest.java,126,,"        createFile(builder.child(""test""), ""book.jpg"")"
140754,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundlorConflictTest.java,126,,"        createFile(builder.child(""test""), ""book.jpg"")"
140755,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundlorConflictTest.java,127,,"                .child(""jcr:content"").setProperty(""jcr:data"", ""test"");"
140756,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundlorConflictTest.java,135,,"        childBuilder(b1, ""/test/book.jpg/jcr:content"").setProperty(""jcr:data"", ""modified"");"
140757,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundlorConflictTest.java,141,,"            fail(""must fail with CommitFailedException"");"
140758,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundlorConflictTest.java,143,,"            assertThat(e.getMessage(), containsString(""ConflictException""));"
140759,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/BundlorUtilsTest.java,53,,"        Matcher m = new Include(""jcr:content"").createMatcher();"
140760,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,114,,"                .forType(""app:Asset"")"
140761,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,115,,"                    .include(""jcr:content"")"
140762,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,116,,"                    .include(""jcr:content/metadata"")"
140763,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,117,,"                    .include(""jcr:content/renditions"")"
140764,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,145,,"        NodeBuilder fileNode = newNode(""nt:file"");"
140765,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,146,,"        fileNode.child(""jcr:content"").setProperty(""jcr:data"", ""foo"");"
140766,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,146,,"        fileNode.child(""jcr:content"").setProperty(""jcr:data"", ""foo"");"
140767,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,147,,"        builder.child(""test"").setChildNode(""book.jpg"", fileNode.getNodeState());"
140768,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,147,,"        builder.child(""test"").setChildNode(""book.jpg"", fileNode.getNodeState());"
140769,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,161,,"        assertNull(getNodeDocument(""/test/book.jpg/jcr:content""));"
140770,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,162,,"        assertNotNull(getNodeDocument(""/test/book.jpg""));"
140771,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,247,,"                ""jcr:content/comments"" //Not bundled. Parent bundled"
140772,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,263,,"                ""jcr:content/metadata/xmp"", //not bundled"
140773,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,265,,"                ""jcr:content/renditions/original"","
140774,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,266,,"                ""jcr:content/renditions/original/jcr:content"""
140775,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,271,,"        DocumentNodeState appNode = (DocumentNodeState)getNode(store.getRoot(), ""test/book.jpg"");"
140776,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,275,,"                getBundlingPath(appNode.getChildNode(""jcr:content"").getChildNode(""metadata"")));"
140777,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,286,,"                ""/test/book.jpg/jcr:content/renditions"","
140778,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,316,,"        assertThat(childNames(appNode, ""jcr:content""), hasItems(""comments"", ""metadata"", ""renditions""));"
140779,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,375,,"        assertFalse(hasNodeProperty(""/test/book.jpg"", ""_children""));"
140780,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlingTest.java,551,,"        childBuilder(builder, ""/test/book.jpg/jcr:content"").setProperty(""foo"", ""bar"");"
140781,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/DocumentBundlorTest.java,43,,"        builder.setProperty(createProperty(PROP_PATTERN, asList(""x"", ""x/y""), STRINGS));"
140782,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/bundlor/IncludeTest.java,43,,"        assertTrue(new Include(""x/y"").match(""x""));"
140783,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/cache/CacheChangesTrackerTest.java,62,,"                return !""ignored"".equals(input);"
140784,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/cache/CacheChangesTrackerTest.java,89,,"        assertFalse(tracker.mightBeenAffected(""2:/parent/xyz""));"
140785,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/cache/CacheChangesTrackerTest.java,130,,"        CacheChangesTracker tracker = cache.registerTracker(ImmutableSet.of(""1:/xyz"", ""1:/abc"", ""1:/aaa""));"
140786,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/cache/CacheChangesTrackerTest.java,130,,"        CacheChangesTracker tracker = cache.registerTracker(ImmutableSet.of(""1:/xyz"", ""1:/abc"", ""1:/aaa""));"
140787,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/cache/CacheChangesTrackerTest.java,130,,"        CacheChangesTracker tracker = cache.registerTracker(ImmutableSet.of(""1:/xyz"", ""1:/abc"", ""1:/aaa""));"
140788,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/mongo/JournalIT.java,170,,"        getOrCreate(ns1, ""/child"", true);"
140789,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/mongo/MongoDBExceptionTest.java,78,,"            fail(""DocumentStoreException expected"");"
140790,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/mongo/MongoDBExceptionTest.java,81,,"            assertTrue(""Exception message does not contain id: '"" + e.getMessage() + ""'"","
140791,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/mongo/MongoUtilsTest.java,70,,"        MongoUtils.createIndex(collection, ""foo"", true, false, true);"
140792,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/mongo/MongoUtilsTest.java,71,,"        MongoUtils.createIndex(collection, ""bar"", false, true, false);"
140793,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/mongo/MongoUtilsTest.java,72,,"        MongoUtils.createIndex(collection, new String[]{""baz"", ""qux""},"
140794,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/mongo/ReadPreferenceIT.java,90,,"                mongoDS.getMongoReadPreference(NODES,""foo"", DocumentReadPreference.PRIMARY));"
140795,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/persistentCache/BroadcastTest.java,60,,"        FileUtils.deleteDirectory(new File(""target/broadcastTest""));"
140796,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/persistentCache/CacheTest.java,51,,"            FileUtils.deleteDirectory(new File(""target/cacheTest""));"
140797,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBConnectionWrapper.java,55,,"    @SuppressWarnings(""unused"")"
140798,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentSerializerTest.java,61,,"        RDBRow row = new RDBRow(""_foo"", 1L, true, 1l, 2l, 3l, 0L, 0L, 0L, ""{}"", null);"
140799,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentSerializerTest.java,83,,"        RDBRow row = new RDBRow(""_foo"", 0L, false, 1l, 2l, 3l, 0L, 0L, 0L, ""\""blob\"""", ""{}"".getBytes(""UTF-8""));"
140800,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentSerializerTest.java,83,,"        RDBRow row = new RDBRow(""_foo"", 0L, false, 1l, 2l, 3l, 0L, 0L, 0L, ""\""blob\"""", ""{}"".getBytes(""UTF-8""));"
140801,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentSerializerTest.java,121,,"            fail(""should fail"");"
140802,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreJDBCTest.java,136,,"            setIdInStatement(st, 1, ""key-1"");"
140803,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreJDBCTest.java,137,,"            setIdInStatement(st, 2, ""key-2"");"
140804,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreJDBCTest.java,138,,"            setIdInStatement(st, 3, ""key-3"");"
140805,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStorePerformanceTest.java,133,,"                    PreparedStatement stmt = connection.prepareStatement(""update "" + table + "" set MODCOUNT = ? where ID = ?"");"
140806,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreSchemaUpgradeTest.java,84,,"            assertEquals(op.getTablePrefix() + ""_NODES"", meta.getName());"
140807,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreSchemaUpgradeTest.java,122,,"            assertEquals(""unexpected # of log entries: "" + logCustomizer.getLogs(), RDBDocumentStore.getTableNames().size(),"
140808,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreSchemaUpgradeTest.java,144,,"            UpdateOp testInsert = new UpdateOp(Utils.getIdFromPath(""/foo""), true);"
140809,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentStoreTest.java,98,,"                up.set(""_test"", base);"
140810,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/rdb/RDBPreparedStatementWrapper.java,156,,"                    message += "" -> "" + x.getMessage();"
140811,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/secondary/SecondaryStoreCacheTest.java,84,,"        create(nb, ""/a/b"", ""/a/c"", ""/x/y/z"");"
140812,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/secondary/SecondaryStoreCacheTest.java,84,,"        create(nb, ""/a/b"", ""/a/c"", ""/x/y/z"");"
140813,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/secondary/SecondaryStoreObserverTest.java,69,,"        create(nb, ""/a/b"", ""/a/c"", ""/x/y/z"");"
140814,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/secondary/SecondaryStoreObserverTest.java,69,,"        create(nb, ""/a/b"", ""/a/c"", ""/x/y/z"");"
140815,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/secondary/SecondaryStoreObserverTest.java,69,,"        create(nb, ""/a/b"", ""/a/c"", ""/x/y/z"");"
140816,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/secondary/SecondaryStoreObserverTest.java,89,,"        create(nb, ""/a/d"");"
140817,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/util/UtilsTest.java,87,,"                Utils.getPreviousIdFor(Path.fromString(""/a/b/c/d/e/f/g/h/i/j/k/l/m""), r, 3));"
140818,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/util/UtilsTest.java,96,,"        assertFalse(Utils.isPreviousDocId(""foo""));"
140819,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/util/UtilsTest.java,224,,"        revs = ImmutableList.of(Revision.fromString(""r1-0-1""));"
140820,./TargetProjects/jackrabbit-oak/oak-store-document/src/test/java/org/apache/jackrabbit/oak/plugins/document/util/UtilsTest.java,230,,"                Revision.fromString(""r2-0-2""));"
140821,./TargetProjects/jackrabbit-oak/oak-store-spi/src/main/java/org/apache/jackrabbit/oak/plugins/memory/MultiPropertyState.java,61,,"    @SuppressWarnings(""unchecked"")"
140822,./TargetProjects/jackrabbit-oak/oak-store-spi/src/main/java/org/apache/jackrabbit/oak/plugins/value/jcr/ValueImpl.java,184,,"                throw new ValueFormatException(""Incompatible type "" + PropertyType.nameFromValue(getType()));"
140823,./TargetProjects/jackrabbit-oak/oak-store-spi/src/main/java/org/apache/jackrabbit/oak/spi/commit/CompositeConflictHandler.java,91,,"        throw new IllegalStateException(""No conflict handler for "" +"
140824,./TargetProjects/jackrabbit-oak/oak-store-spi/src/main/java/org/apache/jackrabbit/oak/spi/commit/CompositeConflictHandler.java,92,,"                ADD_EXISTING_PROPERTY + "" conflict"");"
140825,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/json/JsonDeserializerTest.java,51,,"        builder.child(""a"").setProperty(""foo"", ""bar"");"
140826,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/json/JsopDiffTest.java,36,,"        PropertyState before = StringPropertyState.stringProperty(""foo"", ""bar"");"
140827,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/json/TypeCodesTest.java,31,,"        assertEquals(""str:foo"", TypeCodes.encode(PropertyType.STRING, ""foo""));"
140828,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/json/TypeCodesTest.java,31,,"        assertEquals(""str:foo"", TypeCodes.encode(PropertyType.STRING, ""foo""));"
140829,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/plugins/memory/MemoryNodeBuilderTest.java,72,,"        assertFalse(childA.hasProperty(""test""));"
140830,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/plugins/memory/MemoryNodeBuilderTest.java,85,,"        childA.setProperty(""test"", ""bar"");"
140831,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/plugins/memory/MemoryNodeBuilderTest.java,123,,"        for (String name : new String[] {""x"", ""new""}) {"
140832,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/plugins/memory/MemoryNodeBuilderTest.java,281,,"        NodeBuilder any = rootBuilder.getChildNode(""any"");"
140833,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/plugins/memory/MemoryNodeBuilderTest.java,332,,"        rootBuilder.child(""a"").child(""c"").setProperty(""c2"", ""c2Value"");"
140834,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/plugins/memory/PropertyBuilderTest.java,33,,"        builder.setName(""foo"").setValue(""bar"");"
140835,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/plugins/memory/PropertyBuilderTest.java,33,,"        builder.setName(""foo"").setValue(""bar"");"
140836,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/plugins/memory/PropertyStateValueTest.java,58,,"        assertEquals(""v1 and v2 should be equals"", 0, v1.compareTo(v2));"
140837,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/plugins/memory/PropertyStateValueTest.java,65,,"        assertTrue(""v1 < v2"", v1.compareTo(v2) < 0);"
140838,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/plugins/memory/PropertyStateValueTest.java,66,,"        assertTrue(""v2 > v1"", v2.compareTo(v1) > 0);"
140839,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/plugins/memory/PropertyStateValueTest.java,72,,"        assertTrue(""v1 > v2"", v1.compareTo(v2) > 0);"
140840,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/plugins/memory/PropertyStateValueTest.java,73,,"        assertTrue(""v2 < v1"", v2.compareTo(v1) < 0);"
140841,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/plugins/memory/PropertyStatesTest.java,46,,"        PropertyState s = EmptyPropertyState.emptyProperty(""test"", Type.STRINGS);"
140842,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/commit/MoveTrackerTest.java,62,,"        mt1.addMove(""/a/b"", ""/c"");"
140843,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/commit/MoveTrackerTest.java,164,,"        mt5.addMove(""/c"", ""/b/d"");"
140844,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/commit/MoveTrackerTest.java,192,,"        mt.addMove(""/a/b/c"", ""/d/e/f"");"
140845,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/commit/MoveTrackerTest.java,253,,"                .addMove(""/a/b/c"", ""/a/f/c"", ""/a/b/c"")"
140846,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/commit/MoveTrackerTest.java,254,,"                .addMove(""/a/f/c/d"", ""/a/b/d"", ""/a/b/c/d"")"
140847,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/commit/MoveTrackerTest.java,254,,"                .addMove(""/a/f/c/d"", ""/a/b/d"", ""/a/b/c/d"")"
140848,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/commit/MoveTrackerTest.java,254,,"                .addMove(""/a/f/c/d"", ""/a/b/d"", ""/a/b/c/d"")"
140849,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/commit/MoveTrackerTest.java,255,,"                .addMove(""/a/b/d/e"", ""/a/f/c/e"", ""/a/b/c/d/e"");"
140850,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/commit/MoveTrackerTest.java,255,,"                .addMove(""/a/b/d/e"", ""/a/f/c/e"", ""/a/b/c/d/e"");"
140851,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/commit/MoveTrackerTest.java,255,,"                .addMove(""/a/b/d/e"", ""/a/f/c/e"", ""/a/b/c/d/e"");"
140852,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/commit/SubtreeValidatorTest.java,33,,"        Validator validator = new SubtreeValidator(delegate, ""one"", ""two"");"
140853,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/commit/SubtreeValidatorTest.java,33,,"        Validator validator = new SubtreeValidator(delegate, ""one"", ""two"");"
140854,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/filter/PathFilterTest.java,40,,"        PathFilter p = new PathFilter(of(""/""), of(""/etc""));"
140855,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/filter/PathFilterTest.java,44,,"        assertEquals(PathFilter.Result.EXCLUDE, p.filter(""/etc/workflow""));"
140856,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/state/MoveDetectorTest.java,59,,"        NodeState moved1 = move(root.builder(), ""/test/x"", ""/test/y/xx"").getNodeState();"
140857,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/state/MoveDetectorTest.java,59,,"        NodeState moved1 = move(root.builder(), ""/test/x"", ""/test/y/xx"").getNodeState();"
140858,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/state/MoveDetectorTest.java,127,,"        move(rootBuilder, ""/test/z"", ""/test/y/z"");"
140859,./TargetProjects/jackrabbit-oak/oak-store-spi/src/test/java/org/apache/jackrabbit/oak/spi/state/MoveDetectorTest.java,127,,"        move(rootBuilder, ""/test/z"", ""/test/y/z"");"
140860,./TargetProjects/jackrabbit-oak/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/AsciiArtTicker.java,43,,"            "" | |___ "","
140861,./TargetProjects/jackrabbit-oak/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/AsciiArtTicker.java,45,,"            ""        "","
140862,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/IncludeExcludeSidegradeTest.java,81,,"                ""/content/foo/en"","
140863,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/IncludeExcludeSidegradeTest.java,82,,"                ""/content/assets/foo/2015/02"","
140864,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/IncludeExcludeSidegradeTest.java,83,,"                ""/content/assets/foo/2015/01"","
140865,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/IncludeExcludeSidegradeTest.java,84,,"                ""/content/assets/foo/2014"""
140866,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/IncludeExcludeSidegradeTest.java,109,,"        Session aliceSession = targetRepository.login(new SimpleCredentials(""alice"", ""bar"".toCharArray()));"
140867,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/IncludeExcludeSidegradeTest.java,146,,"                ""/content/assets/foo"","
140868,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/IncludeExcludeUpgradeTest.java,35,,"        JcrUtils.getOrCreateByPath(""/content/foo/de"", ""nt:folder"", session);"
140869,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/PrivilegeUpgradeTest.java,85,,"        privilegeManager.registerPrivilege(""test:privilege"", false, null);"
140870,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/PrivilegeUpgradeTest.java,86,,"        privilegeManager.registerPrivilege(""test:aggregate"", false, new String[] { ""jcr:read"", ""test:privilege"" });"
140871,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/PrivilegeUpgradeTest.java,87,,"        privilegeManager.registerPrivilege(""test:privilege2"", true, null);"
140872,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/PrivilegeUpgradeTest.java,88,,"        privilegeManager.registerPrivilege(""test:aggregate2"", true,"
140873,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepeatedRepositoryUpgradeTest.java,148,,"        JcrUtils.getOrCreateByPath(""/content/child1/grandchild1"", ""nt:unstructured"", session);"
140874,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositorySidegradeTest.java,111,,"            registry.registerNamespace(""test"", ""http://www.example.org/"");"
140875,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositorySidegradeTest.java,115,,"            template.setName(""test:unstructured"");"
140876,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositorySidegradeTest.java,147,,"            Node child = versionable.addNode(""child"", ""test:referenceable"");"
140877,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositorySidegradeTest.java,148,,"            child.addNode(""child2"", NT_UNSTRUCTURED);"
140878,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositorySidegradeTest.java,151,,"            session.getWorkspace().getVersionManager().checkin(""/versionable"");"
140879,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositorySidegradeTest.java,158,,"                properties.setProperty(""binary"", binary);"
140880,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositorySidegradeTest.java,166,,"            properties.setProperty(""reference"", referenceable);"
140881,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositorySidegradeTest.java,167,,"            properties.setProperty(""weak_reference"", session.getValueFactory().createValue(referenceable, true));"
140882,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositorySidegradeTest.java,268,,"            assertTrue(session.nodeExists(""/properties""));"
140883,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositorySidegradeTest.java,336,,"            assertTrue(session.nodeExists(""/referenceable""));"
140884,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgradeTest.java,79,,"        registry.registerNamespace(""test"", ""http://www.example.org/"");"
140885,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgradeTest.java,83,,"        template.setName(""test:unstructured"");"
140886,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgradeTest.java,112,,"        Node child = versionable.addNode(""child"", ""test:referenceable"");"
140887,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgradeTest.java,113,,"        child.addNode(""child2"", NT_UNSTRUCTURED);"
140888,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgradeTest.java,117,,"        sns.addNode(""sibling"");"
140889,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgradeTest.java,121,,"        session.getWorkspace().getVersionManager().checkin(""/versionable"");"
140890,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgradeTest.java,127,,"            properties.setProperty(""binary"", binary);"
140891,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgradeTest.java,135,,"        properties.setProperty(""reference"", referenceable);"
140892,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgradeTest.java,136,,"        properties.setProperty(""weak_reference"", session.getValueFactory().createValue(referenceable, true));"
140893,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgradeTest.java,235,,"            assertTrue(session.nodeExists(""/properties""));"
140894,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgradeTest.java,303,,"            assertTrue(session.nodeExists(""/referenceable""));"
140895,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/SameNodeSiblingsTest.java,69,,"                Node parent = session.getRootNode().addNode(""parent"");"
140896,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/SameNodeSiblingsTest.java,70,,"                parent.addNode(""child"", ""nt:folder"");"
140897,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/SameNodeSiblingsTest.java,70,,"                parent.addNode(""child"", ""nt:folder"");"
140898,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/SameNodeSiblingsTest.java,73,,"                parent.addNode(""something_else"", ""nt:folder"");"
140899,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/UpgradeFromTwoSourcesTest.java,121,,"        JcrUtils.getOrCreateByPath(""/left/child1/grandchild1"", ""nt:unstructured"", session);"
140900,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/cli/AbstractOak2OakTest.java,149,,"        builder.setProperty(""checkpoint-state"", ""before"");"
140901,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/cli/AbstractOak2OakTest.java,151,,"        target.checkpoint(60000, singletonMap(""key"", ""123""));"
140902,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/cli/blob/AzureDataStoreFactoryTest.java,33,,"        props.setProperty(""cacheSize"", ""123"");"
140903,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/cli/blob/AzureDataStoreFactoryTest.java,35,,"        AzureDataStore ds = AzureDataStoreFactory.createDS(""/tmp"", props);"
140904,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/cli/blob/AzureDataStoreFactoryTest.java,37,,"        assertEquals(""/tmp"", readString(""path"", AbstractSharedCachingDataStore.class, ds));"
140905,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/cli/blob/LoopbackBlobStoreTest.java,70,,"    @Parameters(method = ""blobIds"")"
140906,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/cli/blob/LoopbackBlobStoreTest.java,271,,"    @SuppressWarnings(""unused"")"
140907,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/cli/blob/LoopbackBlobStoreTest.java,280,,"                        ""IDX1"",                             0,  4, 0,   4, ""IDX1"",                  4},"
140908,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/cli/blob/LoopbackBlobStoreTest.java,294,,"                        ""ID2XXXXXXXXXXXYYZY"",              10, 20, 3,  10, ""###XXXXYYZY#########"",  8},"
140909,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/cli/blob/S3DataStoreFactoryTest.java,33,,"        props.setProperty(""cacheSize"", ""123"");"
140910,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/cli/blob/StripConfigValueTest.java,28,,"        assertEquals(""123aaa"", stripValue(""B\""123aaa\""""));"
140911,./TargetProjects/jackrabbit-oak/oak-upgrade/src/test/java/org/apache/jackrabbit/oak/upgrade/util/VersionCopyTestUtils.java,64,,"        node.setProperty(""version"", ""root"");"
140912,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/collectionconverter/impl/AbstractCollectionConverterImpl.java,82,,"			throw new ObjectContentManagerException(""Cannot insert collection field : "" + collectionDescriptor.getFieldName()"
140913,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/collectionconverter/impl/AbstractCollectionConverterImpl.java,83,,"					+ "" of class "" + collectionDescriptor.getClassDescriptor().getClassName() + "". An item already exists."", iee);"
140914,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/impl/ObjectContentManagerImpl.java,254,,"            throw new org.apache.jackrabbit.ocm.exception.RepositoryException(""Impossible to get the object at "" + path, e);"
140915,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/impl/ObjectContentManagerImpl.java,438,,"            @SuppressWarnings(""deprecation"")"
140916,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/impl/ObjectContentManagerImpl.java,631,,"            if (!node.isNodeType(""mix:versionable"")) {"
140917,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/impl/ObjectContentManagerImpl.java,632,,"                throw new VersionException(""The object "" + path + ""is not versionable"");"
140918,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/impl/ObjectContentManagerImpl.java,632,,"                throw new VersionException(""The object "" + path + ""is not versionable"");"
140919,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/impl/ObjectContentManagerImpl.java,643,,"            throw new ObjectContentManagerException(""Cannot retrieve an object from a property path "" + path);"
140920,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/impl/ObjectContentManagerImpl.java,645,,"            throw new ObjectContentManagerException(""Cannot retrieve an object at path "" + path, pnfe);"
140921,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/impl/ObjectContentManagerImpl.java,1009,,"            throw new ObjectContentManagerException(""Cannot move the object from "" + srcPath + "" to "" + destPath + ""."""
140922,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/impl/ObjectContentManagerImpl.java,1009,,"            throw new ObjectContentManagerException(""Cannot move the object from "" + srcPath + "" to "" + destPath + ""."""
140923,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/impl/ObjectContentManagerImpl.java,1061,,"            throw new ObjectContentManagerException(""Cannot copy the object from "" + srcPath + "" to "" + destPath + ""."""
140924,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/objectconverter/impl/ObjectConverterImpl.java,367,,"			throw new ObjectContentManagerException(""Impossible to get the object at "" + path, pnfe);"
140925,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/objectconverter/impl/SimpleFieldsHelper.java,124,,"					""Cannot retrieve properties of object "" + object + "" from node "" + node, vfe);"
140926,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/objectconverter/impl/SimpleFieldsHelper.java,124,,"					""Cannot retrieve properties of object "" + object + "" from node "" + node, vfe);"
140927,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/manager/objectconverter/impl/SimpleFieldsHelper.java,233,,"			throw new ObjectContentManagerException(""Cannot persist properties of object "" + object + "". Value format exception."", vfe);"
140928,./TargetProjects/jackrabbit-ocm/src/main/java/org/apache/jackrabbit/ocm/reflection/ReflectionUtils.java,96,,"            throw new JcrMappingException(""Cannot access property """
140929,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/atomic/AnnotationAtomicTest.java,60,,"            a.setPath(""/test"");"
140930,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/atomic/AnnotationDefaultValueTest.java,54,,"	        a.setP1(""p1Value"");"
140931,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/atomic/DigesterAtomicTest.java,60,,"            a.setPath(""/test"");"
140932,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/atomic/DigesterDefaultValueTest.java,49,,"	        a.setP1(""p1Value"");"
140933,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/auto/AnnotationAutoTest.java,89,,"		assertNotNull(""folder 2 is null"", folder2);"
140934,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/auto/AnnotationAutoTest.java,90,,"		assertEquals(""Invalid number of cms object  found in folder2 children"", folder2.getChildren().size() ,0); // autoRetrieve = false"
140935,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/auto/AnnotationAutoTest.java,112,,"		assertTrue(""Invalid item in the collection"", this.contains(folder2.getChildren(), ""/folder2/document4"", DocumentImpl.class));"
140936,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/auto/DigesterAutoTest.java,83,,"		assertNotNull(""folder 2 is null"", folder2);"
140937,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/auto/DigesterAutoTest.java,84,,"		assertEquals(""Invalid number of cms object  found in folder2 children"", folder2.getChildren().size() ,0); // autoRetrieve = false"
140938,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/auto/DigesterAutoTest.java,106,,"		assertTrue(""Invalid item in the collection"", this.contains(folder2.getChildren(), ""/folder2/document4"", DocumentImpl.class));"
140939,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/basic/AnnotationCopyMoveTest.java,66,,"        a.setPath(""/test"");"
140940,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/basic/AnnotationCopyMoveTest.java,99,,"        ocm.copy(""/test"", ""/test2"");"
140941,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/basic/AnnotationCopyMoveTest.java,152,,"        	atomic.setPath(""/source"");"
140942,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/basic/AnnotationCopyMoveTest.java,160,,"        	ocm.move(""/source"", ""/result"");"
140943,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/basic/AnnotationSimpleTest.java,58,,"            a.setPath(""/test"");"
140944,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/basic/DigesterCopyMoveTest.java,67,,"        a.setPath(""/test"");"
140945,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/basic/DigesterCopyMoveTest.java,100,,"        ocm.copy(""/test"", ""/test2"");"
140946,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/basic/DigesterCopyMoveTest.java,153,,"        	atomic.setPath(""/source"");"
140947,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/basic/DigesterCopyMoveTest.java,161,,"        	ocm.move(""/source"", ""/result"");"
140948,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/basic/DigesterSimpleTest.java,58,,"            a.setPath(""/test"");"
140949,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/beanconverter/AnnotationBeanDescriptorTest.java,82,,"			a.setPath(""/test"");"
140950,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/beanconverter/AnnotationBeanDescriptorTest.java,130,,"        expD.setPath(""/someD"");"
140951,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/beanconverter/DigesterBeanDescriptorTest.java,83,,"			a.setPath(""/test"");"
140952,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/beanconverter/DigesterBeanDescriptorTest.java,131,,"        expD.setPath(""/someD"");"
140953,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationArrayListTest.java,57,,"            main.setPath(""/test"");"
140954,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationArrayListTest.java,85,,"            e1.setText(""Element 1"");"
140955,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationArrayListTest.java,143,,"            e3.setText(""Element 4"");"
140956,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationDefaultCollectionConverterImplTest.java,55,,"            a.setPath(""/test"");"
140957,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationDefaultCollectionConverterImplTest.java,70,,"            c1.setId(""first"");"
140958,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationDefaultCollectionConverterImplTest.java,71,,"            c1.setName(""First Element"");"
140959,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationDefaultCollectionConverterImplTest.java,74,,"            c2.setName(""Second Element"");"
140960,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationDefaultCollectionConverterImplTest.java,96,,"            assertNotNull(""a.collection is null"", a.getCollection());"
140961,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationDefaultCollectionConverterImplTest.java,98,,"            assertTrue(""Incorrect a.collection"", ((C) a.getCollection().iterator().next()).getId().equals(""first""));"
140962,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationHashMapTest.java,56,,"            main.setPath(""/test"");"
140963,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationHashMapTest.java,57,,"            main.setText(""Main text"");"
140964,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationHashMapTest.java,83,,"            e1.setText(""Element 1"");"
140965,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationHashMapTest.java,107,,"            assertTrue(""Incorrect para element"", map.get(""e1"").getText().equals(""Element 1""));"
140966,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationHashMapTest.java,134,,"            e3.setText(""Element 4"");"
140967,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationMultiValueCollectionConverterImplTest.java,57,,"            values.add(""Value1"");"
140968,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationNTCollectionConverterImplTest.java,58,,"            page.setPath(""/test"");"
140969,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationNTCollectionConverterImplTest.java,59,,"            page.setTitle(""Page Title"");"
140970,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationNTCollectionConverterImplTest.java,76,,"            paragraphs.add(new Paragraph(""Para 1""));"
140971,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationPersonListTest.java,46,,"        	aPerson.setPath(""/person"");"
140972,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationResidualNodesCollectionConverterImplTest.java,55,,"            residual.setPath(""/test"");"
140973,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationResidualNodesCollectionConverterImplTest.java,74,,"            map.put(""value2"", new Paragraph(""Value2""));"
140974,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationResidualPropertiesCollectionConverterImplTest.java,56,,"            residual.setPath(""/test"");"
140975,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationResidualPropertiesCollectionConverterImplTest.java,80,,"            map.put(""value5"", Arrays.asList(new String[]{ ""Value5-1"", ""Value5-2"" }));"
140976,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/AnnotationResidualPropertiesCollectionConverterImplTest.java,107,,"            map.put(""value16"", Arrays.asList(new String[]{ ""Value16-1"", ""Value16-2"" }));"
140977,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,53,,"        ocm.getSession().getRootNode().addNode(""test"");"
140978,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,54,,"        ocm.getSession().getRootNode().addNode(""references"");"
140979,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,61,,"        firstA.setPath(""/references/a1"");"
140980,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,62,,"        secondA.setPath(""/references/a2"");"
140981,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,63,,"        thirdA.setPath(""/references/a3"");"
140982,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,65,,"        firstA.setStringData(""the first"");"
140983,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,66,,"        secondA.setStringData(""the second"");"
140984,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,67,,"        thirdA.setStringData(""the third"");"
140985,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,87,,"        main.setPath(""/test/1"");"
140986,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,88,,"        main.getReferenceMap().put(""keyFirst"", firstA);"
140987,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,89,,"        main.getReferenceMap().put(""keySecond"", secondA);"
140988,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,90,,"        main.getReferenceMap().put(""keyThird"", thirdA);"
140989,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,96,,"        assertEquals(""Referenced objects in store were not retrieved."", 3, main.getReferenceMap().size());"
140990,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,97,,"        assertNotNull(""Reference could not be retrieved by its original key"", main.getReferenceMap().get(""keyFirst""));"
140991,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,119,,"        firstA.setStringData(""the data"");"
140992,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,282,,"        assertEquals(""DefaultMapConverterImpl failed to store or reload objects in map property: referencedMap"", 3, main.getReferenceMap().size());"
140993,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/BeanReferenceMapConverterImplTest.java,283,,"        assertNotNull(""DefaultMapConverterImpl failed to store objects in map"", main.getReferenceMap().get(""keyFirst""));"
140994,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterArrayListTest.java,56,,"            main.setPath(""/test"");"
140995,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterArrayListTest.java,80,,"            e1.setText(""Element 1"");"
140996,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterDefaultCollectionConverterImplTest.java,55,,"            a.setPath(""/test"");"
140997,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterDefaultCollectionConverterImplTest.java,70,,"            c1.setId(""first"");"
140998,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterDefaultCollectionConverterImplTest.java,71,,"            c1.setName(""First Element"");"
140999,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterDefaultCollectionConverterImplTest.java,74,,"            c2.setName(""Second Element"");"
