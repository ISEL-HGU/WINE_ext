Pattern ID,Pattern,Context,"# of Eq list","# of Frq",complexity,Num of Warnings in Method,NCL
1,final BigDecimal pi = new BigDecimal(Math.PI);,"final BigDecimal pi=new BigDecimal(Math.PI);
",0,26,5,748,"Modifier(VariableDeclarationStatement-modifiers, ),
SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
2,BigDecimal originalValue = new BigDecimal(Math.sqrt(2));,"BigDecimal originalValue=new BigDecimal(Math.sqrt(2));
",0,63,6,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
3,"lineItems[i] = new LineItem(""Widget""+i,quantity,new BigDecimal(price));","lineItems[i]=new LineItem(""Widget"" + i,quantity,new BigDecimal(price));
",0,0,8,,"SimpleName(ArrayAccess-array, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-rightOperand, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
4,trnRec1.getBankAcctTrnRec().getCurAmt().setAmt(new java.math.BigDecimal(2000.35));,"trnRec1.getBankAcctTrnRec().getCurAmt().setAmt(new java.math.BigDecimal(2000.35));
",0,1,6,,"SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
5,"new BigDecimal(Float.MIN_VALUE).setScale(38, RoundingMode.HALF_UP))","testBuilder().sqlQuery(query,Float.MIN_VALUE).unOrdered().baselineColumns(""s1"",""s2"",""s3"",""s4"",""s5"",""s6"").baselineValues(BigDecimal.valueOf(0),new BigDecimal(""1.234567""),new BigDecimal(""-1.5022222""),new BigDecimal(""-0.987654""),BigDecimal.valueOf(9999999),new BigDecimal(Float.MIN_VALUE).setScale(38,RoundingMode.HALF_UP)).go();
",0,1,5,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, ),
NumberLiteral(MethodInvocation-arguments, ),
QualifiedName(MethodInvocation-arguments, ),
"
6,"Assert.assertEquals(new BigDecimal(1234567.89), jsonObject.getJsonNumber(""bigDecimalVal"").bigDecimalValue());","Assert.assertEquals(new BigDecimal(1234567.89),jsonObject.getJsonNumber(""bigDecimalVal"").bigDecimalValue());
",0,2,8,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
7,"Assertions.assertEquals(new BigDecimal(0.5), BigFraction.of(1, 2).bigDecimalValue());","Assertions.assertEquals(new BigDecimal(0.5),BigFraction.of(1,2).bigDecimalValue());
",0,2,9,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
8,".addExpr(""ABS(c_decimal)"", new BigDecimal(Math.abs(ONE.doubleValue())));","ExpressionChecker checker=new ExpressionChecker().addExpr(""ABS(c_integer)"",Math.abs(INTEGER_VALUE)).addExpr(""ABS(c_bigint)"",Math.abs(LONG_VALUE)).addExpr(""ABS(c_smallint)"",(short)Math.abs(SHORT_VALUE)).addExpr(""ABS(c_tinyint)"",(byte)Math.abs(BYTE_VALUE)).addExpr(""ABS(c_double)"",Math.abs(DOUBLE_VALUE)).addExpr(""ABS(c_float)"",Math.abs(FLOAT_VALUE)).addExpr(""ABS(c_decimal)"",new BigDecimal(Math.abs(ONE.doubleValue())));
",0,0,7,,"SimpleName(),
StringLiteral(),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ClassInstanceCreation-arguments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ClassInstanceCreation-arguments, ),
"
9,"FIFTEEN.add(SIXTEEN).add(new BigDecimal(0.011904762)), THREE.add(FOUR), FOUR.add(FIVE));","VarianceAccumulator expectedCombined=newVarianceAccumulator(FIFTEEN.add(SIXTEEN).add(new BigDecimal(0.011904762)),THREE.add(FOUR),FOUR.add(FIVE));
",0,1,12,,"SimpleName(MethodInvocation-expression, MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ),
SimpleName(MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, ),
SimpleName(MethodInvocation-arguments, ),
SimpleName(MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, ),
SimpleName(MethodInvocation-arguments, ),
"
10,return cls.cast(new BigDecimal(ThreadLocalRandom.current().nextDouble()));,"return cls.cast(new BigDecimal(ThreadLocalRandom.current().nextDouble()));
",0,6,6,,"SimpleName(MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ReturnStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-arguments, ReturnStatement-expression, ),
"
11,"RexNode half = literal(new BigDecimal(0.5), b.getType());","RexNode half=literal(new BigDecimal(0.5),b.getType());
",0,0,7,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
12,"BigDecimal result = new BigDecimal(Math.sqrt(ssd.doubleValue()), new MathContext(resultPrecision,","BigDecimal result=new BigDecimal(Math.sqrt(ssd.doubleValue()),new MathContext(resultPrecision,RoundingMode.HALF_UP));
",0,5,9,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
13,"return new SimpleNumber(new BigDecimal(num.doubleValue()).add(half).divide(BIG_DECIMAL_ONE, 0, BigDecimal.ROUND_FLOOR));","return new SimpleNumber(new BigDecimal(num.doubleValue()).add(half).divide(BIG_DECIMAL_ONE,0,BigDecimal.ROUND_FLOOR));
",0,4,10,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, ReturnStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
"
14,final BigDecimal b = new BigDecimal(values[(2 * i) + 1]);,"final BigDecimal b=new BigDecimal(values[(2 * i) + 1]);
",0,4,8,,"Modifier(VariableDeclarationStatement-modifiers, ),
SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(ArrayAccess-array, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, ArrayAccess-index, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, ArrayAccess-index, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayAccess-index, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
15,"assertEquals(""4503599627370497"", new BigDecimal(x).toString());","assertEquals(""4503599627370497"",new BigDecimal(x).toString());
",0,0,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
16,final double expected = new BigDecimal(Math.PI).pow(2),"final double expected=new BigDecimal(Math.PI).pow(2).subtract(new BigDecimal(Math.PI * Math.PI)).doubleValue();
",0,0,7,,"Modifier(VariableDeclarationStatement-modifiers, ),
PrimitiveType(VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
17,"error = ((BigDecimal) otherValue).subtract(new BigDecimal(value), MathContext.DECIMAL64).doubleValue();","error=((BigDecimal)otherValue).subtract(new BigDecimal(value),MathContext.DECIMAL64).doubleValue();
",0,1,8,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
18,n = Double.isFinite(v[i]) ? new BigDecimal(v[i]) : BigDecimal.ZERO;,"n=Double.isFinite(v[i]) ? new BigDecimal(v[i]) : BigDecimal.ZERO;
",0,0,9,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, MethodInvocation-arguments, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, MethodInvocation-arguments, ConditionalExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(ConditionalExpression-elseExpression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
19,"Assertions.assertEquals(0, clip(MIN.negate().divide(new BigDecimal(2.1), MathContext.DECIMAL64)).doubleValue());","Assertions.assertEquals(0,clip(MIN.negate().divide(new BigDecimal(2.1),MathContext.DECIMAL64)).doubleValue());
",0,2,11,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
20,"Assertions.assertEquals(Double.MIN_VALUE * 2, clip(MIN.multiply(new BigDecimal(1.6))).doubleValue());","Assertions.assertEquals(Double.MIN_VALUE * 2,clip(MIN.multiply(new BigDecimal(1.6))).doubleValue());
",0,1,10,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
21,"{ SIMPLE, ""bigDecValue"", new BigDecimal( 34.55 ), null, null },","private static final Object[][] TESTS={{SIMPLE,""floatValue"",0f,10f,10f},{SIMPLE,""floatValue"",10f,""x10x"",OgnlException.class},{SIMPLE,""intValue"",0,34,34},{SIMPLE,""intValue"",34,""foobar"",OgnlException.class},{SIMPLE,""intValue"",34,"""",OgnlException.class},{SIMPLE,""intValue"",34,""       \t"",OgnlException.class},{SIMPLE,""intValue"",34,""       \t1234\t\t"",1234},{SIMPLE,""bigIntValue"",BigInteger.valueOf(0),BigInteger.valueOf(34),BigInteger.valueOf(34)},{SIMPLE,""bigIntValue"",BigInteger.valueOf(34),null,null},{SIMPLE,""bigIntValue"",null,"""",OgnlException.class},{SIMPLE,""bigIntValue"",null,""foobar"",OgnlException.class},{SIMPLE,""bigDecValue"",new BigDecimal(0.0),new BigDecimal(34.55),new BigDecimal(34.55)},{SIMPLE,""bigDecValue"",new BigDecimal(34.55),null,null},{SIMPLE,""bigDecValue"",null,"""",OgnlException.class},{SIMPLE,""bigDecValue"",null,""foobar"",OgnlException.class}};
",0,0,6,,"SimpleName(ArrayInitializer-expressions, ),
StringLiteral(ArrayInitializer-expressions, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, ),
NumberLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ),
NullLiteral(ArrayInitializer-expressions, ),
NullLiteral(ArrayInitializer-expressions, ),
"
22,"BigDecimal doublePow = new BigDecimal(Math.pow(dn1,","BigDecimal doublePow=new BigDecimal(Math.pow(dn1,remainderOf2.doubleValue()));
",0,0,6,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
23,if (new BigDecimal(d).compareTo(r) == 0) {,"if (new BigDecimal(d).compareTo(r) == 0) {
  return d;
}
 else {
  return r.stripTrailingZeros();
}
",0,0,5,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-arguments, InfixExpression-leftOperand, IfStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, IfStatement-expression, ),
"
24,"return new BigDecimal(((Number) o).doubleValue(), mc);","return new BigDecimal(((Number)o).doubleValue(),mc);
",0,0,5,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, ReturnStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, ReturnStatement-expression, ),
"
25,BigDecimal bd = new BigDecimal(d.doubleValue()).round(MathContext.DECIMAL64).stripTrailingZeros();,"BigDecimal bd=new BigDecimal(d.doubleValue()).round(MathContext.DECIMAL64).stripTrailingZeros();
",0,1,8,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
26,"parser.addRecord(i, ""reç"" + i, 100 + i, Date.valueOf(""2018-12-20""), new Time(68150000), new Timestamp(1545332150000L), new BigDecimal(Double.MAX_VALUE).multiply(BigDecimal.TEN));","parser.addRecord(i,""reç"" + i,100 + i,Date.valueOf(""2018-12-20""),new Time(68150000),new Timestamp(1545332150000L),new BigDecimal(Double.MAX_VALUE).multiply(BigDecimal.TEN));
",0,1,18,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
27,byte[] val3 = Bytes.toBytes(new BigDecimal(Double.MIN_VALUE));,"byte[] val3=Bytes.toBytes(new BigDecimal(Double.MIN_VALUE));
",0,0,7,,"PrimitiveType(ArrayType-elementType, VariableDeclarationStatement-type, ),
Dimension(ArrayType-dimensions, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
28,return new BigDecimal(ByteBuffer.wrap(value).asDoubleBuffer().get());,"return new BigDecimal(ByteBuffer.wrap(value).asDoubleBuffer().get());
",0,0,6,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, ReturnStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ReturnStatement-expression, ),
"
29,minValueBD.add(maxValueBD).multiply(new BigDecimal(0.5)).multiply(new BigDecimal(valuesCount))));,"cs.setRange(new Range(minValueBD,minValueBD.add(maxValueBD).multiply(new BigDecimal(0.5)).multiply(new BigDecimal(valuesCount))));
",0,0,9,,"SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-arguments, ),
"
30,BigDecimal bd = new BigDecimal(ThreadLocalRandom.current().nextDouble());,"BigDecimal bd=new BigDecimal(ThreadLocalRandom.current().nextDouble());
",0,0,6,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
31,qvs.add(qvFactory.create(new BigDecimal(Double.MIN_VALUE)));,"qvs.add(qvFactory.create(new BigDecimal(Double.MIN_VALUE)));
",0,0,6,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
32,"Node n = NodeFactory.createLiteral(XSDFuncOp.canonicalDecimalStr(new BigDecimal(3.14)), XSDDatatype.XSDdecimal);","Node n=NodeFactory.createLiteral(XSDFuncOp.canonicalDecimalStr(new BigDecimal(3.14)),XSDDatatype.XSDdecimal);
",0,0,9,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
33,"Assert.assertEquals(new BigDecimal(0.61d, new MathContext(2)), load);","Assert.assertEquals(new BigDecimal(0.61d,new MathContext(2)),load);
",0,1,7,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
34,"new Object[]{value,new BigDecimal(4815.16).toString(),","throw new ConverterException(MessageUtils.getErrorMessage(facesContext,DECIMAL_ID,new Object[]{value,new BigDecimal(4815.16).toString(),MessageUtils.getLabel(facesContext,uiComponent)}),e);
",0,0,6,,"SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, ArrayInitializer-expressions, ArrayCreation-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, ArrayInitializer-expressions, ArrayCreation-initializer, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, ),
"
35,return new BigDecimal(a).equals(new BigDecimal((BigInteger) b));,"return new BigDecimal(a).equals(new BigDecimal((BigInteger)b));
",0,0,6,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ReturnStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ReturnStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ClassInstanceCreation-arguments, MethodInvocation-arguments, ReturnStatement-expression, ),
SimpleName(CastExpression-expression, ClassInstanceCreation-arguments, MethodInvocation-arguments, ReturnStatement-expression, ),
"
36,return new BigDecimal(a).equals(new BigDecimal(b.doubleValue()));,"return new BigDecimal(a).equals(new BigDecimal(b.doubleValue()));
",0,0,6,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ReturnStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-arguments, ReturnStatement-expression, ),
"
37,new BigDecimal(ver).compareTo(new BigDecimal(3.0)) >= 0;,"boolean jee6=(ver == null) ? false : new BigDecimal(ver).compareTo(new BigDecimal(3.0)) >= 0;
",0,0,6,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, InfixExpression-leftOperand, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, InfixExpression-leftOperand, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, InfixExpression-leftOperand, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, InfixExpression-leftOperand, ),
NumberLiteral(InfixExpression-rightOperand, ),
"
38,boolean showNameElement = (ver.compareTo(new BigDecimal(3.0)) >= 0) &&,"boolean showNameElement=(ver.compareTo(new BigDecimal(3.0)) >= 0) && (webApp instanceof WebFragment);
",0,0,7,,"PrimitiveType(VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
39,"assertEquals(isJson() ? 42.875 : new BigDecimal(42.875),","assertEquals(isJson() ? 42.875 : new BigDecimal(42.875),property2.getPrimitiveValue().toValue());
",0,0,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ConditionalExpression-thenExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, ConditionalExpression-elseExpression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
40,if (openBalance.doubleValue() == 0.0) return (new BigDecimal(0.00)).setScale(2);,"if (openBalance.doubleValue() == 0.0) return (new BigDecimal(0.00)).setScale(2);
",0,0,7,,"SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, IfStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, IfStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, IfStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ParenthesizedExpression-expression, MethodInvocation-expression, ReturnStatement-expression, IfStatement-thenStatement, ),
NumberLiteral(ClassInstanceCreation-arguments, ParenthesizedExpression-expression, MethodInvocation-expression, ReturnStatement-expression, IfStatement-thenStatement, ),
SimpleName(MethodInvocation-name, ReturnStatement-expression, IfStatement-thenStatement, ),
NumberLiteral(MethodInvocation-arguments, ReturnStatement-expression, IfStatement-thenStatement, ),
"
41,"cq.select(cb.toBigDecimal(cb.prod(c.get(Customer_.accountNum), new BigDecimal(10.32597))));","cq.select(cb.toBigDecimal(cb.prod(c.get(Customer_.accountNum),new BigDecimal(10.32597))));
",0,0,11,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
42,perplexity = perplexity.multiply(new BigDecimal(1d).divide(,"perplexity=perplexity.multiply(new BigDecimal(1d).divide(new BigDecimal(ngramProbability),CONTEXT));
",0,0,6,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
43,"na = new BigDecimal(Double.parseDouble(""96.45238095238095""));","na=new BigDecimal(Double.parseDouble(""96.45238095238095""));
",0,0,5,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
44,case DataType.BIGDECIMAL: return new BigDecimal(r.nextDouble());,"case DataType.BIGDECIMAL:
",0,0,1,,"QualifiedName(SwitchCase-expression, ),
"
45,"runTest(new BigDecimal(r.nextDouble()), inner, DataType.BIGDECIMAL);","runTest(new BigDecimal(r.nextDouble()),inner,DataType.BIGDECIMAL);
",0,0,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
46,final BigDecimal delta = value.subtract(new BigDecimal(ieee));,"final BigDecimal delta=value.subtract(new BigDecimal(ieee));
",0,0,7,,"Modifier(VariableDeclarationStatement-modifiers, ),
SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
47,"list2.add(new BigDecimalObject(""<cat>"", new BigDecimal(1.500)));","list2.add(new BigDecimalObject(""<cat>"",new BigDecimal(1.500)));
",0,0,6,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
48,return (result == null ? defaultValue : new BigDecimal(result.doubleValue()));,"return (result == null ? defaultValue : new BigDecimal(result.doubleValue()));
",0,0,6,,"SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, ParenthesizedExpression-expression, ReturnStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, ParenthesizedExpression-expression, ReturnStatement-expression, ),
SimpleName(ConditionalExpression-thenExpression, ParenthesizedExpression-expression, ReturnStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ConditionalExpression-elseExpression, ParenthesizedExpression-expression, ReturnStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, ConditionalExpression-elseExpression, ParenthesizedExpression-expression, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ConditionalExpression-elseExpression, ParenthesizedExpression-expression, ReturnStatement-expression, ),
"
49,result[i] = (number == null ? null : new BigDecimal(number.doubleValue()));,"result[i]=(number == null ? null : new BigDecimal(number.doubleValue()));
",0,0,8,,"SimpleName(ArrayAccess-array, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, ParenthesizedExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, ParenthesizedExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NullLiteral(ConditionalExpression-thenExpression, ParenthesizedExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ConditionalExpression-elseExpression, ParenthesizedExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, ConditionalExpression-elseExpression, ParenthesizedExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ConditionalExpression-elseExpression, ParenthesizedExpression-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
50,"primitiveDefaults.put(BigDecimal.class, new BigDecimal(0.0));","primitiveDefaults.put(BigDecimal.class,new BigDecimal(0.0));
",0,0,5,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
51,"assertEquals(new java.math.BigDecimal(0.0), gd.getFraction());","assertEquals(new java.math.BigDecimal(0.0),gd.getFraction());
",0,0,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
52,"qu = quotaManager.updateQuotaDiskUsage(usageVO, new BigDecimal(0.5), UsageTypes.VOLUME);","qu=quotaManager.updateQuotaDiskUsage(usageVO,new BigDecimal(0.5),UsageTypes.VOLUME);
",1,97,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
53,"(new BigDecimal(percentGain)).setScale(2, BigDecimal.ROUND_HALF_UP);","BigDecimal percentGainBD=(new BigDecimal(percentGain)).setScale(2,BigDecimal.ROUND_HALF_UP);
",1,1,5,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, ParenthesizedExpression-expression, MethodInvocation-expression, ),
SimpleName(ClassInstanceCreation-arguments, ParenthesizedExpression-expression, MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, ),
NumberLiteral(MethodInvocation-arguments, ),
QualifiedName(MethodInvocation-arguments, ),
"
54,"items[0].setPrice((new BigDecimal(299.95)).setScale(2, BigDecimal.ROUND_HALF_UP));","items[0].setPrice((new BigDecimal(299.95)).setScale(2,BigDecimal.ROUND_HALF_UP));
",1,15,8,,"SimpleName(ArrayAccess-array, MethodInvocation-expression, ExpressionStatement-expression, ),
NumberLiteral(ArrayAccess-index, MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
55,"return new BigDecimal(((Number) o).doubleValue(), MathContext.DECIMAL32)","return new BigDecimal(((Number)o).doubleValue(),MathContext.DECIMAL32).stripTrailingZeros();
",1,53,5,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, ReturnStatement-expression, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-expression, ReturnStatement-expression, ),
"
56,"(byte) 0, (short) 1, 2, 3L, new BigDecimal(2.3), 1.2f, 3.0d, ""str"", dateTime, false)","Row row=Row.withSchema(schema).addValues((byte)0,(short)1,2,3L,new BigDecimal(2.3),1.2f,3.0d,""str"",dateTime,false).build();
",1,1,13,,"PrimitiveType(CastExpression-type, ),
NumberLiteral(CastExpression-expression, ),
PrimitiveType(CastExpression-type, ),
NumberLiteral(CastExpression-expression, ),
NumberLiteral(),
NumberLiteral(),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ),
NumberLiteral(ClassInstanceCreation-arguments, ),
NumberLiteral(),
NumberLiteral(),
StringLiteral(),
SimpleName(),
BooleanLiteral(),
"
57,"testContains(Ranges.open(new BigDecimal(2),new BigDecimal(4)), new BigDecimal(2.001), true);","testContains(Ranges.open(new BigDecimal(2),new BigDecimal(4)),new BigDecimal(2.001),true);
",1,11,10,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
BooleanLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
58,"super(new BigDecimal(Double.MAX_VALUE), MinBigDecimal::min);","super(new BigDecimal(Double.MAX_VALUE),MinBigDecimal::min);
",1,1,4,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, SuperConstructorInvocation-arguments, ),
QualifiedName(ClassInstanceCreation-arguments, SuperConstructorInvocation-arguments, ),
SimpleName(ExpressionMethodReference-expression, SuperConstructorInvocation-arguments, ),
SimpleName(ExpressionMethodReference-name, SuperConstructorInvocation-arguments, ),
"
59,"list.add(date.getTime() + "","" + new BigDecimal(inTPS).setScale(5, BigDecimal.ROUND_HALF_UP) + "","" + inMsgCntToday + "","" + new BigDecimal(outTPS).setScale(5, BigDecimal.ROUND_HALF_UP) + "","" + outMsgCntToday);","list.add(date.getTime() + "","" + new BigDecimal(inTPS).setScale(5,BigDecimal.ROUND_HALF_UP)+ "",""+ inMsgCntToday+ "",""+ new BigDecimal(outTPS).setScale(5,BigDecimal.ROUND_HALF_UP)+ "",""+ outMsgCntToday);
",1,10,20,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(InfixExpression-extendedOperands, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
60,"testValueOf(s -> Ranges.valueOfBigDecimal(s), Ranges.open(new BigDecimal(2.5), new BigDecimal(4.25)));","testValueOf(s -> Ranges.valueOfBigDecimal(s),Ranges.open(new BigDecimal(2.5),new BigDecimal(4.25)));
",1,5,11,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, LambdaExpression-body, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, LambdaExpression-body, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
61,final double result = Math.sqrt(new BigDecimal(x).pow(2).add(new BigDecimal(y).pow(2)).doubleValue());,"final double result=Math.sqrt(new BigDecimal(x).pow(2).add(new BigDecimal(y).pow(2)).doubleValue());
",1,4,15,,"Modifier(VariableDeclarationStatement-modifiers, ),
PrimitiveType(VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
62,final BigDecimal bd1 = new BigDecimal(rnd.nextDouble());,"final BigDecimal bd1=new BigDecimal(rnd.nextDouble());
",1,2,6,,"Modifier(VariableDeclarationStatement-modifiers, ),
SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
63,"sum = sum.add(new BigDecimal(d).pow(2), ctx);","sum=sum.add(new BigDecimal(d).pow(2),ctx);
",1,4,8,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
64,sum = clip(sum.add(clip(new BigDecimal(a[i]).multiply(new BigDecimal(b[i])))));,"sum=clip(sum.add(clip(new BigDecimal(a[i]).multiply(new BigDecimal(b[i])))));
",1,10,12,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
65,BigDecimal sum = new BigDecimal(a[0]).multiply(new BigDecimal(b[0]));,"BigDecimal sum=new BigDecimal(a[0]).multiply(new BigDecimal(b[0]));
",1,3,9,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(ArrayAccess-array, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(ArrayAccess-index, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(ArrayAccess-array, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(ArrayAccess-index, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
66,"return new BigDecimal(value).setScale(2, RoundingMode.HALF_UP).doubleValue();","return new BigDecimal(value).setScale(2,RoundingMode.HALF_UP).doubleValue();
",1,1,6,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ReturnStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, ReturnStatement-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ReturnStatement-expression, ),
"
67,"Project solaris = new Project(4001L, ""Solaris"", new BigDecimal(100.375));","Project solaris=new Project(4001L,""Solaris"",new BigDecimal(100.375));
",1,1,7,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
68,inout[0] = inout[0].add(new BigDecimal(2.3));,"inout[0]=inout[0].add(new BigDecimal(2.3));
",1,4,7,,"SimpleName(ArrayAccess-array, Assignment-leftHandSide, ExpressionStatement-expression, ),
NumberLiteral(ArrayAccess-index, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-array, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(ArrayAccess-index, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
69,"cipEqu(new BigDecimal(123.5), TypeFlags.INTEGER | TypeFlags.LONG);","cipEqu(new BigDecimal(123.5),TypeFlags.INTEGER | TypeFlags.LONG);
",1,1,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(InfixExpression-leftOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(InfixExpression-rightOperand, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
70,"return new BigDecimal(value).add(new BigDecimal(error), MathContext.DECIMAL128).toString();","return new BigDecimal(value).add(new BigDecimal(error),MathContext.DECIMAL128).toString();
",1,2,7,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-expression, ReturnStatement-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ReturnStatement-expression, ),
"
71,"originalBindingSet.addBinding(""x"", VF.createLiteral(new BigDecimal(2.5)));","originalBindingSet.addBinding(""x"",VF.createLiteral(new BigDecimal(2.5)));
",1,2,7,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
72,"r = new ObjectRange(new BigDecimal(1.0), new BigDecimal(3.0));","r=new ObjectRange(new BigDecimal(1.0),new BigDecimal(3.0));
",1,2,6,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
73,"matrix[i][j] = new BigDecimal(randomValue).setScale(DOUBLE_PRECISION,","matrix[i][j]=new BigDecimal(randomValue).setScale(DOUBLE_PRECISION,BigDecimal.ROUND_DOWN).doubleValue();
",1,1,7,,"SimpleName(ArrayAccess-array, ArrayAccess-array, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, ArrayAccess-array, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(ArrayAccess-index, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
74,"assertEquals(new BigDecimal(301.0).doubleValue(), res.bigDecimalCol.doubleValue());","assertEquals(new BigDecimal(301.0).doubleValue(),res.bigDecimalCol.doubleValue());
",1,1,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
75,.subtract((new BigDecimal(1.00)).setScale(2)).multiply((new BigDecimal(100.00)).setScale(2));,"BigDecimal gainPercent=currentBalance.divide(openBalance,BigDecimal.ROUND_HALF_UP).subtract((new BigDecimal(1.00)).setScale(2)).multiply((new BigDecimal(100.00)).setScale(2));
",1,1,10,,"SimpleName(),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ParenthesizedExpression-expression, MethodInvocation-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, ParenthesizedExpression-expression, MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, ),
NumberLiteral(MethodInvocation-arguments, ),
SimpleName(),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ParenthesizedExpression-expression, MethodInvocation-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, ParenthesizedExpression-expression, MethodInvocation-expression, ),
SimpleName(MethodInvocation-name, ),
NumberLiteral(MethodInvocation-arguments, ),
"
76,BigDecimal TSIA = (new BigDecimal(0.00)).setScale(2);,"BigDecimal TSIA=(new BigDecimal(0.00)).setScale(2);
",1,1,6,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
77,this.cachedResult = new BigDecimal(result);,"this.cachedResult=new BigDecimal(result);
",1,1,4,,"ThisExpression(FieldAccess-expression, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(FieldAccess-name, Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
78,"assertEquals(new BigDecimal(DOUBLE_VALUE).doubleValue(), props.get(""doubleProp"", BigDecimal.class).doubleValue(), 0.0001d);","assertEquals(new BigDecimal(DOUBLE_VALUE).doubleValue(),props.get(""doubleProp"",BigDecimal.class).doubleValue(),0.0001d);
",1,1,10,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
"
79,"divideHelper(10, new BigDecimal(2.5), 4, BigDecimal.class);","divideHelper(10,new BigDecimal(2.5),4,BigDecimal.class);
",1,1,6,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
80,public final static BigDecimal ZERO = (new BigDecimal(0.00)).setScale(SCALE);,"public final static BigDecimal ZERO=(new BigDecimal(0.00)).setScale(SCALE);
",2,83,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
81,"assertThat( testDataRow.getBigDecimal( ""C_REAL_5.5"" ), equalTo( new BigDecimal( 5.5f ) ) );","assertThat(testDataRow.getBigDecimal(""C_REAL_5.5""),equalTo(new BigDecimal(5.5f)));
",2,9,7,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
82,rec.field1 = new BigDecimal(123.45);,"rec.field1=new BigDecimal(123.45);
",2,2,3,,"QualifiedName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
83,"{ SIMPLE, ""bigDecValue"", new BigDecimal( 0.0 ), new BigDecimal( 34.55 ), new BigDecimal( 34.55 ) },","private static final Object[][] TESTS={{SIMPLE,""floatValue"",0f,10f,10f},{SIMPLE,""floatValue"",10f,""x10x"",OgnlException.class},{SIMPLE,""intValue"",0,34,34},{SIMPLE,""intValue"",34,""foobar"",OgnlException.class},{SIMPLE,""intValue"",34,"""",OgnlException.class},{SIMPLE,""intValue"",34,""       \t"",OgnlException.class},{SIMPLE,""intValue"",34,""       \t1234\t\t"",1234},{SIMPLE,""bigIntValue"",BigInteger.valueOf(0),BigInteger.valueOf(34),BigInteger.valueOf(34)},{SIMPLE,""bigIntValue"",BigInteger.valueOf(34),null,null},{SIMPLE,""bigIntValue"",null,"""",OgnlException.class},{SIMPLE,""bigIntValue"",null,""foobar"",OgnlException.class},{SIMPLE,""bigDecValue"",new BigDecimal(0.0),new BigDecimal(34.55),new BigDecimal(34.55)},{SIMPLE,""bigDecValue"",new BigDecimal(34.55),null,null},{SIMPLE,""bigDecValue"",null,"""",OgnlException.class},{SIMPLE,""bigDecValue"",null,""foobar"",OgnlException.class}};
",2,3,8,,"SimpleName(ArrayInitializer-expressions, ),
StringLiteral(ArrayInitializer-expressions, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, ),
NumberLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, ),
NumberLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, ),
NumberLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ),
"
84,"principal = new BigDecimal(principal).setScale(0, RoundingMode.FLOOR).floatValue();","principal=new BigDecimal(principal).setScale(0,RoundingMode.FLOOR).floatValue();
",2,2,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
85,Assert.assertTrue(new BigDecimal(jCardList.get(2)).round(mc).equals(new BigDecimal(64.0 / 6000).round(mc)));,"Assert.assertTrue(new BigDecimal(jCardList.get(2)).round(mc).equals(new BigDecimal(64.0 / 6000).round(mc)));
",2,3,14,,"SimpleName(MethodInvocation-expression, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
86,"bd = bd.multiply(new BigDecimal(100.0)).setScale(scale, roundingMode);","bd=bd.multiply(new BigDecimal(100.0)).setScale(scale,roundingMode);
",2,2,8,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
87,is((Object) new BigDecimal(2.5)));,"assertThat(SqlFunctions.divideAny(new BigDecimal(5L),2),is((Object)new BigDecimal(2.5)));
",3,3,4,,"SimpleName(MethodInvocation-name, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, CastExpression-expression, MethodInvocation-arguments, ),
NumberLiteral(ClassInstanceCreation-arguments, CastExpression-expression, MethodInvocation-arguments, ),
"
88,"c = Expressions.constant(new BigDecimal(Float.MAX_VALUE), Float.class);","c=Expressions.constant(new BigDecimal(Float.MAX_VALUE),Float.class);
",3,10,6,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
89,"Expression between = new ASTBetween(new ASTObjPath(""estimatedPrice""), new BigDecimal(10d), new BigDecimal(20d));","Expression between=new ASTBetween(new ASTObjPath(""estimatedPrice""),new BigDecimal(10d),new BigDecimal(20d));
",3,21,9,,"SimpleName(SimpleType-name, VariableDeclarationStatement-type, ),
SimpleName(VariableDeclarationFragment-name, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, VariableDeclarationStatement-fragments, ),
"
90,private static final BigDecimal BD_MAX_VALUE = new BigDecimal(Double.MAX_VALUE);,"private static final BigDecimal BD_MAX_VALUE=new BigDecimal(Double.MAX_VALUE);
",3,3,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
91,"assertEquals(new BigDecimal(2.0), ret.calculate(evaluatableTuple, filterCodeSystem));","assertEquals(new BigDecimal(2.0),ret.calculate(evaluatableTuple,filterCodeSystem));
",5,5,7,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ExpressionStatement-expression, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
92,total = (new BigDecimal(quantity).multiply(price)).add(orderFee);,"total=(new BigDecimal(quantity).multiply(price)).add(orderFee);
",7,27,7,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, ParenthesizedExpression-expression, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
93,return ((BigDecimal) num0).add(new BigDecimal(num1.doubleValue()));,"return ((BigDecimal)num0).add(new BigDecimal(num1.doubleValue()));
",8,8,6,,"SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ReturnStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-arguments, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-arguments, ReturnStatement-expression, ),
"
94,return ((new BigDecimal(num0.doubleValue()).add((BigDecimal) num1)));,"return ((new BigDecimal(num0.doubleValue()).add((BigDecimal)num1)));
",8,8,6,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, ParenthesizedExpression-expression, ParenthesizedExpression-expression, ReturnStatement-expression, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, ParenthesizedExpression-expression, ParenthesizedExpression-expression, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, ParenthesizedExpression-expression, ParenthesizedExpression-expression, ReturnStatement-expression, ),
SimpleName(MethodInvocation-name, ParenthesizedExpression-expression, ParenthesizedExpression-expression, ReturnStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, ParenthesizedExpression-expression, ParenthesizedExpression-expression, ReturnStatement-expression, ),
SimpleName(CastExpression-expression, MethodInvocation-arguments, ParenthesizedExpression-expression, ParenthesizedExpression-expression, ReturnStatement-expression, ),
"
95,assertThat(new MinValidator(new BigDecimal(Double.MIN_VALUE).toString()),"assertThat(new MinValidator(new BigDecimal(Double.MIN_VALUE).toString()).validateInternal(bigDecimalValue),is(true));
",9,9,5,,"SimpleName(MethodInvocation-name, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, ExpressionStatement-expression, ),
"
96,"{new BigDecimal(0.0002), ""%g"",          ""0.000200000""},","final Object[][] tripleG={{BigDecimal.ZERO,""%g"",""0.00000""},{BigDecimal.ZERO,""%.5g"",""0.0000""},{BigDecimal.ZERO,""%- (,9.8g"","" 0.0000000""},{BigDecimal.ZERO,""%+0(,8.4g"",""+000.000""},{BigDecimal.ZERO,""%-+10.6g"",""+0.00000  ""},{BigDecimal.ZERO,""% 0(,12.0g"","" 00000000000""},{BigDecimal.ONE,""%g"",""1.00000""},{BigDecimal.ONE,""%.5g"",""1.0000""},{BigDecimal.ONE,""%- (,9.8g"","" 1.0000000""},{BigDecimal.ONE,""%+0(,8.4g"",""+001.000""},{BigDecimal.ONE,""%-+10.6g"",""+1.00000  ""},{BigDecimal.ONE,""% 0(,12.0g"","" 00000000001""},{new BigDecimal(-1),""%g"",""-1.00000""},{new BigDecimal(-1),""%.5g"",""-1.0000""},{new BigDecimal(-1),""%- (,9.8g"",""(1.0000000)""},{new BigDecimal(-1),""%+0(,8.4g"",""(01.000)""},{new BigDecimal(-1),""%-+10.6g"",""-1.00000  ""},{new BigDecimal(-1),""% 0(,12.0g"",""(0000000001)""},{new BigDecimal(-0.000001),""%g"",""-1.00000e-06""},{new BigDecimal(-0.000001),""%.5g"",""-1.0000e-06""},{new BigDecimal(-0.000001),""%- (,9.8g"",""(1.0000000e-06)""},{new BigDecimal(-0.000001),""%+0(,8.4g"",""(1.000e-06)""},{new BigDecimal(-0.000001),""%-+10.6g"",""-1.00000e-06""},{new BigDecimal(-0.000001),""% 0(,12.0g"",""(000001e-06)""},{new BigDecimal(0.0002),""%g"",""0.000200000""},{new BigDecimal(0.0002),""%.5g"",""0.00020000""},{new BigDecimal(0.0002),""%- (,9.8g"","" 0.00020000000""},{new BigDecimal(0.0002),""%+0(,8.4g"",""+0.0002000""},{new BigDecimal(0.0002),""%-+10.6g"",""+0.000200000""},{new BigDecimal(0.0002),""% 0(,12.0g"","" 000000.0002""},{new BigDecimal(-0.003),""%g"",""-0.00300000""},{new BigDecimal(-0.003),""%.5g"",""-0.0030000""},{new BigDecimal(-0.003),""%- (,9.8g"",""(0.0030000000)""},{new BigDecimal(-0.003),""%+0(,8.4g"",""(0.003000)""},{new BigDecimal(-0.003),""%-+10.6g"",""-0.00300000""},{new BigDecimal(-0.003),""% 0(,12.0g"",""(000000.003)""},{new BigDecimal(""5.000E999""),""%g"",""5.00000e+999""},{new BigDecimal(""5.000E999""),""%.5g"",""5.0000e+999""},{new BigDecimal(""5.000E999""),""%- (,9.8g"","" 5.0000000e+999""},{new BigDecimal(""5.000E999""),""%+0(,8.4g"",""+5.000e+999""},{new BigDecimal(""5.000E999""),""%-+10.6g"",""+5.00000e+999""},{new BigDecimal(""5.000E999""),""% 0(,12.0g"","" 000005e+999""},{new BigDecimal(""-5.000E999""),""%g"",""-5.00000e+999""},{new BigDecimal(""-5.000E999""),""%.5g"",""-5.0000e+999""},{new BigDecimal(""-5.000E999""),""%- (,9.8g"",""(5.0000000e+999)""},{new BigDecimal(""-5.000E999""),""%+0(,8.4g"",""(5.000e+999)""},{new BigDecimal(""-5.000E999""),""%-+10.6g"",""-5.00000e+999""},{new BigDecimal(""-5.000E999""),""% 0(,12.0g"",""(00005e+999)""}};
",11,11,4,,"SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, ),
NumberLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ),
StringLiteral(ArrayInitializer-expressions, ),
StringLiteral(ArrayInitializer-expressions, ),
"
97,decimal = new BigDecimal(((Float) value).floatValue());,"decimal=new BigDecimal(((Float)value).floatValue());
",12,19,5,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
98,bigDecimal = new BigDecimal(Double.MAX_VALUE).add(new BigDecimal(,"bigDecimal=new BigDecimal(Double.MAX_VALUE).add(new BigDecimal(Double.MAX_VALUE));
",19,19,5,,"SimpleName(Assignment-leftHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-expression, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(MethodInvocation-name, Assignment-rightHandSide, ExpressionStatement-expression, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, Assignment-rightHandSide, ExpressionStatement-expression, ),
"
