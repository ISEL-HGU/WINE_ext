226000,./TargetProjects/samza/samza-api/src/test/java/org/apache/samza/system/descriptors/TestGenericInputDescriptor.java,83,,"    expectedConfigs.put(""streams.input-stream.samza.bootstrap"", ""true"");"
226001,./TargetProjects/samza/samza-api/src/test/java/org/apache/samza/system/descriptors/TestGenericSystemDescriptor.java,33,,"        new GenericSystemDescriptor(""input-system"", ""factory.class.name"")"
226002,./TargetProjects/samza/samza-api/src/test/java/org/apache/samza/table/remote/TestTableRateLimiter.java,54,,"    TableRateLimiter<String, String> rateLimitHelper = new TableRateLimiter<>(""foo"", rateLimiter, credFn, tag);"
226003,./TargetProjects/samza/samza-api/src/test/java/org/apache/samza/table/remote/TestTableRateLimiter.java,63,,"    Assert.assertEquals(3, rateLimitHelper.getCredits(""abc"", null));"
226004,./TargetProjects/samza/samza-aws/src/test/java/org/apache/samza/system/kinesis/TestKinesisConfig.java,47,,"    Set<String> streams = kConfig.getKinesisStreams(""kinesis"");"
226005,./TargetProjects/samza/samza-aws/src/test/java/org/apache/samza/system/kinesis/TestKinesisConfig.java,60,,"    kv.put(systemConfigPrefix + ""aws.region"", ""us-east-1"");"
226006,./TargetProjects/samza/samza-aws/src/test/java/org/apache/samza/system/kinesis/TestKinesisSystemFactory.java,41,,"    String systemName = ""test"";"
226007,./TargetProjects/samza/samza-aws/src/test/java/org/apache/samza/system/kinesis/consumer/TestKinesisRecordProcessor.java,113,,"    Assert.assertEquals(""Unable to shutdown processor."", 0, receivedShutdownLatch.getCount());"
226008,./TargetProjects/samza/samza-aws/src/test/java/org/apache/samza/system/kinesis/consumer/TestSSPAllocator.java,38,,"    String system = ""kinesis"";"
226009,./TargetProjects/samza/samza-aws/src/test/java/org/apache/samza/system/kinesis/consumer/TestSSPAllocator.java,39,,"    String stream = ""stream"";"
226010,./TargetProjects/samza/samza-azure/src/main/java/org/apache/samza/coordinator/AzureJobCoordinator.java,371,,"    LOG.info(""pid="" + processorId + ""Generated new Job Model. Version = "" + nextJMVersion);"
226011,./TargetProjects/samza/samza-azure/src/main/java/org/apache/samza/util/TableUtils.java,83,,"      LOG.error(""Azure storage exception while adding processor entity with job model version: "" + jmVersion + ""and pid: "" + pid, e);"
226012,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/checkpoint/azure/ITestAzureCheckpointManager.java,68,,"    SystemStreamPartition ssp = new SystemStreamPartition(""Azure"", ""Stream"", partition);"
226013,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/checkpoint/azure/ITestAzureCheckpointManager.java,68,,"    SystemStreamPartition ssp = new SystemStreamPartition(""Azure"", ""Stream"", partition);"
226014,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/azureblob/avro/TestAzureBlobAvroWriter.java,143,,"    ome = createOME(""Topic1"");"
226015,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/azureblob/avro/TestAzureBlobAvroWriter.java,155,,"            60000, ""test"", mockDataFileWriter, mockAzureBlobOutputStream, mockBlockBlobAsyncClient,"
226016,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/azureblob/avro/TestAzureBlobOutputStream.java,237,,"    String blockId = String.format(""%05d"", blockNum);"
226017,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/azureblob/producer/TestAzureBlobSystemProducer.java,144,,"    doThrow(new SecurityException(""failed"")).when(mockThreadPoolExecutor).shutdown();"
226018,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/azureblob/producer/TestAzureBlobSystemProducer.java,220,,"      Assert.fail(""Expected exception not thrown."");"
226019,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/azureblob/producer/TestAzureBlobSystemProducer.java,296,,"    String source1 = ""FAKE_SOURCE_1"";"
226020,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/azureblob/producer/TestAzureBlobSystemProducer.java,299,,"    String stream1 = ""FAKE_STREAM_1"";"
226021,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/eventhub/admin/TestEventHubSystemAdmin.java,60,,"    Assert.assertEquals(-1, eventHubSystemAdmin.offsetComparator(""100"", ""200"").intValue());"
226022,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/eventhub/admin/TestEventHubSystemAdmin.java,101,,"    SystemStreamPartition systemStreamPartition = new SystemStreamPartition(""test-system"", ""test-stream"", new Partition(0));"
226023,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/eventhub/admin/TestEventHubSystemAdmin.java,101,,"    SystemStreamPartition systemStreamPartition = new SystemStreamPartition(""test-system"", ""test-stream"", new Partition(0));"
226024,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/eventhub/consumer/TestEventHubSystemConsumer.java,71,,"    String systemName = ""eventhubs"";"
226025,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/eventhub/consumer/TestEventHubSystemConsumer.java,72,,"    String streamName = ""testStream"";"
226026,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/eventhub/consumer/TestEventHubSystemConsumer.java,395,,"        new EventHubException(false /* is transient */, ""test""));"
226027,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/eventhub/descriptors/TestEventHubsInputDescriptor.java,39,,"    String systemName = ""eventHub"";"
226028,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/eventhub/descriptors/TestEventHubsInputDescriptor.java,40,,"    String streamId = ""input-stream"";"
226029,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/eventhub/descriptors/TestEventHubsInputDescriptor.java,45,,"        .getInputDescriptor(streamId, ""entity-namespace"", ""entity3"", new StringSerde())"
226030,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/eventhub/descriptors/TestEventHubsInputDescriptor.java,45,,"        .getInputDescriptor(streamId, ""entity-namespace"", ""entity3"", new StringSerde())"
226031,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/eventhub/descriptors/TestEventHubsOutputDescriptor.java,38,,"    String systemName = ""eventHub"";"
226032,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/eventhub/descriptors/TestEventHubsOutputDescriptor.java,44,,"        .getOutputDescriptor(streamId, ""entity-namespace"", ""entity3"", new StringSerde())"
226033,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/eventhub/descriptors/TestEventHubsOutputDescriptor.java,44,,"        .getOutputDescriptor(streamId, ""entity-namespace"", ""entity3"", new StringSerde())"
226034,./TargetProjects/samza/samza-azure/src/test/java/org/apache/samza/system/eventhub/producer/TestEventHubSystemProducer.java,77,,"    String systemName = ""eventhubs"";"
226035,./TargetProjects/samza/samza-core/src/main/java/org/apache/samza/clustermanager/container/placement/ContainerPlacementMetadataStore.java,115,,"    Preconditions.checkState(!stopped, ""Underlying metadata store not available"");"
226036,./TargetProjects/samza/samza-core/src/main/java/org/apache/samza/clustermanager/container/placement/ContainerPlacementMetadataStore.java,156,,"    Preconditions.checkNotNull(uuid, ""uuid cannot be null"");"
226037,./TargetProjects/samza/samza-core/src/main/java/org/apache/samza/config/ClusterManagerConfig.java,162,,"      log.info(""Configuration {} is deprecated. Please use {}"", YARN_ALLOCATOR_SLEEP_MS, ALLOCATOR_SLEEP_MS);"
226038,./TargetProjects/samza/samza-core/src/main/java/org/apache/samza/startpoint/StartpointManager.java,142,,"    Preconditions.checkState(!stopped, ""Underlying metadata store not available"");"
226039,./TargetProjects/samza/samza-core/src/main/java/org/apache/samza/table/remote/AsyncRemoteTable.java,75,,"    Preconditions.checkNotNull(writeFn, ""null writeFn"");"
226040,./TargetProjects/samza/samza-core/src/main/java/org/apache/samza/table/remote/RemoteTable.java,239,,"    Preconditions.checkNotNull(writeFn, ""null write function"");"
226041,./TargetProjects/samza/samza-core/src/main/java/org/apache/samza/zk/ZkJobCoordinator.java,314,,"    LOG.info(""pid="" + processorId + ""Generated new JobModel with version: "" + nextJMVersion + "" and processors: "" + currentProcessorIds);"
226042,./TargetProjects/samza/samza-core/src/main/java/org/apache/samza/zk/ZkUtils.java,237,,"      String ephemeralProcessorPath = String.format(""%s/%s"", keyBuilder.getProcessorsPath(), processorZNode);"
226043,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/application/descriptors/TestStreamApplicationDescriptorImpl.java,85,,"    String streamId = ""test-stream-1"";"
226044,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/application/descriptors/TestStreamApplicationDescriptorImpl.java,87,,"    GenericSystemDescriptor sd = new GenericSystemDescriptor(""mockSystem"", ""mockSystemFactoryClass"");"
226045,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/application/descriptors/TestStreamApplicationDescriptorImpl.java,87,,"    GenericSystemDescriptor sd = new GenericSystemDescriptor(""mockSystem"", ""mockSystemFactoryClass"");"
226046,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestClusterBasedJobCoordinator.java,87,,"    configMap.put(""job.coordinator.system"", ""kafka"");"
226047,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerAllocatorWithHostAffinity.java,87,,"        .thenReturn(new LocalityModel(ImmutableMap.of(""0"", new ProcessorLocality(""0"", ""abc""))));"
226048,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerAllocatorWithHostAffinity.java,135,,"        put(""1"", ""xyz"");"
226049,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerAllocatorWithHostAffinity.java,148,,"    containerAllocator.addResource(new SamzaResource(1, 10, ""def"", ""ID2""));"
226050,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerAllocatorWithHostAffinity.java,205,,"    final SamzaResource resource0 = new SamzaResource(1, 1024, ""abc"", ""id1"");"
226051,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerAllocatorWithHostAffinity.java,206,,"    final SamzaResource resource1 = new SamzaResource(1, 1024, ""abc"", ""id2"");"
226052,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerAllocatorWithHostAffinity.java,343,,"    containerAllocator.requestResources(ImmutableMap.of(""0"", ""host-1"", ""1"", ""host-2""));"
226053,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerAllocatorWithHostAffinity.java,343,,"    containerAllocator.requestResources(ImmutableMap.of(""0"", ""host-1"", ""1"", ""host-2""));"
226054,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerAllocatorWithHostAffinity.java,347,,"    SamzaResource resource0 = new SamzaResource(1, 1000, ""host-3"", ""id1"");"
226055,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerAllocatorWithHostAffinity.java,426,,"        put(""0"", ""hostname-0"");"
226056,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerAllocatorWithHostAffinity.java,427,,"        put(""1"", ""hostname-1"");"
226057,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerAllocatorWithHostAffinity.java,519,,"    SamzaResource expiredAllocatedResource = new SamzaResource(1, 1000, ""host-0"", ""id0"","
226058,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerAllocatorWithoutHostAffinity.java,129,,"    assertNull(requestState.getResourcesOnAHost(""abc""));"
226059,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerAllocatorWithoutHostAffinity.java,228,,"        put(""0"", ""prev_host"");"
226060,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerPlacementActions.java,92,,"      put(""app.run.id"", ""appAttempt-001"");"
226061,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerPlacementActions.java,149,,"            ""0"", new ProcessorLocality(""0"", ""host-1""),"
226062,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerPlacementActions.java,150,,"            ""1"", new ProcessorLocality(""1"", ""host-2""))));"
226063,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerPlacementActions.java,170,,"            ""0-0"", new ProcessorLocality(""0"", ""host-2""),"
226064,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerPlacementActions.java,191,,"        }, ""AMRMClientAsync"").start();"
226065,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerPlacementActions.java,219,,"      fail(""timed out waiting for the containers to start"");"
226066,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerPlacementActions.java,235,,"        new ContainerPlacementRequestMessage(UUID.randomUUID(), ""appAttempt-001"", ""0"", ""host-3"","
226067,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerPlacementActions.java,515,,"        new ContainerPlacementRequestMessage(UUID.randomUUID(), ""app-attempt-001"", ""0"", ""host-3"","
226068,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerProcessManager.java,147,,"        .thenReturn(new LocalityModel(ImmutableMap.of(""0"", new ProcessorLocality(""0"", ""host1""))));"
226069,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerProcessManager.java,154,,"        (ContainerAllocator) getPrivateFieldFromCpm(""containerAllocator"", cpm).get(cpm);"
226070,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerProcessManager.java,209,,"    getPrivateFieldFromCpm(""allocatorThread"", cpm).set(cpm, new Thread() {"
226071,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerProcessManager.java,383,,"    SamzaResource container = new SamzaResource(1, 1024, ""host1"", ""id0"");"
226072,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerProcessManager.java,389,,"      fail(""timed out waiting for the containers to start"");"
226073,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerProcessManager.java,394,,"    cpm.onResourceCompleted(new SamzaResourceStatus(""id0"", ""diagnostics"", SamzaResourceStatus.SUCCESS));"
226074,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerProcessManager.java,734,,"    SamzaResource container = new SamzaResource(1, 1000, ""host1"", ""id1"");"
226075,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerRequestState.java,57,,"    SamzaResourceRequest request = new SamzaResourceRequest(1, 1024, ""abc"", ""0"");"
226076,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerRequestState.java,95,,"    SamzaResource resource = new SamzaResource(1, 1024, ""abc"", ""id1"");"
226077,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerRequestState.java,121,,"    state1.addResourceRequest(new SamzaResourceRequest(1, 1024, ""def"", ""1"","
226078,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/container/placement/TestContainerPlacementMetadataStore.java,75,,"    UUID uuid = containerPlacementMetadataStore.writeContainerPlacementRequestMessage(""app-attempt-001"", ""4"", ""ANY_HOST"", null,"
226079,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/container/placement/TestContainerPlacementMetadataStore.java,75,,"    UUID uuid = containerPlacementMetadataStore.writeContainerPlacementRequestMessage(""app-attempt-001"", ""4"", ""ANY_HOST"", null,"
226080,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/container/placement/TestContainerPlacementObjectMapper.java,40,,"        new ContainerPlacementRequestMessage(UUID.randomUUID(), ""app-attempt-001"", ""4"", ""ANY_HOST"", System.currentTimeMillis()));"
226081,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/clustermanager/container/placement/TestContainerPlacementObjectMapper.java,40,,"        new ContainerPlacementRequestMessage(UUID.randomUUID(), ""app-attempt-001"", ""4"", ""ANY_HOST"", System.currentTimeMillis()));"
226082,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestJavaTableConfig.java,64,,"    String key = JavaTableConfig.buildKey(""t1"", ""abc"");"
226083,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestJavaTableConfig.java,71,,"    map.put(JavaTableConfig.buildKey(""t1"", ""abc""), ""xyz"");"
226084,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestJobConfig.java,233,,"    String rewriterName = ""rewriter-name"", regex = ""my-stream-.*"";"
226085,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestJobConfig.java,237,,"    assertEquals(Optional.empty(), jobConfig.getRegexResolvedStreams(""other-rewriter""));"
226086,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestJobConfig.java,287,,"        new JobConfig(new MapConfig(ImmutableMap.of(JobConfig.JOB_FAIL_CHECKPOINT_VALIDATION, ""true"")));"
226087,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestMetricsConfig.java,35,,"    String metricsReporterName = ""metricReporterName"";"
226088,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestMetricsConfig.java,44,,"        new MetricsConfig(new MapConfig()).getMetricsFactoryClass(""someName"").isPresent());"
226089,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestShellCommandConfig.java,56,,"        new ShellCommandConfig(new MapConfig(ImmutableMap.of(JobConfig.JOB_AUTOSIZING_ENABLED, ""true"")));"
226090,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestStorageConfig.java,84,,"            ""changelog-system.changelog-stream0"")));"
226091,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestStorageConfig.java,90,,"            StorageConfig.CHANGELOG_SYSTEM, ""changelog-system"")));"
226092,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestStreamConfig.java,74,,"    doTestSamzaProperty(StreamConfig.CONSUMER_RESET_OFFSET, ""true"","
226093,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestStreamConfig.java,76,,"    doTestSamzaProperty(StreamConfig.CONSUMER_RESET_OFFSET, ""false"","
226094,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestStreamConfig.java,79,,"    doTestSamzaProperty(StreamConfig.CONSUMER_RESET_OFFSET, ""unknown_value"","
226095,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestStreamConfig.java,179,,"        String.format(StreamConfig.SYSTEM_FOR_STREAM_ID, STREAM_ID), ""otherSystem"")));"
226096,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestStreamConfig.java,296,,"    String propertyValue = ""value"";"
226097,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestTaskConfig.java,52,,"        new SystemStream(""kafka"", ""foo""),"
226098,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestTaskConfig.java,52,,"        new SystemStream(""kafka"", ""foo""),"
226099,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestTaskConfig.java,53,,"        new SystemStream(""kafka"", ""bar""),"
226100,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestTaskConfig.java,54,,"        new SystemStream(""otherKafka"", ""bar""),"
226101,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestTaskConfig.java,55,,"        new SystemStream(""otherKafka"", ""foo.bar""));"
226102,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestTaskConfig.java,122,,"    Config config = new MapConfig(ImmutableMap.of(TaskConfig.DROP_DESERIALIZATION_ERRORS, ""true""));"
226103,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/config/TestTaskConfig.java,125,,"    config = new MapConfig(ImmutableMap.of(TaskConfig.DROP_DESERIALIZATION_ERRORS, ""false""));"
226104,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/TestContainerHeartbeatMonitor.java,96,,"    assertTrue(""Did not complete heartbeat check"", fixedRateTaskCompleted);"
226105,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/TestContainerHeartbeatMonitor.java,98,,"    assertEquals(""Heartbeat expired count should be 1"", 1,"
226106,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/TestLocalityManager.java,64,,"    localityManager.writeContainerToHostMapping(""0"", ""localhost"");"
226107,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/disk/TestPollingScanDiskSpaceMonitor.java,73,,"    writeFile(child1Dir, ""foo"", new byte[1024]);"
226108,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/disk/TestPollingScanDiskSpaceMonitor.java,95,,"    Path childDir = createDirectory(testDir, ""child"");"
226109,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/disk/TestPollingScanDiskSpaceMonitor.java,122,,"    writeFile(testDir, ""regular-file"", new byte[1024]);"
226110,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/disk/TestPollingScanDiskSpaceMonitor.java,123,,"    Files.createSymbolicLink(testDir.resolve(""symlink""), testDir.resolve(""regular-file""));"
226111,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestAllSspToSingleTaskGrouper.java,40,,"  private SystemStreamPartition aa0 = new SystemStreamPartition(""SystemA"", ""StreamA"", new Partition(0));"
226112,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestAllSspToSingleTaskGrouper.java,52,,"    configMap.put(""processor.list"", ""0,1"");"
226113,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupByPartition.java,38,,"  private SystemStreamPartition aa0 = new SystemStreamPartition(""SystemA"", ""StreamA"", new Partition(0));"
226114,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupByPartitionWithGrouperProxy.java,48,,"        .put(new TaskName(""Partition 0""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(0))))"
226115,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupByPartitionWithGrouperProxy.java,48,,"        .put(new TaskName(""Partition 0""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(0))))"
226116,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupByPartitionWithGrouperProxy.java,48,,"        .put(new TaskName(""Partition 0""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(0))))"
226117,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupByPartitionWithGrouperProxy.java,49,,"        .put(new TaskName(""Partition 1""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(1))))"
226118,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupByPartitionWithGrouperProxy.java,50,,"        .put(new TaskName(""Partition 2""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(2))))"
226119,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupByPartitionWithGrouperProxy.java,51,,"        .put(new TaskName(""Partition 3""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(3))))"
226120,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupByPartitionWithGrouperProxy.java,74,,"        .put(new TaskName(""Partition 4""), ImmutableSet.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(4))))"
226121,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupByPartitionWithGrouperProxy.java,75,,"        .put(new TaskName(""Partition 5""), ImmutableSet.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(5))))"
226122,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupByPartitionWithGrouperProxy.java,76,,"        .put(new TaskName(""Partition 6""), ImmutableSet.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(6))))"
226123,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupByPartitionWithGrouperProxy.java,77,,"        .put(new TaskName(""Partition 7""), ImmutableSet.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(7))))"
226124,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupByPartitionWithGrouperProxy.java,95,,"        .put(new TaskName(""Partition 0""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(0)), new SystemStreamPartition(""kafka"", ""URE"", new Partition(0))))"
226125,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupByPartitionWithGrouperProxy.java,109,,"        .forEach(partitionId -> currSsps.add(new SystemStreamPartition(""kafka"", ""BOB"", new Partition(partitionId))));"
226126,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartition.java,39,,"  private SystemStreamPartition aa0 = new SystemStreamPartition(""SystemA"", ""StreamA"", new Partition(0));"
226127,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,47,,"        .put(new TaskName(""SystemStreamPartition [kafka, PVE, 0]""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(0))))"
226128,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,47,,"        .put(new TaskName(""SystemStreamPartition [kafka, PVE, 0]""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(0))))"
226129,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,47,,"        .put(new TaskName(""SystemStreamPartition [kafka, PVE, 0]""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(0))))"
226130,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,48,,"        .put(new TaskName(""SystemStreamPartition [kafka, PVE, 1]""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(1))))"
226131,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,49,,"        .put(new TaskName(""SystemStreamPartition [kafka, PVE, 2]""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(2))))"
226132,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,50,,"        .put(new TaskName(""SystemStreamPartition [kafka, PVE, 3]""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(3))))"
226133,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,73,,"        .put(new TaskName(""SystemStreamPartition [kafka, PVE, 5]""), ImmutableSet.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(5))))"
226134,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,74,,"        .put(new TaskName(""SystemStreamPartition [kafka, PVE, 4]""), ImmutableSet.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(4))))"
226135,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,75,,"        .put(new TaskName(""SystemStreamPartition [kafka, PVE, 7]""), ImmutableSet.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(7))))"
226136,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,76,,"        .put(new TaskName(""SystemStreamPartition [kafka, PVE, 6]""), ImmutableSet.of(new SystemStreamPartition(""kafka"", ""PVE"", new Partition(6))))"
226137,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,98,,"        .put(new TaskName(""SystemStreamPartition [kafka, URE, 0]""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""URE"", new Partition(0))))"
226138,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,98,,"        .put(new TaskName(""SystemStreamPartition [kafka, URE, 0]""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""URE"", new Partition(0))))"
226139,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,99,,"        .put(new TaskName(""SystemStreamPartition [kafka, URE, 1]""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""URE"", new Partition(1))))"
226140,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,100,,"        .put(new TaskName(""SystemStreamPartition [kafka, URE, 2]""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""URE"", new Partition(2))))"
226141,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,101,,"        .put(new TaskName(""SystemStreamPartition [kafka, URE, 3]""), ImmutableList.of(new SystemStreamPartition(""kafka"", ""URE"", new Partition(3))))"
226142,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,107,,"    IntStream.range(0, 8).forEach(partitionId -> currSsps.add(new SystemStreamPartition(""kafka"", ""BOB"", new Partition(partitionId))));"
226143,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,111,,"        .put(new TaskName(""SystemStreamPartition [kafka, BOB, 2]""), ImmutableSet.of(new SystemStreamPartition(""kafka"", ""BOB"", new Partition(2))))"
226144,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,112,,"        .put(new TaskName(""SystemStreamPartition [kafka, BOB, 1]""), ImmutableSet.of(new SystemStreamPartition(""kafka"", ""BOB"", new Partition(1))))"
226145,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,113,,"        .put(new TaskName(""SystemStreamPartition [kafka, BOB, 0]""), ImmutableSet.of(new SystemStreamPartition(""kafka"", ""BOB"", new Partition(0))))"
226146,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,114,,"        .put(new TaskName(""SystemStreamPartition [kafka, BOB, 7]""), ImmutableSet.of(new SystemStreamPartition(""kafka"", ""BOB"", new Partition(7))))"
226147,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,115,,"        .put(new TaskName(""SystemStreamPartition [kafka, BOB, 6]""), ImmutableSet.of(new SystemStreamPartition(""kafka"", ""BOB"", new Partition(6))))"
226148,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,116,,"        .put(new TaskName(""SystemStreamPartition [kafka, BOB, 4]""), ImmutableSet.of(new SystemStreamPartition(""kafka"", ""BOB"", new Partition(4))))"
226149,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,117,,"        .put(new TaskName(""SystemStreamPartition [kafka, BOB, 5]""), ImmutableSet.of(new SystemStreamPartition(""kafka"", ""BOB"", new Partition(5))))"
226150,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/stream/TestGroupBySystemStreamPartitionWithGrouperProxy.java,118,,"        .put(new TaskName(""SystemStreamPartition [kafka, BOB, 3]""), ImmutableSet.of(new SystemStreamPartition(""kafka"", ""BOB"", new Partition(3))))"
226151,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/task/TestGroupByContainerIds.java,251,,"    String testProcessorId1 = ""testProcessorId1"";"
226152,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/task/TestGroupByContainerIds.java,252,,"    String testProcessorId2 = ""testProcessorId2"";"
226153,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/task/TestGroupByContainerIds.java,253,,"    String testProcessorId3 = ""testProcessorId3"";"
226154,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/task/TestGroupByContainerIds.java,255,,"    LocationId testLocationId1 = new LocationId(""testLocationId1"");"
226155,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/task/TestGroupByContainerIds.java,256,,"    LocationId testLocationId2 = new LocationId(""testLocationId2"");"
226156,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/task/TestGroupByContainerIds.java,257,,"    LocationId testLocationId3 = new LocationId(""testLocationId3"");"
226157,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/task/TestGroupByContainerIds.java,259,,"    TaskName testTaskName1 = new TaskName(""testTasKId1"");"
226158,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/task/TestGroupByContainerIds.java,260,,"    TaskName testTaskName2 = new TaskName(""testTaskId2"");"
226159,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/task/TestGroupByContainerIds.java,261,,"    TaskName testTaskName3 = new TaskName(""testTaskId3"");"
226160,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/task/TestTaskAssignmentManager.java,62,,"    Map<String, String> expectedMap = ImmutableMap.of(""Task0"", ""0"", ""Task1"", ""1"", ""Task2"", ""2"", ""Task3"", ""0"", ""Task4"", ""1"");"
226161,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/task/TestTaskAssignmentManager.java,62,,"    Map<String, String> expectedMap = ImmutableMap.of(""Task0"", ""0"", ""Task1"", ""1"", ""Task2"", ""2"", ""Task3"", ""0"", ""Task4"", ""1"");"
226162,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/task/TestTaskPartitionAssignmentManager.java,65,,"    List<String> testTaskNames = ImmutableList.of(""test-task1"", ""test-task2"", ""test-task3"");"
226163,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/task/TestTaskPartitionAssignmentManager.java,65,,"    List<String> testTaskNames = ImmutableList.of(""test-task1"", ""test-task2"", ""test-task3"");"
226164,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/container/grouper/task/TestTaskPartitionAssignmentManager.java,65,,"    List<String> testTaskNames = ImmutableList.of(""test-task1"", ""test-task2"", ""test-task3"");"
226165,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/context/TestTaskContextImpl.java,75,,"    when(keyValueStoreProvider.apply(""myStore"")).thenReturn(store);"
226166,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/coordinator/TestJobModelManager.java,119,,"    when(mockLocalityManager.readLocality()).thenReturn(new LocalityModel(ImmutableMap.of(""0"", new ProcessorLocality(""0"", ""abc-affinity""))));"
226167,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/coordinator/TestJobModelManager.java,121,,"    Map<SystemStreamPartition, List<String>> taskToSSPAssignments = ImmutableMap.of(testSystemStreamPartition1, ImmutableList.of(""task-0"", ""task-1""),"
226168,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/coordinator/TestJobModelManager.java,121,,"    Map<SystemStreamPartition, List<String>> taskToSSPAssignments = ImmutableMap.of(testSystemStreamPartition1, ImmutableList.of(""task-0"", ""task-1""),"
226169,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/coordinator/TestJobModelManager.java,122,,"                                                                                    testSystemStreamPartition2, ImmutableList.of(""task-2"", ""task-3""));"
226170,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/coordinator/TestJobModelManager.java,122,,"                                                                                    testSystemStreamPartition2, ImmutableList.of(""task-2"", ""task-3""));"
226171,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/coordinator/TestJobModelManager.java,201,,"    taskModelMap.put(new TaskName(""task-4""), new TaskModel(new TaskName(""task-4""), ImmutableSet.of(testSystemStreamPartition4), new Partition(3)));"
226172,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/coordinator/metadatastore/TestCoordinatorStreamStore.java,50,,"    String key = getCoordinatorMessageKey(""test-key1"");"
226173,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/coordinator/metadatastore/TestCoordinatorStreamStore.java,51,,"    byte[] value = getValue(""test-value1"");"
226174,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/coordinator/stream/MockCoordinatorStreamSystemFactory.java,103,,"    assertNotNull(config.get(""job.coordinator.system""));"
226175,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/coordinator/stream/MockCoordinatorStreamWrappedConsumer.java,82,,"          keyBytes = MAPPER.writeValueAsString(changelogMapping.getKeyArray()).getBytes(""UTF-8"");"
226176,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/coordinator/stream/TestCoordinatorStreamMessage.java,37,,"    CoordinatorStreamMessage message = new CoordinatorStreamMessage(""source"");"
226177,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/coordinator/stream/TestCoordinatorStreamMessage.java,56,,"    SetConfig setConfig = new SetConfig(""source"", ""key"", ""value"");"
226178,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/ExecutionPlannerTestBase.java,77,,"    intermediateInputDescriptor = intermediateSystemDescriptor.getInputDescriptor(""jobName-jobId-partition_by-p1"", defaultSerde)"
226179,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestExecutionPlanner.java,270,,"          ""table-id"", new KVSerde(new StringSerde(), new StringSerde()));"
226180,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestExecutionPlanner.java,387,,"          .withSideInputs(Arrays.asList(""input1""))"
226181,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestExecutionPlanner.java,415,,"          .withSideInputs(Arrays.asList(""input2""))"
226182,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestExecutionPlanner.java,454,,"    StreamTestUtils.addStreamConfigs(configMap, ""input1"", ""system1"", ""input1"");"
226183,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestExecutionPlanner.java,455,,"    StreamTestUtils.addStreamConfigs(configMap, ""input2"", ""system2"", ""input2"");"
226184,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestExecutionPlanner.java,456,,"    StreamTestUtils.addStreamConfigs(configMap, ""input3"", ""system2"", ""input3"");"
226185,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestExecutionPlanner.java,457,,"    StreamTestUtils.addStreamConfigs(configMap, ""input4"", ""system1"", ""input4"");"
226186,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestExecutionPlanner.java,458,,"    StreamTestUtils.addStreamConfigs(configMap, ""output1"", ""system1"", ""output1"");"
226187,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestExecutionPlanner.java,459,,"    StreamTestUtils.addStreamConfigs(configMap, ""output2"", ""system2"", ""output2"");"
226188,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobGraphJsonGenerator.java,91,,"    input1Spec = new StreamSpec(""input1"", ""input1"", ""input-system"");"
226189,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobGraphJsonGenerator.java,92,,"    input2Spec = new StreamSpec(""input2"", ""input2"", ""input-system"");"
226190,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobGraphJsonGenerator.java,158,,"    StreamTestUtils.addStreamConfigs(configMap, ""input1"", ""system1"", ""input1"");"
226191,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobGraphJsonGenerator.java,159,,"    StreamTestUtils.addStreamConfigs(configMap, ""input2"", ""system2"", ""input2"");"
226192,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobGraphJsonGenerator.java,160,,"    StreamTestUtils.addStreamConfigs(configMap, ""input3"", ""system2"", ""input3"");"
226193,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobGraphJsonGenerator.java,161,,"    StreamTestUtils.addStreamConfigs(configMap, ""output1"", ""system1"", ""output1"");"
226194,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobGraphJsonGenerator.java,162,,"    StreamTestUtils.addStreamConfigs(configMap, ""output2"", ""system2"", ""output2"");"
226195,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobGraphJsonGenerator.java,241,,"    StreamTestUtils.addStreamConfigs(configMap, ""PageViewCount"", ""kafka"", ""PageViewCount"");"
226196,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobGraphJsonGenerator.java,304,,"    when(mockAppConfig.getAppName()).thenReturn(""testTaskApp"");"
226197,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobGraphJsonGenerator.java,305,,"    when(mockAppConfig.getAppId()).thenReturn(""testTaskAppId"");"
226198,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobGraphJsonGenerator.java,381,,"    assertTrue(map.containsKey(""tableId""));"
226199,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobNodeConfigurationGenerator.java,71,,"    JobConfig jobConfig = configureGenerator.generateJobConfig(mockJobNode, ""testJobGraphJson"");"
226200,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobNodeConfigurationGenerator.java,158,,"    GenericInputDescriptor<KV<String, Object>> sideInput1 = inputSystemDescriptor.getInputDescriptor(""sideInput1"", defaultSerde);"
226201,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobNodeConfigurationGenerator.java,243,,"        ImmutableMap.of(""job.name"", ""samza-job"", ""job.id"", ""1"", ""app.name"", ""samza-app"");"
226202,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobNodeConfigurationGenerator.java,243,,"        ImmutableMap.of(""job.name"", ""samza-job"", ""job.id"", ""1"", ""app.name"", ""samza-app"");"
226203,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobNodeConfigurationGenerator.java,243,,"        ImmutableMap.of(""job.name"", ""samza-job"", ""job.id"", ""1"", ""app.name"", ""samza-app"");"
226204,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobPlanner.java,38,,"    testConfig.put(""app.name"", ""samza-app"");"
226205,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobPlanner.java,41,,"    Assert.assertEquals(generatedConfig.get(""job.name""), ""samza-app"");"
226206,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestJobPlanner.java,42,,"    Assert.assertEquals(generatedConfig.get(""job.id""), ""id"");"
226207,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestLocalJobPlanner.java,85,,"        Collections.singletonList(new StreamSpec(""test-stream"", ""test-stream"", ""test-system"")));"
226208,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestLocalJobPlanner.java,149,,"    List<StreamSpec> streamSpecs = ImmutableList.of(new StreamSpec(""test-stream-1"", ""stream-1"", ""testStream""),"
226209,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestLocalJobPlanner.java,149,,"    List<StreamSpec> streamSpecs = ImmutableList.of(new StreamSpec(""test-stream-1"", ""stream-1"", ""testStream""),"
226210,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestLocalJobPlanner.java,149,,"    List<StreamSpec> streamSpecs = ImmutableList.of(new StreamSpec(""test-stream-1"", ""stream-1"", ""testStream""),"
226211,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestLocalJobPlanner.java,150,,"        new StreamSpec(""test-stream-2"", ""stream-2"", ""testStream""),"
226212,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestLocalJobPlanner.java,150,,"        new StreamSpec(""test-stream-2"", ""stream-2"", ""testStream""),"
226213,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestLocalJobPlanner.java,151,,"        new StreamSpec(""test-stream-3"", ""stream-3"", ""testStream""));"
226214,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestLocalJobPlanner.java,151,,"        new StreamSpec(""test-stream-3"", ""stream-3"", ""testStream""));"
226215,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestStreamEdge.java,36,,"  StreamSpec spec = new StreamSpec(""stream-1"", ""physical-stream-1"", ""system-1"");"
226216,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestStreamEdge.java,36,,"  StreamSpec spec = new StreamSpec(""stream-1"", ""physical-stream-1"", ""system-1"");"
226217,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/execution/TestStreamEdge.java,36,,"  StreamSpec spec = new StreamSpec(""stream-1"", ""physical-stream-1"", ""system-1"");"
226218,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/job/TestShellCommandBuilder.java,39,,"    Config config = new MapConfig(ImmutableMap.of(ShellCommandConfig.COMMAND_SHELL_EXECUTE, ""foo""));"
226219,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/job/model/TestJobModelUtil.java,165,,"        new SystemStreamPartition(""system1"", ""stream1_1"", new Partition(0)),"
226220,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/metrics/reporter/TestLoggingMetricsReporter.java,128,,"    verify(this.loggingMetricsReporter).doLog(""Metric: source_name-group_name-counter_name, Value: 10"");"
226221,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/TestJoinOperator.java,97,,"    StreamTestUtils.addStreamConfigs(mapConfig, ""inStream"", ""insystem"", ""instream"");"
226222,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/TestJoinOperator.java,97,,"    StreamTestUtils.addStreamConfigs(mapConfig, ""inStream"", ""insystem"", ""instream"");"
226223,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/TestJoinOperator.java,97,,"    StreamTestUtils.addStreamConfigs(mapConfig, ""inStream"", ""insystem"", ""instream"");"
226224,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/TestJoinOperator.java,308,,"    StreamTestUtils.addStreamConfigs(mapConfig, ""inStream2"", ""insystem"", ""instream2"");"
226225,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestInputOperatorImpl.java,38,,"        new InputOperatorImpl(new InputOperatorSpec(""stream-id"", null, null, null, true, ""input-op-id""));"
226226,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestInputOperatorImpl.java,38,,"        new InputOperatorImpl(new InputOperatorSpec(""stream-id"", null, null, null, true, ""input-op-id""));"
226227,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestInputOperatorImpl.java,41,,"        new IncomingMessageEnvelope(mock(SystemStreamPartition.class), ""123"", ""key"", ""msg"");"
226228,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestInputOperatorImpl.java,41,,"        new IncomingMessageEnvelope(mock(SystemStreamPartition.class), ""123"", ""key"", ""msg"");"
226229,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestInputOperatorImpl.java,41,,"        new IncomingMessageEnvelope(mock(SystemStreamPartition.class), ""123"", ""key"", ""msg"");"
226230,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestOperatorImplGraph.java,117,,"    String inputStreamId = ""input"";"
226231,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestOperatorImplGraph.java,118,,"    String inputSystem = ""input-system"";"
226232,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestOperatorImplGraph.java,135,,"      GenericSystemDescriptor sd = new GenericSystemDescriptor(inputSystem, ""mockFactoryClass"");"
226233,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestOperatorImplGraph.java,293,,"    String inputStreamId1 = ""input1"";"
226234,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestOperatorImplGraph.java,294,,"    String inputStreamId2 = ""input2"";"
226235,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestOperatorImplGraph.java,308,,"    JoinFunction testJoinFunction = new TestJoinFunction(""jobName-jobId-join-j1"","
226236,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestOperatorImplGraph.java,523,,"    String inputSystem1 = ""system1"";"
226237,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestWatermarkStates.java,71,,"    watermarkMessage = new WatermarkMessage(3L, ""task 1"");"
226238,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestWindowOperator.java,87,,"    configMap.put(""job.default.system"", ""kafka"");"
226239,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestWindowOperator.java,97,,"    SystemStreamPartition ssp = new SystemStreamPartition(""kafka"", ""integers"", new Partition(0));"
226240,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestWindowOperator.java,537,,"      GenericSystemDescriptor sd = new GenericSystemDescriptor(""kafka"", ""mockFactoryClass"");"
226241,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestWindowOperator.java,543,,"            SystemStream outputSystemStream = new SystemStream(""outputSystem"", ""outputStream"");"
226242,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/TestWindowOperator.java,543,,"            SystemStream outputSystemStream = new SystemStream(""outputSystem"", ""outputStream"");"
226243,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/store/TestTimeSeriesStoreImpl.java,38,,"    TimeSeriesStore<String, byte[]> timeSeriesStore = newTimeSeriesStore(new StringSerde(""UTF-8""), true);"
226244,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/store/TestTimeSeriesStoreImpl.java,41,,"    timeSeriesStore.put(""hello"", ""world-1"".getBytes(), 1L);"
226245,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/store/TestTimeSeriesStoreImpl.java,41,,"    timeSeriesStore.put(""hello"", ""world-1"".getBytes(), 1L);"
226246,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/impl/store/TestTimeSeriesStoreImpl.java,43,,"    timeSeriesStore.put(""hello"", ""world-2"".getBytes(), 2L);"
226247,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/spec/TestOperatorSpec.java,151,,"        OperatorSpecs.createFlatMapOperatorSpec(flatMap, ""op0"");"
226248,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/spec/TestOperatorSpec.java,174,,"    MapFunction userFn = (MapFunction) Whitebox.getInternalState(streamOperatorSpec, ""mapFn"");"
226249,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/spec/TestOperatorSpec.java,225,,"        ""mockStreamId"", new StringSerde(""UTF-8""), objSerde, null, true, ""op0"");"
226250,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/spec/TestOperatorSpec.java,228,,"    assertNotEquals(""Expected deserialized copy of operator spec should not be the same as the original operator spec"", inputOperatorSpec, inputOpCopy);"
226251,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/spec/TestPartitionByOperatorSpec.java,54,,"  private final String testRepartitionedStreamName = ""parByKey"";"
226252,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/operators/spec/TestPartitionByOperatorSpec.java,70,,"    assertTrue(inputOpSpecs.keySet().contains(String.format(""%s-%s-partition_by-%s"", testJobName, testJobId, testRepartitionedStreamName)));"
226253,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/processor/TestStreamProcessor.java,406,,"    StreamProcessor streamProcessor = Mockito.spy(new StreamProcessor(""TestProcessorId"", new MapConfig(),"
226254,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/processor/TestStreamProcessor.java,426,,"    MapConfig config = new MapConfig(ImmutableMap.of(""task.shutdown.ms"", ""0""));"
226255,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/runtime/TestApplicationRunnerMain.java,44,,"        ""-config"", ""job.config.loader.factory=org.apache.samza.config.loaders.PropertiesConfigLoaderFactory"","
226256,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/runtime/TestApplicationRunnerMain.java,44,,"        ""-config"", ""job.config.loader.factory=org.apache.samza.config.loaders.PropertiesConfigLoaderFactory"","
226257,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/runtime/TestApplicationRunnerMain.java,45,,"        ""-config"", ""job.config.loader.properties.path="" + getClass().getResource(""/test.properties"").getPath(),"
226258,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/runtime/TestApplicationRunnerMain.java,45,,"        ""-config"", ""job.config.loader.properties.path="" + getClass().getResource(""/test.properties"").getPath(),"
226259,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/runtime/TestApplicationRunnerMain.java,46,,"        ""-config"", String.format(""%s=%s"", ApplicationConfig.APP_CLASS, MockStreamApplication.class.getName()),"
226260,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/scheduler/TestCallbackSchedulerImpl.java,49,,"    scheduler.scheduleCallback(""string_key"", 123, stringCallback);"
226261,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/serializers/model/TestSamzaObjectMapper.java,54,,"    TaskName taskName = new TaskName(""test"");"
226262,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/serializers/model/TestSamzaObjectMapper.java,76,,"    assertEquals(expectedJson.get(""containers""), serializedAsJson.get(""containers""));"
226263,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/serializers/model/TestSamzaObjectMapper.java,149,,"    containerModelJson.remove(""processor-id"");"
226264,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/startpoint/TestStartpointManager.java,103,,"      Assert.fail(""Expected precondition exception."");"
226265,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/startpoint/TestStartpointManager.java,206,,"    SystemStreamPartition sspBroadcast = new SystemStreamPartition(""mockSystem1"", ""mockStream1"", new Partition(2));"
226266,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/startpoint/TestStartpointManager.java,206,,"    SystemStreamPartition sspBroadcast = new SystemStreamPartition(""mockSystem1"", ""mockStream1"", new Partition(2));"
226267,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/startpoint/TestStartpointManager.java,207,,"    SystemStreamPartition sspSingle = new SystemStreamPartition(""mockSystem2"", ""mockStream2"", new Partition(3));"
226268,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/startpoint/TestStartpointManager.java,207,,"    SystemStreamPartition sspSingle = new SystemStreamPartition(""mockSystem2"", ""mockStream2"", new Partition(3));"
226269,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/startpoint/TestStartpointManager.java,227,,"    Assert.assertFalse(""Should be deleted after fan out"", startpointManager.readStartpoint(sspBroadcast).isPresent());"
226270,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/storage/TestChangelogStreamManager.java,68,,"      throw new UnsupportedOperationException(""Unused in test"");"
226271,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/storage/TestStorageRecovery.java,46,,"  public static SystemStreamPartition ssp = new SystemStreamPartition(""mockSystem"", SYSTEM_STREAM_NAME, new Partition(0));"
226272,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/storage/TestTaskSideInputStorageManager.java,59,,"    assertTrue(""Store directory: "" + storeDir.getPath() + "" is missing."", storeDir.exists());"
226273,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/storage/TestTaskSideInputStorageManager.java,66,,"    final SystemStreamPartition ssp = new SystemStreamPartition(""test-system"", ""test-stream"", new Partition(0));"
226274,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/storage/TestTaskSideInputStorageManager.java,66,,"    final SystemStreamPartition ssp = new SystemStreamPartition(""test-system"", ""test-stream"", new Partition(0));"
226275,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/storage/TestTaskSideInputStorageManager.java,67,,"    final String offset = ""123"";"
226276,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/storage/TestTaskSideInputStorageManager.java,88,,"    assertTrue(""Failed to get offset for ssp: "" + ssp.toString() + "" from file."", fileOffsets.containsKey(ssp));"
226277,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/storage/TestTaskSideInputStorageManager.java,88,,"    assertTrue(""Failed to get offset for ssp: "" + ssp.toString() + "" from file."", fileOffsets.containsKey(ssp));"
226278,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/storage/TestTaskSideInputStorageManager.java,89,,"    assertEquals(""Mismatch between last processed offset and file offset."", fileOffsets.get(ssp), offset);"
226279,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/storage/TestTransactionalStateTaskRestoreManager.java,80,,"    when(mockTaskModel.getTaskName()).thenReturn(new TaskName(""Partition 0""));"
226280,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/storage/TestTransactionalStateTaskRestoreManager.java,84,,"    String store1Name = ""store1"";"
226281,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/storage/TestTransactionalStateTaskRestoreManager.java,85,,"    String changelog1SystemName = ""system1"";"
226282,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/storage/TestTransactionalStateTaskRestoreManager.java,86,,"    String changelog1StreamName = ""store1Changelog"";"
226283,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/storage/TestTransactionalStateTaskRestoreManager.java,203,,"    Config mockConfig = new MapConfig(Collections.singletonMap(""stores.store1.clean.on.container.start"", ""true""));"
226284,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/system/inmemory/TestInMemoryManager.java,57,,"    this.inMemoryManager.initializeStream(new StreamSpec(""otherStream"", ""otherStream"", SYSTEM, 1));"
226285,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/system/inmemory/TestInMemoryManager.java,67,,"    this.inMemoryManager.put(ssp0, ""key00"", ""message00"");"
226286,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/system/inmemory/TestInMemoryManager.java,67,,"    this.inMemoryManager.put(ssp0, ""key00"", ""message00"");"
226287,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/system/inmemory/TestInMemoryManager.java,74,,"    this.inMemoryManager.put(ssp0, ""key01"", ""message01"");"
226288,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/system/inmemory/TestInMemoryManager.java,74,,"    this.inMemoryManager.put(ssp0, ""key01"", ""message01"");"
226289,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/caching/TestCachingTable.java,249,,"    Assert.assertNull(cachingTable.get(""abc""));"
226290,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/caching/TestCachingTable.java,313,,"    Assert.assertEquals(cachingTable.getAsync(""foo"").get(), ""bar"");"
226291,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/caching/TestCachingTable.java,331,,"    records.put(""foo1"", ""bar1"");"
226292,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/caching/TestCachingTable.java,332,,"    records.put(""foo2"", ""bar2"");"
226293,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/caching/TestCachingTable.java,340,,"    doReturn(CompletableFuture.completedFuture(Collections.singletonMap(""foo3"", ""bar3""))).when(readFn).getAllAsync(any());"
226294,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/ratelimit/TestAsyncRateLimitedTable.java,60,,"    doReturn(CompletableFuture.completedFuture(""bar"")).when(readFn).getAsync(any());"
226295,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/ratelimit/TestAsyncRateLimitedTable.java,62,,"    readMap.put(""foo"", ""bar"");"
226296,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/remote/TestRemoteTable.java,107,,"      future.completeExceptionally(new RuntimeException(""Test exception""));"
226297,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/remote/TestRemoteTable.java,112,,"        doAnswer(args -> times[0]++ == 0 ? future : CompletableFuture.completedFuture(""bar""))"
226298,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/remote/TestRemoteTable.java,123,,"    Assert.assertEquals(""bar"", sync ? table.get(""foo"") : table.getAsync(""foo"").join());"
226299,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/remote/TestRemoteTable.java,186,,"    doReturn(CompletableFuture.completedFuture(""bar1"")).when(readFn1).getAsync(anyString());"
226300,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/remote/TestRemoteTable.java,192,,"    CompletableFuture<String> future1 = table1.getAsync(""foo1"");"
226301,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/remote/TestRemoteTable.java,193,,"    CompletableFuture<String> future2 = table2.getAsync(""foo2"");"
226302,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/retry/TestAsyncRetriableTable.java,83,,"    doReturn(CompletableFuture.completedFuture(""bar"")).when(readFn).getAsync(any());"
226303,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/retry/TestAsyncRetriableTable.java,86,,"    result.put(""foo"", ""bar"");"
226304,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/retry/TestAsyncRetriableTable.java,160,,"    future.completeExceptionally(new RuntimeException(""test exception""));"
226305,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/table/retry/TestTableRetryPolicy.java,51,,"        + ""\""retryPredicate\"":{}}"", retryPolicy.toConfig(null, null).get(""TableRetryPolicy""));"
226306,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/task/TestTaskCallbackManager.java,43,,"    TaskInstanceMetrics metrics = new TaskInstanceMetrics(""Partition 0"", new MetricsRegistryMap(), """");"
226307,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/task/TestTaskCallbackManager.java,67,,"    SystemStreamPartition ssp = new SystemStreamPartition(""kafka"", ""topic"", new Partition(0));"
226308,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/task/TestTaskCallbackManager.java,67,,"    SystemStreamPartition ssp = new SystemStreamPartition(""kafka"", ""topic"", new Partition(0));"
226309,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/util/TestEmbeddedTaggedRateLimiter.java,108,,"    tagToCredits.put(""red"", 1);"
226310,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/util/TestEmbeddedTaggedRateLimiter.java,109,,"    tagToCredits.put(""green"", 1);"
226311,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/util/TestReflectionUtil.java,51,,"    assertEquals(new WithTwoArgConstructor(""hello"", ImmutableList.of(""hello"", ""world"")),"
226312,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/util/TestStreamUtil.java,127,,"        ""systemProperty1"", ""systemValue1"","
226313,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/util/TestStreamUtil.java,127,,"        ""systemProperty1"", ""systemValue1"","
226314,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/util/TestStreamUtil.java,128,,"        ""systemProperty2"", ""systemValue2"","
226315,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/util/TestStreamUtil.java,128,,"        ""systemProperty2"", ""systemValue2"","
226316,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/util/TestStreamUtil.java,129,,"        ""systemProperty3"", ""systemValue3"");"
226317,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/util/TestStreamUtil.java,129,,"        ""systemProperty3"", ""systemValue3"");"
226318,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/zk/TestScheduleAfterDebounceTime.java,61,,"    scheduledQueue.scheduleAfterDebounceTime(""TEST1"", WAIT_TIME, () -> {"
226319,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/zk/TestZkBarrierForVersionUpgrade.java,101,,"    String barrierId = String.format(""%s/%s"", zkUtils1.getKeyBuilder().getRootPath(), RandomStringUtils.randomAlphabetic(4));"
226320,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/zk/TestZkBarrierForVersionUpgrade.java,113,,"    String barrierState = zkUtils.getZkClient().readData(barrierId + ""/barrier_1/barrier_state"");"
226321,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/zk/TestZkKeyBuilder.java,39,,"    Assert.assertEquals(""/test/"" + ZkKeyBuilder.PROCESSORS_PATH, builder.getProcessorsPath());"
226322,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/zk/TestZkLeaderElector.java,204,,"    zkUtils1.registerProcessorAndGetId(new ProcessorData(""processor1"", ""1""));"
226323,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/zk/TestZkLeaderElector.java,221,,"    final String path2 = zkUtils2.registerProcessorAndGetId(new ProcessorData(""processor2"", ""2""));"
226324,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/zk/TestZkLeaderElector.java,252,,"    zkUtils3.registerProcessorAndGetId(new ProcessorData(""processor3"", ""3""));"
226325,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/zk/TestZkMetadataStore.java,75,,"    String key = ""test-key1"";"
226326,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/zk/TestZkNamespace.java,79,,"    String zkConnect = ""127.0.0.1:"" + zkServer.getPort();"
226327,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/zk/TestZkUtils.java,58,,"  private static final ZkKeyBuilder KEY_BUILDER = new ZkKeyBuilder(""test"");"
226328,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/zk/TestZkUtils.java,135,,"    zkUtils.writeTaskLocality(new TaskName(""task-1""), new LocationId(""LocationId-1""));"
226329,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/zk/TestZkUtils.java,135,,"    zkUtils.writeTaskLocality(new TaskName(""task-1""), new LocationId(""LocationId-1""));"
226330,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/zk/TestZkUtils.java,136,,"    zkUtils.writeTaskLocality(new TaskName(""task-2""), new LocationId(""LocationId-2""));"
226331,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/zk/TestZkUtils.java,136,,"    zkUtils.writeTaskLocality(new TaskName(""task-2""), new LocationId(""LocationId-2""));"
226332,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/zk/TestZkUtils.java,427,,"      Assert.assertFalse(""path "" + p1 + "" exists"", zkUtils.getZkClient().exists(p1));"
226333,./TargetProjects/samza/samza-core/src/test/java/org/apache/samza/zk/TestZkUtils.java,427,,"      Assert.assertFalse(""path "" + p1 + "" exists"", zkUtils.getZkClient().exists(p1));"
226334,./TargetProjects/samza/samza-core/src/test/scala/org/apache/samza/storage/TestTransactionalStateTaskStorageManager.java,71,,"    java.util.Map<String, StorageEngine> taskStores = ImmutableMap.of(""mockStore"", mockStore);"
226335,./TargetProjects/samza/samza-core/src/test/scala/org/apache/samza/storage/TestTransactionalStateTaskStorageManager.java,93,,"    String changelogSystemName = ""systemName"";"
226336,./TargetProjects/samza/samza-core/src/test/scala/org/apache/samza/storage/TestTransactionalStateTaskStorageManager.java,94,,"    String storeName = ""storeName"";"
226337,./TargetProjects/samza/samza-core/src/test/scala/org/apache/samza/storage/TestTransactionalStateTaskStorageManager.java,95,,"    String changelogStreamName = ""changelogName"";"
226338,./TargetProjects/samza/samza-core/src/test/scala/org/apache/samza/storage/TestTransactionalStateTaskStorageManager.java,297,,"        ""loggedPersistentStore"", mockLPStore,"
226339,./TargetProjects/samza/samza-elasticsearch/src/test/java/org/apache/samza/config/ElasticsearchConfigTest.java,47,,"    ElasticsearchConfig config = configForProperty(""systems.es.client.factory"", ""bar"");"
226340,./TargetProjects/samza/samza-hdfs/src/test/java/org/apache/samza/system/hdfs/partitioner/TestDirectoryPartitioner.java,75,,"      ""part-001.avro"","
226341,./TargetProjects/samza/samza-hdfs/src/test/java/org/apache/samza/system/hdfs/partitioner/TestDirectoryPartitioner.java,76,,"      ""part-002.avro"","
226342,./TargetProjects/samza/samza-hdfs/src/test/java/org/apache/samza/system/hdfs/partitioner/TestDirectoryPartitioner.java,77,,"      ""part-003.avro"","
226343,./TargetProjects/samza/samza-hdfs/src/test/java/org/apache/samza/system/hdfs/partitioner/TestDirectoryPartitioner.java,79,,"      ""part-005.avro"","
226344,./TargetProjects/samza/samza-hdfs/src/test/java/org/apache/samza/system/hdfs/partitioner/TestDirectoryPartitioner.java,81,,"      ""part-004.avro"","
226345,./TargetProjects/samza/samza-hdfs/src/test/java/org/apache/samza/system/hdfs/partitioner/TestDirectoryPartitioner.java,83,,"      ""part-006.avro""};"
226346,./TargetProjects/samza/samza-hdfs/src/test/java/org/apache/samza/system/hdfs/partitioner/TestDirectoryPartitioner.java,96,,"    Map<Partition, SystemStreamPartitionMetadata> metadataMap = directoryPartitioner.getPartitionMetadataMap(""hdfs"", null);"
226347,./TargetProjects/samza/samza-hdfs/src/test/java/org/apache/samza/system/hdfs/reader/TestAvroFileHdfsReader.java,57,,"      datum.put(FIELD_2, ""string_"" + i);"
226348,./TargetProjects/samza/samza-hdfs/src/test/java/org/apache/samza/system/hdfs/reader/TestAvroFileHdfsReader.java,158,,"    Assert.assertEquals(0, AvroFileHdfsReader.offsetComparator(""1989"", ""1989""));"
226349,./TargetProjects/samza/samza-hdfs/src/test/java/org/apache/samza/system/hdfs/reader/TestMultiFileHdfsReader.java,56,,"    SystemStreamPartition ssp = new SystemStreamPartition(""hdfs"", ""testStream"", new Partition(0));"
226350,./TargetProjects/samza/samza-hdfs/src/test/java/org/apache/samza/system/hdfs/reader/TestMultiFileHdfsReader.java,56,,"    SystemStreamPartition ssp = new SystemStreamPartition(""hdfs"", ""testStream"", new Partition(0));"
226351,./TargetProjects/samza/samza-hdfs/src/test/java/org/apache/samza/system/hdfs/reader/TestMultiFileHdfsReader.java,57,,"    MultiFileHdfsReader multiReader = new MultiFileHdfsReader(HdfsReaderFactory.ReaderType.AVRO, ssp, Arrays.asList(descriptors), ""0:0"");"
226352,./TargetProjects/samza/samza-hdfs/src/test/java/org/apache/samza/system/hdfs/reader/TestMultiFileHdfsReader.java,62,,"      Assert.assertEquals(""string_"" + (index % NUM_EVENTS), record.get(FIELD_2).toString());"
226353,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/checkpoint/kafka/TestKafkaCheckpointManagerJava.java,58,,"  private static final String CHECKPOINT_SYSTEM = ""system-1"";"
226354,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/checkpoint/kafka/TestKafkaCheckpointManagerJava.java,109,,"    SystemStreamPartition ssp = new SystemStreamPartition(""system-1"", ""input-topic"", new Partition(0));"
226355,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/config/TestKafkaConsumerConfig.java,53,,"    props.put(KAFKA_CONSUMER_PROPERTY_PREFIX + ""bootstrap.servers"", ""useThis:9092"");"
226356,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/config/TestKafkaConsumerConfig.java,177,,"    props.put(String.format(""systems.%s.consumer.%s"", SYSTEM_NAME, ConsumerConfig.AUTO_OFFSET_RESET_CONFIG), ""largest"");"
226357,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/config/TestKafkaConsumerConfig.java,181,,"        KafkaConsumerConfig.getKafkaSystemConsumerConfig(config, SYSTEM_NAME, ""client1"");"
226358,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/config/TestKafkaConsumerConfig.java,183,,"    Assert.assertEquals(""latest"", kafkaConsumerConfig.get(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG));"
226359,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/config/TestKafkaConsumerConfig.java,192,,"    Assert.assertEquals(""earliest"", kafkaConsumerConfig.get(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG));"
226360,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/config/TestKafkaConsumerConfig.java,203,,"    props.put(String.format(""systems.%s.consumer.%s"", SYSTEM_NAME, ConsumerConfig.AUTO_OFFSET_RESET_CONFIG), ""none"");"
226361,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/config/TestKafkaConsumerConfig.java,234,,"    props.put(String.format(""systems.%s.samza.offset.default"", SYSTEM_NAME), ""upcoming"");"
226362,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/config/TestKafkaConsumerConfig.java,243,,"    props.put(String.format(""systems.%s.default.stream.samza.offset.default"", SYSTEM_NAME), ""oldest"");"
226363,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/system/kafka/TestKafkaStreamSpec.java,37,,"        ImmutableMap.of(""segment.bytes"", ""4"", ""replication.factor"", ""7""));"
226364,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/system/kafka/TestKafkaStreamSpec.java,37,,"        ImmutableMap.of(""segment.bytes"", ""4"", ""replication.factor"", ""7""));"
226365,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/system/kafka/TestKafkaSystemAdminJava.java,80,,"    assertEquals(""compact"", coordinatorTopicProperties.get(TopicConfig.CLEANUP_POLICY_CONFIG));"
226366,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/system/kafka/TestKafkaSystemAdminJava.java,121,,"    map.put(""cleanup.policy"", ""compact"");"
226367,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/system/kafka/TestKafkaSystemAdminJava.java,123,,"    map.put(""segment.bytes"", ""536870912"");"
226368,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/system/kafka/TestKafkaSystemAdminJava.java,160,,"    map.put(""job.coordinator.segment.bytes"", ""123"");"
226369,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/system/kafka/TestKafkaSystemAdminJava.java,178,,"    map.put(String.format(""stores.%s.changelog"", ""fakeStore""), topicName);"
226370,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/system/kafka/TestKafkaSystemAdminJava.java,203,,"    interStreamMap.put(String.format(""streams.%s.samza.system"", interStreamId), ""testSystem"");"
226371,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/system/kafka/TestKafkaSystemAdminJava.java,304,,"    StreamSpec spec = new StreamSpec(""testId"", ""testStream"", ""testSystem"", 8);"
226372,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/system/kafka/TestKafkaSystemAdminJava.java,306,,"    assertTrue(""createStream should return true if the stream does not exist and then is created."","
226373,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/system/kafka/TestKafkaSystemAdminJava.java,369,,"        .put(new SystemStreamPartition(SYSTEM, ""stream1"", new Partition(0)), ""o1"")"
226374,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/system/kafka/TestKafkaSystemAdminJava.java,370,,"        .put(new SystemStreamPartition(SYSTEM, ""stream2"", new Partition(0)), ""o2"")"
226375,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/system/kafka/TestKafkaSystemAdminWithMock.java,213,,"    SystemStreamPartition otherSSP = new SystemStreamPartition(TEST_SYSTEM, ""otherTopic"", new Partition(1));"
226376,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/system/kafka/descriptors/TestKafkaInputDescriptor.java,35,,"    KafkaSystemDescriptor sd = new KafkaSystemDescriptor(""kafka"");"
226377,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/util/TestKafkaUtil.java,46,,"        new OutgoingMessageEnvelope(systemStream, partitionKeyInt, ""key"", ""message"");"
226378,./TargetProjects/samza/samza-kafka/src/test/java/org/apache/samza/util/TestKafkaUtil.java,46,,"        new OutgoingMessageEnvelope(systemStream, partitionKeyInt, ""key"", ""message"");"
226379,./TargetProjects/samza/samza-kv-couchbase/src/test/java/org/apache/samza/table/remote/couchbase/TestCouchbaseTableWriteFunction.java,111,,"    writeFunction.putAsync(""key"", null);"
226380,./TargetProjects/samza/samza-kv-rocksdb/src/test/java/org/apache/samza/storage/kv/TestRocksDbKeyValueReader.java,75,,"    map.put(""stores."" + DB_NAME + "".factory"", ""mockFactory"");"
226381,./TargetProjects/samza/samza-kv-rocksdb/src/test/java/org/apache/samza/storage/kv/TestRocksDbKeyValueStoreJava.java,53,,"    RocksDbKeyValueStore store = new RocksDbKeyValueStore(dbDir, options, config, false, ""dbStore"","
226382,./TargetProjects/samza/samza-log4j/src/test/java/org/apache/samza/logging/log4j/TestStreamAppender.java,58,,"    System.setProperty(""samza.container.name"", ""samza-container-1"");"
226383,./TargetProjects/samza/samza-log4j/src/test/java/org/apache/samza/logging/log4j/TestStreamAppender.java,58,,"    System.setProperty(""samza.container.name"", ""samza-container-1"");"
226384,./TargetProjects/samza/samza-log4j/src/test/java/org/apache/samza/logging/log4j/TestStreamAppender.java,71,,"    String streamName = StreamAppender.getStreamName(""log4jTest"", ""1"");"
226385,./TargetProjects/samza/samza-log4j/src/test/java/org/apache/samza/logging/log4j/TestStreamAppender.java,73,,"    map.put(""job.name"", ""log4jTest"");"
226386,./TargetProjects/samza/samza-log4j/src/test/java/org/apache/samza/logging/log4j/TestStreamAppender.java,76,,"    map.put(""systems.mock.samza.factory"", MockSystemFactory.class.getCanonicalName());"
226387,./TargetProjects/samza/samza-log4j/src/test/java/org/apache/samza/logging/log4j/TestStreamAppender.java,78,,"    map.put(""task.log4j.system"", ""mock"");"
226388,./TargetProjects/samza/samza-log4j/src/test/java/org/apache/samza/logging/log4j/TestStreamAppender.java,78,,"    map.put(""task.log4j.system"", ""mock"");"
226389,./TargetProjects/samza/samza-log4j2/src/test/java/org/apache/samza/logging/log4j2/TestStreamAppender.java,69,,"    System.setProperty(""samza.container.name"", ""samza-container-1"");"
226390,./TargetProjects/samza/samza-log4j2/src/test/java/org/apache/samza/logging/log4j2/TestStreamAppender.java,69,,"    System.setProperty(""samza.container.name"", ""samza-container-1"");"
226391,./TargetProjects/samza/samza-log4j2/src/test/java/org/apache/samza/logging/log4j2/TestStreamAppender.java,72,,"        MockSystemProducerAppender.createAppender(""testName"", null, layout, false, false, null, null);"
226392,./TargetProjects/samza/samza-rest/src/test/java/org/apache/samza/monitor/TestLocalStoreMonitor.java,75,,"    taskStoreDir = new File(new File(jobDir, ""test-store""), ""test-task"");"
226393,./TargetProjects/samza/samza-rest/src/test/java/org/apache/samza/monitor/TestLocalStoreMonitor.java,75,,"    taskStoreDir = new File(new File(jobDir, ""test-store""), ""test-task"");"
226394,./TargetProjects/samza/samza-rest/src/test/java/org/apache/samza/rest/resources/TestJobsResource.java,103,,"    Response resp = target(String.format(""v1/jobs/%s/%s"", MockJobProxy.JOB_INSTANCE_2_NAME, MockJobProxy.JOB_INSTANCE_2_ID)).request().get();"
226395,./TargetProjects/samza/samza-rest/src/test/java/org/apache/samza/rest/resources/TestJobsResource.java,129,,"    assertTrue(errorMessage.get(""message""), errorMessage.get(""message"").contains(""does not exist""));"
226396,./TargetProjects/samza/samza-rest/src/test/java/org/apache/samza/rest/resources/TestJobsResource.java,156,,"        .queryParam(""status"", ""started"").request().put(Entity.form(new Form()));"
226397,./TargetProjects/samza/samza-rest/src/test/java/org/apache/samza/rest/resources/TestTasksResource.java,82,,"    assertTrue(errorMessage.get(""message""), errorMessage.get(""message"").contains(""Invalid arguments for getTasks. ""));"
226398,./TargetProjects/samza/samza-sql-shell/src/main/java/org/apache/samza/sql/client/impl/CliCommandHandler.java,456,,"        writer.println(""Error: "" + e);"
226399,./TargetProjects/samza/samza-sql-shell/src/main/java/org/apache/samza/sql/client/impl/SamzaExecutor.java,317,,"    staticConfigs.put(SamzaSqlApplicationConfig.CFG_IO_RESOLVER, ""config"");"
226400,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/avro/TestAvroRelConversion.java,105,,"    SystemStream ss1 = new SystemStream(""test"", ""complexRecord"");"
226401,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/avro/TestAvroRelConversion.java,149,,"        recordType.getField(""name"", true, false).getType().getSqlTypeName() == SqlTypeName.VARCHAR);"
226402,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/avro/TestAvroRelConversion.java,173,,"    record.put(""name"", ""name1"");"
226403,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/avro/TestAvroRelConversion.java,175,,"    SamzaSqlRelMessage message = simpleRecordAvroRelConverter.convertToRelMessage(new KV<>(""key"", record));"
226404,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/avro/TestAvroRelConversion.java,248,,"    record.put(""non_nullable_union_value"", testStrValue);"
226405,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/data/TestSamzaSqlRelMessage.java,32,,"  private List<Object> values = Arrays.asList(""value1"", ""value2"");"
226406,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/data/TestSamzaSqlRelMessage.java,32,,"  private List<Object> values = Arrays.asList(""value1"", ""value2"");"
226407,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/data/TestSamzaSqlRelMessage.java,33,,"  private List<String> names = Arrays.asList(""field1"", ""field2"");"
226408,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/fn/TestGetSqlFieldUdf.java,35,,"    Object child = (level == fieldNames.size() - 1) ? ""bar"" : createRecord(fieldNames, level + 1);"
226409,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/fn/TestGetSqlFieldUdf.java,72,,"    SamzaSqlRelRecord record = createRecord(""bar.baz.baf.foo"");"
226410,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/planner/CheckerTest.java,44,,"  @SamzaSqlUdf(name = ""TestUdfWithWrongTypes"", description = ""TestUDFClass"")"
226411,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/planner/CheckerTest.java,78,,"    Method udfMethod = TestUdfWithWrongTypes.class.getMethod(""execute"", String.class);"
226412,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/planner/TestQueryPlanner.java,83,,"        ""Insert into testavro.enrichedPageViewTopic """
226413,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/planner/TestQueryPlanner.java,84,,"            + ""select pv.pageKey as __key__, pv.pageKey as pageKey, coalesce(null, 'N/A') as companyName,"""
226414,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/planner/TestQueryPlanner.java,85,,"            + ""       p.name as profileName, p.address as profileAddress """
226415,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/planner/TestQueryPlanner.java,150,,"            + ""join testavro.PAGEVIEW as pv """
226416,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/planner/TestSamzaSqlValidator.java,55,,"            + "" from testavro.level1.level2.SIMPLE1 as s where s.id = 1"");"
226417,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/runner/TestSamzaSqlApplicationConfig.java,46,,"    config.put(SamzaSqlApplicationConfig.CFG_SQL_STMT, ""Insert into testavro.COMPLEX1 select * from testavro.SIMPLE1"");"
226418,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/runner/TestSamzaSqlApplicationConfig.java,115,,"    Assert.assertTrue(outputKeys.contains(""testavro.COMPLEX1""));"
226419,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/system/TestAvroSystemFactory.java,156,,"      numMessages = config.getInt(String.format(""systems.%s.%s"", systemName, CFG_NUM_MESSAGES), DEFAULT_NUM_EVENTS);"
226420,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/translator/TestQueryTranslator.java,62,,"    configs.put(""job.default.system"", ""kafka"");"
226421,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/translator/TestQueryTranslator.java,95,,"    Assert.assertEquals(""testavro"", outputSystem);"
226422,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/translator/TestQueryTranslator.java,100,,"    Assert.assertEquals(""SIMPLE1"", inputPhysicalName);"
226423,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/translator/TestQueryTranslator.java,319,,"        ""Insert into testavro.enrichedPageViewTopic(profileName, pageKey)"""
226424,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/translator/TestQueryTranslator.java,320,,"            + "" select p.name as profileName, pv.pageKey"""
226425,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/translator/TestQueryTranslator.java,345,,"            + "" from testavro.PAGEVIEW as pv"""
226426,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/translator/TestQueryTranslator.java,347,,"            + "" on p.id = pv.profileId"";"
226427,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/translator/TestQueryTranslator.java,396,,"            + "" join testavro.PROFILE.`$table` as p"""
226428,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/translator/TestQueryTranslator.java,727,,"    Assert.assertEquals(""sql-job-1-partition_by-table_sql_0_join_2"", output1PhysicalName);"
226429,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/translator/TestQueryTranslator.java,729,,"    Assert.assertEquals(""sql-job-1-partition_by-stream_sql_0_join_2"", output2PhysicalName);"
226430,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/util/SamzaSqlTestConfig.java,51,,"  public static final String SAMZA_SYSTEM_TEST_AVRO = ""testavro"";"
226431,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/util/SamzaSqlTestConfig.java,85,,"    staticConfigs.put(SamzaSqlApplicationConfig.CFG_IO_RESOLVER, ""config"");"
226432,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/util/SamzaSqlTestConfig.java,95,,"    String avroSamzaSqlConfigPrefix = configIOResolverDomain + String.format(""%s."", SAMZA_SYSTEM_TEST_AVRO);"
226433,./TargetProjects/samza/samza-sql/src/test/java/org/apache/samza/sql/util/SamzaSqlTestConfig.java,106,,"    staticConfigs.put(avroSamzaSqlConfigPrefix + SqlIOConfig.CFG_SAMZA_REL_CONVERTER, ""avro"");"
226434,./TargetProjects/samza/samza-test/src/main/java/org/apache/samza/system/mock/MockSystemFactory.java,74,,"      return config.getInt(""systems."" + systemName + "".partitions.per.stream"", DEFAULT_PARTITION_COUNT);"
226435,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/processor/TestZkStreamProcessorBase.java,72,,"  private static final String TASK_SHUTDOWN_MS = ""2000"";"
226436,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/storage/kv/TestLargeMessageSafeKeyValueStores.java,89,,"        {""inmemory"", ""serde"", ""true""},"
226437,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/storage/kv/TestLargeMessageSafeKeyValueStores.java,89,,"        {""inmemory"", ""serde"", ""true""},"
226438,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/storage/kv/TestLargeMessageSafeKeyValueStores.java,89,,"        {""inmemory"", ""serde"", ""true""},"
226439,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/storage/kv/TestLargeMessageSafeKeyValueStores.java,90,,"        {""inmemory"", ""serde"", ""false""},"
226440,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/storage/kv/TestLargeMessageSafeKeyValueStores.java,91,,"        {""inmemory"", ""cache-then-serde"", ""true""},"
226441,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/storage/kv/TestLargeMessageSafeKeyValueStores.java,93,,"        {""inmemory"", ""serde-then-cache"", ""false""},"
226442,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/storage/kv/TestLargeMessageSafeKeyValueStores.java,96,,"        {""rocksdb"", ""serde"", ""true""},"
226443,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/storage/kv/TestLargeMessageSafeKeyValueStores.java,184,,"    String key = ""test"";"
226444,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/storage/kv/TestLargeMessageSafeKeyValueStores.java,189,,"      Assert.assertNull(""The large message was stored while it shouldn't have been."", loggedStore.get(stringSerde.toBytes(key)));"
226445,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/framework/AsyncStreamTaskIntegrationTest.java,47,,"    InMemorySystemDescriptor isd = new InMemorySystemDescriptor(""async-test"");"
226446,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/framework/AsyncStreamTaskIntegrationTest.java,50,,"        .getInputDescriptor(""ints"", new NoOpSerde<Integer>());"
226447,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/framework/AsyncStreamTaskIntegrationTest.java,53,,"        .getOutputDescriptor(""ints-out"", new NoOpSerde<>());"
226448,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/framework/StreamApplicationIntegrationTest.java,75,,"    InMemorySystemDescriptor isd = new InMemorySystemDescriptor(""test"");"
226449,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/framework/StreamApplicationIntegrationTest.java,78,,"        .getInputDescriptor(""PageView"", new NoOpSerde<KV<String, TestTableData.PageView>>());"
226450,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/framework/StreamTaskIntegrationTest.java,73,,"    InMemorySystemDescriptor isd = new InMemorySystemDescriptor(""test"");"
226451,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/framework/StreamTaskIntegrationTest.java,103,,"        .getInputDescriptor(""input"", new NoOpSerde<Integer>());"
226452,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/framework/StreamTaskIntegrationTest.java,106,,"        .getOutputDescriptor(""output"", new NoOpSerde<Integer>());"
226453,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/operator/TestRepartitionWindowApp.java,51,,"    PageView pv = new PageView(""india"", ""5.com"", ""userId1"");"
226454,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/operator/TestRepartitionWindowApp.java,51,,"    PageView pv = new PageView(""india"", ""5.com"", ""userId1"");"
226455,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/processor/TestStreamProcessor.java,78,,"    final String testSystem = ""test-system"";"
226456,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/processor/TestZkLocalApplicationRunner.java,153,,"    inputKafkaTopic = String.format(""test-input-topic-%s"", uniqueTestId);"
226457,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/processor/TestZkLocalApplicationRunner.java,801,,"      TaskName taskName = new TaskName(String.format(""Partition %d"", partition));"
226458,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/processor/TestZkLocalApplicationRunner.java,1036,,"    assertEquals(""RunId of the two processors does not match"", localApplicationRunner2.getRunId(), localApplicationRunner1.getRunId());"
226459,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlEndToEnd.java,62,,"    String sql = ""Insert into testavro.simpleOutputTopic select * from testavro.SIMPLE1"";"
226460,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlEndToEnd.java,294,,"    String sql1 = ""Insert into testavro.outputTopic(id, bool_value, long_value) """
226461,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlEndToEnd.java,318,,"    String sql1 = ""Insert into testavro.outputTopic"""
226462,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlEndToEnd.java,647,,"    LOG.info(""output Messages "" + TestAvroSystemFactory.messages);"
226463,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlEndToEnd.java,776,,"        ""Insert into testavro.enrichedPageViewTopic """
226464,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlEndToEnd.java,779,,"            + ""from testavro.PROFILE.`$table` as p """
226465,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlEndToEnd.java,780,,"            + ""join testavro.PAGEVIEW as pv """
226466,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlEndToEnd.java,781,,"            + "" on p.id = pv.profileId"";"
226467,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlEndToEnd.java,792,,"        .map(x -> ((GenericRecord) x.getMessage()).get(""pageKey"").toString() + "","""
226468,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlEndToEnd.java,793,,"            + (((GenericRecord) x.getMessage()).get(""profileName"") == null ? ""null"" :"
226469,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlEndToEnd.java,793,,"            + (((GenericRecord) x.getMessage()).get(""profileName"") == null ? ""null"" :"
226470,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlEndToEnd.java,905,,"            + ""select pv.pageKey as __key__, pv.pageKey as pageKey, p.name as companyName, p.name as profileName,"""
226471,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlEndToEnd.java,906,,"            + ""       p.address as profileAddress """
226472,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlEndToEnd.java,982,,"            + ""from testavro.PAGEVIEW as pv """
226473,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlEndToEnd.java,983,,"            + ""join testavro.PROFILE.`$table` as p """
226474,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlEndToEnd.java,1101,,"            + ((GenericRecord) x.getMessage()).get(""companyName"").toString())"
226475,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlRemoteTable.java,136,,"        ""Insert into testavro.enrichedPageViewTopic """
226476,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlRemoteTable.java,137,,"            + ""select pv.pageKey as __key__, pv.pageKey as pageKey, coalesce(null, 'N/A') as companyName,"""
226477,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlRemoteTable.java,138,,"            + ""       p.name as profileName, p.address as profileAddress """
226478,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlRemoteTable.java,139,,"            + ""from testRemoteStore.Profile.`$table` as p """
226479,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlRemoteTable.java,140,,"            + ""join testavro.PAGEVIEW as pv """
226480,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlRemoteTable.java,141,,"            + "" on p.__key__ = pv.profileId"";"
226481,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlRemoteTable.java,153,,"        .map(x -> ((GenericRecord) x.getMessage()).get(""pageKey"").toString() + "","""
226482,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlRemoteTable.java,154,,"            + (((GenericRecord) x.getMessage()).get(""profileName"") == null ? ""null"" :"
226483,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlRemoteTable.java,154,,"            + (((GenericRecord) x.getMessage()).get(""profileName"") == null ? ""null"" :"
226484,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/samzasql/TestSamzaSqlRemoteTable.java,417,,"        ""Insert into testRemoteStore.Profile.`$table` """
226485,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/startpoint/TestStartpoint.java,195,,"          throw new RuntimeException(""Unexpected input stream: "" + streamName);"
226486,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/table/TestRemoteTableEndToEnd.java,466,,"    table.get(""abc"");"
226487,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/table/TestTableData.java,48,,"    @JsonProperty(""pageKey"")"
226488,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/table/TestTableData.java,50,,"    @JsonProperty(""memberId"")"
226489,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/table/TestTableData.java,74,,"    @JsonProperty(""company"")"
226490,./TargetProjects/samza/samza-test/src/test/java/org/apache/samza/test/table/TestTableData.java,165,,"        return mapper.readValue(new String(bytes, ""UTF-8""), new TypeReference<PageView>() { });"
226491,./TargetProjects/samza/samza-tools/src/main/java/org/apache/samza/tools/SamzaSqlConsole.java,117,,"    staticConfigs.put(SamzaSqlApplicationConfig.CFG_IO_RESOLVER, ""config"");"
226492,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceConfig.java,41,,"    configMap.put(""yarn.resources.myResource1.path"", ""http://host1.com/readme"");"
226493,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceConfig.java,42,,"    configMap.put(""yarn.resources.myResource1.local.name"", ""readme"");"
226494,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceConfig.java,42,,"    configMap.put(""yarn.resources.myResource1.local.name"", ""readme"");"
226495,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceConfig.java,43,,"    configMap.put(""yarn.resources.myResource1.local.type"", ""file"");"
226496,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceConfig.java,44,,"    configMap.put(""yarn.resources.myResource1.local.visibility"", ""public"");"
226497,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceConfig.java,50,,"    assertEquals(""myResource1"", manager.getResourceNames().get(0));"
226498,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceMapper.java,47,,"    configMap.put(""yarn.resources.myResource1.path"", ""http://host1.com/readme"");"
226499,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceMapper.java,47,,"    configMap.put(""yarn.resources.myResource1.path"", ""http://host1.com/readme"");"
226500,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceMapper.java,48,,"    configMap.put(""yarn.resources.myResource1.local.name"", ""readme"");"
226501,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceMapper.java,48,,"    configMap.put(""yarn.resources.myResource1.local.name"", ""readme"");"
226502,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceMapper.java,49,,"    configMap.put(""yarn.resources.myResource1.local.type"", ""file"");"
226503,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceMapper.java,49,,"    configMap.put(""yarn.resources.myResource1.local.type"", ""file"");"
226504,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceMapper.java,50,,"    configMap.put(""yarn.resources.myResource1.local.visibility"", ""public"");"
226505,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceMapper.java,53,,"    configMap.put(""yarn.resources.myResource2.local.name"", ""__package"");"
226506,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceMapper.java,58,,"    configMap.put(""yarn.resources.myResource3.local.name"", ""csr"");"
226507,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceMapper.java,70,,"    yarnConfiguration.set(""fs.http.impl"", HttpFileSystem.class.getName());"
226508,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceMapper.java,71,,"    yarnConfiguration.set(""fs.https.impl"", HttpFileSystem.class.getName());"
226509,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestLocalizerResourceMapper.java,114,,"    assertNotNull(""Resource exists with a name myResource1"", resourceMap.get(""myResource1""));"
226510,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnClusterResourceManager.java,82,,"    yarnAppState = new YarnAppState(0, mock(ContainerId.class), ""host"", 8080, 8081);"
226511,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnJob.java,43,,"        .put(JobConfig.JOB_NAME, ""jobName"")"
226512,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnJob.java,44,,"        .put(JobConfig.JOB_ID, ""jobId"")"
226513,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnJobFactory.java,43,,"        ""fs.myscheme.impl"", ""org.apache.myScheme"")));"
226514,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnJobFactory.java,43,,"        ""fs.myscheme.impl"", ""org.apache.myScheme"")));"
226515,./TargetProjects/samza/samza-yarn/src/test/java/org/apache/samza/webapp/TestApplicationMasterRestClient.java,101,,"    setupMockClientResponse(HttpStatus.SC_OK, ""Success"", response);"
226516,./TargetProjects/samza-hello-samza/src/test/java/samza/examples/cookbook/test/TestSamzaCookBookExamples.java,51,,"    rawPageViewEvents.add(new PageView(""google.com"", ""user1"", ""india""));"
226517,./TargetProjects/samza-hello-samza/src/test/java/samza/examples/cookbook/test/TestSamzaCookBookExamples.java,51,,"    rawPageViewEvents.add(new PageView(""google.com"", ""user1"", ""india""));"
226518,./TargetProjects/samza-hello-samza/src/test/java/samza/examples/cookbook/test/TestSamzaCookBookExamples.java,53,,"    rawPageViewEvents.add(new PageView(""yahoo.com"", ""user2"", ""china""));"
226519,./TargetProjects/samza-hello-samza/src/test/java/samza/examples/cookbook/test/TestSamzaCookBookExamples.java,53,,"    rawPageViewEvents.add(new PageView(""yahoo.com"", ""user2"", ""china""));"
226520,./TargetProjects/samza-hello-samza/src/test/java/samza/examples/cookbook/test/TestSamzaCookBookExamples.java,55,,"    InMemorySystemDescriptor inMemorySystem = new InMemorySystemDescriptor(""kafka"");"
226521,./TargetProjects/sandesha/modules/core/src/main/java/org/apache/sandesha2/Sandesha2Constants.java,43,,"		OMNamespace OM_NS_URI = OMAbstractFactory.getOMFactory().createOMNamespace(NS_URI, ""wsrm"");"
226522,./TargetProjects/sandesha/modules/core/src/main/java/org/apache/sandesha2/client/SandeshaClient.java,189,,"			if(log.isDebugEnabled()) log.debug(""Exception"", e);"
226523,./TargetProjects/sandesha/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/CreateSeqMsgProcessor.java,86,,"					log.debug(""Exit: CreateSeqMsgProcessor::processInMessage "" + Boolean.FALSE);				"
226524,./TargetProjects/sandesha/modules/core/src/main/java/org/apache/sandesha2/storage/inmemory/InMemoryBeanMgr.java,46,,"		if(LoggingControl.isAnyTracingEnabled() && log.isDebugEnabled()) log.debug(""Entry: InMemoryBeanMgr "" + this.getClass() + "" <innit> "" + mgr + "", "" "
226525,./TargetProjects/sandesha/modules/core/src/main/java/org/apache/sandesha2/storage/inmemory/InMemoryBeanMgr.java,56,,"		if(LoggingControl.isAnyTracingEnabled() && log.isDebugEnabled()) log.debug(""Exit: InMemoryBeanMgr "" + this.getClass() + "" <init> "" + this);"
226526,./TargetProjects/sandesha/modules/core/src/main/java/org/apache/sandesha2/storage/inmemory/InMemoryBeanMgr.java,102,,"		if(LoggingControl.isAnyTracingEnabled() && log.isDebugEnabled()) log.debug(""Entry: InMemoryBeanMgr "" + this.getClass() + "" find "" + matchInfo);"
226527,./TargetProjects/sandesha/modules/core/src/main/java/org/apache/sandesha2/util/PropertyManager.java,249,,"			if (expoBackoffStr.equals(""true"")) {"
226528,./TargetProjects/sandesha/modules/core/src/main/java/org/apache/sandesha2/util/PropertyManager.java,251,,"			} else if (expoBackoffStr.equals(""false"")) {"
226529,./TargetProjects/sandesha/modules/core/src/main/java/org/apache/sandesha2/util/SandeshaUtil.java,1186,,"		if (""true"".equals(auto)) {"
226530,./TargetProjects/sandesha/modules/persistence/src/main/java/org/apache/sandesha2/storage/jdbc/PersistentRMDBeanMgr.java,52,,"			op = "" and "";"
226531,./TargetProjects/sandesha/modules/persistence/src/main/java/org/apache/sandesha2/storage/jdbc/PersistentRMSBeanMgr.java,49,,"			op = "" and "";"
226532,./TargetProjects/sandesha/modules/persistence/src/main/java/org/apache/sandesha2/storage/jdbc/PersistentSenderBeanMgr.java,51,,"			op = "" and "";"
226533,./TargetProjects/sandesha/modules/persistence/src/test/java/org/apache/sandesha2/RMScenariosTest.java,47,,"	protected String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""persistence-server"";"
226534,./TargetProjects/sandesha/modules/persistence/src/test/java/org/apache/sandesha2/RMScenariosTest.java,47,,"	protected String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""persistence-server"";"
226535,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/MessageContextPropertyTest.java,56,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226536,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/MessageContextPropertyTest.java,56,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226537,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/MessageRetransmissionTest.java,33,,"	private static final String server_repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226538,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/MessageRetransmissionTest.java,33,,"	private static final String server_repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226539,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaClientAckRequestWaitTest.java,34,,"	String server_repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226540,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaClientAckRequestWaitTest.java,34,,"	String server_repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226541,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaClientCloseWaitTest.java,34,,"	String server_repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226542,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaClientCloseWaitTest.java,34,,"	String server_repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226543,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaClientLastErrorTest.java,34,,"	String server_repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226544,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaClientLastErrorTest.java,34,,"	String server_repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226545,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaClientTerminateWaitTest.java,34,,"	String server_repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226546,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaClientTerminateWaitTest.java,34,,"	String server_repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226547,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaClientTest.java,40,,"	String server_repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226548,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaClientTest.java,40,,"	String server_repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226549,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaClientTest.java,40,,"	String server_repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226550,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaClientTest.java,66,,"		String to = ""http://127.0.0.1:"" + serverPort + ""/axis2/services/RMSampleService"";"
226551,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaClientTest.java,66,,"		String to = ""http://127.0.0.1:"" + serverPort + ""/axis2/services/RMSampleService"";"
226552,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaClientTest.java,69,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""client"";"
226553,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaClientTest.java,70,,"		String axis2_xml = ""target"" + File.separator + ""repos"" + File.separator + ""client"" + File.separator + ""client_axis2.xml"";"
226554,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaReportsTest.java,47,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226555,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaReportsTest.java,47,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226556,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SandeshaReportsTest.java,66,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""client"";"
226557,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SequenceOfferTest.java,43,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226558,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/SequenceOfferTest.java,43,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226559,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/faulttests/CreateSequenceRefusedInboundFaultTest.java,46,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226560,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/faulttests/CreateSequenceRefusedInboundFaultTest.java,46,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226561,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/faulttests/InvalidAcknowledgementTest.java,182,,"					""http://docs.oasis-open.org/ws-rx/wsrm/200702/SequenceAcknowledgement"", soap12);"
226562,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/faulttests/SequenceTerminatedFaultTest.java,61,,"	private static final String server_repoPath = ""target"" + File.separator"
226563,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/faulttests/SequenceTerminatedFaultTest.java,62,,"	    + ""repos"" + File.separator + ""server"";"
226564,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/faulttests/SequenceTerminatedFaultTest.java,97,,"			FaultTestUtils.getHttpURLConnection(""http://127.0.0.1:"" + serverPort + ""/axis2/services/RMSampleService"","
226565,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/faulttests/SequenceTerminatedFaultTest.java,97,,"			FaultTestUtils.getHttpURLConnection(""http://127.0.0.1:"" + serverPort + ""/axis2/services/RMSampleService"","
226566,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/faulttests/SequenceTimedOutTest.java,68,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""client"";"
226567,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/faulttests/SequenceTimedOutTest.java,68,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""client"";"
226568,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/faulttests/SequenceTimedOutTest.java,68,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""client"";"
226569,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/faulttests/SequenceTimedOutTest.java,101,,"  			propertyBean.setInactiveTimeoutInterval(1, ""seconds"");"
226570,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/scenarios/OptionalReliabilityTest.java,44,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226571,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/scenarios/OptionalReliabilityTest.java,44,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226572,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/scenarios/OptionalReliabilityTest.java,53,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""client"";"
226573,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/scenarios/OptionalReliabilityTest.java,65,,"		serviceClient.fireAndForget(getPingOMBlock(""echo1""));"
226574,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/scenarios/RMScenariosTest.java,47,,"	protected String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226575,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/scenarios/RMScenariosTest.java,47,,"	protected String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226576,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/storage/RMSBeanMgrTest.java,67,,"    	rMSBean.setCreateSeqMsgID(""CreateSeqMsgId1"");"
226577,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/storage/RMSBeanMgrTest.java,104,,"        assertNull(mgr.retrieve(""CreateSeqMsgId5""));"
226578,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/storage/SenderBeanMgrTest.java,70,,"            fail(""should not throw an exception"");"
226579,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/versions/AddressingVersionTest.java,43,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226580,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/versions/AddressingVersionTest.java,43,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226581,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/versions/RMVersionTest.java,43,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226582,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/versions/RMVersionTest.java,43,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226583,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/versions/RMVersionTest.java,61,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""client"";"
226584,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/versions/SOAPVersionTest.java,44,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226585,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/versions/SOAPVersionTest.java,44,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226586,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/versions/SOAPVersionTest.java,62,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""client"";"
226587,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/workers/ForceInboundDispatchTest.java,48,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226588,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/workers/ForceInboundDispatchTest.java,48,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""server"";"
226589,./TargetProjects/sandesha/modules/tests/src/test/java/org/apache/sandesha2/workers/ForceInboundDispatchTest.java,66,,"		String repoPath = ""target"" + File.separator + ""repos"" + File.separator + ""client"";"
226590,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/common/BasicCParser.java,283,,"            throw new ImageReadException(""Parsing XPM file failed, "" +"
226591,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/common/BinaryFileFunctions.java,234,,"            System.out.println(name + "": expected length: "" + expectedLength"
226592,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/common/BinaryFileFunctions.java,235,,"                    + "", actual length: "" + bytes.length);"
226593,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/common/itu_t4/T4AndT6Compression.java,154,,"                throw new ImageReadException(""Unrecoverable row length error in image row "" + y);"
226594,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/common/itu_t4/T4AndT6Compression.java,218,,"                throw new ImageReadException(""Decompression error"", huffmanException);"
226595,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/bmp/BmpImageParser.java,98,,"        byte identifier1 = readByte(""Identifier1"", is, ""Not a Valid BMP File"");"
226596,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/bmp/BmpImageParser.java,271,,"            int a = 0xff & this.readByte(""RLE a"", is, ""BMP: Bad RLE"");"
226597,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/bmp/BmpImageParser.java,539,,"            throw new ImageReadException(""Unknown parameter: "" + firstKey);"
226598,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/bmp/pixelparsers/PixelParserBitFields.java,87,,"            data = bfp.read3Bytes(""Pixel"", is, ""BMP Image Data"");"
226599,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/bmp/pixelparsers/PixelParserBitFields.java,87,,"            data = bfp.read3Bytes(""Pixel"", is, ""BMP Image Data"");"
226600,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/bmp/pixelparsers/PixelParserRle.java,119,,"                    ""BMP: Bad RLE"");"
226601,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/gif/GifImageParser.java,93,,"        byte identifier1 = readByte(""identifier1"", is, ""Not a Valid GIF File"");"
226602,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/gif/GifImageParser.java,173,,"        readByte(""block_size"", is, ""GIF: corrupt GraphicControlExt"");"
226603,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/icns/IcnsImageParser.java,186,,"        int Magic = read4Bytes(""Magic"", is, ""Not a Valid ICNS File"");"
226604,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/ico/IcoImageParser.java,150,,"        int Reserved = read2Bytes(""Reserved"", is, ""Not a Valid ICO File"");"
226605,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcParser.java,142,,"                Debug.debug(""tagMarker"", tagMarker + "" (0x"""
226606,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/jpeg/segments/JfifSegment.java,62,,"                ""Not a Valid JPEG File"");"
226607,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/jpeg/segments/SofnSegment.java,66,,"        precision = readByte(""Data_precision"", is, ""Not a Valid JPEG File"");"
226608,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/jpeg/segments/SosSegment.java,65,,"                ""number_of_components_in_scan"", is, ""Not a Valid JPEG File"");"
226609,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java,178,,"            int length = read4Bytes(""Length"", is, ""Not a Valid PNG File"");"
226610,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java,305,,"            throw new ImageReadException(""PNG contains more than one Header"");"
226611,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/png/PngWriter.java,165,,"        baos.write(text.keyword.getBytes(""ISO-8859-1""));"
226612,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/png/PngWriter.java,176,,"        baos.write(text.translatedKeyword.getBytes(""utf-8""));"
226613,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkIhdr.java,38,,"        width = read4Bytes(""Width"", is, ""Not a Valid Png File: IHDR Corrupt"");"
226614,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/pnm/PgmWriter.java,46,,"        os.write(("""" + width).getBytes(""US-ASCII""));"
226615,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/pnm/PpmWriter.java,46,,"        os.write(("""" + width).getBytes(""US-ASCII""));"
226616,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/psd/PsdImageParser.java,116,,"                ""Not a Valid PSD File"");"
226617,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/tiff/TiffDirectory.java,208,,"            throw new ImageReadException(""Field \"""" + tag.name + ""\"" has incorrect length "" + result.length);"
226618,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/tiff/TiffDirectory.java,208,,"            throw new ImageReadException(""Field \"""" + tag.name + ""\"" has incorrect length "" + result.length);"
226619,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/tiff/TiffDirectory.java,297,,"                throw new ImageReadException(""Required field \"""" + tag.name + ""\"" is missing"");"
226620,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/tiff/TiffDirectory.java,297,,"                throw new ImageReadException(""Required field \"""" + tag.name + ""\"" is missing"");"
226621,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/tiff/TiffDirectory.java,304,,"                throw new ImageReadException(""Required field \"""" + tag.name + ""\"" has incorrect type "" + field.fieldType.name);"
226622,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/tiff/TiffField.java,340,,"                    result.append(""... ("" + objects.length + "")"");"
226623,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/tiff/TiffReader.java,71,,"        int BYTE_ORDER_1 = readByte(""BYTE_ORDER_1"", is, ""Not a Valid TIFF File"");"
226624,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeAscii.java,51,,"                    String string = new String(bytes, nextStringPos, i - nextStringPos, ""UTF-8"");"
226625,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoGpsText.java,70,,"            }, ""US-ASCII"", ""US-ASCII""); // ITU-T T.50 IA5"
226626,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputDirectory.java,91,,"            throw new ImageWriteException(""Tag expects "" + tagInfo.length +"
226627,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputDirectory.java,92,,"                    "" value(s), not "" + values.length);"
226628,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/xbm/XbmImageParser.java,270,,"                throw new ImageReadException(""Parsing XBM file failed, "" +"
226629,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/xbm/XbmImageParser.java,361,,"        os.write((""#define "" + name + ""_width "" + src.getWidth() + ""\n"").getBytes(""US-ASCII""));"
226630,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/xpm/XpmImageParser.java,76,,"                    ""US-ASCII""));"
226631,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/formats/xpm/XpmImageParser.java,301,,"                throw new ImageReadException(""Parsing XPM file failed, "" +"
226632,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/icc/IccProfileParser.java,136,,"                    ""Not a Valid ICC Profile"");"
226633,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/icc/IccProfileParser.java,175,,"            int ProfileFileSignature = read4Bytes(""ProfileFileSignature"", is,"
226634,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/icc/IccProfileParser.java,196,,"            int DeviceModel = read4Bytes(""DeviceModel"", is,"
226635,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/icc/IccTagDataTypes.java,35,,"            bis.read4Bytes(""type_signature"", ""ICC: corrupt tag data"");"
226636,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/icc/IccTagDataTypes.java,35,,"            bis.read4Bytes(""type_signature"", ""ICC: corrupt tag data"");"
226637,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/icc/IccTagTypes.java,46,,"            ""blueMatrixColumnTag"", ""XYZType"", 0x6258595A"
226638,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/icc/IccTagTypes.java,51,,"            ""curveType or parametricCurveType"", 0x62545243"
226639,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/icc/IccTagTypes.java,57,,"            ""lut8Type or lut16Type or lutBtoAType"", 0x42324130"
226640,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/icc/IccTagTypes.java,149,,"            ""copyrightTag"", ""multiLocalizedUnicodeType"", 0x63707274"
226641,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/util/Debug.java,48,,"            System.out.println(o == null ? ""null"" : o.toString());"
226642,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/util/Debug.java,348,,"        DateFormat df = new SimpleDateFormat(""MM/dd/yyyy HH:mm:ss"");"
226643,./TargetProjects/sanselan/src/main/java/org/apache/commons/imaging/util/UnicodeUtils.java,290,,"                        throw new UnicodeException(""Invalid code point."");"
226644,./TargetProjects/sanselan/src/test/java/org/apache/commons/imaging/common/BinaryFileFunctionsTest.java,26,,"            assertEquals(convertByteArrayToFloat(""bytes"", bytesLE, BYTE_ORDER_LITTLE_ENDIAN),"
226645,./TargetProjects/sanselan/src/test/java/org/apache/commons/imaging/examples/MetadataExample.java,88,,"                    System.out.println(""    "" + ""GPS Description: "" + gpsDescription);"
226646,./TargetProjects/sanselan/src/test/java/org/apache/commons/imaging/formats/ico/IcoRoundtripTest.java,379,,"            writeAndReadImageData(""16x16x"" + bitDepth, baos.toByteArray(), foreground, background);"
226647,./TargetProjects/sanselan/src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriteTest.java,64,,"            Debug.debug(""imageFile"", imageFile);"
226648,./TargetProjects/sanselan/src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriteTest.java,84,,"                File tempFile = createTempFile(""test"", "".jpg"");"
226649,./TargetProjects/sanselan/src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriteTest.java,85,,"                Debug.debug(""tempFile"", tempFile);"
226650,./TargetProjects/sanselan/src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriteTest.java,88,,"                Debug.debug(""Output Segments:"");"
226651,./TargetProjects/sanselan/src/test/java/org/apache/commons/imaging/formats/jpeg/exif/MakerNoteFieldTest.java,49,,"        Debug.debug(""field"", field);"
226652,./TargetProjects/sanselan/src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcUpdateTest.java,87,,"                    + "".iptc.remove."", "".jpg"");"
226653,./TargetProjects/sanselan/src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcUpdateTest.java,187,,"                        ""Albany, NY""));"
226654,./TargetProjects/sanselan/src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcUpdateTest.java,189,,"                        ""William Sorensen""));"
226655,./TargetProjects/sanselan/src/test/java/org/apache/commons/imaging/formats/tiff/TiffLzwTest.java,127,,"                        Debug.debug(""clearCode: "" + index + ""/"" + codes.size());"
226656,./TargetProjects/sanselan/src/test/java/org/apache/commons/imaging/formats/tiff/TiffLzwTest.java,132,,"                        Debug.debug(""eoiCode: "" + index + ""/"" + codes.size());"
226657,./TargetProjects/sanselan/src/test/java/org/apache/commons/imaging/formats/tiff/TiffLzwTest.java,140,,"                    Debug.debug(""code: "" + code + "" (0x"""
226658,./TargetProjects/sanselan/src/test/java/org/apache/commons/imaging/roundtrip/RoundtripTest.java,229,,"                    Debug.debug(""a_argb"", a_argb + "" (0x"""
226659,./TargetProjects/santuario-java/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMKeyInfoFactory.java,58,,"    @SuppressWarnings(""rawtypes"")"
226660,./TargetProjects/santuario-java/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMKeyInfoFactory.java,63,,"    @SuppressWarnings({ ""unchecked"", ""rawtypes"" })"
226661,./TargetProjects/santuario-java/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMRSAPSSSignatureMethod.java,142,,"        Element rsaPssParamsElement = ownerDoc.createElementNS(Constants.XML_DSIG_NS_MORE_07_05, ""pss"" + "":"" + Constants._TAG_RSAPSSPARAMS);"
226662,./TargetProjects/santuario-java/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMReference.java,249,,"        this.uri = DOMUtils.getAttributeValue(refElem, ""URI"");"
226663,./TargetProjects/santuario-java/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMReference.java,480,,"                        spi = TransformService.getInstance(c14nalg, ""DOM"");"
226664,./TargetProjects/santuario-java/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMRetrievalMethod.java,129,,"        uri = DOMUtils.getAttributeValue(rmElem, ""URI"");"
226665,./TargetProjects/santuario-java/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMXMLSignature.java,269,,"        @SuppressWarnings(""unchecked"")"
226666,./TargetProjects/santuario-java/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMXMLSignatureFactory.java,54,,"    @SuppressWarnings({ ""unchecked"", ""rawtypes"" })"
226667,./TargetProjects/santuario-java/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMXMLSignatureFactory.java,54,,"    @SuppressWarnings({ ""unchecked"", ""rawtypes"" })"
226668,./TargetProjects/santuario-java/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMXMLSignatureFactory.java,312,,"            spi = TransformService.getInstance(algorithm, ""DOM"");"
226669,./TargetProjects/santuario-java/src/main/java/org/apache/jcp/xml/dsig/internal/dom/XMLDSigRI.java,84,,"                    if (""DOM"".equals(algo)) {"
226670,./TargetProjects/santuario-java/src/main/java/org/apache/jcp/xml/dsig/internal/dom/XMLDSigRI.java,91,,"                } else if (""TransformService"".equals(type)) {"
226671,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/Init.java,196,,"                        String uri = element.getAttributeNS(null, ""URI"");"
226672,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/Init.java,198,,"                            element.getAttributeNS(null, ""JAVACLASS"");"
226673,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/algorithms/JCEMapper.java,62,,"            new Algorithm("""", ""MD5"", ""MessageDigest"")"
226674,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/algorithms/JCEMapper.java,111,,"            new Algorithm(""DSA"", ""SHA1withDSA"", ""Signature"")"
226675,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/algorithms/JCEMapper.java,119,,"            new Algorithm(""RSA"", ""MD5withRSA"", ""Signature"")"
226676,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/algorithms/JCEMapper.java,211,,"            new Algorithm("""", ""HmacMD5"", ""Mac"", 0, 0)"
226677,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/algorithms/JCEMapper.java,240,,"            new Algorithm(""DESede"", ""DESede/CBC/ISO10126Padding"", ""BlockEncryption"", 192, 64)"
226678,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/algorithms/JCEMapper.java,244,,"            new Algorithm(""AES"", ""AES/CBC/ISO10126Padding"", ""BlockEncryption"", 128, 128)"
226679,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/algorithms/JCEMapper.java,272,,"            new Algorithm(""Camellia"", ""Camellia/CBC/ISO10126Padding"", ""BlockEncryption"", 128, 128)"
226680,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/algorithms/JCEMapper.java,300,,"            new Algorithm(""DESede"", ""DESedeWrap"", ""SymmetricKeyWrap"", 192, 0)"
226681,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/algorithms/implementations/SignatureBaseRSA.java,650,,"            Element rsaPssParamsElement = doc.createElementNS(Constants.XML_DSIG_NS_MORE_07_05, ""pss"" + "":"" + Constants._TAG_RSAPSSPARAMS);"
226682,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/c14n/implementations/CanonicalizerPhysical.java,71,,"        throw new CanonicalizationException(""c14n.Canonicalizer.UnsupportedOperation"");"
226683,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/c14n/implementations/XmlAttrStack.java,280,,"            } else if (input.startsWith(""../"")) {"
226684,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/c14n/implementations/XmlAttrStack.java,313,,"                    output.append(""/.."");"
226685,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/encryption/XMLCipher.java,504,,"            throw new NullPointerException(""Provider unexpectedly null.."");"
226686,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/encryption/XMLCipher.java,850,,"            throw new XMLEncryptionException(""empty"", ""Element unexpectedly null..."");"
226687,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/encryption/XMLCipher.java,850,,"            throw new XMLEncryptionException(""empty"", ""Element unexpectedly null..."");"
226688,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/encryption/XMLCipher.java,853,,"            throw new XMLEncryptionException(""empty"", ""XMLCipher unexpectedly not in ENCRYPT_MODE..."");"
226689,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/encryption/XMLCipher.java,857,,"            throw new XMLEncryptionException(""empty"", ""XMLCipher instance without transformation specified"");"
226690,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/encryption/XMLCipher.java,934,,"            throw new XMLEncryptionException(""empty"", ""Context document unexpectedly null..."");"
226691,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/encryption/XMLCipher.java,2374,,"                String digestAlgorithm = digestElement.getAttributeNS(null, ""Algorithm"");"
226692,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/keys/KeyInfo.java,882,,"            LOG.debug(""Try {}"", keyResolver.getClass().getName());"
226693,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/keys/keyresolver/KeyResolver.java,88,,"                                ? element.getTagName() : ""null"""
226694,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/keys/keyresolver/KeyResolver.java,91,,"                throw new KeyResolverException(""utils.resolver.noClass"", exArgs);"
226695,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/keys/keyresolver/implementations/KeyInfoReferenceResolver.java,72,,"            LOG.debug(""XMLSecurityException"", e);"
226696,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/keys/keyresolver/implementations/PrivateKeyResolver.java,118,,"                LOG.debug(""Cannot recover the key"", e);"
226697,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/keys/keyresolver/implementations/PrivateKeyResolver.java,191,,"                        LOG.debug(""match !!! "");"
226698,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/signature/XMLSignatureInputDebugger.java,453,,"                this.writer.write(""&amp;#xD;"");"
226699,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/stax/ext/XMLSecurityUtils.java,178,,"            throw new XMLSecurityException(""stax.signature.publicKeyOrCertificateMissing"");"
226700,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/stax/impl/AbstractSecurityContextImpl.java,30,,"    @SuppressWarnings(""unchecked"")"
226701,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/stax/impl/XMLSecurityStreamReader.java,436,,"                throw new IllegalStateException(""Current state not TEXT"");"
226702,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/stax/impl/securityToken/SecurityTokenFactoryImpl.java,97,,"        throw new XMLSecurityException(""stax.noKey"", new Object[] {keyUsage});"
226703,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/stax/impl/transformer/canonicalizer/CanonicalizerBase.java,369,,"                    throw new XMLStreamException(""illegal event :"" + XMLSecurityUtils.getXMLEventAsString(xmlSecEvent));"
226704,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/utils/Base64.java,527,,"            throw new Base64DecodingException(""decoding.general"");"
226705,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/utils/ElementProxy.java,127,,"                result.setAttributeNS(Constants.NamespaceSpecNS, ""xmlns:"" + prefix, namespace);"
226706,./TargetProjects/santuario-java/src/main/java/org/apache/xml/security/utils/XMLUtils.java,282,,"            throw new RuntimeException(""Document is null"");"
226707,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/Baltimore18Test.java,68,,"        assertTrue(coreValidity, ""Signature failed core validation"");"
226708,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/Baltimore23Test.java,57,,"        String base = System.getProperty(""basedir"") == null ? ""./"": System.getProperty(""basedir"");"
226709,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/Baltimore23Test.java,72,,"        assertTrue(coreValidity, ""Signature failed core validation"");"
226710,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/C14N11Test.java,40,,"    private static String[] vendors = { ""IAIK"", ""IBM"", ""ORCL"", ""SUN"", ""UPC"" };"
226711,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/C14N11Test.java,40,,"    private static String[] vendors = { ""IAIK"", ""IBM"", ""ORCL"", ""SUN"", ""UPC"" };"
226712,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/C14N11Test.java,40,,"    private static String[] vendors = { ""IAIK"", ""IBM"", ""ORCL"", ""SUN"", ""UPC"" };"
226713,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/C14N11Test.java,40,,"    private static String[] vendors = { ""IAIK"", ""IBM"", ""ORCL"", ""SUN"", ""UPC"" };"
226714,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/ClassLoaderTest.java,48,,"        File file0 = new File(baseDir + fs + ""build"" + fs + ""classes"" + fs);"
226715,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/ClassLoaderTest.java,62,,"        Method m1 = c1.getMethod(""dsig"", (Class[]) null);"
226716,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/CreateBaltimore23Test.java,95,,"        String fs = System.getProperty(""file.separator"");"
226717,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/CreateBaltimore23Test.java,96,,"        String base = System.getProperty(""basedir"") == null ? ""./"": System.getProperty(""basedir"");"
226718,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/CreateBaltimore23Test.java,143,,"            (Constants.NamespaceSpecNS, ""xmlns"", ""http://example.org/envelope"");"
226719,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/CreateBaltimore23Test.java,233,,"        if (""IBM Corporation"".equals(System.getProperty(""java.vendor""))) {"
226720,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/CreateBaltimore23Test.java,233,,"        if (""IBM Corporation"".equals(System.getProperty(""java.vendor""))) {"
226721,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/CreateBaltimore23Test.java,284,,"            (""CN=Sean Mullan,DC=sun,DC=com"","
226722,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/CreateBaltimore23Test.java,454,,"        nc.setAttributeNS(""http://www.w3.org/2000/xmlns/"", ""xmlns"", """");"
226723,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/CreateBaltimore23Test.java,544,,"            (""http://example.org/usps"", ""Envelope"");"
226724,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/CreateInteropExcC14NTest.java,86,,"            (""#xpointer(id('to-be-signed'))"","
226725,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/CreateInteropXFilter2Test.java,133,,"        Element tbs1Data = doc.createElementNS(null, ""Data"");"
226726,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/CreateInteropXMLDSig11Test.java,80,,"        KeyPairGenerator rsakpg = KeyPairGenerator.getInstance(""RSA"");"
226727,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/CreateInteropXMLDSig11Test.java,128,,"        sks = new KeySelectors.SecretKeySelector(""testkey"".getBytes(StandardCharsets.US_ASCII));"
226728,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/CreatePhaosXMLDSig3Test.java,116,,"             (""test"".getBytes(StandardCharsets.US_ASCII)), doc);"
226729,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/HMACSignatureAlgorithmTest.java,112,,"        sks = new KeySelectors.SecretKeySelector(""testkey"".getBytes(StandardCharsets.US_ASCII));"
226730,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/IaikCoreFeaturesTest.java,52,,"        base = System.getProperty(""basedir"") == null ? ""./"": System.getProperty(""basedir"");"
226731,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/IaikTransformsTest.java,61,,"        assertTrue(coreValidity, ""Signature failed core validation"");"
226732,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/InteropC14nTest.java,82,,"        assertTrue(coreValidity, ""Signature failed core validation#1"");"
226733,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/InteropC14nTest.java,86,,"        assertTrue(coreValidity, ""Signature failed core validation#2"");"
226734,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/InteropXMLDSig11Test.java,73,,"            test_xmldsig11(""signature-enveloping-p256_sha1"", ""oracle"");"
226735,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/PhaosXMLDSig3Test.java,75,,"        assertTrue(coreValidity, ""Signature failed core validation"");"
226736,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/PhaosXMLDSig3Test.java,111,,"            (""test"".getBytes(StandardCharsets.US_ASCII) );"
226737,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/ReferenceTest.java,111,,"            fail(""Unexpected Exception: "" + ex);"
226738,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/SecureXSLTTest.java,47,,"        String base = System.getProperty(""basedir"") == null ? ""./"": System.getProperty(""basedir"");"
226739,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/SignatureDigestMethodTest.java,96,,"                                  TestUtils.getPublicKey(""RSA""))));"
226740,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/TestUtils.java,131,,"        if (""DSA"".equalsIgnoreCase(algo)) {"
226741,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/TestUtils.java,133,,"        } else if (""RSA"".equalsIgnoreCase(algo)) {"
226742,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/TestUtils.java,136,,"            throw new RuntimeException(""Unsupported key algorithm "" + algo);"
226743,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/TestUtils.java,156,,"                throw new RuntimeException(""Unsupported keysize:"" + keysize);"
226744,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/ValidateSignatureTest.java,81,,"        assertTrue(coreValidity, ""Signature failed core validation"");"
226745,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/XMLSignatureFactoryTest.java,61,,"            (""DOM"", new org.apache.jcp.xml.dsig.internal.dom.XMLDSigRI());"
226746,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/XMLSignatureTest.java,87,,"        SIGN_KEYS[0] = TestUtils.getPrivateKey(""DSA"", 1024);"
226747,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/dom/DOMValidateContextTest.java,62,,"            fail(""Should throw a NPE instead of "" + ex + "" for null node"");"
226748,./TargetProjects/santuario-java/src/test/java/javax/xml/crypto/test/dsig/keyinfo/KeyInfoTest.java,62,,"            (Collections.singletonList(fac.newKeyName(""foo"")), ""skeleton"");"
226749,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/stax/impl/securityToken/SecurityTokenFactoryImplTest.java,57,,"        JAXBElement<String> keyname = of.createKeyName(""mykey"");"
226750,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/stax/impl/securityToken/SecurityTokenFactoryImplTest.java,74,,"        xmlSecurityProperties.addKeyNameMapping(""mykey"", loadPublicKey(""dsa.key"", ""DSA""));"
226751,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/CreateExclC14nInteropValues.java,94,,"                xc.setXPathNamespaceContext(""xmlns:default"", ""http://example.org"");"
226752,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/CreateExclC14nInteropValues.java,125,,"                xc.setXPathNamespaceContext(""xmlns:ns1"", ""http://example.org/ns1"");"
226753,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/CreateExclC14nInteropValues.java,125,,"                xc.setXPathNamespaceContext(""xmlns:ns1"", ""http://example.org/ns1"");"
226754,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/CreateExclC14nInteropValues.java,194,,"            + ""<notIncluded xml:lang='uk'>"" + ""\n"""
226755,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/CreateExclC14nInteropValues.java,195,,"            + ""<included                 >"" + ""\n"" + ""</included>"""
226756,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/CreateExclC14nInteropValues.java,195,,"            + ""<included                 >"" + ""\n"" + ""</included>"""
226757,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/CreateExclC14nInteropValues.java,196,,"            + ""\n"" + ""</notIncluded>"" + ""\n"" + ""</notIncluded>"""
226758,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/CreateExclC14nInteropValues.java,214,,"                xc.setXPath(""self::node()[local-name()='included']"");"
226759,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/CreateExclC14nInteropValues.java,265,,"            + ""<included xml:lang='de'>"" + ""\n"" + ""</included>"""
226760,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/DigestAlgorithmTest.java,85,,"        byte[] digest = digestAlgorithm.digest(""test-string"".getBytes());"
226761,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/HMACSignatureAlgorithmTest.java,93,,"                        ""ie/baltimore/merlin-examples/merlin-xmlenc-five/plaintext.xml"");"
226762,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/HMACSignatureAlgorithmTest.java,97,,"        byte[] hmacKey = ""secret"".getBytes(StandardCharsets.US_ASCII);"
226763,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/HMACSignatureAlgorithmTest.java,101,,"        localNames.add(""PaymentInfo"");"
226764,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/KeyWrapEncryptionAlgorithmTest.java,100,,"                        ""ie/baltimore/merlin-examples/merlin-xmlenc-five/plaintext.xml"");"
226765,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/KeyWrapEncryptionAlgorithmTest.java,104,,"        KeyGenerator keygen = KeyGenerator.getInstance(""AES"");"
226766,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/KeyWrapEncryptionAlgorithmTest.java,117,,"        localNames.add(""PaymentInfo"");"
226767,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/KeyWrapEncryptionAlgorithmTest.java,124,,"        NodeList nodeList = document.getElementsByTagNameNS(""urn:example:po"", ""CreditCard"");"
226768,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/KeyWrapEncryptionAlgorithmTest.java,124,,"        NodeList nodeList = document.getElementsByTagNameNS(""urn:example:po"", ""CreditCard"");"
226769,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/KeyWrapEncryptionAlgorithmTest.java,224,,"        KeyGenerator keygen = KeyGenerator.getInstance(""DESede"");"
226770,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/KeyWrapEncryptionAlgorithmTest.java,372,,"        KeyGenerator keygen = KeyGenerator.getInstance(""Camellia"");"
226771,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/PKSignatureAlgorithmTest.java,103,,"                        ""ie/baltimore/merlin-examples/merlin-xmlenc-five/plaintext.xml"");"
226772,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/PKSignatureAlgorithmTest.java,107,,"        localNames.add(""PaymentInfo"");"
226773,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/SymmetricEncryptionAlgorithmTest.java,92,,"                        ""ie/baltimore/merlin-examples/merlin-xmlenc-five/plaintext.xml"");"
226774,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/SymmetricEncryptionAlgorithmTest.java,96,,"        KeyGenerator keygen = KeyGenerator.getInstance(""AES"");"
226775,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/SymmetricEncryptionAlgorithmTest.java,101,,"        localNames.add(""PaymentInfo"");"
226776,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/SymmetricEncryptionAlgorithmTest.java,108,,"        NodeList nodeList = document.getElementsByTagNameNS(""urn:example:po"", ""CreditCard"");"
226777,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/algorithms/SymmetricEncryptionAlgorithmTest.java,108,,"        NodeList nodeList = document.getElementsByTagNameNS(""urn:example:po"", ""CreditCard"");"
226778,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/helper/AttrCompareTest.java,56,,"        Document doc = createDoc(""documentElement"");"
226779,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/helper/AttrCompareTest.java,76,,"        assertTrue(attrCompare.compare(attr0, attr1) < 0, attr0 + "" < "" + attr1);"
226780,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/helper/C14nHelperTest.java,46,,"        assertTrue(C14nHelper.namespaceIsAbsolute(namespaceURI), ""URI fails: \"""" + namespaceURI + ""\"""");"
226781,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,115,,"        Node root = doc.getElementsByTagNameNS(""http://example.net"", ""elem2"").item(0);"
226782,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,115,,"        Node root = doc.getElementsByTagNameNS(""http://example.net"", ""elem2"").item(0);"
226783,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,228,,"            ""<env:Envelope"""
226784,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,229,,"            + "" xmlns:env=\""http://schemas.xmlsoap.org/soap/envelope/\"""""
226785,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,230,,"            + "" xmlns:xsd=\""http://www.w3.org/2001/XMLSchema\"""""
226786,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,231,,"            + "" xmlns:xsi=\""http://www.w3.org/2001/XMLSchema-instance\"""""
226787,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,232,,"            + "" xmlns:ns0=\""http://xmlsoap.org/Ping\"""""
226788,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,233,,"            + "" xmlns:wsu=\""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"">"""
226789,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,234,,"            + ""<env:Body wsu:Id=\""body\"">"""
226790,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,235,,"            + ""<ns0:Ping xsi:type=\""ns0:ping\"">"""
226791,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,236,,"            + ""<ns0:text xsi:type=\""xsd:string\"">hello</ns0:text>"""
226792,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,237,,"            + ""</ns0:Ping>"""
226793,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,238,,"            + ""</env:Body>"""
226794,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,239,,"            + ""</env:Envelope>"";"
226795,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,242,,"            ""<env:Body"""
226796,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,245,,"            + "" xmlns:wsu=\""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"""""
226797,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,247,,"            + "" wsu:Id=\""body\"">"""
226798,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,348,,"                        + ""<ns0:Ping xmlns:ns0=\""http://xmlsoap.org/Ping\"" xsi:type=\""ns0:ping\"">"""
226799,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,359,,"                c14n.engineCanonicalize(input, ""#default xsi"", writer, false);"
226800,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,369,,"                c14n.engineCanonicalize(input, ""xsi"", writer, false);"
226801,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,385,,"                        + "" xmlns=\""http://example.com\"""""
226802,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,392,,"                        + ""<ns0:text xmlns=\""\"" xsi:type=\""xsd:string\"">hello</ns0:text>"""
226803,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,451,,"                        + "" xmlns=\""\"""""
226804,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,577,,"                        + ""<ns0:Ping xmlns:ns0=\""http://xmlsoap.org/Ping\"" xmlns:xsi=\""http://www.w3.org/2001/XMLSchema-instance\"" xsi:type=\""ns0:ping\"">"""
226805,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315ExclusiveTest.java,586,,"            c14n.engineCanonicalizeSubTree(doc.getDocumentElement().getFirstChild(), ""#default"", true, writer);"
226806,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315Test.java,86,,"        String fileIn = prefix + ""in/31_input.xml"";"
226807,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315Test.java,497,,"            + ""<included xml:lang='de'>"""
226808,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315Test.java,499,,"            + ""<notIncluded xml:lang='uk'>"""
226809,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315Test.java,500,,"            + ""<included                 >"""
226810,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315Test.java,501,,"            + ""</included>"""
226811,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315Test.java,502,,"            + ""</notIncluded>"""
226812,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315Test.java,507,,"            + ""<included xml:lang=\""de\"">"""
226813,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315Test.java,508,,"            + ""<included xml:lang=\""uk\"">"""
226814,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/Canonicalizer20010315Test.java,584,,"            + ""<included>"""
226815,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/NameSpaceSymbTableTest.java,52,,"        assertNull(ns.getMapping(""xmlns""));"
226816,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/c14n/implementations/NameSpaceSymbTableTest.java,59,,"        ns.addMapping(""xmlns"", ""http://a"", node1);"
226817,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/BaltimoreEncTest.java,173,,"                + ""crypto algorithms are not available"""
226818,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/ReferenceListTest.java,55,,"        Reference dataRef1 = dataRefList.newDataReference(""#id1"");"
226819,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/ReferenceListTest.java,63,,"        Reference keyRef10 = keyRefList.newKeyReference(""#id10"");"
226820,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/ReferenceListTest.java,78,,"        assertEquals(""#id1"", dataRef1Element.getAttribute(""URI""));"
226821,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/XMLCipherTest.java,150,,"            Key kek = new SecretKeySpec(bits192, ""AES"");"
226822,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/XMLCipherTest.java,179,,"            ee = (Element) ed.getElementsByTagName(""xenc:EncryptedData"").item(0);"
226823,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/XMLCipherTest.java,191,,"                + ""necessary algorithms not available"""
226824,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/XMLCipherTest.java,294,,"            SecretKeyFactory keyFactory = SecretKeyFactory.getInstance(""DESede"");"
226825,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/XMLEncryption11Test.java,86,,"            ""src/test/resources/org/w3c/www/interop/xmlenc-core-11/plaintext.xml"";"
226826,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/XMLEncryption11Test.java,87,,"        String basedir = System.getProperty(""basedir"");"
226827,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/XMLEncryption11Test.java,135,,"            KeyStore keyStore = KeyStore.getInstance(""jks"");"
226828,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/XMLEncryption11Test.java,136,,"            keyStore.load(new java.io.FileInputStream(keystore), ""passwd"".toCharArray());"
226829,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/XMLEncryption11Test.java,138,,"            Certificate cert = keyStore.getCertificate(""importkey"");"
226830,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/XMLEncryption11Test.java,145,,"                ""src/test/resources/org/w3c/www/interop/xmlenc-core-11/"""
226831,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/XMLEncryption11Test.java,153,,"                ""Skipping testRSA2048 as necessary """
226832,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/XMLEncryption11Test.java,154,,"                + ""crypto algorithms are not available"""
226833,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/XMLEncryption11Test.java,193,,"            Key sessionKey = getSessionKey(""http://www.w3.org/2009/xmlenc11#aes128-gcm"");"
226834,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/XMLEncryption11Test.java,298,,"                ""src/test/resources/org/w3c/www/interop/xmlenc-core-11/RSA-3072_SHA256WithRSA.jks"";"
226835,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/encryption/XMLEncryption11Test.java,462,,"            Key sessionKey = getSessionKey(""http://www.w3.org/2009/xmlenc11#aes256-gcm"");"
226836,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/interop/BaltimoreTest.java,81,,"                                         ""secret"".getBytes(StandardCharsets.US_ASCII));"
226837,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/interop/BaltimoreTest.java,84,,"            LOG.error(""Verification failed for "" + filename);"
226838,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/interop/BaltimoreTest.java,107,,"            LOG.error(""Verification crashed for "" + filename);"
226839,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/interop/IAIKTest.java,83,,"            LOG.error(""Verification crashed for "" + filename);"
226840,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/interop/IAIKTest.java,116,,"            LOG.error(""Verification failed for "" + filename);"
226841,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/interop/IBMTest.java,98,,"            LOG.error(""Verification crashed for "" + filename);"
226842,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/interop/IBMTest.java,103,,"            LOG.error(""Verification failed for "" + filename);"
226843,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/keys/content/x509/XMLX509IssuerSerialTest.java,56,,"        XMLX509IssuerSerial is1 = new XMLX509IssuerSerial(doc, ""1234"", 0);"
226844,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/keys/keyresolver/KeyInfoReferenceResolverTest.java,60,,"        Element referenceElement = doc.getElementById(""theReference"");"
226845,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/signature/CreateSignatureTest.java,125,,"                    + ""src/test/resources/org/apache/xml/security/samples/input/keystore.jks"""
226846,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/signature/CreateSignatureTest.java,131,,"        ks.load(fis, ""xmlsecurity"".toCharArray());"
226847,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/signature/CreateSignatureTest.java,164,,"        doc.appendChild(doc.createComment("" Comment before ""));"
226848,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/signature/CreateSignatureTest.java,165,,"        Element root = doc.createElementNS("""", ""RootElement"");"
226849,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/signature/CreateSignatureTest.java,168,,"        root.appendChild(doc.createTextNode(""Some simple text\n""));"
226850,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/signature/CreateSignatureTest.java,213,,"        String expression = ""//ds:Signature[1]"";"
226851,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/utils/RFC2253ParserTest.java,47,,"        assertEquals(RFC2253Parser.rfc2253toXMLdsig(""CN=L. Eagle,O=Sue\\, Grabbit and Runn,C=GB""), ""CN=L. Eagle,O=Sue\\, Grabbit and Runn,C=GB"");"
226852,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/dom/utils/resolver/ResolverDirectHTTPTest.java,59,,"        Attr uri = doc.createAttribute(""URI"");"
226853,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/IVSplittingOutputStreamTest.java,46,,"        KeyGenerator keyGenerator = KeyGenerator.getInstance(""AES"");"
226854,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/IVSplittingOutputStreamTest.java,49,,"        Cipher cipher = Cipher.getInstance(""AES/CBC/ISO10126Padding"");"
226855,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/XMLSecEventTest.java,60,,"        XMLSecCharacters xmlSecCharacters = new XMLSecCharactersImpl(""test"", false, false, false, null);"
226856,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/XMLSecurityEventReaderTest.java,47,,"                ""org/apache/xml/security/c14n/inExcl/plain-soap-1.1.xml""));"
226857,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/XMLSecurityStreamReaderTest.java,128,,"        assertThat(xmlSecurityStreamReader.getVersion(), is(equalTo(""1.1"")));"
226858,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/XMLSecurityStreamWriterTest.java,78,,"                    return ""test3ns"";"
226859,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/XMLSecurityStreamWriterTest.java,85,,"                if (""test2ns"".equals(namespaceURI)) {"
226860,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/XMLSecurityStreamWriterTest.java,109,,"        xmlSecurityStreamWriter.writeStartElement(""test1"");"
226861,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/XMLSecurityStreamWriterTest.java,115,,"        xmlSecurityStreamWriter.writeNamespace(""t2new"", ""test2ns"");"
226862,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/XMLSecurityStreamWriterTest.java,118,,"        xmlSecurityStreamWriter.writeStartElement(""test2ns"", ""test2"");"
226863,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/XMLSecurityStreamWriterTest.java,124,,"        xmlSecurityStreamWriter.writeStartElement(""t3"", ""test3"", ""test3ns"");"
226864,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/XMLSecurityStreamWriterTest.java,130,,"        xmlSecurityStreamWriter.writeNamespace(""t4"", ""test4ns"");"
226865,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,78,,"            if (xmlSecEvent.isStartElement() && xmlSecEvent.asStartElement().getName().equals(new QName(""http://example.net"", ""elem2""))) {"
226866,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,78,,"            if (xmlSecEvent.isStartElement() && xmlSecEvent.asStartElement().getName().equals(new QName(""http://example.net"", ""elem2""))) {"
226867,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,98,,"            System.out.println(""Expected:\n"" + new String(reference, java.nio.charset.StandardCharsets.UTF_8));"
226868,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,100,,"            System.out.println(""Got:\n"" + new String(baos.toByteArray(), java.nio.charset.StandardCharsets.UTF_8));"
226869,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,170,,"                new QName(""http://schemas.xmlsoap.org/soap/envelope/"", ""Body"", ""env"")"
226870,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,170,,"                new QName(""http://schemas.xmlsoap.org/soap/envelope/"", ""Body"", ""env"")"
226871,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,190,,"                ""<env:Envelope"""
226872,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,191,,"                        + "" xmlns:env=\""http://schemas.xmlsoap.org/soap/envelope/\"""""
226873,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,192,,"                        + "" xmlns:xsd=\""http://www.w3.org/2001/XMLSchema\"""""
226874,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,193,,"                        + "" xmlns:xsi=\""http://www.w3.org/2001/XMLSchema-instance\"""""
226875,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,194,,"                        + "" xmlns:ns0=\""http://xmlsoap.org/Ping\"""""
226876,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,195,,"                        + "" xmlns:wsu=\""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"">"""
226877,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,196,,"                        + ""<env:Body wsu:Id=\""body\"">"""
226878,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,197,,"                        + ""<ns0:Ping xsi:type=\""ns0:ping\"">"""
226879,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,198,,"                        + ""<ns0:text xsi:type=\""xsd:string\"">hello</ns0:text>"""
226880,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,199,,"                        + ""</ns0:Ping>"""
226881,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,200,,"                        + ""</env:Body>"""
226882,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,201,,"                        + ""</env:Envelope>"";"
226883,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,204,,"                ""<env:Body"""
226884,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,207,,"                        + "" xmlns:wsu=\""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"""""
226885,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,209,,"                        + "" wsu:Id=\""body\"">"""
226886,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,219,,"        inclusiveNamespaces.add(""xsi"");"
226887,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,301,,"                        + ""<ns0:Ping xmlns:ns0=\""http://xmlsoap.org/Ping\"" xsi:type=\""ns0:ping\"">"""
226888,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,309,,"            inclusiveNamespaces.add(""#default"");"
226889,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,347,,"                        + "" xmlns=\""http://example.com\"""""
226890,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,354,,"                        + ""<ns0:text xmlns=\""\"" xsi:type=\""xsd:string\"">hello</ns0:text>"""
226891,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,421,,"                        + "" xmlns=\""\"""""
226892,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315ExclusiveTest.java,564,,"                        + ""<ns0:Ping xmlns:ns0=\""http://xmlsoap.org/Ping\"" xmlns:xsi=\""http://www.w3.org/2001/XMLSchema-instance\"" xsi:type=\""ns0:ping\"">"""
226893,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315Test.java,82,,"            if (xmlSecEvent.isStartElement() && xmlSecEvent.asStartElement().getName().equals(new QName(""http://example.net"", ""elem2""))) {"
226894,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/c14n/Canonicalizer20010315Test.java,82,,"            if (xmlSecEvent.isStartElement() && xmlSecEvent.asStartElement().getName().equals(new QName(""http://example.net"", ""elem2""))) {"
226895,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/BaltimoreEncTest.java,162,,"        SecretKey secretKey = new SecretKeySpec(keyBytes, ""AES"");"
226896,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,110,,"                        ""ie/baltimore/merlin-examples/merlin-xmlenc-five/plaintext.xml"");"
226897,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,118,,"        localNames.add(""PaymentInfo"");"
226898,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,120,,"            ""http://www.w3.org/2001/04/xmlenc#tripledes-cbc"", secretKey, null, null, document,"
226899,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,125,,"        NodeList nodeList = document.getElementsByTagNameNS(""urn:example:po"", ""CreditCard"");"
226900,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,125,,"        NodeList nodeList = document.getElementsByTagNameNS(""urn:example:po"", ""CreditCard"");"
226901,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,226,,"        KeyGenerator keygen = KeyGenerator.getInstance(""AES"");"
226902,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,234,,"            ""http://www.w3.org/2001/04/xmlenc#aes256-cbc"", secretKey, null, null, document,"
226903,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,351,,"        byte[] bits192 = ""abcdefghijklmnopqrstuvwx"".getBytes();"
226904,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,363,,"            ""http://www.w3.org/2001/04/xmlenc#aes128-cbc"", secretKey,"
226905,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,435,,"            ""http://www.w3.org/2001/04/xmlenc#rsa-1_5"", pub, document, localNames, true"
226906,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,562,,"        SecretKeyFactory keyFactory = SecretKeyFactory.getInstance(""DESede"");"
226907,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,574,,"            ""http://www.w3.org/2001/04/xmlenc#aes192-cbc"", secretKey,"
226908,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,888,,"        localNames.add(""PurchaseOrder"");"
226909,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,948,,"        localNames.add(""elem"");"
226910,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,1107,,"                ""http://www.w3.org/2000/xmlns/"", ""xmlns:dsig"", ""http://www.w3.org/2000/09/xmldsig#"""
226911,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,1107,,"                ""http://www.w3.org/2000/xmlns/"", ""xmlns:dsig"", ""http://www.w3.org/2000/09/xmldsig#"""
226912,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,1107,,"                ""http://www.w3.org/2000/xmlns/"", ""xmlns:dsig"", ""http://www.w3.org/2000/09/xmldsig#"""
226913,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,1178,,"        assertEquals(""{urn:example:po}PurchaseOrder"", encryptedElementEvent.getElementPath().get(0).toString());"
226914,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,1409,,"        KeyStore keyStore = KeyStore.getInstance(""jks"");"
226915,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,1411,,"            this.getClass().getClassLoader().getResource(""transmitter.jks"").openStream(),"
226916,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,1412,,"            ""default"".toCharArray()"
226917,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/DecryptionTest.java,1414,,"        PrivateKey priv = (PrivateKey)keyStore.getKey(""transmitter"", ""default"".toCharArray());"
226918,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,101,,"        properties.setEncryptionSymAlgorithm(""http://www.w3.org/2001/04/xmlenc#tripledes-cbc"");"
226919,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,104,,"               new SecurePart(new QName(""urn:example:po"", ""PaymentInfo""), SecurePart.Modifier.Content);"
226920,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,104,,"               new SecurePart(new QName(""urn:example:po"", ""PaymentInfo""), SecurePart.Modifier.Content);"
226921,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,113,,"                        ""ie/baltimore/merlin-examples/merlin-xmlenc-five/plaintext.xml"");"
226922,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,130,,"        nodeList = document.getElementsByTagNameNS(""urn:example:po"", ""CreditCard"");"
226923,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,316,,"        KeyGenerator keygen = KeyGenerator.getInstance(""AES"");"
226924,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,359,,"            decryptUsingDOM(""http://www.w3.org/2001/04/xmlenc#aes256-cbc"", key, null, document);"
226925,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,429,,"        byte[] bits192 = ""abcdefghijklmnopqrstuvwx"".getBytes();"
226926,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,431,,"        properties.setEncryptionKeyTransportAlgorithm(""http://www.w3.org/2001/04/xmlenc#kw-aes192"");"
226927,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,438,,"        properties.setEncryptionSymAlgorithm(""http://www.w3.org/2001/04/xmlenc#aes128-cbc"");"
226928,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,496,,"        KeyPairGenerator rsaKeygen = KeyPairGenerator.getInstance(""RSA"");"
226929,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,501,,"        properties.setEncryptionKeyTransportAlgorithm(""http://www.w3.org/2001/04/xmlenc#rsa-1_5"");"
226930,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,766,,"        KeyStore keyStore = KeyStore.getInstance(""jks"");"
226931,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,768,,"            this.getClass().getClassLoader().getResource(""transmitter.jks"").openStream(),"
226932,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,769,,"            ""default"".toCharArray()"
226933,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,771,,"        PrivateKey priv = (PrivateKey)keyStore.getKey(""transmitter"", ""default"".toCharArray());"
226934,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,1198,,"        SecretKeyFactory keyFactory = SecretKeyFactory.getInstance(""DESede"");"
226935,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/EncryptionCreationTest.java,1522,,"               new SecurePart(new QName(""ns.com"", ""elem""), SecurePart.Modifier.Element);"
226936,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/KeyWrapEncryptionCreationTest.java,116,,"        KeyGenerator keygen = KeyGenerator.getInstance(""AES"");"
226937,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/KeyWrapEncryptionCreationTest.java,132,,"               new SecurePart(new QName(""urn:example:po"", ""PaymentInfo""), SecurePart.Modifier.Element);"
226938,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/KeyWrapEncryptionCreationTest.java,132,,"               new SecurePart(new QName(""urn:example:po"", ""PaymentInfo""), SecurePart.Modifier.Element);"
226939,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/KeyWrapEncryptionCreationTest.java,141,,"                        ""ie/baltimore/merlin-examples/merlin-xmlenc-five/plaintext.xml"");"
226940,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/KeyWrapEncryptionCreationTest.java,158,,"        nodeList = document.getElementsByTagNameNS(""urn:example:po"", ""CreditCard"");"
226941,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/KeyWrapEncryptionCreationTest.java,320,,"        KeyGenerator keygen = KeyGenerator.getInstance(""DESede"");"
226942,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/KeyWrapEncryptionCreationTest.java,323,,"        String algorithm = ""http://www.w3.org/2001/04/xmlenc#tripledes-cbc"";"
226943,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/KeyWrapEncryptionCreationTest.java,583,,"        KeyGenerator keygen = KeyGenerator.getInstance(""Camellia"");"
226944,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/KeyWrapEncryptionVerificationTest.java,119,,"                        ""ie/baltimore/merlin-examples/merlin-xmlenc-five/plaintext.xml"");"
226945,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/KeyWrapEncryptionVerificationTest.java,123,,"        KeyGenerator keygen = KeyGenerator.getInstance(""AES"");"
226946,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/KeyWrapEncryptionVerificationTest.java,137,,"        localNames.add(""PaymentInfo"");"
226947,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/KeyWrapEncryptionVerificationTest.java,143,,"        NodeList nodeList = document.getElementsByTagNameNS(""urn:example:po"", ""CreditCard"");"
226948,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/KeyWrapEncryptionVerificationTest.java,143,,"        NodeList nodeList = document.getElementsByTagNameNS(""urn:example:po"", ""CreditCard"");"
226949,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/KeyWrapEncryptionVerificationTest.java,291,,"        KeyGenerator keygen = KeyGenerator.getInstance(""DESede"");"
226950,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/KeyWrapEncryptionVerificationTest.java,518,,"        KeyGenerator keygen = KeyGenerator.getInstance(""Camellia"");"
226951,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/SymmetricEncryptionCreationTest.java,108,,"        KeyGenerator keygen = KeyGenerator.getInstance(""AES"");"
226952,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/SymmetricEncryptionCreationTest.java,117,,"               new SecurePart(new QName(""urn:example:po"", ""PaymentInfo""), SecurePart.Modifier.Element);"
226953,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/SymmetricEncryptionCreationTest.java,117,,"               new SecurePart(new QName(""urn:example:po"", ""PaymentInfo""), SecurePart.Modifier.Element);"
226954,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/SymmetricEncryptionCreationTest.java,126,,"                        ""ie/baltimore/merlin-examples/merlin-xmlenc-five/plaintext.xml"");"
226955,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/SymmetricEncryptionCreationTest.java,143,,"        nodeList = document.getElementsByTagNameNS(""urn:example:po"", ""CreditCard"");"
226956,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/SymmetricEncryptionVerificationTest.java,115,,"                        ""ie/baltimore/merlin-examples/merlin-xmlenc-five/plaintext.xml"");"
226957,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/SymmetricEncryptionVerificationTest.java,119,,"        KeyGenerator keygen = KeyGenerator.getInstance(""AES"");"
226958,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/SymmetricEncryptionVerificationTest.java,125,,"        localNames.add(""PaymentInfo"");"
226959,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/SymmetricEncryptionVerificationTest.java,132,,"        NodeList nodeList = document.getElementsByTagNameNS(""urn:example:po"", ""CreditCard"");"
226960,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/SymmetricEncryptionVerificationTest.java,132,,"        NodeList nodeList = document.getElementsByTagNameNS(""urn:example:po"", ""CreditCard"");"
226961,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/XMLEncryption11Test.java,99,,"        String filename = ""org/w3c/www/interop/xmlenc-core-11/plaintext.xml"";"
226962,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/XMLEncryption11Test.java,114,,"        KeyStore keyStore = KeyStore.getInstance(""jks"");"
226963,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/XMLEncryption11Test.java,115,,"        keyStore.load(this.getClass().getClassLoader().getResourceAsStream(keystore), ""passwd"".toCharArray());"
226964,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/XMLEncryption11Test.java,118,,"                keyStore.getEntry(""importkey"", new KeyStore.PasswordProtection(""passwd"".toCharArray()));"
226965,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/XMLEncryption11Test.java,147,,"        KeyGenerator keygen = KeyGenerator.getInstance(""AES"");"
226966,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/XMLEncryption11Test.java,152,,"                new SecurePart(new QName(""urn:example:po"", ""PurchaseOrder""), SecurePart.Modifier.Element);"
226967,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/XMLEncryption11Test.java,152,,"                new SecurePart(new QName(""urn:example:po"", ""PurchaseOrder""), SecurePart.Modifier.Element);"
226968,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/XMLEncryption11Test.java,174,,"        String keystore = ""org/w3c/www/interop/xmlenc-core-11/RSA-3072_SHA256WithRSA.jks"";"
226969,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/XMLEncryption11Test.java,281,,"                x509Certificate.getPublicKey(), ""http://www.w3.org/2009/xmlenc11#rsa-oaep"","
226970,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/XMLEncryption11Test.java,284,,"                sessionKey, ""http://www.w3.org/2009/xmlenc11#aes256-gcm"","
226971,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/XMLEncryption11Test.java,302,,"        String keystore = ""org/w3c/www/interop/xmlenc-core-11/RSA-4096_SHA256WithRSA.jks"";"
226972,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/encryption/XMLEncryption11Test.java,579,,"        assertEquals(encryptionMethodAlgo, ((Element) encryptionMethodElements.item(0)).getAttribute(""Algorithm""));"
226973,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/performance/AbstractPerformanceTest.java,206,,"        final File signedFile = new File(getTmpFilePath(), ""signature-stax-"" + tagCount + "".xml"");"
226974,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/performance/PerformanceMemoryTest.java,54,,"            System.out.println(""Run "" + i);"
226975,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/performance/PerformanceTimingTest.java,55,,"            System.out.println(""Run "" + i);"
226976,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/AbstractSignatureCreationTest.java,151,,"        String expression = ""//dsig:Signature[1]"";"
226977,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/AbstractSignatureVerificationTest.java,134,,"        String c14nMethod = ""http://www.w3.org/2001/10/xml-exc-c14n#"";"
226978,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/AbstractSignatureVerificationTest.java,193,,"        String digestMethod = ""http://www.w3.org/2000/09/xmldsig#sha1"";"
226979,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/BaltimoreRemoteReferenceTest.java,139,,"            Key publicKey = getPublicKey(""DSA"", 15);"
226980,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/BaltimoreRemoteReferenceTest.java,331,,"            CertificateFactory cf = CertificateFactory.getInstance(""X509"");"
226981,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/BaltimoreTest.java,127,,"        byte[] hmacKey = ""secret"".getBytes(StandardCharsets.US_ASCII);"
226982,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/BaltimoreTest.java,128,,"        SecretKey key = new SecretKeySpec(hmacKey, ""http://www.w3.org/2000/09/xmldsig#hmac-sha1"");"
226983,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/BaltimoreTest.java,227,,"        checkSignatureToken(securityEventListener, getPublicKey(""DSA"", 15),"
226984,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/IAIKRemoteReferenceTest.java,101,,"        Key publicKey = getPublicKey(""RSA"");"
226985,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/IAIKTest.java,245,,"        checkSignatureToken(securityEventListener, getPublicKey(""RSA""),"
226986,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/PKSignatureCreationTest.java,82,,"                new QName(""urn:example:po"", ""PaymentInfo""),"
226987,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/PKSignatureCreationTest.java,82,,"                new QName(""urn:example:po"", ""PaymentInfo""),"
226988,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/PKSignatureCreationTest.java,84,,"                new String[]{""http://www.w3.org/2001/10/xml-exc-c14n#""},"
226989,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/PKSignatureCreationTest.java,85,,"                ""http://www.w3.org/2000/09/xmldsig#sha1"");"
226990,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/PKSignatureCreationTest.java,94,,"                        ""ie/baltimore/merlin-examples/merlin-xmlenc-five/plaintext.xml"");"
226991,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/PKSignatureVerificationTest.java,69,,"                        ""ie/baltimore/merlin-examples/merlin-xmlenc-five/plaintext.xml"");"
226992,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/PKSignatureVerificationTest.java,74,,"        localNames.add(""PaymentInfo"");"
226993,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/PKSignatureVerificationTest.java,78,,"                ""http://www.w3.org/2001/10/xml-exc-c14n#"", ""http://www.w3.org/2000/09/xmldsig#sha1"""
226994,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/PKSignatureVerificationTest.java,78,,"                ""http://www.w3.org/2001/10/xml-exc-c14n#"", ""http://www.w3.org/2000/09/xmldsig#sha1"""
226995,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/SignatureCreationReferenceURIResolverTest.java,72,,"        KeyStore keyStore = KeyStore.getInstance(""jks"");"
226996,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/SignatureCreationReferenceURIResolverTest.java,74,,"                this.getClass().getClassLoader().getResource(""transmitter.jks"").openStream(),"
226997,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/SignatureCreationReferenceURIResolverTest.java,75,,"                ""default"".toCharArray()"
226998,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/SignatureCreationReferenceURIResolverTest.java,77,,"        Key key = keyStore.getKey(""transmitter"", ""default"".toCharArray());"
226999,./TargetProjects/santuario-java/src/test/java/org/apache/xml/security/test/stax/signature/SignatureCreationReferenceURIResolverTest.java,83,,"                new SecurePart(new QName(""urn:example:po"", ""PaymentInfo""), SecurePart.Modifier.Element);"
