41000,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/stats/TableStatsPrinter.java,53,,"            out.println(""----------------"");"
41001,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/stats/TpStatsPrinter.java,106,,"                    columns.addAll(Arrays.asList(""N/A"", ""N/A"", ""N/A"", ""N/A""));"
41002,./TargetProjects/cassandra/src/java/org/apache/cassandra/utils/ByteBufferUtil.java,359,,"            throw new IOException(""Corrupt (negative) value length encountered"");"
41003,./TargetProjects/cassandra/src/java/org/apache/cassandra/utils/ExecutorUtils.java,107,,"                    throw new TimeoutException(executor + "" did not terminate on time"");"
41004,./TargetProjects/cassandra/src/java/org/apache/cassandra/utils/FBUtilities.java,643,,"            className = ""org.apache.cassandra.auth."" + className;"
41005,./TargetProjects/cassandra/src/java/org/apache/cassandra/utils/MerkleTree.java,669,,"            return ""#<RowHash "" + token + ' ' + (hash == null ? ""null"" : Hex.bytesToHex(hash)) + "" @ "" + size + "" bytes>"";"
41006,./TargetProjects/cassandra/src/java/org/apache/cassandra/utils/concurrent/WeightedQueue.java,173,,"        throw new UnsupportedOperationException(""Seems like a bad idea"");"
41007,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/action/GossipHelper.java,95,,"                                                             peer.config().getString(""partitioner""),"
41008,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/action/GossipHelper.java,96,,"                                                             peer.config().getString(""initial_token"")),"
41009,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/AbstractNetstatsStreaming.java,128,,"                                  .filter(output -> output.contains(""Receiving"") || output.contains(""Sending""))"
41010,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/AbstractNetstatsStreaming.java,128,,"                                  .filter(output -> output.contains(""Receiving"") || output.contains(""Sending""))"
41011,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTest.java,76,,"            cluster.schemaChange(""CREATE TABLE "" + KEYSPACE + "".tbl (pk int, ck int, v int, PRIMARY KEY (pk, ck))"");"
41012,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTest.java,76,,"            cluster.schemaChange(""CREATE TABLE "" + KEYSPACE + "".tbl (pk int, ck int, v int, PRIMARY KEY (pk, ck))"");"
41013,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTest.java,78,,"            cluster.coordinator(1).execute(""INSERT INTO "" + KEYSPACE + "".tbl (pk, ck, v) VALUES (1, 1, 1) IF NOT EXISTS"", ConsistencyLevel.QUORUM);"
41014,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTest.java,78,,"            cluster.coordinator(1).execute(""INSERT INTO "" + KEYSPACE + "".tbl (pk, ck, v) VALUES (1, 1, 1) IF NOT EXISTS"", ConsistencyLevel.QUORUM);"
41015,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTest.java,79,,"            assertRows(cluster.coordinator(1).execute(""SELECT * FROM "" + KEYSPACE + "".tbl WHERE pk = 1"", ConsistencyLevel.SERIAL),"
41016,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTest.java,79,,"            assertRows(cluster.coordinator(1).execute(""SELECT * FROM "" + KEYSPACE + "".tbl WHERE pk = 1"", ConsistencyLevel.SERIAL),"
41017,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTest.java,81,,"            cluster.coordinator(1).execute(""UPDATE "" + KEYSPACE + "".tbl SET v = 3 WHERE pk = 1 and ck = 1 IF v = 2"", ConsistencyLevel.QUORUM);"
41018,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTest.java,84,,"            cluster.coordinator(1).execute(""UPDATE "" + KEYSPACE + "".tbl SET v = 2 WHERE pk = 1 and ck = 1 IF v = 1"", ConsistencyLevel.QUORUM);"
41019,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTest.java,93,,"        try (Cluster cluster = init(Cluster.create(3, config -> config.set(""write_request_timeout_in_ms"", REQUEST_TIMEOUT)"
41020,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTest.java,94,,"                                                                      .set(""cas_contention_timeout_in_ms"", CONTENTION_TIMEOUT))))"
41021,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTest.java,383,,"            cluster.schemaChange(""CREATE KEYSPACE "" + KEYSPACE + "" WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 3};"");"
41022,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTest.java,383,,"            cluster.schemaChange(""CREATE KEYSPACE "" + KEYSPACE + "" WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 3};"");"
41023,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTest.java,384,,"            cluster.schemaChange(""CREATE TABLE "" + KEYSPACE + "".tbl (pk int, ck int, v1 int, v2 int, PRIMARY KEY (pk, ck))"");"
41024,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTest.java,395,,"            assertRows(cluster.coordinator(1).execute(""INSERT INTO "" + KEYSPACE + "".tbl (pk, ck, v1) VALUES (?, 1, 1) IF NOT EXISTS"", ConsistencyLevel.ONE, pk),"
41025,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTest.java,404,,"            assertRows(cluster.coordinator(4).execute(""INSERT INTO "" + KEYSPACE + "".tbl (pk, ck, v2) VALUES (?, 1, 2) IF NOT EXISTS"", ConsistencyLevel.ONE, pk),"
41026,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/FailingRepairTest.java,219,,"                put(RepairOption.PRIMARY_RANGE_KEY, ""false"");"
41027,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/FrozenUDTTest.java,40,,"            cluster.schemaChange(""create type "" + KEYSPACE + "".a (foo text)"");"
41028,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/FrozenUDTTest.java,40,,"            cluster.schemaChange(""create type "" + KEYSPACE + "".a (foo text)"");"
41029,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/FrozenUDTTest.java,41,,"            cluster.schemaChange(""create table "" + KEYSPACE + "".x (id int, ck frozen<a>, i int, primary key (id, ck))"");"
41030,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/FrozenUDTTest.java,41,,"            cluster.schemaChange(""create table "" + KEYSPACE + "".x (id int, ck frozen<a>, i int, primary key (id, ck))"");"
41031,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/FrozenUDTTest.java,43,,"                cluster.coordinator(1).execute(""insert into "" + KEYSPACE + "".x (id, ck, i) VALUES (?, "" + json(i) + "", ? )"", ConsistencyLevel.ALL, i, i);"
41032,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/FrozenUDTTest.java,43,,"                cluster.coordinator(1).execute(""insert into "" + KEYSPACE + "".x (id, ck, i) VALUES (?, "" + json(i) + "", ? )"", ConsistencyLevel.ALL, i, i);"
41033,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/FrozenUDTTest.java,43,,"                cluster.coordinator(1).execute(""insert into "" + KEYSPACE + "".x (id, ck, i) VALUES (?, "" + json(i) + "", ? )"", ConsistencyLevel.ALL, i, i);"
41034,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/FrozenUDTTest.java,46,,"                assertRows(cluster.coordinator(1).execute(""select i from "" + KEYSPACE + "".x WHERE id = ? and ck = "" + json(i), ConsistencyLevel.ALL, i),"
41035,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/FrozenUDTTest.java,46,,"                assertRows(cluster.coordinator(1).execute(""select i from "" + KEYSPACE + "".x WHERE id = ? and ck = "" + json(i), ConsistencyLevel.ALL, i),"
41036,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/FrozenUDTTest.java,49,,"            cluster.schemaChange(""alter type "" + KEYSPACE + "".a add bar text"");"
41037,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/FrozenUDTTest.java,49,,"            cluster.schemaChange(""alter type "" + KEYSPACE + "".a add bar text"");"
41038,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/GroupByTest.java,112,,"                           row(""_ 1 2 3"", ""_ 1 2 3"", ""_ 1 2 3""));"
41039,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/HintedHandoffAddRemoveNodesTest.java,68,,"            populate(cluster, ""decom_hint_test"", 2, 0, 128, ConsistencyLevel.ONE);"
41040,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/HintedHandoffAddRemoveNodesTest.java,109,,"            populate(cluster, ""boot_hint_test"", 2, 0, 128, ConsistencyLevel.ONE);"
41041,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/HintedHandoffNodetoolTest.java,85,,"        cluster.get(node).nodetoolResult(""statushandoff"").asserts().success().stdoutContains(""Hinted handoff is running"");"
41042,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/HintedHandoffNodetoolTest.java,85,,"        cluster.get(node).nodetoolResult(""statushandoff"").asserts().success().stdoutContains(""Hinted handoff is running"");"
41043,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/IPMembershipTest.java,92,,"            updateAddress(nodeToReplace, ""127.0.0.4"");"
41044,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/IncRepairAdminTest.java,82,,"                NodeToolResult res = i.nodetoolResult(""repair_admin"");"
41045,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/IncRepairTruncationTest.java,61,,"            cluster.get(1).nodetoolResult(""repair"", KEYSPACE, ""tbl"").asserts().success();"
41046,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/InternodeEncryptionEnforcementTest.java,57,,"                    encryption.put(""keystore_password"", ""cassandra"");"
41047,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/InternodeEncryptionOptionsTest.java,38,,"            c.set(""server_encryption_options"","
41048,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/InternodeEncryptionOptionsTest.java,39,,"                  ImmutableMap.of(""optional"", true,"
41049,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/InternodeEncryptionOptionsTest.java,53,,"            c.set(""ssl_storage_port"", 7013);"
41050,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/InternodeEncryptionOptionsTest.java,56,,"                  .put(""internode_encryption"", ""none"")"
41051,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/InternodeEncryptionOptionsTest.java,56,,"                  .put(""internode_encryption"", ""none"")"
41052,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/InternodeEncryptionOptionsTest.java,110,,"            c.set(""storage_port"", 7012);"
41053,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/InternodeEncryptionOptionsTest.java,205,,"                              .put(""internode_encryption"", ""all"")"
41054,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/JVMDTestTest.java,57,,"            cluster.schemaChange(""CREATE TABLE ""+KEYSPACE+"".tbl (id int primary key, i int)"");"
41055,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/MetricsTest.java,38,,"                CassandraMetricsRegistry.Metrics.counter(""test_counter"").inc(100);"
41056,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/NativeTransportEncryptionOptionsTest.java,38,,"            c.set(""client_encryption_options"","
41057,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/NativeTransportEncryptionOptionsTest.java,54,,"            int port = (int) cluster.get(1).config().get(""native_transport_port"");"
41058,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/NativeTransportEncryptionOptionsTest.java,96,,"                              .put(""enabled"", false)"
41059,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/NetstatsRepairStreamingTest.java,66,,"            node1.nodetoolResult(""disableautocompaction"", ""netstats_test"").asserts().success();"
41060,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/NetworkTopologyTest.java,48,,"                                                    .withRack(""elsewhere"", ""firstrack"", 1)"
41061,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/OptimiseStreamsRepairTest.java,76,,"                cluster.coordinator(1).execute(""INSERT INTO "" + KEYSPACE + "".tbl (id, t) values (?,?)"", ConsistencyLevel.ALL, i, i);"
41062,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/OptimiseStreamsRepairTest.java,76,,"                cluster.coordinator(1).execute(""INSERT INTO "" + KEYSPACE + "".tbl (id, t) values (?,?)"", ConsistencyLevel.ALL, i, i);"
41063,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/OptimiseStreamsRepairTest.java,89,,"            NodeToolResult res = cluster.get(1).nodetoolResult(""repair"", KEYSPACE, ""-os"");"
41064,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/PreviewRepairTest.java,95,,"            cluster.schemaChange(""create table "" + KEYSPACE + "".tbl (id int primary key, t int)"");"
41065,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/PreviewRepairTest.java,95,,"            cluster.schemaChange(""create table "" + KEYSPACE + "".tbl (id int primary key, t int)"");"
41066,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/PreviewRepairTest.java,105,,"                ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(""tbl"");"
41067,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/PreviewRepairTest.java,354,,"            insert(cluster.coordinator(1), 0, 100, ""tbl2"");"
41068,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairEmptyRangeTombstonesTest.java,118,,"        tester().createTable(""CREATE TABLE %s(k int, c int, PRIMARY KEY (k, c)) "" +"
41069,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairEmptyRangeTombstonesTest.java,119,,"                             ""WITH CLUSTERING ORDER BY (c %s) AND read_repair='%s'"")"
41070,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairEmptyRangeTombstonesTest.java,120,,"                .mutate(1, ""DELETE FROM %s USING TIMESTAMP 1 WHERE k=0 AND c>0 AND c<3"")"
41071,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairEmptyRangeTombstonesTest.java,123,,"                .assertRowsInternal(""SELECT * FROM %s"")"
41072,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairEmptyRangeTombstonesTest.java,124,,"                .mutate(2, ""DELETE FROM %s WHERE k=0 AND c>0 AND c<3"")"
41073,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairEmptyRangeTombstonesTest.java,154,,"                .mutate(1, ""INSERT INTO %s (k, c) VALUES (0, 2)"")"
41074,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,141,,"        .createTable(""CREATE TABLE %s (k int PRIMARY KEY, a int, b int)"")"
41075,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,142,,"        .mutate(""INSERT INTO %s (k, a, b) VALUES (1, 10, 100)"","
41076,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,143,,"                ""INSERT INTO %s (k, a, b) VALUES (2, 20, 200)"")"
41077,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,148,,"        .deleteColumn(""DELETE a FROM %s WHERE k=1"", ""b"", 0, 1,"
41078,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,152,,"        .deleteRows(""DELETE FROM %s WHERE k=1"", 1,"
41079,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,167,,"        .createTable(""CREATE TABLE %s (k int, c int, a int, b int, PRIMARY KEY(k, c))"")"
41080,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,168,,"        .mutate(""INSERT INTO %s (k, c, a, b) VALUES (1, 10, 100, 1000)"","
41081,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,252,,"        .mutate(""INSERT INTO %s (k, c, a, b) VALUES (0, 1, 10, 100)"","
41082,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,253,,"                ""INSERT INTO %s (k, c, a, b) VALUES (0, 2, 20, 200)"","
41083,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,254,,"                ""INSERT INTO %s (k, c, a, b) VALUES (0, 3, 30, 300)"")"
41084,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,281,,"                ""INSERT INTO %s (k, a, b) VALUES (3, 30, 300)"")"
41085,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,307,,"                ""INSERT INTO %s (k, c, a, b) VALUES (2, 20, 200, 2000)"","
41086,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,309,,"                ""INSERT INTO %s (k, c, a, b) VALUES (3, 30, 300, 3000)"")"
41087,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,523,,"        .deleteRows(""DELETE FROM %s WHERE k=0 AND c=3"", 1,"
41088,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,526,,"        .deleteRows(""DELETE FROM %s WHERE k=0"", 1,"
41089,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,850,,"        .deleteColumn(""DELETE a FROM %s WHERE k=0"", ""b"", 0, 1,"
41090,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTypesTest.java,873,,"        .deleteColumn(""DELETE a FROM %s WHERE k=0"", ""b[4]"", 0, 1,"
41091,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairTest.java,130,,"            cluster.get(1).executeInternal(""INSERT INTO "" + KEYSPACE + "".tbl (pk, ck, v) VALUES (1, 1, 1)"");"
41092,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairTest.java,132,,"            assertRows(cluster.get(3).executeInternal(""SELECT * FROM "" + KEYSPACE + "".tbl WHERE pk = 1""));"
41093,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairTest.java,132,,"            assertRows(cluster.get(3).executeInternal(""SELECT * FROM "" + KEYSPACE + "".tbl WHERE pk = 1""));"
41094,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairCoordinatorFailingMessageTest.java,152,,"                  .errorContains(""Some repair failed"")"
41095,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairCoordinatorFast.java,69,,"                      .notificationContains(ProgressEventType.START, ""Starting repair command"")"
41096,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairCoordinatorFast.java,70,,"                      .notificationContains(ProgressEventType.START, ""repairing keyspace "" + KEYSPACE + "" with repair options"")"
41097,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairCoordinatorFast.java,70,,"                      .notificationContains(ProgressEventType.START, ""repairing keyspace "" + KEYSPACE + "" with repair options"")"
41098,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairCoordinatorFast.java,95,,"            NodeToolResult result = repair(2, ""doesnotexist"");"
41099,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairCoordinatorFast.java,121,,"                      .notificationContains(ProgressEventType.COMPLETE, ""finished with error"");"
41100,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairCoordinatorFast.java,138,,"            CLUSTER.schemaChange(format(""CREATE TABLE %s.%s (key text, value text, PRIMARY KEY (key))"", KEYSPACE, table));"
41101,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairDigestTrackingTest.java,69,,"            cluster.schemaChange(""CREATE TABLE "" + KS_TABLE+ "" (k INT, c INT, v INT, PRIMARY KEY (k,c)) with read_repair='NONE'"");"
41102,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairDigestTrackingTest.java,72,,"                cluster.coordinator(1).execute(""INSERT INTO "" + KS_TABLE + "" (k, c, v) VALUES (?, ?, ?)"","
41103,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairDigestTrackingTest.java,96,,"            cluster.coordinator(1).execute(""SELECT * FROM "" + KS_TABLE, ConsistencyLevel.ALL);"
41104,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairDigestTrackingTest.java,162,,"                cluster.coordinator(1).execute(""INSERT INTO "" + KS_TABLE + "" (k, c, v) VALUES (0, ?, ?)"","
41105,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairDigestTrackingTest.java,228,,"                cluster.coordinator(1).execute(""INSERT INTO "" + KS_TABLE + "" (k, c, v1) VALUES (1, ?, ?) USING TIMESTAMP 1"","
41106,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairOperationalTest.java,53,,"            cluster.forEach(i -> i.nodetoolResult(""repair"", ""--full"").asserts().success());"
41107,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairOperationalTest.java,100,,"            cluster.get(3).nodetoolResult(""repair"", ""-full"", KEYSPACE , ""tbl"", ""-st"", ""0"", ""-et"", ""1000"")"
41108,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairOperationalTest.java,100,,"            cluster.get(3).nodetoolResult(""repair"", ""-full"", KEYSPACE , ""tbl"", ""-st"", ""0"", ""-et"", ""1000"")"
41109,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairOperationalTest.java,100,,"            cluster.get(3).nodetoolResult(""repair"", ""-full"", KEYSPACE , ""tbl"", ""-st"", ""0"", ""-et"", ""1000"")"
41110,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairOperationalTest.java,100,,"            cluster.get(3).nodetoolResult(""repair"", ""-full"", KEYSPACE , ""tbl"", ""-st"", ""0"", ""-et"", ""1000"")"
41111,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairOperationalTest.java,100,,"            cluster.get(3).nodetoolResult(""repair"", ""-full"", KEYSPACE , ""tbl"", ""-st"", ""0"", ""-et"", ""1000"")"
41112,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairOperationalTest.java,104,,"            cluster.get(3).nodetoolResult(""repair"", ""-full"", KEYSPACE , ""tbl"", ""-st"", ""0"", ""-et"", ""1000"", ""--ignore-unreplicated-keyspaces"")"
41113,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairOperationalTest.java,119,,"            cluster.schemaChange(""CREATE KEYSPACE "" + KEYSPACE + "" WITH replication = {'class': 'NetworkTopologyStrategy', 'datacenter1':2, 'datacenter2':0}"");"
41114,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairOperationalTest.java,119,,"            cluster.schemaChange(""CREATE KEYSPACE "" + KEYSPACE + "" WITH replication = {'class': 'NetworkTopologyStrategy', 'datacenter1':2, 'datacenter2':0}"");"
41115,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairOperationalTest.java,120,,"            cluster.schemaChange(""CREATE TABLE "" + KEYSPACE + "".tbl (id int PRIMARY KEY, i int)"");"
41116,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairOperationalTest.java,120,,"            cluster.schemaChange(""CREATE TABLE "" + KEYSPACE + "".tbl (id int PRIMARY KEY, i int)"");"
41117,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairOperationalTest.java,122,,"                cluster.coordinator(1).execute(""INSERT INTO "" + KEYSPACE + "".tbl (id, i) VALUES (?, ?)"", ConsistencyLevel.ALL, i, i);"
41118,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairOperationalTest.java,122,,"                cluster.coordinator(1).execute(""INSERT INTO "" + KEYSPACE + "".tbl (id, i) VALUES (?, ?)"", ConsistencyLevel.ALL, i, i);"
41119,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairOperationalTest.java,127,,"            Assertions.assertThat(node.config().localDatacenter()).isEqualTo(""datacenter2"");"
41120,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReplicaFilteringProtectionTest.java,135,,"        Object[][] initialRows = cluster.coordinator(1).execute(query, ALL, ""old"", ROWS);"
41121,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReplicaFilteringProtectionTest.java,142,,"        updateAllRowsOn(1, fullTableName, ""new"");"
41122,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ReplicaFilteringProtectionTest.java,182,,"        updateAllRowsOn(1, fullTableName, ""future"");"
41123,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/SchemaTest.java,37,,"            cluster.get(1).schemaChangeInternal(""ALTER TABLE "" + KEYSPACE + "".tbl ADD "" + name + "" list<int>"");"
41124,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/SchemaTest.java,37,,"            cluster.get(1).schemaChangeInternal(""ALTER TABLE "" + KEYSPACE + "".tbl ADD "" + name + "" list<int>"");"
41125,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/SchemaTest.java,37,,"            cluster.get(1).schemaChangeInternal(""ALTER TABLE "" + KEYSPACE + "".tbl ADD "" + name + "" list<int>"");"
41126,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ShortReadProtectionTest.java,185,,"        tester.createTable(""CREATE TABLE %s (pk int, ck int, PRIMARY KEY (pk, ck))"")"
41127,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ShortReadProtectionTest.java,204,,"        tester.createTable(""CREATE TABLE %s (k int, c int, v int, PRIMARY KEY(k, c))"")"
41128,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/ShortReadProtectionTest.java,251,,"                        ""INSERT INTO %s (k, c, v) VALUES (0, 2, 20) USING TIMESTAMP 0"")"
41129,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/SinglePartitionReadCommandTest.java,43,,"            assertRows(cluster.coordinator(2).execute(withKeyspace(""SELECT * FROM %s.tbl WHERE pk=1 AND ck='1'""), ConsistencyLevel.ALL),"
41130,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/TableEstimatesTest.java,62,,"            node.executeInternal(table_estimatesInsert, ""system_auth"", ""bad_table"", ""local_primary"", ""-5"", ""5"", 0L, 0L);"
41131,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/TableEstimatesTest.java,62,,"            node.executeInternal(table_estimatesInsert, ""system_auth"", ""bad_table"", ""local_primary"", ""-5"", ""5"", 0L, 0L);"
41132,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/TableEstimatesTest.java,63,,"            node.executeInternal(table_estimatesInsert, ""bad_keyspace"", ""bad_table"", ""local_primary"", ""-5"", ""5"", 0L, 0L);"
41133,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/hostreplacement/HostReplacementTest.java,83,,"            SimpleQueryResult expectedState = nodeToRemove.coordinator().executeWithResult(""SELECT * FROM "" + KEYSPACE + "".tbl"", ConsistencyLevel.ALL);"
41134,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/hostreplacement/HostReplacementTest.java,83,,"            SimpleQueryResult expectedState = nodeToRemove.coordinator().executeWithResult(""SELECT * FROM "" + KEYSPACE + "".tbl"", ConsistencyLevel.ALL);"
41135,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/metric/TableMetricTest.java,92,,"            cluster.forEach(i -> assertTableMetricsExist(i, KEYSPACE, ""tbl""));"
41136,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/metric/TableMetricTest.java,194,,"            Assert.assertTrue(""Unable to find metric "" + name + "" for "" + keyspace + ""."" + table, mbeans.isRegistered(mbean));"
41137,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/metrics/StreamingMetricsTest.java,323,,"                .describedAs(""No SSTable should have been streamed so far from node"" + node + "" to node"" + peer)"
41138,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/metrics/StreamingMetricsTest.java,361,,"                .describedAs(""The amount of data received by node"" + node + "" from node"" + peer + "" is not the expected one. [expected: "" + receivedBytes + "", actual: "" + actual + ""]"")"
41139,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/test/metrics/StreamingMetricsTest.java,361,,"                .describedAs(""The amount of data received by node"" + node + "" from node"" + peer + "" is not the expected one. [expected: "" + receivedBytes + "", actual: "" + actual + ""]"")"
41140,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/CompactStorageUpgradeTest.java,42,,"            cluster.schemaChange(""CREATE TABLE "" + KEYSPACE + "".tbl (pk int, ck int, v int, PRIMARY KEY (pk, ck)) WITH COMPACT STORAGE"");"
41141,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/CompactStorageUpgradeTest.java,50,,"                cluster.coordinator(coord).execute(""INSERT INTO "" + KEYSPACE + "".tbl (pk, ck, v) VALUES (?, ?, ?)"", ConsistencyLevel.ALL, v1, v1, v1);"
41142,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/CompactStorageUpgradeTest.java,52,,"                assertRows(cluster.coordinator(coord).execute(""SELECT * FROM "" + KEYSPACE + "".tbl WHERE pk = ?"","
41143,./TargetProjects/cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/CompactStorageUpgradeTest.java,52,,"                assertRows(cluster.coordinator(coord).execute(""SELECT * FROM "" + KEYSPACE + "".tbl WHERE pk = ?"","
41144,./TargetProjects/cassandra/test/long/org/apache/cassandra/cql3/CachingBench.java,293,,"        testSetup(STRATEGY, ""LZ4Compressor"", DiskAccessMode.mmap, false);"
41145,./TargetProjects/cassandra/test/long/org/apache/cassandra/cql3/ManyRowsTest.java,42,,"            execute(""INSERT INTO %s (k) VALUES (?)"", k);"
41146,./TargetProjects/cassandra/test/long/org/apache/cassandra/cql3/ManyRowsTest.java,44,,"        assertRows(execute(""SELECT COUNT(*) FROM %s""), row(9999L));"
41147,./TargetProjects/cassandra/test/long/org/apache/cassandra/cql3/ViewLongTest.java,114,,"        executeNet(version, ""USE "" + keyspace());"
41148,./TargetProjects/cassandra/test/long/org/apache/cassandra/cql3/ViewLongTest.java,241,,"        assertRows(execute(""select * from %s""), row(1, 2, 111));"
41149,./TargetProjects/cassandra/test/long/org/apache/cassandra/cql3/ViewLongTest.java,242,,"        assertRows(execute(""select * from mv""), row(1, 111, 2));"
41150,./TargetProjects/cassandra/test/long/org/apache/cassandra/cql3/ViewLongTest.java,360,,"        assertRows(execute(""select k,c,a,b from %s""), row(1, 2, null, 111));"
41151,./TargetProjects/cassandra/test/long/org/apache/cassandra/cql3/ViewLongTest.java,361,,"        assertRows(execute(""select k,c,a from mv""), row(1, 2, null));"
41152,./TargetProjects/cassandra/test/long/org/apache/cassandra/db/compaction/LongCompactionsTest.java,48,,"    public static final String CF_STANDARD = ""Standard1"";"
41153,./TargetProjects/cassandra/test/memory/org/apache/cassandra/db/compaction/CompactionAllocationTest.java,104,,"        static final List<String> EMPTY = Lists.newArrayList(""n/a"", ""n/a"", ""n/a"");"
41154,./TargetProjects/cassandra/test/memory/org/apache/cassandra/db/compaction/CompactionAllocationTest.java,164,,"        testTinyPartitions(""warmup"", 9, maybeInflate(300), true);"
41155,./TargetProjects/cassandra/test/memory/org/apache/cassandra/db/compaction/CompactionAllocationTest.java,467,,"        ColumnFamilyStore cfs = Schema.instance.getColumnFamilyStoreInstance(Schema.instance.getTableMetadata(ksname, ""tbl"").id);"
41156,./TargetProjects/cassandra/test/microbench/org/apache/cassandra/test/microbench/ChecksumBench.java,67,,"    @Fork(value = 1, jvmArgsAppend = { ""-Xmx512M"", ""-Djmh.executor=CUSTOM"","
41157,./TargetProjects/cassandra/test/microbench/org/apache/cassandra/test/microbench/ChecksumBench.java,67,,"    @Fork(value = 1, jvmArgsAppend = { ""-Xmx512M"", ""-Djmh.executor=CUSTOM"","
41158,./TargetProjects/cassandra/test/microbench/org/apache/cassandra/test/microbench/ChecksumBench.java,68,,"            ""-Djmh.executor.class=org.apache.cassandra.test.microbench.FastThreadExecutor"","
41159,./TargetProjects/cassandra/test/microbench/org/apache/cassandra/test/microbench/LatencyTrackingBench.java,78,,"        parent = new LatencyMetrics(""test"", ""testCF"");"
41160,./TargetProjects/cassandra/test/microbench/org/apache/cassandra/test/microbench/instance/ReadTestWidePartitions.java,44,,"        return performRead(""SELECT * from "" + table + "" where userid=? and picid=?"","
41161,./TargetProjects/cassandra/test/microbench/org/apache/cassandra/test/microbench/instance/ReadTestWidePartitions.java,44,,"        return performRead(""SELECT * from "" + table + "" where userid=? and picid=?"","
41162,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,79,,"        System.setProperty(""cassandra.allow_unsafe_join"", ""true"");"
41163,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,128,,"                standardCFMD(ks1, ""Standard1"").compaction(CompactionParams.stcs(compactionOptions)).build(),"
41164,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,130,,"                standardCFMD(ks1, ""Standard3"").build(),"
41165,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,135,,"                keysIndexCFMD(ks1, ""Indexed1"", true).build(),"
41166,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,246,,"        if (Boolean.parseBoolean(System.getProperty(""cassandra.test.compression"", ""false"")))"
41167,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,314,,"                         .addPartitionKeyColumn(""key"", AsciiType.instance)"
41168,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,341,,"                            .addRegularColumn(""val"", CounterColumnType.instance)"
41169,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,400,,"                         .addRegularColumn(""birthdate"", LongType.instance)"
41170,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,401,,"                         .addRegularColumn(""notbirthdate"", LongType.instance)"
41171,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,469,,"                     .addRegularColumn(""value"", LongType.instance)"
41172,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,522,,"                         .addRegularColumn(""age"", Int32Type.instance)"
41173,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,526,,"                         .addRegularColumn(""score"", DoubleType.instance)"
41174,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,539,,"                        put(""mode"", OnDiskIndexBuilder.Mode.CONTAINS.toString());"
41175,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,561,,"                        put(""analyzer_class"", ""org.apache.cassandra.index.sasi.analyzer.NonTokenizingAnalyzer"");"
41176,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,561,,"                        put(""analyzer_class"", ""org.apache.cassandra.index.sasi.analyzer.NonTokenizingAnalyzer"");"
41177,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,565,,"                        put(""case_sensitive"", ""false"");"
41178,./TargetProjects/cassandra/test/unit/org/apache/cassandra/SchemaLoader.java,577,,"                        put(""analyzed"", ""true"");"
41179,./TargetProjects/cassandra/test/unit/org/apache/cassandra/Util.java,379,,"                assert !iterator.hasNext() : ""Expecting a single partition but got more"";"
41180,./TargetProjects/cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerAuthTest.java,65,,"    private static final String CASS_USER = ""cassandra"";"
41181,./TargetProjects/cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerTest.java,105,,"        createTable(""CREATE TABLE %s (id int primary key, v1 text, v2 text)"");"
41182,./TargetProjects/cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerTest.java,106,,"        execute(""INSERT INTO %s (id, v1, v2) VALUES (?, ?, ?)"", 1, ""Apache"", ""Cassandra"");"
41183,./TargetProjects/cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerTest.java,106,,"        execute(""INSERT INTO %s (id, v1, v2) VALUES (?, ?, ?)"", 1, ""Apache"", ""Cassandra"");"
41184,./TargetProjects/cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerTest.java,106,,"        execute(""INSERT INTO %s (id, v1, v2) VALUES (?, ?, ?)"", 1, ""Apache"", ""Cassandra"");"
41185,./TargetProjects/cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerTest.java,107,,"        execute(""INSERT INTO %s (id, v1, v2) VALUES (?, ?, ?)"", 2, ""trace"", ""test"");"
41186,./TargetProjects/cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerTest.java,107,,"        execute(""INSERT INTO %s (id, v1, v2) VALUES (?, ?, ?)"", 2, ""trace"", ""test"");"
41187,./TargetProjects/cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerTest.java,113,,"        String cql = ""SELECT id, v1, v2 FROM "" + KEYSPACE + '.' + currentTable() + "" WHERE id = ?"";"
41188,./TargetProjects/cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerTest.java,113,,"        String cql = ""SELECT id, v1, v2 FROM "" + KEYSPACE + '.' + currentTable() + "" WHERE id = ?"";"
41189,./TargetProjects/cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerTest.java,213,,"        cql = ""INSERT INTO "" + KEYSPACE + '.' + currentTable() + "" (id, v1, v2) VALUES (?, ?, ?)"";"
41190,./TargetProjects/cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerTest.java,213,,"        cql = ""INSERT INTO "" + KEYSPACE + '.' + currentTable() + "" (id, v1, v2) VALUES (?, ?, ?)"";"
41191,./TargetProjects/cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerTest.java,214,,"        executeAndAssertWithPrepare(cql, AuditLogEntryType.UPDATE, 1, ""insert_audit"", ""test"");"
41192,./TargetProjects/cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerTest.java,295,,"        batchStatement.add(prep.bind(1, ""Apapche"", ""Cassandra""));"
41193,./TargetProjects/cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerTest.java,535,,"            Assert.fail(""should not succeed"");"
41194,./TargetProjects/cassandra/test/unit/org/apache/cassandra/auth/CassandraNetworkAuthorizerTest.java,181,,"        Assert.assertEquals(DCPermissions.subset(""dc1"", ""dc2""), dcPerms(username));"
41195,./TargetProjects/cassandra/test/unit/org/apache/cassandra/auth/CassandraNetworkAuthorizerTest.java,181,,"        Assert.assertEquals(DCPermissions.subset(""dc1"", ""dc2""), dcPerms(username));"
41196,./TargetProjects/cassandra/test/unit/org/apache/cassandra/auth/jmx/AuthorizationProxyTest.java,76,,"                                   ""getAttribute"","
41197,./TargetProjects/cassandra/test/unit/org/apache/cassandra/auth/jmx/AuthorizationProxyTest.java,77,,"                                   new Object[]{ objectName(osBean), ""arch"" }));"
41198,./TargetProjects/cassandra/test/unit/org/apache/cassandra/auth/jmx/AuthorizationProxyTest.java,256,,"                                   ""queryNames"","
41199,./TargetProjects/cassandra/test/unit/org/apache/cassandra/batchlog/BatchlogEndpointFilterTest.java,110,,"                .put(""1"", InetAddressAndPort.getByName(""111""))"
41200,./TargetProjects/cassandra/test/unit/org/apache/cassandra/batchlog/BatchlogManagerTest.java,109,,"                .add(""val"", ""val"" + 1234)"
41201,./TargetProjects/cassandra/test/unit/org/apache/cassandra/batchlog/BatchlogManagerTest.java,143,,"                              .clustering(""name"" + j)"
41202,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cache/CacheProviderTest.java,179,,"        key1 = new RowCacheKey(id1, ""indexFoo"", ByteBuffer.wrap(b1));"
41203,./TargetProjects/cassandra/test/unit/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutorTest.java,61,,"                                                                                 new NamedThreadFactory(""TEST""));"
41204,./TargetProjects/cassandra/test/unit/org/apache/cassandra/config/EncryptionOptionsTest.java,58,,"            return new EncryptionOptionsTestCase(new EncryptionOptions(keystorePath, ""dummypass"", ""dummytruststore"", ""dummypass"","
41205,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/CQL3TypeLiteralTest.java,88,,"        addNativeValue(""null"", CQL3Type.Native.ASCII, null);"
41206,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java,1087,,"                Assert.fail(String.format(""No rows returned by query but %d expected"", rows.length));"
41207,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/CustomNowInSecondsTest.java,59,,"        String ks = createKeyspace(""CREATE KEYSPACE %s WITH replication={ 'class' : 'SimpleStrategy', 'replication_factor' : 1 }"");"
41208,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/CustomNowInSecondsTest.java,60,,"        String tbl = createTable(ks, ""CREATE TABLE %s (id int primary key, val int)"");"
41209,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/CustomNowInSecondsTest.java,68,,"        assertEquals(1, executeSelect(format(""SELECT * FROM %s.%s"", ks, tbl), Integer.MIN_VALUE, prepared).size());"
41210,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/DeleteTest.java,51,,"                ""  id int ,\n"" +"
41211,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/DeleteTest.java,52,,"                ""  cid int ,\n"" +"
41212,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/DeleteTest.java,53,,"                ""  val text ,\n"" +"
41213,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/DeleteTest.java,54,,"                ""  PRIMARY KEY ( ( id ), cid )\n"" +"
41214,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/DurationTest.java,113,,"        assertEquals(toMillis(""2016-09-21T00:00:00""), Duration.from(""0m"").addTo(toMillis(""2016-09-21T00:00:00"")));"
41215,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/DurationTest.java,122,,"        assertEquals(toMillis(""2017-02-28T00:00:00""), Duration.from(""12mo"").addTo(toMillis(""2016-02-29T00:00:00"")));"
41216,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/GcCompactionTest.java,75,,"        runCompactionTest(""CREATE TABLE %s("" +"
41217,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/GcCompactionTest.java,76,,"                          ""  key int,"" +"
41218,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/GcCompactionTest.java,77,,"                          ""  column int,"" +"
41219,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/GcCompactionTest.java,78,,"                          ""  data int,"" +"
41220,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/GcCompactionTest.java,79,,"                          ""  extra text,"" +"
41221,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/GcCompactionTest.java,121,,"                execute(""INSERT INTO %s (key, column, data, extra) VALUES (?, ?, ?, ?)"", i, j, i+j, """" + i + "":"" + j);"
41222,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/KeyCacheCqlTest.java,73,,"                                     ""0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789"" +"
41223,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/KeyCacheCqlTest.java,246,,"        String table = createTable(""CREATE TABLE %s ("""
41224,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/KeyCacheCqlTest.java,259,,"            UntypedResultSet result = execute(""SELECT part_key_a FROM %s WHERE col_int = ?"", i);"
41225,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/KeyCacheCqlTest.java,431,,"            assertRows(execute(""SELECT col_text FROM %s WHERE part_key_a = ? AND part_key_b = ?"", i, Integer.toOctalString(i)),"
41226,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/PasswordObfuscatorTest.java,88,,"        assertEquals(format(""CREATE USER user1 with PASSWORD%s"", PasswordObfuscator.OBFUSCATION_TOKEN),"
41227,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/PasswordObfuscatorTest.java,143,,"        assertEquals(format(""BEGIN BATCH \n"" +"
41228,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/PreparedStatementsTest.java,70,,"        PreparedStatement prepared = session.prepare(""INSERT INTO "" + KEYSPACE + "".qp_cleanup (id, cid, val) VALUES (?, ?, ?)"");"
41229,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/PreparedStatementsTest.java,76,,"        session.execute(prepared.bind(1, 1, ""value""));"
41230,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/PreparedStatementsTest.java,114,,"        session.execute(""INSERT INTO "" + KEYSPACE + "".qp_cleanup (a, b, c) VALUES (?, ?, ?);"","
41231,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/PreparedStatementsTest.java,204,,"        session.execute(""USE "" + keyspace());"
41232,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/PreparedStatementsTest.java,308,,"                                              Arrays.asList(""[applied]""),"
41233,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/PstmtPersistenceTest.java,70,,"        stmtIds.add(prepareStatement(""SELECT * FROM %s WHERE key = ?"", ""foo"", ""bar"", clientState));"
41234,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/QueryEventsTest.java,58,,"        createTable(""create table %s (id int primary key, v int)"");"
41235,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/QueryEventsTest.java,63,,"        listener.verify(""querySuccess"", 1);"
41236,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/QueryEventsTest.java,99,,"        listener.verify(""prepareSuccess"", 1);"
41237,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/QueryEventsTest.java,104,,"        listener.verify(newArrayList(""prepareSuccess"", ""executeSuccess""), newArrayList(1, 1));"
41238,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,29,,"        execute(""INSERT INTO %s (k, t, v) values (?, ?, ?)"", ""key"", 1, ""v11"");"
41239,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,29,,"        execute(""INSERT INTO %s (k, t, v) values (?, ?, ?)"", ""key"", 1, ""v11"");"
41240,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,29,,"        execute(""INSERT INTO %s (k, t, v) values (?, ?, ?)"", ""key"", 1, ""v11"");"
41241,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,30,,"        execute(""INSERT INTO %s (k, t, v) values (?, ?, ?)"", ""key"", 2, ""v12"");"
41242,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,31,,"        execute(""INSERT INTO %s (k, t, v) values (?, ?, ?)"", ""key"", 3, ""v13"");"
41243,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,35,,"        execute(""INSERT INTO %s (k, t, v) values (?, ?, ?)"", ""key"", 4, ""v14"");"
41244,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,36,,"        execute(""INSERT INTO %s (k, t, v) values (?, ?, ?)"", ""key"", 5, ""v15"");"
41245,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,38,,"        assertRows(execute(""SELECT * FROM %s""),"
41246,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,82,,"        execute(""INSERT INTO %s (k, v1, v2) values (?, ?, ?)"", ""first"", 1, ""value1"");"
41247,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,108,,"        execute(""INSERT INTO %s (k, t, v1, v2) values (?, ?, ?, ?)"", ""key"", 1, ""v11"", ""v21"");"
41248,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,108,,"        execute(""INSERT INTO %s (k, t, v1, v2) values (?, ?, ?, ?)"", ""key"", 1, ""v11"", ""v21"");"
41249,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,109,,"        execute(""INSERT INTO %s (k, t, v1, v2) values (?, ?, ?, ?)"", ""key"", 2, ""v12"", ""v22"");"
41250,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,110,,"        execute(""INSERT INTO %s (k, t, v1, v2) values (?, ?, ?, ?)"", ""key"", 3, ""v13"", ""v23"");"
41251,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,114,,"        execute(""INSERT INTO %s (k, t, v1, v2) values (?, ?, ?, ?)"", ""key"", 4, ""v14"", ""v24"");"
41252,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,115,,"        execute(""INSERT INTO %s (k, t, v1, v2) values (?, ?, ?, ?)"", ""key"", 5, ""v15"", ""v25"");"
41253,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,222,,"        execute(""INSERT INTO %s (k, t1, t2, v) values (?, ?, ?, ?)"", ""key"", ""v1"", 1, ""v1"");"
41254,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,333,,"        execute(""INSERT INTO %s (k, t, v) values (?, ?, ?)"", ""key1"", 1, ""foo"");"
41255,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,333,,"        execute(""INSERT INTO %s (k, t, v) values (?, ?, ?)"", ""key1"", 1, ""foo"");"
41256,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,334,,"        execute(""INSERT INTO %s (k, t, v) values (?, ?, ?)"", ""key1"", 2, ""bar"");"
41257,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,335,,"        execute(""INSERT INTO %s (k, t, v) values (?, ?, ?)"", ""key2"", 1, ""foo"");"
41258,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,359,,"        execute(""INSERT INTO %s (k, t, v, s) values (?, ?, ?, ?)"", ""key1"", 1, ""foo1"", ""st1"");"
41259,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,360,,"        execute(""INSERT INTO %s (k, t, v, s) values (?, ?, ?, ?)"", ""key1"", 2, ""foo2"", ""st2"");"
41260,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,370,,"        execute(""INSERT INTO %s (k, t, v, s) values (?, ?, ?, ?)"", ""key1"", 5, ""foo5"", ""st5"");"
41261,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java,447,,"        execute(""INSERT INTO %s (k, v) VALUES (?, ?)"", 0, 0);"
41262,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/TraceCqlTest.java,70,,"            assertEquals(cql, trace.getParameters().get(""query""));"
41263,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexDeletionsTest.java,93,,"        execute(""USE "" + keyspace());"
41264,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexDeletionsTest.java,107,,"        assertRows(execute(""SELECT * from %s""), row(1, 1, null, 1));"
41265,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexDeletionsTest.java,108,,"        assertRows(execute(""SELECT * from mv""), row(1, 1));"
41266,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexDeletionsTest.java,260,,"        assertRowsIgnoringOrder(execute(""SELECT * FROM mv_test1""), row(1, 1, 1, 1));"
41267,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexDeletionsTest.java,326,,"        assertRowsIgnoringOrder(execute(""SELECT v1, p, v2, WRITETIME(v2) from mv""));"
41268,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexDeletionsTest.java,401,,"        assertRowsIgnoringOrder(execute(""SELECT v1, v2, WRITETIME(v2) from mv2 WHERE p1 = ? AND p2 = ?"", 1, 2),"
41269,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexLivenessTest.java,89,,"        execute(""USE "" + keyspace());"
41270,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexLivenessTest.java,103,,"        assertRowsIgnoringOrder(execute(""SELECT * from %s WHERE k = 1 AND c = 1;""),"
41271,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexLivenessTest.java,105,,"        assertRowsIgnoringOrder(execute(""SELECT k,c,b from mv WHERE k = 1 AND c = 1;""),"
41272,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexLivenessTest.java,160,,"        createView(""mv1"","
41273,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexLivenessTest.java,165,,"        createView(""mv2"","
41274,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexLivenessTest.java,224,,"        assertRowsIgnoringOrder(execute(""SELECT p, v1, v2 from mv""), row(1, 1, 1));"
41275,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexTTLTest.java,100,,"        execute(""USE "" + keyspace());"
41276,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexTTLTest.java,116,,"        assertRows(execute(""SELECT * from %s""), row(1, 1, null));"
41277,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexTTLTest.java,117,,"        assertRows(execute(""SELECT * from mv""), row(1, 1, null));"
41278,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexTTLTest.java,208,,"        assertRowsIgnoringOrder(execute(""SELECT * from mv WHERE c = ? AND p = ?"", 0, 0), row(0, 0));"
41279,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexTest.java,155,,"        execute(""USE "" + keyspace());"
41280,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexTest.java,171,,"        assertRowsIgnoringOrder(execute(""SELECT p1, p2, v1, v2 from %s""), row(1, 1, 1, null));"
41281,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexTest.java,172,,"        assertRowsIgnoringOrder(execute(""SELECT p1, p2, v1, v2 from mv""), row(1, 1, 1, null));"
41282,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexUpdatesTest.java,98,,"        execute(""USE "" + keyspace());"
41283,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexUpdatesTest.java,114,,"        assertRowsIgnoringOrder(execute(""SELECT * from %s WHERE c = ? AND p = ?"", 0, 0), row(0, 0, 1, null));"
41284,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexUpdatesTest.java,115,,"        assertRowsIgnoringOrder(execute(""SELECT * from mv WHERE c = ? AND p = ?"", 0, 0), row(0, 0));"
41285,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexUpdatesTest.java,216,,"        assertRows(execute(""SELECT * from mv""), row(1, 1, null, null));"
41286,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexUpdatesTest.java,283,,"        assertRowsIgnoringOrder(execute(""SELECT v1, p, v2, WRITETIME(v2) from mv""), row(1, 3, 3, 6L));"
41287,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexUpdatesTest.java,338,,"        assertRowsIgnoringOrder(execute(""SELECT k,a,b from mv""), row(1, 1, 1));"
41288,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringClustering1Test.java,100,,"            execute(""USE "" + keyspace());"
41289,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringClustering1Test.java,103,,"            execute(""INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)"", 0, 0, 0, 0);"
41290,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringClustering1Test.java,115,,"            createView(""mv_test"" + i, ""CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE a IS NOT NULL AND b = 1 AND c IS NOT NULL PRIMARY KEY "" + mvPrimaryKeys.get(i));"
41291,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringClustering1Test.java,120,,"            assertRowsIgnoringOrder(execute(""SELECT a, b, c, d FROM mv_test"" + i),"
41292,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringClustering1Test.java,148,,"            execute(""UPDATE %s SET d = ? WHERE a = ? AND b = ? AND c = ?"", 1, 2, 0, 0);"
41293,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringClustering1Test.java,169,,"            execute(""DELETE FROM %s WHERE a = ? AND b = ? AND c = ?"", 2, 0, 0);"
41294,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringClustering2Test.java,100,,"            execute(""USE "" + keyspace());"
41295,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringClustering2Test.java,103,,"            execute(""INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)"", 0, 0, 0, 0);"
41296,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringClustering2Test.java,116,,"            createView(""mv_test"" + i, ""CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE a IS NOT NULL AND (b, c) >= (1, 0) PRIMARY KEY "" + mvPrimaryKeys.get(i));"
41297,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringClustering2Test.java,121,,"            assertRowsIgnoringOrder(execute(""SELECT a, b, c, d FROM mv_test"" + i),"
41298,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringClustering2Test.java,150,,"            execute(""UPDATE %s SET d = ? WHERE a = ? AND b = ? AND c = ?"", 1, 1, -1, 0);"
41299,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringClustering2Test.java,172,,"            execute(""DELETE FROM %s WHERE a = ? AND b = ? AND c = ?"", 1, 1, -1);"
41300,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringPKTest.java,95,,"        List<String> mvPrimaryKeys = Arrays.asList(""((a, b), c)"", ""((b, a), c)"", ""(a, b, c)"", ""(c, b, a)"", ""((c, a), b)"");"
41301,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringPKTest.java,95,,"        List<String> mvPrimaryKeys = Arrays.asList(""((a, b), c)"", ""((b, a), c)"", ""(a, b, c)"", ""(c, b, a)"", ""((c, a), b)"");"
41302,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringPKTest.java,95,,"        List<String> mvPrimaryKeys = Arrays.asList(""((a, b), c)"", ""((b, a), c)"", ""(a, b, c)"", ""(c, b, a)"", ""((c, a), b)"");"
41303,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringPKTest.java,95,,"        List<String> mvPrimaryKeys = Arrays.asList(""((a, b), c)"", ""((b, a), c)"", ""(a, b, c)"", ""(c, b, a)"", ""((c, a), b)"");"
41304,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringPKTest.java,95,,"        List<String> mvPrimaryKeys = Arrays.asList(""((a, b), c)"", ""((b, a), c)"", ""(a, b, c)"", ""(c, b, a)"", ""((c, a), b)"");"
41305,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringPKTest.java,98,,"            createTable(""CREATE TABLE %s (a int, b int, c int, d int, PRIMARY KEY ((a, b), c))"");"
41306,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringPKTest.java,100,,"            execute(""USE "" + keyspace());"
41307,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringPKTest.java,103,,"            execute(""INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)"", 0, 0, 0, 0);"
41308,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringPKTest.java,110,,"            logger.info(""Testing MV primary key: {}"", mvPrimaryKeys.get(i));"
41309,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringPKTest.java,113,,"            String viewName= ""mv_test"" + i;"
41310,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringPKTest.java,118,,"            assertRowsIgnoringOrder(execute(""SELECT a, b, c, d FROM mv_test"" + i),"
41311,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringPKTest.java,146,,"            execute(""UPDATE %s SET d = ? WHERE a = ? AND b = ? AND c = ?"", 1, 0, 0, 0);"
41312,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringPKTest.java,167,,"            execute(""DELETE FROM %s WHERE a = ? AND b = ? AND c = ?"", 0, 0, 0);"
41313,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringPKTest.java,169,,"            execute(""DELETE FROM %s WHERE a = ? AND b = ?"", 0, 0);"
41314,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringPKTest.java,193,,"            assertEmpty(execute(""SELECT * FROM mv_test"" + i));"
41315,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,173,,"        execute(""USE "" + keyspace());"
41316,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,176,,"        createView(""mv_test1"","
41317,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,178,,"        createView(""mv_test2"","
41318,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,180,,"        createView(""mv_test3"","
41319,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,182,,"        createView(""mv_test4"","
41320,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,184,,"        createView(""mv_test5"","
41321,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,186,,"        createView(""mv_test6"","
41322,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,209,,"        assertRowsIgnoringOrder(execute(""SELECT * FROM mv_test1""), row(1, 1, 1, 1));"
41323,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,210,,"        assertRowsIgnoringOrder(execute(""SELECT * FROM mv_test2""), row(1, 1, 1, 1));"
41324,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,211,,"        assertRowsIgnoringOrder(execute(""SELECT * FROM mv_test3""), row(1, 1, 1, 1));"
41325,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,212,,"        assertRowsIgnoringOrder(execute(""SELECT * FROM mv_test4""), row(1, 1, 1));"
41326,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,213,,"        assertRowsIgnoringOrder(execute(""SELECT * FROM mv_test5""), row(1, 1, 1));"
41327,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,214,,"        assertRowsIgnoringOrder(execute(""SELECT * FROM mv_test6""), row(1, 1, 1));"
41328,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,535,,"        execute(""INSERT INTO %s (\""theKey\"", \""theClustering\"", \""the\""\""Value\"") VALUES (?, ?, ?)"", 0, 0, 0);"
41329,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,540,,"        createView(""mv_test"", ""CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s "" +"
41330,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,577,,"        execute(""INSERT INTO %s (a, b, c) VALUES (?, ?, ?)"", 0, 0, 0);"
41331,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,774,,"        execute(""INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)"", 0, 0, 0, 0);"
41332,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,789,,"        assertRowsIgnoringOrder(execute(""SELECT a, b, c, d FROM mv_test""),"
41333,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,892,,"        assertRows(execute(""SELECT d from mv WHERE c = ? and a = ? and b = ?"", 1, 0, 0), row(0));"
41334,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,1023,,"            updateView(""INSERT into %s (k,c,val)VALUES(?,?,?)"", 0, i % 2, ""baz"");"
41335,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,1031,,"        assertRows(execute(""SELECT c from mv_tstest where k = 0 and val = ?"", ""baz""), row(0), row(1));"
41336,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java,1034,,"        updateView(""UPDATE %s USING TIMESTAMP 100 SET val = ? where k = ? AND c = ?"", ""bar"", 0, 1);"
41337,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,47,,"        execute(""USE "" + keyspace());"
41338,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,55,,"        Assert.assertEquals(2, execute(""select * from %s"").size());"
41339,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,56,,"        Assert.assertEquals(2, execute(""select * from view1"").size());"
41340,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,101,,"        createTable(""CREATE TABLE %s ("" +"
41341,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,113,,"            createView(""mv_test"", ""CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s"");"
41342,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,175,,"                String query = ""CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE "" + def.name + "" IS NOT NULL AND k IS NOT NULL """
41343,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,175,,"                String query = ""CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE "" + def.name + "" IS NOT NULL AND k IS NOT NULL """
41344,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,176,,"                               + (def.name.toString().equals(""asciival"") ? """" : ""AND asciival IS NOT NULL "") + ""PRIMARY KEY ("""
41345,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,176,,"                               + (def.name.toString().equals(""asciival"") ? """" : ""AND asciival IS NOT NULL "") + ""PRIMARY KEY ("""
41346,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,246,,"        updateView(""INSERT INTO %s (k, asciival, bigintval) VALUES (?, ?, fromJson(?))"", 0, ""ascii text"", ""123123123123"");"
41347,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,254,,"        assertRows(execute(""SELECT asciival from mv3_bigintval where bigintval = ? AND k = ?"", 123123123123L, 0), row(""ascii text""));"
41348,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,282,,"                    ""a int,"" +"
41349,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,283,,"                    ""b int,"" +"
41350,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,284,,"                    ""c int,"" +"
41351,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,285,,"                    ""d int,"" +"
41352,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,291,,"        createView(""mv1"", ""CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE a IS NOT NULL AND b IS NOT NULL AND c IS NOT NULL PRIMARY KEY (a, b, c) WITH CLUSTERING ORDER BY (b DESC, c ASC)"");"
41353,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,296,,"        updateView(""INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)"", 1, 1, 1, 1);"
41354,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,364,,"        ResultSet mvRows = executeNet(""SELECT a, d, b, c FROM mv1"");"
41355,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java,448,,"        execute(""INSERT INTO %s (id1, id2, v1, v2) VALUES (?, ?, ?, ?)"", 0, 1, ""foo"", ""bar"");"
41356,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewRangesTest.java,52,,"        execute(""USE "" + keyspace());"
41357,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewRangesTest.java,65,,"                ""INSERT INTO "" + table + "" (k1, c1, c2, v1, v2) VALUES (1, 0, 0, 0, 0) USING TIMESTAMP 5; "" +"
41358,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewRangesTest.java,74,,"        assertRowsIgnoringOrder(execute(""select * from %s""),"
41359,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewRangesTest.java,102,,"            updateView(""INSERT into %s (k,asciival,bigintval,textval1,textval2)VALUES(?,?,?,?,?)"", 0, ""foo"", (long) i % 2, ""bar"" + i, ""baz"");"
41360,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewRangesTest.java,156,,"        Assert.assertEquals(2, execute(""select * from mv"").size());"
41361,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,109,,"        execute(""USE "" + keyspace());"
41362,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,114,,"        createView(""mv_test"", ""CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s "" +"
41363,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,120,,"        createView(""mv_test2"", ""CREATE MATERIALIZED VIEW %s AS SELECT \""theKey\"", \""theClustering\"", \""theValue\"" FROM %%s "" +"
41364,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,146,,"        createTable(""CREATE TABLE %s ("" +"
41365,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,156,,"        updateView(""INSERT INTO %s(k,asciival,bigintval)VALUES(?,?,?)"", 0, ""foo"", 1L);"
41366,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,192,,"        updateView(""INSERT INTO %s(k,asciival,bigintval,foo)VALUES(?,?,?,?)"", 0, ""foo"", 1L, ""bar"");"
41367,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,212,,"                ""intval int, "" +"
41368,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,225,,"        assertRows(execute(""SELECT k, intval from mv WHERE intval = ?"", 0), row(0, 0));"
41369,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,331,,"        assertRows(execute(""SELECT k, asciival FROM %s WHERE k = ?"", 0), row(0, ""ascii text""));"
41370,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,334,,"        assertRows(execute(""SELECT k, asciival FROM %s WHERE k = ?"", 0), row(0, ""ascii \"" text""));"
41371,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,340,,"        assertRows(execute(""SELECT k, udtval from mv_asciival WHERE asciival = ?"", ""ascii text""));"
41372,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,354,,"        updateView(""INSERT INTO %s (k, bigintval) VALUES (?, fromJson(?))"", 0, ""123123123123"");"
41373,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,379,,"        updateView(""INSERT INTO %s (k, decimalval) VALUES (?, fromJson(?))"", 0, ""123123.123123"");"
41374,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,379,,"        updateView(""INSERT INTO %s (k, decimalval) VALUES (?, fromJson(?))"", 0, ""123123.123123"");"
41375,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,380,,"        assertRows(execute(""SELECT k, decimalval FROM %s WHERE k = ?"", 0), row(0, new BigDecimal(""123123.123123"")));"
41376,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,381,,"        assertRows(execute(""SELECT k, asciival from mv_decimalval WHERE decimalval = fromJson(?)"", ""123123.123123""), row(0, ""ascii text""));"
41377,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,383,,"        updateView(""INSERT INTO %s (k, decimalval) VALUES (?, fromJson(?))"", 0, ""123123"");"
41378,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,437,,"        updateView(""INSERT INTO %s (k, textval) VALUES (?, fromJson(?))"", 0, ""\""abcd\"""");"
41379,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,438,,"        assertRows(execute(""SELECT k, textval FROM %s WHERE k = ?"", 0), row(0, ""abcd""));"
41380,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,457,,"        assertRows(execute(""SELECT k, timeuuidval FROM %s WHERE k = ?"", 0), row(0, UUID.fromString(""6bddc89a-5644-11e4-97fc-56847afe9799"")));"
41381,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,459,,"        updateView(""INSERT INTO %s (k, timeuuidval) VALUES (?, fromJson(?))"", 0, ""\""6BDDC89A-5644-11E4-97FC-56847AFE9799\"""");"
41382,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,482,,"        updateView(""INSERT INTO %s (k, listval) VALUES (?, fromJson(?))"", 0, ""[1, 2, 3]"");"
41383,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,483,,"        assertRows(execute(""SELECT k, listval FROM %s WHERE k = ?"", 0), row(0, list(1, 2, 3)));"
41384,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,484,,"        assertRows(execute(""SELECT k, listval from mv_textval WHERE textval = fromJson(?)"", ""\""abcd\""""), row(0, list(1, 2, 3)));"
41385,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,529,,"        assertRows(execute(""SELECT k, setval FROM %s WHERE k = ?"", 0),"
41386,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,530,,"                   row(0, set(UUID.fromString(""6bddc89a-5644-11e4-97fc-56847afe9798""), (UUID.fromString(""6bddc89a-5644-11e4-97fc-56847afe9799""))))"
41387,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,532,,"        assertRows(execute(""SELECT k, setval from mv_textval WHERE textval = fromJson(?)"", ""\""abcd\""""),"
41388,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,583,,"        assertRows(execute(""SELECT k, mapval FROM %s WHERE k = ?"", 0), row(0, map(""a"", 1, ""b"", 2)));"
41389,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,584,,"        assertRows(execute(""SELECT k, mapval from mv_textval WHERE textval = fromJson(?)"", ""\""abcd\""""), row(0, map(""a"", 1, ""b"", 2)));"
41390,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,638,,"        updateView(""INSERT INTO %s (k, udtval) VALUES (?, fromJson(?))"", 0, ""{\""a\"": 1, \""b\"": \""6bddc89a-5644-11e4-97fc-56847afe9799\"", \""c\"": [\""foo\"", \""bar\""]}"");"
41391,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,638,,"        updateView(""INSERT INTO %s (k, udtval) VALUES (?, fromJson(?))"", 0, ""{\""a\"": 1, \""b\"": \""6bddc89a-5644-11e4-97fc-56847afe9799\"", \""c\"": [\""foo\"", \""bar\""]}"");"
41392,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,639,,"        assertRows(execute(""SELECT k, udtval.a, udtval.b, udtval.c FROM %s WHERE k = ?"", 0),"
41393,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java,642,,"        assertRows(execute(""SELECT k, textval FROM mv_udtval WHERE udtval = fromJson(?)"", ""{\""a\"": 1, \""b\"": \""6bddc89a-5644-11e4-97fc-56847afe9799\"", \""c\"": [\""foo\"", \""bar\""]}""),"
41394,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewTest.java,80,,"        createTable(""CREATE TABLE %s ("" +"
41395,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewTest.java,81,,"                    ""k int, "" +"
41396,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewTest.java,82,,"                    ""c int, "" +"
41397,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewTest.java,87,,"        execute(""USE "" + keyspace());"
41398,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewTest.java,92,,"            createView(""mv_static"", ""CREATE MATERIALIZED VIEW %%s AS SELECT * FROM %s WHERE sval IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (sval,k,c)"");"
41399,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewTest.java,120,,"            updateView(""INSERT into %s (k,c,sval,val)VALUES(?,?,?,?)"", 0, i % 2, ""bar"" + i, ""baz"");"
41400,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewTest.java,120,,"            updateView(""INSERT into %s (k,c,sval,val)VALUES(?,?,?,?)"", 0, i % 2, ""bar"" + i, ""baz"");"
41401,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewTest.java,147,,"            updateView(""INSERT into %s (k,c,val)VALUES(?,?,?)"", 0, i % 2, ""baz"");"
41402,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewTest.java,155,,"        assertRows(execute(""SELECT c from mv_tstest where k = 0 and val = ?"", ""baz""), row(0), row(1));"
41403,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewTest.java,252,,"        assertRows(execute(""SELECT k, listval FROM %s WHERE k = ?"", 0), row(0, list(1, 2, 3)));"
41404,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewTest.java,334,,"        assertRows(execute(""SELECT a, b, c from mv WHERE b = ?"", 0), row(0, 0, 0));"
41405,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewTest.java,389,,"        updateView(""INSERT INTO %s (a, b) VALUES (?, ?)"", 1, 1);"
41406,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewTest.java,447,,"        assertRowsNet(executeNet(""SELECT * FROM mv""), row(1, 0));"
41407,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewTimesTest.java,46,,"        createTable(""CREATE TABLE %s ("" +"
41408,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewTimesTest.java,51,,"        execute(""USE "" + keyspace());"
41409,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/ViewTimesTest.java,98,,"        assertRows(execute(""SELECT d from mv WHERE c = ? and a = ? and b = ?"", 1, 0, 0), row(0));"
41410,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/functions/CastFctsTest.java,183,,"                       ""6.3"","
41411,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/functions/OperationFctsTest.java,217,,"                   row((byte) 0, (short) 0, 0, 0L, 0.5F, 0.5, BigInteger.valueOf(0), new BigDecimal(""0.5"")));"
41412,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/functions/OperationFctsTest.java,252,,"                       new BigDecimal(""0.0"")));"
41413,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/functions/OperationFctsTest.java,286,,"                   row(2, (byte) 2, (short) 2, ""test""));"
41414,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/functions/OperationFctsTest.java,349,,"                               + "" h + "" + bigInt + "" FROM %s WHERE a = 1 AND b = 2""),"
41415,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/functions/OperationFctsTest.java,714,,"        execute(""INSERT INTO %S (a, b, c) VALUES (?, ?, ?)"", 1, Double.POSITIVE_INFINITY, BigDecimal.valueOf(1));"
41416,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/functions/OperationFctsTest.java,823,,"        assertRows(execute(""SELECT * FROM %s WHERE pk = 1 AND time > ? - 5d"", toDate(""2016-10-04"")),"
41417,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/SelectionColumnMappingTest.java,79,,"                                      ""LANGUAGE java "" +"
41418,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/SelectionColumnMappingTest.java,252,,"        String fnName = createFunction(KEYSPACE, ""int"","
41419,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,38,,"                   row(1, ""one"", constant),"
41420,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,39,,"                   row(2, ""two"", constant),"
41421,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,40,,"                   row(3, ""three"", constant));"
41422,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,52,,"        assertInvalidMessage(""Cannot infer type for term"", ""SELECT ck, t, 'a const' FROM %s"");"
41423,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,59,,"        assertConstantResult(execute(""SELECT ck, t, (tuple<int, text>)(1, 'foo') FROM %s""), tuple(1, ""foo""));"
41424,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,73,,"        assertConstantResult(execute(""SELECT ck, t, (map<int, text>){1: 'foo', 2: 'bar', 3: 'baz'} FROM %s""), map(1, ""foo"", 2, ""bar"", 3, ""baz""));"
41425,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,92,,"        assertRows(execute(""SELECT (map<text, int>){'min' : min(ck), 'max' : max(ck)} FROM %s""), row(map(""min"", 1, ""max"", 3)));"
41426,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,92,,"        assertRows(execute(""SELECT (map<text, int>){'min' : min(ck), 'max' : max(ck)} FROM %s""), row(map(""min"", 1, ""max"", 3)));"
41427,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,334,,"        assertRows(execute(""SELECT ("" + containerType + ""){l : [min(ck), max(ck)]} FROM %s""),"
41428,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,424,,"        assertRows(execute(""SELECT k, v, ("" + type + ""){ a: 4, b: 'bar'} FROM %s""),"
41429,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,511,,"        assertRows(execute(query, 88, BigDecimal.TEN, ""foo bar baz"", tuple(42, ""ursus""), 1),"
41430,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,511,,"        assertRows(execute(query, 88, BigDecimal.TEN, ""foo bar baz"", tuple(42, ""ursus""), 1),"
41431,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,524,,"                                     ""int,int"","
41432,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,525,,"                                     ""CREATE FUNCTION %s (val1 int, val2 int) "" +"
41433,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,526,,"                                     ""CALLED ON NULL INPUT "" +"
41434,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,527,,"                                     ""RETURNS int "" +"
41435,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,528,,"                                     ""LANGUAGE java\n"" +"
41436,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,529,,"                                     ""AS 'return Math.max(val1, val2);';"");"
41437,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,563,,"        assertRows(execute(""SELECT pk, "" + fInt + ""(valInt, 100) FROM %s""),"
41438,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,617,,"        assertRows(execute(""SELECT pk, ck, "" + fIntMax + ""(i, ?) FROM %s"", 0),"
41439,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,647,,"        assertRows(execute(""SELECT pk, ck, "" + fIntMax + ""(i, ?) FROM %s WHERE pk = "" + fIntMax + ""(1,1)"", 0),"
41440,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java,661,,"        assertRows(execute(""SELECT pk, ck, "" + fIntMax + ""(i, (int)?) FROM %s WHERE pk = "" + fIntMax + ""((int)1,(int)1)"", 0),"
41441,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,84,,"                                               ""LANGUAGE java "" +"
41442,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,102,,"        for (String describeKeyword : new String[]{""DESCRIBE"", ""DESC""})"
41443,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,102,,"        for (String describeKeyword : new String[]{""DESCRIBE"", ""DESC""})"
41444,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,106,,"                              ""function"","
41445,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,108,,"                              ""CREATE FUNCTION "" + fNonOverloaded + ""()\n"" +"
41446,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,111,,"                                      ""    LANGUAGE java\n"" +"
41447,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,179,,"                              ""aggregate"","
41448,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,180,,"                              shortFunctionName(aNonDeterministic) + ""(int)"","
41449,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,229,,"                      row(""system_virtual_schema"","
41450,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,230,,"                          ""keyspace"","
41451,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,240,,"                          ""table"","
41452,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,281,,"                              ""CREATE KEYSPACE "" + KEYSPACE +"
41453,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,282,,"                                  "" WITH replication = {'class': 'SimpleStrategy', 'replication_factor': '1'}"" +"
41454,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,283,,"                                  ""  AND durable_writes = true;""),"
41455,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,288,,"                          row(""test"", ""keyspace"", ""test"", keyspaceOutput()),"
41456,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,289,,"                          row(""test"", ""table"", ""has_all_types"", allTypesTable()),"
41457,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,290,,"                          row(""test"", ""table"", ""\""Test\"""", testTableOutput()),"
41458,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,291,,"                          row(""test"", ""index"", ""\""Test_col_idx\"""", indexOutput(""\""Test_col_idx\"""", ""\""Test\"""", ""col"")),"
41459,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,291,,"                          row(""test"", ""index"", ""\""Test_col_idx\"""", indexOutput(""\""Test_col_idx\"""", ""\""Test\"""", ""col"")),"
41460,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,291,,"                          row(""test"", ""index"", ""\""Test_col_idx\"""", indexOutput(""\""Test_col_idx\"""", ""\""Test\"""", ""col"")),"
41461,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,292,,"                          row(""test"", ""index"", ""\""Test_val_idx\"""", indexOutput(""\""Test_val_idx\"""", ""\""Test\"""", ""val"")),"
41462,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,292,,"                          row(""test"", ""index"", ""\""Test_val_idx\"""", indexOutput(""\""Test_val_idx\"""", ""\""Test\"""", ""val"")),"
41463,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,293,,"                          row(""test"", ""table"", ""users"", userTableOutput()),"
41464,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,294,,"                          row(""test"", ""index"", ""myindex"", indexOutput(""myindex"", ""users"", ""age"")),"
41465,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,294,,"                          row(""test"", ""index"", ""myindex"", indexOutput(""myindex"", ""users"", ""age"")),"
41466,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,296,,"                          row(""test"", ""materialized_view"", ""users_by_state"", usersByStateMvOutput()));"
41467,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,470,,"        String tableCreateStatement = ""CREATE TABLE "" + KEYSPACE + ""."" + table + "" (\n"" +"
41468,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,470,,"        String tableCreateStatement = ""CREATE TABLE "" + KEYSPACE + ""."" + table + "" (\n"" +"
41469,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,481,,"                                      ""    AND "" + tableParametersCql();"
41470,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,483,,"        assertRowsNet(executeDescribeNet(""DESCRIBE TABLE "" + KEYSPACE + ""."" + table + "" WITH INTERNALS""),"
41471,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,483,,"        assertRowsNet(executeDescribeNet(""DESCRIBE TABLE "" + KEYSPACE + ""."" + table + "" WITH INTERNALS""),"
41472,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,549,,"                                                          "") WITH "" + tableParametersCql();"
41473,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,563,,"                      ""No keyspace specified and no current keyspace"");"
41474,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,582,,"        describeError(format(""DESCRIBE FUNCTION %s.%s"", KEYSPACE, ""func_foo""),"
41475,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,603,,"                          row(KEYSPACE, ""type"", type1),"
41476,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java,608,,"                          row(KEYSPACE, ""type"", type2, ""CREATE TYPE "" + KEYSPACE + ""."" + type2 + "" (\n"" +"
41477,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,45,,"        assertRows(execute(""SELECT * FROM %s""),"
41478,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,74,,"        assertInvalid(""UPDATE %s SET l = l + ? WHERE k = 0"", map(""a"", ""b"", ""c"", ""d""));"
41479,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,82,,"        assertInvalid(""UPDATE %s SET m = m + ? WHERE k = 0"", list(""a"", ""b""));"
41480,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,95,,"        assertRows(execute(""SELECT s FROM %s WHERE k = 0""),"
41481,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,99,,"        execute(""DELETE s[?] FROM %s WHERE k = 0"", ""v1"");"
41482,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,166,,"        assertRows(execute(""SELECT m FROM %s WHERE k = 0""),"
41483,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,176,,"        execute(""DELETE m[?] FROM %s WHERE k = 0"", ""v1"");"
41484,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,260,,"        assertRows(execute(""SELECT l FROM %s WHERE k = 0""), row(list(""v1"", ""v2"", ""v3"")));"
41485,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,346,,"        Object l = list(""foo"", ""foo"");"
41486,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,348,,"        assertRows(execute(""SELECT l FROM %s WHERE k = 10""),"
41487,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,389,,"        Object s = set(""bar"", ""baz"", ""foo"");"
41488,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,391,,"        assertRows(execute(""SELECT s FROM %s WHERE k = 10""),"
41489,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,429,,"                   row(set(""foo"", ""foobar"")));"
41490,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,432,,"        assertRows(execute(""SELECT tags FROM %s WHERE fn='Bilbo' AND ln='Baggins'""),"
41491,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,727,,"            execute(""UPDATE %s SET properties[?] = ? WHERE userid = 'user'"", i, ""prop_"" + Integer.toString(i));"
41492,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,769,,"        assertRows(execute(""select s_list from %s where k1='a'""), row(list(0)));"
41493,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,962,,"                             ""INSERT INTO %s (pk, l) VALUES (?, ?)"", 1, ""test"");"
41494,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,976,,"                             ""INSERT INTO %s (pk, s) VALUES (?, ?)"", 1, ""test"");"
41495,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,990,,"                             ""INSERT INTO %s (pk, m) VALUES (?, ?)"", 1, ""test"");"
41496,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1007,,"        assertRows(execute(""SELECT * FROM %s WHERE pk = ?"", 1) , row(1, list(1, 2, 8, 4)));"
41497,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1053,,"        assertRows(execute(""SELECT * FROM %s WHERE pk = 1"") , row(1, map(0, 1, 1, 2, 2, 8, 3, 4)));"
41498,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1110,,"                map(""22"", ""value22"", ""333"", ""value333""),"
41499,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1110,,"                map(""22"", ""value22"", ""333"", ""value333""),"
41500,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1110,,"                map(""22"", ""value22"", ""333"", ""value333""),"
41501,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1111,,"                map(""1"", ""fvalue1"", ""22"", ""fvalue22"", ""333"", ""fvalue333""),"
41502,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1113,,"                map(""1"", ""fsvalue1"", ""22"", ""fsvalue22"", ""333"", ""fsvalue333""));"
41503,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1124,,"                map(""1"", ""value1""));"
41504,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1127,,"                map(""1"", ""svalue1""));"
41505,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1142,,"                map(""1"", ""value1_2"", ""333"", ""value333_2""),"
41506,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1142,,"                map(""1"", ""value1_2"", ""333"", ""value333_2""),"
41507,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1143,,"                map(""1"", ""fvalue1_2"", ""333"", ""fvalue333_2""));"
41508,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1241,,"                                  ""CALLED ON NULL INPUT "" +"
41509,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1242,,"                                  ""RETURNS TEXT "" +"
41510,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1245,,"        assertRows(execute(""SELECT k, c, l, m["" + f +""('1').."" + f +""('22')], o FROM %s WHERE k = 0""),"
41511,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1289,,"        assertColumnNames(execute(""SELECT max("" + f + ""(k, c)) as sel1, max("" + f + ""(k, c)) FROM %s WHERE k = 0""),"
41512,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1289,,"        assertColumnNames(execute(""SELECT max("" + f + ""(k, c)) as sel1, max("" + f + ""(k, c)) FROM %s WHERE k = 0""),"
41513,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1289,,"        assertColumnNames(execute(""SELECT max("" + f + ""(k, c)) as sel1, max("" + f + ""(k, c)) FROM %s WHERE k = 0""),"
41514,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1290,,"                          ""sel1"", ""system.max("" + f + ""(k, c))"");"
41515,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1290,,"                          ""sel1"", ""system.max("" + f + ""(k, c))"");"
41516,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1290,,"                          ""sel1"", ""system.max("" + f + ""(k, c))"");"
41517,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1294,,"        assertColumnNames(execute(""SELECT max("" + f + ""(k, c)) as sel1, max("" + f + ""(k, c)) FROM %s""),"
41518,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1574,,"                set(""fs1"", ""fs22"", ""fs333""));"
41519,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1578,,"        execute(""UPDATE %s SET s = s + ? WHERE k = 0 AND c = 0"", set(""22_2""));"
41520,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1685,,"                map(""1"", ""one"", ""2"", ""two""),"
41521,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1685,,"                map(""1"", ""one"", ""2"", ""two""),"
41522,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1774,,"            execute(""INSERT INTO %s(k, v) VALUES (0, ?)"", map(""abc"", userType(""s"", set(2, 4, 6), ""m"", map(""a"", ""v1"", ""d"", ""v2""))));"
41523,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java,1887,,"        assertInvalidMessage(""Invalid remaining data after end of tuple value"","
41524,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CountersTest.java,78,,"        assertRows(execute(""SELECT c FROM %s WHERE k = 10""),"
41525,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CountersTest.java,188,,"        execute(""BEGIN UNLOGGED BATCH "" +"
41526,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CountersTest.java,192,,"                ""APPLY BATCH; "");"
41527,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CountersTest.java,204,,"                row(""http://bar.com"", 1L),"
41528,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,86,,"        execute(""INSERT INTO %s (k, v) VALUES (?, ?)"", v1, 1);"
41529,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,92,,"        execute(""UPDATE %s SET v=? WHERE k=?"", 0, v1);"
41530,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,95,,"        assertRows(execute(""SELECT * FROM %s""),"
41531,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,114,,"        assertRows(execute(""SELECT * FROM %s WHERE k=?"", v3),"
41532,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,134,,"        execute(""DELETE FROM %s WHERE k=?"", v1);"
41533,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,246,,"        execute(""INSERT INTO %s (a, b, c) VALUES (?, ?, ?)"", 0, v1, 1);"
41534,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,252,,"        execute(""UPDATE %s SET c=? WHERE a=? AND b=?"", 0, 0, v1);"
41535,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,262,,"        assertRows(execute(""SELECT b FROM %s""),"
41536,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,274,,"        assertRows(execute(""SELECT * FROM %s WHERE a=? AND b=?"", 0, v3),"
41537,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,287,,"        assertRows(execute(""SELECT * FROM %s WHERE a=? AND b > ?"", 0, v3),"
41538,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,291,,"        assertRows(execute(""SELECT * FROM %s WHERE a=? AND b >= ?"", 0, v3),"
41539,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,296,,"        assertRows(execute(""SELECT * FROM %s WHERE a=? AND b < ?"", 0, v3),"
41540,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,301,,"        assertRows(execute(""SELECT * FROM %s WHERE a=? AND b <= ?"", 0, v3),"
41541,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,307,,"        assertRows(execute(""SELECT * FROM %s WHERE a=? AND b > ? AND b <= ?"", 0, v2, v3),"
41542,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,311,,"        execute(""DELETE FROM %s WHERE a=? AND b=?"", 0, v1);"
41543,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,432,,"        execute(""INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)"", 0, map(), set(), 0);"
41544,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,487,,"        assertRows(execute(""SELECT * FROM %s WHERE a=? AND b=? AND c=?"", 0, map(set(), list(1, 2, 3)), set()),"
41545,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,523,,"        execute(""DELETE FROM %s WHERE a=? AND b=? AND c=?"", 0, map(), set());"
41546,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,688,,"        assertRows(execute(""SELECT * FROM %s WHERE a=?"", 3),"
41547,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,883,,"        assertInvalidMessage(""ALLOW FILTERING"", ""SELECT * FROM %s WHERE b=? AND c=?"", list(1, 2, 3), set(4, 5, 6));"
41548,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,951,,"        assertRows(execute(""SELECT * FROM %s WHERE d=?"", map(1, ""a"")),"
41549,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,1049,,"        assertRows(execute(""SELECT * FROM %s WHERE k = 1""),"
41550,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,1394,,"        assertRows(execute(""SELECT l FROM %s WHERE k = 0""), row(list(largeText, ""v2"")));"
41551,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,1428,,"        assertRows(execute(""SELECT m FROM %s WHERE k = 0""),"
41552,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java,1461,,"        assertRows(execute(""SELECT s FROM %s WHERE k = 0""), row(set(largeText, ""v1"", ""v2"")));"
41553,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,64,,"        final UUID uuid = UUID.fromString(""2dd2cd62-6af3-4cf6-96fc-91b9ab62eedc"");"
41554,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,71,,"            execute(""INSERT INTO %s (k1, c1, value) VALUES (?, ?, ?)"", partitionKey, tuple(uuid, i), i);"
41555,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,76,,"            assertRowsNet(executeNetWithPaging(""SELECT JSON * FROM %s"", pageSize),"
41556,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,77,,"                           row(""{\""k1\"": [\"""" + uuid + ""\"", 2], \""c1\"": [\"""" + uuid + ""\"", 1], \""value\"": 1}""),"
41557,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,77,,"                           row(""{\""k1\"": [\"""" + uuid + ""\"", 2], \""c1\"": [\"""" + uuid + ""\"", 1], \""value\"": 1}""),"
41558,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,77,,"                           row(""{\""k1\"": [\"""" + uuid + ""\"", 2], \""c1\"": [\"""" + uuid + ""\"", 1], \""value\"": 1}""),"
41559,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,78,,"                           row(""{\""k1\"": [\"""" + uuid + ""\"", 2], \""c1\"": [\"""" + uuid + ""\"", 2], \""value\"": 2}""),"
41560,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,79,,"                           row(""{\""k1\"": [\"""" + uuid + ""\"", 2], \""c1\"": [\"""" + uuid + ""\"", 3], \""value\"": 3}""),"
41561,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,80,,"                           row(""{\""k1\"": [\"""" + uuid + ""\"", 2], \""c1\"": [\"""" + uuid + ""\"", 4], \""value\"": 4}""));"
41562,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,83,,"            assertRowsNet(executeNetWithPaging(""SELECT toJson(k1), toJson(c1), toJson(value) FROM %s"", pageSize),"
41563,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,84,,"                          row(""[\"""" + uuid + ""\"", 2]"", ""[\"""" + uuid + ""\"", 1]"", ""1""),"
41564,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,84,,"                          row(""[\"""" + uuid + ""\"", 2]"", ""[\"""" + uuid + ""\"", 1]"", ""1""),"
41565,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,84,,"                          row(""[\"""" + uuid + ""\"", 2]"", ""[\"""" + uuid + ""\"", 1]"", ""1""),"
41566,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,86,,"                          row(""[\"""" + uuid + ""\"", 2]"", ""[\"""" + uuid + ""\"", 3]"", ""3""),"
41567,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,87,,"                          row(""[\"""" + uuid + ""\"", 2]"", ""[\"""" + uuid + ""\"", 4]"", ""4""));"
41568,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,107,,"                          row(""{\""k1\"": {\""1\"": [\"""" + uuid + ""\"", 1], \""2\"": [\"""" + uuid + ""\"", 2]}, \""c1\"": [\"""" + uuid + ""\"", 1], \""value\"": 1}""),"
41569,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,107,,"                          row(""{\""k1\"": {\""1\"": [\"""" + uuid + ""\"", 1], \""2\"": [\"""" + uuid + ""\"", 2]}, \""c1\"": [\"""" + uuid + ""\"", 1], \""value\"": 1}""),"
41570,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,107,,"                          row(""{\""k1\"": {\""1\"": [\"""" + uuid + ""\"", 1], \""2\"": [\"""" + uuid + ""\"", 2]}, \""c1\"": [\"""" + uuid + ""\"", 1], \""value\"": 1}""),"
41571,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,114,,"                          row(""{\""1\"": [\"""" + uuid + ""\"", 1], \""2\"": [\"""" + uuid + ""\"", 2]}"", ""[\"""" + uuid + ""\"", 1]"", ""1""),"
41572,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,114,,"                          row(""{\""1\"": [\"""" + uuid + ""\"", 1], \""2\"": [\"""" + uuid + ""\"", 2]}"", ""[\"""" + uuid + ""\"", 1]"", ""1""),"
41573,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,137,,"                          row(""{\""k1\"": [[[1, 2], 1], [[2, 3], 2]], \""c1\"": [\"""" + uuid + ""\"", 1], \""value\"": 1}""),"
41574,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,144,,"                          row(""[[[1, 2], 1], [[2, 3], 2]]"", ""[\"""" + uuid + ""\"", 1]"", ""1""),"
41575,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,167,,"                      row(""{\""k1\"": [[\"""" + uuid + ""\"", 2], [\"""" + uuid + ""\"", 3]], \""c1\"": [\"""" + uuid + ""\"", 1], \""value\"": 1}""),"
41576,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,167,,"                      row(""{\""k1\"": [[\"""" + uuid + ""\"", 2], [\"""" + uuid + ""\"", 3]], \""c1\"": [\"""" + uuid + ""\"", 1], \""value\"": 1}""),"
41577,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,167,,"                      row(""{\""k1\"": [[\"""" + uuid + ""\"", 2], [\"""" + uuid + ""\"", 3]], \""c1\"": [\"""" + uuid + ""\"", 1], \""value\"": 1}""),"
41578,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,174,,"                      row(""[[\"""" + uuid + ""\"", 2], [\"""" + uuid + ""\"", 3]]"", ""[\"""" + uuid + ""\"", 1]"", ""1""),"
41579,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,174,,"                      row(""[[\"""" + uuid + ""\"", 2], [\"""" + uuid + ""\"", 3]]"", ""[\"""" + uuid + ""\"", 1]"", ""1""),"
41580,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,199,,"                          row(""{\""k1\"": {\""a\"": 1, \""b\"": 2, \""c\"": [\""1\"", \""2\""]}, \""c1\"": [\"""" + uuid + ""\"", 1], \""value\"": 1}""),"
41581,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,206,,"                          row(""{\""a\"": 1, \""b\"": 2, \""c\"": [\""1\"", \""2\""]}"", ""[\"""" + uuid + ""\"", 1]"", ""1""),"
41582,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,217,,"        createTable(""CREATE TABLE %s ("" +"
41583,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,218,,"                ""k int PRIMARY KEY, "" +"
41584,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,255,,"                ""INSERT INTO %s (k, textval) VALUES (?, "" + func1 + ""(fromJson(?)))"", 0, ""123"");"
41585,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,259,,"                ""INSERT INTO %s (k, asciival) VALUES (?, fromJson(?))"", 0, ""\u038E\u0394\u03B4\u03E0"");"
41586,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,268,,"        execute(""INSERT INTO %s (k, udtval) VALUES (?, fromJson(?))"", 0, null);"
41587,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,290,,"        execute(""INSERT INTO %s (k, bigintval) VALUES (?, fromJson(?))"", 0, ""123123123123"");"
41588,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,290,,"        execute(""INSERT INTO %s (k, bigintval) VALUES (?, fromJson(?))"", 0, ""123123123123"");"
41589,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,302,,"                ""INSERT INTO %s (k, bigintval) VALUES (?, fromJson(?))"", 0, ""123.456"");"
41590,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,311,,"        execute(""INSERT INTO %s (k, blobval) VALUES (?, fromJson(?))"", 0, ""\""0x00000001\"""");"
41591,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,315,,"            ""INSERT INTO %s (k, blobval) VALUES (?, fromJson(?))"", 0, ""\""xyzz\"""");"
41592,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,327,,"        execute(""INSERT INTO %s (k, booleanval) VALUES (?, fromJson(?))"", 0, ""true"");"
41593,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,327,,"        execute(""INSERT INTO %s (k, booleanval) VALUES (?, fromJson(?))"", 0, ""true"");"
41594,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,354,,"        execute(""INSERT INTO %s (k, decimalval) VALUES (?, fromJson(?))"", 0, ""123123.123123"");"
41595,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,354,,"        execute(""INSERT INTO %s (k, decimalval) VALUES (?, fromJson(?))"", 0, ""123123.123123"");"
41596,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,355,,"        assertRows(execute(""SELECT k, decimalval FROM %s WHERE k = ?"", 0), row(0, new BigDecimal(""123123.123123"")));"
41597,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,357,,"        execute(""INSERT INTO %s (k, decimalval) VALUES (?, fromJson(?))"", 0, ""123123"");"
41598,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,374,,"        execute(""INSERT INTO %s (k, doubleval) VALUES (?, fromJson(?))"", 0, ""123123.123123"");"
41599,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,391,,"        execute(""INSERT INTO %s (k, floatval) VALUES (?, fromJson(?))"", 0, ""123123.123123"");"
41600,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,408,,"        execute(""INSERT INTO %s (k, inetval) VALUES (?, fromJson(?))"", 0, ""\""127.0.0.1\"""");"
41601,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,421,,"        execute(""INSERT INTO %s (k, intval) VALUES (?, fromJson(?))"", 0, ""123123"");"
41602,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,435,,"        assertInvalidMessage(""Unable to make int from"","
41603,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,442,,"        execute(""INSERT INTO %s (k, smallintval) VALUES (?, fromJson(?))"", 0, ""32767"");"
41604,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,463,,"        execute(""INSERT INTO %s (k, tinyintval) VALUES (?, fromJson(?))"", 0, ""127"");"
41605,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,484,,"        execute(""INSERT INTO %s (k, textval) VALUES (?, fromJson(?))"", 0, ""\""\"""");"
41606,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,484,,"        execute(""INSERT INTO %s (k, textval) VALUES (?, fromJson(?))"", 0, ""\""\"""");"
41607,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,485,,"        assertRows(execute(""SELECT k, textval FROM %s WHERE k = ?"", 0), row(0, """"));"
41608,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,500,,"        execute(""INSERT INTO %s (k, timeval) VALUES (?, fromJson(?))"", 0, ""\""07:35:07.000111222\"""");"
41609,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,510,,"        execute(""INSERT INTO %s (k, timestampval) VALUES (?, fromJson(?))"", 0, ""123123123123"");"
41610,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,523,,"        execute(""INSERT INTO %s (k, timeuuidval) VALUES (?, fromJson(?))"", 0, ""\""6bddc89a-5644-11e4-97fc-56847afe9799\"""");"
41611,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,523,,"        execute(""INSERT INTO %s (k, timeuuidval) VALUES (?, fromJson(?))"", 0, ""\""6bddc89a-5644-11e4-97fc-56847afe9799\"""");"
41612,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,524,,"        assertRows(execute(""SELECT k, timeuuidval FROM %s WHERE k = ?"", 0), row(0, UUID.fromString(""6bddc89a-5644-11e4-97fc-56847afe9799"")));"
41613,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,536,,"        execute(""INSERT INTO %s (k, uuidval) VALUES (?, fromJson(?))"", 0, ""\""6bddc89a-5644-11e4-97fc-56847afe9799\"""");"
41614,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,549,,"        execute(""INSERT INTO %s (k, varintval) VALUES (?, fromJson(?))"", 0, ""123123123123"");"
41615,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,569,,"        execute(""INSERT INTO %s (k, listval) VALUES (?, fromJson(?))"", 0, ""[1, 2, 3]"");"
41616,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,569,,"        execute(""INSERT INTO %s (k, listval) VALUES (?, fromJson(?))"", 0, ""[1, 2, 3]"");"
41617,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,589,,"        execute(""INSERT INTO %s (k, setval) VALUES (?, fromJson(?))"","
41618,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,590,,"                0, ""[\""6bddc89a-5644-11e4-97fc-56847afe9798\"", \""6bddc89a-5644-11e4-97fc-56847afe9799\""]"");"
41619,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,592,,"                row(0, set(UUID.fromString(""6bddc89a-5644-11e4-97fc-56847afe9798""), (UUID.fromString(""6bddc89a-5644-11e4-97fc-56847afe9799""))))"
41620,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,628,,"        execute(""INSERT INTO %s (k, mapval) VALUES (?, fromJson(?))"", 0, ""{\""a\"": 1, \""b\"": 2}"");"
41621,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,628,,"        execute(""INSERT INTO %s (k, mapval) VALUES (?, fromJson(?))"", 0, ""{\""a\"": 1, \""b\"": 2}"");"
41622,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,651,,"        execute(""INSERT INTO %s (k, tupleval) VALUES (?, fromJson(?))"", 0, ""[1, \""foobar\"", \""6bddc89a-5644-11e4-97fc-56847afe9799\""]"");"
41623,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,675,,"        assertRows(execute(""SELECT k, udtval.a, udtval.b, udtval.c FROM %s WHERE k = ?"", 0),"
41624,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,676,,"                row(0, 1, UUID.fromString(""6bddc89a-5644-11e4-97fc-56847afe9799""), set(""bar"", ""foo""))"
41625,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,676,,"                row(0, 1, UUID.fromString(""6bddc89a-5644-11e4-97fc-56847afe9799""), set(""bar"", ""foo""))"
41626,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,849,,"        execute(""INSERT INTO %s (k, textval) VALUES (?, ?)"", 0, """");"
41627,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,850,,"        assertRows(execute(""SELECT k, toJson(textval) FROM %s WHERE k = ?"", 0), row(0, ""\""\""""));"
41628,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,891,,"        assertRows(execute(""SELECT k, toJson(listval) FROM %s WHERE k = ?"", 0), row(0, ""null""));"
41629,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,989,,"                row(""{\""k\"": 0, \""v\"": 0}""),"
41630,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,1035,,"        execute(""INSERT INTO %s JSON ?"", ""{\""k\"": 0, \""v\"": 0}"");"
41631,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java,1036,,"        assertRows(execute(""SELECT * FROM %s""),"
41632,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexOnMapEntriesTest.java,83,,"        Object[] foo = insertIntoSimpleTable(""foo"", map(""a"", 1,"
41633,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexOnMapEntriesTest.java,85,,"        Object[] bar = insertIntoSimpleTable(""bar"", map(""a"", 1,"
41634,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexOnMapEntriesTest.java,87,,"        Object[] baz = insertIntoSimpleTable(""baz"", map(""b"", 2,"
41635,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexOnMapEntriesTest.java,142,,"        Object[] foo = insertIntoSimpleTable(""foo"", map(""common"", 31415,"
41636,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexOnMapEntriesTest.java,200,,"                                                        ""target"", 8192));"
41637,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexOnStaticColumnTest.java,39,,"        assertRows(execute(""SELECT id, name, age FROM %s WHERE age=?"", age1),"
41638,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,103,,"        assertInvalidMessage(format(""Index '%s.%s' doesn't exist"","
41639,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,106,,"                             format(""DROP INDEX %s.%s"", KEYSPACE, indexName));"
41640,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,126,,"        execute(""INSERT INTO %s (a, b) values (?, ?);"", 0, 0);"
41641,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,223,,"        execute(""INSERT INTO %s (id, row, setid) VALUES (?, ?, ?)"", 0, 0, 0);"
41642,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,258,,"        execute(""INSERT INTO %s (blog_id, timestamp, author, content) VALUES (?, ?, ?, ?)"", 0, 0, ""bob"", ""1st post"");"
41643,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,258,,"        execute(""INSERT INTO %s (blog_id, timestamp, author, content) VALUES (?, ?, ?, ?)"", 0, 0, ""bob"", ""1st post"");"
41644,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,259,,"        execute(""INSERT INTO %s (blog_id, timestamp, author, content) VALUES (?, ?, ?, ?)"", 0, 1, ""tom"", ""2nd post"");"
41645,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,441,,"        createIndex(""CREATE INDEX ON %s (v)"");"
41646,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,645,,"        failInsert(""BEGIN BATCH\n"" +"
41647,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,647,,"                   ""APPLY BATCH"","
41648,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,772,,"                             ""SELECT * FROM %s WHERE c1 LIKE ?"","
41649,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,773,,"                             ""%abc"");"
41650,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,776,,"                             ""%abc%"");"
41651,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,777,,"        execute(""SELECT * FROM %s WHERE c1 LIKE ?"", ""abc%"");"
41652,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,778,,"        execute(""SELECT * FROM %s WHERE c1 LIKE ?"", ""abc"");"
41653,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,780,,"                             ""SELECT * FROM %s WHERE v1 LIKE ?"","
41654,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,789,,"        execute(""SELECT * FROM %s WHERE c2 LIKE ?"", ""abc%"");"
41655,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,793,,"        execute(""SELECT * FROM %s WHERE v2 LIKE ?"", ""abc%"");"
41656,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,800,,"        assertInvalidMessage(""LIKE restriction is only supported on properly indexed columns. v3 LIKE ? is not valid"","
41657,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,801,,"                             ""SELECT * FROM %s WHERE v3 LIKE ?"","
41658,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,1040,,"                execute(""INSERT INTO %s (pk, ck, value) VALUES (?, ?, ?)"", i, j, i + j);"
41659,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,1063,,"        String indexName = createIndex(""CREATE CUSTOM INDEX ON %s (value) USING '"" + ReadOnlyOnFailureIndex.class.getName() + ""'"");"
41660,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,1065,,"        execute(""SELECT value FROM %s WHERE value = 1"");"
41661,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,1145,,"        dropIndex(""DROP INDEX %s."" + indexName);"
41662,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,1181,,"        execute(""INSERT INTO %s (pk, c, v) VALUES (?, ?, ?)"", bytes(""foo123""), bytes(""1""), bytes(""1""));"
41663,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,1181,,"        execute(""INSERT INTO %s (pk, c, v) VALUES (?, ?, ?)"", bytes(""foo123""), bytes(""1""), bytes(""1""));"
41664,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,1313,,"                execute(""INSERT INTO %s (pk1, pk2, c1, c2, v) VALUES (?, ?, ?, ?, ?)"", j, 1, 1, 1, i);"
41665,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,1357,,"        execute(""INSERT INTO %s (k1, k2, v) VALUES (?, ?, ?)"", 0, 0, set(1, 2, 3));"
41666,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,1383,,"        execute(""INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)"", 1, 1, 9, 1);"
41667,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,1417,,"        assertRows(execute(""SELECT * FROM %s WHERE v = ?"", 1),"
41668,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,1450,,"        String type = createType(""CREATE TYPE %s (a int)"");"
41669,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,1456,,"        execute(""INSERT INTO %s (k, v) VALUES (?, ?)"", 0, udt1);"
41670,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java,1494,,"                             ""SELECT * FROM %s WHERE v CONTAINS ?"", udt1);"
41671,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/StaticColumnsTest.java,51,,"        assertRows(execute(""SELECT * FROM %s""), row(0, null, 42, null));"
41672,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/TimestampTest.java,112,,"                ""APPLY BATCH"");"
41673,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/TimestampTest.java,133,,"                ""UPDATE %1$s SET c = c + 1 WHERE k = 0; "" +"
41674,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/TimestampTest.java,177,,"        assertRows(execute(""SELECT k, c, i, writetime(i) FROM %s ""),"
41675,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/TupleTypeTest.java,60,,"            execute(""INSERT INTO %s (k, t) VALUES (?, ?)"", 0, tuple(3, ""foo"", 3.4));"
41676,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/TupleTypeTest.java,60,,"            execute(""INSERT INTO %s (k, t) VALUES (?, ?)"", 0, tuple(3, ""foo"", 3.4));"
41677,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/TupleTypeTest.java,61,,"            execute(""INSERT INTO %s (k, t) VALUES (?, ?)"", 1, tuple(8, ""bar"", 0.2));"
41678,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFAuthTest.java,246,,"        String outerFunctionName = createFunction(""int"","
41679,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFAuthTest.java,389,,"                                          ""CALLED ON NULL INPUT "" +"
41680,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFAuthTest.java,390,,"                                          ""RETURNS int "" +"
41681,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFAuthTest.java,391,,"                                          ""LANGUAGE java "" +"
41682,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFIdentificationTest.java,90,,"        iFunc = createEchoFunction(""int"");"
41683,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFIdentificationTest.java,101,,"        assertFunctions(cql(""INSERT INTO %s (key, i_cc, t_cc, t_sc) VALUES (0, 0, 'A', %s)"", functionCall(tFunc, ""'foo'"")), tFunc);"
41684,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFIdentificationTest.java,270,,"                        ""system.token"", iFunc);"
41685,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFIdentificationTest.java,286,,"        assertFunctions(cql2(""SELECT i_val, %s FROM %s WHERE key=0"", functionCall(iFunc, ""i_val"")), iFunc);"
41686,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFIdentificationTest.java,286,,"        assertFunctions(cql2(""SELECT i_val, %s FROM %s WHERE key=0"", functionCall(iFunc, ""i_val"")), iFunc);"
41687,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,56,,"        createTable(""CREATE TABLE %s (key int primary key, val double)"");"
41688,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,62,,"                                      ""RETURNS NULL ON NULL INPUT "" +"
41689,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,63,,"                                      ""RETURNS bigint "" +"
41690,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,64,,"                                      ""LANGUAGE JAVA\n"" +"
41691,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,65,,"                                      ""AS '"" + functionBody + ""';"");"
41692,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,67,,"        assertRows(execute(""SELECT language, body FROM system_schema.functions WHERE keyspace_name=? AND function_name=?"","
41693,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,69,,"                   row(""java"", functionBody));"
41694,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,71,,"        execute(""INSERT INTO %s (key, val) VALUES (?, ?)"", 1, 1d);"
41695,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,74,,"        assertRows(execute(""SELECT key, val, "" + fName + ""() FROM %s""),"
41696,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,125,,"                             ""RETURNS double "" +"
41697,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,135,,"        String fName = createFunction(KEYSPACE, ""double"","
41698,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,139,,"                                      ""LANGUAGE JAVA "" +"
41699,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,146,,"                             ""SELECT key, val, "" + fName + ""(val) FROM %s"");"
41700,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,164,,"                                      ""CALLED ON NULL INPUT "" +"
41701,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,291,,"                                      ""RETURNS text "" +"
41702,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,292,,"                                      ""LANGUAGE java\n"" +"
41703,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,293,,"                                      ""AS $$"" + functionBody + ""$$;"");"
41704,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,327,,"        Set<String> set = new TreeSet<>(Arrays.asList(""one"", ""three"", ""two""));"
41705,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,327,,"        Set<String> set = new TreeSet<>(Arrays.asList(""one"", ""three"", ""two""));"
41706,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,327,,"        Set<String> set = new TreeSet<>(Arrays.asList(""one"", ""three"", ""two""));"
41707,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,335,,"        assertRows(execute(""SELECT "" + fList + ""(lst), "" + fSet + ""(st), "" + fMap + ""(mp) FROM %s WHERE key = 1""),"
41708,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,335,,"        assertRows(execute(""SELECT "" + fList + ""(lst), "" + fSet + ""(st), "" + fMap + ""(mp) FROM %s WHERE key = 1""),"
41709,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,335,,"        assertRows(execute(""SELECT "" + fList + ""(lst), "" + fSet + ""(st), "" + fMap + ""(mp) FROM %s WHERE key = 1""),"
41710,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,335,,"        assertRows(execute(""SELECT "" + fList + ""(lst), "" + fSet + ""(st), "" + fMap + ""(mp) FROM %s WHERE key = 1""),"
41711,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,364,,"        assertRows(execute(""SELECT "" + fName + ""(tup) FROM %s WHERE key = 1""),"
41712,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,376,,"                                      ""CREATE FUNCTION %s( tup "" + tupleTypeDef + "" ) "" +"
41713,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,376,,"                                      ""CREATE FUNCTION %s( tup "" + tupleTypeDef + "" ) "" +"
41714,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,378,,"                                      ""RETURNS "" + tupleTypeDef + ' ' +"
41715,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,380,,"                                      ""AS $$return "" +"
41716,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,466,,"        String type = createType(""CREATE TYPE %s (txt text, i int)"");"
41717,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,467,,"        createTable(""CREATE TABLE %s (key int primary key, udt frozen<"" + KEYSPACE + '.' + type + "">)"");"
41718,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,468,,"        execute(""INSERT INTO %s (key, udt) VALUES (1, {txt: 'one', i:1})"");"
41719,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,478,,"                       ""LANGUAGE java "" +"
41720,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,504,,"                                      ""CREATE FUNCTION %s( udt "" + type + "" ) "" +"
41721,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,520,,"                                      ""RETURNS int "" +"
41722,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,527,,"        UntypedResultSet rows = execute(""SELECT "" + fUdt0 + ""(udt) FROM %s WHERE key = 1"");"
41723,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,653,,"        execute(String.format(""CREATE OR REPLACE FUNCTION %s( udt %s ) "" +"
41724,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,686,,"        assertRows(execute(""SELECT "" + fName1replace + ""(udt) FROM %s WHERE key = 2""),"
41725,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java,707,,"        execute(""DROP FUNCTION "" + fName1replace);"
41726,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFPureScriptTupleCollectionTest.java,51,,"                                      ""CREATE FUNCTION %s( tup "" + tupleTypeDef + "" ) "" +"
41727,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFPureScriptTupleCollectionTest.java,51,,"                                      ""CREATE FUNCTION %s( tup "" + tupleTypeDef + "" ) "" +"
41728,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFPureScriptTupleCollectionTest.java,52,,"                                      ""RETURNS NULL ON NULL INPUT "" +"
41729,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFPureScriptTupleCollectionTest.java,54,,"                                      ""LANGUAGE javascript\n"" +"
41730,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFPureScriptTupleCollectionTest.java,55,,"                                      ""AS $$"" +"
41731,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFPureScriptTupleCollectionTest.java,97,,"        assertRows(execute(""SELECT "" + fTup1 + ""(tup) FROM %s WHERE key = 1""),"
41732,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFPureScriptTupleCollectionTest.java,97,,"        assertRows(execute(""SELECT "" + fTup1 + ""(tup) FROM %s WHERE key = 1""),"
41733,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,57,,"                                       ""RETURNS NULL ON NULL INPUT "" +"
41734,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,59,,"                                       ""LANGUAGE javascript\n"" +"
41735,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,75,,"        Set<String> set = new TreeSet<>(Arrays.asList(""one"", ""three"", ""two""));"
41736,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,75,,"        Set<String> set = new TreeSet<>(Arrays.asList(""one"", ""three"", ""two""));"
41737,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,75,,"        Set<String> set = new TreeSet<>(Arrays.asList(""one"", ""three"", ""two""));"
41738,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,86,,"        assertRows(execute(""SELECT "" + fName1 + ""(lst), "" + fName2 + ""(st), "" + fName3 + ""(mp) FROM %s WHERE key = 1""),"
41739,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,86,,"        assertRows(execute(""SELECT "" + fName1 + ""(lst), "" + fName2 + ""(st), "" + fName3 + ""(mp) FROM %s WHERE key = 1""),"
41740,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,128,,"                                      ""RETURNS "" + type + ' ' +"
41741,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,130,,"                                      ""AS $$"" +"
41742,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,135,,"                                      ""RETURNS text "" +"
41743,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,217,,"        createTable(""CREATE TABLE %s (key int primary key, val double)"");"
41744,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,222,,"        String fName = createFunction(KEYSPACE, ""double"","
41745,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,223,,"                                      ""CREATE OR REPLACE FUNCTION %s(val double) "" +"
41746,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,225,,"                                      ""RETURNS double "" +"
41747,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,235,,"        execute(""INSERT INTO %s (key, val) VALUES (?, ?)"", 1, 1d);"
41748,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,238,,"        assertRows(execute(""SELECT key, val, "" + fName + ""(val) FROM %s""),"
41749,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,238,,"        assertRows(execute(""SELECT key, val, "" + fName + ""(val) FROM %s""),"
41750,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,289,,"        new Object[]    {   ""100"",      ""tinyint"",  (byte)100 },"
41751,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFScriptTest.java,290,,"        new Object[]    {   ""100."",     ""tinyint"",  (byte)100 },"
41752,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFSecurityTest.java,46,,"            String fName = createFunction(KEYSPACE_PER_TEST, ""double"","
41753,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFSecurityTest.java,47,,"                                          ""CREATE OR REPLACE FUNCTION %s(val double) "" +"
41754,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFSecurityTest.java,48,,"                                          ""RETURNS NULL ON NULL INPUT "" +"
41755,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFSecurityTest.java,49,,"                                          ""RETURNS double "" +"
41756,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFSecurityTest.java,50,,"                                          ""LANGUAGE JAVA\n"" +"
41757,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFSecurityTest.java,52,,"            execute(""SELECT "" + fName + ""(dval) FROM %s WHERE key=1"");"
41758,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFSecurityTest.java,52,,"            execute(""SELECT "" + fName + ""(dval) FROM %s WHERE key=1"");"
41759,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFSecurityTest.java,70,,"                                 ""AS '"" + source + ""';"");"
41760,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFSecurityTest.java,76,,"        {""java.nio.file.FileSystems"", ""try {"" +"
41761,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFSecurityTest.java,78,,"                                      ""} catch (Exception t) {"" +"
41762,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFSecurityTest.java,79,,"                                      ""     throw new RuntimeException(t);"" +"
41763,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,64,,"                                  ""DROP FUNCTION "" + KEYSPACE + "".func_does_not_exist"");"
41764,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,91,,"        assertSchemaChange(""CREATE OR REPLACE FUNCTION "" + f + ""(state double, val double) "" +"
41765,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,92,,"                           ""RETURNS NULL ON NULL INPUT "" +"
41766,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,93,,"                           ""RETURNS double "" +"
41767,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,94,,"                           ""LANGUAGE javascript "" +"
41768,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,99,,"                           ""double"", ""double"");"
41769,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,105,,"                           ""RETURNS int "" +"
41770,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,111,,"                           ""int"", ""int"");"
41771,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,146,,"                                     ""CREATE FUNCTION %s ( input double ) "" +"
41772,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,147,,"                                     ""CALLED ON NULL INPUT "" +"
41773,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,149,,"                                     ""LANGUAGE java "" +"
41774,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,212,,"        execute(""CREATE FUNCTION "" + fSin + "" ( input double ) "" +"
41775,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,212,,"        execute(""CREATE FUNCTION "" + fSin + "" ( input double ) "" +"
41776,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,387,,"        assertRows(execute(""SELECT key, "" + fSin + ""(d) FROM %s""),"
41777,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,397,,"                             ""RETURNS text "" +"
41778,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,436,,"        assertInvalidMessage(""System keyspace 'system' is not user-modifiable"", ""DROP FUNCTION totimestamp"");"
41779,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,469,,"        String fRepeat = createFunction(KEYSPACE_PER_TEST, ""text"","
41780,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,521,,"        assertRows(execute(""SELECT "" + fOverload + ""(k), "" + fOverload + ""(v), "" + fOverload + ""(k, k) FROM %s""),"
41781,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,527,,"        assertInvalidMessage(""Ambiguous call to function"", ""SELECT v FROM %s WHERE k = "" + fOverload + ""(?)"", ""foo"");"
41782,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,527,,"        assertInvalidMessage(""Ambiguous call to function"", ""SELECT v FROM %s WHERE k = "" + fOverload + ""(?)"", ""foo"");"
41783,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,559,,"        execute(""INSERT INTO %s (key, val) VALUES (?, ?)"", 1, 1d);"
41784,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,578,,"        assertRows(execute(""SELECT key, val, "" + fName + ""(val) FROM %s""),"
41785,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,587,,"                ""LANGUAGE java\n"" +"
41786,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,620,,"        execute(""INSERT INTO "" + KEYSPACE_PER_TEST + "".second_tab (key, val) VALUES (?, ?)"", 1, 1d);"
41787,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,620,,"        execute(""INSERT INTO "" + KEYSPACE_PER_TEST + "".second_tab (key, val) VALUES (?, ?)"", 1, 1d);"
41788,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,638,,"                                      ""RETURNS timestamp "" +"
41789,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,640,,"                                      ""AS 'return null;';"");"
41790,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,666,,"                ""LANGUAGE JAVA\n"" +"
41791,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,803,,"                                       ""CREATE OR REPLACE FUNCTION %s(val int) "" +"
41792,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,807,,"                                       ""AS 'return \""foo bar\"";';"");"
41793,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,816,,"        assertInvalid(""CREATE OR REPLACE FUNCTION "" + fNulls + ""(val int) "" +"
41794,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,909,,"                                         ""CREATE OR REPLACE FUNCTION %s(val text) "" +"
41795,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,913,,"                                         ""AS 'return val;'"");"
41796,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,936,,"        String fNameBRC = createFunction(KEYSPACE_PER_TEST, ""blob"","
41797,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,937,,"                                         ""CREATE OR REPLACE FUNCTION %s(val blob) "" +"
41798,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,939,,"                                         ""RETURNS blob "" +"
41799,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,992,,"        assertRows(execute(""SELECT "" + fNameSRC + ""(sval) FROM %s""), row(""""));"
41800,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,996,,"        assertRows(execute(""SELECT "" + fNameSRC + ""(aval) FROM %s""), row(""""));"
41801,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,1000,,"        assertRows(execute(""SELECT "" + fNameBRC + ""(bval) FROM %s""), row(ByteBufferUtil.EMPTY_BYTE_BUFFER));"
41802,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java,1004,,"        assertRows(execute(""SELECT "" + fNameIRC + ""(empty_int) FROM %s""), row(new Object[]{ null }));"
41803,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,56,,"                                      ""CALLED ON NULL INPUT "" +"
41804,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,58,,"                                      ""LANGUAGE java\n"" +"
41805,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,95,,"        execute(""SELECT "" +"
41806,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,102,,"                                           fList + ""(lst) as l, "" +"
41807,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,103,,"                                           fSet + ""(st) as s, "" +"
41808,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,104,,"                                           fMap + ""(mp) as m, "" +"
41809,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,105,,"                                           fTup + ""(tup) as t, "" +"
41810,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,106,,"                                           fUdt + ""(udt) as u "" +"
41811,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,223,,"                                                   ""RETURNS text "" +"
41812,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,294,,"        execute(""INSERT INTO %s (a, b) VALUES (?, ?)"", 0, set());"
41813,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,300,,"                             ""CREATE OR REPLACE FUNCTION "" + KEYSPACE + "".frozenSetArg(values frozen<set<int>>) "" +"
41814,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,302,,"                             ""RETURNS int "" +"
41815,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,311,,"                             ""AS 'return values;';"");"
41816,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,321,,"        assertRows(execute(""SELECT a, "" + functionName + ""(b) FROM %s WHERE a = 0""), row(0, 0));"
41817,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,321,,"        assertRows(execute(""SELECT a, "" + functionName + ""(b) FROM %s WHERE a = 0""), row(0, 0));"
41818,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,322,,"        assertRows(execute(""SELECT a, "" + functionName + ""(b) FROM %s WHERE a = 1""), row(1, 6));"
41819,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,323,,"        assertRows(execute(""SELECT a, "" + functionName + ""(b) FROM %s WHERE a = 2""), row(2, 15));"
41820,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,324,,"        assertRows(execute(""SELECT a, "" + functionName + ""(b) FROM %s WHERE a = 3""), row(3, 24));"
41821,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,334,,"        assertRows(execute(""SELECT a FROM %s WHERE b = "" + functionName + ""(?)"", set(1, 2, 3)),"
41822,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,334,,"        assertRows(execute(""SELECT a FROM %s WHERE b = "" + functionName + ""(?)"", set(1, 2, 3)),"
41823,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,338,,"                             ""DROP FUNCTION "" + functionName + ""(frozen<set<int>>);"");"
41824,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java,511,,"        execute(""INSERT INTO %s (a, b) VALUES (?, {f : ?})"", 0, 0);"
41825,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFVerifierTest.java,89,,"        assertEquals(new HashSet<>(Collections.singletonList(""use of synchronized"")),"
41826,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFVerifierTest.java,210,,"                              ""{\n"" +"
41827,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFVerifierTest.java,212,,"                              ""}\n"" +"
41828,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFVerifierTest.java,217,,"                              ""return 0d;"", ""Java UDF validation failed: [call to java.lang.Object.clone()]"");"
41829,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFVerifierTest.java,228,,"                              ""return 0d;\n"" +"
41830,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFVerifierTest.java,229,,"                              ""    }\n"" +"
41831,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFVerifierTest.java,240,,"                              ""    {\n"" +"
41832,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFVerifierTest.java,263,,"        assertInvalidByteCode(""synchronized (this)\n"" +"
41833,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFVerifierTest.java,314,,"        assertInvalidByteCode(""try {"" +"
41834,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFVerifierTest.java,316,,"                              ""} catch (Exception t) {"" +"
41835,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFVerifierTest.java,317,,"                              ""     throw new RuntimeException(t);"" +"
41836,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,73,,"        String ut1 = createType(""CREATE TYPE %s (a int, b int)"");"
41837,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,75,,"        createTable(""CREATE TABLE %s (x int PRIMARY KEY, y set<frozen<"" + KEYSPACE + ""."" + ut2 + "">>)"");"
41838,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,108,,"        String typename = createType(""CREATE TYPE %s (a int)"");"
41839,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,113,,"                ""CREATE TABLE "" + KEYSPACE + "".wrong (k "" + myType + "" PRIMARY KEY , v int)"");"
41840,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,165,,"                    ""INSERT INTO %s (a, b, c) VALUES (0, ?, 0)"", userType(""a"", 0, ""foo"", 0));"
41841,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,191,,"        schemaChange(""ALTER TYPE "" + myType + "" ADD b int"");"
41842,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,191,,"        schemaChange(""ALTER TYPE "" + myType + "" ADD b int"");"
41843,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,204,,"        String myType = KEYSPACE + '.' + createType(""CREATE TYPE %s (a int, b text)"");"
41844,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,205,,"        createTable(""CREATE TABLE %s (k int PRIMARY KEY, v "" + myType + "")"");"
41845,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,206,,"        execute(""INSERT INTO %s (k, v) VALUES (0, ?)"", userType(""a"", 1, ""b"", ""abc""));"
41846,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,209,,"            assertRows(execute(""SELECT v FROM %s""), row(userType(""a"", 1, ""b"", ""abc"")));"
41847,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,210,,"            assertRows(execute(""SELECT v.a FROM %s""), row(1));"
41848,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,217,,"        assertRows(execute(""SELECT v.foo FROM %s""), row(""abc""));"
41849,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,220,,"        assertRows(execute(""SELECT v FROM %s""), row(userType(""a"", 1, ""foo"", ""def"")));"
41850,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,229,,"        schemaChange(""ALTER TYPE "" + myType + "" ADD c int"");"
41851,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,272,,"            execute(""INSERT INTO %s (x, y) VALUES(1, ?)"", map(""firstValue"", userType(""a"", 1)));"
41852,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,272,,"            execute(""INSERT INTO %s (x, y) VALUES(1, ?)"", map(""firstValue"", userType(""a"", 1)));"
41853,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,273,,"            assertRows(execute(""SELECT * FROM %s""), row(1, map(""firstValue"", userType(""a"", 1))));"
41854,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,493,,"                userType(""s"", set(userType(""s"", set(""foo"", ""bar""), ""m"", map(""foo"", ""bar""), ""l"", list(""foo"", ""bar"")))));"
41855,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,521,,"        assertInvalidMessage(""would create a circular reference"", ""ALTER TYPE "" + typeWithKs(type1) + "" ADD needs_to_fail frozen<"" + typeWithKs(typeX) + '>');"
41856,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,521,,"        assertInvalidMessage(""would create a circular reference"", ""ALTER TYPE "" + typeWithKs(type1) + "" ADD needs_to_fail frozen<"" + typeWithKs(typeX) + '>');"
41857,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,562,,"        String type1 = createType(""CREATE TYPE %s (foo ascii)"");"
41858,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,633,,"        assertRows(execute(""SELECT * FROM %s WHERE k = ?"", 0), row(0, userType(""a"", 0, ""b"", ""abc"")));"
41859,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,635,,"        execute(""INSERT INTO %s (k, v) VALUES (?, ?)"", 0, userType(""a"", 0, ""b"", ""abc""));"
41860,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,665,,"        execute(""UPDATE %s SET v.a = ? WHERE k = ?"", 1, 0);"
41861,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java,744,,"            assertRows(execute(""SELECT * FROM %s WHERE x = 1""),"
41862,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/VirtualTableTest.java,105,,"        vt1data.row(""pk1"", ""c1"").column(""v1"", 11).column(""v2"", 11L)"
41863,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/VirtualTableTest.java,106,,"               .row(""pk2"", ""c1"").column(""v1"", 21).column(""v2"", 21L)"
41864,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/VirtualTableTest.java,134,,"        vt3data.row(""pk11"", ""pk11"", ""ck11"", ""ck11"").column(""v1"", 1111).column(""v2"", 1111L)"
41865,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/VirtualTableTest.java,262,,"                ""APPLY BATCH"");"
41866,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/VirtualTableTest.java,323,,"        assertInvalidMessage(""Virtual keyspace 'test_virtual_ks' is not user-modifiable"","
41867,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/CrcCheckChanceTest.java,65,,"        execute(""INSERT INTO %s(p, c, v, s) values (?, ?, ?, ?)"", ""p1"", ""k1"", ""v1"", ""sv1"");"
41868,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/CrcCheckChanceTest.java,65,,"        execute(""INSERT INTO %s(p, c, v, s) values (?, ?, ?, ?)"", ""p1"", ""k1"", ""v1"", ""sv1"");"
41869,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/CrcCheckChanceTest.java,66,,"        execute(""INSERT INTO %s(p, c, v) values (?, ?, ?)"", ""p1"", ""k2"", ""v2"");"
41870,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/CrcCheckChanceTest.java,67,,"        execute(""INSERT INTO %s(p, s) values (?, ?)"", ""p2"", ""sv2"");"
41871,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/CrcCheckChanceTest.java,67,,"        execute(""INSERT INTO %s(p, s) values (?, ?)"", ""p2"", ""sv2"");"
41872,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/OverflowTest.java,51,,"        assertRows(execute(""SELECT * FROM %s""),"
41873,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTableMetadataTrackingTest.java,40,,"        createTable(""CREATE TABLE %s (a int, b int, c text, PRIMARY KEY (a, b))"");"
41874,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,78,,"        execute(""INSERT INTO %s (pk, c, v) VALUES (?, ?, ?)"", 1, 40, ""41"");"
41875,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,92,,"        executeAndCheck(""SELECT * FROM %s WHERE pk = 1"", 3,"
41876,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,98,,"        executeAndCheck(""SELECT * FROM %s WHERE pk = 2"", 2,"
41877,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,145,,"        createTable(""CREATE TABLE %s (id int, col int, val text, PRIMARY KEY (id, col)) WITH CLUSTERING ORDER BY (col ASC)"");"
41878,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,147,,"        execute(""INSERT INTO %s (id, col, val) VALUES (?, ?, ?)"", 1, 10, ""10"");"
41879,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,156,,"        executeAndCheck(""SELECT * FROM %s WHERE id=1 LIMIT 1"", 1, row(1, 10, ""10""));"
41880,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,157,,"        executeAndCheck(""SELECT * FROM %s WHERE id=1 LIMIT 2"", 2, row(1, 10, ""10""), row(1, 20, ""20""));"
41881,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,158,,"        executeAndCheck(""SELECT * FROM %s WHERE id=1 LIMIT 3"", 3, row(1, 10, ""10""), row(1, 20, ""20""), row(1, 30, ""30""));"
41882,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,159,,"        executeAndCheck(""SELECT * FROM %s WHERE id=1"", 3, row(1, 10, ""10""), row(1, 20, ""20""), row(1, 30, ""30""));"
41883,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,161,,"        executeAndCheck(""SELECT * FROM %s WHERE id=1 AND col > 25 LIMIT 1"", 1, row(1, 30, ""30""));"
41884,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,162,,"        executeAndCheck(""SELECT * FROM %s WHERE id=1 AND col < 40 LIMIT 1"", 1, row(1, 10, ""10""));"
41885,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,211,,"        createTable(""CREATE TABLE %s (id int, col int, val text, PRIMARY KEY (id, col)) WITH CLUSTERING ORDER BY (col DESC)"");"
41886,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,385,,"        executeAndCheck(""SELECT * FROM %s WHERE id=1 LIMIT 1"", 1, row(1, 2000, ""2000""));"
41887,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,434,,"        executeAndCheck(""SELECT * FROM %s WHERE id=1 LIMIT 1"", 3, row(1, 1001, ""1001""));"
41888,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,461,,"                execute(""INSERT INTO %s (id, col, val1) VALUES (?, ?, ?)"", 1, i, Integer.toString(i));"
41889,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,463,,"                execute(""INSERT INTO %s (id, col, val1, val2) VALUES (?, ?, ?, ?)"", 1, i, Integer.toString(i), Integer.toString(i));"
41890,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,567,,"        execute(""INSERT INTO %s (pk, ck, v) VALUES (1, 1, '1')"");"
41891,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,573,,"        executeAndCheck(""SELECT * FROM %s WHERE pk = 1 AND ck = 1"", 2);"
41892,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,581,,"        execute(""INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)"", 1, 1, 1, 1);"
41893,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,584,,"        execute(""DELETE FROM %s WHERE a=? AND b=?"", 1, 1);"
41894,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,587,,"        executeAndCheck(""SELECT * FROM %s WHERE a=1 AND b=1 AND c=1"", 2);"
41895,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,608,,"        createTable(""CREATE TABLE %s (pk int, ck int, v text, PRIMARY KEY (pk, ck)) WITH COMPACT STORAGE"");"
41896,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,620,,"        executeAndCheck(""SELECT * FROM %s WHERE pk = 1 AND ck = 51"", 1, row(1, 51, ""5""));"
41897,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,622,,"        execute(""ALTER TABLE %s DROP COMPACT STORAGE"");"
41898,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,826,,"        createTable(""CREATE TABLE %s (pk int, c int, v1 int, v2 int, PRIMARY KEY(pk, c))"");"
41899,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,832,,"        execute(""INSERT INTO %s (pk, c, v1) VALUES (?, ?, ?) USING TIMESTAMP 2000"", 1, 1, 2);"
41900,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,834,,"        execute(""UPDATE %s USING TIMESTAMP 2002 SET v1 = ? WHERE pk = ? AND c = ?"", 2, 1, 3);"
41901,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,841,,"        executeAndCheck(""SELECT * FROM %s WHERE pk = 1 AND c = 1"", 3, row(1, 1, 3, null));"
41902,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,842,,"        executeAndCheck(""SELECT * FROM %s WHERE pk = 1 AND c = 2"", 3, row(1, 2, 3, null));"
41903,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,845,,"        executeAndCheck(""SELECT c, v1 FROM %s WHERE pk = 1 AND c = 1"", 1, row(1, 3));"
41904,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,849,,"        executeAndCheck(""SELECT v1 FROM %s WHERE pk = 1 AND c = 1"", 1, row(3));"
41905,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,853,,"        executeAndCheck(""SELECT v1, v2 FROM %s WHERE pk = 1 AND c = 1"", 3, row(3, (Integer) null));"
41906,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,867,,"        execute(""INSERT INTO %s (pk, c, v1, v2) VALUES (?, ?, ?, ?) USING TIMESTAMP 1000"", 1, 1, 1, 1);"
41907,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,868,,"        execute(""INSERT INTO %s (pk, c, v1, v2) VALUES (?, ?, ?, ?) USING TIMESTAMP 1001"", 1, 2, 1, 1);"
41908,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,869,,"        execute(""INSERT INTO %s (pk, c, v1, v2) VALUES (?, ?, ?, ?) USING TIMESTAMP 1002"", 1, 3, 1, 1);"
41909,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,908,,"        execute(""INSERT INTO %s (pk, c, v) VALUES (?, ?, ?) USING TIMESTAMP 2000"", 1, 1, 2);"
41910,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,917,,"        executeAndCheck(""SELECT * FROM %s WHERE pk = 2 AND c = 1"", 2, row(2, 1, 1, 3));"
41911,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,924,,"        executeAndCheck(""SELECT v FROM %s WHERE pk = 1 AND c = 1"", 1, row(3));"
41912,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,953,,"        executeAndCheck(""SELECT c, v FROM %s WHERE pk = 1 AND c = 1"", 2, row(1, 2));"
41913,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1052,,"        execute(""INSERT INTO %s (pk, c, v1, v2) VALUES (?, ?, ?, ?) USING TIMESTAMP 1003"", 4, 1, 1, 1);"
41914,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1060,,"        execute(""INSERT INTO %s (pk, c, v1) VALUES (?, ?, ?) USING TIMESTAMP 3001"", 2, 1, 3);"
41915,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1062,,"        execute(""UPDATE %s USING TIMESTAMP 3003 SET v1 = ? WHERE pk = ? AND c = ?"", 3, 4, 1);"
41916,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1070,,"        executeAndCheck(""SELECT v1, v2 FROM %s WHERE pk = 2 AND c = 1"", 2, row(3, null));"
41917,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1071,,"        executeAndCheck(""SELECT v2 FROM %s WHERE pk = 2 AND c = 1"", 2, row((Integer) null));"
41918,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1073,,"        executeAndCheck(""SELECT * FROM %s WHERE pk = 3 AND c = 1"", 1);"
41919,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1074,,"        executeAndCheck(""SELECT c, v1 FROM %s WHERE pk = 3 AND c = 1"", 1);"
41920,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1077,,"        executeAndCheck(""SELECT * FROM %s WHERE pk = 4 AND c = 1"", 2, row(4, 1, 3, null));"
41921,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1078,,"        executeAndCheck(""SELECT v1, v2 FROM %s WHERE pk = 4 AND c = 1"", 2, row(3, null));"
41922,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1079,,"        executeAndCheck(""SELECT v2 FROM %s WHERE pk = 4 AND c = 1"", 2, row((Integer) null));"
41923,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1108,,"            executeAndCheck(""SELECT v1, v2 FROM %s WHERE pk = 1"", 1);"
41924,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1111,,"            executeAndCheck(""SELECT v1, v2 FROM %s WHERE pk = 2"", 2, row(3, null));"
41925,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1112,,"            executeAndCheck(""SELECT v2 FROM %s WHERE pk = 2"", 2, row((Integer) null));"
41926,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1114,,"            executeAndCheck(""SELECT * FROM %s WHERE pk = 3"", 1);"
41927,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1116,,"            executeAndCheck(""SELECT v1, v2 FROM %s WHERE pk = 3"", 1);"
41928,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1118,,"            executeAndCheck(""SELECT * FROM %s WHERE pk = 4"", 2, row(4, 3, null));"
41929,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1119,,"            executeAndCheck(""SELECT v1, v2 FROM %s WHERE pk = 4"", 2, row(3, null));"
41930,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java,1120,,"            executeAndCheck(""SELECT v2 FROM %s WHERE pk = 4"", 2, row((Integer) null));"
41931,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/TombstonesTest.java,68,,"        String tableName = createTable(""CREATE TABLE %s (a text, b text, c text, PRIMARY KEY (a, b));"");"
41932,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/TombstonesTest.java,75,,"            execute(""INSERT INTO %s (a, b, c) VALUES ('key', 'column"" + i + ""', null);"");"
41933,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/TombstonesTest.java,75,,"            execute(""INSERT INTO %s (a, b, c) VALUES ('key', 'column"" + i + ""', null);"");"
41934,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/TombstonesTest.java,79,,"            execute(""SELECT * FROM %s WHERE a = 'key';"");"
41935,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,73,,"                                  ""DROP AGGREGATE "" + KEYSPACE + "".aggr_does_not_exist"");"
41936,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,87,,"        execute(""DROP AGGREGATE IF EXISTS "" + KEYSPACE + "".aggr_does_not_exist"");"
41937,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,99,,"        assertColumnNames(execute(""SELECT COUNT(*) FROM %s""), ""count"");"
41938,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,99,,"        assertColumnNames(execute(""SELECT COUNT(*) FROM %s""), ""count"");"
41939,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,134,,"        assertRows(execute(""SELECT COUNT(1) FROM %s""), row(4L));"
41940,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,189,,"                          ""system.count(b)"", ""max"", ""b"", ""first"");"
41941,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,189,,"                          ""system.count(b)"", ""max"", ""b"", ""first"");"
41942,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,215,,"        assertRows(execute(""SELECT count(b), max(b) as max, min(b) as min, avg(b) as avg, sum(b) as sum FROM %s""),"
41943,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,271,,"                                         ""double, double"","
41944,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,273,,"                                         ""RETURNS NULL ON NULL INPUT "" +"
41945,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,274,,"                                         ""RETURNS double "" +"
41946,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,279,,"        assertColumnNames(execute(""SELECT count(b), max(b) as max, "" + copySign + ""(b, c), "" + copySign + ""(c, b) as first FROM %s""),"
41947,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,279,,"        assertColumnNames(execute(""SELECT count(b), max(b) as max, "" + copySign + ""(b, c), "" + copySign + ""(c, b) as first FROM %s""),"
41948,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,391,,"        assertRows(execute(""SELECT "" + copySign + ""(max(c), min(c)) FROM %s""), row(-1.4));"
41949,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,406,,"                                  ""LANGUAGE javascript "" +"
41950,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,407,,"                                  ""AS '\""string\"";';"");"
41951,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,411,,"                               ""CREATE OR REPLACE FUNCTION %s(state int, val int) "" +"
41952,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,413,,"                               ""RETURNS int "" +"
41953,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,419,,"        registerAggregate(a, ""double"");"
41954,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,421,,"        assertSchemaChange(""CREATE OR REPLACE AGGREGATE "" + a + ""(double) "" +"
41955,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,422,,"                           ""SFUNC "" + shortFunctionName(f) + "" "" +"
41956,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,423,,"                           ""STYPE double "" +"
41957,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,424,,"                           ""INITCOND 0"","
41958,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,432,,"                           ""INITCOND 1"","
41959,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,437,,"        registerAggregate(a, ""int"");"
41960,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,441,,"                           ""STYPE int "" +"
41961,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,447,,"        assertSchemaChange(""DROP AGGREGATE "" + a + ""(double)"","
41962,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,493,,"        assertInvalidMessage(""matches multiple function definitions"", ""DROP AGGREGATE "" + f);"
41963,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,494,,"        assertInvalidMessage(""doesn't exist"", ""DROP AGGREGATE "" + f + ""(double, double)"");"
41964,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,510,,"        assertInvalidMessage(""matches multiple function definitions"", ""DROP FUNCTION "" + a);"
41965,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,552,,"        createTable(""CREATE TABLE %s (a int primary key, b int)"");"
41966,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,553,,"        execute(""INSERT INTO %s (a, b) VALUES (1, 1)"");"
41967,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,554,,"        execute(""INSERT INTO %s (a, b) VALUES (2, 2)"");"
41968,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,555,,"        execute(""INSERT INTO %s (a, b) VALUES (3, 3)"");"
41969,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,558,,"                                       ""int, int"","
41970,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,559,,"                                       ""CREATE FUNCTION %s(a int, b int) "" +"
41971,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,560,,"                                       ""CALLED ON NULL INPUT "" +"
41972,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,562,,"                                       ""LANGUAGE java "" +"
41973,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,563,,"                                       ""AS 'return Integer.valueOf((a!=null?a.intValue():0) + b.intValue());'"");"
41974,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,567,,"                                       ""CREATE FUNCTION %s(a int) "" +"
41975,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,569,,"                                       ""RETURNS text "" +"
41976,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,571,,"                                       ""AS 'return a.toString();'"");"
41977,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,575,,"                                   ""CREATE AGGREGATE %s(int) "" +"
41978,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,578,,"                                   ""FINALFUNC "" + shortFunctionName(fFinal));"
41979,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,581,,"        assertRows(execute(""SELECT "" + a + ""(b) FROM %s""), row(""6""));"
41980,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,583,,"        execute(""DROP AGGREGATE "" + a + ""(int)"");"
41981,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,585,,"        assertInvalidMessage(""Unknown function"", ""SELECT "" + a + ""(b) FROM %s"");"
41982,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,618,,"                                   ""INITCOND null"");"
41983,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,648,,"                             ""CREATE AGGREGATE "" + KEYSPACE + "".aggrInvalid(int)"" +"
41984,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,648,,"                             ""CREATE AGGREGATE "" + KEYSPACE + "".aggrInvalid(int)"" +"
41985,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,691,,"                             ""CREATE AGGREGATE "" + KEYSPACE + "".aggrInvalid(double)"" +"
41986,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,708,,"                             ""STYPE int"");"
41987,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,854,,"        execute(""DROP FUNCTION "" + f + ""(int, int)"");"
41988,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,889,,"        assertRows(execute(""SELECT initcond FROM system_schema.aggregates WHERE keyspace_name=? AND aggregate_name=?"", KEYSPACE, shortFunctionName(a)),"
41989,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,968,,"                                       ""AS 'return state;'"");"
41990,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,1046,,"                                       ""AS 'a + b;'"");"
41991,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,1194,,"                                              ""LANGUAGE java\n"" +"
41992,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,1292,,"        assertRows(execute(""SELECT "" + aStateNull + ""(i) FROM %s WHERE key = 0""), row(0));"
41993,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,1301,,"        assertRows(execute(""SELECT "" + aStateNull + ""(i) FROM %s WHERE key = 1""), row(1));"
41994,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,1310,,"        assertRows(execute(""SELECT "" + aStateNull + ""(i) FROM %s WHERE key IN (1, 2, 3)""), row(6));"
41995,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,1390,,"                             ""CREATE AGGREGATE "" + KEYSPACE_PER_TEST + "".test_wrong_ks(int) "" +"
41996,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,1392,,"                             ""STYPE "" + type + "" "" +"
41997,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,1424,,"        execute(""INSERT INTO %s (a, b) VALUES (?, ?)"", 0, set());"
41998,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,1435,,"                                       ""AS 'return values;';"");"
41999,./TargetProjects/cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java,1445,,"        assertInvalidMessage(""cannot be frozen"","
