115000,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestIntermediateStateCalcStage.java,94,,"                generateMessage(""OFFLINE"", ""DROPPED"", instanceName + ""-1""));"
115001,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestManagementMessageGeneration.java,54,,"    List<Message> messages = generateMessages(""ONLINE"", ""ONLINE"", ""OFFLINE"", true);"
115002,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestManagementMessageGeneration.java,54,,"    List<Message> messages = generateMessages(""ONLINE"", ""ONLINE"", ""OFFLINE"", true);"
115003,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,54,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115004,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,65,,"      ""TestDB"""
115005,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,106,,"        createMessage(MessageType.STATE_TRANSITION, ""msgId-001"", ""OFFLINE"", ""SLAVE"", ""TestDB"","
115006,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,106,,"        createMessage(MessageType.STATE_TRANSITION, ""msgId-001"", ""OFFLINE"", ""SLAVE"", ""TestDB"","
115007,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,107,,"            ""localhost_0"");"
115008,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,110,,"    msgSelectOutput.addMessages(""TestDB"", new Partition(""TestDB_0""), selectMessages);"
115009,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,151,,"    record.setMapField(""constraint0"", new TreeMap<>());"
115010,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,152,,"    record.getMapField(""constraint0"").put(""MESSAGE_TYPE"", ""STATE_TRANSITION"");"
115011,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,152,,"    record.getMapField(""constraint0"").put(""MESSAGE_TYPE"", ""STATE_TRANSITION"");"
115012,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,153,,"    record.getMapField(""constraint0"").put(""CONSTRAINT_VALUE"", ""ANY"");"
115013,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,158,,"    record.setMapField(""constraint1"", new TreeMap<>());"
115014,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,160,,"    record.getMapField(""constraint1"").put(""TRANSITION"", ""OFFLINE-SLAVE"");"
115015,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,160,,"    record.getMapField(""constraint1"").put(""TRANSITION"", ""OFFLINE-SLAVE"");"
115016,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,166,,"    record.setMapField(""constraint2"", new TreeMap<>());"
115017,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,169,,"    record.getMapField(""constraint2"").put(""INSTANCE"", "".*"");"
115018,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,170,,"    record.getMapField(""constraint2"").put(""RESOURCE"", ""TestDB"");"
115019,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,176,,"    record.setMapField(""constraint3"", new TreeMap<>());"
115020,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,186,,"    record.setMapField(""constraint4"", new TreeMap<>());"
115021,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMessageThrottleStage.java,196,,"    record.setMapField(""constraint5"", new TreeMap<>());"
115022,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMsgSelectionStage.java,65,,"    liveInstances.put(""localhost_0"", new LiveInstance(""localhost_0""));"
115023,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMsgSelectionStage.java,66,,"    liveInstances.put(""localhost_1"", new LiveInstance(""localhost_1""));"
115024,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMsgSelectionStage.java,69,,"    currentStates.put(""localhost_0"", ""SLAVE"");"
115025,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMsgSelectionStage.java,70,,"    currentStates.put(""localhost_1"", ""MASTER"");"
115026,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMsgSelectionStage.java,75,,"    messages.add(TestHelper.createMessage(""msgId_0"", ""SLAVE"", ""MASTER"", ""localhost_0"", ""TestDB"","
115027,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestMsgSelectionStage.java,76,,"        ""TestDB_0""));"
115028,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestRebalancePipeline.java,59,,"    String clusterName = ""CLUSTER_"" + _className + ""_dup"";"
115029,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestRebalancePipeline.java,60,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115030,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestRebalancePipeline.java,60,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115031,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestRebalancePipeline.java,106,,"    setCurrentState(clusterName, ""localhost_0"", resourceName, resourceName + ""_0"", liveInstances.get(0).getEphemeralOwner(),"
115032,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestRebalancePipeline.java,107,,"        ""OFFLINE"");"
115033,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestRebalancePipeline.java,117,,"    Assert.assertEquals(message.getToState(), ""SLAVE"");"
115034,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestRebalancePipeline.java,155,,"    Assert.assertTrue(messages.get(0).getToState().equalsIgnoreCase(""MASTER""));"
115035,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestRebalancePipeline.java,171,,"    System.out.println(""END "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115036,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestRebalancePipeline.java,227,,"    setCurrentState(clusterName, ""localhost_1"", resourceName, resourceName + ""_0"", liveInstances.get(1).getEphemeralOwner(),"
115037,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestResourceValidationStage.java,54,,"    createIS(accessor, masterSlaveCustomResource, ""MasterSlave"", RebalanceMode.CUSTOMIZED);"
115038,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestStateTransitionPriority.java,58,,"            ""MasterSlave""));"
115039,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestStateTransitionPriority.java,79,,"      bestPossibleStateOutput.setState(resource, partition, instanceName, ""SLAVE"");"
115040,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/controller/stages/TestTaskStage.java,75,,"        new JobConfig.Builder().setJobId(""Job_0"").setTargetResource(""1"").setCommand(""1"");"
115041,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestAddNodeAfterControllerStart.java,46,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115042,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestAddNodeAfterControllerStart.java,73,,"    _gSetupTool.rebalanceStorageCluster(clusterName, ""TestDB0"", 3);"
115043,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestAddStateModelFactoryAfterConnect.java,83,,"    setupTool.addResourceToCluster(clusterName, ""TestDB1"", 16, ""MasterSlave"");"
115044,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestCleanupExternalView.java,93,,"    admin.dropResource(clusterName, ""TestDB0"");"
115045,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestClusterStartsup.java,43,,"      String storageNodeName = ""localhost_"" + (START_PORT + i);"
115046,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestClusterStartsup.java,67,,"      Assert.fail(""Should fail on connect() since cluster structure is not set up"");"
115047,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestComputeAndCleanupCustomizedView.java,103,,"    customizedState.setState(PARTITION_NAME1, ""STARTED"");"
115048,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestCorrectnessOnConnectivityLoss.java,104,,"      Assert.assertTrue(stateReachedCounts.containsKey(""ONLINE""));"
115049,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestCorrectnessOnConnectivityLoss.java,149,,"      Assert.assertEquals(routingTableProvider.getInstances(""resource0"", ""OFFLINE"").size(), 0);"
115050,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisable.java,56,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115051,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisable.java,56,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115052,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisable.java,61,,"        ""localhost"", // participant name prefix"
115053,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisable.java,62,,"        ""TestDB"", // resource name prefix"
115054,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisable.java,67,,"        ""MasterSlave"", true); // do rebalance"
115055,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisable.java,73,,"    IdealState idealState = accessor.getProperty(keyBuilder.idealStates(""TestDB0""));"
115056,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisable.java,79,,"        new ClusterControllerManager(ZK_ADDR, clusterName, ""controller_0"");"
115057,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisable.java,84,,"      String instanceName = ""localhost_"" + (12918 + i);"
115058,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisable.java,98,,"        ""--zkSvr "" + ZK_ADDR + "" --enableInstance "" + clusterName + "" "" + disableNode + "" false"";"
115059,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisable.java,98,,"        ""--zkSvr "" + ZK_ADDR + "" --enableInstance "" + clusterName + "" "" + disableNode + "" false"";"
115060,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisable.java,99,,"    ClusterSetup.processCommandLineArgs(command.split(""\\s+""));"
115061,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisable.java,105,,"    expectInstanceStateMap.put(disableNode, ""OFFLINE"");"
115062,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisable.java,119,,"    Assert.assertTrue(result, disableNode + "" should NOT be in OFFLINE"");"
115063,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisable.java,129,,"    System.out.println(""END "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115064,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisable.java,138,,"    String disableNode = ""localhost_12919"";"
115065,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisable.java,260,,"        + "" localhost_12919 TestDB0 TestDB0_0 TestDB0_5"";"
115066,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisablePartition.java,64,,"    map.put(""TestDB_0"", TestHelper.setOf(""localhost_12919""));"
115067,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisablePartition.java,71,,"    TestHelper.verifyState(CLUSTER_NAME, ZK_ADDR, map, ""OFFLINE"");"
115068,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisableResource.java,57,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115069,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDisableResource.java,102,,"                .getResourceIdealState(clusterName, ""TestDB0"").isEnabled(),"
115070,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDriver.java,184,,"      String errMsg = ""test cluster hasn't been setup:"" + uniqClusterName;"
115071,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDriver.java,340,,"              testInfo._numPartitionsPerDb, testInfo._replica - 1, dbName, ""MASTER"", ""SLAVE"");"
115072,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDriver.java,340,,"              testInfo._numPartitionsPerDb, testInfo._replica - 1, dbName, ""MASTER"", ""SLAVE"");"
115073,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDrop.java,87,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115074,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDrop.java,87,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115075,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDrop.java,92,,"        ""localhost"", // participant name prefix"
115076,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDrop.java,93,,"        ""TestDB"", // resource name prefix"
115077,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDrop.java,98,,"        ""MasterSlave"", true); // do rebalance"
115078,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDrop.java,107,,"      String instanceName = ""localhost_"" + (12918 + i);"
115079,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDrop.java,120,,"    admin.dropResource(clusterName, ""TestDB0"");"
115080,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDrop.java,129,,"    System.out.println(""END "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115081,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDrop.java,155,,"        new ClusterControllerManager(ZK_ADDR, clusterName, ""controller_0"");"
115082,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDrop.java,160,,"    errTransitions.put(""SLAVE-MASTER"", TestHelper.setOf(""TestDB0_4""));"
115083,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDrop.java,177,,"    errStateMap.get(""TestDB0"").put(""TestDB0_4"", ""localhost_12918"");"
115084,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDrop.java,342,,"    isBuilder.assignInstanceAndState(""TestDB0_0"", ""localhost_12918"", ""MASTER"");"
115085,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDropResource.java,34,,"    _gSetupTool.addResourceToCluster(CLUSTER_NAME, ""MyDB"", 6, STATE_MODEL);"
115086,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestDropResource.java,53,,"    _gSetupTool.addResourceToCluster(CLUSTER_NAME, ""MyDB2"", 16, STATE_MODEL);"
115087,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestErrorPartition.java,60,,"            put(""SLAVE-MASTER"", TestHelper.setOf(""TestDB0_4""));"
115088,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestErrorPartition.java,72,,"    errStates.put(""TestDB0"", new HashMap<>());"
115089,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestErrorPartition.java,73,,"    errStates.get(""TestDB0"").put(""TestDB0_4"", ""localhost_12918"");"
115090,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestErrorReplicaPersist.java,137,,"  @StateModelInfo(initialState = ""OFFLINE"", states = { ""MASTER"", ""SLAVE"", ""ERROR"""
115091,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestErrorReplicaPersist.java,137,,"  @StateModelInfo(initialState = ""OFFLINE"", states = { ""MASTER"", ""SLAVE"", ""ERROR"""
115092,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestHelixUsingDifferentParams.java,35,,"        .println(""START "" + getShortClassName() + "" at "" + new Date(System.currentTimeMillis()));"
115093,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestMessagePartitionStateMismatch.java,63,,"            message.setFromState(rand ? ""SLAVE"" : ""OFFLINE"");"
115094,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestNoThrottleDisabledPartitions.java,82,,"        new ClusterControllerManager(ZK_ADDR, _clusterName, ""controller_0"");"
115095,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestNoThrottleDisabledPartitions.java,133,,"    disablePartitionOnInstance(_participants[0], _resourceName + ""0"", ""TestDB0_2"");"
115096,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestPartitionLevelTransitionConstraint.java,126,,"    accessor.setProperty(accessor.keyBuilder().stateModelDef(""Bootstrap""), stateModelDef);"
115097,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestPartitionLevelTransitionConstraint.java,179,,"    assertMessage(_msgOrderArray[0], ""OFFLINE"", ""BOOTSTRAP"", instanceName1);"
115098,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestPartitionLevelTransitionConstraint.java,179,,"    assertMessage(_msgOrderArray[0], ""OFFLINE"", ""BOOTSTRAP"", instanceName1);"
115099,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestPartitionLevelTransitionConstraint.java,180,,"    assertMessage(_msgOrderArray[1], ""BOOTSTRAP"", ""SLAVE"", instanceName1);"
115100,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestPartitionLevelTransitionConstraint.java,181,,"    assertMessage(_msgOrderArray[2], ""SLAVE"", ""MASTER"", instanceName1);"
115101,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestPreferenceListAsQueue.java,141,,"        ""localhost_1"", ""localhost_2"""
115102,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestPreferenceListAsQueue.java,141,,"        ""localhost_1"", ""localhost_2"""
115103,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestPreferenceListAsQueue.java,266,,"        .addState(""ONLINE"", 1).addState(""OFFLINE"").addState(""DROPPED"").addState(""ERROR"")"
115104,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestPreferenceListAsQueue.java,266,,"        .addState(""ONLINE"", 1).addState(""OFFLINE"").addState(""DROPPED"").addState(""ERROR"")"
115105,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestPreferenceListAsQueue.java,266,,"        .addState(""ONLINE"", 1).addState(""OFFLINE"").addState(""DROPPED"").addState(""ERROR"")"
115106,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestPreferenceListAsQueue.java,266,,"        .addState(""ONLINE"", 1).addState(""OFFLINE"").addState(""DROPPED"").addState(""ERROR"")"
115107,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestPreferenceListAsQueue.java,456,,"      LOG.info(""START onBecomeOnlineFromOffline for "" + message.getPartitionName() + "" on """
115108,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestRenamePartition.java,53,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115109,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestRenamePartition.java,71,,"    IdealState idealState = accessor.getProperty(keyBuilder.idealStates(""TestDB0""));"
115110,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestResetPartitionState.java,90,,"        put(""SLAVE-MASTER"", TestHelper.setOf(""TestDB0_4""));"
115111,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestResetPartitionState.java,112,,"    errStateMap.put(""TestDB0"", new HashMap<String, String>());"
115112,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestResetPartitionState.java,113,,"    errStateMap.get(""TestDB0"").put(""TestDB0_4"", ""localhost_12918"");"
115113,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestResetPartitionState.java,126,,"      ClusterSetup.processCommandLineArgs(command.split(""\\s+""));"
115114,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestResourceGroupEndtoEnd.java,161,,"        _routingTableProvider.getInstancesForResourceGroup(TEST_DB, ""ONLINE"");"
115115,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestResourceGroupEndtoEnd.java,169,,"        .getInstancesForResourceGroup(TEST_DB, ""ONLINE"", Arrays.asList(""cluster_2"", ""cluster_3""));"
115116,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestResourceGroupEndtoEnd.java,169,,"        .getInstancesForResourceGroup(TEST_DB, ""ONLINE"", Arrays.asList(""cluster_2"", ""cluster_3""));"
115117,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestResourceWithSamePartitionKey.java,70,,"    idealState.setPartitionState(""0"", ""localhost_12918"", ""ONLINE"");"
115118,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestResourceWithSamePartitionKey.java,70,,"    idealState.setPartitionState(""0"", ""localhost_12918"", ""ONLINE"");"
115119,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestResourceWithSamePartitionKey.java,71,,"    idealState.setPartitionState(""0"", ""localhost_12919"", ""ONLINE"");"
115120,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestStateTransitionCancellation.java,107,,"        Assert.assertEquals(currentState, ""OFFLINE"");"
115121,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestStateTransitionCancellation.java,136,,"      Assert.assertTrue(externalView.getStateMap(partition).values().contains(""SLAVE""));"
115122,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestStateTransitionCancellation.java,169,,"      if (externalView.getStateMap(partition).values().contains(""MASTER"")) {"
115123,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestStateTransitionThrottle.java,58,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115124,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestStateTransitionThrottle.java,67,,"          new MockParticipantManager(ZK_ADDR, clusterName, ""localhost_"" + (12918 + i));"
115125,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestSwapInstance.java,37,,"    _gSetupTool.addResourceToCluster(CLUSTER_NAME, ""db-semi"", 64, STATE_MODEL,"
115126,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestSwapInstance.java,42,,"    _gSetupTool.addResourceToCluster(CLUSTER_NAME, ""db-customized"", 64, STATE_MODEL,"
115127,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestSwapInstance.java,47,,"    _gSetupTool.addResourceToCluster(CLUSTER_NAME, ""db-fa"", 64, STATE_MODEL,"
115128,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestWeightBasedRebalanceUtil.java,222,,"        new ZkBasedPartitionWeightProvider(ZK_ADDR, CLUSTER_NAME, ""Test"");"
115129,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestWeightBasedRebalanceUtil.java,307,,"        new ZkBasedPartitionWeightProvider(ZK_ADDR, CLUSTER_NAME, ""QPS"");"
115130,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java,65,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115131,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java,65,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115132,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java,68,,"        ""localhost"", // participant name prefix"
115133,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java,69,,"        ""TestDB"", // resource name prefix"
115134,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java,74,,"        ""MasterSlave"", true); // do rebalance"
115135,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java,77,,"        new ClusterControllerManager(ZK_ADDR, clusterName, ""controller_0"");"
115136,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java,84,,"      String instanceName = ""localhost_"" + (12918 + i);"
115137,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java,92,,"            .taskCurrentState(instanceName, participants[i].getSessionId(), ""TestTaskResource_"" + j)"
115138,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java,139,,"        ""Expired participant session. oldSessionId: "" + oldSessionId + "", newSessionId: """
115139,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java,183,,"    System.out.println(""END "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115140,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java,376,,"    List<String> existWatches = rpWatchPaths.get(""existWatches"");"
115141,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java,447,,"    Assert.assertFalse(rpWatchPaths.get(""dataWatches"").contains(jobKey.getPath()));"
115142,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/controller/TestClusterMaintenanceMode.java,245,,"        ""TRIGGERED_BY"", ""SHOULD NOT BE RECORDED"");"
115143,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/controller/TestWatcherLeakageOnController.java,67,,"    List<String> dataWatchesBefore = zkWatches.get(""dataWatches"");"
115144,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/manager/TestConsecutiveZkSessionExpiry.java,88,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115145,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/manager/TestConsecutiveZkSessionExpiry.java,133,,"    LOG.info(""Expried participant session. oldSessionId: "" + oldSessionId + "", newSessionId: """
115146,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/manager/TestControllerManager.java,43,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115147,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/manager/TestDistributedControllerManager.java,54,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115148,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/manager/TestDistributedControllerManager.java,63,,"        ""MasterSlave"", true); // do rebalance"
115149,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java,90,,"        ""localhost"", // participant name prefix"
115150,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java,91,,"        ""TestDB"", // resource name prefix"
115151,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java,96,,"        ""MasterSlave"", true); // do rebalance"
115152,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java,99,,"        new ZKHelixManager(clusterName, ""localhost_12918"", InstanceType.PARTICIPANT, ZK_ADDR);"
115153,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/manager/TestStateModelLeak.java,62,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115154,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/manager/TestStateModelLeak.java,71,,"        ""MasterSlave"", true); // do rebalance"
115155,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/manager/TestStateModelLeak.java,96,,"    expectStateModelMap.put(""TestDB0_0"", ""SLAVE"");"
115156,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/manager/TestStateModelLeak.java,97,,"    expectStateModelMap.put(""TestDB0_1"", ""MASTER"");"
115157,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/manager/TestStateModelLeak.java,104,,"    admin.dropResource(clusterName, ""TestDB0"");"
115158,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestBatchMessage.java,72,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115159,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestBatchMessage.java,72,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115160,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestBatchMessage.java,75,,"        ""localhost"", // participant name prefix"
115161,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestBatchMessage.java,76,,"        ""TestDB"", // resource name prefix"
115162,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestBatchMessage.java,81,,"        ""MasterSlave"", true); // do rebalance"
115163,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestBatchMessage.java,87,,"    IdealState idealState = accessor.getProperty(keyBuilder.idealStates(""TestDB0""));"
115164,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestBatchMessage.java,93,,"    _gZkClient.subscribeChildChanges(keyBuilder.messages(""localhost_12918"").getPath(), listener);"
115165,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestBatchMessage.java,102,,"      String instanceName = ""localhost_"" + (12918 + i);"
115166,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestBatchMessage.java,129,,"    System.out.println(""END "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115167,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestBatchMessageWrapper.java,89,,"    IdealState idealState = accessor.getProperty(keyBuilder.idealStates(""TestDB0""));"
115168,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestCrossClusterMessagingService.java,90,,"    String para = ""Testing messaging para"";"
115169,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestCrossClusterMessagingService.java,91,,"    msg.getRecord().setSimpleField(""TestMessagingPara"", para);"
115170,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestCrossClusterMessagingService.java,148,,"    AssertJUnit.assertTrue(TestAsyncCallback._replyedMessageContents.contains(""TestReplyMessage""));"
115171,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestMessageThrottle2.java,105,,"      return state != null && state.equals(""MASTER"");"
115172,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestMessageThrottle2.java,143,,"    admin.addStateModelDef(_clusterName, ""MasterSlave"","
115173,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestMessageThrottle2.java,170,,"        StateModelDefinition.StateModelDefinitionProperty.INITIAL_STATE.toString(), ""OFFLINE"");"
115174,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestMessageThrottle2.java,173,,"    statePriorityList.add(""SLAVE"");"
115175,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestMessageThrottle2.java,175,,"    statePriorityList.add(""DROPPED"");"
115176,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestMessageThrottle2.java,176,,"    statePriorityList.add(""ERROR"");"
115177,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestMessagingService.java,79,,"        _processedMsgIds.add(_message.getRecord().getSimpleField(""TestMessagingPara""));"
115178,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestMessagingService.java,80,,"        result.getTaskResultMap().put(""ReplyMessage"", ""TestReplyMessage"");"
115179,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestMessagingService.java,80,,"        result.getTaskResultMap().put(""ReplyMessage"", ""TestReplyMessage"");"
115180,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestMessagingService.java,94,,"    String hostSrc = ""localhost_"" + START_PORT;"
115181,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestMessagingService.java,107,,"    String para = ""Testing messaging para"";"
115182,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestSchedulerMessage.java,208,,"    schedulerMessage.setTgtName(""CONTROLLER"");"
115183,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestSchedulerMessage.java,212,,"    Message msg = new Message(_factory.getMessageTypes().get(0), ""Template"");"
115184,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestSchedulerMessage.java,218,,"    cr.setInstanceName(""localhost_%"");"
115185,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestSchedulerMessage.java,232,,"    schedulerMessage.getRecord().setSimpleField(""Criteria"", crString);"
115186,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestSchedulerMessage.java,233,,"    schedulerMessage.getRecord().setMapField(""MessageTemplate"", msg.getRecord().getSimpleFields());"
115187,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestSchedulerMessage.java,234,,"    schedulerMessage.getRecord().setSimpleField(""TIMEOUT"", ""-1"");"
115188,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestSchedulerMessage.java,256,,"          statusUpdate.getMapField(""SentMessageCount"").get(""MessageCount""));"
115189,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/messaging/TestSchedulerMessage.java,256,,"          statusUpdate.getMapField(""SentMessageCount"").get(""MessageCount""));"
115190,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/multizk/TestMultiZkHelixJavaApis.java,815,,"    System.out.println(""Start "" + methodName);"
115191,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/paticipant/TestCustomizedStateUpdate.java,78,,"    customizedStateMap.put(""PREVIOUS_STATE"", ""STARTED"");"
115192,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/paticipant/TestCustomizedStateUpdate.java,78,,"    customizedStateMap.put(""PREVIOUS_STATE"", ""STARTED"");"
115193,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/paticipant/TestCustomizedStateUpdate.java,79,,"    customizedStateMap.put(""CURRENT_STATE"", ""END_OF_PUSH_RECEIVED"");"
115194,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/paticipant/TestCustomizedStateUpdate.java,79,,"    customizedStateMap.put(""CURRENT_STATE"", ""END_OF_PUSH_RECEIVED"");"
115195,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/paticipant/TestStateTransitionTimeoutWithResource.java,97,,"      ""MASTER"", ""SLAVE"", ""ERROR"""
115196,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/paticipant/TestStateTransitionTimeoutWithResource.java,97,,"      ""MASTER"", ""SLAVE"", ""ERROR"""
115197,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/rebalancer/CrushRebalancers/TestCrushAutoRebalanceNonRack.java,131,,"  @DataProvider(name = ""rebalanceStrategies"")"
115198,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/rebalancer/CrushRebalancers/TestCrushAutoRebalanceNonRack.java,147,,"      String db = ""Test-DB-"" + rebalanceStrategyName + ""-"" + i++;"
115199,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/rebalancer/CrushRebalancers/TestCrushAutoRebalanceTopoplogyAwareDisabled.java,63,,"  @Test(dataProvider = ""rebalanceStrategies"")"
115200,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/rebalancer/TestAutoRebalance.java,126,,"    _gSetupTool.addResourceToCluster(CLUSTER_NAME, ""MyDB"", _PARTITIONS, ""OnlineOffline"","
115201,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/rebalancer/TestAutoRebalance.java,147,,"    _gSetupTool.addResourceToCluster(CLUSTER_NAME, ""MyDB2"", _PARTITIONS, ""MasterSlave"","
115202,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/rebalancer/TestCustomIdealState.java,41,,"    System.out.println(""START "" + uniqClusterName + "" at "" + new Date(System.currentTimeMillis()));"
115203,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/rebalancer/TestFullAutoNodeTagging.java,74,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115204,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/rebalancer/TestFullAutoNodeTagging.java,100,,"      final String instanceName = ""localhost_"" + (12918 + i);"
115205,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/rebalancer/WagedRebalancer/TestWagedRebalance.java,151,,"      String db = ""Test-DB-"" + TestHelper.getTestMethodName() + i++;"
115206,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/rebalancer/WagedRebalancer/TestWagedRebalance.java,186,,"  @Test(dependsOnMethods = ""test"")"
115207,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/spectator/TestRoutingTableProvider.java,95,,"          .getInstancesForResource(TEST_DB, ""MASTER"")) {"
115208,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/spectator/TestRoutingTableProvider.java,98,,"      for (InstanceConfig config : routingTableSnapshot.getInstancesForResource(TEST_DB, ""SLAVE"")) {"
115209,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/spectator/TestRoutingTableProvider.java,285,,"    sourceDataTypes.put(PropertyType.EXTERNALVIEW, Arrays.asList(""typeA""));"
115210,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/spectator/TestRoutingTableProvider.java,286,,"    sourceDataTypes.put(PropertyType.CUSTOMIZEDVIEW, Arrays.asList(""typeA"", ""typeB""));"
115211,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/spectator/TestRoutingTableProvider.java,331,,"    customizedView1.setState(""p1"", ""h1"", ""testState1"");"
115212,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/spectator/TestRoutingTableProvider.java,333,,"    customizedView1.setState(""p2"", ""h1"", ""testState2"");"
115213,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/spectator/TestRoutingTableProvider.java,334,,"    customizedView1.setState(""p3"", ""h2"", ""testState3"");"
115214,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/spectator/TestRoutingTableProvider.java,368,,"      String typeAp1h1 = ""noState"";"
115215,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/spectator/TestRoutingTableProviderFromCurrentStates.java,178,,"      _gSetupTool.addResourceToCluster(CLUSTER_NAME, dbName, NUM_PARTITIONS, ""MasterSlave"","
115216,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/spectator/TestRoutingTableProviderFromCurrentStates.java,311,,"          () -> finalRoutingTableCS.getInstances(db, targetPartitionName, ""MASTER"").size() > 0,"
115217,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestAddDeleteTask.java,65,,"    String jobName = ""JOB0"";"
115218,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestAddDeleteTask.java,122,,"        .setJobCommandConfigMap(ImmutableMap.of(MockTask.JOB_DELAY, ""99999999""));"
115219,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestAddDeleteTask.java,188,,"        .setJobCommandConfigMap(ImmutableMap.of(MockTask.JOB_DELAY, ""1000""));"
115220,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestContextRedundantUpdates.java,49,,"    String jobName = ""JOB0"";"
115221,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestDeleteJobFromJobQueue.java,55,,"    jobQueue.enqueueJob(""job2"", jobBuilder2);"
115222,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestDeleteWorkflow.java,57,,"    jobQueue.enqueueJob(""job1"", jobBuilder);"
115223,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestDropCurrentStateRunningTask.java,182,,"      jobQueue.enqueueJob(""job"" + i, jobBuilderCompleted);"
115224,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestEnqueueJobs.java,55,,"    _driver.enqueueJob(queueName, ""JOB0"", jobBuilder);"
115225,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestEnqueueJobs.java,57,,"      _driver.pollForJobState(queueName, TaskUtil.getNamespacedJobName(queueName, ""JOB"" + (i - 1)),"
115226,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestExecutionDelay.java,70,,"    builder.addParentChildDependency(""JOB0"", ""JOB1"");"
115227,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestExecutionDelay.java,70,,"    builder.addParentChildDependency(""JOB0"", ""JOB1"");"
115228,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestExecutionDelay.java,71,,"    builder.addParentChildDependency(""JOB0"", ""JOB2"");"
115229,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestForceDeleteWorkflow.java,150,,"    _driver.pollForJobState(workflowName, TaskUtil.getNamespacedJobName(workflowName, ""JOB0""),"
115230,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestIndependentTaskRebalancer.java,79,,"      taskFactoryReg.put(""TaskOne"", context -> new TaskOne(context, instanceName));"
115231,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestIndependentTaskRebalancer.java,136,,"    jobCommandMap.put(""Timeout"", ""1000"");"
115232,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestIndependentTaskRebalancer.java,137,,"    JobConfig.Builder jobBuilder = new JobConfig.Builder().setCommand(""DummyCommand"")"
115233,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailureDependence.java,50,,"    LOG.info(""Starting job-queue: "" + queueName);"
115234,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailureDependence.java,57,,"              .setTargetPartitionStates(Sets.newHashSet(""SLAVE""));"
115235,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailureDependence.java,58,,"      String jobName = ""job"" + _testDbs.get(i);"
115236,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailureDependence.java,68,,"      String namedSpaceJob = String.format(""%s_%s"", queueName, currentJobNames.get(i));"
115237,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestJobQueueCleanUp.java,54,,"      builder.enqueueJob(""JOB"" + i, jobBuilder);"
115238,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestQuotaBasedScheduling.java,92,,"      taskFactoryReg.put(""ShortTask"", shortTaskFactory);"
115239,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestQuotaBasedScheduling.java,93,,"      taskFactoryReg.put(""LongTask"", longTaskFactory);"
115240,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestQuotaBasedScheduling.java,145,,"      workflowBuilder.addJob(""JOB"" + i, jobConfigBulider);"
115241,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestQuotaBasedScheduling.java,162,,"  @Test(dependsOnMethods = ""testSchedulingWithoutQuota"")"
115242,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java,140,,"            .setJobCommandConfigMap(ImmutableMap.of(MockTask.JOB_DELAY, ""99999999"")); // task stuck"
115243,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestRecurringJobQueue.java,51,,"    LOG.info(""Starting job-queue: "" + queueName);"
115244,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestRecurringJobQueue.java,61,,"    String namedSpaceJob1 = String.format(""%s_%s"", scheduledQueue, currentJobNames.get(0));"
115245,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java,59,,"      String jobName = ""job"" + _testDbs.get(i);"
115246,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java,70,,"    String namedSpaceJob = String.format(""%s_%s"", workflowName, currentJobNames.get(1));"
115247,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestScheduleDelayTask.java,50,,"    builder.addParentChildDependency(""Job1"", ""Job4"");"
115248,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestScheduleDelayTask.java,50,,"    builder.addParentChildDependency(""Job1"", ""Job4"");"
115249,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestScheduleDelayTask.java,51,,"    builder.addParentChildDependency(""Job2"", ""Job4"");"
115250,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestStopWorkflow.java,103,,"      taskConfigs.add(new TaskConfig(""StopTask"", new HashMap<>()));"
115251,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestStopWorkflow.java,104,,"      JobConfig.Builder jobConfigBulider = new JobConfig.Builder().setCommand(""Dummy"")"
115252,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestStopWorkflow.java,106,,"      workflowBuilder.addJob(""JOB"" + i, jobConfigBulider);"
115253,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestStopWorkflowWithExecutionDelay.java,69,,"    builder.addParentChildDependency(""JOB0"", ""JOB1"");"
115254,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskAssignmentCalculator.java,80,,"      taskFactoryReg.put(""TaskOne"", context -> new TaskOne(context, instanceName));"
115255,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskAssignmentCalculator.java,119,,"      JobConfig.Builder jobBuilder = new JobConfig.Builder().setCommand(""DummyCommand"")"
115256,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskAssignmentCalculator.java,121,,"      workflowBuilder.addJob(""JOB"" + i, jobBuilder);"
115257,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskConditionalRetry.java,59,,"      TaskConfig.Builder configBuilder = new TaskConfig.Builder().setTaskId(""task_"" + j);"
115258,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskCurrentStateNull.java,75,,"    builder1.addJob(""JOB0"", jobBuilder1);"
115259,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskErrorReporting.java,64,,"      TaskConfig.Builder configBuilder = new TaskConfig.Builder().setTaskId(""task_"" + j);"
115260,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskRebalancerStopResume.java,105,,"    LOG.info(""Starting job-queue: "" + queueName);"
115261,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskRebalancerStopResume.java,110,,"    Set<String> master = Sets.newHashSet(""MASTER"");"
115262,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskRebalancerStopResume.java,115,,"    LOG.info(""Enqueuing job: "" + job1Name);"
115263,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskRebalancerStopResume.java,118,,"    Set<String> slave = Sets.newHashSet(""SLAVE"");"
115264,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskRebalancerStopResume.java,125,,"    String namespacedJob1 = String.format(""%s_%s"", queueName, job1Name);"
115265,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskRebalancerStopResume.java,129,,"    LOG.info(""Pausing job-queue: "" + queueName);"
115266,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskRebalancerStopResume.java,138,,"    LOG.info(""Resuming job-queue: "" + queueName);"
115267,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskStopQueue.java,51,,"    jobQueue.enqueueJob(""JOB0"", jobBuilder0);"
115268,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestUserContentStore.java,173,,"      putUserContent(""ContentTest"", ""Value1"", Scope.JOB);"
115269,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestWorkflowContextWithoutConfig.java,113,,"        .setJobCommandConfigMap(ImmutableMap.of(MockTask.JOB_DELAY, ""1000""));"
115270,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestWorkflowContextWithoutConfig.java,114,,"    builder.addJob(""JOB0"", jobBuilder1);"
115271,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestWorkflowContextWithoutConfig.java,131,,"    jobContext.setName(TaskUtil.getNamespacedJobName(workflowName, ""JOB1""));"
115272,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/integration/task/TestWorkflowJobDependency.java,62,,"      String jobName = ""job"" + _testDbs.get(i);"
115273,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestHandleSession.java,63,,"        ""localhost"", // participant name prefix"
115274,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestHandleSession.java,64,,"        ""TestDB"", // resource name prefix"
115275,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestHandleSession.java,69,,"        ""MasterSlave"", true); // do rebalance"
115276,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestHandleSession.java,72,,"        new MockParticipantManager(ZK_ADDR, clusterName, ""localhost_12918"");"
115277,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestWtCacheAsyncOpMultiThread.java,73,,"              ""session_0"", ""TestDB"" + k);"
115278,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestWtCacheAsyncOpMultiThread.java,208,,"    Assert.assertTrue(ret, ""wtCache doesn't match data on Zk"");"
115279,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestWtCacheAsyncOpSingleThread.java,43,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115280,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestWtCacheAsyncOpSingleThread.java,46,,"    String curStatePath = PropertyPathBuilder.instanceCurrentState(clusterName, ""localhost_8901"");"
115281,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestWtCacheAsyncOpSingleThread.java,58,,"    Assert.assertTrue(ret, ""wtCache doesn't match data on Zk"");"
115282,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestWtCacheAsyncOpSingleThread.java,65,,"          ""session_0"", ""TestDB"" + i);"
115283,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestWtCacheSyncOpSingleThread.java,43,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115284,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestWtCacheSyncOpSingleThread.java,46,,"    String curStatePath = PropertyPathBuilder.instanceCurrentState(clusterName, ""localhost_8901"");"
115285,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestWtCacheSyncOpSingleThread.java,58,,"    Assert.assertTrue(ret, ""wtCache doesn't match data on Zk"");"
115286,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestWtCacheSyncOpSingleThread.java,63,,"      boolean success = accessor.create(path, new ZNRecord(""TestDB"" + i), AccessOption.PERSISTENT);"
115287,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZKUtil.java,116,,"    record.setSimpleField(""key1"", ""value1"");"
115288,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZKUtil.java,131,,"    String path = PropertyPathBuilder.instanceConfig(clusterName, ""id7"");"
115289,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZKUtil.java,134,,"    record.setListField(""list"", list);"
115290,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZKUtil.java,149,,"    record.setMapField(""map"", map);"
115291,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZKUtil.java,174,,"    record = new ZNRecord(""id9"");"
115292,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZKWatch.java,71,,"    Assert.assertEquals(zkWatch.get(""dataWatches"").size(), 1);"
115293,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZKWatch.java,72,,"    Assert.assertEquals(zkWatch.get(""existWatches"").size(), 0);"
115294,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZKWatch.java,73,,"    Assert.assertEquals(zkWatch.get(""childWatches"").size(), 0);"
115295,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZNRecordSerializer.java,54,,"    ZNRecord record = new ZNRecord(""testId"");"
115296,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZNRecordSerializer.java,98,,"    System.out.println(""ZNRecordSerializer serialize took "" + (System.currentTimeMillis() - start) + "" ms"");"
115297,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZNRecordSizeLimit.java,117,,"    InstanceConfig instanceConfig = new InstanceConfig(""localhost_12918"");"
115298,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZNRecordSizeLimit.java,125,,"    IdealState idealState = new IdealState(""currentState"");"
115299,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZNRecordSizeLimit.java,126,,"    idealState.setStateModelDefRef(""MasterSlave"");"
115300,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZNRecordSizeLimit.java,148,,"    succeed = accessor.setProperty(keyBuilder.idealStates(""TestDB1""), idealState);"
115301,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZNRecordSizeLimit.java,287,,"      succeed = accessor.setProperty(keyBuilder.idealStates(""TestDB_2""), idealState);"
115302,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZNRecordStreamingSerializer.java,38,,"    ZNRecord record = new ZNRecord(""testId"");"
115303,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkBaseDataAccessor.java,86,,"    System.out.println(""START "" + testName + "" at "" + new Date(System.currentTimeMillis()));"
115304,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkBaseDataAccessor.java,86,,"    System.out.println(""START "" + testName + "" at "" + new Date(System.currentTimeMillis()));"
115305,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkBaseDataAccessor.java,88,,"    String path = String.format(""/%s/%s"", _rootPath, ""msg_0"");"
115306,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkBaseDataAccessor.java,88,,"    String path = String.format(""/%s/%s"", _rootPath, ""msg_0"");"
115307,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkBaseDataAccessor.java,98,,"    System.out.println(""END "" + testName + "" at "" + new Date(System.currentTimeMillis()));"
115308,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkBaseDataAccessor.java,147,,"    record.setSimpleField(""key0"", ""value0"");"
115309,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkBaseDataAccessor.java,147,,"    record.setSimpleField(""key0"", ""value0"");"
115310,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkBaseDataAccessor.java,416,,"    newRecord.setSimpleField(""key1"", ""value1"");"
115311,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkBaseDataAccessor.java,416,,"    newRecord.setSimpleField(""key1"", ""value1"");"
115312,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkBaseDataAccessor.java,498,,"      String msgId = ""msg_"" + i;"
115313,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkBaseDataAccessor.java,499,,"      paths.add(PropertyPathBuilder.instanceMessage(root, ""host_1"", msgId));"
115314,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkCacheAsyncOpSingleThread.java,55,,"    String curStatePath = PropertyPathBuilder.instanceCurrentState(clusterName, ""localhost_8901"");"
115315,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkCacheAsyncOpSingleThread.java,67,,"    Assert.assertTrue(ret, ""zkCache doesn't match data on Zk"");"
115316,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkCacheAsyncOpSingleThread.java,74,,"          .instanceCurrentState(clusterName, ""localhost_8901"", ""session_0"", ""TestDB"" + i);"
115317,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkCacheAsyncOpSingleThread.java,74,,"          .instanceCurrentState(clusterName, ""localhost_8901"", ""session_0"", ""TestDB"" + i);"
115318,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkCacheAsyncOpSingleThread.java,133,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115319,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkClusterManager.java,134,,"        record.setSimpleField(""simple"", ""value"");"
115320,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkFlapping.java,72,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115321,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkFlapping.java,111,,"      Assert.assertNotNull(liveInstance, ""Live-instance should exist after "" + n + "" disconnects"");"
115322,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java,134,,"    String port = ""9999"";"
115323,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java,183,,"    AssertJUnit.assertTrue(tool.setInstanceConfig(clusterName, ""host1_9999"", config));"
115324,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java,231,,"      Assert.fail(""Should throw HelixException"");"
115325,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java,263,,"    ZNRecord stateModelRecord = new ZNRecord(""id1"");"
115326,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java,273,,"    tool.addStateModelDef(clusterName, ""MasterSlave"","
115327,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java,282,,"      tool.addResource(clusterName, ""resource"", 10, ""nonexistStateModelDef"");"
115328,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java,354,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115329,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java,354,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115330,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java,362,,"    tool.addResource(clusterName, ""test-db"", 4, ""MasterSlave"");"
115331,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java,381,,"    System.out.println(""END "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115332,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java,404,,"      tool.removeConstraint(clusterName, ConstraintType.MESSAGE_CONSTRAINT, ""constraint1"");"
115333,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java,533,,"    String testResourcePrefix = ""TestResource"";"
115334,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java,803,,"    builder.setCloudID(""TestID"");"
115335,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java,804,,"    builder.addCloudInfoSource(""TestURL"");"
115336,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java,806,,"    builder.setCloudInfoProcessorName(""TestProcessor"");"
115337,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java,936,,"    builder.addAggregationEnabledType(""mockType1"");"
115338,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/handling/TestConfigThreadpoolSize.java,49,,"      return ""TestMsg"";"
115339,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/handling/TestConfigThreadpoolSize.java,73,,"      return ""TestMsg2"";"
115340,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/handling/TestHelixTaskExecutor.java,57,,"    System.out.println(""START "" + TestHelper.getTestClassName());"
115341,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/handling/TestHelixTaskExecutor.java,152,,"        if (_message.getRecord().getSimpleFields().containsKey(""Cancelcount"")) {"
115342,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/handling/TestHelixTaskExecutor.java,262,,"        currentStateDelta.setState(message.getPartitionName(), ""SLAVE"");"
115343,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/handling/TestHelixTaskExecutor.java,265,,"        currentStateDelta.setState(message.getPartitionName(), ""MASTER"");"
115344,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/handling/TestHelixTaskExecutor.java,309,,"      msg.setTgtName(""Localhost_1123"");"
115345,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/handling/TestHelixTaskExecutor.java,310,,"      msg.setSrcName(""127.101.1.23_2234"");"
115346,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/handling/TestHelixTaskExecutor.java,325,,"    executor.onMessage(""someInstance"", msgList, changeContext);"
115347,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/handling/TestHelixTaskExecutor.java,505,,"    System.out.println(""END "" + TestHelper.getTestMethodName());"
115348,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PMessagesAvoidDuplicatedMessage.java,159,,"    currentStateOutput.setCurrentState(_db, _partition, initialMaster, ""SLAVE"");"
115349,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PMessagesAvoidDuplicatedMessage.java,216,,"    instanceStateMap.put(thirdMaster, ""MASTER"");"
115350,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PStateTransitionMessages.java,151,,"    currentStateOutput.setCurrentState(db, p, masterInstance, ""SLAVE"");"
115351,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PStateTransitionMessages.java,201,,"    pipeline = new Pipeline(""test"");"
115352,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PWithStateCancellationMessage.java,93,,"    resource.setStateModelDefRef(""MasterSlave"");"
115353,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PWithStateCancellationMessage.java,98,,"    LiveInstance l1 = new LiveInstance(""localhost_1"");"
115354,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PWithStateCancellationMessage.java,100,,"    LiveInstance l2 = new LiveInstance(""localhost_2"");"
115355,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PWithStateCancellationMessage.java,119,,"    message.setFromState(""MASTER"");"
115356,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PWithStateCancellationMessage.java,120,,"    message.setToState(""SLAVE"");"
115357,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/mock/MockBaseDataAccessor.java,181,,"        String[] keySplit = key.split(""\\/"");"
115358,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/mock/controller/MockControllerProcess.java,56,,"    storageController.sendMessage(""TestMessageId1"", ""localhost_8900"", ""Offline"", ""Slave"","
115359,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/mock/controller/MockControllerProcess.java,56,,"    storageController.sendMessage(""TestMessageId1"", ""localhost_8900"", ""Offline"", ""Slave"","
115360,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/mock/controller/MockControllerProcess.java,57,,"        ""EspressoDB.partition-0"", 0);"
115361,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/mock/participant/MockBootstrapStateModel.java,31,,"@StateModelInfo(initialState = ""OFFLINE"", states = {"
115362,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/mock/participant/MockDelayMSStateModel.java,32,,"    ""MASTER"", ""SLAVE"", ""ERROR"""
115363,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/mock/participant/MockSchemataStateModel.java,31,,"@StateModelInfo(initialState = ""OFFLINE"", states = {"
115364,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/mock/spectator/MockSpectatorProcess.java,63,,"    ZNRecord record = zkServer.getZkClient().readData(PropertyPathBuilder.idealState(clusterName, ""TestDB""));"
115365,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestClusterConfig.java,43,,"    ClusterConfig testConfig = new ClusterConfig(""testId"");"
115366,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestClusterConfig.java,189,,"    Map<String, Integer> capacityDataMap = ImmutableMap.of(""item1"", 1, ""item2"", 2, ""item3"", 3);"
115367,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestClusterConfig.java,189,,"    Map<String, Integer> capacityDataMap = ImmutableMap.of(""item1"", 1, ""item2"", 2, ""item3"", 3);"
115368,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestClusterConfig.java,189,,"    Map<String, Integer> capacityDataMap = ImmutableMap.of(""item1"", 1, ""item2"", 2, ""item3"", 3);"
115369,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestClusterConfig.java,216,,"    ClusterConfig testConfig = new ClusterConfig(""testConfig"");"
115370,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestClusterTrie.java,70,,"    _clusterConfig.setTopology(""/group/zone/rack/host"");"
115371,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,53,,"    record.setMapField(""constraint0"", new TreeMap<String, String>());"
115372,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,54,,"    record.getMapField(""constraint0"").put(""MESSAGE_TYPE"", ""STATE_TRANSITION"");"
115373,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,54,,"    record.getMapField(""constraint0"").put(""MESSAGE_TYPE"", ""STATE_TRANSITION"");"
115374,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,55,,"    record.getMapField(""constraint0"").put(""CONSTRAINT_VALUE"", ""ANY"");"
115375,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,60,,"    record.setMapField(""constraint1"", new TreeMap<String, String>());"
115376,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,62,,"    record.getMapField(""constraint1"").put(""TRANSITION"", ""OFFLINE-SLAVE"");"
115377,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,62,,"    record.getMapField(""constraint1"").put(""TRANSITION"", ""OFFLINE-SLAVE"");"
115378,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,68,,"    record.setMapField(""constraint2"", new TreeMap<String, String>());"
115379,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,71,,"    record.getMapField(""constraint2"").put(""INSTANCE"", "".*"");"
115380,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,72,,"    record.getMapField(""constraint2"").put(""RESOURCE"", ""TestDB"");"
115381,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,72,,"    record.getMapField(""constraint2"").put(""RESOURCE"", ""TestDB"");"
115382,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,78,,"    record.setMapField(""constraint3"", new TreeMap<String, String>());"
115383,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,88,,"    record.setMapField(""constraint4"", new TreeMap<String, String>());"
115384,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,98,,"    record.setMapField(""constraint5"", new TreeMap<String, String>());"
115385,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,126,,"    System.out.println(msg1 + "" matches("" + matches.size() + ""): "" + matches);"
115386,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,126,,"    System.out.println(msg1 + "" matches("" + matches.size() + ""): "" + matches);"
115387,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestConstraint.java,164,,"    record.getMapField(""constraint0"").put(""STATE"", ""MASTER"");"
115388,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestCustomizedStateConfig.java,39,,"    String clusterName = ""CLUSTER_"" + className;"
115389,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestCustomizedStateConfig.java,68,,"    aggregationEnabledTypes.add(""mockType1"");"
115390,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestCustomizedStateConfig.java,69,,"    aggregationEnabledTypes.add(""mockType2"");"
115391,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestInstanceConfig.java,65,,"    Map<String, Integer> capacityDataMap = ImmutableMap.of(""item1"", 1,"
115392,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestInstanceConfig.java,66,,"        ""item2"", 2,"
115393,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestInstanceConfig.java,67,,"        ""item3"", 3);"
115394,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestInstanceConfig.java,96,,"    InstanceConfig testConfig = new InstanceConfig(""testConfig"");"
115395,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestLiveInstance.java,81,,"    Assert.assertNotNull(instances, ""Expecting a list of live instance"");"
115396,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestParticipantHistory.java,20,,"    ParticipantHistory participantHistory = new ParticipantHistory(""testId"");"
115397,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestResourceConfig.java,38,,"    Map<String, Integer> capacityDataMap = ImmutableMap.of(""item1"", 1,"
115398,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestResourceConfig.java,39,,"        ""item2"", 2,"
115399,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestResourceConfig.java,40,,"        ""item3"", 3);"
115400,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestResourceConfig.java,42,,"    ZNRecord rec = new ZNRecord(""testId"");"
115401,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestResourceConfig.java,90,,"    ResourceConfig testConfig = new ResourceConfig(""testConfig"");"
115402,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestStateModelValidity.java,60,,"        new StateModelDefinition.Builder(""stateModel"").initialState(""OFFLINE"").addState(""OFFLINE"")"
115403,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestStateModelValidity.java,60,,"        new StateModelDefinition.Builder(""stateModel"").initialState(""OFFLINE"").addState(""OFFLINE"")"
115404,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestStateModelValidity.java,61,,"            .addState(""MASTER"").addState(""SLAVE"").addTransition(""OFFLINE"", ""SLAVE"")"
115405,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestStateModelValidity.java,61,,"            .addState(""MASTER"").addState(""SLAVE"").addTransition(""OFFLINE"", ""SLAVE"")"
115406,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestStateModelValidity.java,74,,"            .addState(""MASTER"").addState(""SLAVE"").addState(""DROPPED"")"
115407,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestStateModelValidity.java,164,,"        Lists.newArrayList(""ONE"", ""TWO"", ""THREE"", ""OFFLINE"", ""DROPPED"", ""ERROR"");"
115408,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestStateModelValidity.java,164,,"        Lists.newArrayList(""ONE"", ""TWO"", ""THREE"", ""OFFLINE"", ""DROPPED"", ""ERROR"");"
115409,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestStateModelValidity.java,164,,"        Lists.newArrayList(""ONE"", ""TWO"", ""THREE"", ""OFFLINE"", ""DROPPED"", ""ERROR"");"
115410,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/TestStateTransitionProperty.java,32,,"    stateTransitionTimeoutConfig.setStateTransitionTimeout(""MASTER"", ""SLAVE"", 300);"
115411,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/builder/TestIdealStateBuilder.java,31,,"    builder.assignPreferenceList(""test-db_0"", ""node_0"", ""node_1"").assignPreferenceList(""test-db_1"","
115412,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/builder/TestIdealStateBuilder.java,31,,"    builder.assignPreferenceList(""test-db_0"", ""node_0"", ""node_1"").assignPreferenceList(""test-db_1"","
115413,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/builder/TestIdealStateBuilder.java,31,,"    builder.assignPreferenceList(""test-db_0"", ""node_0"", ""node_1"").assignPreferenceList(""test-db_1"","
115414,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/builder/TestIdealStateBuilder.java,31,,"    builder.assignPreferenceList(""test-db_0"", ""node_0"", ""node_1"").assignPreferenceList(""test-db_1"","
115415,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/cloud/TestCloudConfig.java,41,,"    String clusterName = ""CLUSTER_"" + className;"
115416,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/cloud/TestCloudConfig.java,69,,"    cloudConfigBuilder.setCloudID(""TestID"");"
115417,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/cloud/TestCloudConfig.java,73,,"    cloudConfigBuilder.setCloudInfoProcessorName(""TestProcessor"");"
115418,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/cloud/TestCloudConfig.java,139,,"    builder.addCloudInfoSource(""TestURL0"");"
115419,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/model/cloud/TestCloudConfig.java,140,,"    builder.addCloudInfoSource(""TestURL1"");"
115420,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/TestClusterStatusMonitorLifecycle.java,189,,"        .queryMBeans(new ObjectName(""ClusterStatus:*""), exp1));"
115421,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/TestParticipantMonitor.java,191,,"        new ParticipantMonitorListener(DOMAIN_NAME, ""ParticipantName"", PARTICIPANT_NAME);"
115422,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/TestParticipantMonitor.java,195,,"        getObjectName(""ParticipantName=participant_0,MonitorType=ParticipantMessageMonitor"")"
115423,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/TestParticipantMonitor.java,199,,"            .toString()).get(""PendingMessages""), 1L);"
115424,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/TestZKPathDataDumpTask.java,54,,"        ""TestDB"", // resource name prefix"
115425,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/TestZKPathDataDumpTask.java,78,,"    PropertyKey statusUpdateKey = keyBuilder.stateTransitionStatus(""localhost_12918"");"
115426,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/TestZKPathDataDumpTask.java,84,,"        keyBuilder.stateTransitionStatus(""localhost_12918"", ""session_0"", ""TestDB0"", ""TestDB0_0"");"
115427,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/TestZKPathDataDumpTask.java,84,,"        keyBuilder.stateTransitionStatus(""localhost_12918"", ""session_0"", ""TestDB0"", ""TestDB0_0"");"
115428,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/TestZKPathDataDumpTask.java,84,,"        keyBuilder.stateTransitionStatus(""localhost_12918"", ""session_0"", ""TestDB0"", ""TestDB0_0"");"
115429,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/mbeans/TestClusterStatusMonitor.java,76,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115430,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/mbeans/TestClusterStatusMonitor.java,86,,"    bestPossibleStates.setState(testDB, new Partition(testDB_0), ""localhost_12918"", ""MASTER"");"
115431,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/mbeans/TestClusterStatusMonitor.java,87,,"    bestPossibleStates.setState(testDB, new Partition(testDB_0), ""localhost_12919"", ""SLAVE"");"
115432,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/mbeans/TestClusterStatusMonitor.java,116,,"    Object value = _server.getAttribute(objName, ""PartitionGauge"");"
115433,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/mbeans/TestClusterStatusMonitor.java,430,,"          .format(""%s,%s=%s"", monitor.clusterBeanName(), ClusterStatusMonitor.INSTANCE_DN_KEY,"
115434,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/mbeans/TestResourceMonitor.java,70,,"          .calculateIdealState(instances, _partitions, _replicas - 1, _dbName, ""MASTER"", ""SLAVE"");"
115435,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/mbeans/TestRoutingTableProviderMonitor.java,108,,"      _beanServer.getAttribute(name, ""StatePropagationLatencyGauge.Max"");"
115436,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/mbeans/TestTopStateHandoffMetrics.java,154,,"  @Test(dataProvider = ""successCurrentStateInput"")"
115437,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/mbeans/TestTopStateHandoffMetrics.java,247,,"      if (states.currentState.equals(""MASTER"")) {"
115438,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/mbeans/TestZkClientMonitor.java,135,,"    Assert.assertEquals((long) _beanServer.getAttribute(rootName, ""ReadCounter""), 1);"
115439,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/monitoring/mbeans/TestZkClientMonitor.java,145,,"    monitor.record(""TEST/INSTANCES/node_1/CURRENTSTATES/session_1/Resource"", 5,"
115440,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/participant/TestDistControllerElection.java,59,,"    final String clusterName = CLUSTER_PREFIX + ""_"" + className + ""_"" + ""testController"";"
115441,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/participant/TestDistControllerStateModel.java,65,,"    message.setTgtName(""controller_0"");"
115442,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/participant/statemachine/TestStateModelParser.java,35,,"  @StateModelInfo(initialState = ""OFFLINE"", states = {"
115443,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/participant/statemachine/TestStateModelParser.java,36,,"      ""MASTER"", ""SLAVE"", ""ERROR"""
115444,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestAutoFallbackPropertyStore.java,50,,"        currentData.setSimpleField(""key"", ""value"");"
115445,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestAutoFallbackPropertyStore.java,50,,"        currentData.setSimpleField(""key"", ""value"");"
115446,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestAutoFallbackPropertyStore.java,62,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115447,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestAutoFallbackPropertyStore.java,62,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115448,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestAutoFallbackPropertyStore.java,63,,"    String root = String.format(""/%s/%s"", clusterName, PropertyType.PROPERTYSTORE.name());"
115449,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestAutoFallbackPropertyStore.java,64,,"    String fallbackRoot = String.format(""/%s/%s"", clusterName, ""HELIX_PROPERTYSTORE"");"
115450,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestAutoFallbackPropertyStore.java,69,,"      String path = String.format(""%s/%d"", fallbackRoot, i);"
115451,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestAutoFallbackPropertyStore.java,76,,"    String path = String.format(""/%d"", 0);"
115452,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestAutoFallbackPropertyStore.java,77,,"    Assert.assertFalse(baseAccessor.exists(String.format(""%s%s"", root, path), 0),"
115453,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestAutoFallbackPropertyStore.java,78,,"        ""Should not exist under new location"");"
115454,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestAutoFallbackPropertyStore.java,80,,"        ""Should exist under fallback location"");"
115455,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestAutoFallbackPropertyStore.java,82,,"    boolean succeed = store.update(path, new MyDataUpdater(""new0""), AccessOption.PERSISTENT);"
115456,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestAutoFallbackPropertyStore.java,99,,"    System.out.println(""END "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115457,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestAutoFallbackPropertyStore.java,116,,"      baseAccessor.create(path, new ZNRecord(""new"" + i), AccessOption.PERSISTENT);"
115458,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestAutoFallbackPropertyStore.java,240,,"            ""Should not exist under fallback location"");"
115459,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestZkHelixPropertyStore.java,169,,"    System.out.println(""createKey#:"" + listener._createKeys.size() + "", changeKey#:"""
115460,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestZkHelixPropertyStore.java,169,,"    System.out.println(""createKey#:"" + listener._createKeys.size() + "", changeKey#:"""
115461,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestZkHelixPropertyStore.java,170,,"        + listener._changeKeys.size() + "", deleteKey#:"" + listener._deleteKeys.size());"
115462,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestZkHelixPropertyStore.java,172,,"        ""Should receive "" + expectCreateNodes + "" create callbacks"");"
115463,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestZkHelixPropertyStore.java,274,,"    store.set(""/child0"", new ZNRecord(""child0""), AccessOption.PERSISTENT);"
115464,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestZkManagerWithAutoFallbackStore.java,67,,"      record.setSimpleField(""key1"", ""value1"");"
115465,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/store/zk/TestZkManagerWithAutoFallbackStore.java,75,,"      String path = String.format(""/%d"", i);"
115466,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/task/TestCleanExpiredJobs.java,55,,"      builder.enqueueJob(""JOB"" + i, jobBuilder);"
115467,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/task/TestFixedTargetedTaskAssignmentCalculator.java,229,,"    currentStateOutput.setCurrentState(TARGET_RESOURCES, dbPartition, slaveInstance1, ""SLAVE"");"
115468,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/task/TestGetLastScheduledTaskExecInfo.java,58,,"    _driver.pollForJobState(queueName, queueName + ""_job_0"", TaskState.IN_PROGRESS);"
115469,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/task/TestScheduleDelayJobs.java,49,,"    builder.addParentChildDependency(""JOB0"", ""JOB1"");"
115470,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/task/TestScheduleDelayJobs.java,49,,"    builder.addParentChildDependency(""JOB0"", ""JOB1"");"
115471,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/task/TestTargetedTaskStateChange.java,170,,"    targetPartitionStates.add(""MASTER"");"
115472,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/task/TestTaskUtil.java,53,,"        new JobConfig.Builder().setJobId(""Job_0"").setTargetResource(""1"").setCommand(""1"")"
115473,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/task/TestTaskUtil.java,56,,"        new JobConfig.Builder().setJobId(""Job_1"").setTargetResource(""1"").setCommand(""1"")"
115474,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/task/TestTaskUtil.java,59,,"        new JobConfig.Builder().setJobId(""Job_2"").setTargetResource(""1"").setCommand(""1"")"
115475,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/task/TestTaskUtil.java,62,,"        new JobConfig.Builder().setJobId(""Job_3"").setTargetResource(""1"").setCommand(""1"")"
115476,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/task/TestTaskUtil.java,70,,"    jobStates.put(workflowName + ""_Job_0"", TaskState.COMPLETED);"
115477,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/task/TestTaskUtil.java,71,,"    jobStates.put(workflowName + ""_Job_1"", TaskState.COMPLETED);"
115478,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/task/TestTaskUtil.java,72,,"    jobStates.put(workflowName + ""_Job_2"", TaskState.FAILED);"
115479,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/task/TestTaskUtil.java,73,,"    jobStates.put(workflowName + ""_Job_3"", TaskState.COMPLETED);"
115480,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java,59,,"  protected static final String TEST_DB = ""TestDB"";"
115481,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java,61,,"  protected static final String STATE_MODEL = ""MasterSlave"";"
115482,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java,115,,"  @Test(dependsOnMethods = ""testAddClusterWithValidCloudConfig"")"
115483,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java,245,,"        .processCommandLineArgs(createArgs(""-zkSvr "" + ZK_ADDR + "" --addCluster "" + CLUSTER_NAME));"
115484,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java,280,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115485,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java,280,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115486,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java,290,,"        ""--zkSvr"", ZK_ADDR, ""--setConfig"", ConfigScopeProperty.PARTICIPANT.toString(), scopeArgs,"
115487,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java,311,,"    System.out.println(""END "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115488,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java,455,,"        ""--zkSvr"", ZK_ADDR, ""--enableResource"", clusterName, ""TestDB0"", ""false"""
115489,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java,500,,"    cloudConfigInitBuilder.setCloudID(""TestID"");"
115490,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestHelixAdminCli.java,71,,"    ClusterSetup.processCommandLineArgs(command.split(""\\s+""));"
115491,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestHelixAdminCli.java,123,,"    command = ""-zkSvr localhost:2183 -addResource "" + clusterName + "" db_22 144 MasterSlave"";"
115492,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestHelixAdminCli.java,139,,"    command = ""-zkSvr localhost:2183 -dropResource "" + clusterName + "" db_11 "";"
115493,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestHelixAdminCli.java,149,,"      command = ""-zkSvr localhost:2183 -addNode "" + clusterName + "" localhost:123"" + i;"
115494,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestHelixAdminCli.java,149,,"      command = ""-zkSvr localhost:2183 -addNode "" + clusterName + "" localhost:123"" + i;"
115495,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestHelixAdminCli.java,212,,"    command = ""-zkSvr localhost:2183 -addResource "" + clusterName + "" db_11 48 MasterSlave"";"
115496,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestHelixAdminCli.java,324,,"    IdealState idealState = accessor.getProperty(accessor.keyBuilder().idealStates(""db_11""));"
115497,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestHelixAdminCli.java,337,,"    String command = ""-zkSvr "" + ZK_ADDR + "" -dropResource "" + clusterName + "" db_11 "";"
115498,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestHelixAdminCli.java,377,,"      command = ""-zkSvr "" + ZK_ADDR + "" -addNode "" + clusterName + "" localhost:123"" + i;"
115499,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestHelixAdminCli.java,386,,"    command = ""-zkSvr "" + ZK_ADDR + "" -rebalance "" + clusterName + "" db_11 2 -key alias"";"
115500,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestZkCopy.java,41,,"    System.out.println(""START "" + clusterName + "" at "" + new Date(System.currentTimeMillis()));"
115501,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/tools/TestZkCopy.java,55,,"        new String[] { ""--src"", ""zk://"" + ZK_ADDR + fromPath, ""--dst"", ""zk://"" + ZK_ADDR + toPath });"
115502,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/util/TestInstanceValidationUtil.java,124,,"    String sessionId = ""sessionId"";"
115503,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/util/TestInstanceValidationUtil.java,134,,"    when(currentState.getPartitionStateMap()).thenReturn(ImmutableMap.of(""db0"", ""master""));"
115504,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/util/TestInstanceValidationUtil.java,275,,"    when(currentState.getPartitionStateMap()).thenReturn(ImmutableMap.of(""db0"", ""Master""));"
115505,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/util/TestInstanceValidationUtil.java,309,,"    when(idealState.getStateModelDefRef()).thenReturn(""MasterSlave"");"
115506,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/util/TestInstanceValidationUtil.java,373,,"    String resource = ""resource"";"
115507,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/util/TestInstanceValidationUtil.java,390,,"        ""instance1"", ""Slave"", ""instance2"", ""Slave"", ""instance3"", ""Slave""));"
115508,./TargetProjects/helix/helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java,72,,"        ""TestDB"", // resource name prefix"
115509,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java,146,,"      throw new NoSuchElementException(""Namespace "" + namespace + "" does not exist!"");"
115510,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java,146,,"      throw new NoSuchElementException(""Namespace "" + namespace + "" does not exist!"");"
115511,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java,175,,"          ""Failed to set routing data: Namespace "" + namespace + "" is not found!"");"
115512,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataWriter.java,143,,"        throw new IllegalStateException(""ZkClient is closed!"");"
115513,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ClusterAccessor.java,116,,"  @Path(""{clusterId}"")"
115514,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ClusterAccessor.java,117,,"  public Response getClusterInfo(@PathParam(""clusterId"") String clusterId) {"
115515,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ClusterAccessor.java,213,,"      @QueryParam(""command"") String commandStr, @QueryParam(""superCluster"") String superCluster,"
115516,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ClusterAccessor.java,442,,"  @Path(""{clusterId}/customized-state-config"")"
115517,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ClusterAccessor.java,446,,"      return notFound(String.format(""Cluster %s does not exist"", clusterId));"
115518,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ClusterAccessor.java,544,,"        return badRequest(""Unsupported command "" + commandStr);"
115519,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ClusterAccessor.java,615,,"      LOG.error(""Failed to deserialize user's input {}. Exception: {}."", content, e);"
115520,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ClusterAccessor.java,616,,"      return badRequest(""Input is not a valid ZNRecord!"");"
115521,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ClusterAccessor.java,755,,"  @Path(""{clusterId}/statemodeldefs/{statemodel}"")"
115522,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ClusterAccessor.java,757,,"      @PathParam(""statemodel"") String statemodel) {"
115523,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ClusterAccessor.java,851,,"  @Path(""{clusterId}/restconfig"")"
115524,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ClusterAccessor.java,986,,"  @Path(""{clusterId}/cloudconfig"")"
115525,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/InstancesAccessor.java,143,,"      _logger.error(""Unsupported command :"" + command);"
115526,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/JobAccessor.java,69,,"  public Response getJobs(@PathParam(""clusterId"") String clusterId,"
115527,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/JobAccessor.java,70,,"      @PathParam(""workflowName"") String workflowName) {"
115528,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/JobAccessor.java,94,,"      @PathParam(""workflowName"") String workflowName, @PathParam(""jobName"") String jobName) {"
115529,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/PerInstanceAccessor.java,92,,"  public Response getInstanceById(@PathParam(""clusterId"") String clusterId,"
115530,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/PerInstanceAccessor.java,93,,"      @PathParam(""instanceName"") String instanceName, @QueryParam(""skipZKRead"") String skipZKRead,"
115531,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/PerInstanceAccessor.java,131,,"      LOG.error(""Unsupported command :"" + command);"
115532,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ResourceAccessor.java,84,,"  public Response getResources(@PathParam(""clusterId"") String clusterId) {"
115533,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ResourceAccessor.java,167,,"      @PathParam(""resourceName"") String resourceName) {"
115534,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ResourceAccessor.java,175,,"  @Path(""{resourceName}"")"
115535,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ResourceAccessor.java,178,,"      @DefaultValue(""getResource"") @QueryParam(""command"") String command) {"
115536,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/ResourceAccessor.java,224,,"      _logger.error(""Unsupported command :"" + command);"
115537,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/WorkflowAccessor.java,84,,"  public Response getWorkflows(@PathParam(""clusterId"") String clusterId) {"
115538,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/WorkflowAccessor.java,96,,"  @Path(""{workflowId}"")"
115539,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/WorkflowAccessor.java,98,,"      @PathParam(""workflowId"") String workflowId) {"
115540,./TargetProjects/helix/helix-rest/src/main/java/org/apache/helix/rest/server/resources/metadatastore/MetadataStoreDirectoryAccessor.java,134,,"  public Response addMetadataStoreRealm(@PathParam(""realm"") String realm) {"
115541,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/client/TestCustomRestClient.java,118,,"        ImmutableList.of(""db0"", ""db1""), Collections.emptyMap());"
115542,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/client/TestCustomRestClient.java,118,,"        ImmutableList.of(""db0"", ""db1""), Collections.emptyMap());"
115543,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/metadatastore/integration/TestRoutingDataUpdate.java,95,,"    put(""/clusters"" + CLUSTER_0_SHARDING_KEY, null,"
115544,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,87,,"    System.out.println(""Start test :"" + TestHelper.getTestMethodName());"
115545,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,104,,"    System.out.println(""End test :"" + TestHelper.getTestMethodName());"
115546,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,110,,"    String cluster = ""TestCluster_1"";"
115547,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,175,,"    Assert.assertTrue(topologyMap.get(""/helixZoneId:zone0"") instanceof List);"
115548,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,185,,"    Assert.assertTrue(topologyMap.get(""/helixZoneId:zone1"") instanceof List);"
115549,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,248,,"        ""cluster config from response: "" + newConfig + "" vs cluster config actually: "" + oldConfig);"
115550,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,248,,"        ""cluster config from response: "" + newConfig + "" vs cluster config actually: "" + oldConfig);"
115551,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,337,,"    put(""clusters/"" + cluster, null, Entity.entity("""", MediaType.APPLICATION_JSON_TYPE),"
115552,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,363,,"    post(""clusters/"" + cluster, ImmutableMap.of(""command"", ""disable""),"
115553,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,732,,"    put(""clusters/"" + cluster + ""/restconfig"", null, Entity"
115554,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,797,,"    ZNRecord record = new ZNRecord(""testZnode"");"
115555,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,799,,"    record.setSimpleField(CloudConfig.CloudConfigProperty.CLOUD_ID.name(), ""TestCloudID"");"
115556,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,804,,"    map.put(""addCloudConfig"", ""true"");"
115557,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,804,,"    map.put(""addCloudConfig"", ""true"");"
115558,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,876,,"    sourceList.add(""TestURL"");"
115559,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,879,,"        ""TestProcessorName"");"
115560,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,933,,"    ZNRecord record = new ZNRecord(""TestCloud"");"
115561,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,1153,,"    ZNRecord record = new ZNRecord(""TestCustomizedStateConfig"");"
115562,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,1155,,"    testList.add(""mockType1"");"
115563,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,1171,,"    _gSetupTool.addCluster(""TestClusterCustomized"", true);"
115564,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestClusterAccessor.java,1176,,"    testList.add(""mockType2"");"
115565,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestInstancesAccessor.java,68,,"        ImmutableSet.of(""HELIX:MIN_ACTIVE_REPLICA_CHECK_FAILED""));"
115566,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestInstancesAccessor.java,81,,"    System.out.println(""End test :"" + TestHelper.getTestMethodName());"
115567,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestJobAccessor.java,59,,"    System.out.println(""Start test :"" + TestHelper.getTestMethodName());"
115568,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestJobAccessor.java,61,,"    String body = get(""clusters/"" + CLUSTER_NAME + ""/workflows/"" + WORKFLOW_NAME + ""/jobs"", null,"
115569,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestJobAccessor.java,61,,"    String body = get(""clusters/"" + CLUSTER_NAME + ""/workflows/"" + WORKFLOW_NAME + ""/jobs"", null,"
115570,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestJobAccessor.java,70,,"    System.out.println(""End test :"" + TestHelper.getTestMethodName());"
115571,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestJobAccessor.java,78,,"        get(""clusters/"" + CLUSTER_NAME + ""/workflows/"" + WORKFLOW_NAME + ""/jobs/"" + JOB_NAME, null,"
115572,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestJobAccessor.java,160,,"    post(uri, ImmutableMap.of(""command"", ""update""), entity, Response.Status.OK.getStatusCode());"
115573,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestMSDAccessorLeaderElection.java,132,,"        buildRequest(""/metadata-store-realms/"" + TEST_REALM_3, HttpConstants.RestVerbs.PUT, """");"
115574,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestMetadataStoreDirectoryAccessor.java,52,,"    @SuppressWarnings(""unchecked"")"
115575,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestMetadataStoreDirectoryAccessor.java,141,,"    put(TEST_NAMESPACE_URI_PREFIX + ""/metadata-store-realms/"" + TEST_REALM_3, null,"
115576,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestMetadataStoreDirectoryAccessor.java,186,,"        get(TEST_NAMESPACE_URI_PREFIX + ""/sharding-keys"", null, Response.Status.OK.getStatusCode(),"
115577,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestMetadataStoreDirectoryAccessor.java,217,,"        TEST_NAMESPACE_URI_PREFIX + ""/sharding-keys?prefix="" + INVALID_TEST_SHARDING_KEY)"
115578,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestNamespacedAPIAccess.java,49,,"    put(String.format(""/clusters/%s"", testClusterName), null, Entity.entity("""", MediaType.APPLICATION_JSON_TYPE),"
115579,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestNamespacedAPIAccess.java,63,,"    put(String.format(""/namespaces/%s/clusters/%s"", TEST_NAMESPACE, testClusterName), null,"
115580,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestPerInstanceAccessor.java,56,,"  private final static String INSTANCE_NAME = CLUSTER_NAME + ""localhost_12918"";"
115581,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestPerInstanceAccessor.java,60,,"    System.out.println(""Start test :"" + TestHelper.getTestMethodName());"
115582,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestPerInstanceAccessor.java,74,,"    System.out.println(""End test :"" + TestHelper.getTestMethodName());"
115583,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestPerInstanceAccessor.java,179,,"    InstanceConfig instanceConfig = new InstanceConfig(INSTANCE_NAME + ""TEST"");"
115584,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestPerInstanceAccessor.java,295,,"    String value = ""value"";"
115585,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestResourceAccessor.java,66,,"    System.out.println(""Start test :"" + TestHelper.getTestMethodName());"
115586,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestResourceAccessor.java,68,,"    String body = get(""clusters/"" + CLUSTER_NAME + ""/resources"", null,"
115587,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestResourceAccessor.java,80,,"    System.out.println(""End test :"" + TestHelper.getTestMethodName());"
115588,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestResourceAccessor.java,86,,"    String body = get(""clusters/"" + CLUSTER_NAME + ""/resources/"" + RESOURCE_NAME, null,"
115589,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestResourceAccessor.java,135,,"    String body = get(""clusters/"" + CLUSTER_NAME + ""/resources/"" + RESOURCE_NAME + ""/configs"", null,"
115590,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestResourceAccessor.java,147,,"    String body = get(""clusters/"" + CLUSTER_NAME + ""/resources/"" + RESOURCE_NAME + ""/idealState"","
115591,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestResourceAccessor.java,197,,"    idealStateParams.put(""MaxPartitionsPerInstance"", ""3"");"
115592,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestResourceAccessor.java,204,,"        ""MASTER"", ""SLAVE"", ""SLAVE"""
115593,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestResourceAccessor.java,204,,"        ""MASTER"", ""SLAVE"", ""SLAVE"""
115594,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestResourceAccessor.java,207,,"        ""MASTER"", ""SLAVE"", ""ERROR"""
115595,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestResourceAccessor.java,348,,"        Collections.singletonMap(""command"", ""update""), entity, Response.Status.OK.getStatusCode());"
115596,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestResourceAccessor.java,348,,"        Collections.singletonMap(""command"", ""update""), entity, Response.Status.OK.getStatusCode());"
115597,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestResourceAssignmentOptimizerAccessor.java,106,,"    String payload2 = ""{\""Options\"" : { \""InstanceFilter\"" : [\"""" + liveInstances.get(0) + ""\"" , \"""""
115598,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestResourceAssignmentOptimizerAccessor.java,107,,"        + liveInstances.get(1) + ""\""] }}  "";"
115599,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestTaskAccessor.java,41,,"    String uri = ""clusters/"" + CLUSTER_NAME + ""/workflows/Workflow_0/jobs/JOB0/tasks/0/userContent"";"
115600,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestTaskAccessor.java,56,,"    post(uri, ImmutableMap.of(""command"", ""update""), entity, Response.Status.OK.getStatusCode());"
115601,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestTaskAccessor.java,56,,"    post(uri, ImmutableMap.of(""command"", ""update""), entity, Response.Status.OK.getStatusCode());"
115602,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestWorkflowAccessor.java,62,,"    System.out.println(""Start test :"" + TestHelper.getTestMethodName());"
115603,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestWorkflowAccessor.java,65,,"        get(""clusters/"" + CLUSTER_NAME + ""/workflows"", null, Response.Status.OK.getStatusCode(), true);"
115604,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestWorkflowAccessor.java,71,,"    System.out.println(""End test :"" + TestHelper.getTestMethodName());"
115605,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestWorkflowAccessor.java,77,,"    String body = get(""clusters/"" + CLUSTER_NAME + ""/workflows/"" + WORKFLOW_NAME, null,"
115606,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestWorkflowAccessor.java,157,,"        ImmutableMap.of(""command"", ""stop""), entity, Response.Status.OK.getStatusCode());"
115607,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestZooKeeperAccessor.java,70,,"    String path = ""/path"";"
115608,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/TestZooKeeperAccessor.java,76,,"    Assert.assertTrue(result.containsKey(""exists""));"
115609,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/service/TestInstanceService.java,83,,"    Map<String, Boolean> failedCheck = ImmutableMap.of(""FailCheck"", false);"
115610,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/util/TestInstanceValidationUtilInRest.java,55,,"    when(mock.stateModel.getTopState()).thenReturn(""MASTER"");"
115611,./TargetProjects/helix/helix-rest/src/test/java/org/apache/helix/rest/server/util/TestInstanceValidationUtilInRest.java,112,,"    externalView.setState(""p1"", ""h2"", ""SLAVE"");"
115612,./TargetProjects/helix/metadata-store-directory-common/src/test/java/org/apache/helix/msdcommon/datamodel/TestTrieRoutingData.java,41,,"      Assert.fail(""Expecting InvalidRoutingDataException"");"
115613,./TargetProjects/helix/metadata-store-directory-common/src/test/java/org/apache/helix/msdcommon/datamodel/TestTrieRoutingData.java,82,,"    routingData.put(""realmAddress1"", Arrays.asList(""/g"", ""/h/i"", ""/h/j""));"
115614,./TargetProjects/helix/metadata-store-directory-common/src/test/java/org/apache/helix/msdcommon/datamodel/TestTrieRoutingData.java,82,,"    routingData.put(""realmAddress1"", Arrays.asList(""/g"", ""/h/i"", ""/h/j""));"
115615,./TargetProjects/helix/metadata-store-directory-common/src/test/java/org/apache/helix/msdcommon/datamodel/TestTrieRoutingData.java,83,,"    routingData.put(""realmAddress2"", Arrays.asList(""b/c/d"", ""/b/f""));"
115616,./TargetProjects/helix/metadata-store-directory-common/src/test/java/org/apache/helix/msdcommon/datamodel/TestTrieRoutingData.java,83,,"    routingData.put(""realmAddress2"", Arrays.asList(""b/c/d"", ""/b/f""));"
115617,./TargetProjects/helix/metadata-store-directory-common/src/test/java/org/apache/helix/msdcommon/datamodel/TestTrieRoutingData.java,84,,"    routingData.put(""realmAddress3"", Collections.singletonList(""/b/c/e""));"
115618,./TargetProjects/helix/metadata-store-directory-common/src/test/java/org/apache/helix/msdcommon/datamodel/TestTrieRoutingData.java,84,,"    routingData.put(""realmAddress3"", Collections.singletonList(""/b/c/e""));"
115619,./TargetProjects/helix/metadata-store-directory-common/src/test/java/org/apache/helix/msdcommon/datamodel/TestTrieRoutingData.java,149,,"    routingData.put(""realmAddress2"", Arrays.asList(""/b/c/d"", ""/b/f""));"
115620,./TargetProjects/helix/metadata-store-directory-common/src/test/java/org/apache/helix/msdcommon/datamodel/TestTrieRoutingData.java,158,,"  @Test(dependsOnMethods = ""testConstructionNormal"")"
115621,./TargetProjects/helix/metadata-store-directory-common/src/test/java/org/apache/helix/msdcommon/datamodel/TestTrieRoutingData.java,162,,"      Assert.fail(""Expecting IllegalArgumentException"");"
115622,./TargetProjects/helix/metadata-store-directory-common/src/test/java/org/apache/helix/msdcommon/datamodel/TestTrieRoutingData.java,247,,"      Assert.fail(""Expecting NoSuchElementException"");"
115623,./TargetProjects/helix/recipes/distributed-lock-manager/src/main/java/org/apache/helix/lockmanager/Lock.java,28,,"@StateModelInfo(initialState = ""OFFLINE"", states = {"
115624,./TargetProjects/helix/recipes/rabbitmq-consumer-group/src/main/java/org/apache/helix/recipes/rabbitmq/ConsumerStateModel.java,30,,"@StateModelInfo(initialState = ""OFFLINE"", states = {"
115625,./TargetProjects/helix/recipes/rabbitmq-consumer-group/src/main/java/org/apache/helix/recipes/rabbitmq/ConsumerStateModel.java,67,,"      LOG.debug(""Stopping "" + _consumerId + "" for "" + _partition + ""..."");"
115626,./TargetProjects/helix/recipes/rabbitmq-consumer-group/src/main/java/org/apache/helix/recipes/rabbitmq/ConsumerStateModel.java,67,,"      LOG.debug(""Stopping "" + _consumerId + "" for "" + _partition + ""..."");"
115627,./TargetProjects/helix/recipes/rsync-replicated-file-system/src/main/java/org/apache/helix/filestore/ExternalCommand.java,210,,"      throw new IllegalStateException(""you must call start first"");"
115628,./TargetProjects/helix/recipes/rsync-replicated-file-system/src/main/java/org/apache/helix/filestore/FileStoreStateModel.java,37,,"@StateModelInfo(initialState = ""OFFLINE"", states = {"
115629,./TargetProjects/helix/recipes/rsync-replicated-file-system/src/main/java/org/apache/helix/filestore/FileStoreStateModel.java,38,,"    ""OFFLINE"", ""MASTER"", ""SLAVE"""
115630,./TargetProjects/helix/recipes/rsync-replicated-file-system/src/main/java/org/apache/helix/filestore/FileStoreStateModel.java,55,,"        int currentGen = convertToInt(newRec.getSimpleField(""currentGen""), 0);"
115631,./TargetProjects/helix/recipes/rsync-replicated-file-system/src/main/java/org/apache/helix/filestore/FileStoreStateModel.java,56,,"        int currentGenStartSeq = convertToInt(newRec.getSimpleField(""currentGenStartSeq""), 0);"
115632,./TargetProjects/helix/recipes/rsync-replicated-file-system/src/main/java/org/apache/helix/filestore/FileStoreStateModel.java,127,,"    System.out.println(_serverId + "" transitioning from "" + message.getFromState() + "" to """
115633,./TargetProjects/helix/recipes/rsync-replicated-file-system/src/main/java/org/apache/helix/filestore/FileStoreStateModel.java,127,,"    System.out.println(_serverId + "" transitioning from "" + message.getFromState() + "" to """
115634,./TargetProjects/helix/recipes/rsync-replicated-file-system/src/main/java/org/apache/helix/filestore/FileStoreStateModel.java,128,,"        + message.getToState() + "" for "" + _partition);"
115635,./TargetProjects/helix/recipes/rsync-replicated-file-system/src/main/java/org/apache/helix/filestore/IntegrationTest.java,69,,"      setup.addInstanceToCluster(clusterName, ""localhost_12001"");"
115636,./TargetProjects/helix/recipes/rsync-replicated-file-system/src/main/java/org/apache/helix/filestore/IntegrationTest.java,70,,"      setup.addInstanceToCluster(clusterName, ""localhost_12002"");"
115637,./TargetProjects/helix/recipes/rsync-replicated-file-system/src/main/java/org/apache/helix/filestore/IntegrationTest.java,71,,"      setup.addInstanceToCluster(clusterName, ""localhost_12003"");"
115638,./TargetProjects/helix/recipes/rsync-replicated-file-system/src/main/java/org/apache/helix/filestore/IntegrationTest.java,127,,"          + ""localhost_12001"" + ""/filestore"");"
115639,./TargetProjects/helix/recipes/rsync-replicated-file-system/src/main/java/org/apache/helix/filestore/Replicator.java,87,,"    String remoteChangeLogDir = masterInstanceConfig.getRecord().getSimpleField(""change_log_dir"");"
115640,./TargetProjects/helix/recipes/rsync-replicated-file-system/src/main/java/org/apache/helix/filestore/Replicator.java,88,,"    String remoteFilestoreDir = masterInstanceConfig.getRecord().getSimpleField(""file_store_dir"");"
115641,./TargetProjects/helix/recipes/task-execution/src/main/java/org/apache/helix/taskexecution/TaskStateModel.java,37,,"@StateModelInfo(initialState = ""OFFLINE"", states = {"
115642,./TargetProjects/helix/zookeeper-api/src/main/java/org/apache/helix/zookeeper/datamodel/serializer/ZNRecordStreamingSerializer.java,92,,"      g.writeRaw(""\n  "");"
115643,./TargetProjects/helix/zookeeper-api/src/main/java/org/apache/helix/zookeeper/datamodel/serializer/ZNRecordStreamingSerializer.java,99,,"        g.writeRaw(""\n    "");"
115644,./TargetProjects/helix/zookeeper-api/src/main/java/org/apache/helix/zookeeper/impl/client/SharedZkClient.java,207,,"        ""Creating ephemeral nodes using "" + SharedZkClient.class.getSimpleName()"
115645,./TargetProjects/helix/zookeeper-api/src/main/java/org/apache/helix/zookeeper/impl/client/SharedZkClient.java,208,,"            + "" is not supported."");"
115646,./TargetProjects/helix/zookeeper-api/src/main/java/org/apache/helix/zookeeper/introspect/CodehausJacksonIntrospector.java,59,,"  @SuppressWarnings(""deprecation"")"
115647,./TargetProjects/helix/zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/ZkClient.java,1793,,"  @SuppressWarnings(""unchecked"")"
115648,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestFederatedZkClient.java,125,,"      Assert.fail(""getServers() should not be supported."");"
115649,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestRawZkClient.java,289,,"    Assert.assertEquals((long) beanServer.getAttribute(name, ""OutstandingRequestGauge""), 0);"
115650,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestRawZkClient.java,298,,"    long firstLatencyCounter =  (long) beanServer.getAttribute(rootname, ""ReadTotalLatencyCounter"");"
115651,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestRawZkClient.java,299,,"    long firstReadLatencyGauge = (long) beanServer.getAttribute(rootname, ""ReadLatencyGauge.Max"");"
115652,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestRawZkClient.java,304,,"    Assert.assertTrue((long) beanServer.getAttribute(rootname, ""ReadCounter"") == 1);"
115653,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestRawZkClient.java,310,,"    Assert.assertEquals((long) beanServer.getAttribute(rootname, ""WriteCounter""), 0);"
115654,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestRawZkClient.java,311,,"    Assert.assertEquals((long) beanServer.getAttribute(rootname, ""WriteBytesCounter""), 0);"
115655,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestRawZkClient.java,314,,"    Assert.assertEquals((long) beanServer.getAttribute(rootname, ""WriteTotalLatencyCounter""), 0);"
115656,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestRawZkClient.java,315,,"    Assert.assertEquals((long) beanServer.getAttribute(rootname, ""WriteLatencyGauge.Max""), 0);"
115657,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestRawZkClient.java,337,,"    Assert.assertEquals((long) beanServer.getAttribute(rootname, ""ReadBytesCounter""), 0);"
115658,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestRawZkClient.java,836,,"      zkClient.asyncCreate(""/tmp/async"", null, CreateMode.PERSISTENT, createCallback);"
115659,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestRawZkClient.java,841,,"      Assert.assertFalse(zkClient.exists(""/tmp/asyncOversize""));"
115660,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestZkClientAsyncRetry.java,135,,"      ZNRecord tmpRecord = new ZNRecord(""tmpRecord"");"
115661,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestZkClientAsyncRetry.java,136,,"      tmpRecord.setSimpleField(""foo"", ""bar"");"
115662,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestZkClientAsyncRetry.java,136,,"      tmpRecord.setSimpleField(""foo"", ""bar"");"
115663,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestZkClientAsyncRetry.java,194,,"      tmpRecord.setSimpleField(""test"", ""data"");"
115664,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/impl/client/TestZkClientAsyncRetry.java,194,,"      tmpRecord.setSimpleField(""test"", ""data"");"
115665,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/zkclient/TestZkConnection.java,46,,"    List<String> actualChildren = zkConnection.getChildren(""/path"", false);"
115666,./TargetProjects/helix/zookeeper-api/src/test/java/org/apache/helix/zookeeper/zkclient/TestZkConnection.java,65,,"      Assert.fail(""Should have thrown exception."");"
115667,./TargetProjects/hive/accumulo-handler/src/java/org/apache/hadoop/hive/accumulo/predicate/AccumuloPredicateHandler.java,159,,"      throw new SerDeException(""Could not instantiate class for WHERE clause"", e);"
115668,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestAccumuloDefaultIndexScanner.java,92,,"        addRow(writer, ""fred"", ""name_name"", ""row1"");"
115669,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestAccumuloDefaultIndexScanner.java,92,,"        addRow(writer, ""fred"", ""name_name"", ""row1"");"
115670,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestAccumuloDefaultIndexScanner.java,93,,"        addRow(writer, ""25"", ""age_age"", ""row1"");"
115671,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestAccumuloDefaultIndexScanner.java,94,,"        addRow(writer, 5, ""cars_cars"", ""row1"");"
115672,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestAccumuloDefaultIndexScanner.java,95,,"        addRow(writer, true, ""mgr_mgr"", ""row1"");"
115673,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestAccumuloDefaultIndexScanner.java,96,,"        addRow(writer, ""bill"", ""name_name"", ""row2"");"
115674,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestAccumuloDefaultIndexScanner.java,100,,"        addRow(writer, ""sally"", ""name_name"", ""row3"");"
115675,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestAccumuloDefaultIndexScanner.java,104,,"        addRow(writer, ""rob"", ""name_name"", ""row4"");"
115676,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestAccumuloDefaultIndexScanner.java,126,,"    List<Range> ranges = handler.getIndexRowRanges(""name"", new Range(""mike""));"
115677,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestAccumuloDefaultIndexScanner.java,133,,"    List<Range> ranges = handler.getIndexRowRanges(""age"", new Range(""10"", ""50""));"
115678,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestAccumuloDefaultIndexScanner.java,159,,"    conf.set(AccumuloIndexParameters.INDEXTABLE_NAME, ""contact"");"
115679,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestAccumuloIndexLexicoder.java,115,,"    byte[] value = new String(""1232322323"").getBytes(UTF_8);"
115680,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestAccumuloStorageHandler.java,66,,"    props.setProperty(AccumuloSerDeParameters.COLUMN_MAPPINGS, ""cf:cq1,cf:cq2,cf:cq3"");"
115681,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestAccumuloStorageHandler.java,69,,"    props.setProperty(AccumuloSerDeParameters.TABLE_NAME, ""table"");"
115682,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestAccumuloStorageHandler.java,183,,"    Connector conn = inst.getConnector(""root"", new PasswordToken(""""));"
115683,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestAccumuloStorageHandler.java,188,,"    params.put(AccumuloSerDeParameters.COLUMN_MAPPINGS, ""cf:cq"");"
115684,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestHiveAccumuloHelper.java,106,,"    final String user = ""bob"";"
115685,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestHiveAccumuloHelper.java,107,,"    final String instanceName = ""accumulo"";"
115686,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestHiveAccumuloHelper.java,108,,"    final String zookeepers = ""host1:2181,host2:2181,host3:2181"";"
115687,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestLazyAccumuloMap.java,53,,"    AccumuloHiveRow row = new AccumuloHiveRow(""row"");"
115688,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestLazyAccumuloMap.java,55,,"    row.add(""cf1"", ""foo"", ""bar"".getBytes());"
115689,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestLazyAccumuloMap.java,55,,"    row.add(""cf1"", ""foo"", ""bar"".getBytes());"
115690,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestLazyAccumuloMap.java,55,,"    row.add(""cf1"", ""foo"", ""bar"".getBytes());"
115691,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestLazyAccumuloMap.java,62,,"        ColumnEncoding.STRING, ColumnEncoding.STRING, ""column"", TypeInfoFactory.getMapTypeInfo("
115692,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestLazyAccumuloMap.java,66,,"    Text nullSequence = new Text(""\\N"");"
115693,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestLazyAccumuloRow.java,55,,"    List<String> columns = Arrays.asList(""row"", ""given_name"", ""surname"", ""age"", ""weight"", ""height"");"
115694,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestLazyAccumuloRow.java,55,,"    List<String> columns = Arrays.asList(""row"", ""given_name"", ""surname"", ""age"", ""weight"", ""height"");"
115695,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestLazyAccumuloRow.java,55,,"    List<String> columns = Arrays.asList(""row"", ""given_name"", ""surname"", ""age"", ""weight"", ""height"");"
115696,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestLazyAccumuloRow.java,55,,"    List<String> columns = Arrays.asList(""row"", ""given_name"", ""surname"", ""age"", ""weight"", ""height"");"
115697,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestLazyAccumuloRow.java,55,,"    List<String> columns = Arrays.asList(""row"", ""given_name"", ""surname"", ""age"", ""weight"", ""height"");"
115698,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestLazyAccumuloRow.java,79,,"    hiveRow.add(""personal"", ""given_name"", ""Bob"".getBytes());"
115699,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestLazyAccumuloRow.java,79,,"    hiveRow.add(""personal"", ""given_name"", ""Bob"".getBytes());"
115700,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/TestLazyAccumuloRow.java,80,,"    hiveRow.add(""personal"", ""surname"", ""Stevens"".getBytes());"
115701,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/columns/TestColumnEncoding.java,49,,"    Assert.assertFalse(ColumnEncoding.hasColumnEncoding(""foo:bar""));"
115702,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/columns/TestColumnMapper.java,41,,"    List<String> rawMappings = Arrays.asList(AccumuloHiveConstants.ROWID, ""cf:cq"", ""cf:_"","
115703,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/columns/TestColumnMapper.java,43,,"    List<String> columnNames = Arrays.asList(""row"", ""col1"", ""col2"", ""col3"");"
115704,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/columns/TestColumnMapper.java,43,,"    List<String> columnNames = Arrays.asList(""row"", ""col1"", ""col2"", ""col3"");"
115705,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/columns/TestColumnMapper.java,43,,"    List<String> columnNames = Arrays.asList(""row"", ""col1"", ""col2"", ""col3"");"
115706,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/columns/TestColumnMapper.java,87,,"    List<String> hiveColumns = Arrays.asList(""rowid"", ""col1"", ""col2"", ""col3"");"
115707,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/columns/TestColumnMappingFactory.java,48,,"    ColumnMapping mapping = ColumnMappingFactory.get(""cf:cq"", ColumnEncoding.STRING, ""col"","
115708,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableInputFormat.java,98,,"  private static final Text NAME = new Text(""name"");"
115709,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableInputFormat.java,137,,"    con.securityOperations().changeUserAuthorizations(USER, new Authorizations(""blah""));"
115710,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableInputFormat.java,142,,"    m1.put(COLUMN_FAMILY, NAME, new Value(""brian"".getBytes()));"
115711,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableInputFormat.java,144,,"    m1.put(COLUMN_FAMILY, DEGREES, new Value(parseDoubleBytes(""44.5"")));"
115712,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableInputFormat.java,145,,"    m1.put(COLUMN_FAMILY, MILLIS, new Value(parseLongBytes(""555"")));"
115713,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableInputFormat.java,195,,"    FileInputFormat.addInputPath(conf, new Path(""unused""));"
115714,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableInputFormat.java,440,,"    mappings.add(new HiveAccumuloColumnMapping(""person"", ""name"", ColumnEncoding.STRING, ""col1"","
115715,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableInputFormat.java,507,,"    String instanceName = ""realInstance"";"
115716,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableInputFormat.java,508,,"    String zookeepers = ""host1:2181,host2:2181,host3:2181"";"
115717,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableInputFormat.java,716,,"    m.put(COLUMN_FAMILY, NAME, new ColumnVisibility(""foo""), new Value(""frank"".getBytes()));"
115718,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableOutputFormat.java,80,,"  protected String user = ""root"";"
115719,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableOutputFormat.java,217,,"    List<String> names = Arrays.asList(""row"", ""col1"", ""col2"");"
115720,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableOutputFormat.java,217,,"    List<String> names = Arrays.asList(""row"", ""col1"", ""col2"");"
115721,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableOutputFormat.java,237,,"        .createLazyStructInspector(Arrays.asList(""row"", ""cq1"", ""cq2""),"
115722,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableOutputFormat.java,237,,"        .createLazyStructInspector(Arrays.asList(""row"", ""cq1"", ""cq2""),"
115723,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableOutputFormat.java,259,,"    Assert.assertTrue(""Iterator did not have an element as expected"", iter.hasNext());"
115724,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableOutputFormat.java,269,,"    Assert.assertEquals(""value1"", new String(v.get()));"
115725,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableOutputFormat.java,281,,"    Assert.assertEquals(""value2"", new String(v.get()));"
115726,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableOutputFormat.java,283,,"    Assert.assertFalse(""Iterator unexpectedly had more data"", iter.hasNext());"
115727,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTableOutputFormat.java,290,,"    Authorizations auths = new Authorizations(""foo"");"
115728,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTypes.java,139,,"        ""string,string,boolean,tinyint,smallint,int,bigint,float,double,decimal,date,timestamp,char(4),varchar(7)"");"
115729,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTypes.java,158,,"    String stringValue = ""string"";"
115730,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTypes.java,173,,"    m.put(cfBytes, ""boolean"".getBytes(), baos.toByteArray());"
115731,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTypes.java,182,,"    m.put(cfBytes, ""tinyint"".getBytes(), baos.toByteArray());"
115732,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTypes.java,191,,"    m.put(cfBytes, ""smallint"".getBytes(), baos.toByteArray());"
115733,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTypes.java,200,,"    m.put(cfBytes, ""int"".getBytes(), baos.toByteArray());"
115734,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTypes.java,209,,"    m.put(cfBytes, ""bigint"".getBytes(), baos.toByteArray());"
115735,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTypes.java,218,,"    m.put(cfBytes, ""float"".getBytes(), baos.toByteArray());"
115736,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTypes.java,227,,"    m.put(cfBytes, ""double"".getBytes(), baos.toByteArray());"
115737,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTypes.java,234,,"    m.put(cfBytes, ""decimal"".getBytes(), baos.toByteArray());"
115738,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTypes.java,242,,"    m.put(cfBytes, ""date"".getBytes(), baos.toByteArray());"
115739,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTypes.java,251,,"    m.put(cfBytes, ""timestamp"".getBytes(), output.toByteArray());"
115740,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTypes.java,255,,"    HiveChar charValue = new HiveChar(""char"", 4);"
115741,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/mr/TestHiveAccumuloTypes.java,262,,"    HiveVarchar varcharValue = new HiveVarchar(""varchar"", 7);"
115742,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/predicate/TestAccumuloPredicateHandler.java,98,,"    List<String> columnNames = Arrays.asList(""field1"", ""rid"");"
115743,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/predicate/TestAccumuloPredicateHandler.java,98,,"    List<String> columnNames = Arrays.asList(""field1"", ""rid"");"
115744,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/predicate/TestAccumuloPredicateHandler.java,130,,"    ExprNodeDesc constant = new ExprNodeConstantDesc(TypeInfoFactory.stringTypeInfo, ""aaa"");"
115745,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/predicate/TestAccumuloPredicateHandler.java,146,,"    assertTrue(range.afterEndKey(new Key(new Text(""aab""))));"
115746,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/predicate/TestAccumuloPredicateHandler.java,169,,"    assertFalse(range.afterEndKey(new Key(new Text(""ccccc""))));"
115747,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/predicate/TestAccumuloPredicateHandler.java,262,,"    ExprNodeDesc constant2 = new ExprNodeConstantDesc(TypeInfoFactory.stringTypeInfo, ""bbb"");"
115748,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/predicate/TestAccumuloPredicateHandler.java,434,,"    List<String> columnNames = Arrays.asList(""field1"", ""field2"", ""rid"");"
115749,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/predicate/TestAccumuloPredicateHandler.java,680,,"    List<String> columnNames = Arrays.asList(""key"", ""column"");"
115750,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/predicate/TestAccumuloRangeGenerator.java,81,,"    ExprNodeDesc column = new ExprNodeColumnDesc(TypeInfoFactory.stringTypeInfo, ""rid"", null, false);"
115751,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/predicate/TestAccumuloRangeGenerator.java,128,,"    Assert.assertTrue(""Result from graph walk was not a List"", result instanceof List);"
115752,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/predicate/TestAccumuloRangeGenerator.java,129,,"    @SuppressWarnings(""unchecked"")"
115753,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/predicate/compare/TestStringCompare.java,33,,"    strCompare.init(""aaa"".getBytes());"
115754,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/predicate/compare/TestStringCompare.java,46,,"    byte[] val = ""aab"".getBytes();"
115755,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/serde/TestAccumuloRowSerializer.java,96,,"    List<String> columns = Arrays.asList(""row"", ""cq1"", ""cq2"", ""cq3"");"
115756,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/serde/TestAccumuloRowSerializer.java,96,,"    List<String> columns = Arrays.asList(""row"", ""cq1"", ""cq2"", ""cq3"");"
115757,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/serde/TestAccumuloRowSerializer.java,96,,"    List<String> columns = Arrays.asList(""row"", ""cq1"", ""cq2"", ""cq3"");"
115758,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/serde/TestAccumuloRowSerializer.java,189,,"        accumuloSerDeParams.getColumnMappings(), new ColumnVisibility(""foo""),"
115759,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/serde/TestAccumuloSerDe.java,91,,"    properties.setProperty(AccumuloSerDeParameters.COLUMN_MAPPINGS, "":rowID,cf:f1,cf:f2,cf:f3"");"
115760,./TargetProjects/hive/accumulo-handler/src/test/org/apache/hadoop/hive/accumulo/serde/TestAccumuloSerDeParameters.java,55,,"    conf.set(AccumuloSerDeParameters.AUTHORIZATIONS_KEY, ""foo,bar"");"
115761,./TargetProjects/hive/beeline/src/java/org/apache/hive/beeline/BeeLine.java,277,,"      new ReflectiveCommandHandler(this, new String[] {""help"", ""?""},"
115762,./TargetProjects/hive/beeline/src/java/org/apache/hive/beeline/BeeLine.java,595,,"      throw new IllegalArgumentException(loc(""no-current-connection""));"
115763,./TargetProjects/hive/beeline/src/java/org/apache/hive/beeline/BeeLine.java,1000,,"       .append(""!connect "")"
115764,./TargetProjects/hive/beeline/src/java/org/apache/hive/beeline/Commands.java,224,,"        arg1(line, ""table name""),"
115765,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/ProxyAuthTest.java,87,,"    url = ""jdbc:hive2://"" + host + "":"" + port + ""/default;principal="" + serverPrincipal;"
115766,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/ProxyAuthTest.java,87,,"    url = ""jdbc:hive2://"" + host + "":"" + port + ""/default;principal="" + serverPrincipal;"
115767,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/ProxyAuthTest.java,103,,"    beeLineArgs = new String[] { ""-u"", url, ""-n"", ""foo"", ""-p"", ""bar""};"
115768,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/ProxyAuthTest.java,103,,"    beeLineArgs = new String[] { ""-u"", url, ""-n"", ""foo"", ""-p"", ""bar""};"
115769,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/ProxyAuthTest.java,118,,"    currentResultFile = generateSQL(url+ "" foo bar "");"
115770,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/ProxyAuthTest.java,144,,"    url = ""jdbc:hive2://"" + host + "":"" + port + ""/default"";"
115771,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/ProxyAuthTest.java,146,,"    beeLineArgs = new String[] { ""-u"", url, ""-n"", ""foo"", ""-p"", ""bar"", ""-a"", ""delegationToken"" };"
115772,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/TestBeelineArgParsing.java,127,,"    String args[] = new String[] {""-u"", ""url"", ""-n"", ""name"","
115773,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/TestBeelineArgParsing.java,127,,"    String args[] = new String[] {""-u"", ""url"", ""-n"", ""name"","
115774,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/TestBeelineArgParsing.java,128,,"      ""-p"", ""password"", ""-d"", ""driver"", ""-a"", ""authType""};"
115775,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/TestBeelineArgParsing.java,128,,"      ""-p"", ""password"", ""-d"", ""driver"", ""-a"", ""authType""};"
115776,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/TestBeelineArgParsing.java,128,,"      ""-p"", ""password"", ""-d"", ""driver"", ""-a"", ""authType""};"
115777,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/TestBeelineArgParsing.java,130,,"    Assert.assertTrue(bl.connectArgs.equals(""url name password driver""));"
115778,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/TestBeelineArgParsing.java,374,,"    String args[] = new String[] {""--property-file"", ""props""};"
115779,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/TestBufferedRows.java,38,,"          ""cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc"""
115780,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/TestCommands.java,33,,"    assertEquals(""show tables;"", removeComments(""show tables;""));"
115781,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/TestCommands.java,37,,"    assertEquals(""show"", removeComments(""show-- tables; -------comments""));"
115782,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/TestCommands.java,91,,"    BeeLine.mainWithInputRedirection(new String[] {""-u"", ""jdbc:hive2://"", ""-e"", ""select 3""}, null);"
115783,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/TestCommands.java,135,,"          Arrays.asList(""select 1""),"
115784,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/TestCommands.java,154,,"          Arrays.asList(""select 1"", ""select 2""),"
115785,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/cli/TestHiveCli.java,102,,"        err, new String[] { ""--database"", ""invalidDB"" }, ERRNO_OK, true);"
115786,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/cli/TestHiveCli.java,108,,"        new String[] { ""--database"", ""test"" }, ERRNO_OK, true);"
115787,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/cli/TestHiveCli.java,114,,"    verifyCMD(""source "" + f.getPath() + "";"" + ""desc testSrcTbl;\nquit;\n"","
115788,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/hs2connection/TestUserHS2ConnectionFileParser.java,62,,"    Assert.assertTrue(""Expected "" + expectedUrl + "" got "" + url, expectedUrl.equals(url));"
115789,./TargetProjects/hive/beeline/src/test/org/apache/hive/beeline/hs2connection/TestUserHS2ConnectionFileParser.java,62,,"    Assert.assertTrue(""Expected "" + expectedUrl + "" got "" + url, expectedUrl.equals(url));"
115790,./TargetProjects/hive/cli/src/java/org/apache/hadoop/hive/cli/OptionsProcessor.java,83,,"        .withLongOpt(""hiveconf"")"
115791,./TargetProjects/hive/cli/src/test/org/apache/hadoop/hive/cli/TestCliDriverMethods.java,271,,"      fail(""should be exit"");"
115792,./TargetProjects/hive/cli/src/test/org/apache/hadoop/hive/cli/TestCliDriverMethods.java,314,,"    String oldHiveHome = System.getenv(""HIVE_HOME"");"
115793,./TargetProjects/hive/cli/src/test/org/apache/hadoop/hive/cli/TestCliDriverMethods.java,317,,"    File homeFile = File.createTempFile(""test"", ""hive"");"
115794,./TargetProjects/hive/cli/src/test/org/apache/hadoop/hive/cli/TestCliDriverMethods.java,317,,"    File homeFile = File.createTempFile(""test"", ""hive"");"
115795,./TargetProjects/hive/cli/src/test/org/apache/hadoop/hive/cli/TestRCFileCat.java,91,,"      String[] params = {""--verbose"",""file://"" + template.toURI().getPath() };"
115796,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/common/CopyOnFirstWriteProperties.java,71,,"  @SuppressFBWarnings(value = ""IS2_INCONSISTENT_SYNC"", justification = ""Intended"")"
115797,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/common/CopyOnFirstWriteProperties.java,71,,"  @SuppressFBWarnings(value = ""IS2_INCONSISTENT_SYNC"", justification = ""Intended"")"
115798,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/common/HiveStatsUtils.java,96,,"      LOG.info(""Error requested is "" + percentageError + ""%"");"
115799,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/common/format/datetime/HiveSqlDateTimeFormatter.java,1088,,"            throw new IllegalArgumentException(""Couldn't parse substring \"""" + substring +"
115800,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/common/format/datetime/HiveSqlDateTimeFormatter.java,1089,,"                ""\"" with token "" + token + "" to int. Pattern is "" + pattern, e);"
115801,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/common/jsonexplain/Op.java,116,,"      JSONObject keys = opObject.getJSONObject(""keys:"");"
115802,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/common/jsonexplain/Op.java,140,,"                        + "" when hive explain user is trying to identify the operator id."");"
115803,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/common/jsonexplain/Op.java,176,,"      JSONArray conditionMap = opObject.getJSONArray(""condition map:"");"
115804,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/common/type/UnsignedInt128.java,1050,,"    str.append(""v[0]="" + v[0] + ""(0x"" + Integer.toHexString(v[0]) + ""), "");"
115805,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/common/type/UnsignedInt128.java,1050,,"    str.append(""v[0]="" + v[0] + ""(0x"" + Integer.toHexString(v[0]) + ""), "");"
115806,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,118,,"          return ""TextFile"";"
115807,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,124,,"          return ""SequenceFile"";"
115808,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,130,,"          return ""RCfile"";"
115809,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,634,,"    REPL_RANGER_CLIENT_READ_TIMEOUT(""hive.repl.ranger.client.read.timeout"", ""300s"","
115810,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,644,,"    REPL_EXTERNAL_CLIENT_CONNECT_TIMEOUT(""hive.repl.external.client.connect.timeout"", ""10s"","
115811,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,650,,"    REPL_RETRY_INTIAL_DELAY(""hive.repl.retry.initial.delay"", ""60s"","
115812,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,656,,"    REPL_RETRY_JITTER(""hive.repl.retry.jitter"", ""30s"", new TimeValidator(TimeUnit.SECONDS),"
115813,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,698,,"        ""${system:java.io.tmpdir}"" + File.separator + ""${system:user.name}"","
115814,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,1180,,"      ""HikariCP"", ""NONE""),"
115815,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,1270,,"    METASTORE_CACHE_LEVEL2_TYPE(""datanucleus.cache.level2.type"", ""none"", """"),"
115816,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,1633,,"    METASTORE_AGGREGATE_STATS_CACHE_MAX_WRITER_WAIT(""hive.metastore.aggregate.stats.cache.max.writer.wait"", ""5000ms"","
115817,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,1722,,"    CLIPROMPT(""hive.cli.prompt"", ""hive"","
115818,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,1930,,"    HIVE_MATERIALIZED_VIEW_FILE_FORMAT(""hive.materializedview.fileformat"", ""ORC"","
115819,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,2733,,"    HIVE_OPTIMIZE_BI_REWRITE_COUNT_DISTINCT_SKETCH(""hive.optimize.bi.rewrite.countdistinct.sketch"", ""hll"","
115820,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,2740,,"    HIVE_OPTIMIZE_BI_REWRITE_PERCENTILE_DISC_SKETCH(""hive.optimize.bi.rewrite.percentile_disc.sketch"", ""kll"","
115821,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,2938,,"    HIVE_LOCK_FILE_MOVE_MODE(""hive.lock.file.move.protect"", ""all"", new StringSet(""none"", ""dp"", ""all""),"
115822,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,2985,,"            ""system property (note the camelCase).""),"
115823,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,3646,,"        ""hive.exec.temporary.table.storage"", ""default"", new StringSet(""memory"","
115824,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,3868,,"      ""true"", new StringSet(""true"", ""false"", ""ignore""),"
115825,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,4354,,"        ""The default value is true.""),"
115826,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,4365,,"         ""The default value is false.""),"
115827,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,5734,,"      val = (val == null ? ""yarn"" : val + File.separator + ""bin"" + File.separator + ""yarn"");"
115828,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/Validator.java,156,,"          return ""Invalid value  "" + value + "", which should be in between "" + lower + "" and "" + upper;"
115829,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/Validator.java,279,,"            timeString(min) + (minInclusive ? "" (inclusive)"" : "" (exclusive)"") + "" and "" +"
115830,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/Validator.java,279,,"            timeString(min) + (minInclusive ? "" (inclusive)"" : "" (exclusive)"") + "" and "" +"
115831,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/conf/Validator.java,283,,"            (minInclusive ? ""or equal to "" : """") + timeString(min);"
115832,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/ql/ErrorMsg.java,503,,"  QUOTA_EXCEEDED(20010, ""Quota exceeded: {0}"", ""64000"", true),"
115833,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/ql/ErrorMsg.java,523,,"    ""might help. If you dont want the query to fail because accurate statistics "" +"
115834,./TargetProjects/hive/common/src/java/org/apache/hadoop/hive/ql/ErrorMsg.java,524,,"    ""could not be collected, set hive.stats.reliable=false""),"
115835,./TargetProjects/hive/common/src/java/org/apache/hive/common/util/HiveVersionInfo.java,57,,"    return version != null ? version.version() : ""Unknown"";"
115836,./TargetProjects/hive/common/src/java/org/apache/hive/http/JMXJsonServlet.java,244,,"          LOG.error(""getting attribute "" + prs + "" of "" + oname"
115837,./TargetProjects/hive/common/src/java/org/apache/hive/http/JMXJsonServlet.java,244,,"          LOG.error(""getting attribute "" + prs + "" of "" + oname"
115838,./TargetProjects/hive/common/src/java/org/apache/hive/http/JMXJsonServlet.java,245,,"              + "" threw an exception"", e);"
115839,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/TestFileUtils.java,132,,"      Assert.assertEquals(Sets.newHashSet(""file://"" + jarFileName1), jars);"
115840,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/TestLogUtils.java,31,,"    Assert.assertEquals(""###_MASKED_###"", LogUtils.maskIfPassword(""password"",""test3""));"
115841,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,128,,"    checkFormatTs(""YYYY-MONTH-DD"", ""2019-01-01 00:00:00"", ""2019-JANUARY  -01""); //fill to length 9"
115842,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,143,,"    checkFormatTs(""D: Day"", ""2019-01-02 00:00:00"", ""4: Wednesday"");"
115843,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,149,,"    checkFormatTs(""D: dy"", ""2019-01-06 00:00:00"", ""1: sun"");"
115844,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,150,,"    checkFormatTs(""D: DAY"", ""2019-01-07 00:00:00"", ""2: MONDAY   "");"
115845,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,152,,"    checkFormatTs(""YYYY-mm-dd: Q WW W"", ""2019-01-01 00:00:00"", ""2019-01-01: 1 01 1"");"
115846,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,162,,"    checkFormatTs(""YYYY-MM-DD : IYYY-IW-ID"", ""2018-12-31 00:00:00"", ""2018-12-31 : 2019-01-01"");"
115847,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,162,,"    checkFormatTs(""YYYY-MM-DD : IYYY-IW-ID"", ""2018-12-31 00:00:00"", ""2018-12-31 : 2019-01-01"");"
115848,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,166,,"    checkFormatTs(""YYYY-MM-DD : IYYY-IW-ID"", ""2019-12-30 00:00:00"", ""2019-12-30 : 2020-01-01"");"
115849,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,170,,"    checkFormatTs(""id: Day"", ""2018-12-31 00:00:00"", ""01: Monday   "");"
115850,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,189,,"    checkFormatDate(""yyyy-mm-ddtsssss.ff4z"", ""2018-02-03"", ""2018-02-03T00000.0000Z"");"
115851,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,207,,"    checkParseTimestamp(""y-mm-dd"", ""0-02-03"", ""1970-02-03 00:00:00"");"
115852,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,208,,"    checkParseTimestamp(""yy-mm-dd"", ""00-02-03"", ""1900-02-03 00:00:00"");"
115853,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,209,,"    checkParseTimestamp(""yyy-mm-dd"", ""000-02-03"", ""1000-02-03 00:00:00"");"
115854,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,210,,"    checkParseTimestamp(""yyyy-mm-dd"", ""000-02-03"", ""1000-02-03 00:00:00"");"
115855,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,211,,"    checkParseTimestamp(""rr-mm-dd"", ""0-02-03"", ""1970-02-03 00:00:00"");"
115856,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,212,,"    checkParseTimestamp(""rrrr-mm-dd"", ""000-02-03"", ""1000-02-03 00:00:00"");"
115857,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,216,,"    checkParseTimestamp(""rr-mm-dd"", ""49-02-03"", ""2049-02-03 00:00:00"");"
115858,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,217,,"    checkParseTimestamp(""rr-mm-dd"", ""50-02-03"", ""1950-02-03 00:00:00"");"
115859,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,218,,"    checkParseTimestamp(""rr-mm-dd"", ""99-02-03"", ""1999-02-03 00:00:00"");"
115860,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,251,,"    checkParseTimestamp(""YYYY DDD"", ""2000 60"", ""2000-02-29 00:00:00"");"
115861,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,262,,"    checkParseTimestamp(""yyyy-MONTH-dd"", ""2018-FEBRUARY-28"", ""2018-02-28 00:00:00"");"
115862,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,262,,"    checkParseTimestamp(""yyyy-MONTH-dd"", ""2018-FEBRUARY-28"", ""2018-02-28 00:00:00"");"
115863,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,266,,"    checkParseTimestamp(""yyyy-MON-dd"", ""2018-FEB-28"", ""2018-02-28 00:00:00"");"
115864,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,266,,"    checkParseTimestamp(""yyyy-MON-dd"", ""2018-FEB-28"", ""2018-02-28 00:00:00"");"
115865,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,279,,"    checkParseTimestamp(""IYYY-IW-ID"", ""2019-01-01"", ""2018-12-31 00:00:00"");"
115866,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,279,,"    checkParseTimestamp(""IYYY-IW-ID"", ""2019-01-01"", ""2018-12-31 00:00:00"");"
115867,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,378,,"    verifyBadParseString(""iyyy-iw-id"", ""2019-00-01""); //ISO 8601 week number out of range for year"
115868,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,420,,"    checkParseDate(""FXDD-MM-YYYY"", ""01-01-1998"", ""1998-01-01"");"
115869,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,439,,"    checkParseTimestamp(""\""the DATE is\"" yyyy-mm-dd"", ""the date is 2018-01-01"", ""2018-01-01 00:00:00"");"
115870,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/format/datetime/TestHiveSqlDateTimeFormatter.java,441,,"    checkParseTimestamp(""FXDD-MM-YYYY hh12 am"", ""01-01-1998 12 PM"", ""1998-01-01 12:00:00"");"
115871,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/jsonexplain/TestStage.java,159,,"    Op result = uut.extractOp(""op-name"", object);"
115872,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/jsonexplain/TestVertex.java,42,,"    Vertex uut = new Vertex(""name"", object, null, tezJsonParser);"
115873,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/metrics/TestLegacyMetrics.java,81,,"    Attribute attr = new Attribute(""fooMetric"", Long.valueOf(-77));"
115874,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/metrics/metrics2/TestCodahaleMetrics.java,99,,"      MetricsFactory.getInstance().startStoredScope(""method1"");"
115875,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/metrics/metrics2/TestCodahaleMetrics.java,201,,"    MetricsTestUtils.verifyMetricsJson(json, MetricsTestUtils.METER, ""meter"", """");"
115876,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/metrics/metrics2/TestMetricVariableRatioGauge.java,57,,"    MetricsFactory.getInstance().addRatio(""rat"", num, ord);"
115877,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/type/TestDecimal128.java,152,,"    assertEquals(""1.3330"", new Decimal128(""1.333"", (short) 4).toFormalString());"
115878,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/type/TestDecimal128.java,416,,"    String message = ""For operation "" + a.toFormalString() + "" + "" + b.toFormalString();"
115879,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/type/TestDecimal128.java,729,,"    new Decimal128(""1.004"", (short) 3).checkPrecisionOverflow(4);"
115880,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/type/TestDecimal128.java,745,,"    new Decimal128(""-3322"", (short) 0).checkPrecisionOverflow(4);"
115881,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/type/TestDecimal128.java,798,,"    d.update(""4294967296.01"", (short) 2); // 2^32 + .01"
115882,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/type/TestHiveChar.java,35,,"    HiveChar hc = new HiveChar(""abc"", 10);"
115883,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/type/TestHiveChar.java,41,,"    hc.setValue(""abc123"");"
115884,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/type/TestHiveChar.java,65,,"    hc.setValue(""0123456789"", 5);"
115885,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/type/TestHiveIntervalDayTime.java,54,,"    assertEquals(i1 + "" compareTo "" + i1, 0, i1.compareTo(i1));"
115886,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/type/TestHiveIntervalDayTime.java,63,,"    assertTrue(i1 + "" equals "" + i1, i1.equals(i1));"
115887,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/type/TestHiveIntervalYearMonth.java,48,,"    assertEquals(i1 + "" compareTo "" + i1, 0, i1.compareTo(i1));"
115888,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/type/TestHiveIntervalYearMonth.java,57,,"    assertTrue(i1 + "" equals "" + i1, i1.equals(i1));"
115889,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/type/TestHiveIntervalYearMonth.java,110,,"    assertEquals(""0-0"", HiveIntervalYearMonth.valueOf(""0-0"").toString());"
115890,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/type/TestTimestampTZ.java,32,,"    TimestampTZ timestampTZ = TimestampTZUtil.parse(s, ZoneId.of(""UTC""));"
115891,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/common/type/TestUnsignedInt128.java,428,,"          assertEquals(""scale="" + scale, 100000L, leftJust.asLong());"
115892,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/conf/TestHiveConfRestrictList.java,49,,"    verifyRestriction(ConfVars.HIVETESTMODEPREFIX.varname, ""foo"");"
115893,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/conf/TestHiveConfUtil.java,35,,"    conf.setBoolean(""dummyBoolean"", true);"
115894,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/conf/TestHiveConfUtil.java,36,,"    conf.set(""dummy"", ""aaa"");"
115895,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/conf/TestHiveConfUtil.java,36,,"    conf.set(""dummy"", ""aaa"");"
115896,./TargetProjects/hive/common/src/test/org/apache/hadoop/hive/conf/TestSystemVariables.java,40,,"    String systemJavaIoTmpDir = makeVarName(SYSTEM, ""java.io.tmpdir"");"
115897,./TargetProjects/hive/common/src/test/org/apache/hive/common/util/TestACLConfigurationParser.java,57,,"    assertTrue(aclConf.getAllowedUsers().contains(""user1""));"
115898,./TargetProjects/hive/common/src/test/org/apache/hive/common/util/TestACLConfigurationParser.java,58,,"    assertTrue(aclConf.getAllowedUsers().contains(""user2""));"
115899,./TargetProjects/hive/common/src/test/org/apache/hive/common/util/TestDateParser.java,50,,"    checkValidCase(""2001-11-12"", Date.valueOf(""2001-11-12""));"
115900,./TargetProjects/hive/common/src/test/org/apache/hive/common/util/TestHiveStringUtils.java,69,,"    assertUnchanged(""foo"");"
115901,./TargetProjects/hive/common/src/test/org/apache/hive/common/util/TestRetryUtilities.java,100,,"    Assert.assertEquals(""Unexpected number of executions of execute method"", 1, dummy.getCount());"
115902,./TargetProjects/hive/common/src/test/org/apache/hive/common/util/TestTimestampParser.java,42,,"    Assert.assertEquals(Timestamp.valueOf(""1945-12-31 23:59:59.1234""),"
115903,./TargetProjects/hive/common/src/test/org/apache/hive/common/util/TestTimestampParser.java,49,,"        tsp.parseTimestamp(""1945-12-31 23:59:59""));"
115904,./TargetProjects/hive/common/src/test/org/apache/hive/common/util/TestTimestampParser.java,64,,"    final String[] patterns = {""yyyy-MM-dd'T'HH:mm:ss"","
115905,./TargetProjects/hive/druid-handler/src/java/org/apache/hadoop/hive/druid/DruidKafkaUtils.java,166,,"              new StringFullResponseHandler(Charset.forName(""UTF-8"")));"
115906,./TargetProjects/hive/druid-handler/src/java/org/apache/hadoop/hive/druid/DruidStorageHandler.java,376,,"              new StringFullResponseHandler(Charset.forName(""UTF-8""))), input -> input instanceof IOException,"
115907,./TargetProjects/hive/druid-handler/src/java/org/apache/hadoop/hive/druid/json/KafkaSupervisorIOConfig.java,46,,"  @SuppressWarnings({ ""OptionalUsedAsFieldOrParameterType"", ""Guava"" }) private final Optional<Duration>"
115908,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/QTestDruidSerDe.java,55,,"          + ""\""cardinality\"" : 1944, \""errorMessage\"" : null },\r\n  """
115909,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/QTestDruidSerDe2.java,55,,"          + ""\""cardinality\"" : 1944, \""errorMessage\"" : null },\r\n  """
115910,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/TestDruidStorageHandler.java,95,,"    FileUtils.writeStringToFile(new File(location), ""dummySegmentData"");"
115911,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/TestDruidStorageHandler.java,97,,"        .loadSpec(ImmutableMap.of(""path"", location)).size(1000L)"
115912,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/TestDruidStorageHandler.java,161,,"    DataSegment dataSegment = createSegment(new Path(taskDirPath, ""index.zip"").toString());"
115913,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/TestDruidStorageHandler.java,340,,"    Assert.assertEquals(ImmutableMap.of(""type"", ""hdfs"", ""path"", expectedFinalHadoopPath.toString()),"
115914,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/TestDruidStorageHandler.java,340,,"    Assert.assertEquals(ImmutableMap.of(""type"", ""hdfs"", ""path"", expectedFinalHadoopPath.toString()),"
115915,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,111,,"          + ""   }  """
115916,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,112,,"          + ""  ] """
115917,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,117,,"          + "" ], """
115918,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,127,,"          + ""  } """
115919,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,134,,"      ""[  """
115920,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,184,,"          + ""   },   """
115921,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,231,,"          + "" {  """
115922,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,234,,"          + ""   {   """
115923,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,265,,"          + "" }]"";"
115924,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,271,,"          ""dim1_val"", 111L, 10669F, 96.11711711711712F},"
115925,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,339,,"          + ""  \""version\"" : \""v1\"",  """
115926,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,341,,"          + ""  \""event\"" : {   """
115927,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,464,,"          ""article"", ""0"", ""0"", ""11._korpus_(NOVJ)"", ""sl"", ""0"", ""EmausBot"", 1.0d, 39.0d, 39.0F, 39.0F, 0.0F},"
115928,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,473,,"          ""MZMcBride"", 1.0d, 70.0d, 70.0F, 70.0F, 0.0F},"
115929,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,579,,"        createPropertiesQuery(""sample_datasource"","
115930,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,685,,"        assertEquals(""Field "" + i + "" type"", expectedFieldsData[i].getClass(), row.get(i).getClass());"
115931,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,723,,"      new HiveCharWritable(new HiveChar(""dim2_v"", 6)),"
115932,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java,724,,"      new HiveVarcharWritable(new HiveVarchar(""dim3_val"", 8)),"
115933,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/ql/io/TestDruidRecordWriter.java,92,,"          ""host"","
115934,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/ql/io/TestDruidRecordWriter.java,94,,"          ""visited_sum"","
115935,./TargetProjects/hive/druid-handler/src/test/org/apache/hadoop/hive/ql/io/TestDruidRecordWriter.java,96,,"          ""unique_hosts"","
115936,./TargetProjects/hive/hbase-handler/src/java/org/apache/hadoop/hive/hbase/ColumnMappings.java,166,,"      if (hbaseTableDefaultStorageType.equals(""binary"")) {"
115937,./TargetProjects/hive/hbase-handler/src/java/org/apache/hadoop/hive/hbase/ColumnMappings.java,168,,"      } else if (!hbaseTableDefaultStorageType.equals(""string"")) {"
115938,./TargetProjects/hive/hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseSerDeHelper.java,202,,"                + "" property not provided for column family ["" + colMap.familyName"
115939,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,99,,"      ""                },\n"" +"
115940,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,100,,"      ""                {\n"" +"
115941,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,171,,"    byte [] cfa = ""cola"".getBytes();"
115942,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,181,,"    byte [] qualString = ""string"".getBytes();"
115943,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,184,,"    byte [] rowKey = Bytes.toBytes(""test-row1"");"
115944,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,189,,"    kvs.add(new KeyValue(rowKey, cfa, qualByte, Bytes.toBytes(""123"")));"
115945,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,190,,"    kvs.add(new KeyValue(rowKey, cfb, qualShort, Bytes.toBytes(""456"")));"
115946,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,191,,"    kvs.add(new KeyValue(rowKey, cfc, qualInt, Bytes.toBytes(""789"")));"
115947,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,192,,"    kvs.add(new KeyValue(rowKey, cfa, qualLong, Bytes.toBytes(""1000"")));"
115948,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,193,,"    kvs.add(new KeyValue(rowKey, cfb, qualFloat, Bytes.toBytes(""-0.01"")));"
115949,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,194,,"    kvs.add(new KeyValue(rowKey, cfc, qualDouble, Bytes.toBytes(""5.3"")));"
115950,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,195,,"    kvs.add(new KeyValue(rowKey, cfa, qualString, Bytes.toBytes(""Hadoop, HBase, and Hive"")));"
115951,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,196,,"    kvs.add(new KeyValue(rowKey, cfb, qualBool, Bytes.toBytes(""true"")));"
115952,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,352,,"    tbl.setProperty(""columns"", ""key,abyte,ashort,aint,along,afloat,adouble,astring,abool"");"
115953,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,352,,"    tbl.setProperty(""columns"", ""key,abyte,ashort,aint,along,afloat,adouble,astring,abool"");"
115954,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,353,,"    tbl.setProperty(""columns.types"","
115955,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,354,,"        ""string,tinyint:smallint:int:bigint:float:double:string:boolean"");"
115956,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,388,,"    tbl.setProperty(HBaseSerDe.HBASE_TABLE_DEFAULT_STORAGE_TYPE, ""binary"");"
115957,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,936,,"    byte[] qualStruct = ""struct"".getBytes();"
115958,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,1059,,"    byte[] qualAvro = ""avro"".getBytes();"
115959,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,1093,,"    tbl.setProperty(""cola.avro.serialization.type"", ""avro"");"
115960,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,1094,,"    tbl.setProperty(""cola.avro."" + AvroTableProperties.SCHEMA_LITERAL.getPropName(), RECORD_SCHEMA);"
115961,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,1095,,"    tbl.setProperty(HBaseSerDe.HBASE_COLUMNS_MAPPING, "":key,cola:avro"");"
115962,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,1223,,"                + ""[999, 1234567890], [999, 1234455555]]]"")};"
115963,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestLazyHBaseObject.java,69,,"    Text nullSequence = new Text(""\\N"");"
115964,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestLazyHBaseObject.java,79,,"    kvs.add(new KeyValue(Bytes.toBytes(""test-row""), Bytes.toBytes(""cfa""),"
115965,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestLazyHBaseObject.java,79,,"    kvs.add(new KeyValue(Bytes.toBytes(""test-row""), Bytes.toBytes(""cfa""),"
115966,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestLazyHBaseObject.java,83,,"    kvs.add(new KeyValue(Bytes.toBytes(""test-row""), Bytes.toBytes(""cfb""),"
115967,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestLazyHBaseObject.java,90,,"        Bytes.toBytes(""8""), Bytes.toBytes(""abc"")));"
115968,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestLazyHBaseObject.java,91,,"    kvs.add(new KeyValue(Bytes.toBytes(""test-row""), Bytes.toBytes(""cfc""),"
115969,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestLazyHBaseObject.java,499,,"        Bytes.toBytes(""cfa""), Bytes.toBytes(""a""), Bytes.toBytes(""123"")));"
115970,./TargetProjects/hive/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestPutResultWritable.java,41,,"      new KeyValue(Bytes.toBytes(""test-row""), Bytes.toBytes(""cfa""),"
115971,./TargetProjects/hive/hcatalog/core/src/main/java/org/apache/hive/hcatalog/cli/HCatCli.java,357,,"      ss.err.println(""Invalid permission specification: "" + perms);"
115972,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/cli/TestSemanticAnalysis.java,91,,"    driver.run(""drop table junit_sem_analysis"");"
115973,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/cli/TestSemanticAnalysis.java,138,,"      hcatDriver.run(""drop database "" + testDb1);"
115974,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/cli/TestSemanticAnalysis.java,161,,"    hcatDriver.run(""drop table "" + TBL_NAME);"
115975,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/cli/TestSemanticAnalysis.java,232,,"    hcatDriver.run(""create table junit_sem_analysis (a int) partitioned by (b string) stored as RCFILE"");"
115976,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/data/TestDefaultHCatRecord.java,199,,"    rec_1.add(Byte.valueOf(""123""));"
115977,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/data/TestDefaultHCatRecord.java,200,,"    rec_1.add(Short.valueOf(""456""));"
115978,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/data/TestDefaultHCatRecord.java,206,,"    rec_1.add(""hcat and hadoop"");"
115979,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/data/schema/TestHCatSchema.java,44,,"    fieldSchemaList.add(new HCatFieldSchema(""age"", HCatFieldSchema.Type.INT, ""So very old""));"
115980,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/data/schema/TestHCatSchema.java,75,,"    HCatFieldSchema memberID1 = new HCatFieldSchema(""memberID"", HCatFieldSchema.Type.INT, ""as a number"");"
115981,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/data/schema/TestHCatSchema.java,75,,"    HCatFieldSchema memberID1 = new HCatFieldSchema(""memberID"", HCatFieldSchema.Type.INT, ""as a number"");"
115982,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/data/schema/TestHCatSchemaUtils.java,64,,"	  FieldSchema stringFieldSchema = new FieldSchema(""name1"", serdeConstants.STRING_TYPE_NAME, ""comment1"");"
115983,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/data/schema/TestHCatSchemaUtils.java,64,,"	  FieldSchema stringFieldSchema = new FieldSchema(""name1"", serdeConstants.STRING_TYPE_NAME, ""comment1"");"
115984,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/HCatBaseTest.java,85,,"        + File.separator + ""mapred"" + File.separator + ""local"");"
115985,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatMultiOutputFormat.java,81,,"  private static final String DATABASE = ""default"";"
115986,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatMultiOutputFormat.java,309,,"      tableNames[0] + "" is not correct"", outputs.get(0), ""a,a,1,ag"");"
115987,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatOutputFormat.java,114,,"    fields.add(new FieldSchema(""colname"", serdeConstants.STRING_TYPE_NAME, """"));"
115988,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatOutputFormat.java,120,,"    sd.setCols(Lists.newArrayList(new FieldSchema(""data_column"", serdeConstants.STRING_TYPE_NAME, """")));"
115989,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatPartitioned.java,75,,"    fields.add(new FieldSchema(""part0"", serdeConstants.INT_TYPE_NAME, """"));"
115990,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatPartitioned.java,91,,"    partitionMap.put(""part1"", ""p1value1"");"
115991,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestMultiOutputFormat.java,117,,"    configurer.addOutputFormat(""out1"", TextOutputFormat.class, IntWritable.class, Text.class);"
115992,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestMultiOutputFormat.java,118,,"    configurer.addOutputFormat(""out2"", SequenceFileOutputFormat.class, Text.class,"
115993,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestMultiOutputFormat.java,142,,"    Assert.assertTrue(""Cannot find "" + (new Path(inputFile)) + "" in "" + fileClassPathsList,"
115994,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestMultiOutputFormat.java,142,,"    Assert.assertTrue(""Cannot find "" + (new Path(inputFile)) + "" in "" + fileClassPathsList,"
115995,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/rcfile/TestRCFileMapReduceInputFormat.java,95,,"      bytesArray = new byte[][]{""123"".getBytes(""UTF-8""),"
115996,./TargetProjects/hive/hcatalog/core/src/test/java/org/apache/hive/hcatalog/rcfile/TestRCFileMapReduceInputFormat.java,99,,"        ""NULL"".getBytes(""UTF-8"")};"
115997,./TargetProjects/hive/hcatalog/hcatalog-pig-adapter/src/test/java/org/apache/hive/hcatalog/pig/AbstractHCatLoaderTest.java,156,,"    assertEquals(""Expected "" + DataType.findTypeName(expectedPigType) + ""; got "" +"
115998,./TargetProjects/hive/hcatalog/hcatalog-pig-adapter/src/test/java/org/apache/hive/hcatalog/pig/AbstractHCatLoaderTest.java,162,,"    createTableDefaultDB(BASIC_TABLE, ""a int, b string"");"
115999,./TargetProjects/hive/hcatalog/hcatalog-pig-adapter/src/test/java/org/apache/hive/hcatalog/pig/AbstractHCatLoaderTest.java,207,,"    server.registerQuery(""store A into '"" + BASIC_TABLE + ""' using org.apache.hive.hcatalog.pig.HCatStorer();"", ++i);"
