125000,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/eventstorage/memory/GridMemoryEventStorageSpiSelfTest.java,70,,"        assert evts.isEmpty() : ""Invalid events count."";"
125001,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/loadbalancing/adaptive/GridAdaptiveLoadBalancingSpiSelfTest.java,56,,"                boolean isFirstTime = node.attribute(""used"") == null;"
125002,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/loadbalancing/adaptive/GridAdaptiveLoadBalancingSpiSelfTest.java,60,,"                return (Double)node.attribute(""load"");"
125003,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/startup/properties/NotStringSystemPropertyTest.java,44,,"        Some some = new Some(0, ""prop"");"
125004,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java,489,,"                    fail(""Exception class is not as expected [expected="" + cls + "", actual="" + e.getClass() + ']', e);"
125005,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java,501,,"                    log.info(""Caught expected exception: "" + e.getMessage());"
125006,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java,509,,"        throw new AssertionError(""Exception has not been thrown."");"
125007,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java,1518,,"            throw new IgniteException(""Failed to get object field [obj="" + obj +"
125008,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/configvariations/ConfigVariations.java,84,,"    @SuppressWarnings(""unchecked"")"
125009,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/configvariations/ConfigVariationsTestSuiteBuilder.java,97,,"    @SuppressWarnings(""unused"")"
125010,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/GridAbstractTest.java,480,,"    @SuppressWarnings({""deprecation""})"
125011,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/GridAbstractTest.java,690,,"        U.quietAndInfo(log(), "">>> Starting test class: "" + testClassDescription() + "" <<<"");"
125012,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/IgniteCacheConfigVariationsAbstractTest.java,243,,"                                    info("">>>>> Debug localSize for grid: "" + fi + "" is "" + locSize);"
125013,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/IgniteConfigVariationsAbstractTest.java,427,,"            strVal = ""val"" + val;"
125014,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/cache/GridAbstractCacheStoreSelfTest.java,225,,"            store.write(new CacheEntryImpl<>(""key1"", ""val1""));"
125015,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/cache/GridAbstractCacheStoreSelfTest.java,225,,"            store.write(new CacheEntryImpl<>(""key1"", ""val1""));"
125016,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/cache/GridAbstractCacheStoreSelfTest.java,240,,"            col.add(new CacheEntryImpl<>(""key2"", ""val2""));"
125017,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/cache/GridAbstractCacheStoreSelfTest.java,241,,"            col.add(new CacheEntryImpl<>(""key3"", ""val3""));"
125018,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/common/GridCommonAbstractTest.java,756,,"                                            ""igniteInstanceName="" + g.name() +"
125019,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/common/GridCommonAbstractTest.java,757,,"                                            "", cache="" + cfg.getName() +"
125020,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/common/GridCommonAbstractTest.java,758,,"                                            "", cacheId="" + dht.context().cacheId() +"
125021,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/common/GridCommonAbstractTest.java,759,,"                                            "", topVer="" + top.readyTopologyVersion() +"
125022,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/common/GridCommonAbstractTest.java,760,,"                                            "", p="" + p +"
125023,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/common/GridCommonAbstractTest.java,766,,"                                            "", locNode="" + g.cluster().localNode() + ']');"
125024,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/common/GridCommonAbstractTest.java,1145,,"            log.error("">>> "" + tx);"
125025,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/common/GridCommonAbstractTest.java,1747,,"        assertFalse(""There are no alive nodes."", F.isEmpty(allGrids));"
125026,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/common/GridCommonAbstractTest.java,2426,,"                    "", cntrs="" + cntrMap + ']', cntr0, cntr.get2());"
125027,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteCacheProcessProxy.java,129,,"        throw new UnsupportedOperationException(""Method should be supported."");"
125028,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteClusterProcessProxy.java,67,,"        throw new UnsupportedOperationException(""Operation is not supported yet."");"
125029,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteEventsProcessProxy.java,52,,"        throw new UnsupportedOperationException(""Operation isn't supported yet."");"
125030,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteProcessProxy.java,471,,"        throw new UnsupportedOperationException(""Operation isn't supported yet."");"
125031,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/testframework/test/ConfigVariationsTestSuiteBuilderTest.java,147,,"            Assume.assumeFalse(""This test already has run."", alreadyRun.getAndSet(true));"
125032,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/AttributeNodeFilterSelfTest.java,66,,"        IgnitePredicate<ClusterNode> filter = new AttributeNodeFilter(""attr"", ""value"");"
125033,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/AttributeNodeFilterSelfTest.java,66,,"        IgnitePredicate<ClusterNode> filter = new AttributeNodeFilter(""attr"", ""value"");"
125034,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/AttributeNodeFilterSelfTest.java,69,,"        assertFalse(filter.apply(nodeProxy(F.asMap(""attr"", ""wrong""))));"
125035,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/AttributeNodeFilterSelfTest.java,96,,"            new AttributeNodeFilter(F.<String, Object>asMap(""attr1"", ""value1"", ""attr2"", ""value2""));"
125036,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/AttributeNodeFilterSelfTest.java,96,,"            new AttributeNodeFilter(F.<String, Object>asMap(""attr1"", ""value1"", ""attr2"", ""value2""));"
125037,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/AttributeNodeFilterSelfTest.java,96,,"            new AttributeNodeFilter(F.<String, Object>asMap(""attr1"", ""value1"", ""attr2"", ""value2""));"
125038,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/AttributeNodeFilterSelfTest.java,96,,"            new AttributeNodeFilter(F.<String, Object>asMap(""attr1"", ""value1"", ""attr2"", ""value2""));"
125039,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/AttributeNodeFilterSelfTest.java,130,,"        attrs = F.asMap(""group"", ""data"");"
125040,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/AttributeNodeFilterSelfTest.java,130,,"        attrs = F.asMap(""group"", ""data"");"
125041,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/GridConcurrentLinkedHashMapMultiThreadedSelfTest.java,52,,"        info("">>> Test grid concurrent linked hash map..."");"
125042,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/GridConcurrentLinkedHashMapMultiThreadedSelfTest.java,307,,"                        map.put(key, ""value"");"
125043,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/GridLogThrottleTest.java,52,,"        checkErrorWithThrowable(""Test exception 1."", ""Test msg"", true);"
125044,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/GridLogThrottleTest.java,52,,"        checkErrorWithThrowable(""Test exception 1."", ""Test msg"", true);"
125045,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/GridLogThrottleTest.java,57,,"        checkError(""Test - without throwable."", true);"
125046,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/GridLogThrottleTest.java,61,,"        checkWarn(""Test - without throwable 1."", true);"
125047,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/mbeans/GridMBeanSelfTest.java,54,,"            if (opInfo.getDescription().equals(""MBeanOperation.""))"
125048,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/mbeans/GridMBeanSelfTest.java,63,,"            if (paramInfo.getName().equals(""ignored""))"
125049,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/mbeans/GridMBeanSelfTest.java,64,,"                assert paramInfo.getDescription().equals(""MBeanOperationParameter1."");"
125050,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/util/mbeans/GridMBeanSelfTest.java,66,,"                assert paramInfo.getName().equals(""someData"");"
125051,./TargetProjects/ignite/modules/dev-utils/src/main/java/org/apache/ignite/development/utils/IgniteWalConverterArguments.java,479,,"            out.printf(""\t%s = %s\n"", WAL_DIR, walDir.getAbsolutePath());"
125052,./TargetProjects/ignite/modules/dev-utils/src/test/java/org/apache/ignite/development/utils/IgniteWalConverterArgumentsTest.java,131,,"            final File wal = File.createTempFile(""wal"", """");"
125053,./TargetProjects/ignite/modules/dev-utils/src/test/java/org/apache/ignite/development/utils/IgniteWalConverterArgumentsTest.java,135,,"                ""walDir="" + wal.getAbsolutePath(),"
125054,./TargetProjects/ignite/modules/dev-utils/src/test/java/org/apache/ignite/development/utils/IgniteWalConverterArgumentsTest.java,385,,"        final File binaryMetadataDir = new File(System.getProperty(""java.io.tmpdir""));"
125055,./TargetProjects/ignite/modules/dev-utils/src/test/java/org/apache/ignite/development/utils/IgniteWalConverterArgumentsTest.java,432,,"            ""a:b"","
125056,./TargetProjects/ignite/modules/dev-utils/src/test/java/org/apache/ignite/development/utils/IgniteWalConverterArgumentsTest.java,445,,"        assertEquals(new T2<>(1, 1L), parsePageId(""1:1""));"
125057,./TargetProjects/ignite/modules/dev-utils/src/test/java/org/apache/ignite/development/utils/IgniteWalConverterTest.java,192,,"            index = result.indexOf(""DataRecord"", index);"
125058,./TargetProjects/ignite/modules/dev-utils/src/test/java/org/apache/ignite/development/utils/IgniteWalConverterTest.java,198,,"                    index = result.indexOf(""id="" + person.getId(), index + 9);"
125059,./TargetProjects/ignite/modules/geospatial/src/test/java/org/apache/ignite/internal/processors/query/h2/H2IndexesSystemViewTest.java,76,,"                {-825022849, ""SQL_PUBLIC_AFF_CACHE"", ""PUBLIC"", ""AFF_CACHE"", ""IDX_GEO_1"", ""SPATIAL"", ""\""GEOM\"" ASC"", false, false, null},"
125060,./TargetProjects/ignite/modules/geospatial/src/test/java/org/apache/ignite/internal/processors/query/h2/H2IndexesSystemViewTest.java,76,,"                {-825022849, ""SQL_PUBLIC_AFF_CACHE"", ""PUBLIC"", ""AFF_CACHE"", ""IDX_GEO_1"", ""SPATIAL"", ""\""GEOM\"" ASC"", false, false, null},"
125061,./TargetProjects/ignite/modules/geospatial/src/test/java/org/apache/ignite/internal/processors/query/h2/H2IndexesSystemViewTest.java,76,,"                {-825022849, ""SQL_PUBLIC_AFF_CACHE"", ""PUBLIC"", ""AFF_CACHE"", ""IDX_GEO_1"", ""SPATIAL"", ""\""GEOM\"" ASC"", false, false, null},"
125062,./TargetProjects/ignite/modules/geospatial/src/test/java/org/apache/ignite/internal/processors/query/h2/H2IndexingAbstractGeoSelfTest.java,108,,"    @SuppressWarnings(""unchecked"")"
125063,./TargetProjects/ignite/modules/geospatial/src/test/java/org/apache/ignite/internal/processors/query/h2/H2IndexingAbstractGeoSelfTest.java,247,,"                .setArgs(r.read(""POLYGON((5 70, 5 80, 30 80, 30 70, 5 70))"")).setLocal(true))"
125064,./TargetProjects/ignite/modules/geospatial/src/test/java/org/apache/ignite/internal/processors/query/h2/H2IndexingAbstractGeoSelfTest.java,285,,"        IgniteCache<Integer, EnemyCamp> cache = createCache(""camp"", true, Integer.class, EnemyCamp.class, dynamic);"
125065,./TargetProjects/ignite/modules/hibernate-4.2/src/main/java/org/apache/ignite/cache/store/hibernate/CacheHibernateBlobStore.java,147,,"            log.debug(""Store load [key="" + key + "", tx="" + tx + ']');"
125066,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheConfigurationSelfTest.java,241,,"            assertEquals(""Unexpected entries: "" + toSet(cache1.iterator()), expCache1, cache1.size());"
125067,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheConfigurationSelfTest.java,283,,"    @SuppressWarnings({""PublicInnerClass"", ""UnnecessaryFullyQualifiedName""})"
125068,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheConfigurationSelfTest.java,283,,"    @SuppressWarnings({""PublicInnerClass"", ""UnnecessaryFullyQualifiedName""})"
125069,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,113,,"    @SuppressWarnings({""PublicInnerClass"", ""UnnecessaryFullyQualifiedName""})"
125070,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,550,,"                    Entity e = new Entity(i, ""name-"" + i);"
125071,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,704,,"                ses.save(new Entity(2, ""name-2""));"
125072,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,710,,"                e1.setName(""name-1-changed1"");"
125073,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,716,,"                ses.save(new Entity(3, ""name-3""));"
125074,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,945,,"                fail(""Commit must fail."");"
125075,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,948,,"                log.info(""Expected exception: "" + e);"
125076,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,1487,,"                Query qry1 = ses.createQuery(""from "" + ENTITY_NAME + "" where id > 2"");"
125077,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,1487,,"                Query qry1 = ses.createQuery(""from "" + ENTITY_NAME + "" where id > 2"");"
125078,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,1493,,"                Query qry2 = ses.createQuery(""from "" + ENTITY_NAME + "" where name = 'name-0'"");"
125079,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheStrategySelfTest.java,103,,"            cacheConfiguration(""cache1""),"
125080,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheStrategySelfTest.java,104,,"            cacheConfiguration(""cache2""),"
125081,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheStrategySelfTest.java,147,,"        cfg.setProperty(GENERATE_STATISTICS, ""true"");"
125082,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheStrategySelfTest.java,348,,"    @SuppressWarnings({""PublicInnerClass"", ""UnnecessaryFullyQualifiedName""})"
125083,./TargetProjects/ignite/modules/hibernate-4.2/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheStrategySelfTest.java,348,,"    @SuppressWarnings({""PublicInnerClass"", ""UnnecessaryFullyQualifiedName""})"
125084,./TargetProjects/ignite/modules/hibernate-5.1/src/main/java/org/apache/ignite/cache/store/hibernate/CacheHibernateBlobStore.java,148,,"            log.debug(""Store load [key="" + key + "", tx="" + tx + ']');"
125085,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheConfigurationSelfTest.java,239,,"            assertEquals(""Unexpected entries: "" + toSet(cache1.iterator()), expCache1, cache1.size());"
125086,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheConfigurationSelfTest.java,282,,"    @SuppressWarnings({""PublicInnerClass"", ""UnnecessaryFullyQualifiedName""})"
125087,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheConfigurationSelfTest.java,282,,"    @SuppressWarnings({""PublicInnerClass"", ""UnnecessaryFullyQualifiedName""})"
125088,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,120,,"    @SuppressWarnings({""PublicInnerClass"", ""UnnecessaryFullyQualifiedName""})"
125089,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,528,,"                    Entity e = new Entity(i, ""name-"" + i);"
125090,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,682,,"                ses.save(new Entity(2, ""name-2""));"
125091,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,688,,"                e1.setName(""name-1-changed1"");"
125092,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,694,,"                ses.save(new Entity(3, ""name-3""));"
125093,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,923,,"                fail(""Commit must fail."");"
125094,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,926,,"                log.info(""Expected exception: "" + e);"
125095,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,1465,,"                Query qry1 = ses.createQuery(""from "" + ENTITY_NAME + "" where id > 2"");"
125096,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,1465,,"                Query qry1 = ses.createQuery(""from "" + ENTITY_NAME + "" where id > 2"");"
125097,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,1471,,"                Query qry2 = ses.createQuery(""from "" + ENTITY_NAME + "" where name = 'name-0'"");"
125098,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheStrategySelfTest.java,99,,"            cacheConfiguration(""cache1""),"
125099,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheStrategySelfTest.java,100,,"            cacheConfiguration(""cache2""),"
125100,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheStrategySelfTest.java,320,,"    @SuppressWarnings({""PublicInnerClass"", ""UnnecessaryFullyQualifiedName""})"
125101,./TargetProjects/ignite/modules/hibernate-5.1/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheStrategySelfTest.java,320,,"    @SuppressWarnings({""PublicInnerClass"", ""UnnecessaryFullyQualifiedName""})"
125102,./TargetProjects/ignite/modules/hibernate-5.3/src/main/java/org/apache/ignite/cache/store/hibernate/CacheHibernateBlobStore.java,148,,"            log.debug(""Store load [key="" + key + "", tx="" + tx + ']');"
125103,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheConfigurationSelfTest.java,255,,"            assertEquals(""Unexpected entries: "" + toSet(cache1.iterator()), expCache1, cache1.size());"
125104,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheConfigurationSelfTest.java,306,,"    @SuppressWarnings({""PublicInnerClass"", ""UnnecessaryFullyQualifiedName""})"
125105,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheConfigurationSelfTest.java,306,,"    @SuppressWarnings({""PublicInnerClass"", ""UnnecessaryFullyQualifiedName""})"
125106,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,128,,"    @SuppressWarnings({""PublicInnerClass"", ""UnnecessaryFullyQualifiedName""})"
125107,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,551,,"                    Entity e = new Entity(i, ""name-"" + i);"
125108,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,705,,"                ses.save(new Entity(2, ""name-2""));"
125109,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,711,,"                e1.setName(""name-1-changed1"");"
125110,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,717,,"                ses.save(new Entity(3, ""name-3""));"
125111,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,946,,"                fail(""Commit must fail."");"
125112,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,950,,"                log.info(""Expected exception: "" + e);"
125113,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,1506,,"                Query qry1 = ses.createQuery(""from "" + ENTITY_NAME + "" where id > 2"");"
125114,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,1506,,"                Query qry1 = ses.createQuery(""from "" + ENTITY_NAME + "" where id > 2"");"
125115,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheSelfTest.java,1512,,"                Query qry2 = ses.createQuery(""from "" + ENTITY_NAME + "" where name = 'name-0'"");"
125116,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheStrategySelfTest.java,100,,"            cacheConfiguration(""cache1""),"
125117,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheStrategySelfTest.java,101,,"            cacheConfiguration(""cache2""),"
125118,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheStrategySelfTest.java,327,,"    @SuppressWarnings({""PublicInnerClass"", ""UnnecessaryFullyQualifiedName""})"
125119,./TargetProjects/ignite/modules/hibernate-5.3/src/test/java/org/apache/ignite/cache/hibernate/HibernateL2CacheStrategySelfTest.java,327,,"    @SuppressWarnings({""PublicInnerClass"", ""UnnecessaryFullyQualifiedName""})"
125120,./TargetProjects/ignite/modules/hibernate-core/src/main/java/org/apache/ignite/cache/hibernate/HibernateReadWriteAccessStrategy.java,99,,"                log.debug(""Get [cache="" + cache.name() + "", key="" + key + "", val="" + val +"
125121,./TargetProjects/ignite/modules/hibernate-core/src/main/java/org/apache/ignite/cache/hibernate/HibernateReadWriteAccessStrategy.java,99,,"                log.debug(""Get [cache="" + cache.name() + "", key="" + key + "", val="" + val +"
125122,./TargetProjects/ignite/modules/hibernate-core/src/main/java/org/apache/ignite/cache/hibernate/HibernateReadWriteAccessStrategy.java,100,,"                    "", success="" + success + ']');"
125123,./TargetProjects/ignite/modules/hibernate-core/src/main/java/org/apache/ignite/cache/hibernate/HibernateTransactionalAccessStrategy.java,74,,"                log.debug(""Get [cache="" + cache.name() + "", key="" + key + "", val="" + val + ']');"
125124,./TargetProjects/ignite/modules/hibernate-core/src/main/java/org/apache/ignite/cache/hibernate/HibernateTransactionalAccessStrategy.java,74,,"                log.debug(""Get [cache="" + cache.name() + "", key="" + key + "", val="" + val + ']');"
125125,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/managers/systemview/walker/StatisticsColumnConfigurationViewWalker.java,34,,"    public static final String SCHEMA_FILTER = ""schema"";"
125126,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/managers/systemview/walker/StatisticsColumnConfigurationViewWalker.java,37,,"    public static final String TYPE_FILTER = ""type"";"
125127,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/managers/systemview/walker/StatisticsColumnConfigurationViewWalker.java,40,,"    public static final String NAME_FILTER = ""name"";"
125128,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/managers/systemview/walker/StatisticsColumnConfigurationViewWalker.java,43,,"    public static final String COLUMN_FILTER = ""column"";"
125129,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/managers/systemview/walker/StatisticsColumnLocalDataViewWalker.java,35,,"    public static final String SCHEMA_FILTER = ""schema"";"
125130,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/managers/systemview/walker/StatisticsColumnLocalDataViewWalker.java,38,,"    public static final String TYPE_FILTER = ""type"";"
125131,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/managers/systemview/walker/StatisticsColumnLocalDataViewWalker.java,41,,"    public static final String NAME_FILTER = ""name"";"
125132,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/managers/systemview/walker/StatisticsColumnLocalDataViewWalker.java,44,,"    public static final String COLUMN_FILTER = ""column"";"
125133,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/managers/systemview/walker/StatisticsColumnPartitionDataViewWalker.java,34,,"    public static final String SCHEMA_FILTER = ""schema"";"
125134,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/managers/systemview/walker/StatisticsColumnPartitionDataViewWalker.java,37,,"    public static final String TYPE_FILTER = ""type"";"
125135,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/managers/systemview/walker/StatisticsColumnPartitionDataViewWalker.java,40,,"    public static final String NAME_FILTER = ""name"";"
125136,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/managers/systemview/walker/StatisticsColumnPartitionDataViewWalker.java,43,,"    public static final String COLUMN_FILTER = ""column"";"
125137,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/managers/systemview/walker/StatisticsColumnPartitionDataViewWalker.java,46,,"    public static final String PARTITION_FILTER = ""partition"";"
125138,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/CommandProcessor.java,466,,"                    "",qryId="" + cmd.nodeQueryId() + ""]"");"
125139,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/ConnectionManager.java,72,,"        System.setProperty(""h2.objectCache"", ""false"");"
125140,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/QueryParameters.java,76,,"    @SuppressWarnings(""AssignmentOrReturnOfFieldWithMutableType"")"
125141,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/dml/UpdatePlanBuilder.java,711,,"                                throw new IgniteCheckedException(""Failed to instantiate "" +"
125142,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/dml/UpdatePlanBuilder.java,712,,"                                    (key ? ""key"" : ""value"") + "" [type="" + typeName + ']', e);"
125143,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/dml/UpdatePlanBuilder.java,712,,"                                    (key ? ""key"" : ""value"") + "" [type="" + typeName + ']', e);"
125144,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/sql/GridSqlQueryParser.java,162,,"    private static final Getter<Operation, Expression> OPERATION_LEFT = getter(Operation.class, ""left"");"
125145,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/sql/GridSqlQueryParser.java,165,,"    private static final Getter<Operation, Expression> OPERATION_RIGHT = getter(Operation.class, ""right"");"
125146,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/sql/GridSqlQueryParser.java,222,,"    private static final Getter<ConditionInSelect, Query> QUERY_IN = getter(ConditionInSelect.class, ""query"");"
125147,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/sys/SystemViewH2Adapter.java,89,,"        throw DbException.getUnsupportedException(""META"");"
125148,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/twostep/ReducePartitionMapper.java,96,,"                        ""partition has been lostPart [cacheName="" + cctx.name() + "", part="" + lostPart + ']'));"
125149,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/twostep/ReducePartitionMapper.java,429,,"                            "", cacheName="" + cctx.name() + "", cacheId="" + cctx.cacheId() + "", part="" + p +"
125150,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/stat/hll/HLL.java,201,,"            throw new IllegalArgumentException(""'log2m' must be at least "" + MINIMUM_LOG2M_PARAM + "" and at most "" +"
125151,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/stat/hll/HLL.java,202,,"                MAXIMUM_LOG2M_PARAM + "" (was: "" + log2m + "")"");"
125152,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/stat/hll/HLL.java,418,,"                throw new RuntimeException(""Unsupported HLL type "" + type);"
125153,./TargetProjects/ignite/modules/indexing/src/main/java/org/apache/ignite/internal/visor/verify/ValidateIndexesClosure.java,775,,"            processedPartitions.get() + "" of "" + totalPartitions + "" partitions, "" +"
125154,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/client/FunctionalQueryTest.java,164,,"                )).setSchema(""PUBLIC"")"
125155,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/client/SecurityTest.java,86,,"        sslCfg.setKeyStorePassword(""123456"".toCharArray());"
125156,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/client/SecurityTest.java,167,,"                 .setUserPassword(""password"")"
125157,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/metric/SqlStatisticsUserQueriesFastTest.java,85,,"            ""success"");"
125158,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/metric/SqlStatisticsUserQueriesFastTest.java,106,,"            ""failed"");"
125159,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/metric/SqlStatisticsUserQueriesLongTest.java,54,,"        Assert.assertEquals(0, longMetricValue(REDUCER_IDX, ""success""));"
125160,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/metric/SqlStatisticsUserQueriesLongTest.java,55,,"        Assert.assertEquals(0, longMetricValue(REDUCER_IDX, ""failed""));"
125161,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/metric/SqlStatisticsUserQueriesLongTest.java,56,,"        Assert.assertEquals(0, longMetricValue(REDUCER_IDX, ""canceled""));"
125162,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/BinarySerializationQuerySelfTest.java,143,,"        entity.addQueryField(""val"", Integer.class.getName(), null);"
125163,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/BinaryTypeMismatchLoggingTest.java,57,,"        IgniteCache def = ignite.createCache(""default"");"
125164,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/BinaryTypeMismatchLoggingTest.java,59,,"        def.query(new SqlFieldsQuery(""CREATE TABLE binary (id INT PRIMARY KEY, str VARCHAR) "" +"
125165,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/BinaryTypeMismatchLoggingTest.java,60,,"            ""WITH \""cache_name=binary, value_type=Payload\"""").setSchema(""PUBLIC""));"
125166,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/BinaryTypeMismatchLoggingTest.java,62,,"        def.query(new SqlFieldsQuery(""INSERT INTO binary (id, str) VALUES (1, 'foo');"").setSchema(""PUBLIC""));"
125167,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/BinaryTypeMismatchLoggingTest.java,63,,"        def.query(new SqlFieldsQuery(""INSERT INTO binary (id, str) VALUES (2, 'bar');"").setSchema(""PUBLIC""));"
125168,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/BinaryTypeMismatchLoggingTest.java,69,,"                    return ignite.cache(""binary"").get(1);"
125169,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/BinaryTypeMismatchLoggingTest.java,73,,"            ""Payload"");"
125170,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/BinaryTypeMismatchLoggingTest.java,84,,"        fields.put(""id"", ""java.lang.Integer"");"
125171,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/BinaryTypeMismatchLoggingTest.java,85,,"        fields.put(""str"", ""java.lang.String"");"
125172,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/BinaryTypeMismatchLoggingTest.java,85,,"        fields.put(""str"", ""java.lang.String"");"
125173,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/BinaryTypeMismatchLoggingTest.java,128,,"            ""IdKey"");"
125174,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/BinaryTypeMismatchLoggingTest.java,174,,"        binary.put(1, new Payload(""foo""));"
125175,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/BinaryTypeMismatchLoggingTest.java,175,,"        binary.put(2, new Payload(""bar""));"
125176,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheAbstractQueryDetailMetricsSelfTest.java,106,,"        SqlFieldsQuery qry = new SqlFieldsQuery(""select * from String"");"
125177,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheAbstractQueryDetailMetricsSelfTest.java,153,,"        cache.query(new SqlFieldsQuery(""select count(*) from String"")).getAll();"
125178,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheAbstractQueryDetailMetricsSelfTest.java,156,,"        cache.query(new SqlFieldsQuery(""select * from String limit 1"")).getAll();"
125179,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheAbstractQueryDetailMetricsSelfTest.java,159,,"        cache.query(new SqlFieldsQuery(""select * from String limit 2"")).getAll();"
125180,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheAbstractQueryDetailMetricsSelfTest.java,165,,"        cache.query(new SqlQuery(""String"", ""from String"")).getAll();"
125181,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheAbstractQueryDetailMetricsSelfTest.java,165,,"        cache.query(new SqlQuery(""String"", ""from String"")).getAll();"
125182,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheAbstractQueryDetailMetricsSelfTest.java,167,,"        waitingFor(cache, ""size"", QRY_DETAIL_METRICS_SIZE);"
125183,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheAbstractQueryMetricsSelfTest.java,188,,"        SqlQuery qry = new SqlQuery<>(""String"", ""from String"");"
125184,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheGroupMetricsWithIndexTest.java,146,,"                .setField(COLUMN2_NAME, ""str"" + Integer.toHexString(i));"
125185,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheGroupMetricsWithIndexTest.java,166,,"        LongMetric idxBuildCntPartitionsLeft = metrics.findMetric(""IndexBuildCountPartitionsLeft"");"
125186,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheQueryNewClientSelfTest.java,48,,"                setName(""cache1"").setIndexedTypes(Integer.class, Integer.class));"
125187,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheRegisterMetadataLocallyTest.java,126,,"        assertEquals(""affKey"", getAffinityKey(ignite, StaticKey.class));"
125188,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheSqlQueryValueCopySelfTest.java,102,,"                entry.getValue().str = ""after"";"
125189,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/ClientReconnectAfterClusterRestartTest.java,94,,"        entity.setKeyType(""java.lang.Long"");"
125190,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/ClientReconnectAfterClusterRestartTest.java,99,,"        fields.put(""PARTITIONID"", ""java.lang.Long"");"
125191,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/ClientReconnectAfterClusterRestartTest.java,100,,"        fields.put(""CLIENTID"", ""java.lang.Long"");"
125192,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/ClientReconnectAfterClusterRestartTest.java,101,,"        fields.put(""PARAMETRCODE"", ""java.lang.Long"");"
125193,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/ClientReconnectAfterClusterRestartTest.java,102,,"        fields.put(""PARAMETRVALUE"", ""java.lang.Object"");"
125194,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/ClientReconnectAfterClusterRestartTest.java,103,,"        fields.put(""PARENTID"", ""java.lang.Long"");"
125195,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/ClientReconnectAfterClusterRestartTest.java,183,,"            BinaryObjectBuilder builder = client.binary().builder(""PARAMS"");"
125196,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/ClientReconnectAfterClusterRestartTest.java,189,,"            builder.setField(""PARAMETRVALUE"", ""Test value"");"
125197,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/DdlTransactionSelfTest.java,87,,"                ""CREATE TABLE "" +"
125198,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/DdlTransactionSelfTest.java,88,,"                    ""    person (id int, name varchar, age int, company varchar, city varchar, primary key (id, name, city))"" +"
125199,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/DdlTransactionSelfTest.java,89,,"                    ""WITH "" +"
125200,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/DdlTransactionSelfTest.java,90,,"                    ""    \""template=PARTITIONED,atomicity=TRANSACTIONAL,affinity_key=city\"""").setSchema(""PUBLIC""))) {"
125201,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/DdlTransactionSelfTest.java,90,,"                    ""    \""template=PARTITIONED,atomicity=TRANSACTIONAL,affinity_key=city\"""").setSchema(""PUBLIC""))) {"
125202,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/DdlTransactionSelfTest.java,104,,"        try (FieldsQueryCursor<List<?>> cur = cache.query(new SqlFieldsQuery(""SELECT * FROM person"").setSchema(""PUBLIC""))) {"
125203,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheCrossCacheQuerySelfTest.java,134,,"            X.println(""___ -> "" + o);"
125204,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheDynamicLoadOnClientTest.java,122,,"        SqlFieldsQuery qry = new SqlFieldsQuery(""SELECT * FROM "" + FULL_TABLE_NAME);"
125205,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheQueryIndexDisabledSelfTest.java,70,,"            X.println(""Caught expected exception: "" + e);"
125206,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,162,,"        personCache.put(new AffinityKey<>(""p1"", ""o1""), new Person(""John White"", 25, 1));"
125207,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,163,,"        personCache.put(new AffinityKey<>(""p2"", ""o1""), new Person(""Joe Black"", 35, 1));"
125208,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,164,,"        personCache.put(new AffinityKey<>(""p3"", ""o2""), new Person(""Mike Green"", 40, 2));"
125209,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,231,,"                    assertEquals(""Invalid types size"", 1, types.size());"
125210,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,232,,"                    assert types.contains(""Person"");"
125211,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,249,,"                        assert Integer.class.getName().equals(fields.get(""AGE""));"
125212,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,257,,"                    assert String.class.getName().equals(fields.get(""NAME""));"
125213,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,291,,"                    assert types.contains(""Organization"");"
125214,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,316,,"                    assert types.contains(""Integer"");"
125215,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,330,,"                    assert types.contains(""String"");"
125216,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,344,,"                else if (!""cacheWithCustomKeyPrecision"".equalsIgnoreCase(meta.cacheName()) &&"
125217,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,345,,"                         !""cacheWithDecimalPrecisionAndScale"".equalsIgnoreCase(meta.cacheName()))"
125218,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,383,,"            .addQueryField(""strField"", ""java.lang.String"", ""strField"")"
125219,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,383,,"            .addQueryField(""strField"", ""java.lang.String"", ""strField"")"
125220,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,387,,"            .setName(""cacheWithPrecision"")"
125221,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,432,,"                .addQueryField(""age"", ""java.math.BigDecimal"", ""age"")"
125222,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,465,,"            .setKeyFieldName(""my_key"")"
125223,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractFieldsQuerySelfTest.java,999,,"            intCache.query(sqlFieldsQuery(""select _key, _val from Integer"").setPageSize(10));"
125224,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractInsertSqlQuerySelfTest.java,135,,"            QueryEntity s2p = new QueryEntity(String.class.getName(), ""Person"");"
125225,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractInsertSqlQuerySelfTest.java,140,,"            flds.put(""firstName"", String.class.getName());"
125226,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractQuerySelfTest.java,298,,"        cache.put(1, ""value"");"
125227,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractQuerySelfTest.java,328,,"        cache.put(666, ""test"");"
125228,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractQuerySelfTest.java,831,,"        assertEnumQry(""type > ?"", EnumType.TYPE_A, EnumType.TYPE_B, cache, 25);"
125229,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractQuerySelfTest.java,832,,"        assertEnumQry(""type < ?"", EnumType.TYPE_B, EnumType.TYPE_A, cache, 25);"
125230,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractQuerySelfTest.java,1059,,"            cache.query(new TextQuery<Integer, ObjectValue>(ObjectValue.class, ""full""));"
125231,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractQuerySelfTest.java,1361,,"        cache.put(new BadHashKeyObject(""test_key1""), (byte)1);"
125232,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractQuerySelfTest.java,1362,,"        cache.put(new BadHashKeyObject(""test_key0""), (byte)10);"
125233,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractQuerySelfTest.java,1512,,"                        fail(""Cache events are disabled"");"
125234,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractSqlDmlQuerySelfTest.java,79,,"        ignite(0).createCache(cacheConfig(""S2P"", true, false).setIndexedTypes(String.class, Person.class));"
125235,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractSqlDmlQuerySelfTest.java,96,,"            ignite(0).cache(""S2P-bin"").put(""FirstKey"", createBinPerson(1, ""John"", ""White""));"
125236,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheConfigurationPrimitiveTypesSelfTest.java,72,,"        assertEquals(cacheByte.query(new SqlQuery<>(Byte.class, ""1 = 1"")).getAll().size(), 1);"
125237,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDeleteSqlQuerySelfTest.java,50,,"        assertEqualsCollections(Arrays.asList(""SecondKey"", createPerson(2, ""Joe"", ""Black""), 2, ""Joe"", ""Black""),"
125238,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDeleteSqlQuerySelfTest.java,50,,"        assertEqualsCollections(Arrays.asList(""SecondKey"", createPerson(2, ""Joe"", ""Black""), 2, ""Joe"", ""Black""),"
125239,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDeleteSqlQuerySelfTest.java,53,,"        assertEqualsCollections(Arrays.asList(""f0u4thk3y"", createPerson(4, ""Jane"", ""Silver""), 4, ""Jane"", ""Silver""),"
125240,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDeleteSqlQuerySelfTest.java,53,,"        assertEqualsCollections(Arrays.asList(""f0u4thk3y"", createPerson(4, ""Jane"", ""Silver""), 4, ""Jane"", ""Silver""),"
125241,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDistributedJoinCollocatedAndNotTest.java,77,,"            entity.addQueryField(""name"", String.class.getName(), null);"
125242,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDistributedJoinCustomAffinityMapper.java,71,,"            entity.addQueryField(""orgId"", Integer.class.getName(), null);"
125243,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDistributedJoinNoIndexTest.java,143,,"        checkNoIndexError(personCache, ""select o.name, p._key, p.orgName "" +"
125244,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDistributedJoinNoIndexTest.java,145,,"            ""where p.orgName = o.name"");"
125245,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDistributedJoinPartitionedAndReplicatedTest.java,96,,"            entity.addQueryField(""orgId"", Integer.class.getName(), null);"
125246,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDistributedJoinPartitionedAndReplicatedTest.java,97,,"            entity.addQueryField(""name"", String.class.getName(), null);"
125247,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDistributedJoinPartitionedAndReplicatedTest.java,231,,"            checkQuery(""select o.name, p._key, p.name, a.name "" +"
125248,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDistributedJoinPartitionedAndReplicatedTest.java,232,,"                ""from \""org\"".Organization o, \""person\"".Person p, \""acc\"".Account a "" +"
125249,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDistributedJoinPartitionedAndReplicatedTest.java,233,,"                ""where p.orgId = o._key and p._key = a.personId and a.orgId=o._key"", qryCache, false, 2);"
125250,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDistributedJoinQueryConditionsTest.java,88,,"            checkQuery(""select o._key, o.name, p._key, p.name "" +"
125251,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDistributedJoinQueryConditionsTest.java,89,,"                ""from \""org\"".Organization o, Person p "" +"
125252,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDistributedJoinQueryConditionsTest.java,291,,"            checkQuery(""select p1._key, p1.name, p2._key, p2.name "" +"
125253,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDistributedJoinQueryConditionsTest.java,292,,"                ""from Person p1, Person p2 "" +"
125254,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheDistributedJoinQueryConditionsTest.java,451,,"        entity.addQueryField(""name"", String.class.getName(), null);"
125255,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheInsertSqlQuerySelfTest.java,54,,"            ""ALLOW_KEY_VAL_UPDATES"");"
125256,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheInsertSqlQuerySelfTest.java,62,,"                ""('a', 2, 'Alex')"").setArgs(1, ""Sergi""));"
125257,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheInsertSqlQuerySelfTest.java,66,,"            assertEquals(createPerson(2, ""Alex""), p.get(""a""));"
125258,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheJoinPartitionedAndReplicatedCollocationTest.java,208,,"            insert(accCache, keyForNode(aff, accKey, node0), new Account(pKey5, ""a-p5-1""));"
125259,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheJoinPartitionedAndReplicatedCollocationTest.java,223,,"                checkQuery(""select p._key, p.name, a.name "" +"
125260,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheJoinPartitionedAndReplicatedTest.java,174,,"        checkQuery(""select o.name, p._key, p.name "" +"
125261,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheJoinPartitionedAndReplicatedTest.java,176,,"            ""on (p.orgId = o.id)"", orgCache, 2);"
125262,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheJoinQueryWithAffinityKeyTest.java,214,,"            qry2 = new SqlFieldsQuery(""select count(*) "" +"
125263,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheJoinQueryWithAffinityKeyTest.java,239,,"            sql1 = ""select p.\""name\"" from \""Person\"" p, \"""" + (affKey ? ""AccountKeyWithAffinity"" : ""Account"") + ""\"" a "" +"
125264,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheJoinQueryWithAffinityKeyTest.java,239,,"            sql1 = ""select p.\""name\"" from \""Person\"" p, \"""" + (affKey ? ""AccountKeyWithAffinity"" : ""Account"") + ""\"" a "" +"
125265,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheJoinQueryWithAffinityKeyTest.java,239,,"            sql1 = ""select p.\""name\"" from \""Person\"" p, \"""" + (affKey ? ""AccountKeyWithAffinity"" : ""Account"") + ""\"" a "" +"
125266,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheJoinQueryWithAffinityKeyTest.java,243,,"            sql1 = ""select p.name from Person p, "" + (affKey ? ""AccountKeyWithAffinity"" : ""Account"") + "" a "" +"
125267,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheJoinQueryWithAffinityKeyTest.java,356,,"        person.addQueryField(""name"", String.class.getName(), null);"
125268,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheLockPartitionOnAffinityRunTest.java,450,,"                        fail(""Unexpected exception"");"
125269,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheMergeSqlQueryFailingTest.java,39,,"                ""WITH \""template=replicated\"""").setSchema(""PUBLIC""));"
125270,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheMergeSqlQuerySelfTest.java,37,,"            ""('a', 2, 'Alex')"").setArgs(1, ""Sergi""));"
125271,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheMergeSqlQuerySelfTest.java,41,,"        assertEquals(createPerson(2, ""Alex""), p.get(""a""));"
125272,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheMultipleIndexedTypesTest.java,65,,"            fields.put(""name"", String.class.getName());"
125273,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheQueryIndexSelfTest.java,100,,"        assert map.entrySet().size() == ENTRY_CNT : ""Expected: "" + ENTRY_CNT + "", but was: "" + cache.size();"
125274,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheQueryIndexSelfTest.java,100,,"        assert map.entrySet().size() == ENTRY_CNT : ""Expected: "" + ENTRY_CNT + "", but was: "" + cache.size();"
125275,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheQueryLoadSelfTest.java,118,,"            cache.query(new SqlQuery(ValueObject.class, ""val >= 0"")).getAll();"
125276,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheQueryMultiThreadedSelfTest.java,205,,"    @SuppressWarnings({""TooBroadScope""})"
125277,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheQueryMultiThreadedSelfTest.java,218,,"        assertEquals(0, c.query(new SqlQuery(String.class, ""1 = 1"")).getAll().size());"
125278,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheSqlDmlErrorSelfTest.java,92,,"                    new CompositeKey(), 42, ""name#1"", ""name#2""),"
125279,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheSqlDmlErrorSelfTest.java,92,,"                    new CompositeKey(), 42, ""name#1"", ""name#2""),"
125280,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheSqlDmlErrorSelfTest.java,98,,"            ""Column _VAL refers to entire value cache object."");"
125281,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheSqlDmlErrorSelfTest.java,106,,"            ""Columns _VAL and NAME both refer to entire cache value object."");"
125282,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheSqlDmlErrorSelfTest.java,135,,"                execute(""COPY FROM \'stub/file/path\' "" +"
125283,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheSqlDmlErrorSelfTest.java,188,,"            ""Null value is not allowed for column 'ID'"");"
125284,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheSqlDmlErrorSelfTest.java,196,,"            ""Null value is not allowed for column 'NAME'"");"
125285,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheSqlDmlErrorSelfTest.java,235,,"            ""SQL UPDATE can't modify key or its fields directly"");"
125286,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheSqlDmlErrorSelfTest.java,241,,"                execute(""UPDATE SIMPLE SET _key = ?, _val = ?"", 42, ""simple name""),"
125287,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheSqlInsertValidationSelfTest.java,87,,"        defsFK2.put(""fk2"", DEFAULT_FK2_VAL);"
125288,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheSqlInsertValidationSelfTest.java,93,,"                        .addQueryField(""fk1"", ""java.lang.Long"", null)"
125289,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheSqlQueryErrorSelfTest.java,43,,"            ""Failed to parse query. Table \""WRONG\"" not found"");"
125290,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheSqlQueryErrorSelfTest.java,54,,"            ""Failed to parse query. Column \""WRONG\"" not found"");"
125291,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheUpdateSqlQuerySelfTest.java,55,,"        ignite(0).cache(""L2AT"").clear();"
125292,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheUpdateSqlQuerySelfTest.java,87,,"        assertEqualsCollections(asList(""FirstKey"", createPerson(2, ""Jo"", ""White""), 2, ""Jo"", ""White""),"
125293,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheUpdateSqlQuerySelfTest.java,90,,"        assertEqualsCollections(asList(""SecondKey"", createPerson(2, ""Joe"", ""Black""), 2, ""Joe"", ""Black""),"
125294,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheUpdateSqlQuerySelfTest.java,90,,"        assertEqualsCollections(asList(""SecondKey"", createPerson(2, ""Joe"", ""Black""), 2, ""Joe"", ""Black""),"
125295,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheUpdateSqlQuerySelfTest.java,93,,"        assertEqualsCollections(asList(""f0u4thk3y"", createPerson(4, ""Jane"", ""Silver""), 4, ""Jane"", ""Silver""),"
125296,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheUpdateSqlQuerySelfTest.java,93,,"        assertEqualsCollections(asList(""f0u4thk3y"", createPerson(4, ""Jane"", ""Silver""), 4, ""Jane"", ""Silver""),"
125297,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheUpdateSqlQuerySelfTest.java,96,,"        assertEqualsCollections(asList(""k3"", createPerson(6, ""Sy"", ""Green""), 6, ""Sy"", ""Green""),"
125298,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheUpdateSqlQuerySelfTest.java,106,,"            ""ALLOW_KEY_VAL_UPDATES"");"
125299,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheUpdateSqlQuerySelfTest.java,167,,"            p.query(new SqlFieldsQuery(""UPDATE \""AllTypes\"" "" +"
125300,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCrossCachesJoinsQueryTest.java,118,,"        st.execute(""create table \"""" + ACC_CACHE_NAME + ""\"".Account"" +"
125301,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCrossCachesJoinsQueryTest.java,257,,"            ""from \"""" + ACC_CACHE_NAME + ""\"".Account"");"
125302,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCrossCachesJoinsQueryTest.java,690,,"            account.addQueryField(""personId"", Integer.class.getName(), null);"
125303,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCrossCachesJoinsQueryTest.java,709,,"            person.addQueryField(""dateId"", Date.class.getName(), null);"
125304,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCrossCachesJoinsQueryTest.java,710,,"            person.addQueryField(""strId"", String.class.getName(), null);"
125305,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCrossCachesJoinsQueryTest.java,711,,"            person.addQueryField(""orgId"", Integer.class.getName(), null);"
125306,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCrossCachesJoinsQueryTest.java,714,,"            person.addQueryField(""name"", String.class.getName(), null);"
125307,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCrossCachesJoinsQueryTest.java,765,,"            ""from \"""" + ORG_CACHE_NAME + ""\"".Organization o, \"""" + PERSON_CACHE_NAME + ""\"".Person p "" +"
125308,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCrossCachesJoinsQueryTest.java,802,,"        SqlFieldsQuery qry3 = new SqlFieldsQuery(""select count(*) "" +"
125309,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCrossCachesJoinsQueryTest.java,825,,"        qrys.add(new SqlFieldsQuery(""select p.name from "" +"
125310,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCrossCachesJoinsQueryTest.java,826,,"                ""\"""" + PERSON_CACHE_NAME + ""\"".Person p, "" +"
125311,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCrossCachesJoinsQueryTest.java,827,,"                ""\"""" + ACC_CACHE_NAME + ""\"".Account a "" +"
125312,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCrossCachesJoinsQueryTest.java,901,,"            ""from \"""" + PERSON_CACHE_NAME + ""\"".Person p, \"""" + ACC_CACHE_NAME + ""\"".Account"" + "" a "" +"
125313,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCrossCachesJoinsQueryTest.java,901,,"            ""from \"""" + PERSON_CACHE_NAME + ""\"".Person p, \"""" + ACC_CACHE_NAME + ""\"".Account"" + "" a "" +"
125314,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCrossCachesJoinsQueryTest.java,944,,"            ""from "" +"
125315,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCrossCachesJoinsQueryTest.java,945,,"            ""\"""" + ORG_CACHE_NAME + ""\"".Organization o, "" +"
125316,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteDynamicSqlRestoreTest.java,62,,"    public static final String TEST_INDEX_OBJECT = ""TestIndexObject"";"
125317,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteDynamicSqlRestoreTest.java,115,,"            cache.query(new SqlFieldsQuery(""create index myindexa on TestIndexObject(a)"")).getAll();"
125318,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteDynamicSqlRestoreTest.java,116,,"            cache.query(new SqlFieldsQuery(""create index myindexb on TestIndexObject(b)"")).getAll();"
125319,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteDynamicSqlRestoreTest.java,117,,"            cache.query(new SqlFieldsQuery(""alter table TestIndexObject add column (c int)"")).getAll();"
125320,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteDynamicSqlRestoreTest.java,163,,"            assertIndexUsed(cache, ""explain select * from TestIndexObject where a > 5"", ""myindexa"");"
125321,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteDynamicSqlRestoreTest.java,163,,"            assertIndexUsed(cache, ""explain select * from TestIndexObject where a > 5"", ""myindexa"");"
125322,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteDynamicSqlRestoreTest.java,164,,"            assertFalse(cache.query(new SqlFieldsQuery(""SELECT a,b,c FROM TestIndexObject limit 1"")).getAll().isEmpty());"
125323,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteDynamicSqlRestoreTest.java,384,,"            fields.put(""A"", ""java.lang.Integer"");"
125324,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/QueryJoinWithDifferentNodeFiltersTest.java,119,,"        @SuppressWarnings(""unused"") @QuerySqlField(index = true) private int orgId;"
125325,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/SqlCacheStartStopTest.java,99,,"            execSql(srv, ""insert into "" + CACHE_NAMES[i] + ""(id, s) values(?, ?)"", ""srv"", ""srv"");"
125326,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/SqlCacheStartStopTest.java,99,,"            execSql(srv, ""insert into "" + CACHE_NAMES[i] + ""(id, s) values(?, ?)"", ""srv"", ""srv"");"
125327,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/SqlCacheStartStopTest.java,99,,"            execSql(srv, ""insert into "" + CACHE_NAMES[i] + ""(id, s) values(?, ?)"", ""srv"", ""srv"");"
125328,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/SqlCacheStartStopTest.java,100,,"            execSql(cli, ""insert into "" + CACHE_NAMES[i] + ""(id, s) values(?, ?)"", ""cli"", ""cli"");"
125329,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/SqlCacheStartStopTest.java,112,,"            execSql(cli, ""select * from "" + cacheName);"
125330,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/authentication/SqlUserCommandSelfTest.java,97,,"            userSql(i, ""CREATE USER test WITH PASSWORD 'test'"");"
125331,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/authentication/SqlUserCommandSelfTest.java,99,,"            SecurityContext secCtx = authenticate(grid(i), ""TEST"", ""test"");"
125332,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/authentication/SqlUserCommandSelfTest.java,111,,"            userSql(i, ""DROP USER test"");"
125333,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/distributed/CacheBlockOnSqlQueryTest.java,99,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-9916"")"
125334,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,115,,"        fields.put(""keyStr"", String.class.getName());"
125335,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,116,,"        fields.put(""keyLong"", Long.class.getName());"
125336,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,117,,"        fields.put(""keyPojo"", Pojo.class.getName());"
125337,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,118,,"        fields.put(""valStr"", String.class.getName());"
125338,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,119,,"        fields.put(""valLong"", Long.class.getName());"
125339,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,120,,"        fields.put(""valPojo"", Pojo.class.getName());"
125340,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,193,,"            log().info(""Checking inlineSize="" + i);"
125341,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,293,,"        qryProc.querySqlFields(new SqlFieldsQuery(""CREATE TABLE PUBLIC."" + tblName + "" (F1 VARCHAR, F2 VARCHAR, F3 VARCHAR, "" +"
125342,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,293,,"        qryProc.querySqlFields(new SqlFieldsQuery(""CREATE TABLE PUBLIC."" + tblName + "" (F1 VARCHAR, F2 VARCHAR, F3 VARCHAR, "" +"
125343,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,565,,"        String sql = ""explain select * from "" + tblName + "" where "";"
125344,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,669,,"        populateTable(qryProc, TEST_TBL_NAME, -2, ""FIRST_NAME"", ""LAST_NAME"","
125345,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,669,,"        populateTable(qryProc, TEST_TBL_NAME, -2, ""FIRST_NAME"", ""LAST_NAME"","
125346,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,670,,"            ""ADDRESS"", ""LANG"");"
125347,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,670,,"            ""ADDRESS"", ""LANG"");"
125348,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,673,,"            qryProc, ""idx1"", TEST_TBL_NAME, ""FIRST_NAME"", ""LAST_NAME""));"
125349,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,676,,"            qryProc, ""idx2"", TEST_TBL_NAME, ""LAST_NAME"", ""FIRST_NAME""));"
125350,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicIndexTest.java,958,,"        res = qryProc.querySqlFields(new SqlFieldsQuery(""select * from "" + TEST_TBL_NAME +"
125351,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicJavaTypesIndexTest.java,198,,"            fields.put(""idxVal"", idxCls.getName());"
125352,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicSqlTypesIndexTest.java,114,,"        createPopulateAndVerify(idxTypeStr, idxCls, Boolean::compareTo, PK, ""BACKUPS=1"");"
125353,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/BasicSqlTypesIndexTest.java,115,,"        createPopulateAndVerify(idxTypeStr, idxCls, Boolean::compareTo, PK, ""BACKUPS=1,AFFINITY_KEY=idxVal"");"
125354,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/ComplexPrimaryKeyUnwrapSelfTest.java,60,,"        executeSql(""CREATE TABLE "" + tblName + "" (id int, name varchar, age int, company varchar, city varchar, "" +"
125355,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/ComplexPrimaryKeyUnwrapSelfTest.java,75,,"                put(""char"", ""'1'"");"
125356,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/ComplexSecondaryKeyUnwrapSelfTest.java,58,,"        checkUsingIndexes(tblName, ""'1'"");"
125357,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/DynamicColumnsAbstractConcurrentSelfTest.java,206,,"            addCols(cli, QueryUtils.DFLT_SCHEMA, c(""age"", Integer.class.getName())) :"
125358,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/DynamicColumnsAbstractConcurrentSelfTest.java,220,,"            addOrRemove ? c(""age"", Integer.class.getName()) : c(""CITY"", String.class.getName()));"
125359,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/DynamicColumnsAbstractConcurrentSelfTest.java,226,,"            addCols(cli, QueryUtils.DFLT_SCHEMA, c(""city"", String.class.getName())) :"
125360,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/DynamicColumnsAbstractConcurrentSelfTest.java,243,,"            addOrRemove ? c(""city"", String.class.getName()) : c(""NAME"", String.class.getName()));"
125361,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/DynamicColumnsAbstractConcurrentSelfTest.java,678,,"                        fut = dropCols(node, QueryUtils.DFLT_SCHEMA, ""newCol"" + fieldNum);"
125362,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/DynamicColumnsAbstractConcurrentSelfTest.java,801,,"        final String schemaName = dynamicCache ? QueryUtils.DFLT_SCHEMA : ""idx"";"
125363,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/DynamicIndexAbstractBasicSelfTest.java,396,,"            fail(""Unexpected exception: "" + e);"
125364,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/DynamicIndexAbstractBasicSelfTest.java,664,,"    @WithSystemProperty(key = IGNITE_SQL_PARSER_DISABLE_H2_FALLBACK, value = ""true"")"
125365,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/DynamicIndexAbstractConcurrentSelfTest.java,535,,"                        fail(""Unexpected exception: "" + e);"
125366,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2ConnectionLeaksSelfTest.java,88,,"                    SqlFieldsQuery qry = new SqlFieldsQuery(""select * from String"").setLocal(false);"
125367,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2ConnectionLeaksSelfTest.java,221,,"                ""(?, CURRENT_TIMESTAMP()), "" +"
125368,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicColumnsAbstractBasicSelfTest.java,116,,"        QueryField c = c(""AGE"", Integer.class.getName());"
125369,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicColumnsAbstractBasicSelfTest.java,118,,"        checkTableState(QueryUtils.DFLT_SCHEMA, ""PERSON"", c);"
125370,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicColumnsAbstractBasicSelfTest.java,167,,"    @SuppressWarnings(""unchecked"")"
125371,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicColumnsAbstractBasicSelfTest.java,181,,"        CacheConfiguration<Integer, City> ccfg = defaultCacheConfiguration().setName(""City"")"
125372,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicColumnsAbstractBasicSelfTest.java,276,,"        assertEquals(Collections.singletonList(Arrays.asList(1, 1, ""Washington"", ""DC"", 2500000)), res);"
125373,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicColumnsAbstractBasicSelfTest.java,424,,"            doTestAlterTableOnFlatValue(""TEST"");"
125374,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicColumnsAbstractBasicSelfTest.java,445,,"            run(""ALTER TABLE test DROP COLUMN a"");"
125375,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicColumnsAbstractBasicSelfTest.java,456,,"            run(""DROP TABLE IF EXISTS test"");"
125376,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicColumnsAbstractBasicSelfTest.java,518,,"            assertThrowsAnyCause(""ALTER TABLE test DROP COLUMN b"", JdbcSQLException.class, ""Column \""B\"" not found"");"
125377,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicIndexAbstractSelfTest.java,85,,"        cache.query(new SqlFieldsQuery(""CREATE INDEX \"""" + IDX_NAME_1_ESCAPED + ""\"" ON \"""" + TBL_NAME_ESCAPED + ""\""(\"""""
125378,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicIndexAbstractSelfTest.java,85,,"        cache.query(new SqlFieldsQuery(""CREATE INDEX \"""" + IDX_NAME_1_ESCAPED + ""\"" ON \"""" + TBL_NAME_ESCAPED + ""\""(\"""""
125379,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicIndexAbstractSelfTest.java,85,,"        cache.query(new SqlFieldsQuery(""CREATE INDEX \"""" + IDX_NAME_1_ESCAPED + ""\"" ON \"""" + TBL_NAME_ESCAPED + ""\""(\"""""
125380,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicIndexAbstractSelfTest.java,86,,"            + FIELD_NAME_1_ESCAPED + ""\"" ASC)"")).getAll();"
125381,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicIndexingComplexAbstractTest.java,115,,"                ""Person "" + i,"
125382,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,105,,"    @SuppressWarnings(""unchecked"")"
125383,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,238,,"        doTestTableNameCaseSensitivity(""Person"", false);"
125384,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,278,,"        doTestCustomNames(""cname"", null, null);"
125385,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,286,,"        doTestCustomNames(null, ""keytype"", null);"
125386,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,294,,"        doTestCustomNames(null, null, ""valtype"");"
125387,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,334,,"        String cacheName = ""new"";"
125388,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,661,,"        String sql = ""CREATE TABLE \""Person\"" (\""id\"" int, \""city\"" varchar,"" +"
125389,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,662,,"            "" \""name\"" varchar, \""surname\"" varchar, \""age\"" int, PRIMARY KEY (\""id\"", \""city\"")) WITH "" +"
125390,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,735,,"            assertEqualsCollections(F.asList(""id"", ""city"", ""name"", ""surname"", ""age""), colNames);"
125391,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,835,,"            ""\""template=cache\"""");"
125392,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,837,,"        execute(""CREATE TABLE IF NOT EXISTS \""Person\"" (\""id\"" int, \""city\"" varchar,"" +"
125393,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,850,,"        IgniteCache cache = ignite.getOrCreateCache(new CacheConfiguration<>(""test"").setSqlSchema(""\""test\""""));"
125394,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,924,,"        execute(client(), ""DROP TABLE \""Person\"""");"
125395,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,1301,,"        execute(""drop table a"");"
125396,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,1350,,"        execute(""create table \""PUBLIC\"".t (a int primary key, b varchar(30))"");"
125397,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,1355,,"        execute(""drop table \""PUBLIC\"".t"");"
125398,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,1426,,"            execute(""create table a (id int primary key, x varchar)"");"
125399,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,1428,,"            assertDdlCommandThrows(""create table a (id int primary key, x varchar) with wrap_key"","
125400,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,1429,,"                ""Table already exists: A"");"
125401,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,1431,,"            assertDdlCommandThrows(""create table a (id int primary key, x varchar) with wrap_value"","
125402,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2DynamicTableSelfTest.java,1434,,"            assertDdlCommandThrows(""create table a (id int primary key, x varchar) with wrap_key,wrap_value"","
125403,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2RowCacheSelfTest.java,56,,"@SuppressWarnings({""unchecked"", ""ConstantConditions""})"
125404,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2RowCacheSelfTest.java,214,,"        cache.query(new SqlFieldsQuery(""SELECT * FROM Value"")).getAll();"
125405,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2RowCacheSelfTest.java,326,,"            .query(new SqlQuery(Value.class, ""_key = "" + key)).getAll();"
125406,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/H2RowExpireTimeIndexSelfTest.java,143,,"            Assert.assertTrue(""Expired row should not be returned by sql. Result = "" + expired, expired.isEmpty());"
125407,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/IgniteDecimalSelfTest.java,107,,"        queryEntity.addQueryField(""amount"", BigDecimal.class.getName(), null);"
125408,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/MvccEmptyTransactionSelfTest.java,62,,"            cache.query(new SqlFieldsQuery(""UPDATE person SET name=?"").setArgs(""Petr"")).getAll();"
125409,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/RenameIndexTreeTest.java,60,,"        String idxName = ""IDX0"";"
125410,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/ResumeCreateIndexTest.java,75,,"        String idxName = ""IDX0"";"
125411,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/SqlTransactionsCommandsWithMvccEnabledSelfTest.java,160,,"            node().cache(""ints"").put(1, 1);"
125412,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/SqlTransactionsSelfTest.java,163,,"            node().cache(""ints"").put(1, 1);"
125413,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/index/StopNodeOnRebuildIndexFailureTest.java,166,,"        startBuildIndexAndThrowExceptionTest(() -> new RuntimeException(""Test""));"
125414,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java,244,,"            ""SELECT "" +"
125415,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java,385,,"            HashSet<String> expSchemas = new HashSet<>(asList(""MY_SCHEMA"", ""ANOTHER_SCHEMA"", ""SYS"", ""PUBLIC""));"
125416,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java,420,,"            ""CLIENT_CONNECTIONS"","
125417,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java,452,,"        assertTrue(execute(ignite0, ""SELECT * FROM SYS.TABLES"").isEmpty());"
125418,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java,499,,"        assertEquals(new HashSet<>(asList(""ID"", ""NAME"", ""_KEY"", ""_VAL"")), actCols);"
125419,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java,504,,"            asList(""ID"", ""T1"", ""PUBLIC"", false, false, ""null"", true, true, -1, -1, Long.class.getName()),"
125420,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java,553,,"        assertTrue(execute(ignite0, ""SELECT * FROM SYS.CONTINUOUS_QUERIES"").isEmpty());"
125421,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java,636,,"            new CacheConfiguration<Integer, Integer>(""cache1"")"
125422,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java,637,,"                .setGroupName(""group1""));"
125423,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java,699,,"            IgniteCache<Integer, Integer> cache2 = client2.createCache(""cache2"");"
125424,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccAbstractSqlCoordinatorFailoverTest.java,326,,"            }, CacheServerNotFoundException.class, ""Failed to find data nodes for cache"");"
125425,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccBackupsAbstractTest.java,132,,"        List res0 = getAll(cache0, ""Integer"");"
125426,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccBackupsAbstractTest.java,212,,"        StringBuilder insert = new StringBuilder(""INSERT INTO Integer (_key, _val) values "");"
125427,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccDmlSimpleTest.java,67,,"        assertEquals(asSet(asList(1, 1), asList(2, 2)), query(""select * from Integer""));"
125428,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSelectForUpdateQueryBasicTest.java,179,,"        String sqlForUpdate = sql + "" FOR UPDATE"";"
125429,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSelectForUpdateQueryBasicTest.java,271,,"            runSql(node, ""UPDATE Person SET name='test' WHERE id="" + keys.get(0), false).getAll();"
125430,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSizeTest.java,74,,"        IgniteCache<Object, Object> tbl0 = grid(0).cache(""person"");"
125431,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSizeTest.java,82,,"        tbl0.query(q(""begin""));"
125432,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSizeTest.java,90,,"            tbl0.query(q(""commit""));"
125433,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSizeTest.java,110,,"        checkSizeModificationByOperation(""insert into person values(1, 'a')"", true, 1);"
125434,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSizeTest.java,132,,"        checkSizeModificationByOperation(""merge into person(id, name) values(1, 'a')"", true, 1);"
125435,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSizeTest.java,145,,"            ""insert into person values(1, 'a')"", ""delete from person where id = 1"", true, -1);"
125436,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSizeTest.java,153,,"            ""insert into person values(1, 'a')"", ""select * from person"", true, 0);"
125437,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSizeTest.java,375,,"            new CacheConfiguration<>(""test"")"
125438,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlLockTimeoutTest.java,124,,"        return new CacheConfiguration<>(""test"")"
125439,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlQueriesAbstractTest.java,237,,"                    info(""Writer finished, updates: "" + cnt);"
125440,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlQueriesAbstractTest.java,479,,"                    qrys.add(new SqlFieldsQuery(""select c.parentId, p.id from "" +"
125441,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlQueriesAbstractTest.java,760,,"            assertEquals(PARTS * 2, cache.query(new SqlQuery<>(MvccTestAccount.class, ""true"")).getAll().size());"
125442,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlQueriesAbstractTest.java,825,,"        checkSingleResult(cache, new SqlFieldsQuery(""select idxVal1 from MvccTestSqlIndexValue""), 2);"
125443,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlQueriesAbstractTest.java,831,,"        checkSingleResult(cache, new SqlFieldsQuery(""select _val from Integer""), 1);"
125444,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlTxModesTest.java,65,,"                    nonMvccCache.query(new SqlFieldsQuery(""SELECT * FROM Integer"")).getAll();"
125445,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlTxQueriesAbstractTest.java,300,,"            qry = new SqlFieldsQuery(""INSERT INTO Integer (_key, _val) values (4,4),(5,5),(6,6)"");"
125446,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlTxQueriesAbstractTest.java,337,,"            SqlFieldsQuery qry = new SqlFieldsQuery(""INSERT INTO Integer (_key, _val) values (1,1),(2,2),(3,3)"");"
125447,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlTxQueriesAbstractTest.java,686,,"            SqlFieldsQuery qry = new SqlFieldsQuery(""UPDATE Integer SET _val = (_key * 10)"");"
125448,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlTxQueriesAbstractTest.java,1420,,"                cache0.query(new SqlFieldsQuery(""insert into Integer(_key, _val) values(?, ?)"").setArgs(1, 1));"
125449,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlTxQueriesAbstractTest.java,1645,,"            for (List<?> row : cache0.query(qry.setSql(""SELECT _key, _val FROM Integer"")).getAll()) {"
125450,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlTxQueriesAbstractTest.java,1916,,"                ""WHEN 1 THEN 10 WHEN 2 THEN 20 ELSE 30 END"")).getAll();"
125451,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlTxQueriesAbstractTest.java,1926,,"            res = cache.query(new SqlFieldsQuery(""UPDATE Integer SET _val = CASE _val "" +"
125452,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlTxQueriesWithReducerAbstractTest.java,103,,"            String sqlText = ""INSERT INTO MvccTestSqlIndexValue (_key, idxVal1) "" +"
125453,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlTxQueriesWithReducerAbstractTest.java,313,,"                .setName(""int"")"
125454,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlUpdateCountersTest.java,75,,"            SqlFieldsQuery qry = new SqlFieldsQuery(""INSERT INTO Integer (_key, _val) values ("" + key1 + "",1)"");"
125455,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlUpdateCountersTest.java,75,,"            SqlFieldsQuery qry = new SqlFieldsQuery(""INSERT INTO Integer (_key, _val) values ("" + key1 + "",1)"");"
125456,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlUpdateCountersTest.java,85,,"            SqlFieldsQuery qry = new SqlFieldsQuery(""UPDATE Integer SET _val=2 WHERE _key="" + key1);"
125457,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlUpdateCountersTest.java,128,,"            SqlFieldsQuery qry = new SqlFieldsQuery(""MERGE INTO Integer (_key, _val) values ("" + key1 + "",1)"");"
125458,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccSqlUpdateCountersTest.java,221,,"            qry = new SqlFieldsQuery(""DELETE FROM Integer WHERE _key="" + key1);"
125459,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccStreamingInsertTest.java,83,,"        batchStmt.setString(2, ""bar"");"
125460,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccTxRecoveryTest.java,217,,"                cache.query(new SqlFieldsQuery(""insert into Integer(_key, _val) values(?, 42)"").setArgs(k));"
125461,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccTxRecoveryTest.java,242,,"                    .query(new SqlFieldsQuery(""select * from Integer"")).getAll().size();"
125462,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/MvccDeadlockDetectionTest.java,143,,"        cache.query(new SqlFieldsQuery(""insert into Integer(_key, _val) values(?, ?)"").setArgs(key0, -1));"
125463,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/IndexingMultithreadedLoadContinuousRestartTest.java,72,,"        fields.put(""a"", ""java.lang.Integer"");"
125464,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/LongDestroyDurableBackgroundTaskTest.java,137,,"            "".*?Executing durable background task: DROP_SQL_INDEX-PUBLIC."" + IDX_NAME + ""-.*"","
125465,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/LongDestroyDurableBackgroundTaskTest.java,294,,"            awaitLatch(pendingDelLatch, ""Test timed out: failed to await for durable background task completion."");"
125466,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/IgniteWalRecoveryTest.java,679,,"                CacheConfiguration<Object, Object> ccfg = new CacheConfiguration<>(""cache-"" + i);"
125467,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/IgniteWalRecoveryTest.java,706,,"                ignite.context().cache().context().database().wakeupForCheckpoint(""test"").get();"
125468,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/IgniteWalRecoveryTest.java,1035,,"        Ignite ignite1 = startGrid(""node1"");"
125469,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/persistence/snapshot/IgniteClusterSnapshotRestoreWithIndexingTest.java,147,,"            assertTrue(""nodeId="" + nodeId, grid.cache(cache.getName()).indexReadyFuture().isDone());"
125470,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/client/ClientConnectorConfigurationValidationSelfTest.java,80,,"        check(new ClientConnectorConfiguration().setHost(""127.0.0.1""), true);"
125471,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/client/ClientConnectorConfigurationValidationSelfTest.java,182,,"        cfg.setOdbcConfiguration(new OdbcConfiguration().setEndpointAddress(""127.0.0.1:"" + port));"
125472,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/database/IgniteDbSingleNodeWithIndexingPutGetTest.java,54,,"        IgniteCache<Integer, Abc> cache = ig.cache(""abc"");"
125473,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/database/IgniteDbSingleNodeWithIndexingWalRestoreTest.java,76,,"        indexedCacheCfg.setName(""indexedCache"");"
125474,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/database/IgniteTwoRegionsRebuildIndexTest.java,43,,"        boolean client = igniteInstanceName.startsWith(""client"");"
125475,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/AbstractCustomSchemaTest.java,86,,"        execSql(""DROP TABLE IF EXISTS "" + t(SCHEMA_NAME_1, TBL_NAME));"
125476,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/AbstractCustomSchemaTest.java,95,,"        execSql(""CREATE TABLE "" + t(SCHEMA_NAME_1, TBL_NAME) + "" (s1_key INT PRIMARY KEY, s1_val INT)"");"
125477,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/AbstractCustomSchemaTest.java,100,,"        execSql(""INSERT INTO "" + t(SCHEMA_NAME_1, TBL_NAME) + "" (s1_key, s1_val) VALUES (1, 2)"");"
125478,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/AbstractCustomSchemaTest.java,105,,"        execSql(""UPDATE "" + t(SCHEMA_NAME_1, TBL_NAME) + "" SET s1_val = 5"");"
125479,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/AbstractCustomSchemaTest.java,110,,"        execSql(""DELETE FROM "" + t(SCHEMA_NAME_1, TBL_NAME));"
125480,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/AbstractCustomSchemaTest.java,115,,"        execSql(""CREATE INDEX t1_idx_1 ON "" + t(SCHEMA_NAME_1, TBL_NAME) + ""(s1_val)"");"
125481,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/AbstractCustomSchemaTest.java,120,,"        execSql(""SELECT * FROM "" + t(SCHEMA_NAME_1, TBL_NAME));"
125482,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/AbstractCustomSchemaTest.java,132,,"        execSql(""DROP TABLE "" + t(SCHEMA_NAME_1, TBL_NAME));"
125483,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/AbstractQueryTableLockAndConnectionPoolSelfTest.java,321,,"                            log.error(""Unexpected exception"", e);"
125484,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/CreateIndexOnInvalidDataTypeTest.java,94,,"                .setName(""test"")"
125485,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/DisabledSqlFunctionsTest.java,100,,"        startGrid(""srv"");"
125486,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/DisabledSqlFunctionsTest.java,124,,"        checkSqlWithDisabledFunction(""SELECT FILE_WRITE(0, 'test.dat')"");"
125487,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/DisabledSqlFunctionsTest.java,125,,"        checkSqlWithDisabledFunction(""SELECT FILE_READ('test.dat')"");"
125488,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/DisabledSqlFunctionsTest.java,126,,"        checkSqlWithDisabledFunction(""SELECT CSVWRITE('test.csv', 'select 1, 2')"");"
125489,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/DisabledSqlFunctionsTest.java,127,,"        checkSqlWithDisabledFunction(""SELECT * FROM CSVREAD('test.csv')"");"
125490,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/DisabledSqlFunctionsTest.java,128,,"        checkSqlWithDisabledFunction(""SELECT MEMORY_FREE()"");"
125491,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/DisabledSqlFunctionsTest.java,129,,"        checkSqlWithDisabledFunction(""SELECT MEMORY_USED()"");"
125492,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/DisabledSqlFunctionsTest.java,130,,"        checkSqlWithDisabledFunction(""SELECT LOCK_MODE()"");"
125493,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/DisabledSqlFunctionsTest.java,131,,"        checkSqlWithDisabledFunction(""SELECT LINK_SCHEMA('TEST2', '', 'jdbc:h2:./test', 'sa', 'sa', 'PUBLIC')"");"
125494,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/DisabledSqlFunctionsTest.java,132,,"        checkSqlWithDisabledFunction(""SELECT SESSION_ID()"");"
125495,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/DisabledSqlFunctionsTest.java,133,,"        checkSqlWithDisabledFunction(""SELECT CANCEL_SESSION(1)"");"
125496,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteQueryDedicatedPoolTest.java,114,,"        startGrid(""server"");"
125497,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteQueryDedicatedPoolTest.java,116,,"        try (Ignite client = startClientGrid(""client"")) {"
125498,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlCreateTableTemplateTest.java,68,,"        IgniteCache cache = ignite.getOrCreateCache(""test"");"
125499,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlDefaultValueTest.java,85,,"        sql(""INSERT INTO TEST (id, val0) VALUES (?, ?)"", 3, ""test-val"");"
125500,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlDefaultValueTest.java,88,,"            Arrays.<Object>asList(1, ""default-val""),"
125501,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlKeyValueFieldsTest.java,347,,"            ""int"","
125502,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlKeyValueFieldsTest.java,349,,"            asList(""varchar"", ""date"", ""tinyint"", ""long"", ""datetime""),"
125503,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlKeyValueFieldsTest.java,349,,"            asList(""varchar"", ""date"", ""tinyint"", ""long"", ""datetime""),"
125504,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlKeyValueFieldsTest.java,349,,"            asList(""varchar"", ""date"", ""tinyint"", ""long"", ""datetime""),"
125505,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlKeyValueFieldsTest.java,349,,"            asList(""varchar"", ""date"", ""tinyint"", ""long"", ""datetime""),"
125506,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlKeyValueFieldsTest.java,349,,"            asList(""varchar"", ""date"", ""tinyint"", ""long"", ""datetime""),"
125507,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlKeyValueFieldsTest.java,350,,"            new LinkedList<>(asList(""a"", ""b,a"", ""a"", ""a,b"", ""a""))"
125508,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlKeyValueFieldsTest.java,350,,"            new LinkedList<>(asList(""a"", ""b,a"", ""a"", ""a,b"", ""a""))"
125509,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlNotNullConstraintTest.java,247,,"        Set<String> val = Collections.singleton(""test"");"
125510,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlNotNullConstraintTest.java,972,,"                    ""WITH \""template="" + CACHE_READ_THROUGH + ""\"""");"
125511,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlRoutingTest.java,175,,"        checkResultsRow(result, 0, 1, ""caller1"", 100);"
125512,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlRoutingTest.java,176,,"        checkResultsRow(result, 1, 2, ""caller2"", 200);"
125513,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSchemaIndexingTest.java,149,,"        cache.put(1, new Fact(1, ""cacheInsensitive""));"
125514,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSegmentedIndexSelfTest.java,68,,"    @SuppressWarnings(""deprecation"")"
125515,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSegmentedIndexSelfTest.java,126,,"            cache.put(i, new Organization(""org-"" + i));"
125516,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,110,,"        IgniteCache<Integer, Integer> c = ignite(0).getOrCreateCache(cacheConfig(""ints"", true,"
125517,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,134,,"            assertEqualsCollections(res.subList(0, 9), columnQuery(c, qry + ""limit ? offset ?"", 9, 0));"
125518,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,152,,"        IgniteCache<Integer, Org> c = ignite(CLIENT).getOrCreateCache(cacheConfig(""org"", true,"
125519,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,160,,"            List<List<?>> plan = c.query(new SqlFieldsQuery(""explain "" + qry)"
125520,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,163,,"            X.println(""Plan: "" + plan);"
125521,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,466,,"        CacheConfiguration ccfg1 = cacheConfig(""pers"", true,"
125522,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,802,,"            X.println(""Plan : "" + plan);"
125523,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,804,,"            assertEquals(2, StringUtils.countOccurrencesOf(plan, ""batched""));"
125524,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,805,,"            assertEquals(2, StringUtils.countOccurrencesOf(plan, ""batched:unicast""));"
125525,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,810,,"            select = ""select * from ("" + select + "")"";"
125526,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,851,,"                ""select o.name n1, p.name n2 from \""pers\"".Person2 p, \""org\"".Organization o where p.orgId = o._key and o._key=1"" +"
125527,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,940,,"                ""select p._key k1, o._key k2 "" +"
125528,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,942,,"                    ""where p.orgId = o._key"","
125529,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,966,,"                    ""on p.orgId = o._key"","
125530,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,983,,"                ""batched:broadcast"");"
125531,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,1139,,"                String sql = ""select p1._key k1, p2._key k2, o._key k3 "" +"
125532,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,1205,,"                    ""where p1._key=p2._key and p2.orgId = o._key"";"
125533,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,1557,,"                ""from "" + cache1 + "","" + cache2 + "" "" + where);"
125534,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,1998,,"            assertEquals(""count"", 0L, ((Number)row.get(0)).longValue());"
125535,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,1999,,"            assertEquals(""sum"", null, row.get(1));"
125536,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,2000,,"            assertEquals(""avg"", null, row.get(2));"
125537,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,2001,,"            assertEquals(""min"", null, row.get(3));"
125538,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,2002,,"            assertEquals(""max"", null, row.get(4));"
125539,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,2101,,"            assertEquals(""count distinct"", 6L, ((Number)row.get(0)).longValue());"
125540,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,2102,,"            assertEquals(""sum distinct"", 6L, ((Number)row.get(1)).longValue());"
125541,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,2103,,"            assertEquals(""avg distinct"", 2, ((Integer)row.get(2)).intValue());"
125542,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,2104,,"            assertEquals(""min distinct"", 1, ((Integer)row.get(3)).intValue());"
125543,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,2105,,"            assertEquals(""max distinct"", 3, ((Integer)row.get(4)).intValue());"
125544,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,2144,,"            assertEquals(""fst"", 1, ((Number)row.get(0)).intValue());"
125545,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,2148,,"            assertEquals(""avg dbl"", 3d, ((Number)row.get(4)).doubleValue(), 0.001);"
125546,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java,2186,,"            assertEquals(""avg distinct dbl"", 3.0d, ((Number)row.get(3)).doubleValue(), 0.001);"
125547,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/KillQueryTest.java,383,,"        String createTab = ""CREATE TABLE "" + currentTestTableName() +"
125548,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/KillQueryTest.java,463,,"            ""CREATE TABLE "" + currentTestTableName() + "" (id INTEGER PRIMARY KEY, name VARCHAR)"","
125549,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/KillQueryTest.java,624,,"            stmt.executeQuery(""select * from Integer where _key in "" +"
125550,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/KillQueryTest.java,628,,"        }, SQLException.class, ""The query was cancelled while executing."");"
125551,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/KillQueryTest.java,640,,"            .querySqlFields(new SqlFieldsQuery(""select * from \""default\"".Integer"").setLazy(false), false);"
125552,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/KillQueryTest.java,1102,,"                log.error(""Unexpected exception."", e);"
125553,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/KillQueryTest.java,1104,,"                Assert.fail(""Unexpected exception"");"
125554,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/LazyOnDmlTest.java,150,,"            ""UNION ALL "" +"
125555,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/LocalQueryLazyTest.java,63,,"            .setSqlSchema(""TEST"")"
125556,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/LocalQueryLazyTest.java,93,,"            iters[i] = sql(""SELECT * FROM test"").iterator();"
125557,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/MemLeakOnSqlWithClientReconnectTest.java,80,,"                .addQueryField(""val"", Long.class.getName(), null)"
125558,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/MultipleStatementsSqlQuerySelfTest.java,61,,"            .setSchema(""PUBLIC"");"
125559,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/MultipleStatementsSqlQuerySelfTest.java,67,,"        assert !((QueryCursorImpl)res.get(0)).isQuery() : ""Results of DDL statement is expected "";"
125560,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlFieldTypeValidationOnKeyValueInsertTest.java,94,,"                                .setValueType(""Person"")"
125561,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlFieldTypeValidationOnKeyValueInsertTest.java,97,,"                                                ""name"", ""java.util.UUID""))))));"
125562,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlIllegalSchemaSelfTest.java,84,,"                    fail(""Exception class is not as expected [expected="" +"
125563,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlIllegalSchemaSelfTest.java,85,,"                        CacheException.class + "", actual="" + e.getClass() + ']');"
125564,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlIllegalSchemaSelfTest.java,88,,"                fail(""Exception has not been thrown."");"
125565,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlIllegalSchemaSelfTest.java,100,,"        cfg.setCacheConfiguration(new CacheConfiguration().setName(""CACHE"")"
125566,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlIncompatibleDataTypeExceptionTest.java,56,,"            ""ALLOW_KEY_VAL_UPDATES"");"
125567,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlIncompatibleDataTypeExceptionTest.java,112,,"        final BinaryObjectBuilder bob = grid().binary().builder(""val"");"
125568,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlIndexConsistencyAfterInterruptAtomicCacheOperationTest.java,69,,"        assertEquals(cache.size(), cache.query(new SqlFieldsQuery(""select * from Integer"")).getAll().size());"
125569,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlQueryHistorySelfTest.java,287,,"        cache.query(new SqlQuery<>(""String"", ""from String"")).getAll();"
125570,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSchemaSelfTest.java,44,,"    private static final String CACHE_PERSON = ""PersonCache"";"
125571,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSchemaSelfTest.java,147,,"            new SqlFieldsQuery(""SELECT id, name, orgId FROM Person"")"
125572,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSchemaSelfTest.java,213,,"        IgniteCache<Long, Person> cache = registerQueryEntity(""Person"", CACHE_PERSON);"
125573,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,174,,"        assertSqlError(""DROP TABLE "" + systemSchemaName() + "".NODES"");"
125574,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,178,,"        assertSqlError(""ALTER TABLE "" + systemSchemaName() + "".NODES RENAME TO "" + systemSchemaName() + "".N"");"
125575,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,213,,"        srv.createCache(cacheConfiguration(""TST1""));"
125576,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,221,,"        Set expSchemasSrv = Sets.newHashSet(""PREDIFINED_SCHEMA_1"", ""PUBLIC"", ""TST1"", systemSchemaName());"
125577,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,287,,"                {-825022849, ""SQL_PUBLIC_AFF_CACHE"", ""PUBLIC"", ""AFF_CACHE"", ""AFFINITY_KEY"", ""BTREE"", ""\""ID2\"" ASC, \""ID1\"" ASC"","
125578,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,287,,"                {-825022849, ""SQL_PUBLIC_AFF_CACHE"", ""PUBLIC"", ""AFF_CACHE"", ""AFFINITY_KEY"", ""BTREE"", ""\""ID2\"" ASC, \""ID1\"" ASC"","
125579,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,287,,"                {-825022849, ""SQL_PUBLIC_AFF_CACHE"", ""PUBLIC"", ""AFF_CACHE"", ""AFFINITY_KEY"", ""BTREE"", ""\""ID2\"" ASC, \""ID1\"" ASC"","
125580,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,289,,"                {-825022849, ""SQL_PUBLIC_AFF_CACHE"", ""PUBLIC"", ""AFF_CACHE"", ""__SCAN_"", ""SCAN"", null, false, false, null},"
125581,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,289,,"                {-825022849, ""SQL_PUBLIC_AFF_CACHE"", ""PUBLIC"", ""AFF_CACHE"", ""__SCAN_"", ""SCAN"", null, false, false, null},"
125582,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,290,,"                {-825022849, ""SQL_PUBLIC_AFF_CACHE"", ""PUBLIC"", ""AFF_CACHE"", ""_key_PK"", ""BTREE"", ""\""ID1\"" ASC, \""ID2\"" ASC"", true, true, 10},"
125583,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,290,,"                {-825022849, ""SQL_PUBLIC_AFF_CACHE"", ""PUBLIC"", ""AFF_CACHE"", ""_key_PK"", ""BTREE"", ""\""ID1\"" ASC, \""ID2\"" ASC"", true, true, 10},"
125584,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,291,,"                {-825022849, ""SQL_PUBLIC_AFF_CACHE"", ""PUBLIC"", ""AFF_CACHE"", ""_key_PK_hash"", ""HASH"","
125585,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,291,,"                {-825022849, ""SQL_PUBLIC_AFF_CACHE"", ""PUBLIC"", ""AFF_CACHE"", ""_key_PK_hash"", ""HASH"","
125586,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,294,,"                {707660652, ""SQL_PUBLIC_CACHE_SQL"", ""PUBLIC"", ""CACHE_SQL"", ""IDX_2"", ""BTREE"", ""\""ID\"" DESC, \""ID\"" ASC"", false, false, 13},"
125587,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,294,,"                {707660652, ""SQL_PUBLIC_CACHE_SQL"", ""PUBLIC"", ""CACHE_SQL"", ""IDX_2"", ""BTREE"", ""\""ID\"" DESC, \""ID\"" ASC"", false, false, 13},"
125588,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,299,,"                {1374144180, ""SQL_PUBLIC_DFLT_AFF_CACHE"", ""PUBLIC"", ""DFLT_AFF_CACHE"", ""AFFINITY_KEY"", ""BTREE"","
125589,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,299,,"                {1374144180, ""SQL_PUBLIC_DFLT_AFF_CACHE"", ""PUBLIC"", ""DFLT_AFF_CACHE"", ""AFFINITY_KEY"", ""BTREE"","
125590,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,309,,"                {1102275506, ""SQL_PUBLIC_DFLT_CACHE"", ""PUBLIC"", ""DFLT_CACHE"", ""IDX_1"", ""BTREE"","
125591,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,309,,"                {1102275506, ""SQL_PUBLIC_DFLT_CACHE"", ""PUBLIC"", ""DFLT_CACHE"", ""IDX_1"", ""BTREE"","
125592,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,319,,"                {2584860, ""TST1"", ""TST1"", ""VALUECLASS"", ""TST1_INDEX"", ""BTREE"", ""\""KEY\"" ASC, \""_KEY\"" ASC"", false, false, 10},"
125593,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,407,,"        String idxSql = ""SELECT IS_INDEX_REBUILD_IN_PROGRESS FROM "" + systemSchemaName() + "".TABLES "" +"
125594,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,467,,"        String sql = ""SELECT NODE_ID FROM "" + systemSchemaName() + "".NODES WHERE NODE_ORDER = 1"";"
125595,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,529,,"            ""FROM "" + systemSchemaName() + "".SQL_QUERIES_HISTORY ORDER BY LAST_START_TIME"";"
125596,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,762,,"        assertEquals(3L, execSql(""SELECT COUNT(*) FROM "" + systemSchemaName() + "".NODES"").get(0).get(0));"
125597,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,972,,"        Ignite ignite = startGrid(getTestIgniteInstanceName(), getPdsConfiguration(""node0"")"
125598,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,973,,"            .setUserAttributes(F.asMap(customAttr, ""val0"")));"
125599,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,974,,"        startGrid(getTestIgniteInstanceName(1), getPdsConfiguration(""node1"")"
125600,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,975,,"            .setUserAttributes(F.asMap(customAttr, ""val1"")));"
125601,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,1017,,"        res = execSql(""SELECT NAME, VALUE FROM "" + systemSchemaName() + "".BASELINE_NODE_ATTRIBUTES ORDER BY VALUE"");"
125602,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,1024,,"        res = execSql(""SELECT NAME, VALUE FROM "" + systemSchemaName() + "".BASELINE_NODE_ATTRIBUTES "" +"
125603,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,1135,,"        int cacheSqlId = cacheProc.cacheDescriptor(""cache_sql"").cacheId();"
125604,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,1223,,"            asList(asList(""TAB1"", ""SQL_PUBLIC_TAB1"")),"
125605,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,1223,,"            asList(asList(""TAB1"", ""SQL_PUBLIC_TAB1"")),"
125606,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,1380,,"            .setGroupName(""cache_grp"")"
125607,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,1401,,"            .setName(""cache_tx_repl"")"
125608,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,1474,,"        assertEquals(""cache_tx_part"", execSql(""SELECT CACHE_NAME FROM "" + systemSchemaName() + "".CACHES WHERE "" +"
125609,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,1483,,"        assertEquals(""cache_atomic_repl"", execSql(""SELECT CACHE_NAME FROM "" + systemSchemaName() + "".CACHES "" +"
125610,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,1517,,"        assertEquals(7L, execSql(""SELECT COUNT(*) FROM "" + systemSchemaName() + "".CACHES WHERE CACHE_NAME like 'cache%'"").get(0)"
125611,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,1542,,"        assertEquals(2, execSql(""SELECT CACHE_COUNT FROM "" + systemSchemaName() + "".CACHE_GROUPS "" +"
125612,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/SqlSystemViewsSelfTest.java,1588,,"            ""WHERE CACHE_GROUP_NAME like 'cache%'"").get(0).get(0));"
125613,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/GridSubqueryJoinOptimizerSelfTest.java,234,,"        String subSql = ""select id from dep"";"
125614,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/GridSubqueryJoinOptimizerSelfTest.java,330,,"        String outerSqlTemplate = ""select e.id, e.name from emp e where exists (%s) order by 1"";"
125615,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/IgniteSqlQueryMinMaxTest.java,75,,"        try (Ignite client = startClientGrid(""client"")) {"
125616,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/IgniteSqlQueryMinMaxTest.java,139,,"            assertTrue(((String) result.get(0).get(0)).toLowerCase().contains(""direct lookup""));"
125617,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/QueryDataPageScanTest.java,100,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-11998"")"
125618,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/RowCountTableStatisticsUsageTest.java,93,,"        checkOptimalPlanChosenForDifferentJoinOrders(grid(0), sql, ""small"", ""big"");"
125619,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/RowCountTableStatisticsUsageTest.java,93,,"        checkOptimalPlanChosenForDifferentJoinOrders(grid(0), sql, ""small"", ""big"");"
125620,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/RowCountTableStatisticsUsageTest.java,123,,"        checkOptimalPlanChosenForDifferentJoinOrders(grid(0), sql, ""big"", ""med"", ""small"");"
125621,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/database/inlinecolumn/InlineIndexColumnTest.java,138,,"        assertEquals(-1, putAndCompare(""aaa"", ""bbb"", String.class, maxSize));"
125622,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/database/inlinecolumn/InlineIndexColumnTest.java,154,,"        assertEquals(-1, putAndCompare(""¡¡¡"", ""¢¢¢"", String.class, maxSize));"
125623,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/database/inlinecolumn/InlineIndexColumnTest.java,170,,"        assertEquals(-1, putAndCompare(""ऄऄऄ"", ""अअअ"", String.class, maxSize));"
125624,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/database/inlinecolumn/InlineIndexColumnTest.java,184,,"        assertEquals(0, putAndCompare(""\ud802\udd20\ud802\udd20"", ""\ud802\udd20\ud802\udd20"", String.class, maxSize));"
125625,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/database/inlinecolumn/InlineIndexColumnTest.java,188,,"            putAndCompare(""\ud802\udd20\ud802\udd20\ud802\udd20"", ""\ud802\udd21\ud802\udd21\ud802\udd21"", String.class, maxSize)"
125626,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/database/inlinecolumn/InlineIndexColumnTest.java,735,,"        assertEquals(1, putAndCompare(Date.valueOf(""2017-02-24""), null, Date.class, maxSize));"
125627,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/database/inlinecolumn/InlineIndexColumnTest.java,760,,"        assertEquals(1, putAndCompare(Time.valueOf(""4:20:00""), null, Time.class, maxSize));"
125628,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/database/inlinecolumn/InlineIndexColumnTest.java,779,,"            putAndCompare(Timestamp.valueOf(""2017-02-20 4:20:00""), null, Timestamp.class, maxSize)"
125629,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/BaseH2CompareQueryTest.java,306,,"        compareQueryRes0(cachePers, ""select "" + star + "" from \""pers\"".Person p"");"
125630,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/BaseH2CompareQueryTest.java,377,,"        compareQueryRes0(cachePers, ""select p.firstName n, avg(p.old) a, max(p.old) m "" +"
125631,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/BaseH2CompareQueryTest.java,586,,"            ""   _val other not null ,"" +"
125632,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/BaseH2CompareQueryTest.java,587,,"            ""  id int unique, "" +"
125633,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/ExplainSelfTest.java,64,,"        assertNotSupported(""EXPLAIN INSERT INTO PUBLIC.TEST VALUES (1, 2);"", false);"
125634,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/GridQueryParsingTest.java,78,,"            cacheConfiguration(""addr"", ""SCH2"", String.class, Address.class),"
125635,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/GridQueryParsingTest.java,455,,"            buildCreateIndex(null, ""Person"", ""sch1"", false, QueryIndexType.SORTED,"
125636,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/GridQueryParsingTest.java,455,,"            buildCreateIndex(null, ""Person"", ""sch1"", false, QueryIndexType.SORTED,"
125637,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/GridQueryParsingTest.java,456,,"            QueryIndex.DFLT_INLINE_SIZE, ""name"", true),"
125638,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/GridQueryParsingTest.java,460,,"            buildCreateIndex(""idx"", ""Person"", ""sch1"", false, QueryIndexType.SORTED,"
125639,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/GridQueryParsingTest.java,490,,"            IgniteSQLException.class, ""Only SPATIAL modifier is supported for CREATE INDEX"");"
125640,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/GridQueryParsingTest.java,532,,"        assertDropTableEquals(buildDropTable(""sch1"", ""tbl"", false), ""drop table tbl"");"
125641,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/GridQueryParsingTest.java,548,,"            buildCreateTable(""sch1"", ""Person"", ""cache"", F.asList(""id"", ""city""),"
125642,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/GridQueryParsingTest.java,592,,"                ""WITH \""template=cache\"""","
125643,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/H2CompareBigQueryTest.java,323,,"            ""  ("" +"
125644,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/H2CompareBigQueryTest.java,325,,"            ""  _val other not null,"" +"
125645,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/H2CompareBigQueryTest.java,330,,"            ""  date Date, "" +"
125646,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/H2CompareBigQueryTest.java,332,,"            ""  )"");"
125647,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/H2CompareBigQueryTest.java,336,,"            ""  _key "" + keyType + "" not null,"" +"
125648,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/H2CompareBigQueryTest.java,336,,"            ""  _key "" + keyType + "" not null,"" +"
125649,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/SqlUnsupportedSelfTest.java,96,,"            ""CREATE TABLE test ( "" +"
125650,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/SqlUnsupportedSelfTest.java,97,,"                ""id integer PRIMARY KEY, "" +"
125651,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/sql/SqlUnsupportedSelfTest.java,98,,"                ""val varchar DEFAULT 'test_val')"");"
125652,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/twostep/AndOperationExtractPartitionSelfTest.java,139,,"        testAndOperator(Collections.singletonList(""ORG""), null, 0L, 0);"
125653,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/twostep/AndOperationExtractPartitionSelfTest.java,153,,"        testAndOperator(Arrays.asList(ORG + 0, ORG + 1, ""MID"", ORG + String.valueOf(ORG_COUNT - 1), ORG + 3), null, 2, 2);"
125654,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/twostep/InOperationExtractPartitionSelfTest.java,142,,"        testInOperator(Collections.singletonList(""ORG""), null, 0L, 1);"
125655,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/twostep/JoinPartitionPruningSelfTest.java,59,,"            affinityColumn(""ak2""),"
125656,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/twostep/JoinPartitionPruningSelfTest.java,198,,"        execute(""SELECT * FROM t1 INNER JOIN t2 ON t1.k1 = t2.ak2 WHERE t1.k1 = ? OR t2.ak2 = ?"","
125657,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/twostep/NoneOrSinglePartitionsQueryOptimizationsTest.java,149,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-11019"") // Fix explain plan for simple query."
125658,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/twostep/RetryCauseMessageSelfTest.java,97,,"        GridMapQueryExecutor mapQryExec = GridTestUtils.getFieldValue(h2Idx, IgniteH2Indexing.class, ""mapQryExec"");"
125659,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/twostep/RetryCauseMessageSelfTest.java,111,,"        SqlQuery<String, Person> qry = new SqlQuery<String, Person>(Person.class, JOIN_SQL).setArgs(""Organization #0"");"
125660,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/twostep/RetryCauseMessageSelfTest.java,185,,"        final GridKernalContext ctx = GridTestUtils.getFieldValue(mapQryExec, GridMapQueryExecutor.class, ""ctx"");"
125661,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/twostep/RetryCauseMessageSelfTest.java,319,,"        final ReducePartitionMapper mapper = GridTestUtils.getFieldValue(rdcQryExec, GridReduceQueryExecutor.class, ""mapper"");"
125662,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/twostep/SqlDataTypeConversionTest.java,240,,"            ""aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"" +"
125663,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/oom/AbstractQueryOOMTest.java,207,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-9480"")"
125664,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/IgniteStatisticsRepositoryStaticTest.java,66,,"        colStat1.put(""col1"", cs1);"
125665,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/IgniteStatisticsRepositoryStaticTest.java,67,,"        colStat1.put(""col2"", cs2);"
125666,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUCompositeIndexTableStatisticsUsageTest.java,75,,"        collectStatistics(""ci_table"");"
125667,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsStorageTest.java,54,,"        statisticsMgr(0).dropStatistics(new StatisticsTarget(""PUBLIC"", ""SMALL"", ""A""));"
125668,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,38,,"        hints[0] = new String[]{""DTYPES_"" + name};"
125669,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,96,,"        doColumnTests(""INT"", ""<"", ""-10"");"
125670,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,96,,"        doColumnTests(""INT"", ""<"", ""-10"");"
125671,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,100,,"        doColumnTests(""INT"", "">="", ""100"");"
125672,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,110,,"        doColumnTests(""TINYINT"", ""<"", ""-10"");"
125673,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,124,,"        doColumnTests(""SMALLINT"", ""<"", ""-10"");"
125674,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,138,,"        doColumnTests(""BIGINT"", ""<"", ""-10"");"
125675,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,152,,"        doColumnTests(""DECIMAL"", ""<"", ""-10"");"
125676,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,153,,"        doColumnTests(""DECIMAL"", ""<"", ""0.2"");"
125677,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,165,,"        doColumnTests(""DOUBLE"", ""<"", ""-10"");"
125678,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,179,,"        doColumnTests(""REAL"", ""<"", ""-10"");"
125679,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,193,,"        doColumnTests(""TIME"", ""<"", ""'11:00:02'"");"
125680,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,206,,"        doColumnTests(""DATE"", ""<"", ""'1969-01-03'"");"
125681,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,219,,"        doColumnTests(""TIMESTAMP"", ""<"", ""'1970-01-01 11:00:09'"");"
125682,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,232,,"        doColumnTests(""VARCHAR"", ""<"", ""'a'"");"
125683,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,247,,"        doColumnTests(""CHAR"", ""<"", ""'8'"");"
125684,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,261,,"        doColumnTests(""UUID"", ""<="", ""'00000000-0000-0000-0000-000000000003'"");"
125685,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUStatisticsTypesTest.java,274,,"        doColumnTests(""BINARY"", ""<"", ""12"");"
125686,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/PSUValueDistributionTableStatisticsUsageTest.java,101,,"        checkOptimalPlanChosenForDifferentIndexes(grid(0), new String[]{""SIZED_SMALL""}, sql, new String[1][]);"
125687,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/SqlStatisticsCommandTests.java,49,,"        testStatistics(SCHEMA, ""TEST"", true);"
125688,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/SqlStatisticsCommandTests.java,50,,"        testStatistics(SCHEMA, ""TEST2"", true);"
125689,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/SqlStatisticsCommandTests.java,86,,"        sql(""ANALYZE PUBLIC.TEST, test2"");"
125690,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/SqlStatisticsCommandTests.java,226,,"        testStatistics(SCHEMA, ""STATISTICS"", true);"
125691,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/StatisticsClearTest.java,95,,"                metaStorage.write(""stats.version"", 2);"
125692,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/StatisticsConfigurationTest.java,95,,"                assertNotNull(""Column: "" + col, colStat);"
125693,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/StatisticsConfigurationTest.java,176,,"        waitForStats(SCHEMA, ""SMALL"", TIMEOUT, checkTotalRows, checkColumStats);"
125694,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/StatisticsStorageTest.java,66,,"            GridTestUtils.setFieldValue(c, ""ver"", 0);"
125695,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/StatisticsStorageTest.java,67,,"            GridTestUtils.setFieldValue(c, ""createdAt"", 0);"
125696,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/StatisticsStorageTest.java,88,,"        updateStatistics(new StatisticsTarget(SCHEMA, ""SMALL"", ""B""));"
125697,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/StatisticsViewsTest.java,53,,"            Arrays.asList(SCHEMA, ""TABLE"", ""SMALL"", ""A"", (byte)15, null, null, null, null, 1L),"
125698,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/StatisticsViewsTest.java,53,,"            Arrays.asList(SCHEMA, ""TABLE"", ""SMALL"", ""A"", (byte)15, null, null, null, null, 1L),"
125699,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/stat/hll/FullHLLTest.java,167,,"            final BitVector bitVector = GridTestUtils.getFieldValue(hll, ""probabilisticStorage"");"
125700,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/sql/IgniteCachePartitionedAtomicColumnConstraintsTest.java,115,,"        orgAddressPrecision.put(""name"", 5);"
125701,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/sql/IgniteCachePartitionedAtomicColumnConstraintsTest.java,116,,"        orgAddressPrecision.put(""address"", 5);"
125702,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/sql/IgniteCachePartitionedAtomicColumnConstraintsTest.java,120,,"            .addQueryField(""name"", ""java.lang.String"", ""name"")"
125703,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/sql/IgniteCachePartitionedAtomicColumnConstraintsTest.java,150,,"        orgEmployeePrecision.put(""salary"", 4);"
125704,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/sql/IgniteCachePartitionedAtomicColumnConstraintsTest.java,154,,"            .addQueryField(""id"", ""java.math.BigDecimal"", ""id"")"
125705,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/sql/IgniteCachePartitionedAtomicColumnConstraintsTest.java,224,,"        T2<String, String> val = new T2<>(""3"", ""123456"");"
125706,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/sql/IgniteCachePartitionedAtomicColumnConstraintsTest.java,313,,"        T2<String, String> val = new T2<>(""3"", ""12345"");"
125707,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/sql/IgniteCachePartitionedTransactionalSnapshotColumnConstraintTest.java,34,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-10066"")"
125708,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/sql/IgniteCacheReplicatedTransactionalSnapshotColumnConstraintTest.java,34,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-10066"")"
125709,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/sql/IgniteSQLColumnConstraintsTest.java,43,,"        execSQL(""INSERT INTO varchar_table VALUES(?, ?)"", 1, ""12345"");"
125710,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/sql/IgniteSQLColumnConstraintsTest.java,51,,"        checkSQLResults(""SELECT * FROM decimal_table WHERE id = 1"", 1, BigDecimal.valueOf(12.34));"
125711,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/sql/IgniteSQLColumnConstraintsTest.java,137,,"        checkSQLThrows(""INSERT INTO varchar_table VALUES(?, ?)"", CONSTRAINT_VIOLATION, 2, ""123456"");"
125712,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/sql/IgniteSQLColumnConstraintsTest.java,201,,"        checkSQLResults(""SELECT * FROM decimal_table_2 WHERE id = 1"", 1, null, BigDecimal.valueOf(12.34));"
125713,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/sql/IgniteSQLColumnConstraintsTest.java,309,,"        checkSQLResults(""SELECT * FROM decimal_table_4 WHERE id = 2"", 2, BigDecimal.valueOf(12.34));"
125714,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/internal/processors/sql/SqlConnectorConfigurationValidationSelfTest.java,76,,"        check(new SqlConnectorConfiguration().setHost(""127.0.0.1""), true);"
125715,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java,111,,"    public static final String[] ALL_EMP_FIELDS = new String[] {""ID"", ""DEPID"", ""DEPIDNOIDX"", ""FIRSTNAME"", ""LASTNAME"", ""AGE"", ""SALARY""};"
125716,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java,111,,"    public static final String[] ALL_EMP_FIELDS = new String[] {""ID"", ""DEPID"", ""DEPIDNOIDX"", ""FIRSTNAME"", ""LASTNAME"", ""AGE"", ""SALARY""};"
125717,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java,111,,"    public static final String[] ALL_EMP_FIELDS = new String[] {""ID"", ""DEPID"", ""DEPIDNOIDX"", ""FIRSTNAME"", ""LASTNAME"", ""AGE"", ""SALARY""};"
125718,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java,111,,"    public static final String[] ALL_EMP_FIELDS = new String[] {""ID"", ""DEPID"", ""DEPIDNOIDX"", ""FIRSTNAME"", ""LASTNAME"", ""AGE"", ""SALARY""};"
125719,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java,778,,"            List<List<Object>> idxExp = select(cache, row -> (Integer)row.get(""AGE"") > 30, ""firstName"");"
125720,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java,873,,"            List<List<Object>> all = select(node.cache(EMP_CACHE_NAME), null, ""depId"");"
125721,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java,1024,,"            String qryTpl = ""SELECT e.id as EmpId, e.firstName as EmpName, d.id as DepId, d.name as DepName "" +"
125722,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java,1026,,"                ""ON e.%s = d.%s"";"
125723,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java,1028,,"            Result actIdxOnOff = executeFrom(joinQry(forceOrd, qryTpl, ""depId"", ""idNoidx""), node);"
125724,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java,1029,,"            Result actIdxOffOn = executeFrom(joinQry(forceOrd, qryTpl, ""depIdNoidx"", ""id""), node);"
125725,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java,1034,,"                (emp, dep) -> Arrays.asList(emp.get(""ID""), emp.get(""FIRSTNAME""), dep.get(""ID""), dep.get(""NAME"")));"
125726,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java,1036,,"            assertContainsEq(""Join on idx = idx is incorrect. "" +"
125727,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java,1037,,"                ""Preserve join order = "" + forceOrd + ""."", actIdxOnOn.values(), expected);"
125728,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java,1038,,"            assertContainsEq(""Join on idx = noidx is incorrect. "" +"
125729,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java,1040,,"            assertContainsEq(""Join on noidx = idx is incorrect. "" +"
125730,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java,1042,,"            assertContainsEq(""Join on noidx = noidx is incorrect. "" +"
125731,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/PartitionedSqlTest.java,41,,"            final String qryTpl = ""SELECT d.id, d.name, a.address "" +"
125732,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/PartitionedSqlTest.java,43,,"                ""ON d.%s = a.%s"";"
125733,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/PartitionedSqlTest.java,45,,"            Result actIdxOnOn = executeFrom(distributedJoinQry(forceOrder, qryTpl, ""id"", ""depId""), node);"
125734,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/PartitionedSqlTest.java,46,,"            Result actIdxOffOn = executeFrom(distributedJoinQry(true, qryTpl, ""idNoidx"", ""depId""), node);"
125735,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/PartitionedSqlTest.java,49,,"                (dep, addr) -> sqlEq(dep.get(""ID""), addr.get(""DEPID"")),"
125736,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/PartitionedSqlTest.java,53,,"                ""Preserve join order = "" + forceOrder + ""."", actIdxOnOn.values(), exp);"
125737,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/PartitionedSqlTest.java,70,,"                () -> executeFrom(distributedJoinQry(forceOrder, qryTpl, ""idNoidx"", ""depIdNoidx""), node));"
125738,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/ReplicatedSqlTest.java,69,,"            final String qryTpl = ""SELECT d.id, d.name, a.address "" +"
125739,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/ReplicatedSqlTest.java,71,,"                ""ON d.%s = a.%s"";"
125740,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/ReplicatedSqlTest.java,73,,"            Result actIdxOnOn = executeFrom(distributedJoinQry(forceOrder, qryTpl, ""id"", ""depId""), node);"
125741,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/ReplicatedSqlTest.java,74,,"            Result actIdxOnOff = executeFrom(distributedJoinQry(forceOrder, qryTpl, ""id"", ""depIdNoidx""), node);"
125742,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/ReplicatedSqlTest.java,75,,"            Result actIdxOffOn = executeFrom(distributedJoinQry(forceOrder, qryTpl, ""idNoidx"", ""depId""), node);"
125743,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/ReplicatedSqlTest.java,79,,"                (dep, addr) -> sqlEq(dep.get(""ID""), addr.get(""DEPID"")),"
125744,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/ReplicatedSqlTest.java,80,,"                (dep, addr) -> Arrays.asList(dep.get(""ID""), dep.get(""NAME""), addr.get(""ADDRESS"")));"
125745,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/ReplicatedSqlTest.java,80,,"                (dep, addr) -> Arrays.asList(dep.get(""ID""), dep.get(""NAME""), addr.get(""ADDRESS"")));"
125746,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/ReplicatedSqlTest.java,82,,"            assertContainsEq(""Distributed join on 'idx = idx' returned unexpected result. "" +"
125747,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/ReplicatedSqlTest.java,83,,"                ""Preserve join order = "" + forceOrder + ""."", actIdxOnOn.values(), exp);"
125748,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/ReplicatedSqlTest.java,84,,"            assertContainsEq(""Distributed join on 'idx = noidx' returned unexpected result. "" +"
125749,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/ReplicatedSqlTest.java,86,,"            assertContainsEq(""Distributed join on 'noidx = idx' returned unexpected result. "" +"
125750,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/sqltests/ReplicatedSqlTest.java,88,,"            assertContainsEq(""Distributed join on 'noidx = noidx' returned unexpected result. "" +"
125751,./TargetProjects/ignite/modules/indexing/src/test/java/org/apache/ignite/util/KillCommandsMXBeanTest.java,190,,"        snpMxBean.cancelSnapshot(""unknown"");"
125752,./TargetProjects/ignite/modules/jta/src/test/java/org/apache/ignite/internal/processors/cache/jta/AbstractCacheJtaSelfTest.java,115,,"            assert cache.getAndPut(""key"", 1) == null;"
125753,./TargetProjects/ignite/modules/jta/src/test/java/org/apache/ignite/internal/processors/cache/jta/AbstractCacheJtaSelfTest.java,163,,"            cache1.put(""key1"", 1);"
125754,./TargetProjects/ignite/modules/jta/src/test/java/org/apache/ignite/internal/processors/cache/jta/AbstractCacheJtaSelfTest.java,164,,"            cache2.put(""key2"", 2);"
125755,./TargetProjects/ignite/modules/kubernetes/src/test/java/org/apache/ignite/internal/kubernetes/connection/KubernetesServiceAddressResolverTest.java,170,,"                              ""           {"" +"
125756,./TargetProjects/ignite/modules/kubernetes/src/test/java/org/apache/ignite/internal/kubernetes/connection/KubernetesServiceAddressResolverTest.java,175,,"                              ""           }"" +"
125757,./TargetProjects/ignite/modules/kubernetes/src/test/java/org/apache/ignite/spi/discovery/tcp/ipfinder/kubernetes/TcpDiscoveryKubernetesIpFinderSelfTest.java,59,,"            assertTrue(e.getMessage().startsWith(""One or more configuration parameters are invalid""));"
125758,./TargetProjects/ignite/modules/log4j2/src/test/java/org/apache/ignite/logger/log4j2/Log4j2LoggerMarkerTest.java,64,,"        log.error(""IGNORE_ME"", ""Ignored error"", null);"
125759,./TargetProjects/ignite/modules/log4j2/src/test/java/org/apache/ignite/logger/log4j2/Log4j2LoggerMarkerTest.java,70,,"        log.error(""ACCEPT_ME"", ""Accepted error"", null);"
125760,./TargetProjects/ignite/modules/mesos/src/test/java/org/apache/ignite/mesos/IgniteSchedulerSelfTest.java,72,,"        Protos.Offer offer = createOffer(""hostname"", 4, 1024);"
125761,./TargetProjects/ignite/modules/ml/spark-model-parser/src/main/java/org/apache/ignite/ml/sparkmodelparser/SparkModelParser.java,397,,"            String msg = ""Error reading parquet file: "" + e.getMessage();"
125762,./TargetProjects/ignite/modules/ml/spark-model-parser/src/test/java/org/apache/ignite/ml/sparkmodelparser/SparkModelParserTest.java,58,,"            fail(""Expected IllegalArgumentException exception"");"
125763,./TargetProjects/ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/Tracer.java,116,,"        showAscii(vec, log, ""%4f"");"
125764,./TargetProjects/ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/Tracer.java,310,,"                replaceAll(""/\\*@MIN@\\*/.*\n"", ""var min = "" + dataColorJson(min, cm.apply(min)) + "";\n"")."
125765,./TargetProjects/ignite/modules/ml/src/main/java/org/apache/ignite/ml/preprocessing/imputing/ImputerTrainer.java,374,,"            assert valuesByFreq.length == row.size() : ""Base preprocessor must return exactly "" + valuesByFreq.length"
125766,./TargetProjects/ignite/modules/ml/src/main/java/org/apache/ignite/ml/preprocessing/imputing/ImputerTrainer.java,375,,"                + "" features"";"
125767,./TargetProjects/ignite/modules/ml/src/main/java/org/apache/ignite/ml/tree/impurity/gini/GiniImpurityMeasure.java,76,,"        assert left.length == b.left.length : ""Subtracted measure has to have length "" + left.length;"
125768,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/TestUtils.java,127,,"                "" x "" + actual.columnSize() +"
125769,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/dataset/impl/cache/util/ComputeUtilsTest.java,74,,"        String firstCacheName = ""CACHE_1_"" + UUID.randomUUID();"
125770,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/dataset/impl/cache/util/ComputeUtilsTest.java,75,,"        String secondCacheName = ""CACHE_2_"" + UUID.randomUUID();"
125771,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/dataset/impl/cache/util/IteratorWithConcurrentModificationCheckerTest.java,38,,"        Iterator<Integer> iter = new IteratorWithConcurrentModificationChecker<>(list.iterator(), 4, ""Exception"");"
125772,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/dataset/primitive/DatasetWrapperTest.java,60,,"    @SuppressWarnings(""unchecked"")"
125773,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/inference/IgniteModelStorageUtilTest.java,52,,"            IgniteModelStorageUtil.saveModel(ignite, i -> 0.42, ""mdl"");"
125774,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/inference/storage/model/AbstractModelStorageTest.java,47,,"        mdlStorage.putFile(""/test"", data);"
125775,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/inference/storage/model/AbstractModelStorageTest.java,62,,"        mdlStorage.mkdirs(""/a/b"");"
125776,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/inference/storage/model/AbstractModelStorageTest.java,63,,"        mdlStorage.mkdirs(""/a/c"");"
125777,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/inference/util/DirectorySerializerTest.java,53,,"                fw.write(""Hello, world!"");"
125778,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/knn/ANNClassificationTest.java,66,,"        assertTrue(mdl.toString().contains(""weighted = [false]""));"
125779,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/math/primitives/vector/DenseVectorConstructorTest.java,46,,"            put(""arr"", new double[0]);"
125780,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/math/primitives/vector/VectorAttributesTest.java,36,,"        new AttrCfg(""isDense"", Vector::isDense,"
125781,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/math/primitives/vector/VectorToMatrixTest.java,65,,"            assertNotNull(""Expect non-null matrix for "" + key.getSimpleName() + "" in "" + desc, matrix);"
125782,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/preprocessing/encoding/EncoderTrainerTest.java,48,,"        data.put(1, new DenseVector(new Serializable[] {1.0, ""Monday"", ""September""}));"
125783,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/preprocessing/encoding/EncoderTrainerTest.java,48,,"        data.put(1, new DenseVector(new Serializable[] {1.0, ""Monday"", ""September""}));"
125784,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/preprocessing/encoding/EncoderTrainerTest.java,49,,"        data.put(2, new DenseVector(new Serializable[] {2.0, ""Monday"", ""August""}));"
125785,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/preprocessing/encoding/EncoderTrainerTest.java,51,,"        data.put(4, new DenseVector(new Serializable[] {4.0, ""Friday"", ""June""}));"
125786,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/preprocessing/encoding/EncoderTrainerTest.java,51,,"        data.put(4, new DenseVector(new Serializable[] {4.0, ""Friday"", ""June""}));"
125787,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/preprocessing/encoding/EncoderTrainerTest.java,53,,"        data.put(6, new DenseVector(new Serializable[] {6.0, ""Sunday"", ""August""}));"
125788,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/preprocessing/encoding/EncoderTrainerTest.java,231,,"        data.put(1, new Object[] {""1.0"", 1.0, 2.0});"
125789,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/preprocessing/encoding/FrequencyEncoderPreprocessorTest.java,40,,"            new DenseVector(new Serializable[] {""1"", ""Moscow"", ""A""}),"
125790,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/preprocessing/encoding/OneHotEncoderPreprocessorTest.java,43,,"            new DenseVector(new Serializable[] {""1"", ""Moscow"", ""A""}),"
125791,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/preprocessing/encoding/StringEncoderPreprocessorTest.java,40,,"            new DenseVector(new Serializable[] {""1"", ""Moscow"", ""A""}),"
125792,./TargetProjects/ignite/modules/ml/src/test/java/org/apache/ignite/ml/structures/LabeledVectorSetTest.java,124,,"            fail(""CardinalityException"");"
125793,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusDiscoveryTracingTest.java,86,,"                    .put(""node.id"", grid(0).localNode().id().toString())"
125794,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusDiscoveryTracingTest.java,87,,"                    .put(""node.consistent.id"", grid(0).localNode().consistentId().toString())"
125795,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusDiscoveryTracingTest.java,88,,"                    .put(""node.name"", grid(0).name())"
125796,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusDiscoveryTracingTest.java,89,,"                    .put(""event.node.id"", grid(GRID_CNT).localNode().id().toString())"
125797,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusDiscoveryTracingTest.java,90,,"                    .put(""event.node.consistent.id"", grid(GRID_CNT).localNode().consistentId().toString())"
125798,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusDiscoveryTracingTest.java,118,,"                    fail(""Unable to create cache."");"
125799,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusDiscoveryTracingTest.java,131,,"                    .put(""message.class"", ""DynamicCacheChangeBatch"")"
125800,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusSqlNativeTracingTest.java,286,,"            ""SELECT * FROM "" + prsnTable + "" AS p JOIN "" + orgTable + "" AS o ON o.orgId = p.prsnId"","
125801,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusTracingConfigurationGetTest.java,49,,"                new TracingConfigurationCoordinates.Builder(TX).withLabel(""label"").build()));"
125802,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusTxTracingConfigurationTest.java,58,,"        IgniteEx client = startGrid(""client"");"
125803,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusTxTracingTest.java,118,,"        IgniteEx client = startGrid(""client"");"
125804,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusTxTracingTest.java,120,,"        Transaction tx = client.transactions().withLabel(""label1"").txStart(PESSIMISTIC, SERIALIZABLE);"
125805,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusTxTracingTest.java,133,,"                .put(""node.id"", client.localNode().id().toString())"
125806,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusTxTracingTest.java,134,,"                .put(""node.consistent.id"", client.localNode().consistentId().toString())"
125807,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusTxTracingTest.java,135,,"                .put(""node.name"", client.name())"
125808,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusTxTracingTest.java,136,,"                .put(""concurrency"", PESSIMISTIC.name())"
125809,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusTxTracingTest.java,137,,"                .put(""isolation"", SERIALIZABLE.name())"
125810,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusTxTracingTest.java,138,,"                .put(""timeout"", String.valueOf(0))"
125811,./TargetProjects/ignite/modules/opencensus/src/test/java/org/apache/ignite/internal/processors/monitoring/opencensus/OpenCensusTxTracingTest.java,139,,"                .put(""label"", ""label1"")"
125812,./TargetProjects/ignite/modules/osgi/src/test/java/org/apache/ignite/osgi/AbstractIgniteKarafTest.java,59,,"    protected static final String PROJECT_VERSION = System.getProperty(""projectVersion"");"
125813,./TargetProjects/ignite/modules/schedule/src/test/java/org/apache/ignite/internal/processors/schedule/GridScheduleSelfTest.java,322,,"                fail(""IgniteException must have been thrown"");"
125814,./TargetProjects/ignite/modules/schedule/src/test/java/org/apache/ignite/internal/processors/schedule/GridScheduleSelfTest.java,325,,"                info(""Caught expected exception: "" + e);"
125815,./TargetProjects/ignite/modules/slf4j/src/test/java/org/apache/ignite/logger/slf4j/Slf4jLoggerMarkerTest.java,60,,"        log.error(""IGNORE_ME"", ""Ignored error"", null);"
125816,./TargetProjects/ignite/modules/slf4j/src/test/java/org/apache/ignite/logger/slf4j/Slf4jLoggerMarkerTest.java,66,,"        log.error(""ACCEPT_ME"", ""Accepted error"", null);"
125817,./TargetProjects/ignite/modules/spark-2.4/src/test/java/org/apache/ignite/spark/JavaEmbeddedIgniteRDDSelfTest.java,205,,"            List<Entity> res = cache.objectSql(""Entity"", ""name = ? and salary = ?"", ""name50"", 5000)"
125818,./TargetProjects/ignite/modules/spark-2.4/src/test/java/org/apache/ignite/spark/JavaEmbeddedIgniteRDDSelfTest.java,209,,"            assertEquals(""Invalid result"", 50, res.get(0).id());"
125819,./TargetProjects/ignite/modules/spark-2.4/src/test/java/org/apache/ignite/spark/JavaStandaloneIgniteRDDSelfTest.java,105,,"        Ignition.ignite(""grid-0"").cache(ENTITY_CACHE_NAME).clear();"
125820,./TargetProjects/ignite/modules/spark-2.4/src/test/java/org/apache/ignite/spark/JavaStandaloneIgniteRDDSelfTest.java,125,,"        JavaSparkContext sc = new JavaSparkContext(""local[*]"", ""test"");"
125821,./TargetProjects/ignite/modules/spark-2.4/src/test/java/org/apache/ignite/spark/JavaStandaloneIgniteRDDSelfTest.java,125,,"        JavaSparkContext sc = new JavaSparkContext(""local[*]"", ""test"");"
125822,./TargetProjects/ignite/modules/spark-2.4/src/test/java/org/apache/ignite/spark/JavaStandaloneIgniteRDDSelfTest.java,193,,"            List<Entity> res = cache.objectSql(""Entity"", ""name = ? and salary = ?"", ""name50"", 5000)"
125823,./TargetProjects/ignite/modules/spark-2.4/src/test/java/org/apache/ignite/spark/JavaStandaloneIgniteRDDSelfTest.java,197,,"            assertEquals(""Invalid result"", 50, res.get(0).id());"
125824,./TargetProjects/ignite/modules/spark-2.4/src/test/java/org/apache/ignite/spark/JavaStandaloneIgniteRDDSelfTest.java,282,,"                    assertTrue(String.format(""+++ Fail on %s field"", fieldName),"
125825,./TargetProjects/ignite/modules/spark/src/test/java/org/apache/ignite/spark/JavaEmbeddedIgniteRDDSelfTest.java,205,,"            List<Entity> res = cache.objectSql(""Entity"", ""name = ? and salary = ?"", ""name50"", 5000)"
125826,./TargetProjects/ignite/modules/spark/src/test/java/org/apache/ignite/spark/JavaEmbeddedIgniteRDDSelfTest.java,209,,"            assertEquals(""Invalid result"", 50, res.get(0).id());"
125827,./TargetProjects/ignite/modules/spark/src/test/java/org/apache/ignite/spark/JavaStandaloneIgniteRDDSelfTest.java,105,,"        Ignition.ignite(""grid-0"").cache(ENTITY_CACHE_NAME).clear();"
125828,./TargetProjects/ignite/modules/spark/src/test/java/org/apache/ignite/spark/JavaStandaloneIgniteRDDSelfTest.java,125,,"        JavaSparkContext sc = new JavaSparkContext(""local[*]"", ""test"");"
125829,./TargetProjects/ignite/modules/spark/src/test/java/org/apache/ignite/spark/JavaStandaloneIgniteRDDSelfTest.java,125,,"        JavaSparkContext sc = new JavaSparkContext(""local[*]"", ""test"");"
125830,./TargetProjects/ignite/modules/spark/src/test/java/org/apache/ignite/spark/JavaStandaloneIgniteRDDSelfTest.java,193,,"            List<Entity> res = cache.objectSql(""Entity"", ""name = ? and salary = ?"", ""name50"", 5000)"
125831,./TargetProjects/ignite/modules/spark/src/test/java/org/apache/ignite/spark/JavaStandaloneIgniteRDDSelfTest.java,197,,"            assertEquals(""Invalid result"", 50, res.get(0).id());"
125832,./TargetProjects/ignite/modules/spark/src/test/java/org/apache/ignite/spark/JavaStandaloneIgniteRDDSelfTest.java,282,,"                    assertTrue(String.format(""+++ Fail on %s field"", fieldName),"
125833,./TargetProjects/ignite/modules/spring/src/main/java/org/apache/ignite/internal/util/spring/IgniteSpringHelperImpl.java,112,,"                "", err="" + e.getMessage() + ']', e);"
125834,./TargetProjects/ignite/modules/spring/src/main/java/org/apache/ignite/internal/util/spring/IgniteSpringHelperImpl.java,171,,"                "", beanName="" + beanName + ']');"
125835,./TargetProjects/ignite/modules/spring/src/main/java/org/apache/ignite/internal/util/spring/IgniteSpringHelperImpl.java,250,,"                throw new IgniteCheckedException(""Failed to instantiate Spring XML application context "" +"
125836,./TargetProjects/ignite/modules/spring/src/main/java/org/apache/ignite/internal/util/spring/IgniteSpringHelperImpl.java,251,,"                    ""(make sure all classes used in Spring configuration are present at CLASSPATH) "", e);"
125837,./TargetProjects/ignite/modules/spring/src/test/java/org/apache/ignite/encryption/SpringEncryptedCacheRestartTest.java,54,,"                ""modules/spring/src/test/config/enc/enc-cache.xml"").getAbsolutePath(), ""grid-0"");"
125838,./TargetProjects/ignite/modules/spring/src/test/java/org/apache/ignite/encryption/SpringEncryptedCacheRestartTest.java,54,,"                ""modules/spring/src/test/config/enc/enc-cache.xml"").getAbsolutePath(), ""grid-0"");"
125839,./TargetProjects/ignite/modules/spring/src/test/java/org/apache/ignite/internal/GridFactorySelfTest.java,334,,"        assert evts.get(0) == LifecycleEventType.BEFORE_NODE_START : ""Invalid lifecycle event: "" + evts.get(0);"
125840,./TargetProjects/ignite/modules/spring/src/test/java/org/apache/ignite/internal/GridFactorySelfTest.java,398,,"                ""Invalid grid state [expected="" + STARTED + "", returned="" + gridState1 + ']';"
125841,./TargetProjects/ignite/modules/spring/src/test/java/org/apache/ignite/internal/GridFactorySelfTest.java,398,,"                ""Invalid grid state [expected="" + STARTED + "", returned="" + gridState1 + ']';"
125842,./TargetProjects/ignite/modules/spring/src/test/java/org/apache/ignite/internal/GridFactorySelfTest.java,434,,"                        info(""Thread finished."");"
125843,./TargetProjects/ignite/modules/spring/src/test/java/org/apache/ignite/internal/IgniteDynamicCacheConfigTest.java,93,,"            ""modules/spring/src/test/java/org/apache/ignite/internal/cache.xml""));"
125844,./TargetProjects/ignite/modules/spring/src/test/java/org/apache/ignite/internal/IgniteDynamicCacheConfigTest.java,114,,"                ""modules/spring/src/test/java/org/apache/ignite/internal/filtered-cache.xml""));"
125845,./TargetProjects/ignite/modules/spring/src/test/java/org/apache/ignite/internal/processors/resource/GridSpringResourceInjectionSelfTest.java,92,,"        anotherCfg.setIgniteInstanceName(""anotherGrid"");"
125846,./TargetProjects/ignite/modules/spring/src/test/java/org/apache/ignite/internal/processors/resource/GridSpringResourceInjectionSelfTest.java,162,,"        }, grid, IgniteException.class, ""Either bean name or its class must be specified in @SpringResource, but not both"");"
125847,./TargetProjects/ignite/modules/spring/src/test/java/org/apache/ignite/p2p/GridP2PUserVersionChangeSelfTest.java,139,,"                new URL[] { new URL(GridTestProperties.getProperty(""p2p.uri.cls"")) },"
125848,./TargetProjects/ignite/modules/spring/src/test/java/org/apache/ignite/p2p/GridP2PUserVersionChangeSelfTest.java,140,,"                Collections.singletonMap(""META-INF/ignite.xml"", makeUserVersion(""1"").getBytes()));"
125849,./TargetProjects/ignite/modules/urideploy/src/test/java/org/apache/ignite/spi/deployment/uri/GridUriDeploymentSimpleSelfTest.java,67,,"        assert spi.findResource(""TestTaskWithName"") == null;"
125850,./TargetProjects/ignite/modules/urideploy/src/test/java/org/apache/ignite/tools/GridToolsSelfTest.java,45,,"        String tmpDirName = GridTestProperties.getProperty(""ant.gar.tmpdir"");"
125851,./TargetProjects/ignite/modules/urideploy/src/test/java/org/apache/ignite/tools/GridToolsSelfTest.java,46,,"        String srcDirName = GridTestProperties.getProperty(""ant.gar.srcdir"");"
125852,./TargetProjects/ignite/modules/urideploy/src/test/java/org/apache/ignite/tools/GridToolsSelfTest.java,48,,"        String metaDirName = baseDirName + File.separator + ""META-INF"";"
125853,./TargetProjects/ignite/modules/urideploy/src/test/java/org/apache/ignite/tools/GridToolsSelfTest.java,49,,"        String garFileName = baseDirName + "".gar"";"
125854,./TargetProjects/ignite/modules/urideploy/src/test/java/org/apache/ignite/tools/GridToolsSelfTest.java,52,,"            + File.separator + ""ignite.xml"";"
125855,./TargetProjects/ignite/modules/urideploy/src/test/java/org/apache/ignite/tools/GridToolsSelfTest.java,73,,"        garProject.setName(""Gar test project"");"
125856,./TargetProjects/ignite/modules/web/ignite-websphere-test/src/main/java/org/apache/ignite/webtest/TestJtaTxServlet.java,66,,"            writer.println(""Transaction #1. Put values [key1="" + key1 + "", val1="" + cache.get(key1)"
125857,./TargetProjects/ignite/modules/web/ignite-websphere-test/src/main/java/org/apache/ignite/webtest/TestJtaTxServlet.java,67,,"                + "", key2="" + key2 + "", val2="" + cache.get(key2) + ""]"");"
125858,./TargetProjects/ignite/modules/web/ignite-websphere-test/src/main/java/org/apache/ignite/webtest/TestJtaTxServlet.java,67,,"                + "", key2="" + key2 + "", val2="" + cache.get(key2) + ""]"");"
125859,./TargetProjects/ignite/modules/web/src/main/java/org/apache/ignite/cache/websession/WebSession.java,215,,"            throw new IllegalStateException(""Call on invalidated session!"");"
125860,./TargetProjects/ignite/modules/web/src/test/java/org/apache/ignite/internal/websession/WebSessionSelfTest.java,106,,"        testSingleRequest(""/modules/core/src/test/config/websession/example-cache.xml"");"
125861,./TargetProjects/ignite/modules/web/src/test/java/org/apache/ignite/internal/websession/WebSessionSelfTest.java,164,,"            URL url = new URL(""http://localhost:"" + TEST_JETTY_PORT + ""/ignitetest/test"");"
125862,./TargetProjects/ignite/modules/web/src/test/java/org/apache/ignite/internal/websession/WebSessionSelfTest.java,164,,"            URL url = new URL(""http://localhost:"" + TEST_JETTY_PORT + ""/ignitetest/test"");"
125863,./TargetProjects/ignite/modules/web/src/test/java/org/apache/ignite/internal/websession/WebSessionSelfTest.java,239,,"        conn.addRequestProperty(""Cookie"", ""JSESSIONID="" + sesId);"
125864,./TargetProjects/ignite/modules/web/src/test/java/org/apache/ignite/internal/websession/WebSessionSelfTest.java,239,,"        conn.addRequestProperty(""Cookie"", ""JSESSIONID="" + sesId);"
125865,./TargetProjects/ignite/modules/web/src/test/java/org/apache/ignite/internal/websession/WebSessionSelfTest.java,254,,"                assertEquals(reqMarker, ((Profile) ses.getAttribute(""profile"")).getMarker());"
125866,./TargetProjects/ignite/modules/web/src/test/java/org/apache/ignite/internal/websession/WebSessionSelfTest.java,305,,"                    assertEquals(""val1"", ses.getAttribute(""key1""));"
125867,./TargetProjects/ignite/modules/web/src/test/java/org/apache/ignite/internal/websession/WebSessionSelfTest.java,305,,"                    assertEquals(""val1"", ses.getAttribute(""key1""));"
125868,./TargetProjects/ignite/modules/web/src/test/java/org/apache/ignite/internal/websession/WebSessionSelfTest.java,351,,"            X.println("">>>"", ""Initial session Cookie: "" + sesIdCookie1, "">>>"");"
125869,./TargetProjects/ignite/modules/web/src/test/java/org/apache/ignite/internal/websession/WebSessionSelfTest.java,653,,"                    assertEquals(""null"", ses);"
125870,./TargetProjects/ignite/modules/web/src/test/java/org/apache/ignite/internal/websession/WebSessionServerStart.java,81,,"            ses.setAttribute(""key1"", ""val1"");"
125871,./TargetProjects/ignite/modules/web/src/test/java/org/apache/ignite/internal/websession/WebSessionServerStart.java,82,,"            ses.setAttribute(""key2"", ""val2"");"
125872,./TargetProjects/ignite/modules/web/src/test/java/org/apache/ignite/internal/websession/WebSessionServerStart.java,84,,"            X.println("">>>"", ""Created session: "" + ses.getId(), "">>>"");"
125873,./TargetProjects/ignite/modules/yardstick/src/main/java/org/apache/ignite/yardstick/cache/IgniteCacheAbstractBenchmark.java,213,,"            if (preloadCache.get(""loaded"") == null) {"
125874,./TargetProjects/ignite/modules/yardstick/src/main/java/org/apache/ignite/yardstick/cache/IgniteStreamerBenchmark.java,99,,"            "", entries="" + entries +"
125875,./TargetProjects/ignite/modules/yardstick/src/main/java/org/apache/ignite/yardstick/cache/failover/IgniteTransactionalWriteInvokeBenchmark.java,81,,"                    dataLdr.addData(""key-"" + k + ""-master"", INITIAL_VALUE);"
125876,./TargetProjects/ignite/modules/yardstick/src/main/java/org/apache/ignite/yardstick/cache/load/IgniteCacheRandomOperationBenchmark.java,272,,"                                    throw new IgniteException(""Class is unknown for the load test. Make sure you "" +"
125877,./TargetProjects/ignite/modules/yarn/src/test/java/org/apache/ignite/yarn/IgniteApplicationMasterSelfTest.java,204,,"        appMaster.onContainersAllocated(Collections.singletonList(createContainer(""simple"", 5, 2000)));"
125878,./TargetProjects/ignite/modules/zookeeper/src/main/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperClient.java,1147,,"                U.warn(log, ""Failed to execute async operation, connection lost [path="" + path + ']');"
125879,./TargetProjects/ignite/modules/zookeeper/src/main/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperClient.java,1175,,"                U.warn(log, ""Failed to execute async operation, connection lost. Will retry after connection restore [path="" + path + ']');"
125880,./TargetProjects/ignite/modules/zookeeper/src/main/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperDiscoveryImpl.java,625,,"                throw new IgniteClientDisconnectedException(null, ""Client is disconnected."");"
125881,./TargetProjects/ignite/modules/zookeeper/src/main/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperDiscoveryImpl.java,2609,,"            log.debug(""Generated CUSTOM event [evt="" + evtData + "", msg="" + msg + ']');"
125882,./TargetProjects/ignite/modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperClientTest.java,111,,"        client.createIfNeeded(""/apacheIgnite1"", null, CreateMode.PERSISTENT);"
125883,./TargetProjects/ignite/modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperClientTest.java,117,,"                client.createIfNeeded(""/apacheIgnite2"", null, CreateMode.PERSISTENT);"
125884,./TargetProjects/ignite/modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperClientTest.java,133,,"        client.createIfNeeded(""/apacheIgnite"", null, CreateMode.PERSISTENT);"
125885,./TargetProjects/ignite/modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperClientTest.java,137,,"        paths.add(""/apacheIgnite/1"");"
125886,./TargetProjects/ignite/modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperClientTest.java,138,,"        paths.add(""/apacheIgnite/2"");"
125887,./TargetProjects/ignite/modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperClientTest.java,385,,"                info(""Restart zookeeper server"");"
125888,./TargetProjects/ignite/modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperClientTest.java,389,,"                info(""Zookeeper server restarted"");"
125889,./TargetProjects/ignite/modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperClientTest.java,393,,"        }, ""start-zk"");"
125890,./TargetProjects/ignite/modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperDiscoveryCommunicationFailureTest.java,118,,"            spi.resolveCommunicationFailure(ignite(idx2).cluster().localNode(), new Exception(""test""));"
125891,./TargetProjects/ignite/modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperDiscoveryConcurrentStartAndStartStopTest.java,50,,"            info(""Iteration: "" + i);"
125892,./TargetProjects/ignite/modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperDiscoverySpiTestBase.java,728,,"                processSessionCreationError(node, null, new IgniteCheckedException(""Test"", new SocketTimeoutException()));"
125893,./TargetProjects/ignite/modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperDiscoverySpiTestHelper.java,159,,"                return spi != null && GridTestUtils.getFieldValue(spi, ""impl"") != null;"
125894,./TargetProjects/ignite/modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperDiscoveryTopologyChangeAndReconnectTest.java,793,,"                            "", crd="" + (startedNodes.isEmpty() ? null : Collections.min(startedNodes)) +"
125895,./TargetProjects/ignite-abbrev-plugin/src/org/gridgain/inspection/abbrev/AbbreviationInspection.java,420,,"        assert listsEqual(Arrays.asList(""count""), i.nameParts(""count""));"
125896,./TargetProjects/ignite-abbrev-plugin/src/org/gridgain/inspection/abbrev/AbbreviationInspection.java,421,,"        assert listsEqual(Arrays.asList(""Count""), i.nameParts(""Count""));"
125897,./TargetProjects/ignite-abbrev-plugin/src/org/gridgain/inspection/abbrev/AbbreviationInspection.java,430,,"        assert listsEqual(Arrays.asList(""my"",""BIG"", ""Count""), i.nameParts(""myBIGCount""));"
125898,./TargetProjects/ignite-extensions/modules/cdc-ext/src/main/java/org/apache/ignite/cdc/kafka/KafkaToIgniteCdcStreamer.java,216,,"                "">>> "" + NL +"
125899,./TargetProjects/ignite-extensions/modules/kafka-ext/src/test/java/org/apache/ignite/stream/kafka/connect/IgniteSinkConnectorTest.java,281,,"        props.put(WorkerConfig.INTERNAL_KEY_CONVERTER_CLASS_CONFIG, ""org.apache.kafka.connect.storage.StringConverter"");"
125900,./TargetProjects/ignite-extensions/modules/kafka-ext/src/test/java/org/apache/ignite/stream/kafka/connect/IgniteSinkConnectorTest.java,283,,"        props.put(""internal.key.converter.schemas.enable"", ""false"");"
125901,./TargetProjects/ignite-extensions/modules/kafka-ext/src/test/java/org/apache/ignite/stream/kafka/connect/IgniteSourceConnectorTest.java,342,,"        props.put(""internal.key.converter.schemas.enable"", ""false"");"
125902,./TargetProjects/ignite-extensions/modules/mqtt-ext/src/test/java/org/apache/ignite/stream/mqtt/IgniteMqttStreamerTest.java,74,,"    private static final List<String> MULTIPLE_TOPIC_NAMES = Arrays.asList(""def"", ""ghi"", ""jkl"", ""mno"");"
125903,./TargetProjects/ignite-extensions/modules/mqtt-ext/src/test/java/org/apache/ignite/stream/mqtt/IgniteMqttStreamerTest.java,74,,"    private static final List<String> MULTIPLE_TOPIC_NAMES = Arrays.asList(""def"", ""ghi"", ""jkl"", ""mno"");"
125904,./TargetProjects/ignite-extensions/modules/performance-statistics-ext/src/main/java/org/apache/ignite/internal/performancestatistics/handlers/PrintHandler.java,82,,"        ps.print(""{\""op\"":\"""" + CACHE_START);"
125905,./TargetProjects/ignite-extensions/modules/performance-statistics-ext/src/main/java/org/apache/ignite/internal/performancestatistics/handlers/PrintHandler.java,83,,"        ps.print(""\"",\""nodeId\"":\"""");"
125906,./TargetProjects/ignite-extensions/modules/performance-statistics-ext/src/main/java/org/apache/ignite/internal/performancestatistics/handlers/PrintHandler.java,103,,"        ps.print("",\""startTime\"":"");"
125907,./TargetProjects/ignite-extensions/modules/performance-statistics-ext/src/main/java/org/apache/ignite/internal/performancestatistics/handlers/PrintHandler.java,105,,"        ps.print("",\""duration\"":"");"
125908,./TargetProjects/ignite-extensions/modules/performance-statistics-ext/src/test/java/org/apache/ignite/internal/performancestatistics/PerformanceStatisticsPrinterTest.java,123,,"            assertTrue(""Unexpected operation: "" + op, ops.remove(op));"
125909,./TargetProjects/ignite-extensions/modules/spring-boot-autoconfigure-ext/src/test/java/org/apache/ignite/springframework/boot/autoconfigure/IgniteAutoconfigureTest.java,68,,"            assertEquals(""Expecting usage of the configuration from context"", cfg.getIgniteInstanceName(),"
125910,./TargetProjects/ignite-extensions/modules/spring-cache-ext/src/test/java/org/apache/ignite/cache/spring/GridSpringCacheManagerAbstractTest.java,68,,"            assertEquals(""value"" + i, svc.simpleKey(i));"
125911,./TargetProjects/ignite-extensions/modules/spring-cache-ext/src/test/java/org/apache/ignite/cache/spring/GridSpringCacheManagerAbstractTest.java,108,,"            assertEquals(""value"" + i + ""suffix"" + i, svc.complexKey(i, ""suffix"" + i));"
125912,./TargetProjects/ignite-extensions/modules/spring-cache-ext/src/test/java/org/apache/ignite/cache/spring/GridSpringCacheManagerAbstractTest.java,150,,"            assertEquals(""value"" + i + ""odd"", svc.simpleKeyPut(i));"
125913,./TargetProjects/ignite-extensions/modules/spring-cache-ext/src/test/java/org/apache/ignite/cache/spring/GridSpringCacheManagerAbstractTest.java,155,,"            assertEquals(""value"" + i + ""even"", svc.simpleKeyPut(i));"
125914,./TargetProjects/ignite-extensions/modules/spring-cache-ext/src/test/java/org/apache/ignite/cache/spring/GridSpringCacheManagerAbstractTest.java,242,,"        assertEquals(""value0"", c.get(0));"
125915,./TargetProjects/ignite-extensions/modules/spring-cache-ext/src/test/java/org/apache/ignite/cache/spring/GridSpringCacheManagerAbstractTest.java,243,,"        assertEquals(""value1"", c.get(1));"
125916,./TargetProjects/ignite-extensions/modules/spring-cache-ext/src/test/java/org/apache/ignite/cache/spring/GridSpringCacheManagerAbstractTest.java,244,,"        assertEquals(""value2"", c.get(2));"
125917,./TargetProjects/ignite-extensions/modules/spring-cache-ext/src/test/java/org/apache/ignite/cache/spring/GridSpringCacheTestService.java,50,,"    @Cacheable(""testCache"")"
125918,./TargetProjects/ignite-extensions/modules/spring-cache-ext/src/test/java/org/apache/ignite/cache/spring/GridSpringCacheTestService.java,56,,"        return ""value"" + key;"
125919,./TargetProjects/ignite-extensions/modules/spring-cache-ext/src/test/java/org/apache/ignite/cache/spring/GridSpringDynamicCacheTestService.java,36,,"    @Cacheable(""dynamicCache"")"
125920,./TargetProjects/ignite-extensions/modules/spring-cache-ext/src/test/java/org/apache/ignite/cache/spring/SpringCacheTest.java,93,,"        String key = ""key"";"
125921,./TargetProjects/ignite-extensions/modules/spring-cache-ext/src/test/java/org/apache/ignite/cache/spring/SpringCacheTest.java,94,,"        String value = ""value"";"
125922,./TargetProjects/ignite-extensions/modules/spring-data-2.0-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataConnectionConfigurationTest.java,51,,"    private static final String CACHE_NAME = ""PersonCache"";"
125923,./TargetProjects/ignite-extensions/modules/spring-data-2.0-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataCrudSelfExpressionTest.java,84,,"        repo.save((int) repo.count(), new Person(""nonUniquePerson"", ""nonUniqueLastName""));"
125924,./TargetProjects/ignite-extensions/modules/spring-data-2.0-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataCrudSelfExpressionTest.java,84,,"        repo.save((int) repo.count(), new Person(""nonUniquePerson"", ""nonUniqueLastName""));"
125925,./TargetProjects/ignite-extensions/modules/spring-data-2.0-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataCrudSelfTest.java,86,,"        repo.save((int) repo.count(), new Person(""uniquePerson"", ""uniqueLastName""));"
125926,./TargetProjects/ignite-extensions/modules/spring-data-2.0-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataCrudSelfTest.java,87,,"        repo.save((int) repo.count(), new Person(""nonUniquePerson"", ""nonUniqueLastName""));"
125927,./TargetProjects/ignite-extensions/modules/spring-data-2.0-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataCrudSelfTest.java,87,,"        repo.save((int) repo.count(), new Person(""nonUniquePerson"", ""nonUniqueLastName""));"
125928,./TargetProjects/ignite-extensions/modules/spring-data-2.0-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataCrudSelfTest.java,273,,"        repo.removeByFirstName(""person3f"");"
125929,./TargetProjects/ignite-extensions/modules/spring-data-2.0-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataCrudSelfTest.java,345,,"        assertEquals(person.get(0).getFullName(), ""uniquePerson updatedUniqueSecondName2"");"
125930,./TargetProjects/ignite-extensions/modules/spring-data-2.0-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataQueriesSelfTest.java,79,,"            repo.save(i, new Person(""person"" + Integer.toHexString(i),"
125931,./TargetProjects/ignite-extensions/modules/spring-data-2.0-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataQueriesSelfTest.java,81,,"            repoTWO.save(i, new Person(""TWOperson"" + Integer.toHexString(i),"
125932,./TargetProjects/ignite-extensions/modules/spring-data-2.0-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataQueriesSelfTest.java,140,,"        List<Person> persons = repo.findByFirstNameContaining(""person4"");"
125933,./TargetProjects/ignite-extensions/modules/spring-data-2.0-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataQueriesSelfTest.java,151,,"        List<Person> persons = repoTWO.findByFirstNameContaining(""TWOperson4"");"
125934,./TargetProjects/ignite-extensions/modules/spring-data-2.0-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataQueriesSelfTest.java,258,,"        List<Person> pageable1 = repo.findByFirstNameRegex(""^[a-z]+$"", pageable);"
125935,./TargetProjects/ignite-extensions/modules/spring-data-2.0-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataQueriesSelfTest.java,357,,"        PersonProjection person = repo.findTopBySecondNameStartingWith(""lastName18"");"
125936,./TargetProjects/ignite-extensions/modules/spring-data-2.0-ext/src/test/java/org/apache/ignite/springdata/misc/PersonRepository.java,43,,"    public List<PersonProjection> queryByFirstNameWithProjectionNamedParameter(@Param(""firstname"") String val);"
125937,./TargetProjects/ignite-extensions/modules/spring-data-2.0-ext/src/test/java/org/apache/ignite/springdata/misc/PersonRepositoryOtherIgniteInstance.java,46,,"    public List<PersonProjection> queryByFirstNameWithProjectionNamedParameter(@Param(""firstname"") String val);"
125938,./TargetProjects/ignite-extensions/modules/spring-data-2.2-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataConnectionConfigurationTest.java,51,,"    private static final String CACHE_NAME = ""PersonCache"";"
125939,./TargetProjects/ignite-extensions/modules/spring-data-2.2-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataCrudSelfExpressionTest.java,85,,"        repo.save((int) repo.count(), new Person(""nonUniquePerson"", ""nonUniqueLastName""));"
125940,./TargetProjects/ignite-extensions/modules/spring-data-2.2-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataCrudSelfExpressionTest.java,85,,"        repo.save((int) repo.count(), new Person(""nonUniquePerson"", ""nonUniqueLastName""));"
125941,./TargetProjects/ignite-extensions/modules/spring-data-2.2-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataCrudSelfTest.java,86,,"        repo.save((int) repo.count(), new Person(""uniquePerson"", ""uniqueLastName""));"
125942,./TargetProjects/ignite-extensions/modules/spring-data-2.2-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataCrudSelfTest.java,87,,"        repo.save((int) repo.count(), new Person(""nonUniquePerson"", ""nonUniqueLastName""));"
125943,./TargetProjects/ignite-extensions/modules/spring-data-2.2-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataCrudSelfTest.java,87,,"        repo.save((int) repo.count(), new Person(""nonUniquePerson"", ""nonUniqueLastName""));"
125944,./TargetProjects/ignite-extensions/modules/spring-data-2.2-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataCrudSelfTest.java,273,,"        repo.removeByFirstName(""person3f"");"
125945,./TargetProjects/ignite-extensions/modules/spring-data-2.2-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataCrudSelfTest.java,345,,"        assertEquals(person.get(0).getFullName(), ""uniquePerson updatedUniqueSecondName2"");"
125946,./TargetProjects/ignite-extensions/modules/spring-data-2.2-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataQueriesSelfTest.java,79,,"            repo.save(i, new Person(""person"" + Integer.toHexString(i),"
125947,./TargetProjects/ignite-extensions/modules/spring-data-2.2-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataQueriesSelfTest.java,81,,"            repoTWO.save(i, new Person(""TWOperson"" + Integer.toHexString(i),"
125948,./TargetProjects/ignite-extensions/modules/spring-data-2.2-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataQueriesSelfTest.java,140,,"        List<Person> persons = repo.findByFirstNameContaining(""person4"");"
125949,./TargetProjects/ignite-extensions/modules/spring-data-2.2-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataQueriesSelfTest.java,151,,"        List<Person> persons = repoTWO.findByFirstNameContaining(""TWOperson4"");"
125950,./TargetProjects/ignite-extensions/modules/spring-data-2.2-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataQueriesSelfTest.java,258,,"        List<Person> pageable1 = repo.findByFirstNameRegex(""^[a-z]+$"", pageable);"
125951,./TargetProjects/ignite-extensions/modules/spring-data-2.2-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataQueriesSelfTest.java,357,,"        PersonProjection person = repo.findTopBySecondNameStartingWith(""lastName18"");"
125952,./TargetProjects/ignite-extensions/modules/spring-data-2.2-ext/src/test/java/org/apache/ignite/springdata/misc/PersonRepository.java,46,,"    public List<PersonProjection> queryByFirstNameWithProjectionNamedParameter(@Param(""firstname"") String val);"
125953,./TargetProjects/ignite-extensions/modules/spring-data-2.2-ext/src/test/java/org/apache/ignite/springdata/misc/PersonRepositoryOtherIgniteInstance.java,46,,"    public List<PersonProjection> queryByFirstNameWithProjectionNamedParameter(@Param(""firstname"") String val);"
125954,./TargetProjects/ignite-extensions/modules/spring-data-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataQueriesSelfTest.java,64,,"            repo.save(i, new Person(""person"" + Integer.toHexString(i),"
125955,./TargetProjects/ignite-extensions/modules/spring-data-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataQueriesSelfTest.java,98,,"        List<Person> persons = repo.findByFirstNameContaining(""person4"");"
125956,./TargetProjects/ignite-extensions/modules/spring-data-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataQueriesSelfTest.java,159,,"        List<Person> pageable1 = repo.findByFirstNameRegex(""^[a-z]+$"", pageable);"
125957,./TargetProjects/ignite-extensions/modules/spring-data-ext/src/test/java/org/apache/ignite/springdata/IgniteSpringDataQueriesSelfTest.java,256,,"        Person person = repo.findTopBySecondNameStartingWith(""lastName18"");"
125958,./TargetProjects/ignite-extensions/modules/spring-session-ext/src/test/java/org/apache/ignite/spring/sessions/IgniteHttpSessionConfigurationTest.java,169,,"        assertThat(ReflectionTestUtils.getField(repository, ""sessions""))"
125959,./TargetProjects/ignite-extensions/modules/spring-session-ext/src/test/java/org/apache/ignite/spring/sessions/IgniteHttpSessionConfigurationTest.java,225,,"        @SuppressWarnings(""unchecked"")"
125960,./TargetProjects/ignite-extensions/modules/spring-session-ext/src/test/java/org/apache/ignite/spring/sessions/IgniteIndexedSessionRepositoryTest.java,157,,"        session.setAttribute(""testName"", ""testValue"");"
125961,./TargetProjects/ignite-extensions/modules/spring-tx-ext/examples/main/java/org/apache/ignite/transactions/spring/examples/SpringTransactionExample.java,85,,"        System.out.println("">>> "" + firstEmitter + "" balance: "" + svc.getBalance(firstEmitter));"
125962,./TargetProjects/ignite-extensions/modules/spring-tx-ext/examples/main/java/org/apache/ignite/transactions/spring/examples/SpringTransactionExample.java,85,,"        System.out.println("">>> "" + firstEmitter + "" balance: "" + svc.getBalance(firstEmitter));"
125963,./TargetProjects/ignite-extensions/modules/twitter-ext/src/test/java/org/apache/ignite/stream/twitter/IgniteTwitterStreamerTest.java,214,,"        OAuthSettings oAuthSettings = new OAuthSettings(""<dummy>"", ""<dummy>"", ""<dummy>"", ""<dummy>"");"
125964,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/runners/RemoteClientTmpHelper.java,327,,"        try (BufferedWriter writer = new BufferedWriter(new FileWriter(new File(dumpsDir(), ""BuildOld"" + buildId + "".txt"")))) {"
125965,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcbot/issue/Notification.java,71,,"                sb.append(""<br>"");"
125966,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcbot/visa/TcBotTriggerAndSignOffService.java,906,,"                res.append(""\\n"");"
125967,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcbot/visa/TcBotTriggerAndSignOffService.java,982,,"            String hdrPanel = ""{panel:title="" + branchVsBaseComment + "": Possible Blockers ("" + blockers + "")|"" +"
125968,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/auth/AuthenticationFilter.java,168,,"            logger.warn(""Users session not found "" + sessId + "" enforcing login"");"
125969,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/build/GetSingleBuildTestFailuresRest.java,66,,"        @QueryParam(""serverId"") String srvCodeOrAlias,"
125970,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/build/GetSingleBuildTestFailuresRest.java,67,,"        @QueryParam(""buildId"") Integer buildId,"
125971,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/build/GetSingleBuildTestFailuresRest.java,68,,"        @Nullable @QueryParam(""checkAllLogs"") Boolean checkAllLogs) throws ServiceUnauthorizedException {"
125972,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/pr/GetPrTestFailures.java,61,,"        @Nullable @QueryParam(""serverId"") String srvCodeOrAlias,"
125973,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/pr/GetPrTestFailures.java,62,,"        @Nonnull @QueryParam(""branchForTc"") String branchForTc,"
125974,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/pr/GetPrTestFailures.java,63,,"        @Nullable @QueryParam(""baseBranchForTc"") String baseBranchForTc) {"
125975,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/pr/GetPrTestFailures.java,73,,"        @Nonnull @QueryParam(""suiteId"") String suiteId,"
125976,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/pr/GetPrTestFailures.java,75,,"        @Nonnull @QueryParam(""action"") String act,"
125977,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/pr/GetPrTestFailures.java,76,,"        @Nullable @QueryParam(""count"") Integer cnt,"
125978,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/tracked/GetTrackedBranchTestResults.java,71,,"    public UpdateInfo getTestFailsUpdates(@Nullable @QueryParam(""branch"") String branchOrNull) {"
125979,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/tracked/GetTrackedBranchTestResults.java,85,,"        @Nullable @QueryParam(""checkAllLogs"") Boolean checkAllLogs,"
125980,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/tracked/GetTrackedBranchTestResults.java,91,,"        @Nullable @QueryParam(""count"") Integer mergeCnt,"
125981,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/test/java/org/apache/ignite/ci/user/LoginAuthTest.java,55,,"            = login.doLogin(""user"", ""password"", storage, ""public"", Collections.emptySet(), tcLogin);"
125982,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/test/java/org/apache/ignite/ci/user/LoginAuthTest.java,55,,"            = login.doLogin(""user"", ""password"", storage, ""public"", Collections.emptySet(), tcLogin);"
125983,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/test/java/org/apache/ignite/ci/user/LoginAuthTest.java,55,,"            = login.doLogin(""user"", ""password"", storage, ""public"", Collections.emptySet(), tcLogin);"
125984,./TargetProjects/ignite-teamcity-bot/ignite-tc-helper-web/src/test/java/org/apache/ignite/tcignited/IgnitedTcInMemoryIntegrationTest.java,261,,"                        (buildTypeRmv.get() ? ""_v2"" : """") + "".xml"");"
125985,./TargetProjects/ignite-teamcity-bot/tcbot-common/src/main/java/org/apache/ignite/tcbot/common/util/HttpUtil.java,89,,"        con.setRequestProperty(""Authorization"", ""Basic "" + basicAuthTok);"
125986,./TargetProjects/ignite-teamcity-bot/tcbot-common/src/main/java/org/apache/ignite/tcbot/common/util/HttpUtil.java,89,,"        con.setRequestProperty(""Authorization"", ""Basic "" + basicAuthTok);"
125987,./TargetProjects/ignite-teamcity-bot/tcbot-common/src/main/java/org/apache/ignite/tcbot/common/util/HttpUtil.java,90,,"        con.setRequestProperty(""Connection"", ""Keep-Alive"");"
125988,./TargetProjects/ignite-teamcity-bot/tcbot-common/src/main/java/org/apache/ignite/tcbot/common/util/HttpUtil.java,90,,"        con.setRequestProperty(""Connection"", ""Keep-Alive"");"
125989,./TargetProjects/ignite-teamcity-bot/tcbot-common/src/main/java/org/apache/ignite/tcbot/common/util/HttpUtil.java,91,,"        con.setRequestProperty(""Keep-Alive"", ""header"");"
125990,./TargetProjects/ignite-teamcity-bot/tcbot-common/src/main/java/org/apache/ignite/tcbot/common/util/HttpUtil.java,92,,"        con.setRequestProperty(""accept-charset"", StandardCharsets.UTF_8.toString());"
125991,./TargetProjects/ignite-teamcity-bot/tcbot-common/src/main/java/org/apache/ignite/tcbot/common/util/HttpUtil.java,172,,"        con.setRequestProperty(""content-type"", ""application/xml"");"
125992,./TargetProjects/ignite-teamcity-bot/tcbot-common/src/main/java/org/apache/ignite/tcbot/common/util/HttpUtil.java,207,,"            throw new ServiceUnauthorizedException(""Service "" + con.getURL() + "" returned forbidden error."");"
125993,./TargetProjects/ignite-teamcity-bot/tcbot-persistence/src/main/java/org/apache/ignite/tcbot/persistence/scheduler/NamedTask.java,28,,"    @GuardedBy(""lock"")"
125994,./TargetProjects/ignite-teamcity-bot/tcbot-teamcity-ignited/src/main/java/org/apache/ignite/tcignited/build/FatBuildDao.java,349,,"        Long startTs = buildBinary.field(""startDate"");"
125995,./TargetProjects/ignite-teamcity-bot/tcbot-teamcity-ignited/src/main/java/org/apache/ignite/tcignited/history/HistoryCollector.java,167,,"            + "" branch "" + compactor.getStringFromId(normalizedBaseBranch) + "": "" + buildIds.size() + "" builds"" );"
125996,./TargetProjects/incubator-ambari/ambari-server/src/main/java/org/apache/ambari/eventdb/db/PostgresConnector.java,69,,"    FW_PS(""SELECT "" + WorkflowDBEntry.WORKFLOW_FIELDS + "" FROM "" + WORKFLOW_TABLE_NAME),"
125997,./TargetProjects/incubator-ambari/ambari-server/src/main/java/org/apache/ambari/eventdb/db/PostgresConnector.java,69,,"    FW_PS(""SELECT "" + WorkflowDBEntry.WORKFLOW_FIELDS + "" FROM "" + WORKFLOW_TABLE_NAME),"
125998,./TargetProjects/incubator-ambari/ambari-server/src/main/java/org/apache/ambari/eventdb/db/PostgresConnector.java,76,,"        + WorkflowFields.STARTTIME + "") as "" + SummaryFields.oldest + "", max("" + WorkflowFields.STARTTIME + "") as "" + SummaryFields.youngest + "" FROM """
125999,./TargetProjects/incubator-ambari/ambari-server/src/main/java/org/apache/ambari/eventdb/db/PostgresConnector.java,78,,"    FJD_PS(""SELECT "" + JobDBEntry.JOB_FIELDS + "" FROM "" + JOB_TABLE_NAME + "" WHERE "" + JobFields.WORKFLOWID.toString() + "" = ?""),"
