67000,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/NewConnectionWizardTest.java,1073,,"        assertThat( checkResponse.getMessage(), containsString( ""The connection failed"" ) );"
67001,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/NewEntryWizardTest.java,92,,"        wizardBot.addObjectClasses( ""organization"" );"
67002,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/NewEntryWizardTest.java,182,,"        assertTrue( browserViewBot.existsEntry( path( TARGET_DN, ""O=testCreateOrganizationEntry"" ) ) );"
67003,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/RcpAppTest.java,52,,"        assertNotNull( bot.viewByTitle( ""LDAP Browser"" ) );"
67004,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/RcpAppTest.java,54,,"        assertNotNull( bot.viewByTitle( ""Connections"" ) );"
67005,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/RcpAppTest.java,87,,"        assertTrue( showViews.existsView( ""General"", ""Console"" ) );"
67006,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/RcpAppTest.java,98,,"        assertTrue( showViews.existsView( ""Schema Editor"", ""Hierarchy"" ) );"
67007,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/RcpAppTest.java,263,,"        assertTrue( prefs.pageExists( ""Apache Directory Studio"" ) );"
67008,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/RcpAppTest.java,275,,"        assertTrue( prefs.pageExists( ""Apache Directory Studio"", ""LDAP Browser"", ""Views"" ) );"
67009,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/RcpAppTest.java,279,,"        assertTrue( prefs.pageExists( ""Apache Directory Studio"", ""LDIF Editor"" ) );"
67010,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/SchemaEditorTest.java,123,,"        assertTrue( schemaView.existsSchema( ""adsconfig"" ) );"
67011,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/SchemaEditorTest.java,128,,"        assertTrue( schemaView.existsSchema( ""system"" ) );"
67012,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/SchemaEditorTest.java,130,,"        assertTrue( schemaView.existsObjectClass( ""system"", ""top"" ) );"
67013,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/SchemaEditorTest.java,133,,"        assertTrue( schemaView.existsAttributeType( ""system"", ""objectClass"" ) );"
67014,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/SchemaEditorTest.java,211,,"        assertTrue( schemaView.existsSchema( ""schema"" ) );"
67015,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/SearchTest.java,98,,"        browserViewBot.selectEntry( ""Searches"", ""Search all persons"" );"
67016,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/SearchTest.java,166,,"        browserViewBot.waitForEntry( path( CONTEXT_DN, ""Quick Search (5)"" ) );"
67017,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/SearchTest.java,179,,"        browserViewBot.waitForEntry( path( USERS_DN, ""Quick Search (1)"" ) );"
67018,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/SearchTest.java,192,,"        browserViewBot.waitForEntry( path( USER1_DN, ""Quick Search (0)"" ) );"
67019,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/SearchTest.java,248,,"        String searchName = ""Search Alias"";"
67020,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/SearchTest.java,346,,"        dialogBot.setReturningAttributes( ""objectClass,ou,cn,uid"" );"
67021,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/SearchTest.java,352,,"        assertFalse( browserViewBot.existsEntry( ""Searches"", searchName, ""--- Top Page ---"" ) );"
67022,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/SearchTest.java,353,,"        assertTrue( browserViewBot.existsEntry( ""Searches"", searchName, ""--- Next Page ---"" ) );"
67023,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/ValueEditorTest.java,192,,"                        .rawValue( ""orclDBEnterpriseRole_82"" ).expectedRawValue( ""orclDBEnterpriseRole_82"" )"
67024,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/ValueEditorTest.java,286,,"                        .expectedDisplayValue( ""Binary Data (0 Bytes)"" ).expectedHasValue( true )"
67025,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/ValueEditorTest.java,349,,"    @MethodSource(""data"")"
67026,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/bots/BrowserViewBot.java,197,,"        ContextMenuHelper.clickContextMenu( browserBot.getTree(), ""Paste"" );"
67027,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/bots/PreferencesBot.java,37,,"        bot.tree().getTreeItem( ""Apache Directory Studio"" ).select().expand().getNode( ""Connections"" ).select()"
67028,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/bots/SearchPageWrapperBot.java,122,,"                bot.checkBox( ""Finding Base DN"" ).select();"
67029,./TargetProjects/directory-studio/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/bots/SearchPageWrapperBot.java,123,,"                bot.checkBox( ""Search"" ).select();"
67030,./TargetProjects/distributedlog/distributedlog-benchmark/src/main/java/org/apache/distributedlog/benchmark/Benchmarker.java,292,,"        checkArgument(changeRate >= 0, ""change rate must be positive"");"
67031,./TargetProjects/distributedlog/distributedlog-common/src/test/java/org/apache/distributedlog/common/config/TestConcurrentBaseConfiguration.java,32,,"        conf.setProperty(""prop1"", ""1"");"
67032,./TargetProjects/distributedlog/distributedlog-common/src/test/java/org/apache/distributedlog/common/config/TestConfigurationSubscription.java,74,,"        assertEquals(null, conf.getProperty(""prop1""));"
67033,./TargetProjects/distributedlog/distributedlog-core/src/main/java/org/apache/distributedlog/BKLogHandler.java,192,,"                            promise.completeExceptionally(new LogEmptyException(""Log """
67034,./TargetProjects/distributedlog/distributedlog-core/src/main/java/org/apache/distributedlog/BKLogHandler.java,193,,"                                    + getFullyQualifiedName() + "" has no records""));"
67035,./TargetProjects/distributedlog/distributedlog-core/src/main/java/org/apache/distributedlog/admin/DistributedLogAdmin.java,115,,"                System.out.println(""LogSegments for "" + streamName + "" : "");"
67036,./TargetProjects/distributedlog/distributedlog-core/src/main/java/org/apache/distributedlog/thrift/BKDLConfigFormat.java,924,,"        sb.append(""null"");"
67037,./TargetProjects/distributedlog/distributedlog-core/src/main/java/org/apache/distributedlog/tools/DistributedLogTool.java,422,,"                                System.out.println(""Thread "" + tid + "" is done."");"
67038,./TargetProjects/distributedlog/distributedlog-core/src/main/java/org/apache/distributedlog/tools/DistributedLogTool.java,452,,"            options.addOption(""x"", ""hex"", false, ""Print metadata in hex format"");"
67039,./TargetProjects/distributedlog/distributedlog-core/src/main/java/org/apache/distributedlog/tools/DistributedLogTool.java,2020,,"                            System.out.println(""\t-------------------------------"");"
67040,./TargetProjects/distributedlog/distributedlog-core/src/main/java/org/apache/distributedlog/tools/DistributedLogTool.java,2386,,"            options.addOption(""dlsn"", true, ""Truncate all records older than this dlsn"");"
67041,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestAppendOnlyStreamReader.java,47,,"        writer.write(DLMTestUtil.repeatString(""abc"", 5).getBytes());"
67042,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestAppendOnlyStreamWriter.java,55,,"        byte[] byteStream = DLMTestUtil.repeatString(""abc"", 51).getBytes();"
67043,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestAsyncReaderWriter.java,749,,"        assertFalse(""All writes should succeed"", writeErrors.get());"
67044,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestAsyncReaderWriter.java,1686,,"            fail(""Should have thrown"");"
67045,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKDistributedLogNamespace.java,70,,"                .setEnableLedgerAllocatorPool(true).setLedgerAllocatorPoolName(""test"");"
67046,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKDistributedLogNamespace.java,125,,"        String streamName = ""test-stream"";"
67047,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKDistributedLogNamespace.java,166,,"        DistributedLogManager dlm = namespace.openLog(""test1"");"
67048,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKDistributedLogNamespace.java,292,,"        initDlogMeta(namespace, ""test-un"", ""test-stream"");"
67049,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKDistributedLogNamespace.java,439,,"            fail(""Should throw exception after namespace is closed"");"
67050,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKLogSegmentWriter.java,227,,"        ZKDistributedLock lock = createLock(""/test/lock-"" + runtime.getMethodName(), zkc, true);"
67051,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKLogSegmentWriter.java,239,,"        assertEquals(""Last tx id should be "" + (numRecords - 1),"
67052,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKLogSegmentWriter.java,241,,"        assertEquals(""Last acked tx id should be -1"","
67053,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKLogSegmentWriter.java,243,,"        assertEquals(""Last DLSN should be "" + DLSN.InvalidDLSN,"
67054,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKLogSegmentWriter.java,245,,"        assertEquals(""Position should be "" + numRecords,"
67055,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKLogSegmentWriter.java,251,,"        assertEquals(""Last tx id should still be "" + (numRecords - 1),"
67056,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKLogSegmentWriter.java,255,,"        assertEquals(""Position should still be "" + numRecords,"
67057,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKLogSegmentWriter.java,262,,"            assertEquals(""Incorrent ledger sequence number"","
67058,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKLogSegmentWriter.java,264,,"            assertEquals(""Incorrent entry id"","
67059,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKLogSegmentWriter.java,266,,"            assertEquals(""Inconsistent slot id"","
67060,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKLogSegmentWriter.java,273,,"        assertTrue(""Ledger "" + lh.getId() + "" should be closed"", readLh.isClosed());"
67061,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKLogSegmentWriter.java,317,,"        assertEquals(""Last DLSN should still be "" + DLSN.InvalidDLSN,"
67062,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKLogSegmentWriter.java,325,,"                fail(""Should be aborted record "" + i + "" with transmit exception"");"
67063,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKLogSegmentWriter.java,325,,"                fail(""Should be aborted record "" + i + "" with transmit exception"");"
67064,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestBKLogSegmentWriter.java,327,,"                assertTrue(""Record "" + i + "" should be aborted because of ledger fenced"","
67065,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestEntry.java,55,,"        assertEquals(""zero bytes"", HEADER_LENGTH, writer.getNumBytes());"
67066,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestEntry.java,56,,"        assertEquals(""zero records"", 0, writer.getNumRecords());"
67067,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestEntry.java,116,,"            LogRecord record = new LogRecord(i, (""record-"" + i).getBytes(UTF_8));"
67068,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestEntry.java,121,,"            assertEquals((i + 1) + "" records"", (i + 1), writer.getNumRecords());"
67069,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestLogSegmentsZK.java,86,,"                .setLedgerAllocatorPoolName(""test"");"
67070,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestWriteLimiter.java,50,,"        WriteLimiter limiter = new WriteLimiter(""test"", streamLimiter, globalLimiter);"
67071,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestZooKeeperClient.java,105,,"        ZooKeeperClient zkcAuth = buildAuthdClient(""test"");"
67072,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestZooKeeperClient.java,106,,"        zkcAuth.get().create(""/test"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);"
67073,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/TestZooKeeperClient.java,107,,"        zkcAuth.get().create(""/test/key1"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);"
67074,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/bk/TestLedgerAllocator.java,193,,"        long eid = lh.addEntry(""hello world"".getBytes());"
67075,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/feature/TestDynamicConfigurationFeatureProvider.java,51,,"        writer.setProperty(""feature_1"", ""10000"");"
67076,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/feature/TestDynamicConfigurationFeatureProvider.java,52,,"        writer.setProperty(""feature_2"", ""5000"");"
67077,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/feature/TestDynamicConfigurationFeatureProvider.java,69,,"        Feature feature3 = provider.getFeature(""feature_3"");"
67078,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/feature/TestDynamicConfigurationFeatureProvider.java,92,,"        overlayWriter.setProperty(""feature_2"", ""6000"");"
67079,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/feature/TestDynamicConfigurationFeatureProvider.java,93,,"        overlayWriter.setProperty(""feature_4"", ""6000"");"
67080,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/TestZKLogSegmentMetadataStore.java,145,,"        assertNotNull(""LogSegment "" + segment + "" should be created"","
67081,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/TestZKLogSegmentMetadataStore.java,145,,"        assertNotNull(""LogSegment "" + segment + "" should be created"","
67082,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/TestZKLogSegmentMetadataStore.java,188,,"            assertTrue(""Should throw NoNodeException if log segment doesn't exist"","
67083,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/TestZKLogSegmentMetadataStore.java,374,,"                logger.info(""Received segments : {}"", segments);"
67084,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/TestZKLogSegmentMetadataStore.java,385,,"        assertTrue(""Should contain listener"", lsmStore.listeners.containsKey(rootPath));"
67085,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/TestZKLogSegmentMetadataStore.java,390,,"        assertEquals(""Should receive one segment list update"","
67086,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/TestZKLogSegmentMetadataStore.java,394,,"        assertEquals(""List of segments should be same"","
67087,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/TestZKLogSegmentMetadataStore.java,416,,"        assertEquals(""List of segments should be updated"","
67088,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/TestZKNamespaceWatcher.java,122,,"        expectedLogs.add(""test1"");"
67089,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/federated/TestFederatedZKLogMetadataStore.java,250,,"            fail(""should throw exception when duplicated log found"");"
67090,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/logsegment/TestBKLogSegmentEntryReader.java,160,,"        assertEquals(segments.size() + "" log segments found, expected to be only one"","
67091,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/metadata/TestZKLogStreamMetadataStore.java,302,,"        String logIdentifier = ""<default>"";"
67092,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/metadata/TestZKLogStreamMetadataStoreUtils.java,42,,"    @SuppressWarnings(""unchecked"")"
67093,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/metadata/TestZKLogStreamMetadataStoreUtils.java,47,,"        String logName = ""test-log"";"
67094,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/metadata/TestZKLogStreamMetadataStoreUtils.java,48,,"        String logIdentifier = ""<default>"";"
67095,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/metadata/TestZKLogStreamMetadataStoreUtils.java,59,,"        String rootPath = ""/test-missing-version"";"
67096,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/metadata/TestZkMetadataResolver.java,51,,"    private static final BKDLConfig bkdlConfig = new BKDLConfig(""127.0.0.1:7000"", ""ledgers"");"
67097,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/impl/metadata/TestZkMetadataResolver.java,51,,"    private static final BKDLConfig bkdlConfig = new BKDLConfig(""127.0.0.1:7000"", ""ledgers"");"
67098,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/lock/TestDistributedLock.java,538,,"                fail(""Should fail check write lock since lock is already held by other people"");"
67099,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/lock/TestZKSessionLock.java,665,,"                    logger.error(""Failed on locking lock1 : "", e);"
67100,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/lock/TestZKSessionLock.java,668,,"        }, ""lock1-thread"");"
67101,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/metadata/TestDLMetadata.java,43,,"            new BKDLConfig(""127.0.0.1:7000"", ""127.0.0.1:7000"","
67102,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/metadata/TestDLMetadata.java,44,,"                           ""127.0.0.1:7000"", ""127.0.0.1:7000"", ""ledgers"");"
67103,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/metadata/TestDLMetadata.java,46,,"            new BKDLConfig(""127.0.0.1:7001"", ""127.0.0.1:7002"","
67104,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/metadata/TestDLMetadata.java,47,,"                           ""127.0.0.1:7003"", ""127.0.0.1:7004"", ""ledgers2"");"
67105,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/metadata/TestDLMetadata.java,47,,"                           ""127.0.0.1:7003"", ""127.0.0.1:7004"", ""ledgers2"");"
67106,./TargetProjects/distributedlog/distributedlog-core/src/test/java/org/apache/distributedlog/metadata/TestDLMetadata.java,115,,"        URI uri = createURI(""/metadata"");"
67107,./TargetProjects/distributedlog/distributedlog-io/dlfs/src/test/java/org/apache/distributedlog/fs/TestDLFileSystem.java,52,,"        Path path = new Path(""/path/to/"" + runtime.getMethodName());"
67108,./TargetProjects/distributedlog/distributedlog-protocol/src/test/java/org/apache/distributedlog/TestLogRecordSet.java,49,,"        assertEquals(""zero user bytes"", HEADER_LEN, writer.getNumBytes());"
67109,./TargetProjects/distributedlog/distributedlog-protocol/src/test/java/org/apache/distributedlog/TestLogRecordSet.java,50,,"        assertEquals(""zero records"", 0, writer.getNumRecords());"
67110,./TargetProjects/distributedlog/distributedlog-proxy-client/src/test/java/org/apache/distributedlog/client/TestDistributedLogMultiStreamWriter.java,72,,"                .streams(Lists.newArrayList(""stream1"", ""stream2""))"
67111,./TargetProjects/distributedlog/distributedlog-proxy-client/src/test/java/org/apache/distributedlog/client/TestDistributedLogMultiStreamWriter.java,72,,"                .streams(Lists.newArrayList(""stream1"", ""stream2""))"
67112,./TargetProjects/distributedlog/distributedlog-proxy-client/src/test/java/org/apache/distributedlog/client/ownership/TestOwnershipCache.java,83,,"        assertEquals(""There should be "" + (numProxies * numStreamsPerProxy) + "" entries in cache"","
67113,./TargetProjects/distributedlog/distributedlog-proxy-client/src/test/java/org/apache/distributedlog/client/ownership/TestOwnershipCache.java,83,,"        assertEquals(""There should be "" + (numProxies * numStreamsPerProxy) + "" entries in cache"","
67114,./TargetProjects/distributedlog/distributedlog-proxy-client/src/test/java/org/apache/distributedlog/client/ownership/TestOwnershipCache.java,86,,"        assertEquals(""There should be "" + numProxies + "" proxies cached"","
67115,./TargetProjects/distributedlog/distributedlog-proxy-client/src/test/java/org/apache/distributedlog/client/proxy/TestProxyClientManager.java,116,,"        assertEquals(""There should be no clients in the manager"","
67116,./TargetProjects/distributedlog/distributedlog-proxy-client/src/test/java/org/apache/distributedlog/client/proxy/TestProxyClientManager.java,119,,"        assertEquals(""Create client should build the proxy client"","
67117,./TargetProjects/distributedlog/distributedlog-proxy-client/src/test/java/org/apache/distributedlog/client/routing/TestConsistentHashRoutingService.java,62,,"        InetSocketAddress inetAddress = new InetSocketAddress(""127.0.0.1"", 3181);"
67118,./TargetProjects/distributedlog/distributedlog-proxy-client/src/test/java/org/apache/distributedlog/client/routing/TestRegionsRoutingService.java,52,,"            SocketAddress address = new InetSocketAddress(""127.0.0.1"", 3181 + i);"
67119,./TargetProjects/distributedlog/distributedlog-proxy-client/src/test/java/org/apache/distributedlog/client/routing/TestRegionsRoutingService.java,110,,"                regionsRoutingService.getHost(""any"", routingContext));"
67120,./TargetProjects/distributedlog/distributedlog-proxy-server/src/main/java/org/apache/distributedlog/service/MonitorService.java,257,,"        this.monitorReceiver = statsReceiver.scope(""monitor"");"
67121,./TargetProjects/distributedlog/distributedlog-proxy-server/src/main/java/org/apache/distributedlog/service/stream/BulkWriteOp.java,98,,"        super(stream, requestStat(statsLogger, ""bulkWrite""), checksum, checksumDisabledFeature);"
67122,./TargetProjects/distributedlog/distributedlog-proxy-server/src/main/java/org/apache/distributedlog/service/stream/HeartbeatOp.java,43,,"    static final byte[] HEARTBEAT_DATA = ""heartbeat"".getBytes(UTF_8);"
67123,./TargetProjects/distributedlog/distributedlog-proxy-server/src/main/java/org/apache/distributedlog/service/stream/StreamImpl.java,402,,"            op.fail(new StreamUnavailableException(""Stream "" + name + "" is closed.""));"
67124,./TargetProjects/distributedlog/distributedlog-proxy-server/src/main/java/org/apache/distributedlog/service/stream/StreamImpl.java,402,,"            op.fail(new StreamUnavailableException(""Stream "" + name + "" is closed.""));"
67125,./TargetProjects/distributedlog/distributedlog-proxy-server/src/main/java/org/apache/distributedlog/service/stream/WriteOp.java,82,,"        super(stream, requestStat(statsLogger, ""write""), checksum, checksumDisabledFeature);"
67126,./TargetProjects/distributedlog/distributedlog-proxy-server/src/main/java/org/apache/distributedlog/service/tools/ProxyTool.java,82,,"                        .name(""proxy_tool"")"
67127,./TargetProjects/distributedlog/distributedlog-proxy-server/src/test/java/org/apache/distributedlog/service/TestDistributedLogServerBase.java,101,,"            logger.debug(""Write entry {} to stream {}."", i, name);"
67128,./TargetProjects/distributedlog/distributedlog-proxy-server/src/test/java/org/apache/distributedlog/service/TestDistributedLogServerBase.java,210,,"        String name = String.format(""dlserver-bulk-write-%s"", ""null"");"
67129,./TargetProjects/distributedlog/distributedlog-proxy-server/src/test/java/org/apache/distributedlog/service/TestDistributedLogService.java,338,,"        assertEquals(""Stream "" + streamName + "" is set to "" + StreamStatus.CLOSED,"
67130,./TargetProjects/distributedlog/distributedlog-proxy-server/src/test/java/org/apache/distributedlog/service/TestDistributedLogService.java,363,,"        assertTrue(""Stream "" + streamName + "" should be set to "" + StreamStatus.CLOSING,"
67131,./TargetProjects/distributedlog/distributedlog-proxy-server/src/test/java/org/apache/distributedlog/service/TestDistributedLogService.java,398,,"        assertEquals(""Op should fail with "" + StatusCode.STREAM_UNAVAILABLE + "" if it is closing"","
67132,./TargetProjects/distributedlog/distributedlog-proxy-server/src/test/java/org/apache/distributedlog/service/TestDistributedLogService.java,516,,"        Future<WriteResponse> result = localService.writeWithContext(""test"", getTestDataBuffer(), ctx);"
67133,./TargetProjects/distributedlog/distributedlog-proxy-server/src/test/java/org/apache/distributedlog/service/TestDistributedLogService.java,699,,"        assertEquals(""There should be "" + numStreams + "" streams in cache"","
67134,./TargetProjects/distributedlog/distributedlog-proxy-server/src/test/java/org/apache/distributedlog/service/balancer/TestBalancerUtils.java,40,,"        loadDistribution.put(""node1"", 10);"
67135,./TargetProjects/distributedlog/distributedlog-proxy-server/src/test/java/org/apache/distributedlog/service/balancer/TestCountBasedStreamChooser.java,56,,"                SocketAddress address = new InetSocketAddress(""127.0.0.1"", port + j);"
67136,./TargetProjects/distributedlog/distributedlog-proxy-server/src/test/java/org/apache/distributedlog/service/balancer/TestSimpleBalancer.java,56,,"        targetClient = createDistributedLogClient(""target"", Optional.<String>absent());"
67137,./TargetProjects/distributedlog/distributedlog-proxy-server/src/test/java/org/apache/distributedlog/service/config/TestStreamConfigProvider.java,92,,"        Optional<DynamicDistributedLogConfiguration> config = provider.getDynamicStreamConfig(""stream1"");"
67138,./TargetProjects/distributedlog/distributedlog-proxy-server/src/test/java/org/apache/distributedlog/service/placement/TestServerLoad.java,34,,"            serverLoad.addStream(new StreamLoad(""stream-"" + i, i));"
67139,./TargetProjects/distributedlog/distributedlog-proxy-server/src/test/java/org/apache/distributedlog/service/stream/TestStreamManager.java,54,,"        when(mockStream.getStreamName()).thenReturn(""stream1"");"
67140,./TargetProjects/distributedlog/distributedlog-proxy-server/src/test/java/org/apache/distributedlog/service/streamset/TestPartitionMap.java,34,,"            assertTrue(map.addPartition(new Partition(""test"", i), -1));"
67141,./TargetProjects/drill/common/src/main/java/org/apache/drill/common/types/Types.java,186,,"      return ""ARRAY"";"
67142,./TargetProjects/drill/common/src/test/java/org/apache/drill/common/util/TestGuavaPatcher.java,92,,"    invokeMethod(Preconditions.class, ""checkArgument"","
67143,./TargetProjects/drill/common/src/test/java/org/apache/drill/common/util/TestGuavaPatcher.java,94,,"        ""Error Message %s"", 1);"
67144,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,65,,"      .baselineColumns(""id"", ""first_name"", ""last_name"", ""email"", ""gender"", ""birthdate"", ""balance"", ""order_count"", ""average_order"")"
67145,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,65,,"      .baselineColumns(""id"", ""first_name"", ""last_name"", ""email"", ""gender"", ""birthdate"", ""balance"", ""order_count"", ""average_order"")"
67146,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,66,,"      .baselineValues(1.0, ""Cornelia"", ""Matej"", ""cmatej0@mtv.com"", ""Female"", ""10/31/1974"", 735.29, 22.0, 33.42227272727273)"
67147,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,66,,"      .baselineValues(1.0, ""Cornelia"", ""Matej"", ""cmatej0@mtv.com"", ""Female"", ""10/31/1974"", 735.29, 22.0, 33.42227272727273)"
67148,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,67,,"      .baselineValues(2.0, ""Nydia"", ""Heintsch"", ""nheintsch1@godaddy.com"", ""Female"", ""12/10/1966"", 784.14, 22.0, 35.64272727272727)"
67149,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,68,,"      .baselineValues(3.0, ""Waiter"", ""Sherel"", ""wsherel2@utexas.edu"", ""Male"", ""3/12/1961"", 172.36, 17.0, 10.138823529411766)"
67150,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,69,,"      .baselineValues(4.0, ""Cicely"", ""Lyver"", ""clyver3@mysql.com"", ""Female"", ""5/4/2000"", 987.39, 6.0, 164.565)"
67151,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,70,,"      .baselineValues(5.0, ""Dorie"", ""Doe"", ""ddoe4@spotify.com"", ""Female"", ""12/28/1955"", 852.48, 17.0, 50.14588235294118)"
67152,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,166,,"      .addNullable(""event_date"", TypeProtos.MinorType.VARCHAR)"
67153,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,167,,"      .addNullable(""ip_address"", TypeProtos.MinorType.VARCHAR)"
67154,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,168,,"      .addNullable(""user_agent"", TypeProtos.MinorType.VARCHAR)"
67155,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,172,,"      .addRow(""2019-02-17 11:21:45"", ""166.11.144.176"", ""Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"")"
67156,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,172,,"      .addRow(""2019-02-17 11:21:45"", ""166.11.144.176"", ""Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"")"
67157,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,172,,"      .addRow(""2019-02-17 11:21:45"", ""166.11.144.176"", ""Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"")"
67158,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,173,,"        .addRow(""2019-03-03 04:10:31"", ""203.221.176.215"", ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.215 Safari/535.1"")"
67159,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,173,,"        .addRow(""2019-03-03 04:10:31"", ""203.221.176.215"", ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.215 Safari/535.1"")"
67160,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,173,,"        .addRow(""2019-03-03 04:10:31"", ""203.221.176.215"", ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.215 Safari/535.1"")"
67161,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,174,,"        .addRow(""2018-04-05 08:17:17"", ""11.134.119.132"", ""Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.813.0 Safari/535.1"")"
67162,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,174,,"        .addRow(""2018-04-05 08:17:17"", ""11.134.119.132"", ""Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.813.0 Safari/535.1"")"
67163,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,174,,"        .addRow(""2018-04-05 08:17:17"", ""11.134.119.132"", ""Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.813.0 Safari/535.1"")"
67164,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,175,,"        .addRow(""2018-12-05 05:36:10"", ""68.145.168.82"", ""Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.8 (KHTML, like Gecko) Chrome/17.0.940.0 Safari/535.8"")"
67165,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,175,,"        .addRow(""2018-12-05 05:36:10"", ""68.145.168.82"", ""Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.8 (KHTML, like Gecko) Chrome/17.0.940.0 Safari/535.8"")"
67166,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,175,,"        .addRow(""2018-12-05 05:36:10"", ""68.145.168.82"", ""Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.8 (KHTML, like Gecko) Chrome/17.0.940.0 Safari/535.8"")"
67167,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,176,,"        .addRow(""2018-04-01 16:25:18"", ""21.12.166.184"", ""Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; it-it) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"")"
67168,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,176,,"        .addRow(""2018-04-01 16:25:18"", ""21.12.166.184"", ""Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; it-it) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"")"
67169,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,176,,"        .addRow(""2018-04-01 16:25:18"", ""21.12.166.184"", ""Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; it-it) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"")"
67170,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,505,,"      .addRow(601.0, 18.18004, -66.75218, ""Adjuntas"", ""PR"", ""Puerto Rico"", ""TRUE"", 0.0, 17242.0, 111.4, 72001.0, ""Adjuntas"", ""{'72001':99.43,'72141':0.57}"", ""Adjuntas|Utuado"","
67171,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,505,,"      .addRow(601.0, 18.18004, -66.75218, ""Adjuntas"", ""PR"", ""Puerto Rico"", ""TRUE"", 0.0, 17242.0, 111.4, 72001.0, ""Adjuntas"", ""{'72001':99.43,'72141':0.57}"", ""Adjuntas|Utuado"","
67172,./TargetProjects/drill/contrib/format-excel/src/test/java/org/apache/drill/exec/store/excel/TestExcelFormat.java,506,,"      ""72001|72141"", ""FALSE"", ""FALSE"", ""America/Puerto_Rico"")"
67173,./TargetProjects/drill/contrib/format-hdf5/src/test/java/org/apache/drill/exec/store/hdf5/TestHDF5Format.java,63,,"      .add(""path"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67174,./TargetProjects/drill/contrib/format-hdf5/src/test/java/org/apache/drill/exec/store/hdf5/TestHDF5Format.java,64,,"      .add(""data_type"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67175,./TargetProjects/drill/contrib/format-hdf5/src/test/java/org/apache/drill/exec/store/hdf5/TestHDF5Format.java,65,,"      .add(""file_name"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67176,./TargetProjects/drill/contrib/format-hdf5/src/test/java/org/apache/drill/exec/store/hdf5/TestHDF5Format.java,69,,"      .addRow(""/dset"", ""DATASET"", ""dset.h5"")"
67177,./TargetProjects/drill/contrib/format-hdf5/src/test/java/org/apache/drill/exec/store/hdf5/TestHDF5Format.java,69,,"      .addRow(""/dset"", ""DATASET"", ""dset.h5"")"
67178,./TargetProjects/drill/contrib/format-hdf5/src/test/java/org/apache/drill/exec/store/hdf5/TestHDF5Format.java,120,,"            ""(\n"" +"
67179,./TargetProjects/drill/contrib/format-hdf5/src/test/java/org/apache/drill/exec/store/hdf5/TestHDF5Format.java,126,,"      .add(""col1"", MinorType.FLOAT8, DataMode.OPTIONAL)"
67180,./TargetProjects/drill/contrib/format-hdf5/src/test/java/org/apache/drill/exec/store/hdf5/TestHDF5Format.java,127,,"      .add(""col2"", MinorType.FLOAT8, DataMode.OPTIONAL)"
67181,./TargetProjects/drill/contrib/format-hdf5/src/test/java/org/apache/drill/exec/store/hdf5/TestHDF5Format.java,159,,"            ""FROM dfs.`hdf5/scalar.h5`\n"" +"
67182,./TargetProjects/drill/contrib/format-hdf5/src/test/java/org/apache/drill/exec/store/hdf5/TestHDF5Format.java,385,,"      .addRow(""abcdefghij"")"
67183,./TargetProjects/drill/contrib/format-hdf5/src/test/java/org/apache/drill/exec/store/hdf5/TestHDF5Format.java,518,,"      .add(""int_col_0"", TypeProtos.MinorType.INT, TypeProtos.DataMode.OPTIONAL)"
67184,./TargetProjects/drill/contrib/format-hdf5/src/test/java/org/apache/drill/exec/store/hdf5/TestHDF5Format.java,519,,"      .add(""int_col_1"", TypeProtos.MinorType.INT, TypeProtos.DataMode.OPTIONAL)"
67185,./TargetProjects/drill/contrib/format-hdf5/src/test/java/org/apache/drill/exec/store/hdf5/TestHDF5Format.java,657,,"      .add(""field_1"", TypeProtos.MinorType.INT, TypeProtos.DataMode.REQUIRED)"
67186,./TargetProjects/drill/contrib/format-hdf5/src/test/java/org/apache/drill/exec/store/hdf5/TestHDF5Format.java,698,,"     .add(""field_3"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.REQUIRED)"
67187,./TargetProjects/drill/contrib/format-httpd/src/main/java/org/apache/drill/exec/store/httpd/HttpdLogRecord.java,86,,"  @SuppressWarnings(""unused"")"
67188,./TargetProjects/drill/contrib/format-httpd/src/test/java/org/apache/drill/exec/store/httpd/TestHTTPDLogReader.java,128,,"      .addRow(""http://howto.basjes.nl/join_form"")"
67189,./TargetProjects/drill/contrib/format-httpd/src/test/java/org/apache/drill/exec/store/httpd/TestHTTPDLogReader.java,175,,"      .addRow(""http://howto.basjes.nl/"")"
67190,./TargetProjects/drill/contrib/format-httpd/src/test/java/org/apache/drill/exec/store/httpd/TestHTTPDLogReader.java,231,,"      .addRow(null, LocalTime.parse(""04:11:25""), null)"
67191,./TargetProjects/drill/contrib/format-httpd/src/test/java/org/apache/drill/exec/store/httpd/TestHTTPDLogReader.java,406,,"                    ""HTTP/1.1"", ""1.1"", ""/linux/doing-pxe-without-dhcp-control"", null, ""/linux/doing-pxe-without-dhcp-control"", null, null, null, null, null,"
67192,./TargetProjects/drill/contrib/format-httpd/src/test/java/org/apache/drill/exec/store/httpd/TestHTTPDLogReader.java,408,,"                    1445742685000L, LocalDate.parse(""2015-10-25""), LocalDate.parse(""2015-10-25""), 25, 25, 1445742685000L, 4, 3,"
67193,./TargetProjects/drill/contrib/format-httpd/src/test/java/org/apache/drill/exec/store/httpd/TestHTTPDLogReader.java,410,,"                    0, 0, 0, 0, 11, 11, 10, 10, ""October"", ""October"", 0, 0, 25, 25, LocalTime.parse(""04:11:25""), LocalTime.parse(""03:11:25""), ""+01:00"", 43, 43, 2015, 2015, 2015, 2015,"
67194,./TargetProjects/drill/contrib/format-httpd/src/test/java/org/apache/drill/exec/store/httpd/TestHTTPDLogReaderUserAgent.java,84,,"            .addNullable(""request_receive_time_epoch"",                      MinorType.TIMESTAMP)"
67195,./TargetProjects/drill/contrib/format-httpd/src/test/java/org/apache/drill/exec/store/httpd/TestHTTPDLogReaderUserAgent.java,85,,"            .addNullable(""request_user-agent"",                              MinorType.VARCHAR)"
67196,./TargetProjects/drill/contrib/format-httpd/src/test/java/org/apache/drill/exec/store/httpd/TestHTTPDLogReaderUserAgent.java,86,,"            .addNullable(""request_user-agent_device__name"",                 MinorType.VARCHAR)"
67197,./TargetProjects/drill/contrib/format-httpd/src/test/java/org/apache/drill/exec/store/httpd/TestHTTPDLogReaderUserAgent.java,87,,"            .addNullable(""request_user-agent_agent__name__version__major"",  MinorType.VARCHAR)"
67198,./TargetProjects/drill/contrib/format-httpd/src/test/java/org/apache/drill/exec/store/httpd/TestHTTPDLogReaderUserAgent.java,92,,"            .addRow(1_356_994_181_000L, ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36"", ""Apple Macintosh"", ""Chrome 66"")"
67199,./TargetProjects/drill/contrib/format-image/src/main/java/org/apache/drill/exec/store/image/GenericMetadataReader.java,149,,"              directory.setColorMode(""Indexed"");"
67200,./TargetProjects/drill/contrib/format-image/src/main/java/org/apache/drill/exec/store/image/GenericMetadataReader.java,151,,"              directory.setColorMode(""Grayscale"");"
67201,./TargetProjects/drill/contrib/format-image/src/test/java/org/apache/drill/exec/store/image/TestImageRecordReader.java,56,,"    cluster.defineFormat(""dfs"", ""image"", new ImageFormatConfig(Arrays.asList(""bmp""), false, false, null));"
67202,./TargetProjects/drill/contrib/format-image/src/test/java/org/apache/drill/exec/store/image/TestImageRecordReader.java,56,,"    cluster.defineFormat(""dfs"", ""image"", new ImageFormatConfig(Arrays.asList(""bmp""), false, false, null));"
67203,./TargetProjects/drill/contrib/format-image/src/test/java/org/apache/drill/exec/store/image/TestImageRecordReader.java,67,,"    cluster.defineFormat(""dfs"", ""image"", new ImageFormatConfig(Arrays.asList(""jpg""), false, false, null));"
67204,./TargetProjects/drill/contrib/format-image/src/test/java/org/apache/drill/exec/store/image/TestImageRecordReader.java,118,,"          mapValue(""Ian Britton"", ""Communications"", ""Photographer"", ""Ian Britton"", ""FreeFoto.com"", "" "", "" "", ""Ubited Kingdom"", ""BUS"", ""2002-06-20"", ""5"", strArray(""Communications"")),"
67205,./TargetProjects/drill/contrib/format-ltsv/src/test/java/org/apache/drill/exec/store/ltsv/TestLTSVRecordReader.java,45,,"      .baselineValues(""xxx.xxx.xxx.xxx"", ""-"", ""GET /v1/yyy HTTP/1.1"", ""200"", ""412"", ""-"", ""Java/1.8.0_201"", ""3.580"", ""3.580"", ""api.example.com"")"
67206,./TargetProjects/drill/contrib/format-maprdb/src/main/java/org/apache/drill/exec/store/mapr/db/MapRDBTableCache.java,70,,"              key.path == null ? ""null"" : key.path, table == null ? ""null"" : table,"
67207,./TargetProjects/drill/contrib/format-maprdb/src/main/java/org/apache/drill/exec/store/mapr/db/json/JsonTableGroupScan.java,228,,"          scanSpec.getCondition() == null ? ""null"" : scanSpec.getCondition(), scanRangeSizeMB,"
67208,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/MaprDBTestsSuite.java,111,,"              ""    },"" +"
67209,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexHintPlanTest.java,45,,"                new String[]{""RowKeyJoin""}"
67210,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexHintPlanTest.java,68,,"                "" where t.address.state = 'pc'"";"
67211,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexHintPlanTest.java,79,,"                new String[] {"".*JsonTableGroupScan.*tableName=.*index_test_primary.*indexName=(i_state_city|i_state_age_phone)""},"
67212,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,111,,"            ""i_lic"", ""driverlicense"", ""reverseid"","
67213,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,148,,"        "" where t.id.ssn = '100007423'"";"
67214,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,151,,"        new String[] {"".*JsonTableGroupScan.*tableName=.*index_test_primary.*indexName=i_ssn""},"
67215,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,152,,"        new String[]{""RowKeyJoin""}"
67216,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,158,,"        .baselineColumns(""phone"").baselineValues(""6500005471"")"
67217,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,165,,"    String query = ""SELECT t.`id`.`ssn` AS `ssn` FROM hbase.`index_test_primary` as t "" +"
67218,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,177,,"        .baselineColumns(""ssn"").baselineValues(""100007423"")"
67219,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,177,,"        .baselineColumns(""ssn"").baselineValues(""100007423"")"
67220,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,190,,"        new String[]{""RowKeyJoin"", ""indexName=""}"
67221,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,205,,"    String query = ""SELECT t.`name`.`fname` AS `fname` FROM hbase.`index_test_primary` as t "" +"
67222,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,217,,"        .baselineColumns(""fname"").baselineValues(""KfFzK"")"
67223,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,224,,"    String query = ""SELECT t.`name`.`lname` AS `lname` FROM hbase.`index_test_primary` as t "" +"
67224,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,270,,"        .baselineColumns(""tid"").baselineValues(""1012"")"
67225,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,336,,"              .baselineColumns(""lname"").baselineValues(""UZwNk"")"
67226,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,372,,"              .baselineColumns(""ssn"").baselineValues(""100008861"")"
67227,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,581,,"        new String[]{""Sort""}"
67228,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,587,,"        .baselineColumns(""phone"").baselineValues(""6500008069"")"
67229,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,588,,"        .baselineColumns(""phone"").baselineValues(""6500001411"")"
67230,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,589,,"        .baselineColumns(""phone"").baselineValues(""6500001595"")"
67231,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,633,,"    String query = ""SELECT t.contact.phone as phone FROM hbase.`index_test_primary` as t "" +"
67232,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,643,,"        new String[] {""RowKeyJoin(.*[\n\r])+.*RestrictedJsonTableGroupScan(.*[\n\r])+.*JsonTableGroupScan.*indexName=""},"
67233,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,739,,"        new String[] {"".*JsonTableGroupScan.*tableName=.*index_test_primary.*indexName="","
67234,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,778,,"        new String[] {"".*JsonTableGroupScan.*tableName=.*index_test_primary.*indexName=i_state_age_phone""},"
67235,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,837,,"    String query = ""SELECT t._id as tid, t.contact.phone, CAST(t.personal.age as VARCHAR) as age FROM hbase.`index_test_primary` as t "" +"
67236,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,1186,,"        new String[]{""Sort"", ""TopN"", ""RowKeyJoin""}"
67237,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,1244,,"        new String[] {""(Sort|TopN)""},"
67238,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,1253,,"        .baselineColumns(""firstlogin"", ""ssn"").baselineValues(date, ""100005592"")"
67239,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,1265,,"        new String[] {""indexName=i_lic""},"
67240,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,1271,,"        .baselineColumns(""rid"", ""lic"").baselineValues(""4539"", 100000000L)"
67241,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,1271,,"        .baselineColumns(""rid"", ""lic"").baselineValues(""4539"", 100000000L)"
67242,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,1359,,"              new String[]{""indexName=i_lic"", ""StreamAgg""},"
67243,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/IndexPlanTest.java,1720,,"    String query = ""select t1.id.ssn as ssn from hbase.`index_test_primary` t1, hbase.`index_test_primary` t2 "" +"
67244,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/StatisticsTest.java,47,,"    query = ""select * from hbase.`index_test_primary` t """
67245,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/index/StatisticsTest.java,51,,"        new String[] {"".*JsonTableGroupScan.*tableName=.*index_test_primary.*rows=10000""}"
67246,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/json/TestSimpleJson.java,84,,"    final String sql = format(""SELECT\n"""
67247,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/json/TestSimpleJson.java,85,,"        + ""  *\n"""
67248,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/json/TestSimpleJson.java,86,,"        + ""FROM\n"""
67249,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/json/TestSimpleJson.java,124,,"        + ""  _id, name, categories, full_address\n"""
67250,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/json/TestSimpleJson.java,127,,"        + ""WHERE\n"""
67251,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/json/TestSimpleJson.java,143,,"        + ""  %s.`%s` business\n"""
67252,./TargetProjects/drill/contrib/format-maprdb/src/test/java/com/mapr/drill/maprdb/tests/json/TestSimpleJson.java,289,,"        + ""  %s.`%s` b\n"""
67253,./TargetProjects/drill/contrib/format-pcapng/src/main/java/org/apache/drill/exec/store/pcap/decoder/Packet.java,64,,"  @SuppressWarnings(""WeakerAccess"")"
67254,./TargetProjects/drill/contrib/format-pcapng/src/test/java/org/apache/drill/exec/store/pcapng/TestPcapngRecordReader.java,69,,"        .addNullable(""type"", MinorType.VARCHAR)"
67255,./TargetProjects/drill/contrib/format-pcapng/src/test/java/org/apache/drill/exec/store/pcapng/TestPcapngRecordReader.java,70,,"        .add(""packet_length"", MinorType.INT)"
67256,./TargetProjects/drill/contrib/format-pcapng/src/test/java/org/apache/drill/exec/store/pcapng/TestPcapngRecordReader.java,71,,"        .add(""timestamp"", MinorType.TIMESTAMP)"
67257,./TargetProjects/drill/contrib/format-pcapng/src/test/java/org/apache/drill/exec/store/pcapng/TestPcapngRecordReader.java,75,,"        .addRow(""ARP"", 90, Instant.ofEpochMilli(1518010669927L))"
67258,./TargetProjects/drill/contrib/format-spss/src/test/java/org/apache/drill/exec/store/spss/TestSpssReader.java,60,,"      .addNullable(""Urban"", TypeProtos.MinorType.FLOAT8)"
67259,./TargetProjects/drill/contrib/format-spss/src/test/java/org/apache/drill/exec/store/spss/TestSpssReader.java,99,,"      .addRow(47.0, 1.0, ""Urban"", 101.0, ""Kabul"", 1.0, ""Kabul"", 151.0, 1.34557632E10, 1.0, ""Yes"", 2.0, ""No"", 2.0, ""No"", 2.0, ""No"", """", 2.0, ""No"", 2.0, ""No"", 2.0, ""No"", 1.0, ""Good"", 2.0, ""The same"", 5.0, ""Housewife (not working outside of the home)"", 97.0, ""Not Asked"", 4.0, 121.0, 0.007463305415042708, 0.006666666666666667, 20098.33333333333)"
67260,./TargetProjects/drill/contrib/format-spss/src/test/java/org/apache/drill/exec/store/spss/TestSpssReader.java,99,,"      .addRow(47.0, 1.0, ""Urban"", 101.0, ""Kabul"", 1.0, ""Kabul"", 151.0, 1.34557632E10, 1.0, ""Yes"", 2.0, ""No"", 2.0, ""No"", 2.0, ""No"", """", 2.0, ""No"", 2.0, ""No"", 2.0, ""No"", 1.0, ""Good"", 2.0, ""The same"", 5.0, ""Housewife (not working outside of the home)"", 97.0, ""Not Asked"", 4.0, 121.0, 0.007463305415042708, 0.006666666666666667, 20098.33333333333)"
67261,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,88,,"      .add(""event_date"", TypeProtos.MinorType.TIMESTAMP, TypeProtos.DataMode.OPTIONAL)"
67262,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,89,,"      .add(""severity_code"", TypeProtos.MinorType.INT, TypeProtos.DataMode.OPTIONAL)"
67263,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,90,,"      .add(""severity"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67264,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,91,,"      .add(""facility_code"", TypeProtos.MinorType.INT, TypeProtos.DataMode.OPTIONAL)"
67265,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,92,,"      .add(""facility"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67266,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,94,,"      .add(""process_id"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67267,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,95,,"      .add(""message_id"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67268,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,96,,"      .add(""structured_data_text"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67269,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,100,,"      .addRow(1065910455003L, 2, ""CRIT"", 4, ""AUTH"", ""mymachine.example.com"", null, ""ID47"", null)"
67270,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,100,,"      .addRow(1065910455003L, 2, ""CRIT"", 4, ""AUTH"", ""mymachine.example.com"", null, ""ID47"", null)"
67271,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,100,,"      .addRow(1065910455003L, 2, ""CRIT"", 4, ""AUTH"", ""mymachine.example.com"", null, ""ID47"", null)"
67272,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,100,,"      .addRow(1065910455003L, 2, ""CRIT"", 4, ""AUTH"", ""mymachine.example.com"", null, ""ID47"", null)"
67273,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,105,,"      .addRow(1061727255000L, 5, ""NOTICE"", 20, ""LOCAL4"", ""192.0.2.1"", ""8710"", null, null)"
67274,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,105,,"      .addRow(1061727255000L, 5, ""NOTICE"", 20, ""LOCAL4"", ""192.0.2.1"", ""8710"", null, null)"
67275,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,106,,"      .addRow(1065910455003L, 5, ""NOTICE"", 20, ""LOCAL4"", ""mymachine.example.com"", null, ""ID47"", ""{examplePriority@32473=[class=high], exampleSDID@32473=[iut=3, "" +"
67276,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,107,,"    ""eventSource=Application, eventID=1011]}"")"
67277,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,136,,"      .addRow(1065910455003L, 2, 4, ""CRIT"", ""AUTH"", ""mymachine.example.com"", ""su"", null, ""ID47"", null, mapArray(), ""BOM'su root' failed for lonvick on /dev/pts/8"")"
67278,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,206,,"      .addRow(""Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko"", ""192.168.2.132"","
67279,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,207,,"              ""0gvhdi5udjuqtweprbgoxilc"", ""SecureAuth0"", ""secureauthqa.gosecureauth.com"", ""SecureAuth Corporation"","
67280,./TargetProjects/drill/contrib/format-syslog/src/test/java/org/apache/drill/exec/store/syslog/TestSyslogFormat.java,245,,"      .addRow(1438811939693L, 6, 10, ""INFO"", ""AUTHPRIV"", ""192.168.2.132"", ""SecureAuth0"", ""23108"", ""ID52020"", ""{SecureAuth@27389=[UserAgent=Mozilla/5.0 (Windows NT 6.1; WOW64; "" +"
67281,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,69,,"      .add(""attributes"", MinorType.MAP)"
67282,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,70,,"      .addNullable(""groupID"", MinorType.VARCHAR)"
67283,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,71,,"      .addNullable(""artifactID"", MinorType.VARCHAR)"
67284,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,72,,"      .addNullable(""version"", MinorType.VARCHAR)"
67285,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,73,,"      .addNullable(""classifier"", MinorType.VARCHAR)"
67286,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,74,,"      .addNullable(""scope"", MinorType.VARCHAR)"
67287,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,78,,"      .addRow(mapArray(), ""org.apache.drill.exec"", ""drill-java-exec"", ""${project.version}"", null, null)"
67288,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,78,,"      .addRow(mapArray(), ""org.apache.drill.exec"", ""drill-java-exec"", ""${project.version}"", null, null)"
67289,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,78,,"      .addRow(mapArray(), ""org.apache.drill.exec"", ""drill-java-exec"", ""${project.version}"", null, null)"
67290,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,79,,"      .addRow(mapArray(),""org.apache.drill.exec"", ""drill-java-exec"", ""${project.version}"", ""tests"", ""test"")"
67291,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,79,,"      .addRow(mapArray(),""org.apache.drill.exec"", ""drill-java-exec"", ""${project.version}"", ""tests"", ""test"")"
67292,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,80,,"      .addRow(mapArray(),""org.apache.drill"", ""drill-common"", ""${project.version}"", ""tests"", ""test"")"
67293,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,80,,"      .addRow(mapArray(),""org.apache.drill"", ""drill-common"", ""${project.version}"", ""tests"", ""test"")"
67294,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,191,,"      .addMap(""field1"")"
67295,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,192,,"        .addNullable(""key1"", MinorType.VARCHAR)"
67296,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,193,,"        .addNullable(""key2"", MinorType.VARCHAR)"
67297,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,198,,"      .addRow(mapArray(), strArray(""value1"", ""value2""))"
67298,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,198,,"      .addRow(mapArray(), strArray(""value1"", ""value2""))"
67299,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,199,,"      .addRow(mapArray(), strArray(""value3"", ""value4""))"
67300,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,199,,"      .addRow(mapArray(), strArray(""value3"", ""value4""))"
67301,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,200,,"      .addRow(mapArray(), strArray(""value5"", ""value6""))"
67302,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,200,,"      .addRow(mapArray(), strArray(""value5"", ""value6""))"
67303,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,270,,"      .addNullable(""field2"", MinorType.VARCHAR)"
67304,./TargetProjects/drill/contrib/format-xml/src/test/java/org/apache/drill/exec/store/xml/TestXMLReader.java,271,,"      .addNullable(""field3"", MinorType.VARCHAR)"
67305,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,37,,"        .baselineColumns(""employee_id"", ""full_name"", ""first_name"", ""last_name"", ""position_id"","
67306,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,37,,"        .baselineColumns(""employee_id"", ""full_name"", ""first_name"", ""last_name"", ""position_id"","
67307,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,37,,"        .baselineColumns(""employee_id"", ""full_name"", ""first_name"", ""last_name"", ""position_id"","
67308,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,37,,"        .baselineColumns(""employee_id"", ""full_name"", ""first_name"", ""last_name"", ""position_id"","
67309,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,37,,"        .baselineColumns(""employee_id"", ""full_name"", ""first_name"", ""last_name"", ""position_id"","
67310,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,38,,"            ""position_title"", ""store_id"", ""department_id"", ""birth_date"", ""hire_date"", ""salary"","
67311,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,38,,"            ""position_title"", ""store_id"", ""department_id"", ""birth_date"", ""hire_date"", ""salary"","
67312,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,38,,"            ""position_title"", ""store_id"", ""department_id"", ""birth_date"", ""hire_date"", ""salary"","
67313,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,38,,"            ""position_title"", ""store_id"", ""department_id"", ""birth_date"", ""hire_date"", ""salary"","
67314,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,38,,"            ""position_title"", ""store_id"", ""department_id"", ""birth_date"", ""hire_date"", ""salary"","
67315,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,38,,"            ""position_title"", ""store_id"", ""department_id"", ""birth_date"", ""hire_date"", ""salary"","
67316,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,39,,"            ""supervisor_id"", ""education_level"", ""marital_status"", ""gender"", ""management_role"")"
67317,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,39,,"            ""supervisor_id"", ""education_level"", ""marital_status"", ""gender"", ""management_role"")"
67318,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,39,,"            ""supervisor_id"", ""education_level"", ""marital_status"", ""gender"", ""management_role"")"
67319,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,39,,"            ""supervisor_id"", ""education_level"", ""marital_status"", ""gender"", ""management_role"")"
67320,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,39,,"            ""supervisor_id"", ""education_level"", ""marital_status"", ""gender"", ""management_role"")"
67321,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,40,,"        .baselineValues(1L, ""Sheri Nowmer"", ""Sheri"", ""Nowmer"", 1, ""President"", 0, 1, ""1961-08-26"", ""1994-12-01 00:00:00.0"", 80000.0f, 0, ""Graduate Degree"", ""S"", ""F"", ""Senior Management"")"
67322,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,40,,"        .baselineValues(1L, ""Sheri Nowmer"", ""Sheri"", ""Nowmer"", 1, ""President"", 0, 1, ""1961-08-26"", ""1994-12-01 00:00:00.0"", 80000.0f, 0, ""Graduate Degree"", ""S"", ""F"", ""Senior Management"")"
67323,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,40,,"        .baselineValues(1L, ""Sheri Nowmer"", ""Sheri"", ""Nowmer"", 1, ""President"", 0, 1, ""1961-08-26"", ""1994-12-01 00:00:00.0"", 80000.0f, 0, ""Graduate Degree"", ""S"", ""F"", ""Senior Management"")"
67324,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,40,,"        .baselineValues(1L, ""Sheri Nowmer"", ""Sheri"", ""Nowmer"", 1, ""President"", 0, 1, ""1961-08-26"", ""1994-12-01 00:00:00.0"", 80000.0f, 0, ""Graduate Degree"", ""S"", ""F"", ""Senior Management"")"
67325,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,40,,"        .baselineValues(1L, ""Sheri Nowmer"", ""Sheri"", ""Nowmer"", 1, ""President"", 0, 1, ""1961-08-26"", ""1994-12-01 00:00:00.0"", 80000.0f, 0, ""Graduate Degree"", ""S"", ""F"", ""Senior Management"")"
67326,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,40,,"        .baselineValues(1L, ""Sheri Nowmer"", ""Sheri"", ""Nowmer"", 1, ""President"", 0, 1, ""1961-08-26"", ""1994-12-01 00:00:00.0"", 80000.0f, 0, ""Graduate Degree"", ""S"", ""F"", ""Senior Management"")"
67327,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,40,,"        .baselineValues(1L, ""Sheri Nowmer"", ""Sheri"", ""Nowmer"", 1, ""President"", 0, 1, ""1961-08-26"", ""1994-12-01 00:00:00.0"", 80000.0f, 0, ""Graduate Degree"", ""S"", ""F"", ""Senior Management"")"
67328,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,40,,"        .baselineValues(1L, ""Sheri Nowmer"", ""Sheri"", ""Nowmer"", 1, ""President"", 0, 1, ""1961-08-26"", ""1994-12-01 00:00:00.0"", 80000.0f, 0, ""Graduate Degree"", ""S"", ""F"", ""Senior Management"")"
67329,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,41,,"        .baselineValues(2L, ""Derrick Whelply"", ""Derrick"", ""Whelply"", 2, ""VP Country Manager"", 0, 1, ""1915-07-03"", ""1994-12-01 00:00:00.0"", 40000.0f, 1, ""Graduate Degree"", ""M"", ""M"", ""Senior Management"")"
67330,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,41,,"        .baselineValues(2L, ""Derrick Whelply"", ""Derrick"", ""Whelply"", 2, ""VP Country Manager"", 0, 1, ""1915-07-03"", ""1994-12-01 00:00:00.0"", 40000.0f, 1, ""Graduate Degree"", ""M"", ""M"", ""Senior Management"")"
67331,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,41,,"        .baselineValues(2L, ""Derrick Whelply"", ""Derrick"", ""Whelply"", 2, ""VP Country Manager"", 0, 1, ""1915-07-03"", ""1994-12-01 00:00:00.0"", 40000.0f, 1, ""Graduate Degree"", ""M"", ""M"", ""Senior Management"")"
67332,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,42,,"        .baselineValues(4L, ""Michael Spence"", ""Michael"", ""Spence"", 2, ""VP Country Manager"", 0, 1, ""1969-06-20"", ""1998-01-01 00:00:00.0"", 40000.0f, 1, ""Graduate Degree"", ""S"", ""M"", ""Senior Management"")"
67333,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,42,,"        .baselineValues(4L, ""Michael Spence"", ""Michael"", ""Spence"", 2, ""VP Country Manager"", 0, 1, ""1969-06-20"", ""1998-01-01 00:00:00.0"", 40000.0f, 1, ""Graduate Degree"", ""S"", ""M"", ""Senior Management"")"
67334,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,42,,"        .baselineValues(4L, ""Michael Spence"", ""Michael"", ""Spence"", 2, ""VP Country Manager"", 0, 1, ""1969-06-20"", ""1998-01-01 00:00:00.0"", 40000.0f, 1, ""Graduate Degree"", ""S"", ""M"", ""Senior Management"")"
67335,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,43,,"        .baselineValues(5L, ""Maya Gutierrez"", ""Maya"", ""Gutierrez"", 2, ""VP Country Manager"", 0, 1, ""1951-05-10"", ""1998-01-01 00:00:00.0"", 35000.0f, 1, ""Bachelors Degree"", ""M"", ""F"", ""Senior Management"")"
67336,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,43,,"        .baselineValues(5L, ""Maya Gutierrez"", ""Maya"", ""Gutierrez"", 2, ""VP Country Manager"", 0, 1, ""1951-05-10"", ""1998-01-01 00:00:00.0"", 35000.0f, 1, ""Bachelors Degree"", ""M"", ""F"", ""Senior Management"")"
67337,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,43,,"        .baselineValues(5L, ""Maya Gutierrez"", ""Maya"", ""Gutierrez"", 2, ""VP Country Manager"", 0, 1, ""1951-05-10"", ""1998-01-01 00:00:00.0"", 35000.0f, 1, ""Bachelors Degree"", ""M"", ""F"", ""Senior Management"")"
67338,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,44,,"        .baselineValues(6L, ""Roberta Damstra"", ""Roberta"", ""Damstra"", 3, ""VP Information Systems"", 0, 2, ""1942-10-08"", ""1994-12-01 00:00:00.0"", 25000.0f, 1, ""Bachelors Degree"", ""M"", ""F"", ""Senior Management"")"
67339,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,44,,"        .baselineValues(6L, ""Roberta Damstra"", ""Roberta"", ""Damstra"", 3, ""VP Information Systems"", 0, 2, ""1942-10-08"", ""1994-12-01 00:00:00.0"", 25000.0f, 1, ""Bachelors Degree"", ""M"", ""F"", ""Senior Management"")"
67340,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,45,,"        .baselineValues(7L, ""Rebecca Kanagaki"", ""Rebecca"", ""Kanagaki"", 4, ""VP Human Resources"", 0, 3, ""1949-03-27"", ""1994-12-01 00:00:00.0"", 15000.0f, 1, ""Bachelors Degree"", ""M"", ""F"", ""Senior Management"")"
67341,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,45,,"        .baselineValues(7L, ""Rebecca Kanagaki"", ""Rebecca"", ""Kanagaki"", 4, ""VP Human Resources"", 0, 3, ""1949-03-27"", ""1994-12-01 00:00:00.0"", 15000.0f, 1, ""Bachelors Degree"", ""M"", ""F"", ""Senior Management"")"
67342,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,46,,"        .baselineValues(8L, ""Kim Brunner"", ""Kim"", ""Brunner"", 11, ""Store Manager"", 9, 11, ""1922-08-10"", ""1998-01-01 00:00:00.0"", 10000.0f, 5, ""Bachelors Degree"", ""S"", ""F"", ""Store Management"")"
67343,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,46,,"        .baselineValues(8L, ""Kim Brunner"", ""Kim"", ""Brunner"", 11, ""Store Manager"", 9, 11, ""1922-08-10"", ""1998-01-01 00:00:00.0"", 10000.0f, 5, ""Bachelors Degree"", ""S"", ""F"", ""Store Management"")"
67344,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,47,,"        .baselineValues(9L, ""Brenda Blumberg"", ""Brenda"", ""Blumberg"", 11, ""Store Manager"", 21, 11, ""1979-06-23"", ""1998-01-01 00:00:00.0"", 17000.0f, 5, ""Graduate Degree"", ""M"", ""F"", ""Store Management"")"
67345,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,47,,"        .baselineValues(9L, ""Brenda Blumberg"", ""Brenda"", ""Blumberg"", 11, ""Store Manager"", 21, 11, ""1979-06-23"", ""1998-01-01 00:00:00.0"", 17000.0f, 5, ""Graduate Degree"", ""M"", ""F"", ""Store Management"")"
67346,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,48,,"        .baselineValues(10L, ""Darren Stanz"", ""Darren"", ""Stanz"", 5, ""VP Finance"", 0, 5, ""1949-08-26"", ""1994-12-01 00:00:00.0"", 50000.0f, 1, ""Partial College"", ""M"", ""M"", ""Senior Management"")"
67347,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,48,,"        .baselineValues(10L, ""Darren Stanz"", ""Darren"", ""Stanz"", 5, ""VP Finance"", 0, 5, ""1949-08-26"", ""1994-12-01 00:00:00.0"", 50000.0f, 1, ""Partial College"", ""M"", ""M"", ""Senior Management"")"
67348,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,49,,"        .baselineValues(11L, ""Jonathan Murraiin"", ""Jonathan"", ""Murraiin"", 11, ""Store Manager"", 1, 11, ""1967-06-20"", ""1998-01-01 00:00:00.0"", 15000.0f, 5, ""Graduate Degree"", ""S"", ""M"", ""Store Management"")"
67349,./TargetProjects/drill/contrib/storage-cassandra/src/test/java/org/apache/drill/exec/store/cassandra/CassandraQueryTest.java,49,,"        .baselineValues(11L, ""Jonathan Murraiin"", ""Jonathan"", ""Murraiin"", 11, ""Store Manager"", 1, 11, ""1967-06-20"", ""1998-01-01 00:00:00.0"", 15000.0f, 5, ""Graduate Degree"", ""S"", ""M"", ""Store Management"")"
67350,./TargetProjects/drill/contrib/storage-druid/src/test/java/org/apache/drill/exec/store/druid/TestDataGenerator.java,131,,"    @JsonProperty(""task"")"
67351,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticComplexTypesTest.java,102,,"    builder.field(""nest_field"", ImmutableMap.of(""a"", 123, ""b"", ""abc""));"
67352,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticInfoSchemaTest.java,57,,"    cluster.defineStoragePlugin(""elastic"", config);"
67353,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,82,,"    builder.field(""employee_id"", 1);"
67354,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,83,,"    builder.field(""full_name"", ""Sheri Nowmer"");"
67355,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,83,,"    builder.field(""full_name"", ""Sheri Nowmer"");"
67356,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,84,,"    builder.field(""first_name"", ""Sheri"");"
67357,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,84,,"    builder.field(""first_name"", ""Sheri"");"
67358,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,85,,"    builder.field(""last_name"", ""Nowmer"");"
67359,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,85,,"    builder.field(""last_name"", ""Nowmer"");"
67360,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,86,,"    builder.field(""position_id"", 1);"
67361,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,87,,"    builder.field(""position_title"", ""President"");"
67362,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,87,,"    builder.field(""position_title"", ""President"");"
67363,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,88,,"    builder.field(""store_id"", 0);"
67364,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,89,,"    builder.field(""department_id"", 1);"
67365,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,90,,"    builder.field(""birth_date"", ""1961-08-26"");"
67366,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,90,,"    builder.field(""birth_date"", ""1961-08-26"");"
67367,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,91,,"    builder.field(""hire_date"", ""1994-12-01 00:00:00.0"");"
67368,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,91,,"    builder.field(""hire_date"", ""1994-12-01 00:00:00.0"");"
67369,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,92,,"    builder.field(""salary"", 80000.0);"
67370,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,93,,"    builder.field(""supervisor_id"", 0);"
67371,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,94,,"    builder.field(""education_level"", ""Graduate Degree"");"
67372,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,94,,"    builder.field(""education_level"", ""Graduate Degree"");"
67373,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,95,,"    builder.field(""marital_status"", ""S"");"
67374,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,96,,"    builder.field(""gender"", ""F"");"
67375,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,97,,"    builder.field(""management_role"", ""Senior Management"");"
67376,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,97,,"    builder.field(""management_role"", ""Senior Management"");"
67377,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,105,,"    builder.field(""full_name"", ""Derrick Whelply"");"
67378,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,106,,"    builder.field(""first_name"", ""Derrick"");"
67379,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,107,,"    builder.field(""last_name"", ""Whelply"");"
67380,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,109,,"    builder.field(""position_title"", ""VP Country Manager"");"
67381,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,112,,"    builder.field(""birth_date"", ""1915-07-03"");"
67382,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,127,,"    builder.field(""full_name"", ""Michael Spence"");"
67383,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,128,,"    builder.field(""first_name"", ""Michael"");"
67384,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,129,,"    builder.field(""last_name"", ""Spence"");"
67385,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,134,,"    builder.field(""birth_date"", ""1969-06-20"");"
67386,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,135,,"    builder.field(""hire_date"", ""1998-01-01 00:00:00.0"");"
67387,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,149,,"    builder.field(""full_name"", ""Maya Gutierrez"");"
67388,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,156,,"    builder.field(""birth_date"", ""1951-05-10"");"
67389,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,160,,"    builder.field(""education_level"", ""Bachelors Degree"");"
67390,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,171,,"    builder.field(""full_name"", ""Roberta Damstra"");"
67391,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,178,,"    builder.field(""birth_date"", ""1942-10-08"");"
67392,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,193,,"    builder.field(""full_name"", ""Rebecca Kanagaki"");"
67393,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,200,,"    builder.field(""birth_date"", ""1949-03-27"");"
67394,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,215,,"    builder.field(""full_name"", ""Kim Brunner"");"
67395,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,219,,"    builder.field(""position_title"", ""Store Manager"");"
67396,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,222,,"    builder.field(""birth_date"", ""1922-08-10"");"
67397,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,229,,"    builder.field(""management_role"", ""Store Management"");"
67398,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,237,,"    builder.field(""full_name"", ""Brenda Blumberg"");"
67399,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,244,,"    builder.field(""birth_date"", ""1979-06-23"");"
67400,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,259,,"    builder.field(""full_name"", ""Darren Stanz"");"
67401,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,266,,"    builder.field(""birth_date"", ""1949-08-26"");"
67402,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,281,,"    builder.field(""full_name"", ""Jonathan Murraiin"");"
67403,./TargetProjects/drill/contrib/storage-elasticsearch/src/test/java/org/apache/drill/exec/store/elasticsearch/ElasticSearchQueryTest.java,288,,"    builder.field(""birth_date"", ""1967-06-20"");"
67404,./TargetProjects/drill/contrib/storage-hbase/src/main/java/org/apache/drill/exec/store/hbase/CompareFunctionsProcessor.java,192,,"        if (!encodingType.endsWith(""_BE"")) {"
67405,./TargetProjects/drill/contrib/storage-hbase/src/main/java/org/apache/drill/exec/store/hbase/CompareFunctionsProcessor.java,287,,"              if (encodingType.endsWith(""_OBD"")) {"
67406,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/HBaseTestsSuite.java,89,,"  private static boolean manageHBaseCluster = System.getProperty(""drill.hbase.tests.manageHBaseCluster"", ""true"").equalsIgnoreCase(""true"");"
67407,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestHBaseFilterPushDown.java,32,,"    final String sql = ""SELECT\n"""
67408,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestHBaseFilterPushDown.java,33,,"        + ""  *\n"""
67409,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestHBaseFilterPushDown.java,34,,"        + ""FROM\n"""
67410,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestHBaseFilterPushDown.java,35,,"        + ""  hbase.`[TABLE_NAME]` tableName\n"""
67411,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestHBaseFilterPushDown.java,36,,"        + ""WHERE\n"""
67412,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestHBaseFilterPushDown.java,87,,"    runHBaseSQLVerifyCount(""SELECT \n"""
67413,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestHBaseFilterPushDown.java,89,,"        + "", CONVERT_FROM(BYTE_SUBSTR(row_key, 9, 8), 'bigint_be') id\n"""
67414,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestHBaseFilterPushDown.java,90,,"        + "", CONVERT_FROM(tableName.f.c, 'UTF8') \n"""
67415,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestHBaseFilterPushDown.java,91,,"        + "" FROM hbase.`TestTableCompositeDate` tableName\n"""
67416,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestHBaseFilterPushDown.java,92,,"        + "" WHERE\n"""
67417,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestHBaseFilterPushDown.java,257,,"        + "" convert_from(t.`f`.`c`, 'UTF8') val\n"""
67418,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestHBaseFilterPushDown.java,268,,"    runHBaseSQLVerifyCount(""EXPLAIN PLAN FOR\n"""
67419,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestHBaseProjectPushDown.java,31,,"    runHBaseSQLVerifyCount(""SELECT\n"""
67420,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestHBaseProjectPushDown.java,33,,"        + ""FROM\n"""
67421,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestHBaseTableProvider.java,60,,"    hbaseStore.put("".test"", ""testValue"");"
67422,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestHBaseTableProvider.java,60,,"    hbaseStore.put("".test"", ""testValue"");"
67423,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestTableGenerator.java,284,,"    p.addColumn(FAMILY_F, COLUMN_C, ""dummy"".getBytes());"
67424,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestTableGenerator.java,439,,"      p.addColumn(FAMILY_F, COLUMN_C, String.format(""value %03f"", i).getBytes());"
67425,./TargetProjects/drill/contrib/storage-hbase/src/test/java/org/apache/drill/hbase/TestTableGenerator.java,501,,"      p.addColumn(FAMILY_F, COLUMN_C, String.format(""value %d"", i).getBytes());"
67426,./TargetProjects/drill/contrib/storage-hive/core/src/main/java/org/apache/drill/exec/store/hive/HiveTableWrapper.java,75,,"                          @JsonProperty(""partitionKeys"") List<FieldSchemaWrapper> partitionKeys, @JsonProperty(""parameters"") Map<String, String> parameters,"
67427,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/TestHiveDrillNativeParquetReader.java,65,,"    assertEquals(""Expected and actual row count should match"", 2, actualRowCount);"
67428,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/TestHiveDrillNativeParquetReader.java,67,,"    testPlanMatchingPatterns(query, ""HiveDrillNativeParquetScan"", ""numFiles=1"");"
67429,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/TestHiveDrillNativeParquetReader.java,67,,"    testPlanMatchingPatterns(query, ""HiveDrillNativeParquetScan"", ""numFiles=1"");"
67430,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/TestHiveDrillNativeParquetReader.java,235,,"        .baselineValues(""binaryfield"".getBytes(), false, 34, new BigDecimal(""66""), new BigDecimal(""2347.92""), new BigDecimal(""2758725827.99990""), new BigDecimal(""29375892739852.8""), new BigDecimal(""89853749534593985.783""), 8.345d, 4.67f, 123456, 234235L, 3455, ""stringfield"", ""varcharfield"", DateUtility.parseBest(""2013-07-05 17:01:00""), ""charfield"","
67431,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/TestHivePartitionPruning.java,51,,"    assertFalse(plan.contains(""Filter""));"
67432,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/fn/hive/TestSampleHiveUDFs.java,44,,"    String query = ""SELECT "" +"
67433,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/fn/hive/TestSampleHiveUDFs.java,48,,"        ""FROM hive.kv LIMIT 1"";"
67434,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/fn/hive/TestSampleHiveUDFs.java,58,,"    String expected = ""col1\n"" + ""34\n"" + ""null\n"";"
67435,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/fn/hive/TestSampleHiveUDFs.java,58,,"    String expected = ""col1\n"" + ""34\n"" + ""null\n"";"
67436,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/fn/hive/TestSampleHiveUDFs.java,120,,"    String expected = ""col1,col2\n"" + ""This is a varchar,null\n"";"
67437,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestHiveStorage.java,202,,"        .baselineColumns(""key"", ""value"")"
67438,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestHiveStorage.java,202,,"        .baselineColumns(""key"", ""value"")"
67439,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestHiveStorage.java,253,,"        .baselineColumns(""cnt"")"
67440,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestHiveViewsSupport.java,40,,"        .baselineColumns(""key"", ""value"")"
67441,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestHiveViewsSupport.java,40,,"        .baselineColumns(""key"", ""value"")"
67442,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestHiveViewsSupport.java,41,,"        .baselineValues(1, "" key_1"")"
67443,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestInfoSchemaOnHiveStorage.java,31,,"  private static final Object[] expVal1 = new Object[] {""key"", ""INTEGER"", ""YES""};"
67444,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestInfoSchemaOnHiveStorage.java,31,,"  private static final Object[] expVal1 = new Object[] {""key"", ""INTEGER"", ""YES""};"
67445,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestInfoSchemaOnHiveStorage.java,32,,"  private static final Object[] expVal2 = new Object[] {""value"", ""CHARACTER VARYING"", ""YES""};"
67446,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestInfoSchemaOnHiveStorage.java,32,,"  private static final Object[] expVal2 = new Object[] {""value"", ""CHARACTER VARYING"", ""YES""};"
67447,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestInfoSchemaOnHiveStorage.java,39,,"        .baselineColumns(""TABLE_SCHEMA"", ""TABLE_NAME"")"
67448,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestInfoSchemaOnHiveStorage.java,39,,"        .baselineColumns(""TABLE_SCHEMA"", ""TABLE_NAME"")"
67449,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestInfoSchemaOnHiveStorage.java,40,,"        .baselineValues(""hive.default"", ""partition_pruning_test"")"
67450,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestInfoSchemaOnHiveStorage.java,65,,"        .baselineValues(""hive.db1"", ""kv_db1"")"
67451,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestInfoSchemaOnHiveStorage.java,74,,"        .baselineValues(""hive.skipper"", ""kv_text_small"")"
67452,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestInfoSchemaOnHiveStorage.java,249,,"        .baselineValues(""DRILL"", ""hive.db1"", ""kv_db1"", ""TABLE"")"
67453,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestInfoSchemaOnHiveStorage.java,249,,"        .baselineValues(""DRILL"", ""hive.db1"", ""kv_db1"", ""TABLE"")"
67454,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/TestInfoSchemaOnHiveStorage.java,251,,"        .baselineValues(""DRILL"", ""hive.db1"", ""two_table_view"", ""VIEW"")"
67455,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,227,,"        .sqlQuery(""SELECT arr_n_0 FROM hive.`%s`"", tableName)"
67456,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,229,,"        .baselineColumns(""arr_n_0"")"
67457,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,237,,"        .sqlQuery(""SELECT arr_n_1 FROM hive.`%s`"", tableName)"
67458,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,239,,"        .baselineColumns(""arr_n_1"")"
67459,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,247,,"        .sqlQuery(""SELECT arr_n_2 FROM hive.`%s` order by rid"", tableName)"
67460,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,249,,"        .baselineColumns(""arr_n_2"")"
67461,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,293,,"        .baselineColumns(""EXPR$0"", ""EXPR$1"", ""EXPR$2"", ""EXPR$3"", ""EXPR$4"", ""EXPR$5"")"
67462,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,293,,"        .baselineColumns(""EXPR$0"", ""EXPR$1"", ""EXPR$2"", ""EXPR$3"", ""EXPR$4"", ""EXPR$5"")"
67463,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,293,,"        .baselineColumns(""EXPR$0"", ""EXPR$1"", ""EXPR$2"", ""EXPR$3"", ""EXPR$4"", ""EXPR$5"")"
67464,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,293,,"        .baselineColumns(""EXPR$0"", ""EXPR$1"", ""EXPR$2"", ""EXPR$3"", ""EXPR$4"", ""EXPR$5"")"
67465,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,293,,"        .baselineColumns(""EXPR$0"", ""EXPR$1"", ""EXPR$2"", ""EXPR$3"", ""EXPR$4"", ""EXPR$5"")"
67466,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,293,,"        .baselineColumns(""EXPR$0"", ""EXPR$1"", ""EXPR$2"", ""EXPR$3"", ""EXPR$4"", ""EXPR$5"")"
67467,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,306,,"        .baselineColumns(""rid"", ""EXPR$1"")"
67468,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,366,,"        .baselineValues(""arr_n_0"", ""ARRAY"", ""YES"")//todo: fix to ARRAY<INTEGER>"
67469,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,418,,"        .baselineValues(asTextList(""First Value Of Array"", ""komlnp"", ""The Last Value""))"
67470,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,418,,"        .baselineValues(asTextList(""First Value Of Array"", ""komlnp"", ""The Last Value""))"
67471,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,428,,"        .baselineValues(asList(asTextList(""Array 0, Value 0"", ""Array 0, Value 1""), asTextList(""Array 1"")))"
67472,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,428,,"        .baselineValues(asList(asTextList(""Array 0, Value 0"", ""Array 0, Value 1""), asTextList(""Array 1"")))"
67473,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,428,,"        .baselineValues(asList(asTextList(""Array 0, Value 0"", ""Array 0, Value 1""), asTextList(""Array 1"")))"
67474,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,430,,"        .baselineValues(asList(asTextList(""One"")))"
67475,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,483,,"        .baselineValues(asTextList(""Five"", ""One"", ""T""))"
67476,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,485,,"        .baselineValues(asTextList(""ZZ0"", ""-c54g"", ""ooo"", ""k22k""))"
67477,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,493,,"        .baselineValues(asList(asTextList(""Five"", ""One"", ""$42""), asTextList(""T"", ""K"", ""O"")))"
67478,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,742,,"        .baselineValues(asList(new BigDecimal(""-100000.000""), new BigDecimal(""102030.001""), new BigDecimal(""0.001"")))"
67479,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,742,,"        .baselineValues(asList(new BigDecimal(""-100000.000""), new BigDecimal(""102030.001""), new BigDecimal(""0.001"")))"
67480,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,742,,"        .baselineValues(asList(new BigDecimal(""-100000.000""), new BigDecimal(""102030.001""), new BigDecimal(""0.001"")))"
67481,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,1104,,"            parseLocalDate(""2018-10-21""),"
67482,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,1105,,"            parseLocalDate(""2017-07-11""),"
67483,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,1106,,"            parseLocalDate(""2018-09-23"")))"
67484,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveArrays.java,1118,,"            asList(parseLocalDate(""2017-03-24""), parseLocalDate(""2018-09-22""))))"
67485,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveMaps.java,110,,"    HiveTestUtilities.insertData(d, ""map_tbl"", ""map_tbl_p"");"
67486,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveMaps.java,133,,"        .baselineColumns(""rid"", ""int_string"")"
67487,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveMaps.java,133,,"        .baselineColumns(""rid"", ""int_string"")"
67488,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveMaps.java,134,,"        .baselineValues(1, mapOfObject(1, ""First"", 2, ""Second"", 3, ""Third""))"
67489,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveMaps.java,134,,"        .baselineValues(1, mapOfObject(1, ""First"", 2, ""Second"", 3, ""Third""))"
67490,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveMaps.java,134,,"        .baselineValues(1, mapOfObject(1, ""First"", 2, ""Second"", 3, ""Third""))"
67491,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveMaps.java,413,,"        .baselineValues(1, mapOfObject(1, mapOfObject(""A-0"", 21, ""A-1"", 22)))"
67492,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveMaps.java,413,,"        .baselineValues(1, mapOfObject(1, mapOfObject(""A-0"", 21, ""A-1"", 22)))"
67493,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveMaps.java,469,,"            ""key01"", asList(mapOfObject(""key01.0"", 0), mapOfObject(""key01.1"", 1), mapOfObject(""key01.2"", 2), mapOfObject(""key01.3"", 3))"
67494,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveStructs.java,54,,"      ""f_int"", -3000, ""f_string"", new Text(""AbbBBa""), ""f_varchar"", new Text(""-c54g""), ""f_char"", new Text(""Th""),"
67495,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveStructs.java,54,,"      ""f_int"", -3000, ""f_string"", new Text(""AbbBBa""), ""f_varchar"", new Text(""-c54g""), ""f_char"", new Text(""Th""),"
67496,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveStructs.java,54,,"      ""f_int"", -3000, ""f_string"", new Text(""AbbBBa""), ""f_varchar"", new Text(""-c54g""), ""f_char"", new Text(""Th""),"
67497,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveStructs.java,54,,"      ""f_int"", -3000, ""f_string"", new Text(""AbbBBa""), ""f_varchar"", new Text(""-c54g""), ""f_char"", new Text(""Th""),"
67498,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveStructs.java,55,,"      ""f_tinyint"", -128, ""f_smallint"", -32768, ""f_decimal"", new BigDecimal(""375098.406""), ""f_boolean"", true,"
67499,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveStructs.java,55,,"      ""f_tinyint"", -128, ""f_smallint"", -32768, ""f_decimal"", new BigDecimal(""375098.406""), ""f_boolean"", true,"
67500,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveStructs.java,55,,"      ""f_tinyint"", -128, ""f_smallint"", -32768, ""f_decimal"", new BigDecimal(""375098.406""), ""f_boolean"", true,"
67501,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveStructs.java,130,,"    HiveTestUtilities.insertData(d, ""struct_tbl"", ""struct_tbl_p"");"
67502,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveStructs.java,204,,"        .baselineColumns(""str_n0"")"
67503,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/hive/complex_types/TestHiveStructs.java,273,,"        .baselineColumns(""rid"", ""str_wa"")"
67504,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/impersonation/hive/BaseTestHiveImpersonation.java,84,,"    hiveConf.set(ConfVars.METASTORE_SCHEMA_VERIFICATION.varname, ""false"");"
67505,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/impersonation/hive/TestSqlStdBasedAuthorization.java,154,,"    executeQuery(driver, String.format(""GRANT SELECT ON db_general.%s TO USER %s"","
67506,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/impersonation/hive/TestSqlStdBasedAuthorization.java,209,,"    test(""USE "" + hivePluginName + ""."" + db_general);"
67507,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/impersonation/hive/TestSqlStdBasedAuthorization.java,210,,"    test(String.format(""SELECT * FROM %s ORDER BY name LIMIT 2"", g_student_user0));"
67508,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/impersonation/hive/TestSqlStdBasedAuthorization.java,296,,"        String.format(""SELECT * FROM %s v JOIN %s s on v.name = s.name limit 2;"", g_voter_role0, g_student_user2);"
67509,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/sql/hive/TestViewSupportOnHiveTables.java,59,,"        baselineColumns(""key"", ""value""),"
67510,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/sql/hive/TestViewSupportOnHiveTables.java,59,,"        baselineColumns(""key"", ""value""),"
67511,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/sql/hive/TestViewSupportOnHiveTables.java,60,,"        baselineRows(row( 1, "" key_1"" ))"
67512,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/HiveTestDataGenerator.java,153,,"        ""  boolean_part='true', "" +"
67513,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/HiveTestDataGenerator.java,155,,"        ""  decimal0_part='36.9', "" +"
67514,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/HiveTestDataGenerator.java,156,,"        ""  decimal9_part='36.9', "" +"
67515,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/HiveTestDataGenerator.java,157,,"        ""  decimal18_part='3289379872.945645', "" +"
67516,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/HiveTestDataGenerator.java,158,,"        ""  decimal28_part='39579334534534.35345', "" +"
67517,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/HiveTestDataGenerator.java,159,,"        ""  decimal38_part='363945093845093890.9', "" +"
67518,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/HiveTestDataGenerator.java,160,,"        ""  double_part='8.345', "" +"
67519,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/HiveTestDataGenerator.java,161,,"        ""  float_part='4.67', "" +"
67520,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/HiveTestDataGenerator.java,162,,"        ""  int_part='123456', "" +"
67521,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/HiveTestDataGenerator.java,163,,"        ""  bigint_part='234235', "" +"
67522,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/HiveTestDataGenerator.java,164,,"        ""  smallint_part='3455', "" +"
67523,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/HiveTestDataGenerator.java,165,,"        ""  string_part='string', "" +"
67524,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/HiveTestDataGenerator.java,166,,"        ""  varchar_part='varchar', "" +"
67525,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/HiveTestDataGenerator.java,167,,"        ""  timestamp_part='2013-07-05 17:01:00', "" +"
67526,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/HiveTestDataGenerator.java,168,,"        ""  date_part='2013-07-05', "" +"
67527,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/HiveTestDataGenerator.java,407,,"    executeQuery(hiveDriver, createTableWithHeaderFooterProperties(""skipper.kv_text_small"", ""textfile"", ""1"", ""1"", false));"
67528,./TargetProjects/drill/contrib/storage-hive/core/src/test/java/org/apache/drill/exec/store/hive/schema/TestColumnListCache.java,40,,"    columns.add(new FieldSchema(""f1"", ""int"", null));"
67529,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,92,,"    HttpApiConfig sunriseConfig = new HttpApiConfig(""https://api.sunrise-sunset.org/json"", ""GET"", null, null, null, null, null, null, null, null, null, 0, false);"
67530,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,94,,"        Arrays.asList(""lat"", ""lng"", ""date""), ""results"", false, null, 0, false);"
67531,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,101,,"    configs.put(""sunrise"", sunriseConfig);"
67532,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,125,,"        ""basic"", ""user"", ""pass"", null, null, ""results"", null, null, 0, false);"
67533,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,125,,"        ""basic"", ""user"", ""pass"", null, null, ""results"", null, null, 0, false);"
67534,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,125,,"        ""basic"", ""user"", ""pass"", null, null, ""results"", null, null, 0, false);"
67535,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,170,,"        .addRow(""live"", ""http"") // For table-like connections"
67536,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,212,,"  @Ignore(""Requires Remote Server"")"
67537,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,221,,"      .add(""sunset"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67538,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,222,,"      .add(""solar_noon"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67539,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,223,,"      .add(""day_length"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67540,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,224,,"      .add(""civil_twilight_begin"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67541,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,225,,"      .add(""civil_twilight_end"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67542,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,226,,"      .add(""nautical_twilight_begin"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67543,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,227,,"      .add(""nautical_twilight_end"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67544,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,228,,"      .add(""astronomical_twilight_begin"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67545,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,229,,"      .add(""astronomical_twilight_end"", TypeProtos.MinorType.VARCHAR, TypeProtos.DataMode.OPTIONAL)"
67546,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,235,,"      .addRow(mapValue(""6:13:58 AM"", ""5:59:55 PM"", ""12:06:56 PM"", ""11:45:57"","
67547,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,235,,"      .addRow(mapValue(""6:13:58 AM"", ""5:59:55 PM"", ""12:06:56 PM"", ""11:45:57"","
67548,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,235,,"      .addRow(mapValue(""6:13:58 AM"", ""5:59:55 PM"", ""12:06:56 PM"", ""11:45:57"","
67549,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,235,,"      .addRow(mapValue(""6:13:58 AM"", ""5:59:55 PM"", ""12:06:56 PM"", ""11:45:57"","
67550,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,236,,"                       ""5:48:14 AM"", ""6:25:38 PM"", ""5:18:16 AM"", ""6:55:36 PM"","
67551,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,236,,"                       ""5:48:14 AM"", ""6:25:38 PM"", ""5:18:16 AM"", ""6:55:36 PM"","
67552,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,236,,"                       ""5:48:14 AM"", ""6:25:38 PM"", ""5:18:16 AM"", ""6:55:36 PM"","
67553,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,236,,"                       ""5:48:14 AM"", ""6:25:38 PM"", ""5:18:16 AM"", ""6:55:36 PM"","
67554,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,237,,"                       ""4:48:07 AM"", ""7:25:45 PM""), ""OK"")"
67555,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,237,,"                       ""4:48:07 AM"", ""7:25:45 PM""), ""OK"")"
67556,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,331,,"    String sql = ""SELECT * FROM local.sunrise.`?lat=36.7201600&lng=-4.4203400&date=2019-10-02`"";"
67557,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,386,,"        .addRow(mapArray(), ""Bloodroot"", ""Sanguinaria canadensis"", ""4"", ""Mostly Shady"", ""$2.44"", ""031599"")"
67558,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,413,,"        .addRow(200, ""OK"", ""http/1.1"", ""http://localhost:8091/json?lat=36.7201600&lng=-4.4203400&date=2019-10-02"")"
67559,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java,460,,"        .addRow(200, ""OK"", ""http/1.1"", ""http://localhost:8091/xml?arg1=4"")"
67560,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpProxy.java,45,,"    assertEquals(""foo.com"", proxy.host);"
67561,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpProxy.java,47,,"    assertEquals(""bob"", proxy.username);"
67562,./TargetProjects/drill/contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpProxy.java,48,,"    assertEquals(""secret"", proxy.password);"
67563,./TargetProjects/drill/contrib/storage-jdbc/src/main/java/org/apache/drill/exec/store/jdbc/JdbcBatchReader.java,147,,"        .addContext(""Sql"", sql)"
67564,./TargetProjects/drill/contrib/storage-jdbc/src/test/java/org/apache/drill/exec/store/jdbc/TestDataSource.java,68,,"      DRIVER, url, ""user"", ""password"", false, null, null);"
67565,./TargetProjects/drill/contrib/storage-jdbc/src/test/java/org/apache/drill/exec/store/jdbc/TestDataSource.java,68,,"      DRIVER, url, ""user"", ""password"", false, null, null);"
67566,./TargetProjects/drill/contrib/storage-jdbc/src/test/java/org/apache/drill/exec/store/jdbc/TestJdbcPluginWithH2IT.java,68,,"    try (Connection connection = DriverManager.getConnection(connString, ""root"", ""root"");"
67567,./TargetProjects/drill/contrib/storage-jdbc/src/test/java/org/apache/drill/exec/store/jdbc/TestJdbcPluginWithH2IT.java,153,,"        .exclude(""Filter"")"
67568,./TargetProjects/drill/contrib/storage-jdbc/src/test/java/org/apache/drill/exec/store/jdbc/TestJdbcPluginWithMySQLIT.java,63,,"    if (osName.startsWith(""linux"") && ""aarch64"".equals(System.getProperty(""os.arch""))) {"
67569,./TargetProjects/drill/contrib/storage-jdbc/src/test/java/org/apache/drill/exec/store/jdbc/TestJdbcPluginWithMySQLIT.java,362,,"        .exclude(""Limit\\("")"
67570,./TargetProjects/drill/contrib/storage-kafka/src/test/java/org/apache/drill/exec/store/kafka/KafkaFilterPushdownTest.java,73,,"    final String predicate = ""kafkaPartitionId = 1"";"
67571,./TargetProjects/drill/contrib/storage-kafka/src/test/java/org/apache/drill/exec/store/kafka/KafkaFilterPushdownTest.java,92,,"    final String predicate = ""kafkaMsgTimestamp > 6"";"
67572,./TargetProjects/drill/contrib/storage-mongo/src/test/java/org/apache/drill/exec/store/bson/TestBsonRecordReader.java,111,,"    bsonDoc.append(""stringKey"", new BsonString(""test_string""));"
67573,./TargetProjects/drill/contrib/storage-mongo/src/test/java/org/apache/drill/exec/store/mongo/MongoTestSuite.java,105,,"          .map(host -> new GenericContainer<>(""mongo:4.4.5"")"
67574,./TargetProjects/drill/contrib/storage-mongo/src/test/java/org/apache/drill/exec/store/mongo/MongoTestSuite.java,121,,"      Container.ExecResult execResult = configServer.execInContainer(""/bin/bash"", ""-c"","
67575,./TargetProjects/drill/contrib/storage-mongo/src/test/java/org/apache/drill/exec/store/mongo/TestMongoChunkAssignment.java,84,,"    chunk1MaxFilters.put(""name"", Integer.valueOf(5));"
67576,./TargetProjects/drill/contrib/storage-mongo/src/test/java/org/apache/drill/exec/store/mongo/TestMongoLimitPushDown.java,35,,"      .include(""Limit"", ""maxRecords=4"")"
67577,./TargetProjects/drill/contrib/storage-mongo/src/test/java/org/apache/drill/exec/store/mongo/TestMongoStoragePluginUsesCredentialsStore.java,56,,"      ""mongodb://example:27017/somedb?readPreference=primary"","
67578,./TargetProjects/drill/contrib/storage-opentsdb/src/test/java/org/apache/drill/store/openTSDB/TestDataHolder.java,23,,"      ""\""metric\"":\""warp.speed.test\"","" +"
67579,./TargetProjects/drill/contrib/storage-opentsdb/src/test/java/org/apache/drill/store/openTSDB/TestDataHolder.java,25,,"      ""\""aggregateTags\"":[],"" +"
67580,./TargetProjects/drill/contrib/storage-opentsdb/src/test/java/org/apache/drill/store/openTSDB/TestDataHolder.java,26,,"      ""\""dps\"":{"" +"
67581,./TargetProjects/drill/contrib/storage-opentsdb/src/test/java/org/apache/drill/store/openTSDB/TestDataHolder.java,86,,"          ""},{"" +"
67582,./TargetProjects/drill/contrib/storage-opentsdb/src/test/java/org/apache/drill/store/openTSDB/TestDataHolder.java,94,,"          ""\""tags\"":{"" +"
67583,./TargetProjects/drill/contrib/storage-opentsdb/src/test/java/org/apache/drill/store/openTSDB/TestDataHolder.java,129,,"          ""\""start\"":\""47y-ago\"","" +"
67584,./TargetProjects/drill/contrib/storage-opentsdb/src/test/java/org/apache/drill/store/openTSDB/TestDataHolder.java,130,,"          ""\""end\"":null,"" +"
67585,./TargetProjects/drill/contrib/storage-opentsdb/src/test/java/org/apache/drill/store/openTSDB/TestDataHolder.java,131,,"          ""\""queries\"":[{"" +"
67586,./TargetProjects/drill/contrib/storage-opentsdb/src/test/java/org/apache/drill/store/openTSDB/TestDataHolder.java,132,,"          ""\""aggregator\"":\""sum\"","" +"
67587,./TargetProjects/drill/contrib/storage-opentsdb/src/test/java/org/apache/drill/store/openTSDB/TestDataHolder.java,134,,"          ""\""rate\"":null,"" +"
67588,./TargetProjects/drill/contrib/storage-opentsdb/src/test/java/org/apache/drill/store/openTSDB/TestDataHolder.java,148,,"          ""\""downsample\"":null,"" +"
67589,./TargetProjects/drill/contrib/storage-opentsdb/src/test/java/org/apache/drill/store/openTSDB/TestOpenTSDBPlugin.java,82,,"            .withHeader(""Content-Type"", ""application/json"")"
67590,./TargetProjects/drill/contrib/storage-opentsdb/src/test/java/org/apache/drill/store/openTSDB/TestOpenTSDBPlugin.java,82,,"            .withHeader(""Content-Type"", ""application/json"")"
67591,./TargetProjects/drill/contrib/storage-opentsdb/src/test/java/org/apache/drill/store/openTSDB/TestOpenTSDBPlugin.java,93,,"    wireMockRule.stubFor(post(urlEqualTo(""/api/query""))"
67592,./TargetProjects/drill/contrib/storage-splunk/src/test/java/org/apache/drill/exec/store/splunk/SplunkIndexesTest.java,44,,"      .addRow(""splunk"", ""summary"")"
67593,./TargetProjects/drill/contrib/storage-splunk/src/test/java/org/apache/drill/exec/store/splunk/SplunkLimitPushDownTest.java,34,,"      .include(""Limit"", ""maxRecords=5"")"
67594,./TargetProjects/drill/contrib/storage-splunk/src/test/java/org/apache/drill/exec/store/splunk/SplunkPluginTest.java,55,,"      .addRow(""splunk"", ""splunk"")"
67595,./TargetProjects/drill/contrib/storage-splunk/src/test/java/org/apache/drill/exec/store/splunk/SplunkPluginTest.java,92,,"      .baselineColumns(""acceleration_id"", ""action"", ""add_offset"", ""add_timestamp"", ""apiEndTime"", ""apiStartTime"","
67596,./TargetProjects/drill/contrib/storage-splunk/src/test/java/org/apache/drill/exec/store/splunk/SplunkPluginTest.java,92,,"      .baselineColumns(""acceleration_id"", ""action"", ""add_offset"", ""add_timestamp"", ""apiEndTime"", ""apiStartTime"","
67597,./TargetProjects/drill/contrib/storage-splunk/src/test/java/org/apache/drill/exec/store/splunk/SplunkPluginTest.java,92,,"      .baselineColumns(""acceleration_id"", ""action"", ""add_offset"", ""add_timestamp"", ""apiEndTime"", ""apiStartTime"","
67598,./TargetProjects/drill/contrib/storage-splunk/src/test/java/org/apache/drill/exec/store/splunk/SplunkPluginTest.java,92,,"      .baselineColumns(""acceleration_id"", ""action"", ""add_offset"", ""add_timestamp"", ""apiEndTime"", ""apiStartTime"","
67599,./TargetProjects/drill/contrib/storage-splunk/src/test/java/org/apache/drill/exec/store/splunk/SplunkPluginTest.java,261,,"      .addRow(""abc"", ""0"", ""cat dog bird"")"
67600,./TargetProjects/drill/contrib/storage-splunk/src/test/java/org/apache/drill/exec/store/splunk/SplunkQueryBuilderTest.java,36,,"    SplunkQueryBuilder builder = new SplunkQueryBuilder(""main"");"
67601,./TargetProjects/drill/contrib/storage-splunk/src/test/java/org/apache/drill/exec/store/splunk/SplunkQueryBuilderTest.java,44,,"    builder.addField(""field1"");"
67602,./TargetProjects/drill/contrib/storage-splunk/src/test/java/org/apache/drill/exec/store/splunk/SplunkQueryBuilderTest.java,53,,"    builder.addField(""field2"");"
67603,./TargetProjects/drill/contrib/storage-splunk/src/test/java/org/apache/drill/exec/store/splunk/SplunkQueryBuilderTest.java,54,,"    builder.addField(""field3"");"
67604,./TargetProjects/drill/contrib/storage-splunk/src/test/java/org/apache/drill/exec/store/splunk/SplunkQueryBuilderTest.java,82,,"    filters.put(""sourcetype"", new ExprNode.ColRelOpConstNode(""sourcetype"", RelOp.EQ, new ConstantHolder(TypeProtos.MinorType.VARCHAR, ""st"")));"
67605,./TargetProjects/drill/contrib/udfs/src/test/java/org/apache/drill/exec/udfs/TestNearestDateFunctions.java,63,,"            ""FROM (VALUES(1))"";"
67606,./TargetProjects/drill/contrib/udfs/src/test/java/org/apache/drill/exec/udfs/TestNetworkFunctions.java,41,,"    testBuilder().sqlQuery(query).ordered().baselineColumns(""inet"").baselineValues(3232235521L).go();"
67607,./TargetProjects/drill/contrib/udfs/src/test/java/org/apache/drill/exec/udfs/TestNetworkFunctions.java,65,,"    testBuilder().sqlQuery(query).ordered().baselineColumns(""in_net"").baselineValues(true).go();"
67608,./TargetProjects/drill/contrib/udfs/src/test/java/org/apache/drill/exec/udfs/TestNetworkFunctions.java,149,,"    testBuilder().sqlQuery(query).ordered().baselineColumns(""is_private_ip"").baselineValues(false).go();"
67609,./TargetProjects/drill/contrib/udfs/src/test/java/org/apache/drill/exec/udfs/TestNetworkFunctions.java,173,,"    testBuilder().sqlQuery(query).ordered().baselineColumns(""is_valid_IP"").baselineValues(false).go();"
67610,./TargetProjects/drill/contrib/udfs/src/test/java/org/apache/drill/exec/udfs/TestNetworkFunctions.java,194,,"    testBuilder().sqlQuery(query).ordered().baselineColumns(""is_valid_IP4"").baselineValues(false).go();"
67611,./TargetProjects/drill/contrib/udfs/src/test/java/org/apache/drill/exec/udfs/TestNetworkFunctions.java,215,,"    testBuilder().sqlQuery(query).ordered().baselineColumns(""is_valid_IP6"").baselineValues(true).go();"
67612,./TargetProjects/drill/contrib/udfs/src/test/java/org/apache/drill/exec/udfs/TestNetworkFunctions.java,236,,"    testBuilder().sqlQuery(query).ordered().baselineColumns(""address_count"").baselineValues(2L).go();"
67613,./TargetProjects/drill/contrib/udfs/src/test/java/org/apache/drill/exec/udfs/TestTimeBucketFunction.java,59,,"      .baselineColumns(""high"")"
67614,./TargetProjects/drill/contrib/udfs/src/test/java/org/apache/drill/exec/udfs/TestUserAgentFunctions.java,85,,"      .baselineColumns(""agent"")"
67615,./TargetProjects/drill/contrib/udfs/src/test/java/org/apache/drill/exec/udfs/gis/TestGeometryFunctions.java,39,,"    .ordered().baselineColumns(""EXPR$0"")"
67616,./TargetProjects/drill/contrib/udfs/src/test/java/org/apache/drill/exec/udfs/gis/TestGeometryFunctions.java,60,,"        + ""from cp.`/sample-data/CA-cities.csv` limit 1"")"
67617,./TargetProjects/drill/contrib/udfs/src/test/java/org/apache/drill/exec/udfs/gis/TestGeometryFunctions.java,177,,"          + ""from (VALUES(1))"")"
67618,./TargetProjects/drill/drill-yarn/src/main/java/org/apache/drill/yarn/appMaster/http/AmRestApi.java,144,,"    @QueryParam( ""key"" )"
67619,./TargetProjects/drill/drill-yarn/src/main/java/org/apache/drill/yarn/appMaster/http/WebUiPageTree.java,276,,"      return new Viewable(""/drill-am/confirm.ftl"", toModel(sc, ack));"
67620,./TargetProjects/drill/drill-yarn/src/main/java/org/apache/drill/yarn/client/StatusCommand.java,169,,"    showMetric(""Target Drillbit Count"", root.get(""summary""), ""targetBitCount"");"
67621,./TargetProjects/drill/drill-yarn/src/main/java/org/apache/drill/yarn/core/LaunchSpec.java,190,,"        out.println(""  None"");"
67622,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/client/TestClient.java,64,,"        out = new PrintStream(captureOut, true, ""UTF-8"");"
67623,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/client/TestCommandLineOptions.java,58,,"    opts.parse(new String[] { ""resize"" });"
67624,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/ScriptUtils.java,164,,"      ""bin"","
67625,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,74,,"    File siteDir = new File(context.testDrillHome, ""conf"");"
67626,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,94,,"      String propArg = ""-Dproperty=value"";"
67627,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,107,,"          .addEnv(""DRILL_JAVA_OPTS"", propArg).run();"
67628,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,142,,"          .addEnv(""DRILL_HEAP"", ""5G"").run();"
67629,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,150,,"          .addEnv(""DRILL_MAX_DIRECT_MEMORY"", ""7G"").run();"
67630,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,158,,"          .addEnv(""SERVER_LOG_GC"", ""1"").run();"
67631,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,167,,"          .addEnv(""DRILLBIT_CODE_CACHE_SIZE"", ""2G"").run();"
67632,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,168,,"      result.validateArg(""-XX:ReservedCodeCacheSize=2G"");"
67633,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,240,,"    context.makeDummyJar(siteJars, ""site"");"
67634,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,310,,"    doEnvFileTest(""drill-env.sh"");"
67635,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,320,,"    doEnvFileTest(""distrib-env.sh"");"
67636,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,371,,"      result.validateArg(""-XX:MaxDirectMemorySize=9G"");"
67637,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,381,,"    conditions.put(""DRILLBIT_CONTEXT"", ""0"");"
67638,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,647,,"      env.put(""DRILL_JAVA_OPTS"", prefix + ""/foo/bar:/foo/mumble"");"
67639,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,654,,"      assertEquals(""/foo/bar"", result.libPath[0]);"
67640,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,655,,"      assertEquals(""/foo/mumble"", result.libPath[1]);"
67641,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,786,,"      assertTrue(result.stdout.contains(""drillbit is running""));"
67642,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,1123,,"      RunResult result = new ScriptRunner(""sqlline"").run();"
67643,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,1133,,"          .withArg(""arg1"")"
67644,./TargetProjects/drill/drill-yarn/src/test/java/org/apache/drill/yarn/scripts/TestScripts.java,1216,,"      drillEnv.put(""SQLLINE_JAVA_OPTS"", ""-XX:MaxPermSize=256M"");"
67645,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/ExecConstants.java,543,,"          ""For internal usage when producing Metastore analyze.""));"
67646,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/compile/CheckMethodVisitorFsm.java,58,,"    tokenMap.put(""visitXInsn"", 'X'); // represents all Insn calls"
67647,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/coord/zk/ZKClusterCoordinator.java,316,,"          builder.append(bit.getAddress()).append("" | "");"
67648,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/coord/zk/ZookeeperClient.java,125,,"    Preconditions.checkNotNull(path, ""path is required"");"
67649,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/EvaluationVisitor.java,192,,"      readerVar = vvSetupBlock.decl(readerClass, classGen.getNextVar(""reader""), expr);"
67650,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/EvaluationVisitor.java,195,,"      JInvocation setPosnStmt = readerVar.invoke(""setPosition"").arg(recordIndex);"
67651,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/GetSetVectorHelper.java,78,,"            eval.assign(out.getHolder().ref(""scale""), vector.invoke(""getField"").invoke(""getScale""));"
67652,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/GetSetVectorHelper.java,88,,"            eval.assign(out.getHolder().ref(""start""), JExpr.lit(TypeHelper.getSize(type)).mul(indexVariable));"
67653,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/GetSetVectorHelper.java,89,,"            eval.assign(out.getHolder().ref(""buffer""), vector.invoke(""getBuffer""));"
67654,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/GetSetVectorHelper.java,89,,"            eval.assign(out.getHolder().ref(""buffer""), vector.invoke(""getBuffer""));"
67655,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/GetSetVectorHelper.java,103,,"            eval.assign(out.getHolder().ref(""months""), data.invoke(""getInt"").arg(start));"
67656,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/GetSetVectorHelper.java,104,,"            eval.assign(out.getHolder().ref(""days""), data.invoke(""getInt"").arg(start.plus(JExpr.lit(4))));"
67657,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/GetSetVectorHelper.java,105,,"            eval.assign(out.getHolder().ref(""milliseconds""), data.invoke(""getInt"").arg(start.plus(JExpr.lit(8))));"
67658,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/AggregateErrorFunctions.java,38,,"  @FunctionTemplate(names = {""sum"", ""avg"", ""stddev_pop"", ""stddev_samp"", ""stddev"", ""var_pop"","
67659,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/AggregateErrorFunctions.java,38,,"  @FunctionTemplate(names = {""sum"", ""avg"", ""stddev_pop"", ""stddev_samp"", ""stddev"", ""var_pop"","
67660,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/AggregateErrorFunctions.java,38,,"  @FunctionTemplate(names = {""sum"", ""avg"", ""stddev_pop"", ""stddev_samp"", ""stddev"", ""var_pop"","
67661,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/AggregateErrorFunctions.java,38,,"  @FunctionTemplate(names = {""sum"", ""avg"", ""stddev_pop"", ""stddev_samp"", ""stddev"", ""var_pop"","
67662,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/AggregateErrorFunctions.java,38,,"  @FunctionTemplate(names = {""sum"", ""avg"", ""stddev_pop"", ""stddev_samp"", ""stddev"", ""var_pop"","
67663,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/AggregateErrorFunctions.java,38,,"  @FunctionTemplate(names = {""sum"", ""avg"", ""stddev_pop"", ""stddev_samp"", ""stddev"", ""var_pop"","
67664,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/AggregateErrorFunctions.java,39,,"      ""var_samp"", ""variance""}, scope = FunctionTemplate.FunctionScope.POINT_AGGREGATE)"
67665,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/AggregateErrorFunctions.java,39,,"      ""var_samp"", ""variance""}, scope = FunctionTemplate.FunctionScope.POINT_AGGREGATE)"
67666,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/DateTypeFunctions.java,60,,"    @SuppressWarnings(""unused"")"
67667,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/DateTypeFunctions.java,423,,"    @FunctionTemplate(name = ""age"", scope = FunctionTemplate.FunctionScope.SIMPLE, nulls = NullHandling.NULL_IF_NULL)"
67668,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/Hash32AsDouble.java,42,,"  @FunctionTemplate(name = ""hash32AsDouble"", scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL)"
67669,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/Hash32Functions.java,53,,"  @FunctionTemplate(names = {""hash"", ""hash32""}, scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL )"
67670,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/Hash32Functions.java,53,,"  @FunctionTemplate(names = {""hash"", ""hash32""}, scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL )"
67671,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/Hash32Functions.java,117,,"  @FunctionTemplate(names = {""hash"", ""hash32"", ""hash32AsDouble""}, scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL )"
67672,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/Hash32FunctionsWithSeed.java,55,,"  @FunctionTemplate(name = ""hash32"", scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL )"
67673,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/Hash32FunctionsWithSeed.java,127,,"  @FunctionTemplate(names = {""hash32"", ""hash32AsDouble""}, scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL )"
67674,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/Hash32WithSeedAsDouble.java,42,,"  @FunctionTemplate(name = ""hash32AsDouble"", scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL )"
67675,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/Hash64AsDouble.java,46,,"  @FunctionTemplate(name = ""hash64AsDouble"", scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL)"
67676,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/Hash64Functions.java,55,,"  @FunctionTemplate(name = ""hash64"", scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL)"
67677,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/Hash64Functions.java,127,,"  @FunctionTemplate(names = {""hash64"", ""hash64AsDouble""}, scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL)"
67678,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/Hash64FunctionsWithSeed.java,58,,"  @FunctionTemplate(name = ""hash64"", scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL )"
67679,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/Hash64FunctionsWithSeed.java,130,,"  @FunctionTemplate(names = {""hash64"", ""hash64AsDouble""}, scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL )"
67680,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/Hash64WithSeedAsDouble.java,46,,"  @FunctionTemplate(name = ""hash64AsDouble"", scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL )"
67681,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/SimpleRepeatedFunctions.java,45,,"  @FunctionTemplate(name = ""repeated_contains"", scope = FunctionTemplate.FunctionScope.SIMPLE)"
67682,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/StatisticsAggrFunctions.java,148,,"  @FunctionTemplate(name = ""hll"", scope = FunctionTemplate.FunctionScope.POINT_AGGREGATE)"
67683,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/StatisticsAggrFunctions.java,211,,"          throw new org.apache.drill.common.exceptions.DrillRuntimeException(""Failed to get HyperLogLog output"", e);"
67684,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/StatisticsAggrFunctions.java,1956,,"  @FunctionTemplate(name = ""avg_width"", scope = FunctionTemplate.FunctionScope.POINT_AGGREGATE)"
67685,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/StatisticsAggrFunctions.java,3136,,"  @FunctionTemplate(name = ""sum_width"", scope = FunctionTemplate.FunctionScope.POINT_AGGREGATE)"
67686,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/StatisticsAggrFunctions.java,4172,,"  @FunctionTemplate(name = ""approx_count_dups"", scope = FunctionTemplate.FunctionScope.POINT_AGGREGATE)"
67687,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/StringFunctions.java,595,,"  @FunctionTemplate(names = {""substring"", ""substr""}, scope = FunctionScope.SIMPLE, nulls = NullHandling.NULL_IF_NULL,"
67688,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/StringFunctions.java,595,,"  @FunctionTemplate(names = {""substring"", ""substr""}, scope = FunctionScope.SIMPLE, nulls = NullHandling.NULL_IF_NULL,"
67689,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/StringFunctions.java,1506,,"  @FunctionTemplate(name = ""concat"","
67690,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/TDigestFunctions.java,57,,"  @FunctionTemplate(name = ""tdigest"", scope = FunctionTemplate.FunctionScope.POINT_AGGREGATE)"
67691,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/TDigestFunctions.java,99,,"          throw new org.apache.drill.common.exceptions.DrillRuntimeException(""Failed to get TDigest output"", e);"
67692,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/conv/JsonConvertFrom.java,44,,"  @FunctionTemplate(name = ""convert_fromJSON"", scope = FunctionScope.SIMPLE, isRandom = true)"
67693,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/conv/JsonConvertFrom.java,67,,"        throw new org.apache.drill.common.exceptions.DrillRuntimeException(""Error while converting from JSON. "", e);"
67694,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/conv/RoundFunctions.java,46,,"  @FunctionTemplate(name = ""round"", scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.NULL_IF_NULL)"
67695,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/registry/FunctionRegistryHolder.java,114,,"    try (@SuppressWarnings(""unused"") Closeable lock = readLock.open()) {"
67696,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/base/PhysicalOperator.java,38,,"@JsonPropertyOrder({ ""@id"" })"
67697,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/aggregate/HashAggTemplate.java,289,,"    public void setupInterior(@Named(""incoming"") RecordBatch incoming, @Named(""outgoing"") RecordBatch outgoing,"
67698,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/aggregate/StreamingAggBatch.java,524,,"  private final GeneratorMapping IS_SAME = GeneratorMapping.create(""setupInterior"", ""isSame"", null, null);"
67699,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/aggregate/StreamingAggBatch.java,550,,"  private final MappingSet ISA_B2 = new MappingSet(""b2Index"", null, ""incoming"", null, IS_SAME_PREV, IS_SAME_PREV);"
67700,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/common/ChainedHashTable.java,64,,"      GeneratorMapping.create(""setupInterior"" /* setup method */, ""isKeyMatchInternalBuild"" /* eval method */,"
67701,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/common/ChainedHashTable.java,76,,"      GeneratorMapping.create(""doSetup"" /* setup method */, ""getHashBuild"" /* eval method */,"
67702,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/common/ChainedHashTable.java,102,,"      new MappingSet(""incomingRowIdx"", null, ""incomingBuild"", null, SETUP_INTERIOR_CONSTANT, KEY_MATCH_BUILD);"
67703,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/common/ChainedHashTable.java,102,,"      new MappingSet(""incomingRowIdx"", null, ""incomingBuild"", null, SETUP_INTERIOR_CONSTANT, KEY_MATCH_BUILD);"
67704,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/common/ChainedHashTable.java,108,,"      new MappingSet(""htRowIdx"", null, ""htContainer"", null, SETUP_INTERIOR_CONSTANT, KEY_MATCH_BUILD);"
67705,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/common/ChainedHashTable.java,108,,"      new MappingSet(""htRowIdx"", null, ""htContainer"", null, SETUP_INTERIOR_CONSTANT, KEY_MATCH_BUILD);"
67706,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/common/HashTableTemplate.java,429,,"        @Named(""incomingRowIdx"") int incomingRowIdx, @Named(""htRowIdx"") int htRowIdx) throws SchemaChangeException {"
67707,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/common/HashTableTemplate.java,429,,"        @Named(""incomingRowIdx"") int incomingRowIdx, @Named(""htRowIdx"") int htRowIdx) throws SchemaChangeException {"
67708,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/flatten/FlattenTemplate.java,81,,"        throw new UnsupportedOperationException(""Flatten does not support selection vector inputs."");"
67709,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/join/MergeJoinBatch.java,82,,"      GM(""doSetup"", ""doSetup"", null, null),"
67710,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/join/MergeJoinBatch.java,235,,"          logger.debug(""BATCH RETURNED; returning {}"", (first ? ""OK_NEW_SCHEMA"" : ""OK""));"
67711,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/join/MergeJoinBatch.java,321,,"    JVar outgoingVectorContainer = cg.clazz.field(JMod.NONE, vectorContainerClass, ""outgoing"");"
67712,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/join/NestedLoopJoinBatch.java,97,,"      GeneratorMapping.create(""doSetup""/* setup method */, ""emitRight"" /* eval method */, null /* reset */,"
67713,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/join/NestedLoopJoinBatch.java,116,,"      new MappingSet(""rightCompositeIndex"" /* read index */, ""outIndex"" /* write index */, ""rightContainer"" /* read container */,"
67714,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/join/NestedLoopJoinBatch.java,117,,"          ""outgoing"" /* write container */, EMIT_RIGHT_CONSTANT, EMIT_RIGHT);"
67715,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/join/NestedLoopJoinBatch.java,120,,"  private final MappingSet emitLeftMapping = new MappingSet(""leftIndex"" /* read index */, ""outIndex"" /* write index */,"
67716,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/join/NestedLoopJoinBatch.java,121,,"      ""leftBatch"" /* read container */,"
67717,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/metadata/MetadataAggregateHelper.java,119,,"        LogicalExpression anyValueCall = new FunctionCall(""any_value"","
67718,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/scan/v3/lifecycle/OutputBatchBuilder.java,171,,"    @SuppressWarnings(""unchecked"")"
67719,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/validate/BatchValidator.java,386,,"    return validateOffsetVector(name + ""-offsets"", vector.getOffsetVector(),"
67720,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/window/FrameSupportTemplate.java,328,,"  public abstract void setupEvaluatePeer(@Named(""incoming"") VectorAccessible incoming, @Named(""outgoing"") VectorAccessible outgoing) throws SchemaChangeException;"
67721,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/window/FrameSupportTemplate.java,328,,"  public abstract void setupEvaluatePeer(@Named(""incoming"") VectorAccessible incoming, @Named(""outgoing"") VectorAccessible outgoing) throws SchemaChangeException;"
67722,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/window/NoFrameSupportTemplate.java,330,,"  public abstract void outputRow(@Named(""outIndex"") int outIndex,"
67723,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/window/NoFrameSupportTemplate.java,341,,"  public abstract void setupPartition(@Named(""incoming"") WindowDataBatch incoming,"
67724,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/window/NoFrameSupportTemplate.java,342,,"                                      @Named(""outgoing"") VectorAccessible outgoing)"
67725,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/window/WindowFunction.java,154,,"      final GeneratorMapping EVAL_OUTSIDE = GeneratorMapping.create(""setupPartition"", ""outputRow"", ""resetValues"", ""cleanup"");"
67726,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/window/WindowFunction.java,154,,"      final GeneratorMapping EVAL_OUTSIDE = GeneratorMapping.create(""setupPartition"", ""outputRow"", ""resetValues"", ""cleanup"");"
67727,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/window/WindowFunction.java,154,,"      final GeneratorMapping EVAL_OUTSIDE = GeneratorMapping.create(""setupPartition"", ""outputRow"", ""resetValues"", ""cleanup"");"
67728,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/window/WindowFunction.java,155,,"      final MappingSet mappingSet = new MappingSet(""index"", ""outIndex"", EVAL_INSIDE, EVAL_OUTSIDE, EVAL_INSIDE);"
67729,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/physical/resultSet/impl/ResultSetLoaderImpl.java,368,,"        throw new IllegalStateException(""Unexpected state: "" + state);"
67730,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/planner/common/DrillStatsTable.java,263,,"    @JsonProperty (""directories"") List<DirectoryStatistics_v0> directoryStatistics;"
67731,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/planner/common/DrillStatsTable.java,281,,"    @JsonGetter (""computed"")"
67732,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/planner/logical/partition/PruneScanRule.java,297,,"              logger.debug(""Total pruning elapsed time: {} ms"", totalPruningTime.elapsed(TimeUnit.MILLISECONDS));"
67733,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/planner/sql/handlers/SchemaHandler.java,153,,"          .addContext(""Error while preparing / creating schema for [%s]"", schemaSource)"
67734,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/planner/sql/parser/SqlSchema.java,177,,"        writer.keyword(""SCHEMA"");"
67735,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/planner/sql/parser/UnsupportedOperatorsVisitor.java,286,,"              ""Directory explorers "" + dirExplorers + "" functions are not supported in Select List\n"" +"
67736,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/planner/sql/parser/UnsupportedOperatorsVisitor.java,287,,"                  ""See Apache Drill JIRA: DRILL-3944"");"
67737,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/planner/sql/parser/UnsupportedOperatorsVisitor.java,307,,"                ""See Apache Drill JIRA: DRILL-2181"");"
67738,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/record/HyperVectorWrapper.java,50,,"  @SuppressWarnings(""unchecked"")"
67739,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/record/RecordBatchMemoryManager.java,171,,"    throw new IllegalStateException(""Should only be called on JoinBatchMemoryManager"");"
67740,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/rpc/security/kerberos/KerberosFactory.java,115,,"      logger.debug(""Authentication failed."", cause);"
67741,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/rpc/security/plain/PlainServer.java,113,,"    throw new IllegalStateException(""PLAIN authentication not completed"");"
67742,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/server/DrillbitStateManager.java,44,,"          throw new IllegalStateException(""Cannot set drillbit to"" + newState + ""from"" + currentState);"
67743,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/server/DrillbitStateManager.java,44,,"          throw new IllegalStateException(""Cannot set drillbit to"" + newState + ""from"" + currentState);"
67744,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/server/rest/DrillRoot.java,313,,"            : ""N/A"";"
67745,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/server/rest/LogsResources.java,101,,"  public Viewable getLog(@PathParam(""name"") String name) throws IOException {"
67746,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/server/rest/StorageResources.java,139,,"  public PluginConfigWrapper getPluginConfig(@PathParam(""name"") String name) {"
67747,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/server/rest/StorageResources.java,164,,"      return message(""Success"");"
67748,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/base/filter/ConstantHolder.java,38,,"@JsonPropertyOrder({""type"", ""value""})"
67749,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/base/filter/ConstantHolder.java,38,,"@JsonPropertyOrder({""type"", ""value""})"
67750,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/base/filter/ExprNode.java,170,,"  @JsonPropertyOrder({""colName"", ""op"", ""value""})"
67751,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/base/filter/ExprNode.java,170,,"  @JsonPropertyOrder({""colName"", ""op"", ""value""})"
67752,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/dfs/FormatPluginOptionsDescriptor.java,70,,"      paramsByName.put(""type"", TableParamDef.required(""type"", String.class, null));"
67753,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/dfs/FormatPluginOptionsDescriptor.java,254,,"          .addContext(""table"", t.sig.getName())"
67754,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/easy/json/JSONFormatPlugin.java,65,,"  public static final String DEFAULT_NAME = ""json"";"
67755,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/easy/json/StatisticsCollectorImpl.java,124,,"        throw new IOException(""Statistics writer encountered unexpected field"");"
67756,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/easy/text/TextFormatPlugin.java,102,,"  public static final String HAS_HEADERS_PROP = TEXT_PREFIX + ""extractHeader"";"
67757,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/easy/text/TextFormatPlugin.java,104,,"  public static final String DELIMITER_PROP = TEXT_PREFIX + ""fieldDelimiter"";"
67758,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/easy/text/TextFormatPlugin.java,106,,"  public static final String QUOTE_PROP = TEXT_PREFIX + ""quote"";"
67759,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/easy/text/TextFormatPlugin.java,107,,"  public static final String QUOTE_ESCAPE_PROP = TEXT_PREFIX + ""escape"";"
67760,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/ischema/Records.java,448,,"                ""Unexpected type "" + sqlTypeName + "" in interval-types branch"");"
67761,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/ischema/Records.java,480,,"                throw new AssertionError(""Unexpected interval type "" + this.INTERVAL_TYPE + "" in interval-types branch"" );"
67762,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/parquet/ParquetTableMetadataUtils.java,412,,"    throw new UnsupportedOperationException(String.format(""Cannot obtain Integer using value %s"", value));"
67763,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/parquet/columnreaders/batchsizing/BatchSizingMemoryUtil.java,131,,"        default : throw new IllegalArgumentException(""Mode ["" + type.getMode().name() + ""] not supported.."");"
67764,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/store/sys/store/VersionedDelegatingStore.java,60,,"    try (@SuppressWarnings(""unused"") Closeable lock = writeLock.open()) {"
67765,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/util/BatchPrinter.java,47,,"          System.out.printf(""| %-15s"", width <= 15 ? column : column.substring(0, 14));"
67766,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/util/BatchPrinter.java,49,,"        System.out.printf(""|\n"");"
67767,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/util/filereader/DirectBufInputStream.java,173,,"      logger.info(""Unable to call fadvise due to: {}"", e.toString());"
67768,./TargetProjects/drill/exec/java-exec/src/main/java/org/apache/drill/exec/vector/complex/fn/JsonReader.java,300,,"              .message(""Unexpected token %s"", parser.getCurrentToken())"
67769,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/PlanTestBase.java,64,,"    sql = ""EXPLAIN PLAN for "" + QueryTestUtil.normalizeQuery(sql);"
67770,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestAggNullable.java,47,,"    assertEquals(String.format(""Received unexpected number of rows in output: expected=%d, received=%s"","
67771,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestBugFixes.java,164,,"            .baselineColumns(""cnt"")"
67772,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestCTASJson.java,32,,"    test(""use dfs.tmp"");"
67773,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestCTASJson.java,33,,"    test(""create table "" + testName + ""_json as select * from cp.`json/"" + testName + "".json`"");"
67774,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestCTASJson.java,33,,"    test(""create table "" + testName + ""_json as select * from cp.`json/"" + testName + "".json`"");"
67775,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestCTASJson.java,33,,"    test(""create table "" + testName + ""_json as select * from cp.`json/"" + testName + "".json`"");"
67776,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestCTASJson.java,35,,"    final String query = ""select * from `"" + testName + ""_json` t1 "";"
67777,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestCTASJson.java,35,,"    final String query = ""select * from `"" + testName + ""_json` t1 "";"
67778,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestCTASJson.java,41,,"          .jsonBaselineFile(""json/"" + testName + "".json"")"
67779,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestCTASJson.java,42,,"          .optionSettingQueriesForTestQuery(""alter session set `store.format` = 'json'"")"
67780,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestCTASJson.java,47,,"      test(""drop table "" + testName + ""_json"");"
67781,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestCTASJson.java,47,,"      test(""drop table "" + testName + ""_json"");"
67782,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestCTASJson.java,48,,"      resetSessionOption(""store.format"");"
67783,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestCTASJson.java,49,,"      resetSessionOption(""store.json.writer.skip_null_fields"");"
67784,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestCTASPartitionFilter.java,52,,"    test(""use dfs.tmp"");"
67785,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestCTASPartitionFilter.java,59,,"    test(""alter session set `planner.slice_target` = 1"");"
67786,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestCTASPartitionFilter.java,60,,"    test(""alter session set `store.partition.hash_distribute` = true"");"
67787,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestCTASPartitionFilter.java,64,,"    testExcludeFilter(query, 1, ""Filter\\("", 24);"
67788,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestDropTable.java,55,,"        .baselineColumns(""ok"", ""summary"")"
67789,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestDropTable.java,56,,"        .baselineValues(true, String.format(""Table [%s] dropped"", tableName))"
67790,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestExampleQueries.java,52,,"      test(""use dfs.tmp"");"
67791,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestExampleQueries.java,59,,"          .baselineColumns(""CONCATOperator"", ""mi"", ""lname"", ""CONCAT"")"
67792,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestExampleQueries.java,59,,"          .baselineColumns(""CONCATOperator"", ""mi"", ""lname"", ""CONCAT"")"
67793,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestExampleQueries.java,60,,"          .baselineValues(""A.Nowmer"", ""A."", ""Nowmer"", ""A.Nowmer"")"
67794,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestExampleQueries.java,61,,"          .baselineValues(""I.Whelply"", ""I."", ""Whelply"", ""I.Whelply"")"
67795,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestExampleQueries.java,62,,"          .baselineValues(null, null, ""Derry"", ""Derry"")"
67796,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestExampleQueries.java,63,,"          .baselineValues(""J.Spence"", ""J."", ""Spence"", ""J.Spence"")"
67797,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestExampleQueries.java,110,,"        .baselineColumns(""CONCAT"", ""n_nationkey"", ""PLUS"", ""n_name"")"
67798,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestExampleQueries.java,161,,"    test(""select count(*) from cp.`customer.json` limit 1"");"
67799,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestExampleQueries.java,439,,"    assertEquals(String.format(""Received unexpected number of rows in output: expected=%d, received=%s"","
67800,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestExampleQueries.java,850,,"        .baselineColumns(""col"")"
67801,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestExampleQueries.java,1059,,"    test(""use dfs.tmp; "" +"
67802,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFrameworkTest.java,63,,"    expectedSchema.add(Pair.of(SchemaPath.getSimplePath(""col""), majorType));"
67803,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFrameworkTest.java,114,,"        .sqlQuery(""select employee_id, first_name, last_name from cp.`testframework/small_test_data.json`"")"
67804,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFrameworkTest.java,116,,"        .csvBaselineFile(""testframework/small_test_data.tsv"")"
67805,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFrameworkTest.java,118,,"        .baselineColumns(""employee_id"", ""first_name"", ""last_name"")"
67806,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFrameworkTest.java,118,,"        .baselineColumns(""employee_id"", ""first_name"", ""last_name"")"
67807,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFrameworkTest.java,118,,"        .baselineColumns(""employee_id"", ""first_name"", ""last_name"")"
67808,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFrameworkTest.java,366,,"        .optionSettingQueriesForTestQuery(""alter system set `store.json.all_text_mode` = true"")"
67809,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,67,,"    String query = ""SELECT "" +"
67810,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,116,,"        .baselineColumns(""DEC9_1"", ""DEC9_2"", ""DEC9_3"", ""DEC9_4"", ""DEC18_1"", ""DEC18_2"", ""DEC18_3"", ""DEC18_4"", ""DEC28_1"","
67811,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,116,,"        .baselineColumns(""DEC9_1"", ""DEC9_2"", ""DEC9_3"", ""DEC9_4"", ""DEC18_1"", ""DEC18_2"", ""DEC18_3"", ""DEC18_4"", ""DEC28_1"","
67812,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,116,,"        .baselineColumns(""DEC9_1"", ""DEC9_2"", ""DEC9_3"", ""DEC9_4"", ""DEC18_1"", ""DEC18_2"", ""DEC18_3"", ""DEC18_4"", ""DEC28_1"","
67813,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,116,,"        .baselineColumns(""DEC9_1"", ""DEC9_2"", ""DEC9_3"", ""DEC9_4"", ""DEC18_1"", ""DEC18_2"", ""DEC18_3"", ""DEC18_4"", ""DEC28_1"","
67814,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,116,,"        .baselineColumns(""DEC9_1"", ""DEC9_2"", ""DEC9_3"", ""DEC9_4"", ""DEC18_1"", ""DEC18_2"", ""DEC18_3"", ""DEC18_4"", ""DEC28_1"","
67815,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,116,,"        .baselineColumns(""DEC9_1"", ""DEC9_2"", ""DEC9_3"", ""DEC9_4"", ""DEC18_1"", ""DEC18_2"", ""DEC18_3"", ""DEC18_4"", ""DEC28_1"","
67816,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,116,,"        .baselineColumns(""DEC9_1"", ""DEC9_2"", ""DEC9_3"", ""DEC9_4"", ""DEC18_1"", ""DEC18_2"", ""DEC18_3"", ""DEC18_4"", ""DEC28_1"","
67817,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,116,,"        .baselineColumns(""DEC9_1"", ""DEC9_2"", ""DEC9_3"", ""DEC9_4"", ""DEC18_1"", ""DEC18_2"", ""DEC18_3"", ""DEC18_4"", ""DEC28_1"","
67818,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,116,,"        .baselineColumns(""DEC9_1"", ""DEC9_2"", ""DEC9_3"", ""DEC9_4"", ""DEC18_1"", ""DEC18_2"", ""DEC18_3"", ""DEC18_4"", ""DEC28_1"","
67819,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,117,,"            ""DEC28_2"", ""DEC28_3"", ""DEC28_4"", ""DEC28_5"", ""DEC38_1"", ""DEC38_2"", ""DEC38_3"", ""DEC38_4"", ""DEC38_5"")"
67820,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,117,,"            ""DEC28_2"", ""DEC28_3"", ""DEC28_4"", ""DEC28_5"", ""DEC38_1"", ""DEC38_2"", ""DEC38_3"", ""DEC38_4"", ""DEC38_5"")"
67821,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,117,,"            ""DEC28_2"", ""DEC28_3"", ""DEC28_4"", ""DEC28_5"", ""DEC38_1"", ""DEC38_2"", ""DEC38_3"", ""DEC38_4"", ""DEC38_5"")"
67822,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,117,,"            ""DEC28_2"", ""DEC28_3"", ""DEC28_4"", ""DEC28_5"", ""DEC38_1"", ""DEC38_2"", ""DEC38_3"", ""DEC38_4"", ""DEC38_5"")"
67823,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,117,,"            ""DEC28_2"", ""DEC28_3"", ""DEC28_4"", ""DEC28_5"", ""DEC38_1"", ""DEC38_2"", ""DEC38_3"", ""DEC38_4"", ""DEC38_5"")"
67824,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,117,,"            ""DEC28_2"", ""DEC28_3"", ""DEC28_4"", ""DEC28_5"", ""DEC38_1"", ""DEC38_2"", ""DEC38_3"", ""DEC38_4"", ""DEC38_5"")"
67825,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,117,,"            ""DEC28_2"", ""DEC28_3"", ""DEC28_4"", ""DEC28_5"", ""DEC38_1"", ""DEC38_2"", ""DEC38_3"", ""DEC38_4"", ""DEC38_5"")"
67826,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,117,,"            ""DEC28_2"", ""DEC28_3"", ""DEC28_4"", ""DEC28_5"", ""DEC38_1"", ""DEC38_2"", ""DEC38_3"", ""DEC38_4"", ""DEC38_5"")"
67827,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,117,,"            ""DEC28_2"", ""DEC28_3"", ""DEC28_4"", ""DEC28_5"", ""DEC38_1"", ""DEC38_2"", ""DEC38_3"", ""DEC38_4"", ""DEC38_5"")"
67828,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,118,,"        .baselineValues(new BigDecimal(""1235""), new BigDecimal(""1234""), new BigDecimal(""-1234""),"
67829,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,118,,"        .baselineValues(new BigDecimal(""1235""), new BigDecimal(""1234""), new BigDecimal(""-1234""),"
67830,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,119,,"          new BigDecimal(""-1234""), new BigDecimal(""99999912400""), new BigDecimal(""99999912399""),"
67831,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,120,,"          new BigDecimal(""-99999912399""), new BigDecimal(""-99999912399""),"
67832,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,122,,"          new BigDecimal(""12345678912345678912""), new BigDecimal(""-12345678912345678912""),"
67833,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,122,,"          new BigDecimal(""12345678912345678912""), new BigDecimal(""-12345678912345678912""),"
67834,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,125,,"          new BigDecimal(""1234567891234567891234567891234567891""),"
67835,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,126,,"          new BigDecimal(""-1234567891234567891234567891234567891""),"
67836,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,435,,"        ""from cp.`employee.json` where employee_id = 1"";"
67837,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,504,,"          Double.valueOf(""-1200.0""), Double.valueOf(""1234.0""), Double.valueOf(""-1234.0""), Double.valueOf(""0.0""),"
67838,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,734,,"        .baselineColumns(""col1"", ""col2"", ""col3"")"
67839,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,734,,"        .baselineColumns(""col1"", ""col2"", ""col3"")"
67840,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,734,,"        .baselineColumns(""col1"", ""col2"", ""col3"")"
67841,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,807,,"    String query = ""select "" +"
67842,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,840,,"        .baselineColumns(""col1"", ""col2"", ""col3"", ""col4"", ""col5"", ""col6"", ""col7"")"
67843,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,840,,"        .baselineColumns(""col1"", ""col2"", ""col3"", ""col4"", ""col5"", ""col6"", ""col7"")"
67844,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,840,,"        .baselineColumns(""col1"", ""col2"", ""col3"", ""col4"", ""col5"", ""col6"", ""col7"")"
67845,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsQuery.java,840,,"        .baselineColumns(""col1"", ""col2"", ""col3"", ""col4"", ""col5"", ""col6"", ""col7"")"
67846,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsWithTypeExpoQueries.java,62,,"    expectedSchema.add(Pair.of(SchemaPath.getSimplePath(""col""), majorType));"
67847,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsWithTypeExpoQueries.java,257,,"        ""limit 0"";"
67848,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsWithTypeExpoQueries.java,297,,"        ""from cp.`tpch/region.parquet` "" +"
67849,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsWithTypeExpoQueries.java,350,,"        ""from cp.`tpch/nation.parquet` "" +"
67850,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsWithTypeExpoQueries.java,453,,"    expectedSchema.add(Pair.of(SchemaPath.getSimplePath(""col1""), majorType1));"
67851,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsWithTypeExpoQueries.java,454,,"    expectedSchema.add(Pair.of(SchemaPath.getSimplePath(""col2""), majorType2));"
67852,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestFunctionsWithTypeExpoQueries.java,455,,"    expectedSchema.add(Pair.of(SchemaPath.getSimplePath(""col3""), majorType3));"
67853,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,45,,"    assertEquals(""Number of output rows"", expectedRecordCount, actualRecordCount);"
67854,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,51,,"    String query = ""select t1.a1, t1.b1, t2.a2, t2.b2 from cp.`jsoninput/nullable1.json` t1 "" +"
67855,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,53,,"      "" on t1.b1 = t2.b2"";"
67856,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,138,,"            ""SELECT * """
67857,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,155,,"            + ""  LEFT OUTER JOIN """
67858,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,156,,"            + ""    ( SELECT key, data """
67859,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,157,,"            + ""        FROM cp.`jsoninput/nullableOrdered2.json` t2 """
67860,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,159,,"            + ""    USING ( key )"";"
67861,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,228,,"            + ""from ( SELECT key, data """
67862,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,229,,"            + ""         FROM cp.`jsoninput/nullableOrdered1.json` """
67863,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,232,,"            + ""     ( SELECT key, data """
67864,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,233,,"            + ""         FROM cp.`jsoninput/nullableOrdered2.json` """
67865,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,234,,"            + ""         ORDER BY 1 ASC NULLS FIRST ) t2 """
67866,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,274,,"            + ""         ORDER BY 1 ASC NULLS LAST  ) t2 """
67867,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,389,,"    final String query = ""SELECT * FROM """
67868,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,391,,"        + ""cp.`jsoninput/nullableOrdered2.json` t2 """
67869,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,438,,"        .baselineValues(null, ""L_null_1"", ""R_null_1"", null)"
67870,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,440,,"        .baselineValues(""A"", ""L_A_1"", ""R_A_1"", ""A"")"
67871,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,471,,"          ""cp.`jsoninput/nullEqualJoin1.json` t1 JOIN "" +"
67872,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,472,,"          ""cp.`jsoninput/nullEqualJoin2.json` t2 "" +"
67873,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestJoinNullable.java,501,,"          ""ON t1.key = t2.key "" +"
67874,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestOutOfMemoryOutcome.java,45,,"      + ""\""address\"":\"""" + endpoint.getAddress() + ""\"","""
67875,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestPartitionFilter.java,90,,"    testExcludeFilter(query, 1, ""Filter\\("", 10);"
67876,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestProjectPushDown.java,147,,"    final String firstExpected = ""\""columns\"" : [ \""`fname`\"", \""`fcolumns`[0]\"", \""`fmy`.`field`\"", \""`freally`.`nested`.`field`[0]\"", \""`fcolumns`[1]\"" ],"";"
67877,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaCommands.java,111,,"      run(""drop table if exists %s"", table);"
67878,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaCommands.java,144,,"      String.format(""dfs.tmp.%s"", table)));"
67879,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaCommands.java,173,,"      run(""create table %s as select 'a' as c from (values(1))"", table);"
67880,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaCommands.java,175,,"        .sqlQuery(""create schema (c varchar not null) for table %s"", table)"
67881,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaCommands.java,177,,"        .baselineColumns(""ok"", ""summary"")"
67882,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaCommands.java,178,,"        .baselineValues(true, String.format(""Created schema for [%s]"", table))"
67883,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaCommands.java,533,,"      run(""drop schema for table %s"", table);"
67884,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaCommands.java,660,,"        .baselineColumns(""schema"")"
67885,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaCommands.java,785,,"      thrown.expectMessage(""RESOURCE ERROR: Schema does not exist"");"
67886,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaCommands.java,851,,"        .baselineValues(true, String.format(""Schema for [%s] was updated"", schemaFile.getPath()))"
67887,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaCommands.java,859,,"      assertEquals(""col1"", schema.fullName(0));"
67888,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaCommands.java,860,,"      assertEquals(""col2"", schema.fullName(1));"
67889,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaCommands.java,891,,"      expectedProperties.put(""prop1"", ""a"");"
67890,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaCommands.java,893,,"      expectedProperties.put(""prop3"", ""c"");"
67891,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaCommands.java,926,,"      assertEquals(""col3"", schema.fullName(2));"
67892,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaCommands.java,1052,,"        ""properties ('prop1' = 'a', 'prop2' = 'b', 'prop3' = 'c', 'prop4' = 'd')"", schemaFile.getPath());"
67893,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaWithTableFunction.java,57,,"    String table = TABLE_NAME.replace(TABLE_PLACEHOLDER, ""cars.csvh"");"
67894,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaWithTableFunction.java,63,,"      .baselineColumns(""Year"")"
67895,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaWithTableFunction.java,85,,"    assertFalse(plan.contains(""schema=null""));"
67896,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSchemaWithTableFunction.java,169,,"    thrown.expectMessage(""VALIDATION ERROR"");"
67897,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSelectWithOption.java,222,,"        ""c|d"");"
67898,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestSelectivity.java,36,,"        String query1 = String.format(""alter session set `planner.filter.min_selectivity_estimate_factor` = %f"", -0.5);"
67899,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestStarQueries.java,53,,"      .baselineColumns(""n_name"", ""n_nationkey"", ""n_name0"", ""n_regionkey"", ""n_comment"", ""n_name00"", ""n_name1"")"
67900,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestStarQueries.java,53,,"      .baselineColumns(""n_name"", ""n_nationkey"", ""n_name0"", ""n_regionkey"", ""n_comment"", ""n_name00"", ""n_name1"")"
67901,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestStarQueries.java,53,,"      .baselineColumns(""n_name"", ""n_nationkey"", ""n_name0"", ""n_regionkey"", ""n_comment"", ""n_name00"", ""n_name1"")"
67902,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestStarQueries.java,53,,"      .baselineColumns(""n_name"", ""n_nationkey"", ""n_name0"", ""n_regionkey"", ""n_comment"", ""n_name00"", ""n_name1"")"
67903,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestStarQueries.java,53,,"      .baselineColumns(""n_name"", ""n_nationkey"", ""n_name0"", ""n_regionkey"", ""n_comment"", ""n_name00"", ""n_name1"")"
67904,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestStarQueries.java,53,,"      .baselineColumns(""n_name"", ""n_nationkey"", ""n_name0"", ""n_regionkey"", ""n_comment"", ""n_name00"", ""n_name1"")"
67905,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestStarQueries.java,53,,"      .baselineColumns(""n_name"", ""n_nationkey"", ""n_name0"", ""n_regionkey"", ""n_comment"", ""n_name00"", ""n_name1"")"
67906,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestStarQueries.java,71,,"            ""n_nationkey0"", ""n_name1"", ""n_regionkey0"", ""n_comment0"", ""n_name00"", ""n_name10"")"
67907,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestStarQueries.java,71,,"            ""n_nationkey0"", ""n_name1"", ""n_regionkey0"", ""n_comment0"", ""n_name00"", ""n_name10"")"
67908,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestStarQueries.java,71,,"            ""n_nationkey0"", ""n_name1"", ""n_regionkey0"", ""n_comment0"", ""n_name00"", ""n_name10"")"
67909,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,70,,"        .baselineColumns(""n_regionkey"")"
67910,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,78,,"         ""union all "" +"
67911,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,86,,"        .baselineColumns(""n_nationkey"")"
67912,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,179,,"        .baselineColumns(""n_name"", ""n_nationkey"")"
67913,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,390,,"    String rootBoolean = ""/store/json/booleanData.json"";"
67914,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,409,,"        .baselineColumns(""key"")"
67915,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,413,,"        .sqlQuery(""select key from cp.`%s` "" +"
67916,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,522,,"          ""select key from cp.`%s`"","
67917,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,639,,"        "".*UnionAll.*\n"" +"
67918,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,640,,"            "".*SelectionVectorRemover.*\n"" +"
67919,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,641,,"                "".*Filter.*\n"" +"
67920,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,645,,"                    "".*Scan.*columns=\\[`r_regionkey`\\].*""};"
67921,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,674,,"    final String[] expectedPlan = {""Project.*\n"" +"
67922,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,676,,"            "".*Project.*\n"" +"
67923,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,744,,"        ""(select n_nationkey, n_name, n_comment from cp.`tpch/nation.parquet` \n"" +"
67924,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,745,,"        ""union all select r_regionkey, r_name, r_comment  from cp.`tpch/region.parquet`)"";"
67925,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,777,,"            "".*Scan.*columns=\\[`n_nationkey`\\].*\n"" +"
67926,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,909,,"        ""                1 year_total\n"" +"
67927,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,944,,"        ""                        1 year_total\n"" +"
67928,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,946,,"        ""                 UNION ALL \n"" +"
67929,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,1022,,"    final String l = ""/multilevel/parquet/1994"";"
67930,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionAll.java,1023,,"    final String r = ""/multilevel/parquet/1995"";"
67931,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionDistinct.java,65,,"        .baselineColumns(""n_regionkey"")"
67932,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionDistinct.java,73,,"        ""union \n"" +"
67933,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionDistinct.java,81,,"        .baselineColumns(""n_nationkey"")"
67934,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionDistinct.java,191,,"        .baselineColumns(""n_name"", ""n_nationkey"")"
67935,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionDistinct.java,406,,"        .baselineColumns(""key"")"
67936,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionDistinct.java,628,,"          ""(select n_nationkey, n_name, n_comment from cp.`tpch/nation.parquet` "" +"
67937,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUnionDistinct.java,629,,"          ""union select r_regionkey, r_name, r_comment  from cp.`tpch/region.parquet`)"")"
67938,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/TestUntypedNull.java,128,,"        .add(""coal"", UNTYPED_NULL_TYPE);"
67939,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/DrillSeparatePlanningTest.java,121,,"    client.alterSession(""planner.slice_target"", 1);"
67940,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/TestEmptyInputSql.java,61,,"      .addNullable(""key"", TypeProtos.MinorType.INT)"
67941,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/TestSSLConfig.java,47,,"    config.put(ExecConstants.HTTP_KEYSTORE_PASSWORD, ""root"");"
67942,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/TestSSLConfig.java,68,,"    config.put(ExecConstants.HTTP_KEYSTORE_PATH, ""/root"");"
67943,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/TestWindowFunctions.java,50,,"        ""from cp.`tpch/nation.parquet`"";"
67944,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/TestWindowFunctions.java,54,,"        ""Scan.*columns=\\[`n_nationKey`\\].*""};"
67945,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/TestWindowFunctions.java,55,,"    final String[] excludedPatterns = {""Scan.*columns=\\[`\\*`\\].*""};"
67946,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/TestWindowFunctions.java,61,,"        .baselineColumns(""col1"", ""col2"")"
67947,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/TestWindowFunctions.java,94,,"        ""from cp.`tpch/nation.parquet` \n"" +"
67948,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/TestWindowFunctions.java,106,,"        .baselineColumns(""col"")"
67949,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/TestWindowFunctions.java,153,,"          ""from cp.`tpch/nation.parquet` t \n"" +"
67950,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/TestWindowFunctions.java,182,,"          ""order by n_nationKey"";"
67951,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/TestWindowFunctions.java,418,,"      final String[] excludedPatterns = {""Scan.*columns=\\[`\\*`\\]""};"
67952,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/TestWindowFunctions.java,614,,"    String root = ""/store/text/data/t.json"";"
67953,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/client/ConnectTriesPropertyTestClusterBits.java,126,,"    props.setProperty(""tries"", ""2"");"
67954,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/client/ConnectTriesPropertyTestClusterBits.java,159,,"    DrillbitEndpoint fakeEndPoint1 = DrillbitEndpoint.newBuilder().setAddress(""127.0.0.1"").setUserPort(5000).build();"
67955,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/client/DrillClientTest.java,44,,"    final String drillBitConnection = ""10.10.100.161"";"
67956,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/client/DrillClientTest.java,82,,"    assertEquals(endpoint.getAddress(), ""10.10.100.162"");"
67957,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/client/DrillClientTest.java,132,,"      logger.error(""Exception "", e);"
67958,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/compile/TestLargeFileCompilation.java,85,,"      sb.append(""employee_id+"").append(i).append("" as c"").append(i).append("", "");"
67959,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/compile/TestLargeFileCompilation.java,187,,"      run(""use dfs.tmp"");"
67960,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/coord/zk/TestPathUtils.java,34,,"    final String expected = ""/a/b/c"";"
67961,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/coord/zk/TestPathUtils.java,35,,"    Assert.assertEquals(""invalid path"", expected, actual);"
67962,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/coord/zk/TestZookeeperClient.java,139,,"    assertEquals(""Versions should match"", 0, version0.getVersion());"
67963,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestSqlPatterns.java,124,,"    RegexpUtil.SqlPatternInfo patternInfo = RegexpUtil.sqlToRegexLike(""A%B"");"
67964,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestSqlPatterns.java,215,,"    RegexpUtil.SqlPatternInfo patternInfo = new RegexpUtil.SqlPatternInfo(RegexpUtil.SqlPatternType.STARTS_WITH, """", ""ABC"");"
67965,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestSqlPatterns.java,218,,"    setDrillBuf(""ABCD"");"
67966,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestSqlPatterns.java,258,,"    setDrillBuf(""¤EÀsÆW°ê»Ú®i¶T¤¤¤ß3¼Ó®i¶TÆU2~~"");"
67967,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,43,,"        .baselineColumns(""res1"")"
67968,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,61,,"        .baselineValues(""abc"")"
67969,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,238,,"        .sqlQuery("" SELECT  id FROM ("" +"
67970,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,239,,"            ""VALUES('A'),('AB'),('ABC'), ('ABD'), ('ABCD'),('ABCDE'),"" +"
67971,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,245,,"        .baselineValues(""ABC"")"
67972,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,246,,"        .baselineValues(""ABCD"")"
67973,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,247,,"        .baselineValues(""ABCDE"")"
67974,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,248,,"        .baselineValues(""ABC$XYZ"")"
67975,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,256,,"            ""(''),('abcd'), ('x'), ('xyz'), ('%')) tbl(id)"" +"
67976,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,262,,"        .baselineValues(""ABD"")"
67977,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,284,,"        .baselineValues(""AABCD"")"
67978,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,306,,"            ""VALUES('A'),('AB'),('ABC'),('ABCD'),('ABCDE'),('AABCD'),"" +"
67979,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,307,,"            ""('ABABCD'),('ABC$XYZ'), (''),('abcd'), ('x'), ('xyz'), ('%')) tbl(id)"" +"
67980,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,319,,"            "" ('xyz'), ('%')) tbl(id)"" +"
67981,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,330,,"            ""('xyz'), ('%')) tbl(id)"" +"
67982,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,334,,"        .baselineValues(""ABC¤EÀsÆW°ê»Ú®i¶T¤¤¤ß3¼Ó®i¶TÆU2~~"")"
67983,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,375,,"        .baselineValues(""ABABCD"")"
67984,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,436,,"            ""VALUES('A'),('AB'),('ABC'),('ABCD'),('ABCDE'),('AABCD'),('ABABCD'),"" +"
67985,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,466,,"        .baselineValues(""¶TÆU2~~"")"
67986,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,837,,"        .baselineValues(""AB%C"")"
67987,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,1159,,"        .baselineValues(""aeiou"")"
67988,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,1194,,"            ""VALUES('abc')) tbl(id)"" +"
67989,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,1381,,"        ""FROM cp.`tpch/region.parquet`"";"
67990,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,1525,,"        .sqlQuery(""select\n"" +"
67991,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,1532,,"            ""from (values(1))"")"
67992,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,1534,,"        .baselineColumns(""col_upper"", ""col_lower"", ""col_space"", ""col_special"", ""col_empty"", ""col_null"")"
67993,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestStringFunctions.java,1534,,"        .baselineColumns(""col_upper"", ""col_lower"", ""col_space"", ""col_special"", ""col_empty"", ""col_null"")"
67994,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestTypeFns.java,50,,"    doTypeOfTest(""INT"");"
67995,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestTypeFns.java,51,,"    doTypeOfTest(""BIGINT"");"
67996,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestTypeFns.java,52,,"    doTypeOfTest(""VARCHAR"");"
67997,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestTypeFns.java,54,,"    doTypeOfTest(""DOUBLE"", ""FLOAT8"");"
67998,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestTypeFns.java,55,,"    doTypeOfTestSpecial(""a"", ""true"", ""BIT"");"
67999,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestTypeFns.java,56,,"    doTypeOfTestSpecial(""a"", ""CURRENT_DATE"", ""DATE"");"
