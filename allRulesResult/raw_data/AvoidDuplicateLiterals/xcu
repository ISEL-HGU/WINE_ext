72000,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterCnfConversionTest.java,217,,"                    FilterTestUtils.selector(""col5"", ""val5"")"
72001,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterCnfConversionTest.java,217,,"                    FilterTestUtils.selector(""col5"", ""val5"")"
72002,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterCnfConversionTest.java,231,,"                FilterTestUtils.selector(""col3"", ""val3"")"
72003,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterCnfConversionTest.java,237,,"                FilterTestUtils.selector(""col2"", ""val22""), // selecting different value"
72004,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterCnfConversionTest.java,241,,"                FilterTestUtils.selector(""col1"", ""val11"")"
72005,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,161,,"      .add(makeDefaultSchemaRow(""7"", ""HELLO"", ImmutableList.of(""foo""), null, null, null, null))"
72006,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,161,,"      .add(makeDefaultSchemaRow(""7"", ""HELLO"", ImmutableList.of(""foo""), null, null, null, null))"
72007,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,162,,"      .add(makeDefaultSchemaRow(""8"", ""abc"", ImmutableList.of(""bar""), null, null, null, null))"
72008,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,162,,"      .add(makeDefaultSchemaRow(""8"", ""abc"", ImmutableList.of(""bar""), null, null, null, null))"
72009,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,187,,"      assertFilterMatches(new SelectorDimFilter(""dim1"", null, null), ImmutableList.of(""0""));"
72010,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,217,,"      assertFilterMatches(new NoBitmapSelectorDimFilter(""dim1"", ""super-null"", JS_EXTRACTION_FN), ImmutableList.of(""0""));"
72011,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,219,,"      assertFilterMatches(new NoBitmapSelectorDimFilter(""dim1"", ""super-"", JS_EXTRACTION_FN), ImmutableList.of(""0""));"
72012,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,222,,"    assertFilterMatches(new NoBitmapSelectorDimFilter(""dim1"", ""super-2"", JS_EXTRACTION_FN), ImmutableList.of(""2""));"
72013,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,225,,"    assertFilterMatches(new NoBitmapSelectorDimFilter(""dim1"", ""super-abc"", JS_EXTRACTION_FN), ImmutableList.of(""5"", ""8""));"
72014,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,235,,"              new SelectorDimFilter(""dim2"", ""a"", null),"
72015,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,277,,"            new SelectorDimFilter(""dim1"", ""NOT_A_VALUE"", null)"
72016,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,285,,"              new SelectorDimFilter(""dim2"", ""super-a"", JS_EXTRACTION_FN),"
72017,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,339,,"            new NoBitmapSelectorDimFilter(""dim2"", ""super-foo"", JS_EXTRACTION_FN)"
72018,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,346,,"            new SelectorDimFilter(""dim1"", ""super-HELLO"", JS_EXTRACTION_FN),"
72019,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,497,,"    assertFilterMatches(new NoBitmapSelectorDimFilter(""dim3"", null, null), ImmutableList.of(""0"", ""1"", ""2"", ""3"", ""4"", ""5"", ""6"", ""7"", ""8"", ""9""));"
72020,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,554,,"    assertFilterMatches(new NoBitmapSelectorDimFilter(""dim4"", null, null), ImmutableList.of(""0"", ""1"", ""2"", ""3"", ""4"", ""5"", ""6"", ""7"", ""8"", ""9""));"
72021,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterPartitionTest.java,615,,"        new SelectorDimFilter(""dim0"", ""6"", null),"
72022,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FloatAndDoubleFilteringTest.java,74,,"  private static final String FLOAT_COLUMN = ""flt"";"
72023,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FloatAndDoubleFilteringTest.java,75,,"  private static final String DOUBLE_COLUMN = ""dbl"";"
72024,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FloatAndDoubleFilteringTest.java,86,,"                  new StringDimensionSchema(""dim0""),"
72025,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FloatAndDoubleFilteringTest.java,179,,"        new BoundDimFilter(columnName, ""2.0"", ""5.0"", false, false, null, null, StringComparators.NUMERIC),"
72026,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FloatAndDoubleFilteringTest.java,189,,"        new BoundDimFilter(columnName, ""1.0"", ""4.0"", true, true, null, null, StringComparators.NUMERIC),"
72027,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/InFilterTest.java,74,,"      PARSER.parseBatch(ImmutableMap.of(""dim0"", ""a"", ""dim1"", """", ""dim2"", ImmutableList.of(""a"", ""b""))).get(0),"
72028,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/InFilterTest.java,74,,"      PARSER.parseBatch(ImmutableMap.of(""dim0"", ""a"", ""dim1"", """", ""dim2"", ImmutableList.of(""a"", ""b""))).get(0),"
72029,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/InFilterTest.java,74,,"      PARSER.parseBatch(ImmutableMap.of(""dim0"", ""a"", ""dim1"", """", ""dim2"", ImmutableList.of(""a"", ""b""))).get(0),"
72030,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/InFilterTest.java,225,,"        toInFilter(""dim3"", null, (String) null),"
72031,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/InFilterTest.java,273,,"          toInFilterWithFn(""dim2"", superFn, ""super-null"", ""super-a"", ""super-b""),"
72032,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/InFilterTest.java,325,,"        ""a"", ""HELLO"","
72033,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/InvalidFilteringTest.java,60,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"", ""dim3"")),"
72034,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/InvalidFilteringTest.java,60,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"", ""dim3"")),"
72035,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/InvalidFilteringTest.java,60,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"", ""dim3"")),"
72036,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/InvalidFilteringTest.java,99,,"            new HyperUniquesAggregatorFactory(""hyperion"", ""dim1""),"
72037,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/JavaScriptFilterTest.java,88,,"    assertFilterMatchesSkipVectorize(newJavaScriptDimFilter(""dim0"", jsNullFilter, null), ImmutableList.of());"
72038,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/JavaScriptFilterTest.java,98,,"      assertFilterMatchesSkipVectorize(newJavaScriptDimFilter(""dim1"", jsNullFilter, null), ImmutableList.of(""0""));"
72039,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/JavaScriptFilterTest.java,117,,"          newJavaScriptDimFilter(""dim2"", jsNullFilter, null),"
72040,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/JavaScriptFilterTest.java,137,,"        newJavaScriptDimFilter(""dim3"", jsNullFilter, null),"
72041,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/JavaScriptFilterTest.java,149,,"        newJavaScriptDimFilter(""dim4"", jsNullFilter, null),"
72042,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/JavaScriptFilterTest.java,161,,"        ""1"", ""HELLO"","
72043,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/JavaScriptFilterTest.java,164,,"        ""abc"", ""UNKNOWN"""
72044,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/LikeFilterTest.java,66,,"      PARSER.parseBatch(ImmutableMap.of(""dim0"", ""0"", ""dim1"", """")).get(0),"
72045,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/LikeFilterTest.java,66,,"      PARSER.parseBatch(ImmutableMap.of(""dim0"", ""0"", ""dim1"", """")).get(0),"
72046,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/LongFilteringTest.java,72,,"  private static final String LONG_COLUMN = ""lng"";"
72047,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/LongFilteringTest.java,82,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"", ""dim3"")),"
72048,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/LongFilteringTest.java,82,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"", ""dim3"")),"
72049,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/LongFilteringTest.java,82,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"", ""dim3"")),"
72050,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/LongFilteringTest.java,154,,"        new SelectorDimFilter(LONG_COLUMN, ""100000001.0"", null),"
72051,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/LongFilteringTest.java,189,,"        new BoundDimFilter(LONG_COLUMN, ""1.9"", ""5.9"", true, true, null, null, StringComparators.NUMERIC),"
72052,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/NotFilterEvaluateTest.java,59,,"      PARSER.parseBatch(ImmutableMap.of(""dim0"", ""0"")).get(0),"
72053,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/OrFilterTest.java,65,,"      PARSER.parseBatch(ImmutableMap.of(""dim0"", ""0"", ""dim1"", ""0"")).get(0),"
72054,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/OrFilterTest.java,65,,"      PARSER.parseBatch(ImmutableMap.of(""dim0"", ""0"", ""dim1"", ""0"")).get(0),"
72055,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/PredicateValueMatcherFactoryTest.java,329,,"        ImmutableList.of(""val""),"
72056,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/RegexFilterTest.java,72,,"    assertFilterMatches(new RegexDimFilter(""dim0"", "".*"", null), ImmutableList.of(""0"", ""1"", ""2"", ""3"", ""4"", ""5""));"
72057,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/RegexFilterTest.java,82,,"      assertFilterMatches(new RegexDimFilter(""dim1"", "".*"", null), ImmutableList.of(""1"", ""2"", ""3"", ""4"", ""5""));"
72058,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/RegexFilterTest.java,98,,"      assertFilterMatches(new RegexDimFilter(""dim2"", "".*"", null), ImmutableList.of(""0"", ""3"", ""4""));"
72059,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/RegexFilterTest.java,111,,"    assertFilterMatches(new RegexDimFilter(""dim3"", """", null), ImmutableList.of());"
72060,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/RegexFilterTest.java,120,,"    assertFilterMatches(new RegexDimFilter(""dim4"", """", null), ImmutableList.of());"
72061,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/RegexFilterTest.java,132,,"      assertFilterMatches(new RegexDimFilter(""dim1"", "".*ANYMORE"", changeNullFn), ImmutableList.of(""0""));"
72062,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SearchQueryFilterTest.java,79,,"    assertFilterMatches(new SearchQueryDimFilter(""dim0"", specForValue(""""), null), ImmutableList.of(""0"", ""1"", ""2"", ""3"", ""4"", ""5""));"
72063,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SearchQueryFilterTest.java,90,,"          new SearchQueryDimFilter(""dim1"", specForValue(""""), null),"
72064,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SearchQueryFilterTest.java,111,,"      assertFilterMatches(new SearchQueryDimFilter(""dim2"", specForValue(""""), null), ImmutableList.of(""0"", ""3"", ""4""));"
72065,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SearchQueryFilterTest.java,127,,"    assertFilterMatches(new SearchQueryDimFilter(""dim3"", specForValue(""""), null), ImmutableList.of());"
72066,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SearchQueryFilterTest.java,137,,"    assertFilterMatches(new SearchQueryDimFilter(""dim4"", specForValue(""""), null), ImmutableList.of());"
72067,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SearchQueryFilterTest.java,152,,"          new SearchQueryDimFilter(""dim1"", specForValue(""ANYMORE""), changeNullFn),"
72068,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SelectorFilterTest.java,71,,"        new SelectorDimFilter(""dim0"", null, new TimeDimExtractionFn(""yyyy-MM-dd"", ""yyyy-MM"", true)),"
72069,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SelectorFilterTest.java,71,,"        new SelectorDimFilter(""dim0"", null, new TimeDimExtractionFn(""yyyy-MM-dd"", ""yyyy-MM"", true)),"
72070,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SelectorFilterTest.java,71,,"        new SelectorDimFilter(""dim0"", null, new TimeDimExtractionFn(""yyyy-MM-dd"", ""yyyy-MM"", true)),"
72071,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SelectorFilterTest.java,75,,"        new SelectorDimFilter(""vdim0"", null, new TimeDimExtractionFn(""yyyy-MM-dd"", ""yyyy-MM"", true)),"
72072,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SelectorFilterTest.java,79,,"        new SelectorDimFilter(""timeDim"", null, new TimeDimExtractionFn(""yyyy-MM-dd"", ""yyyy-MM"", true)),"
72073,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SelectorFilterTest.java,123,,"      assertFilterMatches(new SelectorDimFilter(""dim1"", null, null), ImmutableList.of(""0""));"
72074,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SelectorFilterTest.java,141,,"      assertFilterMatches(new SelectorDimFilter(""vdim1"", null, null), ImmutableList.of(""0""));"
72075,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SelectorFilterTest.java,158,,"      assertFilterMatches(new SelectorDimFilter(""dim2"", null, null), ImmutableList.of(""1"", ""2"", ""5""));"
72076,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SelectorFilterTest.java,173,,"    assertFilterMatches(new SelectorDimFilter(""dim3"", null, null), ImmutableList.of(""0"", ""1"", ""2"", ""3"", ""4"", ""5""));"
72077,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SelectorFilterTest.java,187,,"    assertFilterMatches(new SelectorDimFilter(""dim4"", null, null), ImmutableList.of(""0"", ""1"", ""2"", ""3"", ""4"", ""5""));"
72078,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SelectorFilterTest.java,212,,"        ""1"", ""HELLO"","
72079,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SelectorFilterTest.java,215,,"        ""abc"", ""UNKNOWN"""
72080,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SelectorFilterTest.java,368,,"      assertFilterMatches(new SelectorDimFilter(""vf0"", ""0"", null), ImmutableList.of(""0"", ""4""));"
72081,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SelectorFilterTest.java,369,,"      assertFilterMatches(new SelectorDimFilter(""vd0"", ""0"", null), ImmutableList.of(""0"", ""2""));"
72082,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SelectorFilterTest.java,370,,"      assertFilterMatches(new SelectorDimFilter(""vl0"", ""0"", null), ImmutableList.of(""0"", ""3""));"
72083,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterBonusTest.java,84,,"  private static Interval DATA_INTERVAL = Intervals.of(""2013-01-01/2013-01-07"");"
72084,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterBonusTest.java,86,,"      new CountAggregatorFactory(""rows""),"
72085,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterBonusTest.java,87,,"      new LongSumAggregatorFactory(""val"", ""val"")"
72086,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterBonusTest.java,89,,"  private static List<String> DIMS = Lists.newArrayList(""dim"", ""dim.geo"");"
72087,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterBonusTest.java,89,,"  private static List<String> DIMS = Lists.newArrayList(""dim"", ""dim.geo"");"
72088,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterBonusTest.java,142,,"            DateTimes.of(""2013-01-01"").getMillis(),"
72089,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterBonusTest.java,145,,"                ""timestamp"", DateTimes.of(""2013-01-01"").toString(),"
72090,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterBonusTest.java,146,,"                ""dim"", ""foo"","
72091,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterBonusTest.java,154,,"            DateTimes.of(""2013-01-02"").getMillis(),"
72092,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterBonusTest.java,166,,"            DateTimes.of(""2013-01-03"").getMillis(),"
72093,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterBonusTest.java,178,,"            DateTimes.of(""2013-01-04"").getMillis(),"
72094,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterBonusTest.java,190,,"            DateTimes.of(""2013-01-05"").getMillis(),"
72095,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterBonusTest.java,619,,"                                              new LongSumAggregatorFactory(""valFiltered"", ""val""),"
72096,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,84,,"  private static Interval DATA_INTERVAL = Intervals.of(""2013-01-01/2013-01-07"");"
72097,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,87,,"      new CountAggregatorFactory(""rows""),"
72098,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,88,,"      new LongSumAggregatorFactory(""val"", ""val"")"
72099,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,91,,"  private static List<String> DIMS = Lists.newArrayList(""dim"", ""lat"", ""long"", ""lat2"", ""long2"");"
72100,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,91,,"  private static List<String> DIMS = Lists.newArrayList(""dim"", ""lat"", ""long"", ""lat2"", ""long2"");"
72101,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,91,,"  private static List<String> DIMS = Lists.newArrayList(""dim"", ""lat"", ""long"", ""lat2"", ""long2"");"
72102,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,91,,"  private static List<String> DIMS = Lists.newArrayList(""dim"", ""lat"", ""long"", ""lat2"", ""long2"");"
72103,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,91,,"  private static List<String> DIMS = Lists.newArrayList(""dim"", ""lat"", ""long"", ""lat2"", ""long2"");"
72104,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,129,,"                                ""dim.geo"","
72105,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,133,,"                                ""spatialIsRad"","
72106,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,146,,"            DateTimes.of(""2013-01-01"").getMillis(),"
72107,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,149,,"                ""timestamp"", DateTimes.of(""2013-01-01"").toString(),"
72108,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,150,,"                ""dim"", ""foo"","
72109,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,159,,"            DateTimes.of(""2013-01-02"").getMillis(),"
72110,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,172,,"            DateTimes.of(""2013-01-03"").getMillis(),"
72111,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,185,,"            DateTimes.of(""2013-01-04"").getMillis(),"
72112,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,198,,"            DateTimes.of(""2013-01-05"").getMillis(),"
72113,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/SpatialFilterTest.java,216,,"                ""lat"", ""_mmx.unknown"","
72114,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/TimeFilteringTest.java,76,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"", ""dim3"")),"
72115,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/TimeFilteringTest.java,76,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"", ""dim3"")),"
72116,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/TimeFilteringTest.java,76,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"", ""dim3"")),"
72117,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/ValueMatchersTest.java,49,,"        GenericIndexed.fromIterable(ImmutableList.of(""value""), GenericIndexed.STRING_STRATEGY),"
72118,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/generator/DataGeneratorTest.java,56,,"            ""dimA"","
72119,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/generator/DataGeneratorTest.java,68,,"            ""dimB"","
72120,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/generator/DataGeneratorTest.java,73,,"            Arrays.asList(""Hello"", ""World"", ""Foo"", ""Bar"")"
72121,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/generator/DataGeneratorTest.java,73,,"            Arrays.asList(""Hello"", ""World"", ""Foo"", ""Bar"")"
72122,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/generator/DataGeneratorTest.java,73,,"            Arrays.asList(""Hello"", ""World"", ""Foo"", ""Bar"")"
72123,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/generator/DataGeneratorTest.java,73,,"            Arrays.asList(""Hello"", ""World"", ""Foo"", ""Bar"")"
72124,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/generator/DataGeneratorTest.java,79,,"            ""dimC"","
72125,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexAddResultTest.java,32,,"    Assert.assertFalse(new IncrementalIndexAddResult(0, 0L, ""test"").isRowAdded());"
72126,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexIngestionTest.java,79,,"        .withMetrics(new LongMaxAggregatorFactory(""max"", ""max""))"
72127,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexIngestionTest.java,96,,"                  Collections.singletonList(""billy""),"
72128,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexMultiValueSpecTest.java,97,,"          return Arrays.asList(""xsd"", ""aba"", ""fds"", ""aba"");"
72129,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexMultiValueSpecTest.java,97,,"          return Arrays.asList(""xsd"", ""aba"", ""fds"", ""aba"");"
72130,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexMultiValueSpecTest.java,97,,"          return Arrays.asList(""xsd"", ""aba"", ""fds"", ""aba"");"
72131,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexRowCompTest.java,72,,"    IncrementalIndexRow ir1 = index.toIncrementalIndexRow(toMapRow(time, ""billy"", ""A"", ""joe"", ""B"")).getIncrementalIndexRow();"
72132,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexRowCompTest.java,72,,"    IncrementalIndexRow ir1 = index.toIncrementalIndexRow(toMapRow(time, ""billy"", ""A"", ""joe"", ""B"")).getIncrementalIndexRow();"
72133,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexRowSizeTest.java,74,,"        ""billy"","
72134,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexStorageAdapterTest.java,100,,"        .setSimpleTestingIndexSchema(new CountAggregatorFactory(""cnt""))"
72135,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexStorageAdapterTest.java,119,,"            Collections.singletonList(""billy""),"
72136,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexStorageAdapterTest.java,126,,"            Collections.singletonList(""sally""),"
72137,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexStorageAdapterTest.java,154,,"                      .setDataSource(""test"")"
72138,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexStorageAdapterTest.java,585,,"            index.add(new MapBasedInputRow(timestamp, Collections.singletonList(""billy2""), ImmutableMap.of(""billy2"", ""v3"")));"
72139,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexStorageAdapterTest.java,601,,"            index.add(new MapBasedInputRow(timestamp, Collections.singletonList(""billy3""), ImmutableMap.of(""billy3"", """")));"
72140,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexTest.java,77,,"            new StringDimensionSchema(""string""),"
72141,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexTest.java,78,,"            new FloatDimensionSchema(""float""),"
72142,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexTest.java,79,,"            new LongDimensionSchema(""long""),"
72143,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexTest.java,80,,"            new DoubleDimensionSchema(""double"")"
72144,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexTest.java,86,,"            new SelectorDimFilter(""billy"", ""A"", null)"
72145,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexTest.java,109,,"            Lists.newArrayList(""billy"", ""joe""),"
72146,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/OnheapIncrementalIndexBenchmark.java,92,,"              StringUtils.format(""sumResult%s"", i),"
72147,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/OnheapIncrementalIndexBenchmark.java,98,,"              StringUtils.format(""doubleSumResult%s"", i),"
72148,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/incremental/ParseExceptionHandlerTest.java,132,,"      parseExceptionHandler.handle(new ParseException(StringUtils.format(""test %d"", exceptionCounter)));"
72149,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,67,,"            ""channel"","
72150,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,69,,"            ""countryNumber"","
72151,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,70,,"            ""countryIsoCode"","
72152,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,75,,"            ""page"","
72153,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,108,,"        makeFactToCountrySegment().getDimensionCardinality(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + ""countryName"")"
72154,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,117,,"        makeFactToCountrySegment().getDimensionCardinality(""nonexistent"")"
72155,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,330,,"            new Object[]{""Talk:Oswald Tilghman"", null, null, null, NULL_COUNTRY},"
72156,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,332,,"            new Object[]{""Peremptory norm"", ""AU"", ""AU"", ""Australia"", 0L},"
72157,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,332,,"            new Object[]{""Peremptory norm"", ""AU"", ""AU"", ""Australia"", 0L},"
72158,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,336,,"            new Object[]{""Mathis Bolly"", ""MX"", ""MX"", ""Mexico"", 10L},"
72159,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,336,,"            new Object[]{""Mathis Bolly"", ""MX"", ""MX"", ""Mexico"", 10L},"
72160,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,337,,"            new Object[]{""유희왕 GX"", ""KR"", ""KR"", ""Republic of Korea"", 9L},"
72161,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,337,,"            new Object[]{""유희왕 GX"", ""KR"", ""KR"", ""Republic of Korea"", 9L},"
72162,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,338,,"            new Object[]{""青野武"", ""JP"", ""JP"", ""Japan"", 8L},"
72163,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,338,,"            new Object[]{""青野武"", ""JP"", ""JP"", ""Japan"", 8L},"
72164,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,339,,"            new Object[]{""Golpe de Estado en Chile de 1973"", ""CL"", ""CL"", ""Chile"", 2L},"
72165,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,339,,"            new Object[]{""Golpe de Estado en Chile de 1973"", ""CL"", ""CL"", ""Chile"", 2L},"
72166,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,340,,"            new Object[]{""President of India"", ""US"", ""US"", ""United States"", 13L},"
72167,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,340,,"            new Object[]{""President of India"", ""US"", ""US"", ""United States"", 13L},"
72168,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,341,,"            new Object[]{""Diskussion:Sebastian Schulz"", ""DE"", ""DE"", ""Germany"", 3L},"
72169,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,341,,"            new Object[]{""Diskussion:Sebastian Schulz"", ""DE"", ""DE"", ""Germany"", 3L},"
72170,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,342,,"            new Object[]{""Saison 9 de Secret Story"", ""FR"", ""FR"", ""France"", 5L},"
72171,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,342,,"            new Object[]{""Saison 9 de Secret Story"", ""FR"", ""FR"", ""France"", 5L},"
72172,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,343,,"            new Object[]{""Glasgow"", ""GB"", ""GB"", ""United Kingdom"", 6L},"
72173,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,343,,"            new Object[]{""Glasgow"", ""GB"", ""GB"", ""United Kingdom"", 6L},"
72174,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,344,,"            new Object[]{""Didier Leclair"", ""CA"", ""CA"", ""Canada"", 1L},"
72175,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,344,,"            new Object[]{""Didier Leclair"", ""CA"", ""CA"", ""Canada"", 1L},"
72176,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,345,,"            new Object[]{""Les Argonautes"", ""CA"", ""CA"", ""Canada"", 1L},"
72177,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,346,,"            new Object[]{""Otjiwarongo Airport"", ""US"", ""US"", ""United States"", 13L},"
72178,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,347,,"            new Object[]{""Sarah Michelle Gellar"", ""CA"", ""CA"", ""Canada"", 1L},"
72179,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,348,,"            new Object[]{""DirecTV"", ""US"", ""US"", ""United States"", 13L},"
72180,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,349,,"            new Object[]{""Carlo Curti"", ""US"", ""US"", ""United States"", 13L},"
72181,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,350,,"            new Object[]{""Giusy Ferreri discography"", ""IT"", ""IT"", ""Italy"", 7L},"
72182,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,350,,"            new Object[]{""Giusy Ferreri discography"", ""IT"", ""IT"", ""Italy"", 7L},"
72183,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,351,,"            new Object[]{""Roma-Bangkok"", ""IT"", ""IT"", ""Italy"", 7L},"
72184,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,352,,"            new Object[]{""Wendigo"", ""SV"", ""SV"", ""El Salvador"", 12L},"
72185,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,352,,"            new Object[]{""Wendigo"", ""SV"", ""SV"", ""El Salvador"", 12L},"
72186,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,353,,"            new Object[]{""Алиса в Зазеркалье"", ""NO"", ""NO"", ""Norway"", 11L},"
72187,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,353,,"            new Object[]{""Алиса в Зазеркалье"", ""NO"", ""NO"", ""Norway"", 11L},"
72188,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,354,,"            new Object[]{""Gabinete Ministerial de Rafael Correa"", ""EC"", ""EC"", ""Ecuador"", 4L},"
72189,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,354,,"            new Object[]{""Gabinete Ministerial de Rafael Correa"", ""EC"", ""EC"", ""Ecuador"", 4L},"
72190,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,355,,"            new Object[]{""Old Anatolian Turkish"", ""US"", ""US"", ""United States"", 13L},"
72191,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,356,,"            new Object[]{""Cream Soda"", ""SU"", ""SU"", ""States United"", 15L},"
72192,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,356,,"            new Object[]{""Cream Soda"", ""SU"", ""SU"", ""States United"", 15L},"
72193,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,357,,"            new Object[]{""Orange Soda"", ""MatchNothing"", null, null, NULL_COUNTRY},"
72194,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,357,,"            new Object[]{""Orange Soda"", ""MatchNothing"", null, null, NULL_COUNTRY},"
72195,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,358,,"            new Object[]{""History of Fourems"", ""MMMM"", ""MMMM"", ""Fourems"", 205L}"
72196,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,358,,"            new Object[]{""History of Fourems"", ""MMMM"", ""MMMM"", ""Fourems"", 205L}"
72197,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,358,,"            new Object[]{""History of Fourems"", ""MMMM"", ""MMMM"", ""Fourems"", 205L}"
72198,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,671,,"    Filter filter = new SelectorDimFilter(""channel"", ""#de.wikipedia"", null).toFilter();"
72199,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,770,,"            new Object[]{null, null, NullHandling.sqlCompatible() ? null : 0L, ""AX"", ""Atlantis"", 14L},"
72200,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,771,,"            new Object[]{null, null, NullHandling.sqlCompatible() ? null : 0L, ""USCA"", ""Usca"", 16L}"
72201,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,771,,"            new Object[]{null, null, NullHandling.sqlCompatible() ? null : 0L, ""USCA"", ""Usca"", 16L}"
72202,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,1258,,"            new Object[]{""Giusy Ferreri discography"", ""Provincia di Varese"", ""Italy""},"
72203,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java,1263,,"            new Object[]{""Old Anatolian Turkish"", ""Virginia"", ""United States""},"
72204,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,67,,"    Filter originalFilter = new SelectorFilter(""channel"", ""#en.wikipedia"");"
72205,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,67,,"    Filter originalFilter = new SelectorFilter(""channel"", ""#en.wikipedia"");"
72206,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,95,,"            ""page"","
72207,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,96,,"            FACT_TO_REGION_PREFIX + ""regionName"","
72208,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,97,,"            REGION_TO_COUNTRY_PREFIX + ""countryName"""
72209,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,100,,"            new Object[]{""Talk:Oswald Tilghman"", null, null},"
72210,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,101,,"            new Object[]{""Peremptory norm"", ""New South Wales"", ""Australia""},"
72211,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,101,,"            new Object[]{""Peremptory norm"", ""New South Wales"", ""Australia""},"
72212,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,102,,"            new Object[]{""President of India"", ""California"", ""United States""},"
72213,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,102,,"            new Object[]{""President of India"", ""California"", ""United States""},"
72214,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,102,,"            new Object[]{""President of India"", ""California"", ""United States""},"
72215,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,104,,"            new Object[]{""Otjiwarongo Airport"", ""California"", ""United States""},"
72216,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,105,,"            new Object[]{""Sarah Michelle Gellar"", ""Ontario"", ""Canada""},"
72217,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,106,,"            new Object[]{""DirecTV"", ""North Carolina"", ""United States""},"
72218,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,106,,"            new Object[]{""DirecTV"", ""North Carolina"", ""United States""},"
72219,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,107,,"            new Object[]{""Carlo Curti"", ""California"", ""United States""},"
72220,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,108,,"            new Object[]{""Giusy Ferreri discography"", ""Provincia di Varese"", ""Italy""},"
72221,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,108,,"            new Object[]{""Giusy Ferreri discography"", ""Provincia di Varese"", ""Italy""},"
72222,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,110,,"            new Object[]{""Old Anatolian Turkish"", ""Virginia"", ""United States""},"
72223,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,110,,"            new Object[]{""Old Anatolian Turkish"", ""Virginia"", ""United States""},"
72224,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,111,,"            new Object[]{""Cream Soda"", ""Ainigriv"", ""States United""},"
72225,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,111,,"            new Object[]{""Cream Soda"", ""Ainigriv"", ""States United""},"
72226,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,111,,"            new Object[]{""Cream Soda"", ""Ainigriv"", ""States United""},"
72227,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,113,,"            new Object[]{""History of Fourems"", ""Fourems Province"", ""Fourems""}"
72228,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,113,,"            new Object[]{""History of Fourems"", ""Fourems Province"", ""Fourems""}"
72229,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,130,,"    Filter originalFilter = new SelectorFilter(""rtc.countryName"", ""United States"");"
72230,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,245,,"                new InDimFilter(""countryIsoCode"", ImmutableSet.of(""US""), null, null).toFilter()"
72231,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,262,,"            new SelectorFilter(""countryNumber"", null),"
72232,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,264,,"            new SelectorFilter(""r1.regionName"", null)"
72233,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,337,,"            new SelectorFilter(""baseTableInvalidColumn"", ""abcd""),"
72234,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,533,,"            new SelectorFilter(""channel"", ""#fr.wikipedia""),"
72235,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,536,,"                ""Les Argonautes"","
72236,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,557,,"                    new SelectorFilter(""namespace"", ""main""),"
72237,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,557,,"                    new SelectorFilter(""namespace"", ""main""),"
72238,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,560,,"                        ""24.122.168.111"","
72239,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,575,,"                        ""Quebec"","
72240,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,754,,"                new InDimFilter(""JOIN-FILTER-PUSHDOWN-VIRTUAL-COLUMN-0"", ImmutableSet.of(""SU""), null, null).toFilter()"
72241,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,854,,"            new SelectorFilter(""channel"", ""#ko.wikipedia""),"
72242,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,910,,"                                new InDimFilter(""regionIsoCode"", ImmutableSet.of(""VA""), null, null).toFilter()"
72243,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,962,,"            new SelectorFilter(""c1.countryName"", ""Usca"")"
72244,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,1126,,"            new SelectorFilter(""channel"", ""#de.wikipedia""),"
72245,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,1127,,"            new SelectorFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + ""countryName"", ""Germany"")"
72246,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,1644,,"            new SelectorFilter(""channel"", ""#es.wikipedia""),"
72247,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,1645,,"            new SelectorFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + ""countryName"", ""El Salvador"")"
72248,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,1919,,"                new InDimFilter(""countryIsoCode"", ImmutableSet.of(""MMMM""), null, null).toFilter(),"
72249,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,1954,,"            new SelectorFilter(""r1.regionIsoCode"", ""AAAA"")"
72250,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,2153,,"                    new SelectorFilter(""rtc.countryIsoCode"", ""US"")"
72251,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,2158,,"                ""Main"","
72252,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java,2315,,"                        ""XYZXYZ"","
72253,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinPrefixUtilsTest.java,72,,"    Assert.assertTrue(JoinPrefixUtils.isPrefixedBy(""foo"", """"));"
72254,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinTestHelper.java,82,,"      new LongDimensionSchema(""countryNumber""),"
72255,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinTestHelper.java,83,,"      new StringDimensionSchema(""countryIsoCode""),"
72256,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinTestHelper.java,225,,"        ""/wikipedia/countries.json"","
72257,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinableFactoryWrapperTest.java,108,,"        JoinConditionAnalysis.forExpression(""x == \""j.x\"""", ""j."", ExprMacroTable.nil())"
72258,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinableFactoryWrapperTest.java,195,,"    PreJoinableClause clause1 = makeGlobalPreJoinableClause(""dataSource_1"", ""x == \""j.x\"""", ""j."");"
72259,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinableFactoryWrapperTest.java,298,,"    PreJoinableClause clause1 = makeGlobalPreJoinableClause(""dataSource_1"", ""abc == xyz"", ""ab"");"
72260,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinableFactoryWrapperTest.java,454,,"                JoinConditionAnalysis.forExpression(""x == \""j.k\"""", ""j."", ExprMacroTable.nil())"
72261,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinableFactoryWrapperTest.java,481,,"            ""_j."","
72262,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/JoinableFactoryWrapperTest.java,487,,"            ""__j."","
72263,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/table/IndexedTableJoinableTest.java,51,,"  private static final String KEY_COLUMN = ""str"";"
72264,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/table/IndexedTableJoinableTest.java,55,,"  private static final String SEARCH_KEY_NULL_VALUE = ""baz"";"
72265,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/table/IndexedTableJoinableTest.java,56,,"  private static final String SEARCH_KEY_VALUE = ""foo"";"
72266,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/table/LookupJoinMatcherTest.java,50,,"      ImmutableMap.of(""foo"", ""bar"", ""null"", """", ""empty String"", """", """", ""empty_string"");"
72267,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/table/LookupJoinMatcherTest.java,50,,"      ImmutableMap.of(""foo"", ""bar"", ""null"", """", ""empty String"", """", """", ""empty_string"");"
72268,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/table/RowBasedIndexBuilderTest.java,41,,"            .add(""abc"")"
72269,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/join/table/RowBasedIndexBuilderTest.java,45,,"            .add(""def"");"
72270,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/serde/ComplexMetricsTest.java,37,,"    ComplexMetrics.registerSerde(""hyperUnique"", new HyperUniquesSerde());"
72271,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/transform/TransformSpecTest.java,47,,"          new TimestampSpec(""t"", ""auto"", DateTimes.of(""2000-01-01"")),"
72272,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/transform/TransformSpecTest.java,57,,"      .put(""x"", ""foo"")"
72273,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/transform/TransformSpecTest.java,76,,"            new ExpressionTransform(""f"", ""concat(x,y)"", TestExprMacroTable.INSTANCE),"
72274,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/transform/TransformSpecTest.java,96,,"    Assert.assertEquals(""foobar"", row.getRaw(""f""));"
72275,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/transform/TransformerTest.java,69,,"        ImmutableList.of(""dim""),"
72276,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/transform/TransformerTest.java,83,,"            ImmutableList.of(new ExpressionTransform(""dim"", ""strlen(dim)"", TestExprMacroTable.INSTANCE))"
72277,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/transform/TransformerTest.java,230,,"            new SelectorDimFilter(""dim"", ""val1"", null),"
72278,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/DummyStringVirtualColumn.java,131,,"      throw new UnsupportedOperationException(""not supported"");"
72279,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/DummyStringVirtualColumnTest.java,109,,"      Assert.fail(""must need row based methods"");"
72280,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/DummyStringVirtualColumnTest.java,146,,"      Assert.fail(""value matchers must be required"");"
72281,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/DummyStringVirtualColumnTest.java,256,,"        .setInterval(""2000/2030"")"
72282,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/DummyStringVirtualColumnTest.java,263,,"        GroupByQueryRunnerTestHelper.createExpectedRow(query, ""2000"", COUNT, 1674L, VSTRING_DIM, ""spot""),"
72283,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/DummyStringVirtualColumnTest.java,263,,"        GroupByQueryRunnerTestHelper.createExpectedRow(query, ""2000"", COUNT, 1674L, VSTRING_DIM, ""spot""),"
72284,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/DummyStringVirtualColumnTest.java,268,,"    TestHelper.assertExpectedObjects(expectedRows, rows, ""failed"");"
72285,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/ExpressionPlannerTest.java,184,,"    Assert.assertEquals(""concat(\""x\"", 'x')"", thePlan.getAppliedFoldExpression(""__acc"").stringify());"
72286,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/ExpressionSelectorsTest.java,67,,"            Parser.parse(""dim1 == 2"", ExprMacroTable.nil()).analyzeInputs(),"
72287,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/ExpressionSelectorsTest.java,165,,"    settableSupplier.set(""1234"");"
72288,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/ExpressionVirtualColumnTest.java,78,,"      ImmutableMap.of(""x"", 2.1, ""y"", 3L, ""z"", ""foobar"")"
72289,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/ExpressionVirtualColumnTest.java,81,,"      DateTimes.of(""2000-01-02T01:00:00"").getMillis(),"
72290,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/ExpressionVirtualColumnTest.java,119,,"      ""expr"","
72291,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/ExpressionVirtualColumnTest.java,242,,"    Assert.assertEquals(ImmutableList.of(""2.0"", ""4.0"", ""6.0""), selectorImplicit.getObject());"
72292,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/ExpressionVirtualColumnTest.java,244,,"    Assert.assertEquals(ImmutableList.of(""6.0"", ""8.0"", ""10.0""), selectorImplicit.getObject());"
72293,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/ExpressionVirtualColumnTest.java,713,,"    Assert.assertEquals(DateTimes.of(""2000-01-01"").getMillis(), selector.getLong());"
72294,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/VectorizedVirtualColumnTest.java,66,,"      ""force"","
72295,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/VectorizedVirtualColumnTest.java,452,,"                                  .intervals(""2000/2030"")"
72296,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/VectorizedVirtualColumnTest.java,471,,"    TestHelper.assertExpectedObjects(expectedResults, seq.toList(), ""failed"");"
72297,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/VirtualColumnsTest.java,72,,"    Assert.assertTrue(virtualColumns.exists(""expr""));"
72298,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/VirtualColumnsTest.java,73,,"    Assert.assertTrue(virtualColumns.exists(""foo""));"
72299,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/VirtualColumnsTest.java,74,,"    Assert.assertTrue(virtualColumns.exists(""foo.5""));"
72300,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/virtual/VirtualColumnsTest.java,153,,"        ""x + y"","
72301,./TargetProjects/druid/server/src/main/java/org/apache/druid/client/indexing/QueryStatus.java,47,,"      @JsonProperty(""status"") Status status,"
72302,./TargetProjects/druid/server/src/main/java/org/apache/druid/client/indexing/TaskStatus.java,40,,"      @JsonProperty(""status"") TaskState status,"
72303,./TargetProjects/druid/server/src/main/java/org/apache/druid/curator/inventory/CuratorInventoryManager.java,242,,"              log.warn(""Ignoring event: Type - %s , Path - %s , Version - %s"","
72304,./TargetProjects/druid/server/src/main/java/org/apache/druid/guice/QueryToolChestModule.java,115,,"        .addBinding(""default"")"
72305,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinator.java,180,,"              .bind(""dataSource"", dataSource);"
72306,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinator.java,184,,"                           JacksonUtils.readValue(jsonMapper, r.getBytes(""payload""), DataSegment.class),"
72307,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinator.java,185,,"                           r.getString(""created_date"")"
72308,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinator.java,212,,"              .bind(""start"", interval.getStart().toString())"
72309,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinator.java,213,,"              .bind(""end"", interval.getEnd().toString())"
72310,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinator.java,404,,"                    throw new RuntimeException(""Aborting transaction!"");"
72311,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinator.java,1078,,"        ""commit_metadata_payload"","
72312,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SQLMetadataConnector.java,214,,"                ""CREATE TABLE %1$s (\n"""
72313,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SQLMetadataConnector.java,215,,"                + ""  id VARCHAR(255) NOT NULL,\n"""
72314,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SQLMetadataConnector.java,217,,"                + ""  created_date VARCHAR(255) NOT NULL,\n"""
72315,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SQLMetadataConnector.java,223,,"                + ""  payload %2$s NOT NULL,\n"""
72316,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SQLMetadataConnector.java,277,,"                + ""  PRIMARY KEY (id)\n"""
72317,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SQLMetadataConnector.java,357,,"                + ""  id %2$s NOT NULL,\n"""
72318,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SQLMetadataConnector.java,427,,"                .bind(""key"", key)"
72319,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SQLMetadataConnector.java,438,,"                    .bind(""value"", value)"
72320,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SQLMetadataRuleManager.java,94,,"                  .bind(""dataSource"", defaultDatasourceName)"
72321,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SQLMetadataStorageActionHandler.java,157,,"                  .bind(""payload"", jsonMapper.writeValueAsBytes(entry))"
72322,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SQLMetadataStorageActionHandler.java,412,,"                 .bind(""entryId"", entryId)"
72323,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SQLMetadataSupervisorManager.java,103,,"                  .bind(""spec_id"", id)"
72324,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SqlSegmentsMetadataManager.java,208,,"  @GuardedBy(""startStopPollLock"")"
72325,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SqlSegmentsMetadataManager.java,573,,"              .bind(""dataSource"", dataSourceName);"
72326,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SqlSegmentsMetadataManager.java,576,,"                .bind(""start"", interval.getStart().toString())"
72327,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SqlSegmentsMetadataManager.java,577,,"                .bind(""end"", interval.getEnd().toString());"
72328,./TargetProjects/druid/server/src/main/java/org/apache/druid/metadata/SqlSegmentsMetadataManager.java,582,,"                    JacksonUtils.readValue(jsonMapper, resultSet.getBytes(""payload""), DataSegment.class);"
72329,./TargetProjects/druid/server/src/main/java/org/apache/druid/segment/realtime/firehose/EventReceiverFirehoseFactory.java,384,,"        return Response.serverError().entity(ImmutableMap.<String, Object>of(""error"", e.getMessage())).build();"
72330,./TargetProjects/druid/server/src/main/java/org/apache/druid/segment/realtime/plumber/RealtimePlumber.java,469,,"                   .addData(""interval"", sink.getInterval())"
72331,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/ClientInfoResource.java,138,,"      @PathParam(""dataSourceName"") String dataSourceName,"
72332,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/audit/SQLAuditManager.java,109,,"            .setDimension(""type"", auditEntry.getType())"
72333,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/audit/SQLAuditManager.java,116,,"      builder.setDimension(""payload"", auditEntry.getPayload());"
72334,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinatorConfig.java,47,,"  @Default(""P1D"")"
72335,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinatorConfig.java,51,,"  @Default(""PT-1s"")"
72336,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/http/DataSourcesResource.java,132,,"      @QueryParam(""full"") @Nullable String full,"
72337,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/http/DataSourcesResource.java,133,,"      @QueryParam(""simple"") @Nullable String simple,"
72338,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/http/DataSourcesResource.java,159,,"      @PathParam(""dataSourceName"") final String dataSourceName,"
72339,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/http/DataSourcesResource.java,280,,"          .entity(ImmutableMap.of(""error"", ""Exception occurred."", ""message"", Throwables.getRootCause(e).toString()))"
72340,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/http/DataSourcesResource.java,300,,"      @QueryParam(""interval"") final String interval"
72341,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/http/IntervalsResource.java,132,,"              properties.put(""size"", dataSegment.getSize());"
72342,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/http/IntervalsResource.java,133,,"              properties.put(""count"", 1);"
72343,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/http/LookupCoordinatorResource.java,185,,"      @PathParam(""tier"") String tier,"
72344,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/http/LookupCoordinatorResource.java,194,,"                       .entity(ServletResourceUtils.sanitizeException(new NullPointerException(""`tier` required"")))"
72345,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/http/LookupCoordinatorResource.java,215,,"      @PathParam(""lookup"") String lookup,"
72346,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/http/LookupCoordinatorResource.java,334,,"      @DefaultValue(""false"") @QueryParam(""detailed"") boolean detailed"
72347,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/http/LookupCoordinatorResource.java,347,,"                       .entity(ServletResourceUtils.sanitizeException(new RE(""No lookups found"")))"
72348,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/http/MetadataResource.java,212,,"  public Response getDataSourceWithUsedSegments(@PathParam(""dataSourceName"") final String dataSourceName)"
72349,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/http/RulesResource.java,165,,"        return auditManager.fetchAuditHistory(dataSourceName, ""rules"", count);"
72350,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/http/SegmentListerResource.java,188,,"              log.debug(ex, ""Request timed out or closed already."");"
72351,./TargetProjects/druid/server/src/main/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManager.java,189,,"    Preconditions.checkState(lifecycleLock.awaitStarted(5, TimeUnit.SECONDS), ""not started"");"
72352,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/BrokerServerViewTest.java,106,,"        ""default_tier"","
72353,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/BrokerServerViewTest.java,120,,"        DataSourceAnalysis.forDataSource(new TableDataSource(""test_broker_server_view""))"
72354,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/BrokerServerViewTest.java,181,,"            Pair.of(""2011-04-01/2011-04-09"", ""v2""),"
72355,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/BrokerServerViewTest.java,182,,"            Pair.of(""2011-04-06/2011-04-09"", ""v3""),"
72356,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/BrokerServerViewTest.java,183,,"            Pair.of(""2011-04-01/2011-04-02"", ""v3"")"
72357,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientFunctionalityTest.java,135,,"    assertUncovered(responseContext, false, ""2015-01-01/2015-01-02"");"
72358,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientFunctionalityTest.java,140,,"    assertUncovered(responseContext, false, ""2015-01-01/2015-01-02"", ""2015-01-03/2015-01-04"");"
72359,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientFunctionalityTest.java,209,,"                    new DruidServer(""localhost"", ""localhost"", null, 100, ServerType.HISTORICAL, ""a"", 10),"
72360,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,199,,"      new CountAggregatorFactory(""rows""),"
72361,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,200,,"      new LongSumAggregatorFactory(""imps"", ""imps""),"
72362,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,201,,"      new LongSumAggregatorFactory(""impers"", ""imps"")"
72363,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,205,,"          ""avg_imps_per_row"","
72364,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,213,,"          ""avg_imps_per_row_double"","
72365,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,217,,"              new ConstantPostAggregator(""constant"", 2)"
72366,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,221,,"          ""avg_imps_per_row_half"","
72367,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,232,,"      new LongSumAggregatorFactory(""impers2"", ""imps"")"
72368,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,316,,"        new DruidServer(""test1"", ""test1"", null, 10, ServerType.HISTORICAL, ""bye"", 0),"
72369,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,455,,"        Intervals.of(""2011-01-05/2011-01-10""),"
72370,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,457,,"            DateTimes.of(""2011-01-05""), 85, 102,"
72371,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,458,,"            DateTimes.of(""2011-01-06""), 412, 521,"
72372,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,459,,"            DateTimes.of(""2011-01-07""), 122, 21894,"
72373,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,460,,"            DateTimes.of(""2011-01-08""), 5, 20,"
72374,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,461,,"            DateTimes.of(""2011-01-09""), 18, 521"
72375,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,465,,"            DateTimes.of(""2011-01-10""), 85, 102,"
72376,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,473,,"  @SuppressWarnings(""unchecked"")"
72377,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,490,,"        Intervals.of(""2011-01-01/2011-01-02""), makeTimeResults(DateTimes.of(""2011-01-01""), 50, 5000),"
72378,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,490,,"        Intervals.of(""2011-01-01/2011-01-02""), makeTimeResults(DateTimes.of(""2011-01-01""), 50, 5000),"
72379,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,491,,"        Intervals.of(""2011-01-02/2011-01-03""), makeTimeResults(DateTimes.of(""2011-01-02""), 30, 6000),"
72380,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,491,,"        Intervals.of(""2011-01-02/2011-01-03""), makeTimeResults(DateTimes.of(""2011-01-02""), 30, 6000),"
72381,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,492,,"        Intervals.of(""2011-01-04/2011-01-05""), makeTimeResults(DateTimes.of(""2011-01-04""), 23, 85312),"
72382,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,505,,"            DateTimes.of(""2011-01-05T01""), 80, 100,"
72383,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,506,,"            DateTimes.of(""2011-01-06T01""), 420, 520,"
72384,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,507,,"            DateTimes.of(""2011-01-07T01""), 12, 2194,"
72385,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,508,,"            DateTimes.of(""2011-01-08T01""), 59, 201,"
72386,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,509,,"            DateTimes.of(""2011-01-09T01""), 181, 52"
72387,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,514,,"    TimeseriesQuery query = builder.intervals(""2011-01-01/2011-01-10"")"
72388,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,673,,"        Intervals.of(""2011-11-04/2011-11-08""),"
72389,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,675,,"            new DateTime(""2011-11-04"", TIMEZONE), 50, 5000,"
72390,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,676,,"            new DateTime(""2011-11-05"", TIMEZONE), 30, 6000,"
72391,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,677,,"            new DateTime(""2011-11-06"", TIMEZONE), 23, 85312,"
72392,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,678,,"            new DateTime(""2011-11-07"", TIMEZONE), 85, 102"
72393,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,718,,"                ""useCache"", ""false"","
72394,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,926,,"                .intervals(""2011-01-06/2011-01-10"")"
72395,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1098,,"                                                    .query(""how"")"
72396,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1105,,"        makeSearchResults(TOP_DIM, DateTimes.of(""2011-01-01""), ""how"", 1, ""howdy"", 2, ""howwwwww"", 3, ""howwy"", 4),"
72397,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1105,,"        makeSearchResults(TOP_DIM, DateTimes.of(""2011-01-01""), ""how"", 1, ""howdy"", 2, ""howwwwww"", 3, ""howwy"", 4),"
72398,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1105,,"        makeSearchResults(TOP_DIM, DateTimes.of(""2011-01-01""), ""how"", 1, ""howdy"", 2, ""howwwwww"", 3, ""howwy"", 4),"
72399,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1108,,"        makeSearchResults(TOP_DIM, DateTimes.of(""2011-01-02""), ""how1"", 1, ""howdy1"", 2, ""howwwwww1"", 3, ""howwy1"", 4),"
72400,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1108,,"        makeSearchResults(TOP_DIM, DateTimes.of(""2011-01-02""), ""how1"", 1, ""howdy1"", 2, ""howwwwww1"", 3, ""howwy1"", 4),"
72401,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1108,,"        makeSearchResults(TOP_DIM, DateTimes.of(""2011-01-02""), ""how1"", 1, ""howdy1"", 2, ""howwwwww1"", 3, ""howwy1"", 4),"
72402,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1108,,"        makeSearchResults(TOP_DIM, DateTimes.of(""2011-01-02""), ""how1"", 1, ""howdy1"", 2, ""howwwwww1"", 3, ""howwy1"", 4),"
72403,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1113,,"            DateTimes.of(""2011-01-05""), ""how2"", 1, ""howdy2"", 2, ""howwwwww2"", 3, ""howww2"", 4,"
72404,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1113,,"            DateTimes.of(""2011-01-05""), ""how2"", 1, ""howdy2"", 2, ""howwwwww2"", 3, ""howww2"", 4,"
72405,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1113,,"            DateTimes.of(""2011-01-05""), ""how2"", 1, ""howdy2"", 2, ""howwwwww2"", 3, ""howww2"", 4,"
72406,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1113,,"            DateTimes.of(""2011-01-05""), ""how2"", 1, ""howdy2"", 2, ""howwwwww2"", 3, ""howww2"", 4,"
72407,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1114,,"            DateTimes.of(""2011-01-06""), ""how3"", 1, ""howdy3"", 2, ""howwwwww3"", 3, ""howww3"", 4,"
72408,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1114,,"            DateTimes.of(""2011-01-06""), ""how3"", 1, ""howdy3"", 2, ""howwwwww3"", 3, ""howww3"", 4,"
72409,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1114,,"            DateTimes.of(""2011-01-06""), ""how3"", 1, ""howdy3"", 2, ""howwwwww3"", 3, ""howww3"", 4,"
72410,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1114,,"            DateTimes.of(""2011-01-06""), ""how3"", 1, ""howdy3"", 2, ""howwwwww3"", 3, ""howww3"", 4,"
72411,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1115,,"            DateTimes.of(""2011-01-07""), ""how4"", 1, ""howdy4"", 2, ""howwwwww4"", 3, ""howww4"", 4,"
72412,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1115,,"            DateTimes.of(""2011-01-07""), ""how4"", 1, ""howdy4"", 2, ""howwwwww4"", 3, ""howww4"", 4,"
72413,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1115,,"            DateTimes.of(""2011-01-07""), ""how4"", 1, ""howdy4"", 2, ""howwwwww4"", 3, ""howww4"", 4,"
72414,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1115,,"            DateTimes.of(""2011-01-07""), ""how4"", 1, ""howdy4"", 2, ""howwwwww4"", 3, ""howww4"", 4,"
72415,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1116,,"            DateTimes.of(""2011-01-08""), ""how5"", 1, ""howdy5"", 2, ""howwwwww5"", 3, ""howww5"", 4,"
72416,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1116,,"            DateTimes.of(""2011-01-08""), ""how5"", 1, ""howdy5"", 2, ""howwwwww5"", 3, ""howww5"", 4,"
72417,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1116,,"            DateTimes.of(""2011-01-08""), ""how5"", 1, ""howdy5"", 2, ""howwwwww5"", 3, ""howww5"", 4,"
72418,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1116,,"            DateTimes.of(""2011-01-08""), ""how5"", 1, ""howdy5"", 2, ""howwwwww5"", 3, ""howww5"", 4,"
72419,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1117,,"            DateTimes.of(""2011-01-09""), ""how6"", 1, ""howdy6"", 2, ""howwwwww6"", 3, ""howww6"", 4"
72420,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1117,,"            DateTimes.of(""2011-01-09""), ""how6"", 1, ""howdy6"", 2, ""howwwwww6"", 3, ""howww6"", 4"
72421,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1117,,"            DateTimes.of(""2011-01-09""), ""how6"", 1, ""howdy6"", 2, ""howwwwww6"", 3, ""howww6"", 4"
72422,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1117,,"            DateTimes.of(""2011-01-09""), ""how6"", 1, ""howdy6"", 2, ""howwwwww6"", 3, ""howww6"", 4"
72423,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1253,,"        .add(new HyperUniquesAggregatorFactory(""uniques"", ""uniques""))"
72424,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1369,,"        makeTimeBoundaryResult(DateTimes.of(""2011-01-02""), DateTimes.of(""2011-01-02""), DateTimes.of(""2011-01-03"")),"
72425,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1429,,"            new InDimFilter(""dim1"", Arrays.asList(""0"", ""1"", ""2"", ""3"", ""4""), null),"
72426,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1468,,"        Intervals.of(""2011-01-01/2011-01-05""), makeTimeResults(DateTimes.of(""2011-01-01""), 50, 5000),"
72427,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1491,,"            new InDimFilter(""dim2"", Arrays.asList(""a"", ""c"", ""e"", ""g""), null),"
72428,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1493,,"            new BoundDimFilter(""dim2"", ""e"", ""zzz"", true, true, false, null, StringComparators.LEXICOGRAPHIC)"
72429,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,1563,,"            new InDimFilter(""dim3"", Arrays.asList(""a"", ""c"", ""e"", ""g""), null),"
72430,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,3106,,"        makeTimeBoundaryResult(DateTimes.of(""1970-01-01""), DateTimes.of(""1970-01-01""), DateTimes.of(""1970-01-02"")),"
72431,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,3106,,"        makeTimeBoundaryResult(DateTimes.of(""1970-01-01""), DateTimes.of(""1970-01-01""), DateTimes.of(""1970-01-02"")),"
72432,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,3111,,"        Intervals.of(""1970-01-01/2011-01-10""),"
72433,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,3112,,"        makeTimeBoundaryResult(DateTimes.of(""1970-01-05""), DateTimes.of(""1970-01-05""), DateTimes.of(""1970-01-10"")),"
72434,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,3112,,"        makeTimeBoundaryResult(DateTimes.of(""1970-01-05""), DateTimes.of(""1970-01-05""), DateTimes.of(""1970-01-10"")),"
72435,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,3115,,"        makeTimeBoundaryResult(DateTimes.of(""1970-01-05T01""), DateTimes.of(""1970-01-05T01""), DateTimes.of(""1970-01-10""))"
72436,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,3167,,"        .setGranularity(GRANULARITY).setDimensions(new DefaultDimensionSpec(""a"", ""output""))"
72437,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,3234,,"        .setInterval(""2011-01-05/2011-01-10"").setDimensions(new DefaultDimensionSpec(""a"", ""output2""))"
72438,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java,3264,,"        ""ver"","
72439,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingQueryRunnerTest.java,100,,"      new CountAggregatorFactory(""rows""),"
72440,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingQueryRunnerTest.java,101,,"      new LongSumAggregatorFactory(""imps"", ""imps""),"
72441,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CachingQueryRunnerTest.java,146,,"        .dimension(""top_dim"")"
72442,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CoordinatorServerViewTest.java,110,,"    TimelineLookup timeline = overlordServerView.getTimeline(new TableDataSource(""test_overlord_server_view""));"
72443,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/CoordinatorServerViewTest.java,181,,"            Pair.of(""2011-04-01/2011-04-09"", ""v2""),"
72444,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/DirectDruidClientTest.java,76,,"      ""test"","
72445,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/HttpServerInventoryViewTest.java,85,,"        ""test1"", Intervals.of(""2014/2015""), ""v1"","
72446,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/JsonParserIteratorTest.java,202,,"          Futures.immediateFuture(mockErrorResponse(new QueryException(null, ""query exception test"", null, null))),"
72447,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/cache/BackgroundCachePopulatorTest.java,75,,"      new LongSumAggregatorFactory(""imps"", ""imps""),"
72448,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/cache/CacheConfigTest.java,85,,"    properties.put(PROPERTY_PREFIX + "".numBackgroundThreads"", ""5"");"
72449,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/cache/CacheConfigTest.java,86,,"    properties.put(PROPERTY_PREFIX + "".populateCache"", ""true"");"
72450,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/cache/CacheConfigTest.java,130,,"    throw new IllegalStateException(""Should have already failed"");"
72451,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/cache/CachePopulatorTest.java,59,,"    final List<String> strings = ImmutableList.of(""foo"", ""bar"");"
72452,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/cache/CachePopulatorTest.java,59,,"    final List<String> strings = ImmutableList.of(""foo"", ""bar"");"
72453,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/cache/CaffeineCacheTest.java,75,,"              binder.bindConstant().annotatedWith(Names.named(""serviceName"")).to(""druid/test/redis"");"
72454,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/cache/CaffeineCacheTest.java,76,,"              binder.bindConstant().annotatedWith(Names.named(""servicePort"")).to(0);"
72455,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/cache/CaffeineCacheTest.java,77,,"              binder.bindConstant().annotatedWith(Names.named(""tlsServicePort"")).to(-1);"
72456,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/cache/CaffeineCacheTest.java,128,,"    final Cache.NamedKey hiKey = new Cache.NamedKey(""the"", HI);"
72457,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/cache/MapCacheTest.java,52,,"    Assert.assertNull(cache.get(new Cache.NamedKey(""the"", HI)));"
72458,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/cache/MemcachedCacheTest.java,233,,"    Assert.assertNull(cache.get(new Cache.NamedKey(""the"", HI)));"
72459,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/cache/MemcachedCacheTest.java,316,,"    throw new UnsupportedOperationException(""not implemented"");"
72460,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/indexing/HttpIndexingServiceClientTest.java,71,,"                ImmutableMap.of(""time"", ""2020-01-01"", ""x"", ""123"", ""y"", ""456""),"
72461,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/indexing/HttpIndexingServiceClientTest.java,71,,"                ImmutableMap.of(""time"", ""2020-01-01"", ""x"", ""123"", ""y"", ""456""),"
72462,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/indexing/HttpIndexingServiceClientTest.java,71,,"                ImmutableMap.of(""time"", ""2020-01-01"", ""x"", ""123"", ""y"", ""456""),"
72463,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/indexing/HttpIndexingServiceClientTest.java,71,,"                ImmutableMap.of(""time"", ""2020-01-01"", ""x"", ""123"", ""y"", ""456""),"
72464,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/selector/TierSelectorStrategyTest.java,52,,"        new DruidServer(""test1"", ""localhost"", null, 0, ServerType.REALTIME, DruidServer.DEFAULT_TIER, 0),"
72465,./TargetProjects/druid/server/src/test/java/org/apache/druid/client/selector/TierSelectorStrategyTest.java,52,,"        new DruidServer(""test1"", ""localhost"", null, 0, ServerType.REALTIME, DruidServer.DEFAULT_TIER, 0),"
72466,./TargetProjects/druid/server/src/test/java/org/apache/druid/curator/CuratorUtilsTest.java,51,,"        ""/foo/bar"","
72467,./TargetProjects/druid/server/src/test/java/org/apache/druid/curator/CuratorUtilsTest.java,53,,"        StringUtils.toUtf8(""baz""),"
72468,./TargetProjects/druid/server/src/test/java/org/apache/druid/curator/announcement/AnnouncerTest.java,75,,"    final byte[] billy = StringUtils.toUtf8(""billy"");"
72469,./TargetProjects/druid/server/src/test/java/org/apache/druid/curator/announcement/AnnouncerTest.java,77,,"    final String testPath2 = ""/somewhere/test2"";"
72470,./TargetProjects/druid/server/src/test/java/org/apache/druid/curator/discovery/ServerDiscoverySelectorTest.java,65,,"    Assert.assertEquals(""http"", server.getScheme());"
72471,./TargetProjects/druid/server/src/test/java/org/apache/druid/curator/discovery/ServerDiscoverySelectorTest.java,72,,"        ""/druid/indexer/v1/action"","
72472,./TargetProjects/druid/server/src/test/java/org/apache/druid/discovery/DruidLeaderClientTest.java,125,,"        ""/simple/leader"""
72473,./TargetProjects/druid/server/src/test/java/org/apache/druid/discovery/DruidLeaderClientTest.java,130,,"    request.setContent(""hello"".getBytes(StandardCharsets.UTF_8));"
72474,./TargetProjects/druid/server/src/test/java/org/apache/druid/discovery/DruidNodeDiscoveryProviderTest.java,94,,"            DataNodeService.DISCOVERY_SERVICE_KEY, new DataNodeService(""tier"", 1000, ServerType.HISTORICAL, 0),"
72475,./TargetProjects/druid/server/src/test/java/org/apache/druid/initialization/InitializationTest.java,259,,"    final File mysql_metadata_storage = new File(extensionsDir, ""mysql-metadata-storage"");"
72476,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java,87,,"      ""fooDataSource"","
72477,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java,88,,"      Intervals.of(""2015-01-01T00Z/2015-01-02T00Z""),"
72478,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java,89,,"      ""version"","
72479,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java,91,,"      ImmutableList.of(""dim1""),"
72480,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java,126,,"      ""zversion"","
72481,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java,343,,"                           .bind(""payload"", mapper.writeValueAsBytes(segment));"
72482,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java,456,,"        new ObjectMetadata(ImmutableMap.of(""foo"", ""bar""))"
72483,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java,456,,"        new ObjectMetadata(ImmutableMap.of(""foo"", ""bar""))"
72484,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java,475,,"        new ObjectMetadata(ImmutableMap.of(""foo"", ""baz""))"
72485,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java,587,,"    Assert.assertEquals(SegmentPublishResult.fail(""java.lang.RuntimeException: Aborting transaction!""), result1);"
72486,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java,1143,,"    final Interval interval = Intervals.of(""2017-01-01/2017-02-01"");"
72487,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java,1146,,"        ""seq"","
72488,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataConnectorTest.java,105,,"    Assert.assertNull(connector.lookup(tableName, ""name"", ""payload"", ""emperor""));"
72489,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataConnectorTest.java,105,,"    Assert.assertNull(connector.lookup(tableName, ""name"", ""payload"", ""emperor""));"
72490,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataConnectorTest.java,105,,"    Assert.assertNull(connector.lookup(tableName, ""name"", ""payload"", ""emperor""));"
72491,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataConnectorTest.java,210,,"        ""\""createTables\"": \"""" + createTables + ""\"","" +"
72492,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataRuleManagerTest.java,112,,"            Intervals.of(""2015-01-01/2015-02-01""), ImmutableMap.of("
72493,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataRuleManagerTest.java,118,,"    AuditInfo auditInfo = new AuditInfo(""test_author"", ""test_comment"", ""127.0.0.1"");"
72494,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataRuleManagerTest.java,118,,"    AuditInfo auditInfo = new AuditInfo(""test_author"", ""test_comment"", ""127.0.0.1"");"
72495,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataRuleManagerTest.java,118,,"    AuditInfo auditInfo = new AuditInfo(""test_author"", ""test_comment"", ""127.0.0.1"");"
72496,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataRuleManagerTest.java,120,,"        ""test_dataSource"","
72497,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataStorageActionHandlerTest.java,116,,"    Map<String, Integer> status1 = ImmutableMap.of(""count"", 42);"
72498,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataStorageActionHandlerTest.java,128,,"    Assert.assertEquals(Optional.absent(), handler.getEntry(""non_exist_entry""));"
72499,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataStorageActionHandlerTest.java,154,,"        handler.getCompletedTaskInfo(DateTimes.of(""2014-01-01""), null, null)"
72500,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataStorageActionHandlerTest.java,199,,"      handler.insert(entryId, DateTimes.of(StringUtils.format(""2014-01-%02d"", i)), ""test"", entry, false, status);"
72501,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataStorageActionHandlerTest.java,269,,"    final ImmutableMap<String, String> log1 = ImmutableMap.of(""logentry"", ""created"");"
72502,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataStorageActionHandlerTest.java,269,,"    final ImmutableMap<String, String> log1 = ImmutableMap.of(""logentry"", ""created"");"
72503,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataStorageActionHandlerTest.java,285,,"    final String entryId = ""ABC123"";"
72504,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataStorageActionHandlerTest.java,301,,"    final ImmutableMap<String, Integer> lock1 = ImmutableMap.of(""lock"", 1);"
72505,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataSupervisorManagerTest.java,94,,"    final String supervisor1 = ""test-supervisor-1"";"
72506,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataSupervisorManagerTest.java,95,,"    final Map<String, String> data1rev1 = ImmutableMap.of(""key1-1"", ""value1-1-1"", ""key1-2"", ""value1-2-1"");"
72507,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataSupervisorManagerTest.java,95,,"    final Map<String, String> data1rev1 = ImmutableMap.of(""key1-1"", ""value1-1-1"", ""key1-2"", ""value1-2-1"");"
72508,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataSupervisorManagerTest.java,95,,"    final Map<String, String> data1rev1 = ImmutableMap.of(""key1-1"", ""value1-1-1"", ""key1-2"", ""value1-2-1"");"
72509,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataSupervisorManagerTest.java,95,,"    final Map<String, String> data1rev1 = ImmutableMap.of(""key1-1"", ""value1-1-1"", ""key1-2"", ""value1-2-1"");"
72510,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataSupervisorManagerTest.java,117,,"    final String datasource1 = ""datasource-1"";"
72511,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SQLMetadataSupervisorManagerTest.java,172,,"    final String supervisor2 = ""test-supervisor-2"";"
72512,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SqlSegmentsMetadataManagerTest.java,87,,"      ""wikipedia"","
72513,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SqlSegmentsMetadataManagerTest.java,237,,"    final String newDataSource2 = ""wikipedia2"";"
72514,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SqlSegmentsMetadataManagerTest.java,409,,"        ""2017-10-15T20:19:12.565Z"","
72515,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SqlSegmentsMetadataManagerTest.java,410,,"        ""index/y=2017/m=10/d=15/2017-10-16T20:19:12.565Z/0/index.zip"","
72516,./TargetProjects/druid/server/src/test/java/org/apache/druid/metadata/SqlSegmentsMetadataManagerTest.java,419,,"        ""2017-10-17T00:00:00.000/2017-10-18T00:00:00.000"","
72517,./TargetProjects/druid/server/src/test/java/org/apache/druid/query/dimension/LookupDimensionSpecTest.java,58,,"        .expect(LOOKUP_REF_MANAGER.get(EasyMock.eq(""lookupName"")))"
72518,./TargetProjects/druid/server/src/test/java/org/apache/druid/query/dimension/LookupDimensionSpecTest.java,67,,"      new LookupDimensionSpec(""dimName"", ""outputName"", MAP_LOOKUP_EXTRACTOR, false, null, null, true, null);"
72519,./TargetProjects/druid/server/src/test/java/org/apache/druid/query/dimension/LookupDimensionSpecTest.java,67,,"      new LookupDimensionSpec(""dimName"", ""outputName"", MAP_LOOKUP_EXTRACTOR, false, null, null, true, null);"
72520,./TargetProjects/druid/server/src/test/java/org/apache/druid/query/dimension/LookupDimensionSpecTest.java,96,,"            ""Missing_value"","
72521,./TargetProjects/druid/server/src/test/java/org/apache/druid/query/dimension/LookupDimensionSpecTest.java,143,,"            TestHelper.createExpectedMap(""not there"", null)"
72522,./TargetProjects/druid/server/src/test/java/org/apache/druid/query/lookup/LookupReferencesManagerTest.java,108,,"    Request request = new Request(HttpMethod.GET, new URL(""http://localhost:1234/xx""));"
72523,./TargetProjects/druid/server/src/test/java/org/apache/druid/query/lookup/LookupReferencesManagerTest.java,113,,"        ""/druid/coordinator/v1/lookups/config/lookupTier?detailed=true"""
72524,./TargetProjects/druid/server/src/test/java/org/apache/druid/query/lookup/LookupReferencesManagerTest.java,140,,"    lookupReferencesManager.get(""test"");"
72525,./TargetProjects/druid/server/src/test/java/org/apache/druid/query/lookup/LookupReferencesManagerTest.java,327,,"    lookupReferencesManager.add(""testName"", new LookupExtractorFactoryContainer(""1"", lookupExtractorFactory1));"
72526,./TargetProjects/druid/server/src/test/java/org/apache/druid/query/lookup/LookupReferencesManagerTest.java,427,,"    lookupReferencesManager.add(""one"", container1);"
72527,./TargetProjects/druid/server/src/test/java/org/apache/druid/query/lookup/LookupReferencesManagerTest.java,428,,"    lookupReferencesManager.add(""two"", container2);"
72528,./TargetProjects/druid/server/src/test/java/org/apache/druid/query/lookup/RegisteredLookupExtractionFnTest.java,173,,"        ""something"","
72529,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/handoff/CoordinatorBasedSegmentHandoffNotifierTest.java,56,,"    Interval interval = Intervals.of(""2011-04-01/2011-04-02"");"
72530,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/handoff/CoordinatorBasedSegmentHandoffNotifierTest.java,60,,"    EasyMock.expect(coordinatorClient.isHandOffComplete(""test_ds"", descriptor))"
72531,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java,80,,"                new TimestampSpec(""time"", ""auto"", null),"
72532,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java,80,,"                new TimestampSpec(""time"", ""auto"", null),"
72533,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java,81,,"                new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dimB"", ""dimA"")), null, null),"
72534,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java,81,,"                new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dimB"", ""dimA"")), null, null),"
72535,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java,94,,"            new DoubleSumAggregatorFactory(""metric1"", ""col1""),"
72536,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java,94,,"            new DoubleSumAggregatorFactory(""metric1"", ""col1""),"
72537,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java,95,,"            new DoubleSumAggregatorFactory(""metric2"", ""col2""),"
72538,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java,95,,"            new DoubleSumAggregatorFactory(""metric2"", ""col2""),"
72539,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java,97,,"        new ArbitraryGranularitySpec(Granularities.DAY, ImmutableList.of(Intervals.of(""2014/2015""))),"
72540,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java,103,,"        ImmutableSet.of(""__time"", ""time"", ""col1"", ""col2"", ""metric1"", ""metric2""),"
72541,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java,117,,"                    ImmutableList.of(""dimC""),"
72542,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/granularity/ArbitraryGranularityTest.java,47,,"            Intervals.of(""2012-01-08T00Z/2012-01-11T00Z""),"
72543,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/granularity/ArbitraryGranularityTest.java,48,,"            Intervals.of(""2012-02-01T00Z/2012-03-01T00Z""),"
72544,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/granularity/ArbitraryGranularityTest.java,49,,"            Intervals.of(""2012-01-07T00Z/2012-01-08T00Z""),"
72545,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/granularity/ArbitraryGranularityTest.java,50,,"            Intervals.of(""2012-01-03T00Z/2012-01-04T00Z""),"
72546,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/granularity/ArbitraryGranularityTest.java,51,,"            Intervals.of(""2012-01-01T00Z/2012-01-03T00Z"")"
72547,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/granularity/ArbitraryGranularityTest.java,206,,"          ""Round-trip"","
72548,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/granularity/UniformGranularityTest.java,52,,"        Intervals.of(""2012-01-08T00Z/2012-01-11T00Z""),"
72549,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/granularity/UniformGranularityTest.java,53,,"        Intervals.of(""2012-01-07T00Z/2012-01-08T00Z""),"
72550,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/granularity/UniformGranularityTest.java,54,,"        Intervals.of(""2012-01-03T00Z/2012-01-04T00Z""),"
72551,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/indexing/granularity/UniformGranularityTest.java,55,,"        Intervals.of(""2012-01-01T00Z/2012-01-03T00Z"")"
72552,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/LocalDataSegmentKillerTest.java,74,,"    killer.kill(getSegmentWithPath(new File(partition011Dir, ""index.zip"").toString()));"
72553,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/LocalFileTimestampVersionFinderTest.java,50,,"    File oldFile = File.createTempFile(""old"", "".txt"", tmpDir);"
72554,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/LocalFileTimestampVersionFinderTest.java,50,,"    File oldFile = File.createTempFile(""old"", "".txt"", tmpDir);"
72555,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/LocalFileTimestampVersionFinderTest.java,61,,"        finder.getLatestVersion(oldFile.toURI(), Pattern.compile("".*\\.txt"")).getPath()"
72556,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,57,,"    jsonMapper.registerSubtypes(new NamedType(LocalLoadSpec.class, ""local""));"
72557,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,85,,"    final DataSegment cachedSegment = dataSegmentWithInterval(""2014-10-20T00:00:00Z/P1D"");"
72558,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,88,,"        ""test_segment_loader/2014-10-20T00:00:00.000Z_2014-10-21T00:00:00.000Z/2015-05-27T03:38:35.683Z/0"""
72559,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,101,,"    final File localStorageFolder = tmpFolder.newFolder(""local_storage_folder"");"
72560,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,105,,"            ""type"","
72561,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,107,,"            ""path"","
72562,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,109,,"            + ""/test_segment_loader"""
72563,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,110,,"            + ""/2014-10-20T00:00:00.000Z_2014-10-21T00:00:00.000Z/2015-05-27T03:38:35.683Z"""
72564,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,111,,"            + ""/0/index.zip"""
72565,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,121,,"    final File indexZip = new File(localSegmentFile, ""index.zip"");"
72566,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,124,,"    Assert.assertFalse(""Expect cache miss before downloading segment"", manager.isSegmentCached(segmentToDownload));"
72567,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,127,,"    Assert.assertTrue(""Expect cache hit after downloading segment"", manager.isSegmentCached(segmentToDownload));"
72568,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,130,,"    Assert.assertFalse(""Expect cache miss after dropping segment"", manager.isSegmentCached(segmentToDownload));"
72569,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,141,,"    final File localStorageFolder2 = tmpFolder.newFolder(""local_storage_folder2"");"
72570,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,149,,"    final File segmentSrcFolder = tmpFolder.newFolder(""segmentSrcFolder"");"
72571,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,173,,"    Assert.assertTrue(segmentFile.getAbsolutePath().contains(""/local_storage_folder/""));"
72572,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,221,,"    Assert.assertTrue(segmentFile.getAbsolutePath().contains(""/local_storage_folder2/""));"
72573,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,323,,"    final DataSegment segmentToDownload2 = dataSegmentWithInterval(""2014-11-20T00:00:00Z/P1D"").withLoadSpec("
72574,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,330,,"                + ""/2014-11-20T00:00:00.000Z_2014-11-21T00:00:00.000Z/2015-05-27T03:38:35.683Z"""
72575,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,337,,"        ""test_segment_loader/2014-11-20T00:00:00.000Z_2014-11-21T00:00:00.000Z/2015-05-27T03:38:35.683Z/0"""
72576,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,384,,"    final StorageLocationConfig locationConfig3 = createStorageLocationConfig(""local_storage_folder3"", 1000000000L, true);"
72577,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/SegmentLocalCacheManagerTest.java,472,,"    Assert.assertTrue(segmentFile3.getAbsolutePath().contains(""/local_storage_folder3/""));"
72578,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/StorageLocationSelectorStrategyTest.java,60,,"    final File localStorageFolder1 = tmpFolder.newFolder(""local_storage_folder_1"");"
72579,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/StorageLocationSelectorStrategyTest.java,61,,"    final File localStorageFolder2 = tmpFolder.newFolder(""local_storage_folder_2"");"
72580,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/StorageLocationSelectorStrategyTest.java,62,,"    final File localStorageFolder3 = tmpFolder.newFolder(""local_storage_folder_3"");"
72581,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/StorageLocationSelectorStrategyTest.java,78,,"    Assert.assertEquals(""The next element of the iterator should point to path local_storage_folder_2"","
72582,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/StorageLocationSelectorStrategyTest.java,82,,"    Assert.assertEquals(""The next element of the iterator should point to path local_storage_folder_3"","
72583,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/StorageLocationSelectorStrategyTest.java,86,,"    Assert.assertEquals(""The next element of the iterator should point to path local_storage_folder_1"","
72584,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/StorageLocationSelectorStrategyTest.java,280,,"    props.setProperty(""druid.segmentCache.locations"", ""[{\""path\"": \""/tmp/druid/indexCache\""}]"");"
72585,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/StorageLocationSelectorStrategyTest.java,280,,"    props.setProperty(""druid.segmentCache.locations"", ""[{\""path\"": \""/tmp/druid/indexCache\""}]"");"
72586,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/StorageLocationSelectorStrategyTest.java,285,,"    Assert.assertEquals(""/tmp/druid/indexCache"", strategy.getLocations().next().getPath().getAbsolutePath());"
72587,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/StorageLocationSelectorStrategyTest.java,293,,"    props.setProperty(""druid.segmentCache.locationSelector.strategy"", ""roundRobin"");"
72588,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/StorageLocationTest.java,55,,"    Assert.assertTrue(locationPlain.canHandle(newSegmentId(""2012/2013"").toString(), 9_000));"
72589,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/StorageLocationTest.java,101,,"    loc.reserve(""test1"", makeSegment(""2012-01-01/2012-01-02"", 10));"
72590,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/StorageLocationTest.java,101,,"    loc.reserve(""test1"", makeSegment(""2012-01-01/2012-01-02"", 10));"
72591,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/loading/StorageLocationTest.java,171,,"    File reserved = loc.reserve(""testPath"", ""segmentId"", 100L);"
72592,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/BatchAppenderatorDriverTest.java,64,,"          ImmutableList.of(""dim1""),"
72593,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/BatchAppenderatorTest.java,65,,"          appenderator.add(IDENTIFIERS.get(0), createInputRow(""2000"", ""foo"", 1), null)"
72594,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/BatchAppenderatorTest.java,65,,"          appenderator.add(IDENTIFIERS.get(0), createInputRow(""2000"", ""foo"", 1), null)"
72595,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/BatchAppenderatorTest.java,72,,"          appenderator.add(IDENTIFIERS.get(1), createInputRow(""2000"", ""bar"", 2), null)"
72596,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/BatchAppenderatorTest.java,100,,"          appenderator.add(IDENTIFIERS.get(2), createInputRow(""2001"", ""qux"", 4), null)"
72597,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/BatchAppenderatorTest.java,100,,"          appenderator.add(IDENTIFIERS.get(2), createInputRow(""2001"", ""qux"", 4), null)"
72598,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/BatchAppenderatorTest.java,304,,"        appenderator.add(IDENTIFIERS.get(0), createInputRow(""2000"", ""bar_"" + i, 1), null);"
72599,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/BatchAppenderatorTest.java,322,,"      appenderator.add(IDENTIFIERS.get(0), createInputRow(""2000"", ""bob"", 1), null);"
72600,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/BatchAppenderatorTest.java,597,,"      appenderator.add(IDENTIFIERS.get(0), createInputRow(""2000"", ""baz"", 1), null);"
72601,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/CommittedTest.java,38,,"      ""foo"","
72602,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/SegmentPublisherHelperTest.java,150,,"        newSegment(new BuildingSingleDimensionShardSpec(0, ""dim"", null, ""ccc"", 0)),"
72603,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorDriverFailTest.java,74,,"  private static final String DATA_SOURCE = ""foo"";"
72604,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorDriverFailTest.java,81,,"          ImmutableList.of(""dim1""),"
72605,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorDriverFailTest.java,149,,"      Assert.assertTrue(driver.add(ROWS.get(i), ""dummy"", committerSupplier, false, true).isOk());"
72606,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorDriverTest.java,82,,"          ImmutableList.of(""dim1""),"
72607,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorDriverTest.java,83,,"          ImmutableMap.of(""dim1"", ""foo"", ""met1"", ""1"")"
72608,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorDriverTest.java,92,,"          ImmutableList.of(""dim2""),"
72609,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorDriverTest.java,145,,"      Assert.assertTrue(driver.add(ROWS.get(i), ""dummy"", committerSupplier, false, true).isOk());"
72610,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorTest.java,92,,"          appenderator.add(IDENTIFIERS.get(0), ir(""2000"", ""foo"", 1), committerSupplier)"
72611,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorTest.java,92,,"          appenderator.add(IDENTIFIERS.get(0), ir(""2000"", ""foo"", 1), committerSupplier)"
72612,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorTest.java,99,,"          appenderator.add(IDENTIFIERS.get(0), ir(""2000"", ""bar"", 2), committerSupplier)"
72613,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorTest.java,106,,"          appenderator.add(IDENTIFIERS.get(1), ir(""2000"", ""qux"", 4), committerSupplier)"
72614,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorTest.java,301,,"        appenderator.add(IDENTIFIERS.get(0), ir(""2000"", ""bar_"" + i, 1), committerSupplier);"
72615,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorTest.java,323,,"      appenderator.add(IDENTIFIERS.get(0), ir(""2000"", ""bob"", 1), committerSupplier);"
72616,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorTest.java,687,,"          final Object metadata = ImmutableMap.of(""eventCount"", eventCount.get());"
72617,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorTest.java,715,,"      appenderator.add(IDENTIFIERS.get(0), ir(""2000"", ""baz"", 1), committerSupplier);"
72618,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorTest.java,856,,"      appenderator.add(IDENTIFIERS.get(2), ir(""2001"", ""bar"", 1), committerSupplier);"
72619,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorTest.java,913,,"                                                   new LongSumAggregatorFactory(""count"", ""count""),"
72620,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorTest.java,914,,"                                                   new LongSumAggregatorFactory(""met"", ""met"")"
72621,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/appenderator/StreamAppenderatorTest.java,1181,,"      Assert.assertArrayEquals(new String[]{""__time"", ""dim"", ""count"", ""met""}, results4.get(0).getColumns().toArray());"
72622,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/firehose/EventReceiverFirehoseTest.java,306,,"      setUpRequestExpectations(""producer"", String.valueOf(i));"
72623,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/firehose/IngestSegmentFirehoseTest.java,73,,"          new StringDimensionSchema(""host""),"
72624,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/firehose/IngestSegmentFirehoseTest.java,74,,"          new NewSpatialDimensionSchema(""spatial"", ImmutableList.of(""x"", ""y""))"
72625,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/firehose/IngestSegmentFirehoseTest.java,90,,"      new LongSumAggregatorFactory(""visited_sum"", ""visited""),"
72626,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/firehose/IngestSegmentFirehoseTest.java,91,,"      new HyperUniquesAggregatorFactory(""unique_hosts"", ""host"")"
72627,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/firehose/InlineFirehoseTest.java,45,,"  private static final String DIMENSION_0 = ""timestamp"";"
72628,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/firehose/InlineFirehoseTest.java,46,,"  private static final String DIMENSION_1 = ""value"";"
72629,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/firehose/SqlFirehoseTest.java,77,,"        ImmutableMap.of(""x"", ""foostring1"", ""timestamp"", 2000),"
72630,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/plumber/RealtimePlumberSchoolTest.java,372,,"    Interval testInterval = new Interval(DateTimes.of(""1970-01-01""), DateTimes.of(""1971-01-01""));"
72631,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/plumber/RealtimePlumberSchoolTest.java,478,,"        ImmutableList.of(""dimD""),"
72632,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/plumber/RealtimePlumberSchoolTest.java,479,,"        ImmutableList.of(""dimC""),"
72633,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/plumber/RealtimePlumberSchoolTest.java,480,,"        ImmutableList.of(""dimA""),"
72634,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/plumber/RealtimePlumberSchoolTest.java,481,,"        ImmutableList.of(""dimB""),"
72635,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/plumber/RealtimePlumberSchoolTest.java,482,,"        ImmutableList.of(""dimE""),"
72636,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/plumber/SinkTest.java,112,,"            return DateTimes.of(""2013-01-01"").getMillis();"
72637,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/plumber/SinkTest.java,243,,"        ""dedupColumn"""
72638,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/plumber/SinkTest.java,258,,"        ImmutableList.of(""field"", ""dedupColumn""),"
72639,./TargetProjects/druid/server/src/test/java/org/apache/druid/segment/realtime/plumber/SinkTest.java,259,,"        ImmutableMap.of(""field1"", ""value1"", ""dedupColumn"", ""v1"")"
72640,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/AsyncManagementForwardingServletTest.java,142,,"    COORDINATOR_EXPECTED_REQUEST.method = ""GET"";"
72641,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/AsyncManagementForwardingServletTest.java,143,,"    COORDINATOR_EXPECTED_REQUEST.headers = ImmutableMap.of(""Authorization"", ""Basic bXl1c2VyOm15cGFzc3dvcmQ="");"
72642,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/AsyncManagementForwardingServletTest.java,143,,"    COORDINATOR_EXPECTED_REQUEST.headers = ImmutableMap.of(""Authorization"", ""Basic bXl1c2VyOm15cGFzc3dvcmQ="");"
72643,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/AsyncManagementForwardingServletTest.java,146,,"        new URL(StringUtils.format(""http://localhost:%d%s"", port, COORDINATOR_EXPECTED_REQUEST.path))"
72644,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/AsyncManagementForwardingServletTest.java,153,,"    Assert.assertTrue(""coordinator called"", COORDINATOR_EXPECTED_REQUEST.called);"
72645,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/AsyncManagementForwardingServletTest.java,154,,"    Assert.assertFalse(""overlord called"", OVERLORD_EXPECTED_REQUEST.called);"
72646,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/AsyncQueryForwardingServletTest.java,131,,"                    new DruidNode(""test"", ""localhost"", false, null, null, true, false)"
72647,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/AsyncQueryForwardingServletTest.java,161,,"    get.setRequestProperty(""Accept-Encoding"", ""gzip"");"
72648,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/AsyncQueryForwardingServletTest.java,205,,"    EasyMock.expect(hostFinder.pickServer(query)).andReturn(new TestServer(""http"", ""1.2.3.4"", 9999)).once();"
72649,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/AsyncQueryForwardingServletTest.java,442,,"        new Service.SchemasRequest(connectionId, ""druid"", null),"
72650,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/ClientInfoResourceTest.java,155,,"    Map<String, Object> actual = resource.getDatasource(dataSource, ""1975/2015"", ""true"");"
72651,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/ClientQuerySegmentWalkerTest.java,175,,"          .add(new Object[]{INTERVAL.getStartMillis(), ""x"", 1, ImmutableList.of(1.0, 2.0), ImmutableList.of(1L, 2L), ImmutableList.of(""1.0"", ""2.0"")})"
72652,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/ClientQuerySegmentWalkerTest.java,175,,"          .add(new Object[]{INTERVAL.getStartMillis(), ""x"", 1, ImmutableList.of(1.0, 2.0), ImmutableList.of(1L, 2L), ImmutableList.of(""1.0"", ""2.0"")})"
72653,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/ClientQuerySegmentWalkerTest.java,176,,"          .add(new Object[]{INTERVAL.getStartMillis(), ""x"", 2, ImmutableList.of(2.0, 4.0), ImmutableList.of(2L, 4L), ImmutableList.of(""2.0"", ""4.0"")})"
72654,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/ClientQuerySegmentWalkerTest.java,177,,"          .add(new Object[]{INTERVAL.getStartMillis(), ""y"", 3, ImmutableList.of(3.0, 6.0), ImmutableList.of(3L, 6L), ImmutableList.of(""3.0"", ""6.0"")})"
72655,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/ClientQuerySegmentWalkerTest.java,177,,"          .add(new Object[]{INTERVAL.getStartMillis(), ""y"", 3, ImmutableList.of(3.0, 6.0), ImmutableList.of(3L, 6L), ImmutableList.of(""3.0"", ""6.0"")})"
72656,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/ClientQuerySegmentWalkerTest.java,178,,"          .add(new Object[]{INTERVAL.getStartMillis(), ""z"", 4, ImmutableList.of(4.0, 8.0), ImmutableList.of(4L, 8L), ImmutableList.of(""4.0"", ""8.0"")})"
72657,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/ClientQuerySegmentWalkerTest.java,249,,"                                .aggregators(new LongSumAggregatorFactory(""sum"", ""n""))"
72658,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/ClientQuerySegmentWalkerTest.java,277,,"                                .withId(""queryId"");"
72659,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/ClientQuerySegmentWalkerTest.java,342,,"                                .aggregators(new CountAggregatorFactory(""cnt""))"
72660,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/ClientQuerySegmentWalkerTest.java,651,,"                                   .setAggregatorSpecs(new LongSumAggregatorFactory(""sum_n"", ""n""))"
72661,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/ConsistentHasherTest.java,47,,"    nodes.add(""localhost:1"");"
72662,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/ConsistentHasherTest.java,48,,"    nodes.add(""localhost:2"");"
72663,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/ConsistentHasherTest.java,49,,"    nodes.add(""localhost:3"");"
72664,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/ConsistentHasherTest.java,50,,"    nodes.add(""localhost:4"");"
72665,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/ConsistentHasherTest.java,51,,"    nodes.add(""localhost:5"");"
72666,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/DruidNodeTest.java,46,,"    final String service = ""test/service"";"
72667,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/DruidNodeTest.java,57,,"    node = new DruidNode(service, ""2001:db8:85a3::8a2e:370:7334"", false, -1, null, true, false);"
72668,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/DruidNodeTest.java,62,,"    node = new DruidNode(service, ""abc:123"", false, null, null, true, false);"
72669,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/DruidNodeTest.java,63,,"    Assert.assertEquals(""abc"", node.getHost());"
72670,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/DruidNodeTest.java,89,,"    node = new DruidNode(service, ""[2001:db8:85a3::8a2e:370:7334]:123"", false, null, null, true, false);"
72671,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/DruidNodeTest.java,113,,"    node = new DruidNode(service, ""host"", false, 123, 123, true, false);"
72672,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/DruidNodeTest.java,118,,"    node = new DruidNode(service, ""host:123"", false, null, 123, true, false);"
72673,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/DruidNodeTest.java,123,,"    node = new DruidNode(""test"", ""host:123"", false, null, 214, true, true);"
72674,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/DruidNodeTest.java,287,,"        mapper.writeValueAsString(new DruidNode(""service"", ""host"", true, 1234, null, 5678, true, true)),"
72675,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/DruidNodeTest.java,334,,"    String json = ""{\n"""
72676,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/DruidNodeTest.java,335,,"                  + ""  \""service\"":\""service\"",\n"""
72677,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/DruidNodeTest.java,336,,"                  + ""  \""host\"":\""host\"",\n"""
72678,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/DruidNodeTest.java,342,,"                  + ""}\n"";"
72679,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/DruidNodeTest.java,349,,"    Assert.assertEquals(""host:1234"", actual.getHostAndPort());"
72680,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/QueryResourceTest.java,130,,"      + ""    ],\n"""
72681,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/QueryResourceTest.java,176,,"      ""localhost"","
72682,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/QueryResourceTest.java,204,,"    EasyMock.expect(testServletRequest.getHeader(""Accept"")).andReturn(MediaType.APPLICATION_JSON).anyTimes();"
72683,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/QueryResourceTest.java,429,,"    Assert.assertEquals(contentTypeHeader, (response.getMetadata().get(""Content-Type"").get(0)).toString());"
72684,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/QuerySchedulerTest.java,140,,"    Assert.assertEquals(QueryScheduler.UNAVAILABLE, scheduler.getLaneAvailableCapacity(""non-existent""));"
72685,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/QuerySchedulerTest.java,330,,"    final String propertyPrefix = ""druid.query.scheduler"";"
72686,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/QuerySchedulerTest.java,336,,"    properties.setProperty(propertyPrefix + "".numThreads"", ""10"");"
72687,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/QuerySchedulerTest.java,355,,"    properties.setProperty(propertyPrefix + "".laning.strategy"", ""hilo"");"
72688,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/RendezvousHasherTest.java,45,,"    nodes.add(""localhost:1"");"
72689,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/RendezvousHasherTest.java,46,,"    nodes.add(""localhost:2"");"
72690,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/RendezvousHasherTest.java,47,,"    nodes.add(""localhost:3"");"
72691,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/RendezvousHasherTest.java,48,,"    nodes.add(""localhost:4"");"
72692,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/RendezvousHasherTest.java,49,,"    nodes.add(""localhost:5"");"
72693,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/SegmentManagerBroadcastJoinIndexedTableTest.java,93,,"      ImmutableSet.of(""market"", ""longNumericNull"", ""doubleNumericNull"", ""floatNumericNull"", ""partial_null_column"");"
72694,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/SegmentManagerBroadcastJoinIndexedTableTest.java,171,,"    Assert.assertEquals(1210, joinable.getCardinality(""placement""));"
72695,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/SegmentManagerBroadcastJoinIndexedTableTest.java,173,,"        Optional.of(ImmutableSet.of(""preferred"")),"
72696,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/SegmentManagerBroadcastJoinIndexedTableTest.java,176,,"            ""spot"","
72697,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/SegmentManagerTest.java,70,,"          MapUtils.getString(segment.getLoadSpec(), ""version""),"
72698,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/SegmentManagerTest.java,71,,"          (Interval) segment.getLoadSpec().get(""interval"")"
72699,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/SegmentManagerTest.java,136,,"          Intervals.of(""0/1000""),"
72700,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/SegmentManagerTest.java,147,,"          Intervals.of(""1000/2000""),"
72701,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/audit/SQLAuditManagerTest.java,61,,"  private final String PAYLOAD_DIMENSION_KEY = ""payload"";"
72702,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/audit/SQLAuditManagerTest.java,112,,"        ""testKey"","
72703,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/audit/SQLAuditManagerTest.java,113,,"        ""testType"","
72704,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/audit/SQLAuditManagerTest.java,115,,"            ""testAuthor"","
72705,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/audit/SQLAuditManagerTest.java,116,,"            ""testComment"","
72706,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/audit/SQLAuditManagerTest.java,117,,"            ""127.0.0.1"""
72707,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/audit/SQLAuditManagerTest.java,119,,"        ""testPayload"","
72708,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/audit/SQLAuditManagerTest.java,180,,"        ""audit_key"","
72709,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordination/SegmentLoadDropHandlerCacheTest.java,121,,"      DataSegment segment = makeSegment(""test"", name);"
72710,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordination/SegmentLoadDropHandlerTest.java,263,,"    final DataSegment segment = makeSegment(""test"", ""1"", Intervals.of(""P1d/2011-04-01""));"
72711,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordination/SegmentLoadDropHandlerTest.java,263,,"    final DataSegment segment = makeSegment(""test"", ""1"", Intervals.of(""P1d/2011-04-01""));"
72712,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordination/SegmentLoadDropHandlerTest.java,331,,"      segments.add(makeSegment(""test"" + i, ""1"", Intervals.of(""P1d/2011-04-02"")));"
72713,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordination/SegmentLoadDropHandlerTest.java,341,,"      segments.add(makeSegment(""test_two"" + i, ""1"", Intervals.of(""P1d/2011-04-01"")));"
72714,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordination/ServerManagerTest.java,190,,"    loadQueryable(""test"", ""1"", Intervals.of(""P1d/2011-04-01""));"
72715,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordination/ServerManagerTest.java,190,,"    loadQueryable(""test"", ""1"", Intervals.of(""P1d/2011-04-01""));"
72716,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordination/ServerManagerTest.java,191,,"    loadQueryable(""test"", ""1"", Intervals.of(""P1d/2011-04-02""));"
72717,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordination/ServerManagerTest.java,259,,"    loadQueryable(""test"", ""3"", Intervals.of(""2011-04-04/2011-04-05""));"
72718,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordination/ServerManagerTest.java,263,,"        ""test"", Intervals.of(""2011-04-04/2011-04-06""),"
72719,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/BalanceSegmentsProfiler.java,59,,"  PeriodLoadRule loadRule = new PeriodLoadRule(new Period(""P5000Y""), null, ImmutableMap.of(""normal"", 3));"
72720,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/BalanceSegmentsTest.java,184,,"    mockDruidServer(druidServer1, ""1"", ""normal"", 30L, 100L, segments);"
72721,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/BalanceSegmentsTest.java,212,,"    Assert.assertEquals(3, params.getCoordinatorStats().getTieredStat(""movedCount"", ""normal""));"
72722,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/CoordinatorStatsTest.java,51,,"    Assert.assertEquals(0, stats.getGlobalStat(""stats""));"
72723,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/CoordinatorStatsTest.java,61,,"    stats.getTieredStat(""stat"", ""tier"");"
72724,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/CoordinatorStatsTest.java,68,,"    stats.addToTieredStat(""stat1"", ""tier1"", 1);"
72725,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/CoordinatorStatsTest.java,68,,"    stats.addToTieredStat(""stat1"", ""tier1"", 1);"
72726,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/CoordinatorStatsTest.java,69,,"    stats.addToTieredStat(""stat1"", ""tier2"", 1);"
72727,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/CoordinatorStatsTest.java,71,,"    stats.addToTieredStat(""stat2"", ""tier1"", 1);"
72728,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/CoordinatorStatsTest.java,83,,"    Assert.assertTrue(stats.getTiers(""stat3"").isEmpty());"
72729,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/CoordinatorStatsTest.java,119,,"    stats.addToDutyStat(""stat1"", ""duty1"", 1);"
72730,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/CoordinatorStatsTest.java,120,,"    stats.addToDutyStat(""stat1"", ""duty2"", 1);"
72731,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/CostBalancerStrategyTest.java,69,,"      ImmutableDruidDataSource dataSource = new ImmutableDruidDataSource(""DUMMY"", Collections.emptyMap(), segments);"
72732,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/DataSourceCompactionConfigTest.java,54,,"        ""dataSource"","
72733,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/DataSourceCompactionConfigTest.java,62,,"        ImmutableMap.of(""key"", ""val"")"
72734,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/DataSourceCompactionConfigTest.java,62,,"        ImmutableMap.of(""key"", ""val"")"
72735,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/DruidClusterTest.java,71,,"      ""src1"", new ImmutableDruidDataSource(""src1"", Collections.emptyMap(), Collections.singletonList(SEGMENTS.get(0))),"
72736,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/DruidClusterTest.java,77,,"          new DruidServerMetadata(""name1"", ""host2"", null, 100L, ServerType.REALTIME, ""tier1"", 0),"
72737,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/DruidClusterTest.java,77,,"          new DruidServerMetadata(""name1"", ""host2"", null, 100L, ServerType.REALTIME, ""tier1"", 0),"
72738,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/DruidCoordinatorConfigTest.java,54,,"    props.setProperty(""druid.coordinator.startDelay"", ""PT1s"");"
72739,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/DruidCoordinatorTest.java,338,,"    String tier = ""hot"";"
72740,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/DruidCoordinatorTest.java,457,,"    final String dataSource = ""dataSource"", hotTierName = ""hot"", coldTierName = ""cold"";"
72741,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/HttpLoadQueuePeonTest.java,57,,"      ""test1"", Intervals.of(""2014/2015""), ""v1"","
72742,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,89,,"              ""test"","
72743,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,130,,"                Intervals.of(""2012-01-01T00:00:00.000Z/2012-01-02T00:00:00.000Z""),"
72744,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,131,,"                ImmutableMap.of(""normal"", 2)"
72745,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,141,,"                new DruidServer(""serverNorm"", ""hostNorm"", null, 1000, ServerType.HISTORICAL, ""normal"", 0)"
72746,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,141,,"                new DruidServer(""serverNorm"", ""hostNorm"", null, 1000, ServerType.HISTORICAL, ""normal"", 0)"
72747,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,146,,"                new DruidServer(""serverNorm2"", ""hostNorm2"", null, 1000, ServerType.HISTORICAL, ""normal"", 0)"
72748,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,146,,"                new DruidServer(""serverNorm2"", ""hostNorm2"", null, 1000, ServerType.HISTORICAL, ""normal"", 0)"
72749,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,163,,"    Assert.assertEquals(34L, stats.getTieredStat(""assignedCount"", ""normal""));"
72750,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,189,,"                ImmutableMap.of(""hot"", 2, ""normal"", 2)"
72751,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,199,,"                new DruidServer(""serverHot"", ""hostHot"", null, 1000, ServerType.HISTORICAL, ""hot"", 0)"
72752,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,199,,"                new DruidServer(""serverHot"", ""hostHot"", null, 1000, ServerType.HISTORICAL, ""hot"", 0)"
72753,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,262,,"                Intervals.of(""2012-01-01T00:00:00.000Z/2012-01-01T12:00:00.000Z""),"
72754,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,267,,"                ImmutableMap.of(""cold"", 1)"
72755,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,313,,"    Assert.assertTrue(stats.getTiers(""unassignedCount"").isEmpty());"
72756,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,314,,"    Assert.assertTrue(stats.getTiers(""unassignedSize"").isEmpty());"
72757,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,633,,"    Assert.assertEquals(12L, stats.getGlobalStat(""deletedCount""));"
72758,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,694,,"    Assert.assertEquals(1L, stats.getTieredStat(""droppedCount"", ""normal""));"
72759,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,722,,"    DruidServer server1 = new DruidServer(""server1"", ""host1"", null, 1000, ServerType.HISTORICAL, ""hot"", 0);"
72760,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/RunRulesTest.java,722,,"    DruidServer server1 = new DruidServer(""server1"", ""host1"", null, 1000, ServerType.HISTORICAL, ""hot"", 0);"
72761,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/ServerHolderTest.java,42,,"          ""src1"","
72762,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/ServerHolderTest.java,76,,"            new DruidServerMetadata(""name1"", ""host1"", null, 100L, ServerType.HISTORICAL, ""tier1"", 0),"
72763,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/ServerHolderTest.java,76,,"            new DruidServerMetadata(""name1"", ""host1"", null, 100L, ServerType.HISTORICAL, ""tier1"", 0),"
72764,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/ServerHolderTest.java,76,,"            new DruidServerMetadata(""name1"", ""host1"", null, 100L, ServerType.HISTORICAL, ""tier1"", 0),"
72765,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/CompactSegmentsTest.java,136,,"            new HashedPartitionsSpec(null, 2, ImmutableList.of(""dim"")),"
72766,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/CompactSegmentsTest.java,202,,"                                      ""2017-01-%02dT00:00:00/2017-01-%02dT12:00:00"","
72767,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/CompactSegmentsTest.java,209,,"                                      ""2017-01-%02dT12:00:00/2017-01-%02dT00:00:00"","
72768,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/CompactSegmentsTest.java,585,,"            new Period(""PT0H""), // smaller than segment interval"
72769,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/CompactSegmentsTest.java,916,,"        .add(Intervals.of(""2017/2018""));"
72770,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/KillAuditLogTest.java,61,,"        new Duration(""PT5S""),"
72771,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/KillCompactionConfigTest.java,93,,"        new Duration(""PT5S""),"
72772,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/KillCompactionConfigTest.java,164,,"        ArgumentMatchers.eq(""name""),"
72773,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/KillCompactionConfigTest.java,165,,"        ArgumentMatchers.eq(""payload""),"
72774,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/KillDatasourceMetadataTest.java,70,,"        new Duration(""PT5S""),"
72775,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/KillDatasourceMetadataTest.java,82,,"        new Duration(""PT1S""),"
72776,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/KillRulesTest.java,68,,"        new Duration(""PT5S""),"
72777,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/KillSupervisorsTest.java,61,,"        new Duration(""PT5S""),"
72778,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/KillUnusedSegmentsTest.java,46,,"    testFindIntervalForKill(ImmutableList.of(Intervals.of(""2014/2015"")), Intervals.of(""2014/2015""));"
72779,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/KillUnusedSegmentsTest.java,55,,"        Intervals.of(""2014/2016"")"
72780,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/MarkAsUnusedOvershadowedSegmentsTest.java,59,,"  private DataSegment segmentV0 = new DataSegment.Builder().dataSource(""test"")"
72781,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstIteratorTest.java,88,,"        ""datasource"","
72782,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstIteratorTest.java,360,,"            new HashedPartitionsSpec(null, 10, ImmutableList.of(""dim"")),"
72783,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstPolicyTest.java,76,,"    final Period segmentPeriod = new Period(""PT1H"");"
72784,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstPolicyTest.java,78,,"        ImmutableMap.of(DATA_SOURCE, createCompactionConfig(10000, new Period(""P2D""), null)),"
72785,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstPolicyTest.java,82,,"                new SegmentGenerateSpec(Intervals.of(""2017-11-16T20:00:00/2017-11-17T04:00:00""), segmentPeriod),"
72786,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstPolicyTest.java,83,,"                new SegmentGenerateSpec(Intervals.of(""2017-11-14T00:00:00/2017-11-16T07:00:00""), segmentPeriod)"
72787,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstPolicyTest.java,92,,"        Intervals.of(""2017-11-14T00:00:00/2017-11-14T01:00:00""),"
72788,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstPolicyTest.java,169,,"        ImmutableMap.of(DATA_SOURCE, createCompactionConfig(10000, new Period(""P1D""), null)),"
72789,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstPolicyTest.java,327,,"        ImmutableMap.of(DATA_SOURCE, createCompactionConfig(inputSegmentSizeBytes, new Period(""P0D""), null)),"
72790,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstPolicyTest.java,353,,"            new Period(""PT5H""),"
72791,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstPolicyTest.java,394,,"        new SegmentGenerateSpec(Intervals.of(""2017-10-14T00:00:00/2017-10-15T00:00:00""), new Period(""P1D""))"
72792,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstPolicyTest.java,662,,"        new SegmentGenerateSpec(Intervals.of(""2017-10-01T00:00:00/2017-10-02T00:00:00""), new Period(""P1D""), ""1994-04-29T00:00:00.000Z"", null),"
72793,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstPolicyTest.java,702,,"            Intervals.of(""2017-10-02T00:00:00/2017-10-03T00:00:00""),"
72794,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstPolicyTest.java,732,,"            new CompactionState(partitionsSpec, indexSpec, ImmutableMap.of(""segmentGranularity"", ""day""))"
72795,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstPolicyTest.java,732,,"            new CompactionState(partitionsSpec, indexSpec, ImmutableMap.of(""segmentGranularity"", ""day""))"
72796,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstPolicyTest.java,784,,"        timeline.findNonOvershadowedObjectsInInterval(Intervals.of(""2017-10-01T00:00:00/2017-10-03T00:00:00""), Partitions.ONLY_COMPLETE)"
72797,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/UnloadUnusedSegmentsTest.java,110,,"        ""datasource2"","
72798,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/UnloadUnusedSegmentsTest.java,132,,"        ""broadcastDatasource"","
72799,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/duty/UnloadUnusedSegmentsTest.java,215,,"        ""tier2"","
72800,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/rules/BroadcastDistributionRuleTest.java,112,,"            ""hot"","
72801,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/rules/BroadcastDistributionRuleTest.java,203,,"            ""tier1"","
72802,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/rules/LoadRuleTest.java,124,,"        ""hot"", 1,"
72803,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/rules/LoadRuleTest.java,128,,"    final DataSegment segment = createDataSegment(""foo"");"
72804,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/rules/LoadRuleTest.java,130,,"    throttler.registerReplicantCreation(DruidServer.DEFAULT_TIER, segment.getId(), ""hostNorm"");"
72805,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/rules/LoadRuleTest.java,144,,"                new DruidServer(""serverHot"", ""hostHot"", null, 1000, ServerType.HISTORICAL, ""hot"", 1)"
72806,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/rules/LoadRuleTest.java,144,,"                new DruidServer(""serverHot"", ""hostHot"", null, 1000, ServerType.HISTORICAL, ""hot"", 1)"
72807,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/rules/LoadRuleTest.java,228,,"        new DruidServer(""serverHot2"", ""hostHot2"", null, 1000, ServerType.HISTORICAL, ""hot"", 1).toImmutableDruidServer();"
72808,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/rules/LoadRuleTest.java,228,,"        new DruidServer(""serverHot2"", ""hostHot2"", null, 1000, ServerType.HISTORICAL, ""hot"", 1).toImmutableDruidServer();"
72809,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/rules/LoadRuleTest.java,399,,"    final LoadRule rule = createLoadRule(ImmutableMap.of(""tier1"", 10, ""tier2"", 10));"
72810,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/rules/LoadRuleTest.java,399,,"    final LoadRule rule = createLoadRule(ImmutableMap.of(""tier1"", 10, ""tier2"", 10));"
72811,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/rules/LoadRuleTest.java,487,,"    Assert.assertEquals(1L, stats.getTieredStat(""droppedCount"", ""hot""));"
72812,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/coordinator/rules/PeriodDropRuleTest.java,38,,"      .version(DateTimes.of(""2012-12-31T01:00:00"").toString())"
72813,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorCompactionConfigsResourceTest.java,60,,"      ImmutableMap.of(""key"", ""val"")"
72814,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorCompactionConfigsResourceTest.java,60,,"      ImmutableMap.of(""key"", ""val"")"
72815,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorCompactionConfigsResourceTest.java,85,,"        ArgumentMatchers.eq(""name""),"
72816,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorCompactionConfigsResourceTest.java,86,,"        ArgumentMatchers.eq(""payload""),"
72817,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorCompactionConfigsResourceTest.java,117,,"    String author = ""maytas"";"
72818,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorCompactionConfigsResourceTest.java,118,,"    String comment = ""hello"";"
72819,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorDynamicConfigTest.java,42,,"    String jsonStr = ""{\n"""
72820,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorDynamicConfigTest.java,43,,"                     + ""  \""millisToWaitBeforeDeleting\"": 1,\n"""
72821,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorDynamicConfigTest.java,44,,"                     + ""  \""mergeBytesLimit\"": 1,\n"""
72822,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorDynamicConfigTest.java,45,,"                     + ""  \""mergeSegmentsLimit\"" : 1,\n"""
72823,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorDynamicConfigTest.java,46,,"                     + ""  \""maxSegmentsToMove\"": 1,\n"""
72824,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorDynamicConfigTest.java,47,,"                     + ""  \""percentOfSegmentsToConsiderPerMove\"": 1,\n"""
72825,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorDynamicConfigTest.java,48,,"                     + ""  \""replicantLifetime\"": 1,\n"""
72826,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorDynamicConfigTest.java,49,,"                     + ""  \""replicationThrottleLimit\"": 1,\n"""
72827,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorDynamicConfigTest.java,50,,"                     + ""  \""balancerComputeThreads\"": 2, \n"""
72828,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorDynamicConfigTest.java,51,,"                     + ""  \""emitBalancingStats\"": true,\n"""
72829,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorDynamicConfigTest.java,52,,"                     + ""  \""killDataSourceWhitelist\"": [\""test1\"",\""test2\""],\n"""
72830,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorDynamicConfigTest.java,59,,"                     + ""}\n"";"
72831,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorDynamicConfigTest.java,70,,"    ImmutableSet<String> decommissioning = ImmutableSet.of(""host1"", ""host2"");"
72832,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorDynamicConfigTest.java,71,,"    ImmutableSet<String> whitelist = ImmutableSet.of(""test1"", ""test2"");"
72833,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorDynamicConfigTest.java,71,,"    ImmutableSet<String> whitelist = ImmutableSet.of(""test1"", ""test2"");"
72834,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/CoordinatorDynamicConfigTest.java,196,,"      Assert.fail(""deserialization should fail."");"
72835,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,101,,"            ""datasource1"","
72836,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,102,,"            Intervals.of(""2010-01-01/P1D""),"
72837,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,115,,"            Intervals.of(""2010-01-22/P1D""),"
72838,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,127,,"            ""datasource2"","
72839,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,161,,"      new AuthenticationResult(""druid"", ""druid"", null, null)"
72840,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,184,,"    Response response = dataSourcesResource.getQueryableDataSources(""full"", null, request);"
72841,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,297,,"    Response response = dataSourcesResource.getQueryableDataSources(null, ""simple"", request);"
72842,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,303,,"      Assert.assertTrue(((Map) ((Map) entry.get(""properties"")).get(""tiers"")).containsKey(null));"
72843,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,304,,"      Assert.assertNotNull((((Map) entry.get(""properties"")).get(""segments"")));"
72844,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,305,,"      Assert.assertEquals(1, ((Map) ((Map) entry.get(""properties"")).get(""segments"")).get(""count""));"
72845,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,358,,"    Assert.assertEquals(1, ((Map) (result.get(""tiers"").get(null))).get(""segmentCount""));"
72846,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,359,,"    Assert.assertEquals(10L, ((Map) (result.get(""tiers"").get(null))).get(""size""));"
72847,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,360,,"    Assert.assertEquals(10L, ((Map) (result.get(""tiers"").get(null))).get(""replicatedSize""));"
72848,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,362,,"    Assert.assertEquals(""2010-01-01T00:00:00.000Z"", result.get(""segments"").get(""minTime"").toString());"
72849,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,362,,"    Assert.assertEquals(""2010-01-01T00:00:00.000Z"", result.get(""segments"").get(""minTime"").toString());"
72850,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,363,,"    Assert.assertEquals(""2010-01-02T00:00:00.000Z"", result.get(""segments"").get(""maxTime"").toString());"
72851,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,374,,"    EasyMock.expect(server.getTier()).andReturn(""cold"").atLeastOnce();"
72852,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,408,,"    server = new DruidServer(""server1"", ""host1"", null, 1234, ServerType.HISTORICAL, ""tier1"", 0);"
72853,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,409,,"    DruidServer server2 = new DruidServer(""server2"", ""host2"", null, 1234, ServerType.HISTORICAL, ""tier2"", 0);"
72854,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,640,,"    EasyMock.expect(databaseRuleManager.getRulesWithDefault(""dataSource1""))"
72855,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,770,,"    Assert.assertEquals(ImmutableMap.of(""numChangedSegments"", 0), response.getEntity());"
72856,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/DataSourcesResourceTest.java,890,,"    Interval interval = Intervals.of(""2011-04-01/2011-04-02"");"
72857,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/IntervalsResourceTest.java,62,,"            ""datasource1"","
72858,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/IntervalsResourceTest.java,63,,"            Intervals.of(""2010-01-01T00:00:00.000Z/P1D""),"
72859,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/IntervalsResourceTest.java,88,,"            ""datasource2"","
72860,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/IntervalsResourceTest.java,114,,"        new AuthenticationResult(""druid"", ""druid"", null, null)"
72861,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/IntervalsResourceTest.java,133,,"    Assert.assertEquals(10L, actualIntervals.get(expectedIntervals.get(1)).get(""datasource1"").get(""size""));"
72862,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/IntervalsResourceTest.java,134,,"    Assert.assertEquals(1, actualIntervals.get(expectedIntervals.get(1)).get(""datasource1"").get(""count""));"
72863,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/LookupCoordinatorResourceTest.java,132,,"    final String errMsg = ""some error"";"
72864,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/LookupCoordinatorResourceTest.java,144,,"    Assert.assertEquals(ImmutableMap.of(""error"", errMsg), response.getEntity());"
72865,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/LookupCoordinatorResourceTest.java,261,,"    Assert.assertEquals(400, lookupCoordinatorResource.getSpecificLookup(""foo"", null).getStatus());"
72866,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/LookupCoordinatorResourceTest.java,292,,"    final String author = ""some author"";"
72867,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/LookupCoordinatorResourceTest.java,293,,"    final String comment = ""some comment"";"
72868,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/LookupCoordinatorResourceTest.java,294,,"    final String ip = ""127.0.0.1"";"
72869,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/RulesResourceTest.java,55,,"        ""testKey"","
72870,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/RulesResourceTest.java,56,,"        ""testType"","
72871,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/RulesResourceTest.java,58,,"            ""testAuthor"","
72872,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/RulesResourceTest.java,59,,"            ""testComment"","
72873,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/RulesResourceTest.java,60,,"            ""127.0.0.1"""
72874,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/RulesResourceTest.java,62,,"        ""testPayload"","
72875,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/RulesResourceTest.java,63,,"        DateTimes.of(""2013-01-02T00:00:00Z"")"
72876,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/RulesResourceTest.java,74,,"        DateTimes.of(""2013-01-01T00:00:00Z"")"
72877,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/RulesResourceTest.java,76,,"    EasyMock.expect(auditManager.fetchAuditHistory(EasyMock.eq(""datasource1""), EasyMock.eq(""rules""), EasyMock.eq(2)))"
72878,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/RulesResourceTest.java,76,,"    EasyMock.expect(auditManager.fetchAuditHistory(EasyMock.eq(""datasource1""), EasyMock.eq(""rules""), EasyMock.eq(2)))"
72879,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/RulesResourceTest.java,139,,"        .andThrow(new IllegalArgumentException(""Limit must be greater than zero!""))"
72880,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/RulesResourceTest.java,148,,"    Assert.assertTrue(rulesHistory.containsKey(""error""));"
72881,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/ServersResourceTest.java,146,,"        ""host:123"","
72882,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/http/security/PreResponseAuthorizationCheckFilterTest.java,53,,"    AuthenticationResult authenticationResult = new AuthenticationResult(""so-very-valid"", ""so-very-valid"", null, null);"
72883,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/initialization/JettyTest.java,292,,"                                new Request(HttpMethod.GET, new URL(""http://localhost:"" + port + ""/slow/hello"")),"
72884,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/initialization/JettyTest.java,328,,"    get.setRequestProperty(""Accept-Encoding"", ""gzip"");"
72885,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/DefaultRequestLogEventTest.java,63,,"            ""127.0.0.1"","
72886,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/DefaultRequestLogEventTest.java,68,,"            ImmutableMap.of(""service"", ""druid-service"", ""host"", ""127.0.0.1""),"
72887,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/DefaultRequestLogEventTest.java,68,,"            ImmutableMap.of(""service"", ""druid-service"", ""host"", ""127.0.0.1""),"
72888,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/FilteredRequestLoggerTest.java,91,,"            .andReturn(new QueryStats(ImmutableMap.of(""query/time"", 100)))"
72889,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/FilteredRequestLoggerTest.java,96,,"            .andReturn(new QueryStats(ImmutableMap.of(""sqlQuery/time"", 1000)));"
72890,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/FilteredRequestLoggerTest.java,193,,"    properties.setProperty(""log.type"", ""filtered"");"
72891,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/FilteredRequestLoggerTest.java,193,,"    properties.setProperty(""log.type"", ""filtered"");"
72892,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/FilteredRequestLoggerTest.java,194,,"    properties.setProperty(""log.queryTimeThresholdMs"", ""100"");"
72893,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/FilteredRequestLoggerTest.java,194,,"    properties.setProperty(""log.queryTimeThresholdMs"", ""100"");"
72894,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/FilteredRequestLoggerTest.java,207,,"        ""log"","
72895,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/LoggingRequestLoggerTest.java,73,,"  final String remoteAddr = ""some.host.tld"";"
72896,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/LoggingRequestLoggerTest.java,74,,"  final Map<String, Object> queryContext = ImmutableMap.of(""foo"", ""bar"");"
72897,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/LoggingRequestLoggerTest.java,76,,"      new TableDataSource(""datasource""),"
72898,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/LoggingRequestLoggerTest.java,82,,"          return Collections.singletonList(Intervals.of(""2016-01-01T00Z/2016-01-02T00Z""));"
72899,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/LoggingRequestLoggerTest.java,213,,"    Assert.assertEquals(""datasource"", map.get(""dataSource""));"
72900,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/LoggingRequestLoggerTest.java,214,,"    Assert.assertEquals(""PT86400S"", map.get(""duration""));"
72901,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/LoggingRequestLoggerTest.java,214,,"    Assert.assertEquals(""PT86400S"", map.get(""duration""));"
72902,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/LoggingRequestLoggerTest.java,215,,"    Assert.assertEquals(""false"", map.get(""hasFilters""));"
72903,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/LoggingRequestLoggerTest.java,215,,"    Assert.assertEquals(""false"", map.get(""hasFilters""));"
72904,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/LoggingRequestLoggerTest.java,216,,"    Assert.assertEquals(""fake"", map.get(""queryType""));"
72905,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/LoggingRequestLoggerTest.java,216,,"    Assert.assertEquals(""fake"", map.get(""queryType""));"
72906,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/LoggingRequestLoggerTest.java,217,,"    Assert.assertEquals(""some.host.tld"", map.get(""remoteAddr""));"
72907,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/LoggingRequestLoggerTest.java,218,,"    Assert.assertEquals(""false"", map.get(""descending""));"
72908,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/LoggingRequestLoggerTest.java,219,,"    Assert.assertEquals(""false"", map.get(""isNested""));"
72909,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/log/LoggingRequestLoggerTest.java,339,,"    throw new UnsupportedOperationException(""shouldn't be here"");"
72910,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,210,,"        HostAndPortWithScheme.fromString(""localhost""),"
72911,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,548,,"    final AuditInfo auditInfo = new AuditInfo(""author"", ""comment"", ""localhost"");"
72912,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,548,,"    final AuditInfo auditInfo = new AuditInfo(""author"", ""comment"", ""localhost"");"
72913,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,621,,"        ImmutableMap.of(""prop"", ""old"")"
72914,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,621,,"        ImmutableMap.of(""prop"", ""old"")"
72915,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,639,,"                ""foo1"", new LookupExtractorFactoryMapContainer("
72916,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,644,,"            ImmutableMap.of(""ignore"", ignore)"
72917,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,651,,"        ImmutableMap.of(""prop"", ""new"")"
72918,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,660,,"                                ""foo2"", newSpec"
72919,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,701,,"                ""foo"", new LookupExtractorFactoryMapContainer("
72920,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,854,,"        ImmutableMap.of(""lookup"", ""foo1"")"
72921,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,1120,,"        ""lookup1"", new LookupExtractorFactoryMapContainer(""v1"", ImmutableMap.of(""k1"", ""v1""))"
72922,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,1123,,"    Map<String, Map<String, LookupExtractorFactoryMapContainer>> configuredLookups = ImmutableMap.of(""tier1"", lookup1);"
72923,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,1137,,"    HostAndPortWithScheme host1 = HostAndPortWithScheme.fromParts(""http"", ""host1"", 1234);"
72924,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,1157,,"                ImmutableMap.of(""lookup0"", new LookupExtractorFactoryMapContainer(""v1"", ImmutableMap.of(""k0"", ""v0""))),"
72925,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,1177,,"                    ""lookup3"", new LookupExtractorFactoryMapContainer(""v1"", ImmutableMap.of(""k0"", ""v0"")),"
72926,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupCoordinatorManagerTest.java,1251,,"        ImmutableMap.of(""lookup2"", new LookupExtractorFactoryMapContainer(""v1"", ImmutableMap.of(""k2"", ""v2"")),"
72927,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/lookup/cache/LookupNodeDiscoveryTest.java,59,,"            LookupNodeService.DISCOVERY_SERVICE_KEY, new LookupNodeService(""tier1""))"
72928,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/metrics/HistoricalMetricsMonitorTest.java,67,,"    final String dataSource = ""dataSource"";"
72929,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/metrics/HistoricalMetricsMonitorTest.java,81,,"    final String tier = ""tier"";"
72930,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/metrics/HistoricalMetricsMonitorTest.java,133,,"        ""metric"", ""segment/max"","
72931,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/metrics/HistoricalMetricsMonitorTest.java,134,,"        ""value"", maxSize"
72932,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/metrics/HistoricalMetricsMonitorTest.java,140,,"        ""priority"", String.valueOf(priority),"
72933,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/metrics/TaskCountStatsMonitorTest.java,78,,"    Assert.assertEquals(""task/success/count"", emitter.getEvents().get(0).toMap().get(""metric""));"
72934,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/metrics/TaskCountStatsMonitorTest.java,79,,"    Assert.assertEquals(1L, emitter.getEvents().get(0).toMap().get(""value""));"
72935,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/metrics/TaskSlotCountStatsMonitorTest.java,75,,"    Assert.assertEquals(""taskSlot/total/count"", emitter.getEvents().get(0).toMap().get(""metric""));"
72936,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/metrics/TaskSlotCountStatsMonitorTest.java,76,,"    Assert.assertEquals(1L, emitter.getEvents().get(0).toMap().get(""value""));"
72937,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/router/JavaScriptTieredBrokerSelectorStrategyTest.java,126,,"                                                                .metric(""count"")"
72938,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/router/TieredBrokerHostSelectorTest.java,77,,"        new DruidNode(""hotBroker"", ""hotHost"", false, 8080, null, true, false),"
72939,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/router/TieredBrokerHostSelectorTest.java,83,,"        new DruidNode(""coldBroker"", ""coldHost1"", false, 8080, null, true, false),"
72940,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/router/TieredBrokerHostSelectorTest.java,156,,"                                  .dataSource(""test"")"
72941,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/router/TieredBrokerHostSelectorTest.java,160,,"                                  .intervals(Collections.singletonList(Intervals.of(""2011-08-31/2011-09-01"")))"
72942,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/router/TieredBrokerHostSelectorTest.java,185,,"              .intervals(Collections.singletonList(Intervals.of(""2013-08-31/2013-09-01"")))"
72943,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/router/TieredBrokerHostSelectorTest.java,214,,"              .aggregators(Collections.singletonList(new CountAggregatorFactory(""count"")))"
72944,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/router/TieredBrokerHostSelectorTest.java,219,,"                          Intervals.of(""2012-08-31/2012-09-01""),"
72945,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/scheduling/ManualQueryLaningStrategyTest.java,60,,"        new ManualQueryLaningStrategy(ImmutableMap.of(""one"", 1, ""ten"", 10), null);"
72946,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/scheduling/ManualQueryLaningStrategyTest.java,60,,"        new ManualQueryLaningStrategy(ImmutableMap.of(""one"", 1, ""ten"", 10), null);"
72947,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/security/AuthorizationUtilsTest.java,48,,"    resources.add(""duplicate"");"
72948,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/security/TrustedDomainAuthenticatorTest.java,39,,"        ""test-authenticator"","
72949,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/security/TrustedDomainAuthenticatorTest.java,40,,"        ""test.com"","
72950,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/security/TrustedDomainAuthenticatorTest.java,42,,"        ""my-auth"","
72951,./TargetProjects/druid/server/src/test/java/org/apache/druid/server/security/TrustedDomainAuthenticatorTest.java,43,,"        ""myUser"""
72952,./TargetProjects/druid/services/src/main/java/org/apache/druid/cli/CliCoordinator.java,234,,"            if (conditionalIndexingServiceDutyMultibind.matchCondition(""druid.coordinator.merge.on"", Predicates.equalTo(""true""))) {"
72953,./TargetProjects/druid/services/src/main/java/org/apache/druid/cli/ExportMetadata.java,249,,"      pathFormatString = ""%s/%s_raw.csv"";"
72954,./TargetProjects/druid/services/src/main/java/org/apache/druid/cli/ExportMetadata.java,251,,"      pathFormatString = ""%s/%s.csv"";"
72955,./TargetProjects/druid/services/src/main/java/org/apache/druid/cli/ResetCluster.java,127,,"    log.info(""==========================================================================="");"
72956,./TargetProjects/druid/services/src/test/java/org/apache/druid/cli/PullDependenciesTest.java,67,,"  private static final String HADOOP_CLIENT_VULNERABLE_JAR1 = HADOOP_CLIENT_VULNERABLE_ARTIFACTID1 + "".jar"";"
72957,./TargetProjects/druid/services/src/test/java/org/apache/druid/cli/validate/DruidJsonValidatorTest.java,70,,"    Cli<?> parser = Cli.builder(""validator"")"
72958,./TargetProjects/druid/sql/src/main/java/org/apache/druid/sql/SqlLifecycle.java,97,,"  @GuardedBy(""lock"")"
72959,./TargetProjects/druid/sql/src/main/java/org/apache/druid/sql/avatica/DruidMeta.java,349,,"    final String sql = ""SELECT\n"""
72960,./TargetProjects/druid/sql/src/main/java/org/apache/druid/sql/avatica/DruidMeta.java,351,,"                       + ""FROM\n"""
72961,./TargetProjects/druid/sql/src/main/java/org/apache/druid/sql/avatica/DruidMeta.java,353,,"                       + ""ORDER BY\n"""
72962,./TargetProjects/druid/sql/src/main/java/org/apache/druid/sql/calcite/expression/OperatorConversions.java,268,,"      Preconditions.checkState(this.returnTypeInference == null, ""Cannot set return type multiple times"");"
72963,./TargetProjects/druid/sql/src/main/java/org/apache/druid/sql/calcite/rel/QueryMaker.java,260,,"        throw new ISE(""Cannot coerce[%s] to %s"", value.getClass().getName(), sqlType);"
72964,./TargetProjects/druid/sql/src/main/java/org/apache/druid/sql/calcite/schema/DruidSchema.java,116,,"  @GuardedBy(""lock"")"
72965,./TargetProjects/druid/sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java,386,,"          ""authenticationResult in dataContext"""
72966,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,210,,"    client = DriverManager.getConnection(url, ""regularUser"", ""druid"");"
72967,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,210,,"    client = DriverManager.getConnection(url, ""regularUser"", ""druid"");"
72968,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,236,,"    final ResultSet resultSet = client.createStatement().executeQuery(""SELECT COUNT(*) AS cnt FROM druid.foo"");"
72969,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,240,,"            ImmutableMap.of(""cnt"", 6L)"
72970,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,269,,"                ""__time"", new Timestamp(DateTimes.of(""2000-01-01T00:00:00.000Z"").getMillis()),"
72971,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,324,,"            ImmutableMap.of(""dim2"", ""a"", ""isnull"", false)"
72972,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,358,,"            row(Pair.of(""TABLE_CAT"", ""druid""))"
72973,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,370,,"            row(Pair.of(""TABLE_CATALOG"", ""druid""), Pair.of(""TABLE_SCHEM"", ""druid""))"
72974,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,384,,"                Pair.of(""TABLE_NAME"", CalciteTests.BROADCAST_DATASOURCE),"
72975,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,386,,"                Pair.of(""TABLE_TYPE"", ""TABLE"")"
72976,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,386,,"                Pair.of(""TABLE_TYPE"", ""TABLE"")"
72977,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,527,,"                Pair.of(""TABLE_NAME"", ""foo""),"
72978,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,528,,"                Pair.of(""COLUMN_NAME"", ""__time""),"
72979,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,529,,"                Pair.of(""DATA_TYPE"", Types.TIMESTAMP),"
72980,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,530,,"                Pair.of(""TYPE_NAME"", ""TIMESTAMP""),"
72981,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,531,,"                Pair.of(""IS_NULLABLE"", ""NO"")"
72982,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,539,,"                Pair.of(""IS_NULLABLE"", nullNumeric ? ""YES"" : ""NO"")"
72983,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,544,,"                Pair.of(""COLUMN_NAME"", ""dim1""),"
72984,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,546,,"                Pair.of(""TYPE_NAME"", ""VARCHAR""),"
72985,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,591,,"            metaData.getColumns(null, ""dr_id"", ""foo"", null),"
72986,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidAvaticaHandlerTest.java,914,,"            ImmutableMap.of(""dim1"", ""abc"")"
72987,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/avatica/DruidStatementTest.java,172,,"                new Object[]{""abc""},"
72988,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/BaseCalciteQueryTest.java,181,,"                  .put(PlannerContext.CTX_SQL_CURRENT_TIMESTAMP, ""2000-01-01T00:00:00Z"")"
72989,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,75,,"                .columns(""dim1"", ""v0"")"
72990,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,102,,"                        .setDimensions(new DefaultDimensionSpec(""v0"", ""_d0""))"
72991,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,112,,"            new Object[]{""foo"", 3L}"
72992,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,135,,"            new Object[]{""[\""10.1word\"",\""up\""]"", ""10.1""},"
72993,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,138,,"            new Object[]{""[\""defword\"",\""up\""]"", ""def""}"
72994,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,176,,"              ""[\""a\"",\""b\""]"","
72995,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,184,,"              ""[\""a\"",\""b\"",\""foo\""]"","
72996,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,190,,"              ""[\""a\"",\""a\"",\""b\""]"","
72997,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,194,,"              ""1.0"","
72998,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,263,,"                    expressionVirtualColumn(""v10"", ""array_concat(array(\""l1\""),array(\""l2\""))"", ValueType.STRING),"
72999,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,264,,"                    expressionVirtualColumn(""v11"", ""array_concat(array(\""d1\""),array(\""d2\""))"", ValueType.STRING),"
