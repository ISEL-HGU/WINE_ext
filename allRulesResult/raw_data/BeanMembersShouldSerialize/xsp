483000,./TargetProjects/iceberg/hive-metastore/src/test/java/org/apache/iceberg/hive/TestHiveMetastore.java,89,,"  private HiveMetaStore.HMSHandler baseHandler;"
483001,./TargetProjects/iceberg/hive-metastore/src/test/java/org/apache/iceberg/hive/TestHiveMetastore.java,90,,"  private HiveClientPool clientPool;"
483002,./TargetProjects/iceberg/hive3/src/main/java/org/apache/iceberg/mr/hive/vector/HiveIcebergVectorizedRecordReader.java,35,,"  private final JobConf job;"
483003,./TargetProjects/iceberg/hive3/src/main/java/org/apache/iceberg/mr/hive/vector/VectorizedRowBatchIterator.java,34,,"  private final RecordReader<NullWritable, VectorizedRowBatch> recordReader;"
483004,./TargetProjects/iceberg/hive3/src/main/java/org/apache/iceberg/mr/hive/vector/VectorizedRowBatchIterator.java,35,,"  private final NullWritable key;"
483005,./TargetProjects/iceberg/hive3/src/main/java/org/apache/iceberg/mr/hive/vector/VectorizedRowBatchIterator.java,36,,"  private final VectorizedRowBatch batch;"
483006,./TargetProjects/iceberg/hive3/src/main/java/org/apache/iceberg/mr/hive/vector/VectorizedRowBatchIterator.java,37,,"  private final VectorizedRowBatchCtx vrbCtx;"
483007,./TargetProjects/iceberg/hive3/src/main/java/org/apache/iceberg/mr/hive/vector/VectorizedRowBatchIterator.java,38,,"  private final int[] partitionColIndices;"
483008,./TargetProjects/iceberg/hive3/src/main/java/org/apache/iceberg/mr/hive/vector/VectorizedRowBatchIterator.java,39,,"  private final Object[] partitionValues;"
483009,./TargetProjects/iceberg/hive3/src/main/java/org/apache/iceberg/mr/hive/vector/VectorizedRowBatchIterator.java,40,,"  private boolean advanced = false;"
483010,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/InputFormatConfig.java,106,,"    private final Configuration conf;"
483011,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/Deserializer.java,45,,"  private FieldDeserializer fieldDeserializer;"
483012,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/Deserializer.java,52,,"    private Schema schema;"
483013,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/Deserializer.java,53,,"    private StructObjectInspector writerInspector;"
483014,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/Deserializer.java,54,,"    private StructObjectInspector sourceInspector;"
483015,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/Deserializer.java,230,,"    private final Map<String, String> sourceNameMap;"
483016,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/Deserializer.java,259,,"    private ObjectInspector writerInspector;"
483017,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/Deserializer.java,260,,"    private ObjectInspector sourceInspector;"
483018,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergMetaHook.java,64,,"  private final Configuration conf;"
483019,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergMetaHook.java,65,,"  private Table icebergTable = null;"
483020,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergMetaHook.java,66,,"  private Properties catalogProperties;"
483021,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergMetaHook.java,67,,"  private boolean deleteIcebergTable;"
483022,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergMetaHook.java,68,,"  private FileIO deleteIo;"
483023,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergMetaHook.java,69,,"  private TableMetadata deleteMetadata;"
483024,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergRecordWriter.java,50,,"  private final PartitionKey currentKey;"
483025,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergRecordWriter.java,51,,"  private final FileIO io;"
483026,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergSerDe.java,56,,"  private ObjectInspector inspector;"
483027,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergSerDe.java,57,,"  private Schema tableSchema;"
483028,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergSerDe.java,58,,"  private Map<ObjectInspector, Deserializer> deserializers = new HashMap<>(1);"
483029,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergSerDe.java,59,,"  private Container<Record> row = new Container<>();"
483030,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergSplit.java,34,,"  private IcebergSplit innerSplit;"
483031,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergSplit.java,40,,"  private String tableLocation;"
483032,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/serde/objectinspector/IcebergRecordObjectInspector.java,40,,"  private final List<IcebergRecordStructField> structFields;"
483033,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/serde/objectinspector/IcebergRecordObjectInspector.java,118,,"    private final Types.NestedField field;"
483034,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/serde/objectinspector/IcebergRecordObjectInspector.java,119,,"    private final ObjectInspector oi;"
483035,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/hive/serde/objectinspector/IcebergRecordObjectInspector.java,120,,"    private final int position;"
483036,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapred/AbstractMapredIcebergRecordReader.java,32,,"  protected final org.apache.hadoop.mapreduce.RecordReader<Void, ?> innerReader;"
483037,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapred/Container.java,33,,"  private T value;"
483038,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapred/MapredIcebergInputFormat.java,50,,"  private final org.apache.iceberg.mr.mapreduce.IcebergInputFormat<T> innerInputFormat;"
483039,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapred/MapredIcebergInputFormat.java,85,,"    private final long splitLength; // for getPos()"
483040,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java,189,,"    private TaskAttemptContext context;"
483041,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java,190,,"    private Schema tableSchema;"
483042,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java,191,,"    private Schema expectedSchema;"
483043,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java,192,,"    private boolean reuseContainers;"
483044,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java,193,,"    private boolean caseSensitive;"
483045,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java,194,,"    private InputFormatConfig.InMemoryDataModel inMemoryDataModel;"
483046,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java,195,,"    private Iterator<FileScanTask> tasks;"
483047,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java,196,,"    private T current;"
483048,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java,197,,"    private CloseableIterator<T> currentIterator;"
483049,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java,198,,"    private FileIO io;"
483050,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java,199,,"    private EncryptionManager encryptionManager;"
483051,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergSplit.java,41,,"  private CombinedScanTask task;"
483052,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergSplit.java,42,,"  private FileIO io;"
483053,./TargetProjects/iceberg/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergSplit.java,43,,"  private EncryptionManager encryptionManager;"
483054,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestCatalogs.java,56,,"  private Configuration conf;"
483055,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestCatalogs.java,59,,"  public TemporaryFolder temp = new TemporaryFolder();"
483056,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestHelper.java,46,,"  private final Configuration conf;"
483057,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestHelper.java,47,,"  private final Tables tables;"
483058,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestHelper.java,48,,"  private final String tableIdentifier;"
483059,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestHelper.java,49,,"  private final Schema schema;"
483060,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestHelper.java,50,,"  private final PartitionSpec spec;"
483061,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestHelper.java,51,,"  private final FileFormat fileFormat;"
483062,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestHelper.java,52,,"  private final TemporaryFolder tmp;"
483063,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestHelper.java,54,,"  private Table table;"
483064,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestHelper.java,123,,"    private final List<Record> records = new ArrayList<Record>();"
483065,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestHelper.java,124,,"    private final Schema schema;"
483066,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestIcebergInputFormats.java,94,,"  public TemporaryFolder temp = new TemporaryFolder();"
483067,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestIcebergInputFormats.java,97,,"  private Configuration conf;"
483068,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestIcebergInputFormats.java,98,,"  private TestHelper helper;"
483069,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestIcebergInputFormats.java,99,,"  private InputFormatConfig.ConfigBuilder builder;"
483070,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestIcebergInputFormats.java,102,,"  private final TestInputFormat.Factory<Record> testInputFormat;"
483071,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestIcebergInputFormats.java,103,,"  private final FileFormat fileFormat;"
483072,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestInputFormatReaderDeletes.java,44,,"  private final Configuration conf = new Configuration();"
483073,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestInputFormatReaderDeletes.java,45,,"  private final HadoopTables tables = new HadoopTables(conf);"
483074,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestInputFormatReaderDeletes.java,46,,"  private TestHelper helper;"
483075,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestInputFormatReaderDeletes.java,49,,"  private final String inputFormat;"
483076,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/TestInputFormatReaderDeletes.java,50,,"  private final FileFormat fileFormat;"
483077,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergOutputCommitter.java,86,,"  public TemporaryFolder temp = new TemporaryFolder();"
483078,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergSerDe.java,48,,"  public TemporaryFolder tmp = new TemporaryFolder();"
483079,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerLocalScan.java,85,,"  private TestTables testTables;"
483080,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerLocalScan.java,88,,"  public FileFormat fileFormat;"
483081,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerLocalScan.java,91,,"  public TestTables.TestTableType testTableType;"
483082,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerLocalScan.java,94,,"  public TemporaryFolder temp = new TemporaryFolder();"
483083,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerNoScan.java,127,,"  private TestTables testTables;"
483084,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerNoScan.java,130,,"  public TestTables.TestTableType testTableType;"
483085,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerNoScan.java,133,,"  public TemporaryFolder temp = new TemporaryFolder();"
483086,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerTimezone.java,81,,"  private TestTables testTables;"
483087,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerTimezone.java,84,,"  public String timezoneString;"
483088,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerTimezone.java,87,,"  public TemporaryFolder temp = new TemporaryFolder();"
483089,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerWithEngine.java,132,,"  private TestTables testTables;"
483090,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerWithEngine.java,135,,"  public FileFormat fileFormat;"
483091,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerWithEngine.java,138,,"  public String executionEngine;"
483092,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerWithEngine.java,141,,"  public TestTables.TestTableType testTableType;"
483093,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerWithEngine.java,144,,"  public boolean isVectorized;"
483094,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerWithEngine.java,147,,"  public TemporaryFolder temp = new TemporaryFolder();"
483095,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerWithMultipleCatalogs.java,51,,"  public FileFormat fileFormat1;"
483096,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerWithMultipleCatalogs.java,53,,"  public FileFormat fileFormat2;"
483097,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerWithMultipleCatalogs.java,55,,"  public String executionEngine;"
483098,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerWithMultipleCatalogs.java,57,,"  public TestTables.TestTableType testTableType1;"
483099,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerWithMultipleCatalogs.java,59,,"  public String table1CatalogName;"
483100,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerWithMultipleCatalogs.java,61,,"  public TestTables.TestTableType testTableType2;"
483101,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerWithMultipleCatalogs.java,63,,"  public String table2CatalogName;"
483102,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerWithMultipleCatalogs.java,66,,"  public TemporaryFolder temp = new TemporaryFolder();"
483103,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerWithMultipleCatalogs.java,67,,"  private TestTables testTables1;"
483104,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandlerWithMultipleCatalogs.java,68,,"  private TestTables testTables2;"
483105,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveShell.java,49,,"  private final TestHiveMetastore metastore;"
483106,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveShell.java,50,,"  private final HiveServer2 hs2;"
483107,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveShell.java,51,,"  private final HiveConf hs2Conf;"
483108,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveShell.java,52,,"  private CLIService client;"
483109,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveShell.java,53,,"  private HiveSession session;"
483110,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveShell.java,54,,"  private boolean started;"
483111,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestTables.java,76,,"  private final Tables tables;"
483112,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestTables.java,77,,"  protected final TemporaryFolder temp;"
483113,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestTables.java,78,,"  protected final String catalog;"
483114,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestTables.java,294,,"    private final Catalog catalog;"
483115,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestTables.java,324,,"    private final String warehouseLocation;"
483116,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/TestTables.java,355,,"    private final String warehouseLocation;"
483117,./TargetProjects/iceberg/mr/src/test/java/org/apache/iceberg/mr/hive/serde/objectinspector/TestIcebergObjectInspector.java,41,,"  private final Schema schema = new Schema("
483118,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/NessieCatalog.java,79,,"  private NessieClient client;"
483119,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/NessieCatalog.java,80,,"  private String warehouseLocation;"
483120,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/NessieCatalog.java,81,,"  private Configuration config;"
483121,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/NessieCatalog.java,82,,"  private UpdateableReference reference;"
483122,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/NessieCatalog.java,83,,"  private String name;"
483123,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/NessieCatalog.java,84,,"  private FileIO fileIO;"
483124,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/NessieCatalog.java,85,,"  private Map<String, String> catalogOptions;"
483125,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/NessieTableOperations.java,47,,"  private final NessieClient client;"
483126,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/NessieTableOperations.java,48,,"  private final ContentsKey key;"
483127,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/NessieTableOperations.java,49,,"  private UpdateableReference reference;"
483128,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/NessieTableOperations.java,50,,"  private IcebergTable table;"
483129,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/NessieTableOperations.java,51,,"  private FileIO fileIO;"
483130,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/NessieTableOperations.java,52,,"  private Map<String, String> catalogOptions;"
483131,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/TableReference.java,30,,"  private final TableIdentifier tableIdentifier;"
483132,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/TableReference.java,31,,"  private final Instant timestamp;"
483133,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/TableReference.java,32,,"  private final String reference;"
483134,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/UpdateableReference.java,31,,"  private Reference reference;"
483135,./TargetProjects/iceberg/nessie/src/main/java/org/apache/iceberg/nessie/UpdateableReference.java,32,,"  private final TreeApi client;"
483136,./TargetProjects/iceberg/nessie/src/test/java/org/apache/iceberg/nessie/BaseTestIceberg.java,61,,"  public Path temp;"
483137,./TargetProjects/iceberg/nessie/src/test/java/org/apache/iceberg/nessie/BaseTestIceberg.java,63,,"  protected NessieCatalog catalog;"
483138,./TargetProjects/iceberg/nessie/src/test/java/org/apache/iceberg/nessie/BaseTestIceberg.java,64,,"  protected NessieClient client;"
483139,./TargetProjects/iceberg/nessie/src/test/java/org/apache/iceberg/nessie/BaseTestIceberg.java,65,,"  protected TreeApi tree;"
483140,./TargetProjects/iceberg/nessie/src/test/java/org/apache/iceberg/nessie/BaseTestIceberg.java,66,,"  protected ContentsApi contents;"
483141,./TargetProjects/iceberg/nessie/src/test/java/org/apache/iceberg/nessie/BaseTestIceberg.java,67,,"  protected Configuration hadoopConfig;"
483142,./TargetProjects/iceberg/nessie/src/test/java/org/apache/iceberg/nessie/BaseTestIceberg.java,68,,"  protected final String branch;"
483143,./TargetProjects/iceberg/nessie/src/test/java/org/apache/iceberg/nessie/BaseTestIceberg.java,69,,"  private String uri;"
483144,./TargetProjects/iceberg/nessie/src/test/java/org/apache/iceberg/nessie/TestBranchVisibility.java,33,,"  private final TableIdentifier tableIdentifier1 = TableIdentifier.of(""test-ns"", ""table1"");"
483145,./TargetProjects/iceberg/nessie/src/test/java/org/apache/iceberg/nessie/TestBranchVisibility.java,34,,"  private final TableIdentifier tableIdentifier2 = TableIdentifier.of(""test-ns"", ""table2"");"
483146,./TargetProjects/iceberg/nessie/src/test/java/org/apache/iceberg/nessie/TestBranchVisibility.java,35,,"  private NessieCatalog testCatalog;"
483147,./TargetProjects/iceberg/nessie/src/test/java/org/apache/iceberg/nessie/TestBranchVisibility.java,36,,"  private int schemaCounter = 1;"
483148,./TargetProjects/iceberg/nessie/src/test/java/org/apache/iceberg/nessie/TestNessieTable.java,78,,"  private Path tableLocation;"
483149,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ApplyNameMapping.java,29,,"  private final NameMapping nameMapping;"
483150,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ExpressionToSearchArgument.java,64,,"  private SearchArgument.Builder builder;"
483151,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ExpressionToSearchArgument.java,65,,"  private Map<Integer, String> idToColumnName;"
483152,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/IdToOrcName.java,54,,"  private final Deque<String> fieldNames = Lists.newLinkedList();"
483153,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/IdToOrcName.java,55,,"  private final Map<Integer, String> idToName = Maps.newHashMap();"
483154,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,62,,"    private final OutputFile file;"
483155,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,63,,"    private final Configuration conf;"
483156,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,64,,"    private Schema schema = null;"
483157,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,65,,"    private BiFunction<Schema, TypeDescription, OrcRowWriter<?>> createWriterFunc;"
483158,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,66,,"    private Map<String, byte[]> metadata = new HashMap<>();"
483159,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,67,,"    private MetricsConfig metricsConfig;"
483160,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,130,,"    private final InputFile file;"
483161,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,131,,"    private final Configuration conf;"
483162,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,132,,"    private Schema schema = null;"
483163,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,133,,"    private Long start = null;"
483164,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,134,,"    private Long length = null;"
483165,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,135,,"    private Expression filter = null;"
483166,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,136,,"    private boolean caseSensitive = true;"
483167,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,137,,"    private NameMapping nameMapping = null;"
483168,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,139,,"    private Function<TypeDescription, OrcRowReader<?>> readerFunc;"
483169,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,140,,"    private Function<TypeDescription, OrcBatchReader<?>> batchedReaderFunc;"
483170,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORC.java,141,,"    private int recordsPerBatch = VectorizedRowBatch.DEFAULT_SIZE;"
483171,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORCSchemaUtil.java,51,,"    private final String name;"
483172,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/ORCSchemaUtil.java,52,,"    private final TypeDescription type;"
483173,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcFileAppender.java,50,,"  private final int batchSize;"
483174,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcFileAppender.java,51,,"  private final OutputFile file;"
483175,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcFileAppender.java,52,,"  private final Writer writer;"
483176,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcFileAppender.java,53,,"  private final VectorizedRowBatch batch;"
483177,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcFileAppender.java,54,,"  private final OrcRowWriter<D> valueWriter;"
483178,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcFileAppender.java,55,,"  private boolean isClosed = false;"
483179,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcFileAppender.java,56,,"  private final Configuration conf;"
483180,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcFileAppender.java,57,,"  private final MetricsConfig metricsConfig;"
483181,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,46,,"  private final Configuration config;"
483182,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,47,,"  private final Schema schema;"
483183,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,48,,"  private final InputFile file;"
483184,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,49,,"  private final Long start;"
483185,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,50,,"  private final Long length;"
483186,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,51,,"  private final Function<TypeDescription, OrcRowReader<?>> readerFunction;"
483187,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,52,,"  private final Expression filter;"
483188,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,53,,"  private final boolean caseSensitive;"
483189,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,54,,"  private final Function<TypeDescription, OrcBatchReader<?>> batchReaderFunction;"
483190,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,55,,"  private final int recordsPerBatch;"
483191,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,56,,"  private NameMapping nameMapping;"
483192,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,134,,"    private int nextRow;"
483193,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,135,,"    private VectorizedRowBatch current;"
483194,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,136,,"    private int currentBatchSize;"
483195,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,138,,"    private final VectorizedRowBatchIterator batchIter;"
483196,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,139,,"    private final OrcRowReader<T> reader;"
483197,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcSchemaVisitor.java,33,,"  private final Deque<String> fieldNames = Lists.newLinkedList();"
483198,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcValueReaders.java,142,,"    private final OrcValueReader<?>[] readers;"
483199,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcValueReaders.java,143,,"    private final boolean[] isConstantOrMetadataField;"
483200,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcValueReaders.java,204,,"    private final C constant;"
483201,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcValueReaders.java,222,,"    private long batchOffsetInFile;"
483202,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/VectorizedRowBatchIterator.java,36,,"  private final String fileLocation;"
483203,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/VectorizedRowBatchIterator.java,37,,"  private final RecordReader rows;"
483204,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/VectorizedRowBatchIterator.java,38,,"  private final VectorizedRowBatch batch;"
483205,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/VectorizedRowBatchIterator.java,39,,"  private boolean advanced = false;"
483206,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/VectorizedRowBatchIterator.java,40,,"  private long batchOffsetInFile = 0;"
483207,./TargetProjects/iceberg/orc/src/test/java/org/apache/iceberg/orc/TestBuildOrcProjection.java,158,,"  public ExpectedException exceptionRule = ExpectedException.none();"
483208,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/data/parquet/BaseParquetReaders.java,115,,"    private final MessageType type;"
483209,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/data/parquet/BaseParquetReaders.java,116,,"    private final Map<Integer, ?> idToConstant;"
483210,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/data/parquet/BaseParquetWriter.java,54,,"    private final MessageType type;"
483211,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/data/parquet/BaseParquetWriter.java,150,,"    private final ColumnDescriptor desc;"
483212,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/data/parquet/GenericParquetReaders.java,56,,"    private final StructType structType;"
483213,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ApplyNameMapping.java,35,,"  private final NameMapping nameMapping;"
483214,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BaseColumnIterator.java,29,,"  protected final ColumnDescriptor desc;"
483215,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BaseColumnIterator.java,32,,"  protected PageReader pageSource = null;"
483216,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BaseColumnIterator.java,33,,"  protected long triplesCount = 0L;"
483217,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BaseColumnIterator.java,34,,"  protected long triplesRead = 0L;"
483218,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BaseColumnIterator.java,35,,"  protected long advanceNextPageCount = 0L;"
483219,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BaseColumnIterator.java,36,,"  protected Dictionary dictionary;"
483220,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BasePageIterator.java,44,,"  protected final ColumnDescriptor desc;"
483221,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BasePageIterator.java,45,,"  protected final String writerVersion;"
483222,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BasePageIterator.java,48,,"  protected boolean hasNext = false;"
483223,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BasePageIterator.java,49,,"  protected int triplesRead = 0;"
483224,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BasePageIterator.java,54,,"  protected Dictionary dictionary = null;"
483225,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BasePageIterator.java,55,,"  protected DataPage page = null;"
483226,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BasePageIterator.java,56,,"  protected int triplesCount = 0;"
483227,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BasePageIterator.java,59,,"  protected IntIterator repetitionLevels = null;"
483228,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BasePageIterator.java,151,,"    private final ValuesReader delegate;"
483229,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BasePageIterator.java,178,,"    private final RunLengthBitPackingHybridDecoder delegate;"
483230,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ColumnIterator.java,85,,"  private final PageIterator<T> pageIterator;"
483231,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ColumnWriter.java,79,,"  private final ColumnDescriptor desc;"
483232,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ColumnWriter.java,80,,"  private final int maxDefinitionLevel;"
483233,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ColumnWriter.java,82,,"  private org.apache.parquet.column.ColumnWriter columnWriter = null;"
483234,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/MessageTypeToType.java,50,,"  private final Map<String, Integer> aliasToId = Maps.newHashMap();"
483235,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/MessageTypeToType.java,51,,"  private final Function<String[], Integer> nameToIdFunc;"
483236,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,102,,"    private final OutputFile file;"
483237,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,103,,"    private final Map<String, String> metadata = Maps.newLinkedHashMap();"
483238,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,104,,"    private final Map<String, String> config = Maps.newLinkedHashMap();"
483239,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,105,,"    private Schema schema = null;"
483240,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,106,,"    private String name = ""table"";"
483241,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,107,,"    private WriteSupport<?> writeSupport = null;"
483242,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,108,,"    private Function<MessageType, ParquetValueWriter<?>> createWriterFunc = null;"
483243,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,109,,"    private MetricsConfig metricsConfig = MetricsConfig.getDefault();"
483244,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,110,,"    private ParquetFileWriter.Mode writeMode = ParquetFileWriter.Mode.CREATE;"
483245,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,111,,"    private WriterVersion writerVersion = WriterVersion.PARQUET_1_0;"
483246,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,290,,"    private final WriteBuilder appenderBuilder;"
483247,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,291,,"    private final String location;"
483248,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,292,,"    private Function<MessageType, ParquetValueWriter<?>> createWriterFunc = null;"
483249,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,293,,"    private Schema rowSchema = null;"
483250,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,294,,"    private PartitionSpec spec = null;"
483251,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,295,,"    private StructLike partition = null;"
483252,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,296,,"    private EncryptionKeyMetadata keyMetadata = null;"
483253,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,297,,"    private int[] equalityFieldIds = null;"
483254,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,298,,"    private SortOrder sortOrder;"
483255,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,299,,"    private Function<CharSequence, ?> pathTransformFunc = Function.identity();"
483256,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,441,,"    private Map<String, String> keyValueMetadata = Maps.newHashMap();"
483257,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,442,,"    private Map<String, String> config = Maps.newHashMap();"
483258,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,443,,"    private MessageType type;"
483259,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,489,,"    private final InputFile file;"
483260,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,490,,"    private final Map<String, String> properties = Maps.newHashMap();"
483261,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,491,,"    private Long start = null;"
483262,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,492,,"    private Long length = null;"
483263,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,493,,"    private Schema schema = null;"
483264,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,494,,"    private Expression filter = null;"
483265,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,495,,"    private ReadSupport<?> readSupport = null;"
483266,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,496,,"    private Function<MessageType, VectorizedReader<?>> batchedReaderFunc = null;"
483267,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,497,,"    private Function<MessageType, ParquetValueReader<?>> readerFunc = null;"
483268,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,498,,"    private boolean filterRecords = true;"
483269,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,499,,"    private boolean caseSensitive = true;"
483270,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,500,,"    private boolean callInit = false;"
483271,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,501,,"    private boolean reuseContainers = false;"
483272,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,502,,"    private int maxRecordsPerBatch = 10000;"
483273,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,503,,"    private NameMapping nameMapping = null;"
483274,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,681,,"    private Schema schema = null;"
483275,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,682,,"    private ReadSupport<T> readSupport = null;"
483276,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,683,,"    private boolean callInit = false;"
483277,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/Parquet.java,684,,"    private NameMapping nameMapping = null;"
483278,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetAvro.java,55,,"    private final int precision;"
483279,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetAvro.java,56,,"    private final int scale;"
483280,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetAvro.java,161,,"    private final WeakHashMap<Pair<Integer, Integer>, LogicalType> decimalsByScale;"
483281,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetAvroValueReaders.java,68,,"    private final org.apache.iceberg.Schema schema;"
483282,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetAvroValueReaders.java,69,,"    private final Map<org.apache.iceberg.types.Type, Schema> avroSchemas;"
483283,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetAvroValueReaders.java,70,,"    private final MessageType type;"
483284,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetAvroValueReaders.java,236,,"    private final int scale;"
483285,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetAvroValueReaders.java,299,,"    private final Schema schema;"
483286,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetAvroValueReaders.java,344,,"    private final Schema schema;"
483287,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetAvroWriter.java,46,,"    private final MessageType type;"
483288,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetDictionaryRowGroupFilter.java,53,,"  private final Schema schema;"
483289,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetDictionaryRowGroupFilter.java,54,,"  private final Expression expr;"
483290,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetDictionaryRowGroupFilter.java,82,,"    private DictionaryPageReadStore dictionaries = null;"
483291,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetDictionaryRowGroupFilter.java,83,,"    private Map<Integer, Set<?>> dictCache = null;"
483292,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetDictionaryRowGroupFilter.java,84,,"    private Map<Integer, Boolean> isFallback = null;"
483293,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetDictionaryRowGroupFilter.java,85,,"    private Map<Integer, Boolean> mayContainNulls = null;"
483294,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetDictionaryRowGroupFilter.java,86,,"    private Map<Integer, ColumnDescriptor> cols = null;"
483295,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetDictionaryRowGroupFilter.java,87,,"    private Map<Integer, Function<Object, Object>> conversions = null;"
483296,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetFilters.java,56,,"    private final Schema schema;"
483297,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetFilters.java,57,,"    private final boolean caseSensitive;"
483298,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetIO.java,107,,"    private final org.apache.iceberg.io.SeekableInputStream delegate;"
483299,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetIO.java,126,,"    private final org.apache.iceberg.io.PositionOutputStream delegate;"
483300,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetIO.java,140,,"    private final org.apache.iceberg.io.OutputFile file;"
483301,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetIO.java,168,,"    private final org.apache.iceberg.io.InputFile file;"
483302,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetIterable.java,31,,"  private final ParquetReader.Builder<T> builder;"
483303,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetIterable.java,49,,"    private final ParquetReader<T> parquet;"
483304,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetIterable.java,50,,"    private boolean needsAdvance = false;"
483305,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetIterable.java,51,,"    private boolean hasNext = false;"
483306,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetIterable.java,52,,"    private T next;"
483307,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetMetricsRowGroupFilter.java,52,,"  private final Schema schema;"
483308,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetMetricsRowGroupFilter.java,53,,"  private final Expression expr;"
483309,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetMetricsRowGroupFilter.java,80,,"    private Map<Integer, Statistics<?>> stats = null;"
483310,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetMetricsRowGroupFilter.java,81,,"    private Map<Integer, Long> valueCounts = null;"
483311,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetMetricsRowGroupFilter.java,82,,"    private Map<Integer, Function<Object, Object>> conversions = null;"
483312,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReadSupport.java,42,,"  private final Schema expectedSchema;"
483313,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReadSupport.java,43,,"  private final ReadSupport<T> wrapped;"
483314,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReadSupport.java,44,,"  private final boolean callInit;"
483315,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReadSupport.java,45,,"  private final NameMapping nameMapping;"
483316,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,39,,"  private final InputFile input;"
483317,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,40,,"  private final Schema expectedSchema;"
483318,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,41,,"  private final ParquetReadOptions options;"
483319,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,42,,"  private final Function<MessageType, ParquetValueReader<?>> readerFunc;"
483320,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,43,,"  private final Expression filter;"
483321,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,44,,"  private final boolean reuseContainers;"
483322,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,45,,"  private final boolean caseSensitive;"
483323,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,46,,"  private final NameMapping nameMapping;"
483324,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,62,,"  private ReadConf<T> conf = null;"
483325,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,83,,"    private final ParquetFileReader reader;"
483326,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,84,,"    private final boolean[] shouldSkip;"
483327,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,85,,"    private final ParquetValueReader<T> model;"
483328,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,86,,"    private final long totalValues;"
483329,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,87,,"    private final boolean reuseContainers;"
483330,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,88,,"    private final long[] rowGroupsStartRowPos;"
483331,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,90,,"    private int nextRowGroup = 0;"
483332,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,91,,"    private long nextRowGroupStart = 0;"
483333,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,92,,"    private long valuesRead = 0;"
483334,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,93,,"    private T last = null;"
483335,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetTypeVisitor.java,33,,"  private final Deque<String> fieldNames = Lists.newLinkedList();"
483336,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,118,,"    private final C constantValue;"
483337,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,145,,"    private long rowOffset = -1;"
483338,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,146,,"    private long rowGroupStart;"
483339,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,172,,"    private final ColumnDescriptor desc;"
483340,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,174,,"    protected final ColumnIterator<?> column;"
483341,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,175,,"    private final List<TripleIterator<?>> children;"
483342,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,279,,"    private final int scale;"
483343,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,293,,"    private final int scale;"
483344,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,307,,"    private int scale;"
483345,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,355,,"    private final int definitionLevel;"
483346,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,356,,"    private final ParquetValueReader<T> reader;"
483347,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,357,,"    private final TripleIterator<?> column;"
483348,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,358,,"    private final List<TripleIterator<?>> children;"
483349,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,397,,"    private final int definitionLevel;"
483350,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,398,,"    private final int repetitionLevel;"
483351,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,399,,"    private final ParquetValueReader<E> reader;"
483352,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,400,,"    private final TripleIterator<?> column;"
483353,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,401,,"    private final List<TripleIterator<?>> children;"
483354,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,457,,"    private List<E> lastList = null;"
483355,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,458,,"    private Iterator<E> elements = null;"
483356,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,507,,"    private final int definitionLevel;"
483357,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,508,,"    private final int repetitionLevel;"
483358,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,509,,"    private final ParquetValueReader<K> keyReader;"
483359,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,510,,"    private final ParquetValueReader<V> valueReader;"
483360,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,511,,"    private final TripleIterator<?> column;"
483361,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,512,,"    private final List<TripleIterator<?>> children;"
483362,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,575,,"    private final ReusableEntry<K, V> nullEntry = new ReusableEntry<>();"
483363,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,576,,"    private Map<K, V> lastMap = null;"
483364,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,577,,"    private Iterator<Map.Entry<K, V>> pairs = null;"
483365,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,627,,"    private K key = null;"
483366,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,658,,"    private final ParquetValueReader<?>[] readers;"
483367,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,659,,"    private final TripleIterator<?> column;"
483368,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,660,,"    private final List<TripleIterator<?>> children;"
483369,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,124,,"    protected final ColumnWriter<T> column;"
483370,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,125,,"    private final List<TripleWriter<?>> children;"
483371,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,175,,"    private final FloatFieldMetrics.Builder floatFieldMetricsBuilder;"
483372,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,196,,"    private final DoubleFieldMetrics.Builder doubleFieldMetricsBuilder;"
483373,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,239,,"    private final int precision;"
483374,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,240,,"    private final int scale;"
483375,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,260,,"    private final int precision;"
483376,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,261,,"    private final int scale;"
483377,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,281,,"    private final int precision;"
483378,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,282,,"    private final int scale;"
483379,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,283,,"    private final ThreadLocal<byte[]> bytes;"
483380,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,328,,"    private final int definitionLevel;"
483381,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,329,,"    private final ParquetValueWriter<T> writer;"
483382,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,330,,"    private final List<TripleWriter<?>> children;"
483383,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,331,,"    private long nullValueCount = 0;"
483384,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,391,,"    private final int definitionLevel;"
483385,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,392,,"    private final int repetitionLevel;"
483386,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,393,,"    private final ParquetValueWriter<E> writer;"
483387,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,394,,"    private final List<TripleWriter<?>> children;"
483388,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,462,,"    private final int definitionLevel;"
483389,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,463,,"    private final int repetitionLevel;"
483390,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,464,,"    private final ParquetValueWriter<K> keyWriter;"
483391,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,465,,"    private final ParquetValueWriter<V> valueWriter;"
483392,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,466,,"    private final List<TripleWriter<?>> children;"
483393,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,540,,"    private final ParquetValueWriter<Object>[] writers;"
483394,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,541,,"    private final List<TripleWriter<?>> children;"
483395,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueWriters.java,587,,"    private final Function<CharSequence, ?> pathTransformFunc;"
483396,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriteAdapter.java,40,,"  private ParquetWriter<D> writer;"
483397,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriteAdapter.java,41,,"  private MetricsConfig metricsConfig;"
483398,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriteAdapter.java,42,,"  private ParquetMetadata footer;"
483399,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriteSupport.java,30,,"  private final MessageType type;"
483400,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriteSupport.java,31,,"  private final Map<String, String> keyValueMetadata;"
483401,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriteSupport.java,32,,"  private final WriteSupport<T> wrapped;"
483402,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java,63,,"  private final long targetRowGroupSize;"
483403,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java,64,,"  private final Map<String, String> metadata;"
483404,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java,65,,"  private final ParquetProperties props;"
483405,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java,66,,"  private final CodecFactory.BytesCompressor compressor;"
483406,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java,67,,"  private final MessageType parquetSchema;"
483407,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java,68,,"  private final ParquetValueWriter<T> model;"
483408,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java,69,,"  private final ParquetFileWriter writer;"
483409,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java,70,,"  private final MetricsConfig metricsConfig;"
483410,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java,71,,"  private final int columnIndexTruncateLength;"
483411,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java,73,,"  private DynMethods.BoundMethod flushPageStoreToWriter;"
483412,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java,74,,"  private ColumnWriteStore writeStore;"
483413,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java,75,,"  private long nextRowGroupSize = 0;"
483414,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java,76,,"  private long recordCount = 0;"
483415,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java,77,,"  private long nextCheckRecordCount = 10;"
483416,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java,78,,"  private boolean closed;"
483417,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/PruneColumns.java,34,,"  private final Set<Integer> selectedIds;"
483418,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,51,,"  private final ParquetFileReader reader;"
483419,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,52,,"  private final InputFile file;"
483420,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,53,,"  private final ParquetReadOptions options;"
483421,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,54,,"  private final MessageType projection;"
483422,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,55,,"  private final ParquetValueReader<T> model;"
483423,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,56,,"  private final VectorizedReader<T> vectorizedModel;"
483424,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,57,,"  private final List<BlockMetaData> rowGroups;"
483425,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,58,,"  private final boolean[] shouldSkip;"
483426,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,59,,"  private final long totalValues;"
483427,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,60,,"  private final boolean reuseContainers;"
483428,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,61,,"  private final Integer batchSize;"
483429,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,62,,"  private final long[] startRowPositions;"
483430,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,65,,"  private final List<Map<ColumnPath, ColumnChunkMetaData>> columnChunkMetaDataForRowGroups;"
483431,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/TypeWithSchemaVisitor.java,40,,"  protected ArrayDeque<String> fieldNames = new ArrayDeque<>();"
483432,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ValuesAsBytesReader.java,34,,"  private ByteBufferInputStream valuesInputStream = null;"
483433,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ValuesAsBytesReader.java,36,,"  private int bitOffset;"
483434,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ValuesAsBytesReader.java,37,,"  private byte currentByte = 0;"
483435,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,44,,"  private final InputFile input;"
483436,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,45,,"  private final Schema expectedSchema;"
483437,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,46,,"  private final ParquetReadOptions options;"
483438,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,47,,"  private final Function<MessageType, VectorizedReader<?>> batchReaderFunc;"
483439,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,48,,"  private final Expression filter;"
483440,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,49,,"  private boolean reuseContainers;"
483441,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,50,,"  private final boolean caseSensitive;"
483442,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,51,,"  private final int batchSize;"
483443,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,52,,"  private final NameMapping nameMapping;"
483444,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,70,,"  private ReadConf conf = null;"
483445,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,91,,"    private final ParquetFileReader reader;"
483446,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,92,,"    private final boolean[] shouldSkip;"
483447,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,93,,"    private final VectorizedReader<T> model;"
483448,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,94,,"    private final long totalValues;"
483449,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,95,,"    private final int batchSize;"
483450,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,96,,"    private final List<Map<ColumnPath, ColumnChunkMetaData>> columnChunkMetadata;"
483451,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,97,,"    private final boolean reuseContainers;"
483452,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,98,,"    private int nextRowGroup = 0;"
483453,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,99,,"    private long nextRowGroupStart = 0;"
483454,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,100,,"    private long valuesRead = 0;"
483455,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,101,,"    private T last = null;"
483456,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/VectorizedParquetReader.java,102,,"    private final long[] rowGroupsStartRowPos;"
483457,./TargetProjects/iceberg/parquet/src/test/java/org/apache/iceberg/parquet/TestDictionaryRowGroupFilter.java,145,,"  private MessageType parquetSchema = null;"
483458,./TargetProjects/iceberg/parquet/src/test/java/org/apache/iceberg/parquet/TestDictionaryRowGroupFilter.java,146,,"  private BlockMetaData rowGroupMetadata = null;"
483459,./TargetProjects/iceberg/parquet/src/test/java/org/apache/iceberg/parquet/TestDictionaryRowGroupFilter.java,147,,"  private DictionaryPageReadStore dictionaryStore = null;"
483460,./TargetProjects/iceberg/parquet/src/test/java/org/apache/iceberg/parquet/TestDictionaryRowGroupFilter.java,148,,"  private final WriterVersion writerVersion;"
483461,./TargetProjects/iceberg/parquet/src/test/java/org/apache/iceberg/parquet/TestDictionaryRowGroupFilter.java,151,,"  public TemporaryFolder temp = new TemporaryFolder();"
483462,./TargetProjects/iceberg/parquet/src/test/java/org/apache/iceberg/parquet/TestParquet.java,50,,"  public TemporaryFolder temp = new TemporaryFolder();"
483463,./TargetProjects/iceberg/parquet/src/test/java/org/apache/iceberg/parquet/TestParquetDeleteWriters.java,56,,"  private List<Record> records;"
483464,./TargetProjects/iceberg/parquet/src/test/java/org/apache/iceberg/parquet/TestParquetDeleteWriters.java,59,,"  public TemporaryFolder temp = new TemporaryFolder();"
483465,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/IcebergPigInputFormat.java,67,,"  private final Table table;"
483466,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/IcebergPigInputFormat.java,68,,"  private final String signature;"
483467,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/IcebergPigInputFormat.java,69,,"  private List<InputSplit> splits;"
483468,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/IcebergPigInputFormat.java,114,,"    private CombinedScanTask task;"
483469,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/IcebergPigInputFormat.java,151,,"    private TaskAttemptContext context;"
483470,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/IcebergPigInputFormat.java,153,,"    private Iterator<FileScanTask> tasks;"
483471,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/IcebergPigInputFormat.java,155,,"    private CloseableIterable reader;"
483472,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/IcebergPigInputFormat.java,156,,"    private Iterator<T> recordIterator;"
483473,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/IcebergPigInputFormat.java,157,,"    private T currentRecord;"
483474,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/IcebergStorage.java,76,,"  private String signature;"
483475,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/IcebergStorage.java,78,,"  private IcebergRecordReader reader;"
483476,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/PigParquetReader.java,115,,"    private final MessageType type;"
483477,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/PigParquetReader.java,116,,"    private final Map<Integer, Object> partitionValues;"
483478,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/PigParquetReader.java,330,,"    private final ReusableEntry<K, V> nullEntry = new ReusableEntry<>();"
483479,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/PigParquetReader.java,359,,"    private final BagFactory bagFactory = BagFactory.getInstance();"
483480,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/PigParquetReader.java,360,,"    private final TupleFactory tupleFactory = TupleFactory.getInstance();"
483481,./TargetProjects/iceberg/pig/src/main/java/org/apache/iceberg/pig/PigParquetReader.java,389,,"    private final int numColumns;"
483482,./TargetProjects/iceberg/spark/src/jmh/java/org/apache/iceberg/spark/data/parquet/SparkParquetReadersFlatDataBenchmark.java,93,,"  private File dataFile;"
483483,./TargetProjects/iceberg/spark/src/jmh/java/org/apache/iceberg/spark/data/parquet/SparkParquetReadersNestedDataBenchmark.java,93,,"  private File dataFile;"
483484,./TargetProjects/iceberg/spark/src/jmh/java/org/apache/iceberg/spark/data/parquet/SparkParquetWritersFlatDataBenchmark.java,78,,"  private Iterable<InternalRow> rows;"
483485,./TargetProjects/iceberg/spark/src/jmh/java/org/apache/iceberg/spark/data/parquet/SparkParquetWritersFlatDataBenchmark.java,79,,"  private File dataFile;"
483486,./TargetProjects/iceberg/spark/src/jmh/java/org/apache/iceberg/spark/data/parquet/SparkParquetWritersNestedDataBenchmark.java,77,,"  private Iterable<InternalRow> rows;"
483487,./TargetProjects/iceberg/spark/src/jmh/java/org/apache/iceberg/spark/data/parquet/SparkParquetWritersNestedDataBenchmark.java,78,,"  private File dataFile;"
483488,./TargetProjects/iceberg/spark/src/jmh/java/org/apache/iceberg/spark/source/IcebergSourceBenchmark.java,56,,"  private final Configuration hadoopConf = initHadoopConf();"
483489,./TargetProjects/iceberg/spark/src/jmh/java/org/apache/iceberg/spark/source/IcebergSourceBenchmark.java,57,,"  private final Table table = initTable();"
483490,./TargetProjects/iceberg/spark/src/jmh/java/org/apache/iceberg/spark/source/IcebergSourceBenchmark.java,58,,"  private SparkSession spark;"
483491,./TargetProjects/iceberg/spark/src/jmh/java/org/apache/iceberg/spark/source/orc/IcebergSourceNestedListORCDataWriteBenchmark.java,64,,"  private int numRows;"
483492,./TargetProjects/iceberg/spark/src/jmh/java/org/apache/iceberg/spark/source/parquet/IcebergSourceNestedListParquetDataWriteBenchmark.java,65,,"  private int numRows;"
483493,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/actions/Actions.java,62,,"  private SparkSession spark;"
483494,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/actions/Actions.java,63,,"  private Table table;"
483495,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/actions/ExpireSnapshotsAction.java,44,,"  private final BaseExpireSnapshotsSparkAction delegate;"
483496,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/actions/ExpireSnapshotsActionResult.java,25,,"  private final Long dataFilesDeleted;"
483497,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/actions/ExpireSnapshotsActionResult.java,26,,"  private final Long manifestFilesDeleted;"
483498,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/actions/ExpireSnapshotsActionResult.java,27,,"  private final Long manifestListsDeleted;"
483499,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/actions/RemoveOrphanFilesAction.java,46,,"  private final DeleteOrphanFiles delegate;"
483500,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/actions/RewriteDataFilesAction.java,42,,"  private final JavaSparkContext sparkContext;"
483501,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/actions/RewriteDataFilesAction.java,43,,"  private FileIO fileIO;"
483502,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/actions/RewriteManifestsAction.java,37,,"  private final RewriteManifests delegate;"
483503,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/actions/RewriteManifestsActionResult.java,32,,"  private List<ManifestFile> deletedManifests;"
483504,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/actions/RewriteManifestsActionResult.java,33,,"  private List<ManifestFile> addedManifests;"
483505,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/JobGroupInfo.java,27,,"  private String groupId;"
483506,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/JobGroupInfo.java,28,,"  private String description;"
483507,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/JobGroupInfo.java,29,,"  private boolean interruptOnCancel;"
483508,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/PruneColumnsWithReordering.java,52,,"  private final StructType requestedType;"
483509,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/PruneColumnsWithReordering.java,53,,"  private final Set<Integer> filterRefs;"
483510,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/PruneColumnsWithReordering.java,54,,"  private DataType current = null;"
483511,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/PruneColumnsWithoutReordering.java,50,,"  private final StructType requestedType;"
483512,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/PruneColumnsWithoutReordering.java,51,,"  private final Set<Integer> filterRefs;"
483513,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/PruneColumnsWithoutReordering.java,52,,"  private DataType current = null;"
483514,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,37,,"  private final int filePathPosition;"
483515,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,38,,"  private final int fileFormatPosition;"
483516,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,39,,"  private final int partitionPosition;"
483517,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,40,,"  private final int recordCountPosition;"
483518,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,41,,"  private final int fileSizeInBytesPosition;"
483519,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,42,,"  private final int columnSizesPosition;"
483520,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,43,,"  private final int valueCountsPosition;"
483521,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,44,,"  private final int nullValueCountsPosition;"
483522,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,45,,"  private final int nanValueCountsPosition;"
483523,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,46,,"  private final int lowerBoundsPosition;"
483524,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,47,,"  private final int upperBoundsPosition;"
483525,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,48,,"  private final int keyMetadataPosition;"
483526,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,49,,"  private final int splitOffsetsPosition;"
483527,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,50,,"  private final int sortOrderIdPosition;"
483528,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,51,,"  private final Type lowerBoundsType;"
483529,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,52,,"  private final Type upperBoundsType;"
483530,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,53,,"  private final Type keyMetadataType;"
483531,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,55,,"  private final SparkStructLike wrappedPartition;"
483532,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkDataFile.java,56,,"  private Row wrapped;"
483533,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkStructLike.java,28,,"  private final Types.StructType type;"
483534,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkStructLike.java,29,,"  private Row wrapped;"
483535,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java,47,,"  private final StructType root;"
483536,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java,48,,"  private int nextId = 0;"
483537,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseDeleteOrphanFilesSparkAction.java,89,,"  private final SerializableConfiguration hadoopConf;"
483538,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseDeleteOrphanFilesSparkAction.java,90,,"  private final int partitionDiscoveryParallelism;"
483539,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseDeleteOrphanFilesSparkAction.java,91,,"  private final Table table;"
483540,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseDeleteOrphanFilesSparkAction.java,93,,"  private String location = null;"
483541,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseDeleteOrphanFilesSparkAction.java,94,,"  private long olderThanTimestamp = System.currentTimeMillis() - TimeUnit.DAYS.toMillis(3);"
483542,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseDeleteOrphanFilesSparkAction.java,95,,"  private Consumer<String> deleteFunc = new Consumer<String>() {"
483543,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseDeleteReachableFilesSparkAction.java,72,,"  private final TableMetadata tableMetadata;"
483544,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseDeleteReachableFilesSparkAction.java,74,,"  private final Consumer<String> defaultDelete = new Consumer<String>() {"
483545,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseDeleteReachableFilesSparkAction.java,81,,"  private Consumer<String> removeFunc = defaultDelete;"
483546,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseDeleteReachableFilesSparkAction.java,82,,"  private ExecutorService removeExecutorService = DEFAULT_DELETE_EXECUTOR_SERVICE;"
483547,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseDeleteReachableFilesSparkAction.java,83,,"  private FileIO io = new HadoopFileIO(spark().sessionState().newHadoopConf());"
483548,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseExpireSnapshotsSparkAction.java,82,,"  private final Table table;"
483549,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseExpireSnapshotsSparkAction.java,83,,"  private final TableOperations ops;"
483550,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseExpireSnapshotsSparkAction.java,84,,"  private final Consumer<String> defaultDelete = new Consumer<String>() {"
483551,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseExpireSnapshotsSparkAction.java,91,,"  private final Set<Long> expiredSnapshotIds = Sets.newHashSet();"
483552,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseExpireSnapshotsSparkAction.java,92,,"  private Long expireOlderThanValue = null;"
483553,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseExpireSnapshotsSparkAction.java,93,,"  private Integer retainLastValue = null;"
483554,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseExpireSnapshotsSparkAction.java,94,,"  private Consumer<String> deleteFunc = defaultDelete;"
483555,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseExpireSnapshotsSparkAction.java,95,,"  private ExecutorService deleteExecutorService = DEFAULT_DELETE_EXECUTOR_SERVICE;"
483556,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseExpireSnapshotsSparkAction.java,96,,"  private Dataset<Row> expiredFiles = null;"
483557,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteDataFilesSparkAction.java,80,,"  private final Table table;"
483558,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteDataFilesSparkAction.java,82,,"  private Expression filter = Expressions.alwaysTrue();"
483559,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteDataFilesSparkAction.java,83,,"  private int maxConcurrentFileGroupRewrites;"
483560,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteDataFilesSparkAction.java,84,,"  private int maxCommits;"
483561,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteDataFilesSparkAction.java,85,,"  private boolean partialProgressEnabled;"
483562,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteDataFilesSparkAction.java,86,,"  private RewriteStrategy strategy;"
483563,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteDataFilesSparkAction.java,346,,"    private final Map<StructLike, Integer> numGroupsByPartition;"
483564,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteDataFilesSparkAction.java,347,,"    private final int totalGroupCount;"
483565,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteDataFilesSparkAction.java,348,,"    private final Map<StructLike, Integer> partitionIndexMap;"
483566,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteDataFilesSparkAction.java,349,,"    private final AtomicInteger groupIndex;"
483567,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteManifestsSparkAction.java,89,,"  private final Encoder<ManifestFile> manifestEncoder;"
483568,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteManifestsSparkAction.java,90,,"  private final Table table;"
483569,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteManifestsSparkAction.java,91,,"  private final int formatVersion;"
483570,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteManifestsSparkAction.java,92,,"  private final FileIO fileIO;"
483571,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteManifestsSparkAction.java,93,,"  private final long targetManifestSizeBytes;"
483572,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteManifestsSparkAction.java,95,,"  private PartitionSpec spec = null;"
483573,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteManifestsSparkAction.java,96,,"  private Predicate<ManifestFile> predicate = manifest -> true;"
483574,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseRewriteManifestsSparkAction.java,97,,"  private String stagingLocation = null;"
483575,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseSnapshotUpdateSparkAction.java,30,,"  private final Map<String, String> summary = Maps.newHashMap();"
483576,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseSparkAction.java,61,,"  private final SparkSession spark;"
483577,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseSparkAction.java,62,,"  private final JavaSparkContext sparkContext;"
483578,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseSparkAction.java,63,,"  private final Map<String, String> options = Maps.newHashMap();"
483579,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseSparkAction.java,197,,"    private final Broadcast<FileIO> io;"
483580,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/actions/BaseSparkActions.java,32,,"  private final SparkSession spark;"
483581,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/ParquetWithSparkSchemaVisitor.java,46,,"  private final Deque<String> fieldNames = Lists.newLinkedList();"
483582,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkAvroReader.java,44,,"  private final Schema readSchema;"
483583,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkAvroReader.java,45,,"  private final ValueReader<InternalRow> reader;"
483584,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkAvroReader.java,46,,"  private Schema fileSchema = null;"
483585,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkAvroReader.java,77,,"    private final Map<Integer, ?> idToConstant;"
483586,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkAvroWriter.java,43,,"  private final StructType dsSchema;"
483587,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkAvroWriter.java,44,,"  private ValueWriter<InternalRow> writer = null;"
483588,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcReader.java,43,,"  private final OrcValueReader<?> reader;"
483589,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcReader.java,66,,"    private final Map<Integer, ?> idToConstant;"
483590,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueReaders.java,82,,"    private final OrcValueReader<?> elementReader;"
483591,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueReaders.java,107,,"    private final OrcValueReader<?> keyReader;"
483592,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueReaders.java,108,,"    private final OrcValueReader<?> valueReader;"
483593,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueReaders.java,140,,"    private final int numFields;"
483594,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueReaders.java,189,,"    private final int precision;"
483595,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueReaders.java,190,,"    private final int scale;"
483596,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueReaders.java,213,,"    private final int precision;"
483597,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueReaders.java,214,,"    private final int scale;"
483598,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueWriters.java,145,,"    private final FloatFieldMetrics.Builder floatFieldMetricsBuilder;"
483599,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueWriters.java,165,,"    private final DoubleFieldMetrics.Builder doubleFieldMetricsBuilder;"
483600,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueWriters.java,219,,"    private final int precision;"
483601,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueWriters.java,220,,"    private final int scale;"
483602,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueWriters.java,235,,"    private final int precision;"
483603,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueWriters.java,236,,"    private final int scale;"
483604,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueWriters.java,252,,"    private final SparkOrcValueWriter writer;"
483605,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueWriters.java,281,,"    private final SparkOrcValueWriter keyWriter;"
483606,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueWriters.java,282,,"    private final SparkOrcValueWriter valueWriter;"
483607,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcWriter.java,45,,"  private final SparkOrcValueWriter writer;"
483608,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcWriter.java,130,,"    private final List<SparkOrcValueWriter> writers;"
483609,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,124,,"    private final MessageType type;"
483610,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,125,,"    private final Map<Integer, ?> idToConstant;"
483611,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,304,,"    private final int scale;"
483612,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,319,,"    private final int precision;"
483613,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,320,,"    private final int scale;"
483614,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,335,,"    private final int precision;"
483615,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,336,,"    private final int scale;"
483616,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,408,,"    private int readPos = 0;"
483617,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,409,,"    private int writePos = 0;"
483618,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,460,,"    private int readPos = 0;"
483619,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,461,,"    private int writePos = 0;"
483620,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,463,,"    private final ReusableEntry<K, V> entry = new ReusableEntry<>();"
483621,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,464,,"    private final ReusableEntry<K, V> nullEntry = new ReusableEntry<>();"
483622,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,518,,"    private final int numFields;"
483623,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,581,,"    private final ReusableArrayData keys;"
483624,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,582,,"    private final ReusableArrayData values;"
483625,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,583,,"    private int numElements;"
483626,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,629,,"    private Object[] values = EMPTY;"
483627,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,630,,"    private int numElements = 0;"
483628,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,66,,"    private final MessageType type;"
483629,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,231,,"    private final int precision;"
483630,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,232,,"    private final int scale;"
483631,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,252,,"    private final int precision;"
483632,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,253,,"    private final int scale;"
483633,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,273,,"    private final int precision;"
483634,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,274,,"    private final int scale;"
483635,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,275,,"    private final ThreadLocal<byte[]> bytes;"
483636,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,303,,"    private final DataType elementType;"
483637,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,317,,"      private final int size;"
483638,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,318,,"      private final ArrayData list;"
483639,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,319,,"      private int index;"
483640,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,354,,"    private final DataType keyType;"
483641,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,355,,"    private final DataType valueType;"
483642,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,371,,"      private final int size;"
483643,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,372,,"      private final ArrayData keys;"
483644,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,373,,"      private final ArrayData values;"
483645,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,374,,"      private final ReusableEntry<K, V> entry;"
483646,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,375,,"      private int index;"
483647,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,411,,"    private final DataType[] types;"
483648,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueReaders.java,108,,"    private final UTF8String[] symbols;"
483649,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueReaders.java,149,,"    private final ValueReader<byte[]> bytesReader;"
483650,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueReaders.java,150,,"    private final int scale;"
483651,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueReaders.java,165,,"    private final ValueReader<?> elementReader;"
483652,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueReaders.java,166,,"    private final List<Object> reusedList = Lists.newArrayList();"
483653,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueReaders.java,191,,"    private final ValueReader<?> keyReader;"
483654,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueReaders.java,192,,"    private final ValueReader<?> valueReader;"
483655,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueReaders.java,194,,"    private final List<Object> reusedKeyList = Lists.newArrayList();"
483656,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueReaders.java,195,,"    private final List<Object> reusedValueList = Lists.newArrayList();"
483657,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueReaders.java,225,,"    private final ValueReader<?> keyReader;"
483658,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueReaders.java,226,,"    private final ValueReader<?> valueReader;"
483659,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueReaders.java,228,,"    private final List<Object> reusedKeyList = Lists.newArrayList();"
483660,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueReaders.java,229,,"    private final List<Object> reusedValueList = Lists.newArrayList();"
483661,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueReaders.java,259,,"    private final int numFields;"
483662,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueWriters.java,116,,"    private final int precision;"
483663,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueWriters.java,117,,"    private final int scale;"
483664,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueWriters.java,118,,"    private final ThreadLocal<byte[]> bytes;"
483665,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueWriters.java,133,,"    private final ValueWriter<T> elementWriter;"
483666,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueWriters.java,134,,"    private final DataType elementType;"
483667,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueWriters.java,156,,"    private final ValueWriter<K> keyWriter;"
483668,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueWriters.java,157,,"    private final ValueWriter<V> valueWriter;"
483669,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueWriters.java,158,,"    private final DataType keyType;"
483670,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueWriters.java,159,,"    private final DataType valueType;"
483671,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueWriters.java,187,,"    private final ValueWriter<K> keyWriter;"
483672,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueWriters.java,188,,"    private final ValueWriter<V> valueWriter;"
483673,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueWriters.java,189,,"    private final DataType keyType;"
483674,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueWriters.java,190,,"    private final DataType valueType;"
483675,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueWriters.java,218,,"    private final ValueWriter<?>[] writers;"
483676,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkValueWriters.java,219,,"    private final DataType[] types;"
483677,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/ColumnarBatchReader.java,40,,"  private final VectorizedArrowReader[] readers;"
483678,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/ColumnarBatchReader.java,41,,"  private final VectorHolder[] vectorHolders;"
483679,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/ConstantColumnVector.java,32,,"  private final Object constant;"
483680,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/ConstantColumnVector.java,33,,"  private final int batchSize;"
483681,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/IcebergArrowColumnVector.java,42,,"  private final ArrowVectorAccessor<Decimal, UTF8String, ColumnarArray, ArrowColumnVector> accessor;"
483682,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/IcebergArrowColumnVector.java,43,,"  private final NullabilityHolder nullabilityHolder;"
483683,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/RowPositionColumnVector.java,32,,"  private final long batchOffsetInFile;"
483684,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/VectorizedSparkOrcReaders.java,84,,"    private final Map<Integer, ?> idToConstant;"
483685,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/VectorizedSparkOrcReaders.java,154,,"    private final org.apache.orc.storage.ql.exec.vector.ColumnVector vector;"
483686,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/VectorizedSparkOrcReaders.java,155,,"    private final int batchSize;"
483687,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/VectorizedSparkOrcReaders.java,156,,"    private Integer numNulls;"
483688,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/VectorizedSparkOrcReaders.java,277,,"    private final org.apache.orc.storage.ql.exec.vector.ColumnVector vector;"
483689,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/VectorizedSparkOrcReaders.java,278,,"    private final OrcValueReader<?> primitiveValueReader;"
483690,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/VectorizedSparkOrcReaders.java,279,,"    private final long batchOffsetInFile;"
483691,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/VectorizedSparkOrcReaders.java,333,,"    private final Types.ListType listType;"
483692,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/VectorizedSparkOrcReaders.java,334,,"    private final Converter elementConverter;"
483693,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/VectorizedSparkOrcReaders.java,358,,"    private final Types.MapType mapType;"
483694,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/VectorizedSparkOrcReaders.java,359,,"    private final Converter keyConverter;"
483695,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/VectorizedSparkOrcReaders.java,360,,"    private final Converter valueConverter;"
483696,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/VectorizedSparkOrcReaders.java,387,,"    private final Types.StructType structType;"
483697,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/VectorizedSparkOrcReaders.java,388,,"    private final List<Converter> fieldConverters;"
483698,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/vectorized/VectorizedSparkOrcReaders.java,389,,"    private final Map<Integer, ?> idToConstant;"
483699,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/BaseDataReader.java,58,,"  private final Iterator<FileScanTask> tasks;"
483700,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/BaseDataReader.java,59,,"  private final Map<String, InputFile> inputFiles;"
483701,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/BaseDataReader.java,61,,"  private CloseableIterator<T> currentIterator;"
483702,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/BaseDataReader.java,62,,"  private T current = null;"
483703,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/BaseDataReader.java,63,,"  private FileScanTask currentTask = null;"
483704,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/BatchDataReader.java,49,,"  private final Schema expectedSchema;"
483705,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/BatchDataReader.java,50,,"  private final String nameMapping;"
483706,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/BatchDataReader.java,51,,"  private final boolean caseSensitive;"
483707,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/BatchDataReader.java,52,,"  private final int batchSize;"
483708,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/EqualityDeleteRowReader.java,34,,"  private final Schema expectedSchema;"
483709,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/InternalRowWrapper.java,39,,"  private final DataType[] types;"
483710,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/InternalRowWrapper.java,40,,"  private final BiFunction<InternalRow, Integer, ?>[] getters;"
483711,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/InternalRowWrapper.java,41,,"  private InternalRow row = null;"
483712,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/RowDataReader.java,66,,"  private final Schema tableSchema;"
483713,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/RowDataReader.java,67,,"  private final Schema expectedSchema;"
483714,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/RowDataReader.java,68,,"  private final String nameMapping;"
483715,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/RowDataReader.java,69,,"  private final boolean caseSensitive;"
483716,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/RowDataReader.java,219,,"    private final InternalRowWrapper asStructLike;"
483717,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/RowDataRewriter.java,53,,"  private final Broadcast<Table> tableBroadcast;"
483718,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/RowDataRewriter.java,54,,"  private final PartitionSpec spec;"
483719,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/RowDataRewriter.java,55,,"  private final FileFormat format;"
483720,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/RowDataRewriter.java,56,,"  private final boolean caseSensitive;"
483721,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkAppenderFactory.java,53,,"  private final Map<String, String> properties;"
483722,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkAppenderFactory.java,54,,"  private final Schema writeSchema;"
483723,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkAppenderFactory.java,55,,"  private final StructType dsSchema;"
483724,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkAppenderFactory.java,56,,"  private final PartitionSpec spec;"
483725,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkAppenderFactory.java,57,,"  private final int[] equalityFieldIds;"
483726,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkAppenderFactory.java,58,,"  private final Schema eqDeleteRowSchema;"
483727,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkAppenderFactory.java,59,,"  private final Schema posDeleteRowSchema;"
483728,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkAppenderFactory.java,61,,"  private StructType eqDeleteSparkType = null;"
483729,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkAppenderFactory.java,62,,"  private StructType posDeleteSparkType = null;"
483730,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkAppenderFactory.java,80,,"    private final Table table;"
483731,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkAppenderFactory.java,81,,"    private final Schema writeSchema;"
483732,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkAppenderFactory.java,82,,"    private final StructType dsSchema;"
483733,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkAppenderFactory.java,83,,"    private PartitionSpec spec;"
483734,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkAppenderFactory.java,84,,"    private int[] equalityFieldIds;"
483735,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkAppenderFactory.java,85,,"    private Schema eqDeleteRowSchema;"
483736,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkAppenderFactory.java,86,,"    private Schema posDeleteRowSchema;"
483737,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkPartitionedFanoutWriter.java,34,,"  private final PartitionKey partitionKey;"
483738,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkPartitionedFanoutWriter.java,35,,"  private final InternalRowWrapper internalRowWrapper;"
483739,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkPartitionedWriter.java,34,,"  private final PartitionKey partitionKey;"
483740,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/SparkPartitionedWriter.java,35,,"  private final InternalRowWrapper internalRowWrapper;"
483741,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/StructInternalRow.java,65,,"  private final Types.StructType type;"
483742,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/TestDataFileSerialization.java,101,,"  public TemporaryFolder temp = new TemporaryFolder();"
483743,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/TestFileIOSerialization.java,67,,"  public TemporaryFolder temp = new TemporaryFolder();"
483744,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/TestFileIOSerialization.java,68,,"  private Table table;"
483745,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/TestManifestFileSerialization.java,99,,"  public TemporaryFolder temp = new TemporaryFolder();"
483746,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/TestScanTaskSerialization.java,65,,"  public TemporaryFolder temp = new TemporaryFolder();"
483747,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/TestScanTaskSerialization.java,67,,"  private String tableLocation = null;"
483748,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/TestTableSerialization.java,57,,"  public TemporaryFolder temp = new TemporaryFolder();"
483749,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/TestTableSerialization.java,58,,"  private Table table;"
483750,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestDeleteReachableFilesAction.java,91,,"  public TemporaryFolder temp = new TemporaryFolder();"
483751,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestDeleteReachableFilesAction.java,93,,"  private Table table;"
483752,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestExpireSnapshotsAction.java,99,,"  public TemporaryFolder temp = new TemporaryFolder();"
483753,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestExpireSnapshotsAction.java,101,,"  private File tableDir;"
483754,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestExpireSnapshotsAction.java,102,,"  private String tableLocation;"
483755,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestExpireSnapshotsAction.java,103,,"  private Table table;"
483756,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestRemoveOrphanFilesAction.java,74,,"  public TemporaryFolder temp = new TemporaryFolder();"
483757,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestRemoveOrphanFilesAction.java,75,,"  private File tableDir = null;"
483758,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestRemoveOrphanFilesAction.java,76,,"  protected String tableLocation = null;"
483759,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestRewriteDataFilesAction.java,65,,"  public TemporaryFolder temp = new TemporaryFolder();"
483760,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestRewriteDataFilesAction.java,67,,"  private String tableLocation = null;"
483761,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestRewriteManifestsAction.java,70,,"  public TemporaryFolder temp = new TemporaryFolder();"
483762,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestRewriteManifestsAction.java,72,,"  private final String snapshotIdInheritanceEnabled;"
483763,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestRewriteManifestsAction.java,73,,"  private String tableLocation = null;"
483764,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/actions/TestNewRewriteDataFilesAction.java,93,,"  public TemporaryFolder temp = new TemporaryFolder();"
483765,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/actions/TestNewRewriteDataFilesAction.java,95,,"  private String tableLocation = null;"
483766,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/actions/TestNewRewriteDataFilesAction.java,767,,"    private final Set<Integer> groupIDs;"
483767,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/RandomData.java,130,,"    private final Map<Type, org.apache.avro.Schema> typeToSchema;"
483768,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/RandomData.java,131,,"    private final Random random;"
483769,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/RandomData.java,133,,"    private final float nullPercentage;"
483770,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/RandomData.java,238,,"    private final Random random;"
483771,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/RandomData.java,345,,"    private final long dictionaryEncodedRows;"
483772,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/RandomData.java,346,,"    private long rowCount = 0;"
483773,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/TestOrcWrite.java,39,,"  public TemporaryFolder temp = new TemporaryFolder();"
483774,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/TestParquetAvroReader.java,46,,"  public TemporaryFolder temp = new TemporaryFolder();"
483775,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/TestParquetAvroWriter.java,46,,"  public TemporaryFolder temp = new TemporaryFolder();"
483776,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/TestSparkAvroEnums.java,46,,"  public TemporaryFolder temp = new TemporaryFolder();"
483777,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/TestSparkOrcReadMetadataColumns.java,106,,"  public TemporaryFolder temp = new TemporaryFolder();"
483778,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/TestSparkOrcReadMetadataColumns.java,108,,"  private boolean vectorized;"
483779,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/TestSparkOrcReadMetadataColumns.java,109,,"  private File testFile;"
483780,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/TestSparkParquetReadMetadataColumns.java,122,,"  public TemporaryFolder temp = new TemporaryFolder();"
483781,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/TestSparkParquetReadMetadataColumns.java,124,,"  private final boolean vectorized;"
483782,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/TestSparkParquetReadMetadataColumns.java,125,,"  private File testFile;"
483783,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/TestSparkParquetReader.java,178,,"    private final Map<String, String> config = Maps.newHashMap();"
483784,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/TestSparkParquetWriter.java,43,,"  public TemporaryFolder temp = new TemporaryFolder();"
483785,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestAvroScan.java,55,,"  public TemporaryFolder temp = new TemporaryFolder();"
483786,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestDataFrameWrites.java,78,,"  private final String format;"
483787,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestDataFrameWrites.java,92,,"  private Map<String, String> tableProperties;"
483788,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestDataFrameWrites.java,94,,"  private org.apache.spark.sql.types.StructType sparkSchema = new org.apache.spark.sql.types.StructType("
483789,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestDataFrameWrites.java,108,,"  private Schema icebergSchema = new Schema("
483790,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestDataFrameWrites.java,112,,"  private List<String> data0 = Arrays.asList("
483791,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestDataFrameWrites.java,115,,"  private List<String> data1 = Arrays.asList("
483792,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestDataSourceOptions.java,69,,"  public TemporaryFolder temp = new TemporaryFolder();"
483793,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestForwardCompatibility.java,81,,"  public TemporaryFolder temp = new TemporaryFolder();"
483794,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIcebergSourceHadoopTables.java,35,,"  File tableDir = null;"
483795,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIcebergSourceHadoopTables.java,36,,"  String tableLocation = null;"
483796,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIcebergSourceTablesBase.java,68,,"  public TemporaryFolder temp = new TemporaryFolder();"
483797,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIdentityPartitionData.java,66,,"  private final String format;"
483798,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIdentityPartitionData.java,67,,"  private final boolean vectorized;"
483799,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIdentityPartitionData.java,95,,"  public TemporaryFolder temp = new TemporaryFolder();"
483800,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIdentityPartitionData.java,97,,"  private PartitionSpec spec = PartitionSpec.builderFor(LOG_SCHEMA).identity(""date"").identity(""level"").build();"
483801,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIdentityPartitionData.java,98,,"  private Table table = null;"
483802,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIdentityPartitionData.java,99,,"  private Dataset<Row> logs = null;"
483803,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestParquetScan.java,76,,"  public TemporaryFolder temp = new TemporaryFolder();"
483804,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestParquetScan.java,83,,"  private final boolean vectorized;"
483805,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestPartitionPruning.java,90,,"  private final String format;"
483806,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestPartitionPruning.java,91,,"  private final boolean vectorized;"
483807,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestPartitionPruning.java,156,,"  public TemporaryFolder temp = new TemporaryFolder();"
483808,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestPartitionPruning.java,158,,"  private PartitionSpec spec = PartitionSpec.builderFor(LOG_SCHEMA)"
483809,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestPartitionValues.java,116,,"  public TemporaryFolder temp = new TemporaryFolder();"
483810,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestPartitionValues.java,118,,"  private final String format;"
483811,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestPartitionValues.java,119,,"  private final boolean vectorized;"
483812,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestReadProjection.java,43,,"  final String format;"
483813,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSnapshotSelection.java,56,,"  public TemporaryFolder temp = new TemporaryFolder();"
483814,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkAppenderFactory.java,36,,"  private final StructType sparkType;"
483815,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkBaseDataReader.java,60,,"  public TemporaryFolder temp = new TemporaryFolder();"
483816,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkBaseDataReader.java,66,,"    boolean closed;"
483817,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkBaseDataReader.java,67,,"    Iterator<Integer> iter;"
483818,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkBaseDataReader.java,93,,"    private Map<String, CloseableIntegerRange> tracker = new HashMap<>();"
483819,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkDataFile.java,120,,"  public TemporaryFolder temp = new TemporaryFolder();"
483820,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkDataFile.java,121,,"  private String tableLocation = null;"
483821,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkDataWrite.java,60,,"  private final FileFormat format;"
483822,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkDataWrite.java,68,,"  public TemporaryFolder temp = new TemporaryFolder();"
483823,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkReadProjection.java,74,,"  private final FileFormat format;"
483824,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkReadProjection.java,75,,"  private final boolean vectorized;"
483825,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkSchema.java,57,,"  public TemporaryFolder temp = new TemporaryFolder();"
483826,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestStructuredStreaming.java,62,,"  public TemporaryFolder temp = new TemporaryFolder();"
483827,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestStructuredStreaming.java,64,,"  public ExpectedException exceptionRule = ExpectedException.none();"
483828,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestTables.java,72,,"    private final TestTableOperations ops;"
483829,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestTables.java,107,,"    private final String tableName;"
483830,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestTables.java,108,,"    private TableMetadata current = null;"
483831,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestTables.java,109,,"    private long lastSnapshotId = 0;"
483832,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestTables.java,110,,"    private int failCommits = 0;"
483833,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestTimestampWithoutZone.java,92,,"  public TemporaryFolder temp = new TemporaryFolder();"
483834,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestTimestampWithoutZone.java,94,,"  private final String format;"
483835,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestTimestampWithoutZone.java,95,,"  private final boolean vectorized;"
483836,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestTimestampWithoutZone.java,111,,"  private File parent = null;"
483837,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestTimestampWithoutZone.java,112,,"  private File unpartitioned = null;"
483838,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestTimestampWithoutZone.java,113,,"  private List<Record> records = null;"
483839,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestWriteMetricsConfig.java,77,,"  public TemporaryFolder temp = new TemporaryFolder();"
483840,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/IcebergSource.java,50,,"  private SparkSession lazySpark = null;"
483841,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/IcebergSource.java,51,,"  private Configuration lazyConf = null;"
483842,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,86,,"  private final JavaSparkContext sparkContext;"
483843,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,87,,"  private final Table table;"
483844,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,88,,"  private final DataSourceOptions options;"
483845,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,89,,"  private final Long snapshotId;"
483846,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,90,,"  private final Long startSnapshotId;"
483847,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,91,,"  private final Long endSnapshotId;"
483848,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,92,,"  private final Long asOfTimestamp;"
483849,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,93,,"  private final Long splitSize;"
483850,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,94,,"  private final Integer splitLookback;"
483851,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,95,,"  private final Long splitOpenFileCost;"
483852,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,96,,"  private final boolean caseSensitive;"
483853,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,97,,"  private StructType requestedSchema = null;"
483854,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,98,,"  private List<Expression> filterExpressions = null;"
483855,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,99,,"  private Filter[] pushedFilters = NO_FILTERS;"
483856,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,100,,"  private final boolean localityPreferred;"
483857,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,101,,"  private final int batchSize;"
483858,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,102,,"  private final boolean readTimestampWithoutZone;"
483859,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,105,,"  private Schema schema = null;"
483860,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,106,,"  private StructType type = null; // cached because Spark accesses it multiple times"
483861,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,107,,"  private List<CombinedScanTask> tasks = null; // lazy cache of tasks"
483862,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,108,,"  private Boolean readUsingBatch = null;"
483863,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,457,,"    private final CombinedScanTask task;"
483864,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,458,,"    private final Broadcast<Table> tableBroadcast;"
483865,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,459,,"    private final String expectedSchemaString;"
483866,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,460,,"    private final boolean caseSensitive;"
483867,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,461,,"    private final boolean localityPreferred;"
483868,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,462,,"    private final ReaderFactory<T> readerFactory;"
483869,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,525,,"    private final int batchSize;"
483870,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Stats.java,26,,"  private final OptionalLong sizeInBytes;"
483871,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Stats.java,27,,"  private final OptionalLong numRows;"
483872,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/StreamingOffset.java,41,,"  private final long snapshotId;"
483873,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/StreamingOffset.java,42,,"  private final long position;"
483874,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/StreamingOffset.java,43,,"  private final boolean scanAllFiles;"
483875,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/StreamingWriter.java,46,,"  private final String queryId;"
483876,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/StreamingWriter.java,47,,"  private final OutputMode mode;"
483877,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,79,,"  private final JavaSparkContext sparkContext;"
483878,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,80,,"  private final Table table;"
483879,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,81,,"  private final FileFormat format;"
483880,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,82,,"  private final boolean replacePartitions;"
483881,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,83,,"  private final String applicationId;"
483882,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,84,,"  private final String wapId;"
483883,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,85,,"  private final long targetFileSize;"
483884,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,86,,"  private final Schema writeSchema;"
483885,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,87,,"  private final StructType dsSchema;"
483886,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,88,,"  private final Map<String, String> extraSnapshotMetadata;"
483887,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,89,,"  private final boolean partitionedFanoutEnabled;"
483888,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,233,,"    private final DataFile[] taskFiles;"
483889,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,245,,"    private final Broadcast<Table> tableBroadcast;"
483890,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,246,,"    private final FileFormat format;"
483891,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,247,,"    private final long targetFileSize;"
483892,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,248,,"    private final Schema writeSchema;"
483893,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,249,,"    private final StructType dsSchema;"
483894,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Writer.java,250,,"    private final boolean partitionedFanoutEnabled;"
483895,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/examples/ConcurrencyTest.java,53,,"  private Schema schema = new Schema("
483896,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/examples/ConcurrencyTest.java,57,,"  private SparkSession spark;"
483897,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/examples/ConcurrencyTest.java,58,,"  private File tableLocation;"
483898,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/examples/ConcurrencyTest.java,59,,"  private Table table;"
483899,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/examples/ConcurrencyTest.java,61,,"  private List<SimpleRecord> data = new ArrayList<>();"
483900,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/examples/ReadAndWriteTablesTest.java,48,,"  private SparkSession spark;"
483901,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/examples/ReadAndWriteTablesTest.java,49,,"  private Table table;"
483902,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/examples/ReadAndWriteTablesTest.java,50,,"  private HadoopTables tables;"
483903,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/examples/ReadAndWriteTablesTest.java,51,,"  private File pathToTable;"
483904,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/examples/ReadAndWriteTablesTest.java,52,,"  private Schema schema;"
483905,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/examples/SchemaEvolutionTest.java,60,,"  private Table table;"
483906,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/examples/SchemaEvolutionTest.java,61,,"  private File tableLocation;"
483907,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/examples/SchemaEvolutionTest.java,62,,"  private final String dataLocation = ""src/test/resources/data/"";"
483908,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/examples/SnapshotFunctionalityTest.java,56,,"  private Table table;"
483909,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/examples/SnapshotFunctionalityTest.java,57,,"  private File tableLocation;"
483910,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/examples/SnapshotFunctionalityTest.java,58,,"  private SparkSession spark = null;"
483911,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestCatalog.java,39,,"  private HadoopTables tables;"
483912,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestCatalog.java,41,,"  private String warehouse;"
483913,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestCustomCatalog.java,71,,"  public TemporaryFolder temp = new TemporaryFolder();"
483914,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestCustomCatalog.java,73,,"  File tableDir = null;"
483915,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestCustomCatalog.java,74,,"  String tableLocation = null;"
483916,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestCustomCatalog.java,75,,"  HadoopTables tables;"
483917,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestFilteredScan.java,149,,"  public TemporaryFolder temp = new TemporaryFolder();"
483918,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestFilteredScan.java,151,,"  private final String format;"
483919,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestFilteredScan.java,152,,"  private final boolean vectorized;"
483920,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestFilteredScan.java,170,,"  private File parent = null;"
483921,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestFilteredScan.java,171,,"  private File unpartitioned = null;"
483922,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestFilteredScan.java,172,,"  private List<Record> records = null;"
483923,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestNameMappingProjection.java,69,,"  public TemporaryFolder temp = new TemporaryFolder();"
483924,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestSelect.java,66,,"  private Table table;"
483925,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestSelect.java,90,,"  public TemporaryFolder temp = new TemporaryFolder();"
483926,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestSelect.java,92,,"  private String tableLocation = null;"
483927,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestSparkTableUtil.java,136,,"    private final FileFormat format;"
483928,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestSparkTableUtil.java,139,,"    public TemporaryFolder temp = new TemporaryFolder();"
483929,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestSparkTableUtil.java,382,,"    private final FileFormat format = FileFormat.PARQUET;"
483930,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestSparkTableUtilWithInMemoryCatalog.java,89,,"  public TemporaryFolder temp = new TemporaryFolder();"
483931,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestSparkTableUtilWithInMemoryCatalog.java,91,,"  private String tableLocation = null;"
483932,./TargetProjects/iceberg/spark3-extensions/src/test/java/org/apache/iceberg/spark/extensions/SparkRowLevelOperationsTestBase.java,50,,"  protected final String fileFormat;"
483933,./TargetProjects/iceberg/spark3-extensions/src/test/java/org/apache/iceberg/spark/extensions/SparkRowLevelOperationsTestBase.java,51,,"  protected final boolean vectorized;"
483934,./TargetProjects/iceberg/spark3-extensions/src/test/java/org/apache/iceberg/spark/extensions/TestAddFilesProcedure.java,46,,"  private final String sourceTableName = ""source_table"";"
483935,./TargetProjects/iceberg/spark3-extensions/src/test/java/org/apache/iceberg/spark/extensions/TestAddFilesProcedure.java,47,,"  private File fileTableDir;"
483936,./TargetProjects/iceberg/spark3-extensions/src/test/java/org/apache/iceberg/spark/extensions/TestAddFilesProcedure.java,54,,"  public TemporaryFolder temp = new TemporaryFolder();"
483937,./TargetProjects/iceberg/spark3-extensions/src/test/java/org/apache/iceberg/spark/extensions/TestMigrateTableProcedure.java,43,,"  public TemporaryFolder temp = new TemporaryFolder();"
483938,./TargetProjects/iceberg/spark3-extensions/src/test/java/org/apache/iceberg/spark/extensions/TestRemoveOrphanFilesProcedure.java,45,,"  public TemporaryFolder temp = new TemporaryFolder();"
483939,./TargetProjects/iceberg/spark3-extensions/src/test/java/org/apache/iceberg/spark/extensions/TestSnapshotTableProcedure.java,45,,"  public TemporaryFolder temp = new TemporaryFolder();"
483940,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/actions/Spark3MigrateAction.java,39,,"  private final MigrateTable delegate;"
483941,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/actions/Spark3SnapshotAction.java,38,,"  private final SnapshotTable delegate;"
483942,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/FileRewriteCoordinator.java,41,,"  private final Map<Pair<String, String>, Set<DataFile>> resultMap = Maps.newConcurrentMap();"
483943,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/FileScanTaskSetManager.java,38,,"  private final Map<Pair<String, String>, List<FileScanTask>> tasksMap = Maps.newConcurrentMap();"
483944,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/OrderField.java,70,,"  private final Expression expr;"
483945,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/OrderField.java,71,,"  private final SortDirection direction;"
483946,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/OrderField.java,72,,"  private final NullOrdering nullOrder;"
483947,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/PathIdentifier.java,31,,"  private final String[] namespace;"
483948,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/PathIdentifier.java,32,,"  private final String location;"
483949,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/PathIdentifier.java,33,,"  private final String name;"
483950,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/RollbackStagedTable.java,60,,"  private final TableCatalog catalog;"
483951,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/RollbackStagedTable.java,61,,"  private final Identifier ident;"
483952,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/RollbackStagedTable.java,62,,"  private final Table table;"
483953,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/Spark3Util.java,825,,"    private final CatalogPlugin catalog;"
483954,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/Spark3Util.java,826,,"    private final Identifier identifier;"
483955,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/SparkCatalog.java,84,,"  private String catalogName = null;"
483956,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/SparkCatalog.java,85,,"  private Catalog icebergCatalog = null;"
483957,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/SparkCatalog.java,86,,"  private boolean cacheEnabled = true;"
483958,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/SparkCatalog.java,87,,"  private SupportsNamespaces asNamespaceCatalog = null;"
483959,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/SparkCatalog.java,88,,"  private String[] defaultNamespace = null;"
483960,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/SparkCatalog.java,89,,"  private HadoopTables tables;"
483961,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/SparkCatalog.java,90,,"  private boolean useTimestampsWithoutZone;"
483962,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/SparkSessionCatalog.java,51,,"  private String catalogName = null;"
483963,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/SparkSessionCatalog.java,52,,"  private TableCatalog icebergCatalog = null;"
483964,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/SparkSessionCatalog.java,53,,"  private StagingTableCatalog asStagingCatalog = null;"
483965,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/SparkSessionCatalog.java,54,,"  private T sessionCatalog = null;"
483966,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/SparkSessionCatalog.java,55,,"  private boolean createParquetAsIceberg = false;"
483967,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/SparkSessionCatalog.java,56,,"  private boolean createAvroAsIceberg = false;"
483968,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/SparkSessionCatalog.java,57,,"  private boolean createOrcAsIceberg = false;"
483969,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/actions/BaseMigrateTableSparkAction.java,60,,"  private final StagingTableCatalog destCatalog;"
483970,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/actions/BaseMigrateTableSparkAction.java,61,,"  private final Identifier destTableIdent;"
483971,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/actions/BaseMigrateTableSparkAction.java,62,,"  private final Identifier backupIdent;"
483972,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/actions/BaseSnapshotTableSparkAction.java,57,,"  private StagingTableCatalog destCatalog;"
483973,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/actions/BaseSnapshotTableSparkAction.java,58,,"  private Identifier destTableIdent;"
483974,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/actions/BaseSnapshotTableSparkAction.java,59,,"  private String destTableLocation = null;"
483975,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/actions/BaseTableCreationSparkAction.java,60,,"  private final V1Table sourceTable;"
483976,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/actions/BaseTableCreationSparkAction.java,61,,"  private final CatalogTable sourceCatalogTable;"
483977,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/actions/BaseTableCreationSparkAction.java,62,,"  private final String sourceTableLocation;"
483978,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/actions/BaseTableCreationSparkAction.java,63,,"  private final TableCatalog sourceCatalog;"
483979,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/actions/BaseTableCreationSparkAction.java,64,,"  private final Identifier sourceTableIdent;"
483980,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/actions/BaseTableCreationSparkAction.java,67,,"  private final Map<String, String> additionalProperties = Maps.newHashMap();"
483981,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/actions/Spark3BinPackStrategy.java,39,,"  private final Table table;"
483982,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/actions/Spark3BinPackStrategy.java,40,,"  private final SparkSession spark;"
483983,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/actions/Spark3BinPackStrategy.java,41,,"  private final FileScanTaskSetManager manager = FileScanTaskSetManager.get();"
483984,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/actions/Spark3BinPackStrategy.java,42,,"  private final FileRewriteCoordinator rewriteCoordinator = FileRewriteCoordinator.get();"
483985,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/procedures/BaseProcedure.java,48,,"  private final SparkSession spark;"
483986,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/procedures/BaseProcedure.java,49,,"  private final TableCatalog tableCatalog;"
483987,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/procedures/BaseProcedure.java,51,,"  private SparkActions actions;"
483988,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/procedures/BaseProcedure.java,135,,"    private TableCatalog tableCatalog;"
483989,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/source/SparkBatchQueryScan.java,41,,"  private final Long snapshotId;"
483990,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/source/SparkBatchQueryScan.java,42,,"  private final Long startSnapshotId;"
483991,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/source/SparkBatchQueryScan.java,43,,"  private final Long endSnapshotId;"
483992,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/source/SparkBatchQueryScan.java,44,,"  private final Long asOfTimestamp;"
483993,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/source/SparkBatchQueryScan.java,45,,"  private final Long splitSize;"
483994,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/source/SparkBatchQueryScan.java,46,,"  private final Integer splitLookback;"
483995,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/source/SparkBatchQueryScan.java,47,,"  private final Long splitOpenFileCost;"
483996,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/source/SparkBatchQueryScan.java,49,,"  private List<CombinedScanTask> tasks = null; // lazy cache of tasks"
483997,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/source/SparkBatchScan.java,69,,"  private final JavaSparkContext sparkContext;"
483998,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/source/SparkBatchScan.java,70,,"  private final Table table;"
483999,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/source/SparkBatchScan.java,71,,"  private final boolean caseSensitive;"
