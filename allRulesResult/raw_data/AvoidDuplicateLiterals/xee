108000,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,468,,"        assertEquals(""titles coincide "", string1, titledBorder.getTitle());"
108001,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,605,,"        assertEquals(""Deserialized values coincides"", resurrectedBorder.getTitle(), border1"
108002,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/event/SwingPropertyChangeSupportTest.java,159,,"        propertyChangeSupport.addPropertyChangeListener(""first"", changeListener1);"
108003,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/event/SwingPropertyChangeSupportTest.java,160,,"        propertyChangeSupport.addPropertyChangeListener(""second"", changeListener2);"
108004,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/event/SwingPropertyChangeSupportTest.java,220,,"        propertyChangeSupport.removePropertyChangeListener(""third"", changeListener3);"
108005,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/event/SwingPropertyChangeSupportTest.java,313,,"        assertFalse(propertyChangeSupport.hasListeners(""forth""));"
108006,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/event/TreeModelEventTest.java,44,,"        Object source = ""111"";"
108007,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/event/TreeModelEventTest.java,45,,"        TreePath path = new TreePath(""222"");"
108008,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/event/TreeSelectionEventTest.java,32,,"        TreePath path = new TreePath(""asd"");"
108009,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/event/TreeSelectionEventTest.java,33,,"        TreePath oldSelection = new TreePath(""old"");"
108010,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/event/TreeSelectionEventTest.java,34,,"        TreePath newSelection = new TreePath(""new"");"
108011,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/event/TreeSelectionEventTest.java,49,,"        TreePath[] paths = new TreePath[] { new TreePath(""asd""), new TreePath(""qwe""),"
108012,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/event/TreeSelectionEventTest.java,50,,"                new TreePath(""zxc"") };"
108013,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/filechooser/FileSystemViewTest.java,110,,"        assertEquals(new File(dir, ""/normal""), view.createFileObject(dir, ""/normal""));"
108014,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicButtonUITest.java,69,,"        UIManager.put(""Button.font"", font);"
108015,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicButtonUITest.java,71,,"        JButton button2 = new JButton(""text"");"
108016,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicButtonUITest.java,84,,"        assertEquals(""PreferredSize"", new Dimension(horInsets, vertInsets), ui"
108017,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicButtonUITest.java,121,,"        assertEquals(""MinimumSize"", new Dimension(horInsets, vertInsets), ui"
108018,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicButtonUITest.java,152,,"        assertEquals(""MaximumSize"", new Dimension(horInsets, vertInsets), ui"
108019,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicButtonUITest.java,330,,"        UIManager.put(""Button.textShiftOffset"", new Integer(1000));"
108020,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicCheckBoxUITest.java,95,,"        JCheckBox button2 = new JCheckBox(""text"");"
108021,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicCheckBoxUITest.java,110,,"        assertEquals(""PreferredSize"", new Dimension(horInsets + iconW, vertInsets + iconH), ui"
108022,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicComboBoxRendererTest.java,64,,"        assertEquals(renderer, renderer.getListCellRendererComponent(list, ""aaa"", 0, false,"
108023,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicComboBoxUITest.java,267,,"            fail(""NullPointerException should have been thrown"");"
108024,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicInternalFrameTitlePaneTest.java,184,,"            assertTrue(""exception"", false);"
108025,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicInternalFrameTitlePaneTest.java,388,,"        assertTrue(""iconified"", frame.isIcon());"
108026,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicInternalFrameTitlePaneTest.java,391,,"        assertFalse(""deiconified"", frame.isIcon());"
108027,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicInternalFrameTitlePaneTest.java,395,,"        assertTrue(""maximized"", frame.isMaximum());"
108028,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicInternalFrameTitlePaneTest.java,415,,"        assertFalse(""restored"", frame.isMaximum());"
108029,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicInternalFrameUI$InternalFrameLayoutTest.java,74,,"            assertEquals(""1 pane"", new Dimension(130, 61), layout.preferredLayoutSize(frame));"
108030,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicInternalFrameUITest.java,74,,"        UIManager.getDefaults().remove(""InternalFrame.windowBindings"");"
108031,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicInternalFrameUITest.java,131,,"        assertTrue(""layout"", frame.getLayout() != null);"
108032,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicInternalFrameUITest.java,307,,"        assertTrue(""not null"", listener1 != null);"
108033,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicInternalFrameUITest.java,319,,"        assertNull(""null"", ui.createWestPane(frame));"
108034,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicInternalFrameUITest.java,407,,"        assertTrue(""standard size"", ui.getPreferredSize(frame).equals(standardSize));"
108035,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicInternalFrameUITest.java,577,,"        assertTrue(""was set"", ui.getWestPane() == comp);"
108036,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicInternalFrameUITest.java,578,,"        assertTrue(""field was set"", ui.westPane == comp);"
108037,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicListUITest.java,66,,"        defaultBackground = UIManager.get(""List.background"");"
108038,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicListUITest.java,67,,"        defaultForeground = UIManager.get(""List.foreground"");"
108039,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicListUITest.java,68,,"        defaultFont = UIManager.get(""List.font"");"
108040,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicListUITest.java,69,,"        defaultRenderer = UIManager.get(""List.cellRenderer"");"
108041,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicListUITest.java,70,,"        defaultBorder = UIManager.get(""List.border"");"
108042,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicListUITest.java,222,,"        list.setListData(new Object[] { ""a"", ""bbb"" });"
108043,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUITest.java,113,,"        UIManager.put(""OptionPane.messageAreaBorder"", messageAreaBorder);"
108044,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUITest.java,182,,"        optionPane = new JOptionPane(""Message"", JOptionPane.ERROR_MESSAGE);"
108045,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUITest.java,366,,"        assertEquals(""message"", message, label.getText());"
108046,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUITest.java,400,,"        Object message1 = new JButton(""Tarara"");"
108047,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUITest.java,409,,"        assertEquals(""number of children"", 1, messageContainer.getComponentCount());"
108048,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUITest.java,573,,"        assertSame(""icons are shared"", icon12, paneUI.getIconForType(JOptionPane.ERROR_MESSAGE));"
108049,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUITest.java,661,,"        assertEquals(""button text"", text, button.getText());"
108050,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUITest.java,688,,"        assertEquals(""number of buttons"", 2, buttonArea.getComponentCount());"
108051,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUITest.java,689,,"        assertEquals(""button class"", JButton.class, buttonArea.getComponent(0).getClass());"
108052,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUITest.java,691,,"        checkButton(button, ""Yes"", threshold, KeyEvent.VK_Y, 1, new Insets(2, 8, 2, 8));"
108053,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUITest.java,692,,"        assertFalse(""custom"", paneUI.containsCustomComponents(null));"
108054,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUITest.java,710,,"        checkButton(button, ""Cancel"", threshold, 0, 1, new Insets(2, 4, 2, 4));"
108055,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUI_ButtonAreaLayoutTest.java,53,,"        assertEquals(""syncAll"", syncAll1, layout.getSyncAllWidths());"
108056,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUI_ButtonAreaLayoutTest.java,54,,"        assertEquals(""padding"", padding1, layout.getPadding());"
108057,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUI_ButtonAreaLayoutTest.java,55,,"        assertTrue(""CentersChildren"", layout.getCentersChildren());"
108058,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUI_ButtonAreaLayoutTest.java,106,,"        assertEquals(""Sizes "", new Dimension(30, 10), layout.minimumLayoutSize(container));"
108059,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUI_ButtonAreaLayoutTest.java,145,,"        assertEquals(""Container's minimum requirements"", new Dimension(276, 66), layout"
108060,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUI_ButtonAreaLayoutTest.java,147,,"        assertEquals(""Container's preferred requirements"", new Dimension(276, 66), layout"
108061,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUI_ButtonAreaLayoutTest.java,149,,"        assertEquals(""Component1 location "", new Point(20, 20), component1.getLocation());"
108062,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUI_ButtonAreaLayoutTest.java,150,,"        assertEquals(""Component1 size "", new Dimension(62, 26), component1.getSize());"
108063,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUI_ButtonAreaLayoutTest.java,151,,"        assertEquals(""Component2 location "", new Point(92, 20), component2.getLocation());"
108064,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUI_ButtonAreaLayoutTest.java,152,,"        assertEquals(""Component2 size "", new Dimension(55, 26), component2.getSize());"
108065,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUI_ButtonAreaLayoutTest.java,153,,"        assertEquals(""Component3 location "", new Point(157, 20), component3.getLocation());"
108066,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUI_ButtonAreaLayoutTest.java,154,,"        assertEquals(""Component3 size "", new Dimension(48, 26), component3.getSize());"
108067,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUI_ButtonAreaLayoutTest.java,155,,"        assertEquals(""Component4 location "", new Point(215, 20), component4.getLocation());"
108068,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUI_ButtonAreaLayoutTest.java,156,,"        assertEquals(""Component4 size "", new Dimension(41, 26), component4.getSize());"
108069,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUI_ButtonAreaLayoutTest.java,223,,"        assertEquals(""Minimum size: "", new Dimension(45, 10), layout"
108070,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicOptionPaneUI_ButtonAreaLayoutTest.java,276,,"        assertEquals(""Preferred size: "", new Dimension(119, 26), layout"
108071,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicRadioButtonUITest.java,97,,"        JRadioButton button2 = new JRadioButton(""text"");"
108072,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicRadioButtonUITest.java,112,,"        assertEquals(""PreferredSize"", new Dimension(horInsets + iconW, vertInsets + iconH), ui"
108073,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicSliderUITest.java,196,,"        assertEquals(""100"", ((JLabel) sliderUI.getHighestValueLabel()).getText());"
108074,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicSliderUITest.java,206,,"        JLabel label = new JLabel(""1000000"");"
108075,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/basic/BasicToolBarUITest.java,217,,"        toolBar.setName(""The toolbar"");"
108076,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/metal/DefaultMetalThemeTest.java,71,,"        assertEquals(new FontUIResource(""Dialog"", Font.BOLD, 12), theme.getWindowTitleFont());"
108077,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/metal/MetalButtonUITest.java,61,,"        assertSame(""DisabledTextColor"", Color.WHITE, metalUI.disabledTextColor);"
108078,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/plaf/metal/MetalButtonUITest.java,76,,"        assertTrue(""FocusColor is ColorUIResource"","
108079,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/table/DefaultTableCellRendererTest.java,113,,"        assertSame(renderer, renderer.getTableCellRendererComponent(table, ""any value"", false,"
108080,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/table/DefaultTableCellRendererTest.java,116,,"        assertSame(UIManager.getBorder(""Table.focusCellHighlightBorder""), renderer.getBorder());"
108081,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/table/DefaultTableCellRendererTest.java,172,,"        renderer.firePropertyChange(""any"", ""a"", ""b"");"
108082,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/table/DefaultTableColumnModelTest.java,200,,"                model.getColumnIndex(""tag1"");"
108083,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/table/DefaultTableColumnModelTest.java,352,,"        model.propertyChange(new PropertyChangeEvent(""source"", TableColumn.WIDTH_PROPERTY, ""a"","
108084,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/table/DefaultTableModelTest.java,60,,"        model = new DefaultTableModel(new Object[] { ""col1"", ""col2"", ""col3"" }, 4);"
108085,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/table/DefaultTableModelTest.java,60,,"        model = new DefaultTableModel(new Object[] { ""col1"", ""col2"", ""col3"" }, 4);"
108086,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/table/DefaultTableModelTest.java,60,,"        model = new DefaultTableModel(new Object[] { ""col1"", ""col2"", ""col3"" }, 4);"
108087,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/table/DefaultTableModelTest.java,107,,"        dataVector.add(new Vector(Arrays.asList(new Object[] { ""value11"", ""value12"" })));"
108088,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/table/DefaultTableModelTest.java,107,,"        dataVector.add(new Vector(Arrays.asList(new Object[] { ""value11"", ""value12"" })));"
108089,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/table/DefaultTableModelTest.java,109,,"                .asList(new Object[] { ""value21"", ""value22"", ""value23"" })));"
108090,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/table/DefaultTableModelTest.java,109,,"                .asList(new Object[] { ""value21"", ""value22"", ""value23"" })));"
108091,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/table/DefaultTableModelTest.java,109,,"                .asList(new Object[] { ""value21"", ""value22"", ""value23"" })));"
108092,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/table/DefaultTableModelTest.java,110,,"        dataVector.add(new Vector(Arrays.asList(new Object[] { ""value31"" })));"
108093,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/table/JTableHeaderTest.java,151,,"        ((DefaultTableCellRenderer) header.getDefaultRenderer()).setToolTipText(""tooltip"");"
108094,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/table/TableColumnTest.java,90,,"        column.setIdentifier(""Any"");"
108095,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocumentTest.java,143,,"        doc.insertString(0, ""01234"", null);"
108096,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocumentTest.java,234,,"        doc.replace(1, 2, ""abcde"", null);"
108097,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocumentTest.java,342,,"            fail(""BadLocationException: \""invalid offset\"" must be thrown."");"
108098,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocument_AbstractElementTest.java,226,,"        String dump1 = ""<bidi root>\n"" + ""  <bidi level\n"" + ""    bidiLevel=0\n"" + ""  >\n"""
108099,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocument_AbstractElementTest.java,226,,"        String dump1 = ""<bidi root>\n"" + ""  <bidi level\n"" + ""    bidiLevel=0\n"" + ""  >\n"""
108100,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocument_AbstractElementTest.java,226,,"        String dump1 = ""<bidi root>\n"" + ""  <bidi level\n"" + ""    bidiLevel=0\n"" + ""  >\n"""
108101,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocument_AbstractElementTest.java,226,,"        String dump1 = ""<bidi root>\n"" + ""  <bidi level\n"" + ""    bidiLevel=0\n"" + ""  >\n"""
108102,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocument_AbstractElementTest.java,239,,"    private static final String dumpTextAtLimit = ""123456789\n"" + // 10 chars / 10"
108103,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocument_AbstractElement_MASNoLockTest.java,73,,"            fail(""Error should be thrown, the reason "" + ""being no write lock acquired"");"
108104,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocument_AbstractElement_MASNoLockTest.java,73,,"            fail(""Error should be thrown, the reason "" + ""being no write lock acquired"");"
108105,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocument_AttributeContextTest.java,38,,"        assertFalse(as.containsAttribute(""key"", ""value""));"
108106,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocument_AttributeContextTest.java,38,,"        assertFalse(as.containsAttribute(""key"", ""value""));"
108107,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocument_BranchElementTest.java,346,,"            fail(""ArrayIndexOutOfBoundsException is expected"");"
108108,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocument_ContentTest.java,66,,"        obj.insertString(10, ""big "");"
108109,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocument_ContentTest.java,132,,"            fail(""BadLocationException should be thrown."");"
108110,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocument_FilterTest.java,86,,"            } else if (str == ""test"") {"
108111,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocument_FilterTest.java,158,,"        assertEquals(""a12345b"", doc.getText(0, doc.getLength()));"
108112,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocument_ListenerTest.java,131,,"        doc.insertString(0, ""text"", null);"
108113,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractDocument_ListenerTest.java,134,,"        doc.insertString(0, ""test"", null);"
108114,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/AbstractWriterTest.java,144,,"        final String lineSeparator = System.getProperty(""line.separator"");"
108115,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/BoxViewTest.java,72,,"            fail(""ArrayIndexOutOfBoundsException is expected"");"
108116,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/BoxView_WithChildrenTest.java,642,,"        doc.insertString(root.getElement(2).getStartOffset() + 1, ""123"", null);"
108117,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/BoxView_WithChildrenTest.java,841,,"            assertEquals(""Offsets are different @ "" + i, getChildY(i) - shape.y, offsets[i]);"
108118,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/BoxView_WithChildrenTest.java,842,,"            assertEquals(""Spans are different @ "" + i, getHeight(i), spans[i]);"
108119,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/BoxView_WithChildrenTest.java,991,,"            fail(""IllegalArgumentException is expected"");"
108120,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/CompositeView_VisualPositionTest.java,457,,"            fail(""ArrayIndexOutOfBoundsException is expected"");"
108121,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefStyledDoc_Helpers.java,142,,"                        + (parent.getElementCount() <= 0 ? ""N/A"" : (parent.getStartOffset()"
108122,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultCaretTest.java,328,,"        assertFalse(""Unexpected exception: "" + s, bWasException);"
108123,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultEditorKitRTest.java,115,,"        JTextArea c = getInitedComponent(2, 7, ""0123456789"");"
108124,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultEditorKitTest.java,49,,"        assertEquals(""document's length"", 0, doc.getLength());"
108125,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultEditorKitTest.java,172,,"        assertEquals(""document"", str, strRead);"
108126,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultEditorKitTest.java,259,,"        String str1 = ""This is a very \r\nshort plain-text document.\r\nIt's to be read only by the \r\ntest."";"
108127,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultEditorKitTest.java,266,,"        assertEquals(""no \""\\r\"" found"", -1, readStr.indexOf(""\r""));"
108128,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultEditorKitTest.java,267,,"        assertEquals(""string length"", str1.length() - 3, readStr.length());"
108129,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultEditorKitTest.java,268,,"        assertEquals(""newLine property"", ""\r\n"", doc"
108130,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultEditorKit_Actions_MultithreadedTest.java,194,,"        String text = ""012345  6789\nasfd\nasd  asd"";"
108131,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultEditorKit_Actions_MultithreadedTest.java,197,,"        assertEquals(""selected text "", ""89\nas"", c.getSelectedText());"
108132,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultEditorKit_Actions_MultithreadedTest.java,223,,"                    + ""]\n"" + ""  <content>\n"" + ""    [13,18][asfd\n"" + ""]\n"" + ""  <content>\n"""
108133,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultEditorKit_Actions_MultithreadedTest.java,237,,"        assertEquals(""selected string"","
108134,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultEditorKit_Actions_MultithreadedTest.java,240,,"        assertEquals(""caret position"", 63, c.getCaretPosition());"
108135,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultEditorKit_Actions_MultithreadedTest.java,351,,"        assertNull(""resulted string"", c.getSelectedText());"
108136,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultEditorKit_Actions_MultithreadedTest.java,522,,"        String text = ""0123456789\n12341234\n12341234"";"
108137,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultEditorKit_Actions_MultithreadedTest.java,672,,"        JTextArea c = getInitedComponent(2, 7, ""0123456789"");"
108138,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultEditorKit_Actions_MultithreadedTest.java,871,,"        assertEquals(""magic caret pos"", new Point(48, 0), c.getCaret().getMagicCaretPosition());"
108139,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultFormatterTest.java,66,,"            assertFalse(""Unexpected exception: "" + e.getMessage(), true);"
108140,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultHighlighterTest.java,126,,"        assertFalse(""Unexpected exception: "" + s, bWasException);"
108141,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultStyledDocumentRTest.java,54,,"        attrs.addAttribute(ELEMENT_NAME, ""icon"");"
108142,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultStyledDocumentRTest.java,326,,"                assertEquals(""root["" + i + ""].start"", offsets[i][oi++], content"
108143,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultStyledDocument_ElementBuffer_InsertSeveralNewLinesTest.java,147,,"        assertEquals(""plain"", getText(doc.getCharacterElement(insertOffset + newLines2Len)));"
108144,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultStyledDocument_ElementBuffer_InsertTextTest.java,57,,"    private static final String caps = ""^^^"";"
108145,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultStyledDocument_ElementBuffer_Specs1Test.java,109,,"        doc.insertString(0, ""one"", null);"
108146,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultStyledDocument_ElementBuffer_Specs1Test.java,119,,"        doc.insertString(0, ""one\n"", null);"
108147,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultStyledDocument_ElementBuffer_Specs1Test.java,134,,"        doc.insertString(0, ""\none"", null);"
108148,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultStyledDocument_ElementBuffer_Specs1Test.java,166,,"        doc.insertString(0, ""one\ntwo"", null);"
108149,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultStyledDocument_ElementBuffer_Specs2Test.java,125,,"        doc.insertString(insertOffset, ""one"", null);"
108150,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultStyledDocument_ElementBuffer_Specs2Test.java,135,,"        doc.insertString(insertOffset, ""one\n"", null);"
108151,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultStyledDocument_ElementBuffer_Specs2Test.java,150,,"        doc.insertString(insertOffset, ""\none"", null);"
108152,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/DefaultStyledDocument_ElementBuffer_Specs2Test.java,168,,"        doc.insertString(insertOffset, ""one\ntwo"", null);"
108153,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/GapContent_GapVectorTest.java,184,,"            assertEquals(""abcdefghij\n"", gv.getString(0, gv.length()));"
108154,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/GapContent_UndoTest.java,43,,"        assertEquals(""01234\n"", content.getString(0, content.length()));"
108155,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/InternationalFormatterTest.java,97,,"            assertFalse(""Unexpected exception: "" + e.getMessage(), true);"
108156,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/JTextComponentTest.java,310,,"        SimpleKeyMap keyMap2 = new SimpleKeyMap(""Second"");"
108157,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/JTextComponentTest.java,390,,"        jtc.setText(""JTextComponent"");"
108158,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/JTextComponentTest.java,497,,"        imEventTest(InputMethodEvent.CARET_POSITION_CHANGED, ""123"", """");"
108159,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/JTextComponentTest.java,873,,"        Keymap keyMap1 = JTextComponent.addKeymap(""First"", keyMap);"
108160,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/JTextComponentTest.java,877,,"        Keymap keyMap3 = JTextComponent.addKeymap(""Third"", null);"
108161,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/JTextComponentTest.java,912,,"                new JTextComponent.KeyBinding(keyStroke1, ""first""),"
108162,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/JTextComponentTest.java,1046,,"        String sample1 = (keyStrokeY + ""="" + a).replaceFirst(""[/$]"", """");"
108163,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/JTextComponent_AccessibleJTextComponentTest.java,268,,"            jtc.getDocument().insertString(0, ""TEST"", null);"
108164,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/JTextComponent_AccessibleJTextComponentTest.java,409,,"        assertEquals(text.replaceFirst(""Com"", ""XXX""), jtc.getText());"
108165,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/JTextComponent_AccessibleJTextComponent_variousTextTest.java,91,,"                jtc.setText(""In\n"" + "" this test. for AccessibleJTextComponent\n"" + ""LALALA"");"
108166,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/JTextComponent_AccessibleJTextComponent_variousTextTest.java,91,,"                jtc.setText(""In\n"" + "" this test. for AccessibleJTextComponent\n"" + ""LALALA"");"
108167,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/JTextComponent_IMTest.java,199,,"        content = ""fghij"";"
108168,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/JTextComponent_IMTest.java,207,,"        content = ""finish"";"
108169,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/JTextComponent_MultithreadedTest.java,80,,"        jtc.replaceSelection(""XXX"");"
108170,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/MaskFormatterTest.java,71,,"            assertFalse(""Unexpected exception: "" + e.getMessage(), true);"
108171,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/PlainViewI18N_BidiTextViewTest.java,116,,"            fail(""BadLocationException must be thrown"");"
108172,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/PlainViewTest.java,58,,"            fail(""BadLocationException expected"");"
108173,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/PlainViewTest.java,100,,"        area.setText(""1: 0\n2: 012345\n3:\n"");"
108174,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/PlainViewTest.java,134,,"            fail(""BadLocationException is expected"");"
108175,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/PlainViewTest.java,262,,"        assertEquals(4, view.viewToModel(view.metrics.stringWidth(""1: 0"") + 1f, h / 2, shape,"
108176,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/SimpleAttributeSetTest.java,58,,"        parent.addAttribute(""key"", ""value"");"
108177,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/SimpleAttributeSetTest.java,58,,"        parent.addAttribute(""key"", ""value"");"
108178,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/StringContentTest.java,125,,"        content.insertString(0, ""0123456789"");"
108179,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/StringContentTest.java,382,,"        assertEquals(""0111111\n"", content.getString(0, content.length()));"
108180,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/StringContentTest.java,456,,"        content.insertString(0, "" Hello word "");"
108181,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/StyleContextTest.java,155,,"        assertEquals(""default"", (String) name);"
108182,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/StyleContextTest.java,206,,"        Style aStyle = sc.addStyle(""aStyle"", null);"
108183,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/StyleContextTest.java,246,,"        Object[] styles = { null, null, ""one"", null, null, sc.new NamedStyle(), ""two"","
108184,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/StyleContextTest.java,246,,"        Object[] styles = { null, null, ""one"", null, null, sc.new NamedStyle(), ""two"","
108185,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/StyleContextTest.java,365,,"        sc.addStyle(""style"", null);"
108186,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/StyleContext_NamedStyleTest.java,39,,"        withName = defContext.new NamedStyle(""styleName"", null);"
108187,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/StyleContext_NamedStyleTest.java,47,,"        parent.addAttribute(""key"", ""value"");"
108188,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/StyleContext_NamedStyleTest.java,47,,"        parent.addAttribute(""key"", ""value"");"
108189,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/StyleContext_SmallAttributeSetTest.java,77,,"        AttributeSet parent = sc.new SmallAttributeSet(new Object[] { ""key"", ""value"" });"
108190,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/StyleContext_SmallAttributeSetTest.java,77,,"        AttributeSet parent = sc.new SmallAttributeSet(new Object[] { ""key"", ""value"" });"
108191,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/TextActionTest.java,81,,"        assertTrue(""result's not null"", res != null);"
108192,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/TextActionTest.java,82,,"        assertEquals(""result's length "", 3, res.length);"
108193,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/TextActionTest.java,83,,"        assertEquals(""resulted list item"", action3, res[0]);"
108194,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/TextAction_MultithreadedTest.java,85,,"        assertEquals(""focused component"", component2, res);"
108195,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/UtilitiesTest.java,212,,"                    assertTrue(""Unexpected Exception: "" + e.getMessage(), false);"
108196,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/UtilitiesTest.java,603,,"        checkWasException(""Position not represented by view"");"
108197,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/UtilitiesTest.java,947,,"            fail(""BadLocationException expected"");"
108198,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/View_ChangesTest.java,259,,"        doc.insertString(doc.getLength(), ""one\ntwo\n"", null);"
108199,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/WrappedPlainViewTest.java,113,,"            fail(""BadLocationException expected"");"
108200,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/CSS_AttributeTest.java,58,,"        assertEquals(""none"", attr.getDefaultValue());"
108201,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/CSS_AttributeTest.java,93,,"        assertEquals(""medium"", attr.getDefaultValue());"
108202,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/CSS_AttributeTest.java,212,,"        assertEquals(""normal"", attr.getDefaultValue());"
108203,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormViewTest.java,83,,"        src.append(""<FORM ACTION = \""\"">"");"
108204,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormViewTest.java,89,,"                   + ""checkbox_name\"" VALUE = \""checked checkbox:JCheckBox\"" """
108205,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormViewTest.java,90,,"                   + ""CHECKED ID=\""checked checkbox\"">"");"
108206,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormViewTest.java,114,,"        src.append(""    </SELECT>"");"
108207,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormViewTest.java,123,,"        src.append(""    <SELECT NAME = \""select_name\"" MULTIPLE """
108208,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormViewTest.java,128,,"                   + ""ID=\""select_multiple_many\"">"");"
108209,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormViewTest.java,173,,"        attrs.addAttribute(HTML.Attribute.TYPE, ""my_type"");"
108210,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormViewTest.java,256,,"        testModel(""textArea"");"
108211,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormViewTest.java,257,,"        testModel(""select_0"");"
108212,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormViewTest.java,258,,"        testModel(""select"");"
108213,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormViewTest.java,259,,"        testModel(""select_many"");"
108214,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormViewTest.java,260,,"        testModel(""select_multiple"");"
108215,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormViewTest.java,261,,"        testModel(""select_multiple_many"");"
108216,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormViewTest.java,683,,"        throw new UnsupportedOperationException(""Not implemented"");"
108217,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormViewTest.java,718,,"        src.append(""<HTML><HEAD></HEAD><BODY> Test"");"
108218,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormViewTest.java,725,,"        src.append(""</FORM></BODY></HTML>"");"
108219,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormInputElementTest.java,167,,"            assertEquals(""title_attribute"", image.getToolTipText());"
108220,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormInputElementTest.java,635,,"        htmlSrc.append(""    <INPUT TYPE = \"""" + typeName + ""\"" """
108221,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormInputElementTest.java,635,,"        htmlSrc.append(""    <INPUT TYPE = \"""" + typeName + ""\"" """
108222,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormInputElementTest.java,636,,"                + ""ID=\"""" + typeName + ""\"">"");"
108223,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormInputElementTest.java,638,,"                + ""NAME =\"""" + typeName + ""_name\"" """
108224,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormInputElementTest.java,638,,"                + ""NAME =\"""" + typeName + ""_name\"" """
108225,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormInputElementTest.java,639,,"                + ""VALUE = \"""" + typeName + ""_default\"" """
108226,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormSelectElementTest.java,161,,"            htmlSrc.append(""    <SELECT """
108227,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormSelectElementTest.java,163,,"                    + ""</SELECT>"");"
108228,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormSelectElementTest.java,188,,"                    + ""        text1"""
108229,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormSelectElementTest.java,189,,"                    + ""   </OPTION>"""
108230,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormSelectElementTest.java,191,,"                    + ""      </OPTION>"""
108231,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormSelectElementTest.java,209,,"                    + ""   <OPTION value = \""val1\"" label = \""lab1\"">"""
108232,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormSelectElementTest.java,214,,"                    + ""   <OPTION label = \""lab3\"">  text3"""
108233,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormSelectElementTest.java,224,,"                    + ""            label = \""lab2\""> text2"""
108234,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormSelectElementTest.java,244,,"                    + ""   <OPTION selected value = \""val1\"" label = \""lab1\"">"""
108235,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormTextAreaElementTest.java,138,,"        htmlSrc.append(""    <TEXTAREA """
108236,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormTextAreaElementTest.java,140,,"                + ""</TEXTAREA>"");"
108237,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormTextAreaElementTest.java,146,,"                + ""NAME =\""textarea_name\"" """
108238,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/FormView_FormTextAreaElementTest.java,159,,"                + ""ROWS=\""7\"" COLS=\""30\"""""
108239,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocumentTest.java,239,,"        htmlDoc.insertString(0, ""0000"", attr);"
108240,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocumentTest.java,243,,"        assertNull(htmlDoc.getElement(root, HTML.Attribute.ID, ""AAA""));"
108241,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocumentTest.java,532,,"                             ""<br>a<br>a<br>a<br>a<br>a<br>a<br>a<br>a<br>a<br>a"" +"
108242,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_InsertsTest.java,63,,"        htmlDoc.insertAfterEnd(td, ""<a>link</a>"");"
108243,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_InsertsTest.java,70,,"        assertSpec(specs[2], ElementSpec.ContentType, ElementSpec.OriginateDirection, 0, ""link"".toCharArray());"
108244,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_InsertsTest.java,135,,"        htmlDoc.insertAfterEnd(p, ""<a>link</a><b>bold</b>"");"
108245,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_InsertsTest.java,158,,"        checkStructure(htmlDoc, new String[]{""html"", ""body"", ""p"", ""b"", ""content"", ""content"", ""p"", ""content""});"
108246,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_InsertsTest.java,158,,"        checkStructure(htmlDoc, new String[]{""html"", ""body"", ""p"", ""b"", ""content"", ""content"", ""p"", ""content""});"
108247,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_InsertsTest.java,158,,"        checkStructure(htmlDoc, new String[]{""html"", ""body"", ""p"", ""b"", ""content"", ""content"", ""p"", ""content""});"
108248,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_InsertsTest.java,189,,"            fail(""IllegalStateException should be thrown"");"
108249,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_InsertsTest.java,790,,"        assertEquals(""linkbold"", htmlDoc.getText(0, htmlDoc.getLength()));"
108250,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_ReaderTest.java,63,,"        final String text = ""tag"";"
108251,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_ReaderTest.java,212,,"        final String initialText = ""text"";"
108252,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_ReaderTest.java,266,,"        String text1 = ""data"";"
108253,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_ReaderTest.java,821,,"        reader.handleText(""0000"".toCharArray(), 0);"
108254,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_ReaderTest.java,841,,"        checkConstructorTagParameter(Tag.BR, ""<a>link</a><b>asdasd</b>"", 0);"
108255,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_ReaderTest.java,884,,"        checkConstructorPopParameter(Tag.A, str, 0, ""coco"");"
108256,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_ReaderTest.java,1029,,"        attr2.addAttribute(""bbbb"", ""aaaa"");"
108257,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_ReaderTest.java,1029,,"        attr2.addAttribute(""bbbb"", ""aaaa"");"
108258,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_ReaderTest.java,1743,,"        reader.handleSimpleTag(new Tag(""fake""), attr, 0);"
108259,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_Reader_ActionsTest.java,58,,"        attr.addAttribute(""aaaa"", ""bbbb"");"
108260,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_Reader_ActionsTest.java,58,,"        attr.addAttribute(""aaaa"", ""bbbb"");"
108261,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_Reader_ActionsTest.java,271,,"        reader.handleText(""text"".toCharArray(), 0);"
108262,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_Reader_FormActionTest.java,177,,"        checkStandardInputStart(""text"", PlainDocument.class);"
108263,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_Reader_FormActionTest.java,270,,"        attr.addAttribute(""aaaa"", ""bbbb"");"
108264,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLDocument_Reader_FormActionTest.java,270,,"        attr.addAttribute(""aaaa"", ""bbbb"");"
108265,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLEditorKit_HTMLFactoryTest.java,60,,"                             ""javax.swing.text.html.ParagraphView"");"
108266,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLEditorKit_HTMLFactoryTest.java,96,,"        implTestCreateForTag(HTML.Tag.MENU, ""javax.swing.text.html.ListView"");"
108267,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLEditorKit_HTMLFactoryTest.java,113,,"                                         ""javax.swing.text.html.BlockView"");"
108268,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLFrameHyperlinkEventTest.java,38,,"        final URL url = new URL(""file:///"");"
108269,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTMLFrameHyperlinkEventTest.java,40,,"        final String targetFrame = ""targetFrame"";"
108270,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTML_TagTest.java,33,,"        assertFalse(""breaks Flow"", tag.breaksFlow());"
108271,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTML_TagTest.java,34,,"        assertFalse(""isBlock"", tag.isBlock());"
108272,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/HTML_TagTest.java,35,,"        assertFalse(""isPre"", tag.isPreformatted());"
108273,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/ImageViewTest.java,215,,"        init(""http://base.url.test/"" + DEFAULT_SRC);"
108274,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/ImageViewTest.java,314,,"        init(DEFAULT_SRC + ""\"" "" + WIDTH_HTML + ""\"" "" + HEIGHT_HTML, null);"
108275,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheetTest.java,54,,"        ""body {\n"" +"
108276,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheetTest.java,136,,"        ss.addCSSAttribute(simple, Attribute.FONT_SIZE, ""21pt"");"
108277,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheetTest.java,237,,"                                    ""not-numeral"");"
108278,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheetTest.java,585,,"        ss.addCSSAttribute(simple, Attribute.BACKGROUND_COLOR, ""red"");"
108279,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheetTest.java,690,,"                                              ""left""));"
108280,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheetTest.java,914,,"        final File cssFile = File.createTempFile(getName(), "".css"");"
108281,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheetTest.java,922,,"        final Style body = ss.getStyle(""body"");"
108282,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheetTest.java,927,,"        assertEquals(""yellow"", bodyAttr.getAttribute(Attribute.BACKGROUND_COLOR)"
108283,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheetTest.java,959,,"        assertEquals(""white"", bodyAttr.getAttribute(Attribute.BACKGROUND_COLOR)"
108284,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheetTest.java,1170,,"                    ss.setBaseFontSize(""--1"");"
108285,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_BackgroundTest.java,40,,"        assertAttributes(""red"", isHarmony() ? ""none"" : null, ""no-repeat"","
108286,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_BackgroundTest.java,40,,"        assertAttributes(""red"", isHarmony() ? ""none"" : null, ""no-repeat"","
108287,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_BackgroundTest.java,40,,"        assertAttributes(""red"", isHarmony() ? ""none"" : null, ""no-repeat"","
108288,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_BackgroundTest.java,41,,"                         ""scroll"", isHarmony() ? ""0% 0%"" : null);"
108289,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_BackgroundTest.java,41,,"                         ""scroll"", isHarmony() ? ""0% 0%"" : null);"
108290,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_BackgroundTest.java,56,,"                         ""fixed"", isHarmony() ? ""0% 0%"" : null);"
108291,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_BoldTest.java,77,,"        assertEquals(""normal"", cssValue.toString());"
108292,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_BorderPartTestCase.java,54,,"        assertEquals(getColorDeclaration(""black""),"
108293,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_BorderPartTestCase.java,56,,"        assertEquals(getStyleDeclaration(""solid""),"
108294,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_BorderPartTestCase.java,58,,"        assertEquals(""thin"","
108295,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_BorderTest.java,39,,"        ss.addCSSAttribute(simple, Attribute.BORDER, ""thin"");"
108296,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_BorderTest.java,61,,"        ss.addCSSAttribute(simple, Attribute.BORDER, ""green"");"
108297,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_BorderTest.java,77,,"        ss.addCSSAttribute(simple, Attribute.BORDER, ""solid"");"
108298,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_BorderTest.java,155,,"        assertEquals(""medium"", simple.getAttribute(Attribute.BORDER_TOP_WIDTH)"
108299,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_BorderTest.java,242,,"        assertEquals(""thick"", simple.getAttribute(Attribute.BORDER_TOP_WIDTH)"
108300,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_BorderWidthTestCase.java,40,,"        ss.addCSSAttribute(simple, cssKey, ""medium"");"
108301,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_ColorTest.java,73,,"                                    ""#AD66DA"");"
108302,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_ColorTest.java,113,,"        assertEquals(""#ffffff"", cssValue.toString());"
108303,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontFamilyTest.java,73,,"            assertEquals(""SansSerif"", scValue.toString());"
108304,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontFamilyTest.java,81,,"        attr = ss.addAttribute(empty, StyleConstants.FontFamily, ""Lucida Sans"");"
108305,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontFamilyTest.java,126,,"        boolean hasTimes = fontList.contains(""Times New Roman"");"
108306,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontFamilyTest.java,143,,"            assertEquals(isHarmony() ? ""Serif"" : ""SansSerif"", scValue.toString());"
108307,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontFamilyTest.java,231,,"        attr = ss.addAttribute(empty, Attribute.FONT_FAMILY, ""serif"");"
108308,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontSizeTest.java,31,,"        ""xx-small"", ""x-small"", ""small"","
108309,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontSizeTest.java,33,,"        ""large"", ""x-large"", ""xx-large"""
108310,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontSizeTest.java,33,,"        ""large"", ""x-large"", ""xx-large"""
108311,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontSizeTest.java,138,,"        attr = ss.addAttribute(empty, StyleConstants.FontSize, ""smaller"");"
108312,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontSizeTest.java,163,,"        attr = ss.addAttribute(empty, StyleConstants.FontSize, ""larger"");"
108313,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontSizeTest.java,238,,"        attr = ss.addAttribute(attr, StyleConstants.FontSize, ""80%"");"
108314,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontSizeTest.java,335,,"        attr = ss.addAttribute(empty, StyleConstants.FontSize, ""2em"");"
108315,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontSizeTest.java,361,,"        attr = ss.addAttribute(attr, StyleConstants.FontSize, ""3ex"");"
108316,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontSizeTest.java,385,,"        attr = ss.addAttribute(empty, StyleConstants.FontSize, ""2in"");"
108317,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontTest.java,43,,"        ss.addCSSAttribute(simple, Attribute.FONT, ""normal"");"
108318,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontTest.java,80,,"                         ""small"", ""normal"", ""serif"");"
108319,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontTest.java,80,,"                         ""small"", ""normal"", ""serif"");"
108320,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontTest.java,85,,"        assertAttributes(""italic"", ""normal"", ""normal"","
108321,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_FontTest.java,91,,"        assertAttributes(""italic"", ""normal"", ""bold"","
108322,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_ListStyleTest.java,41,,"        ss.addCSSAttribute(simple, Attribute.LIST_STYLE, ""none"");"
108323,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_ListStyleTest.java,54,,"        assertEquals(""outside"", cssValue.toString());"
108324,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_ListStyleTest.java,60,,"        ss.addCSSAttribute(simple, Attribute.LIST_STYLE, ""disc"");"
108325,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_ListStyleTest.java,117,,"        ss.addCSSAttribute(simple, Attribute.LIST_STYLE, ""inside"");"
108326,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_ListStyleTest.java,136,,"        ss.addCSSAttribute(simple, Attribute.LIST_STYLE, ""url(bullet.gif)"");"
108327,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_ListStyleTest.java,166,,"        assertEquals(""square"", cssValue.toString());"
108328,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_MarginTestCase.java,76,,"                    ss.addAttribute(empty, scKey, ""11.1pt"");"
108329,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_SpaceTestCase.java,53,,"        ss.addCSSAttribute(simple, shorthandKey, ""7pt"");"
108330,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_SpaceTestCase.java,65,,"        assertEquals(""14mm"", right.toString());"
108331,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_TextAlignTest.java,76,,"        assertEquals(""left"", cssValue.toString());"
108332,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_TextDecorationTest.java,60,,"        assertEquals(""underline"", cssValue.toString());"
108333,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_TextDecorationTest.java,70,,"        assertEquals(isHarmony() ? ""none"" : """", cssValue.toString());"
108334,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_TextDecorationTest.java,88,,"        assertEquals(""line-through"", cssValue.toString());"
108335,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ConvertAttr_TextDecorationTest.java,146,,"                           ""underline line-through"");"
108336,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ResolvedRulesClassTest.java,66,,"        assertEquals(""html body p.par"", rule.getName());"
108337,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ResolvedRulesClassTest.java,68,,"        assertEquals("".par"", rule.getAttribute(AttributeSet.NameAttribute));"
108338,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ResolvedRulesTest.java,71,,"        assertEquals(""html body p em"", rule.getName());"
108339,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ResolvedRulesTest.java,88,,"        assertEquals(""red"", rule.getAttribute(Attribute.COLOR).toString());"
108340,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ResolvedRulesTest.java,89,,"        assertEquals(""p.small em"","
108341,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ResolvedRulesTest.java,111,,"        assertEquals(""rgb(255, 255, 150)"","
108342,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ResolvedRulesTest.java,125,,"        ss.addRule(""em { color: rgb(127, 0, 0) }"");"
108343,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_ResolvedRulesTest.java,282,,"        rule = ss.getRule(""p em"");"
108344,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_TranslateHTMLToCSS.java,83,,"        assertEquals(""body"", body.getName());"
108345,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_TranslateHTMLToCSS.java,86,,"        body.addAttribute(HTML.Attribute.BGCOLOR, ""#ffffff"");"
108346,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_TranslateHTMLToCSS.java,87,,"        body.addAttribute(HTML.Attribute.BACKGROUND, ""bg.jpg"");"
108347,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_TranslateHTMLToCSS.java,88,,"        body.addAttribute(HTML.Attribute.TEXT, ""black"");"
108348,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_TranslateHTMLToCSS.java,89,,"        body.addAttribute(HTML.Attribute.LINK, ""blue"");"
108349,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_TranslateHTMLToCSS.java,90,,"        body.addAttribute(HTML.Attribute.ALINK, ""red"");"
108350,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_TranslateHTMLToCSS.java,91,,"        body.addAttribute(HTML.Attribute.VLINK, ""purple"");"
108351,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_TranslateHTMLToCSS.java,273,,"        branch.addAttribute(HTML.Attribute.ALIGN, ""top"");"
108352,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/StyleSheet_TranslateHTMLToCSS.java,290,,"        branch.addAttribute(HTML.Attribute.ALIGN, ""bottom"");"
108353,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/parser/DTD401Test.java,155,,"        } else if (descr.equals(""CDATA"")) {"
108354,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/parser/DTD401Test.java,232,,"                         .replaceAll(""( )+"", """").replaceAll(""CDATAs;"", ""CDATA""),"
108355,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/parser/DTDTest.java,51,,"    DTD dtd = new DTD(""DTDTest1"");"
108356,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/parser/DTDTest.java,54,,"    public static final String SPACE_ENTITY_NAME = ""#SPACE"";"
108357,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/parser/DTDTest.java,79,,"            String name = ""name"";"
108358,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/parser/DTDTest.java,80,,"            dtd1 = new DTD(""abcd"");"
108359,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/parser/ElementTest.java,30,,"    AttributeList atts1 = new AttributeList(""atts1"");"
108360,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/parser/EntityTest.java,47,,"        Entity entity2 = new Entity(""name"", DTDConstants.GENERAL, new char[0]); //$NON-NLS-1$"
108361,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/parser/Utils.java,421,,"            printDebugInfo(""handleEndTag(tag="" + tag + "", "" + ""pos="""
108362,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/parser/Utils401.java,62,,"        handleEntity(""#SPACE"", ""#SPACE"", ' ', 0, table);"
108363,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/parser/Utils401.java,63,,"        handleEntity(""#RS"", ""#RS"", '\n', 0, table);"
108364,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/text/html/parser/Utils401.java,64,,"        handleEntity(""#RE"", ""#RE"", '\r', 0, table);"
108365,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/tree/DefaultMutableTreeNodeTest.java,53,,"        node = new DefaultMutableTreeNode(""user object"");"
108366,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/tree/DefaultMutableTreeNodeTest.java,475,,"        DefaultMutableTreeNode root = new DefaultMutableTreeNode(""root"");"
108367,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/tree/DefaultMutableTreeNodeTest.java,576,,"        DefaultMutableTreeNode child = new DefaultMutableTreeNode(""child"");"
108368,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/tree/DefaultMutableTreeNodeTest.java,577,,"        DefaultMutableTreeNode childChild = new DefaultMutableTreeNode(""childChild"");"
108369,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/tree/DefaultMutableTreeNodeTest.java,578,,"        DefaultMutableTreeNode nodeChild = new DefaultMutableTreeNode(""nodeChild"");"
108370,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/tree/DefaultTreeCellEditorTest.java,69,,"        editor.getTreeCellEditorComponent(tree, ""any"", false, true, false, 0);"
108371,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/tree/DefaultTreeCellEditorTest.java,94,,"        Font f = new Font(""font"", 0, 30);"
108372,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/tree/DefaultTreeCellEditorTest.java,110,,"        defaultTextField.setText(""value"");"
108373,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/tree/DefaultTreeCellRendererTest.java,182,,"        assertSame(renderer, renderer.getTreeCellRendererComponent(tree, ""value"", false, false,"
108374,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/tree/DefaultTreeModelTest.java,64,,"            type = ""changed"";"
108375,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/tree/DefaultTreeModelTest.java,73,,"            type = ""inserted"";"
108376,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/tree/DefaultTreeModelTest.java,82,,"            type = ""removed"";"
108377,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/tree/DefaultTreeModelTest.java,91,,"            type = ""structure"";"
108378,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/tree/DefaultTreeModelTest.java,779,,"        Object source1 = ""source1"";"
108379,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/tree/DefaultTreeSelectionModelTest.java,611,,"        listener.checkLastPropertyFired(model, ""selectionMode"", new Integer("
108380,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/tree/TreePathTest.java,94,,"        Object[] path2 = new Object[] { new Object(), ""11"", ""22"", ""33"", ""2222"" };"
108381,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/undo/UndoManagerTest.java,178,,"        assertTrue(""CannotUndoException was expected"", bWasException);"
108382,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/org/apache/harmony/swing/tests/javax/swing/text/parser/ContentModelCompatilityTest.java,92,,"        dtd = new DTDGetter(""TestContentModelSemantic"");"
108383,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/org/apache/harmony/swing/tests/javax/swing/text/parser/ContentModelCompatilityTest.java,99,,"        Element el = dtd.defineElement(""elemento"", ',', false, false, cm2,"
108384,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/org/apache/harmony/swing/tests/javax/swing/text/parser/ContentModelCompatilityTest.java,124,,"        AttributeList al = new AttributeList(""bigC"", -2147483648, -1,"
108385,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/org/apache/harmony/swing/tests/javax/swing/text/parser/ContentModelCompatilityTest.java,125,,"                ""value"", new Vector(), new AttributeList(null));"
108386,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/org/apache/harmony/swing/tests/javax/swing/text/parser/ContentModelCompatilityTest.java,1751,,"            fail(""Should raise NullPointerException"");"
108387,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/org/apache/harmony/swing/tests/javax/swing/text/parser/ContentModelCompatilityTest.java,2380,,"            fail(""Should raise ClassCastException, but was returned:"" + result);"
108388,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/org/apache/harmony/swing/tests/javax/swing/text/parser/ContentModelCompatilityTest.java,2536,,"            fail(""Should raise ClassCastException"");"
108389,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/org/apache/harmony/swing/tests/javax/swing/text/parser/ContentModelCompatilityTest.java,3447,,"        assertEquals(""[null]"", v.toString());"
108390,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/org/apache/harmony/swing/tests/javax/swing/text/parser/ContentModelSemanticTest.java,50,,"        Element el1 = newElement(""el1"");"
108391,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/org/apache/harmony/swing/tests/javax/swing/text/parser/ContentModelSemanticTest.java,51,,"        Element el2 = newElement(""el2"");"
108392,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/org/apache/harmony/x/swing/UtilitiesTest.java,29,,"        metrics = getFontMetrics(new Font(""fixed"", Font.PLAIN, 12));"
108393,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/org/apache/harmony/x/swing/UtilitiesTest.java,31,,"        assertEquals(""clipped string "", ""Long enough text for this ..."", clippedStr);"
108394,./TargetProjects/harmony/classlib/modules/text/src/main/java/java/text/DecimalFormat.java,1243,,"            new ObjectStreamField(""posPrefixPattern"", String.class), //$NON-NLS-1$"
108395,./TargetProjects/harmony/classlib/modules/text/src/main/java/java/text/DecimalFormat.java,1244,,"            new ObjectStreamField(""posSuffixPattern"", String.class), //$NON-NLS-1$"
108396,./TargetProjects/harmony/classlib/modules/text/src/main/java/java/text/DecimalFormat.java,1245,,"            new ObjectStreamField(""negPrefixPattern"", String.class), //$NON-NLS-1$"
108397,./TargetProjects/harmony/classlib/modules/text/src/main/java/java/text/DecimalFormat.java,1246,,"            new ObjectStreamField(""negSuffixPattern"", String.class), //$NON-NLS-1$"
108398,./TargetProjects/harmony/classlib/modules/text/src/main/java/java/text/DecimalFormat.java,1252,,"            new ObjectStreamField(""useExponentialNotation"", boolean.class), //$NON-NLS-1$"
108399,./TargetProjects/harmony/classlib/modules/text/src/main/java/java/text/DecimalFormat.java,1253,,"            new ObjectStreamField(""minExponentDigits"", byte.class), //$NON-NLS-1$"
108400,./TargetProjects/harmony/classlib/modules/text/src/main/java/java/text/SimpleDateFormat.java,331,,"        pattern = (String)getInternalField(""pattern"", icuFormat); //$NON-NLS-1$"
108401,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/AnnotationTest.java,31,,"		assertNotNull(new Annotation(""value""));"
108402,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/AttributedCharacterIteratorTest.java,30,,"		String test = ""Test 23ring"";"
108403,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/AttributedCharacterIteratorTest.java,33,,"		assertEquals(""Wrong first"", 'T', it.current());"
108404,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/AttributedStringTest.java,147,,"            fail(""should throw NullPointerException"");"
108405,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/BidiTest.java,51,,"			fail(""should throw IAE"");"
108406,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/BidiTest.java,110,,"			fail(""should be IAE"");					"
108407,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/BidiTest.java,657,,"			fail(""should throw IllegalArgumentException"");"
108408,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/BidiTest.java,662,,"			assertFalse(Bidi.requiresBidi(""aaa"".toCharArray(), -1, 1));"
108409,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/BidiTest.java,810,,"            fail(""Expected IAE"");           "
108410,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/BreakIteratorTest.java,87,,"            fail(""should throw illegal argument exception"");"
108411,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/BreakIteratorTest.java,300,,"			fail(""should throw NPE."");"
108412,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/BreakIteratorTest.java,310,,"			fail(""should throw ArrayIndexOutOfBoundsException."");"
108413,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/BreakIteratorTest.java,330,,"            fail(""should throw ArrayIndexOutOfBoundsException"");"
108414,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/ChoiceFormatTest.java,32,,"    String[] formats = new String[] { ""Less than one"", ""one"","
108415,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/ChoiceFormatTest.java,33,,"            ""Between one and two"", ""Greater than two"" };"
108416,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/ChoiceFormatTest.java,45,,"        String[] appleFormats = { ""Tiny Apple"", ""Small Apple"", ""Medium Apple"","
108417,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/ChoiceFormatTest.java,45,,"        String[] appleFormats = { ""Tiny Apple"", ""Small Apple"", ""Medium Apple"","
108418,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/ChoiceFormatTest.java,46,,"                ""Large Apple"", ""Huge Apple"" };"
108419,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/ChoiceFormatTest.java,98,,"                formattedString.equals(""Inverted Orange""));"
108420,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/ChoiceFormatTest.java,125,,"                formattedString.equals(""Expensive Orange""));"
108421,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/ChoiceFormatTest.java,444,,"		assertEquals(""NEGATIVE_ONE"", fmt.format(Long.MIN_VALUE));"
108422,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/ChoiceFormatTest.java,448,,"		assertEquals(""GREATER_THAN_ONE"", fmt.format(Long.MAX_VALUE));"
108423,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/CollationElementIteratorTest.java,101,,"		String text = ""cha"";"
108424,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/CollationElementIteratorTest.java,103,,"				.getInstance(new Locale(""es"", """", ""TRADITIONAL""));"
108425,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/CollationKeyTest.java,33,,"		CollationKey key1 = collator.getCollationKey(""abc"");"
108426,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/CollationKeyTest.java,34,,"		CollationKey key2 = collator.getCollationKey(""ABC"");"
108427,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/CollationKeyTest.java,35,,"		assertEquals(""Should be equal"", 0, key1.compareTo(key2));"
108428,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DataFormatFieldTest.java,37,,"		MyField field = new MyField(""day of month"", Calendar.ERA);"
108429,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DataFormatFieldTest.java,45,,"		assertSame(""Modified calendar field with the same field number"","
108430,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DateFormatSymbolsTest.java,79,,"            fail(""Returned wrong array"");"
108431,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DateFormatSymbolsTest.java,81,,"            assertTrue(""Array values do not match"", retVal[i].equals(val[i]));"
108432,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DateFormatSymbolsTest.java,181,,"            assertTrue(""Failed to set strings"", Arrays"
108433,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DateFormatSymbolsTest.java,257,,"        assertTrue(""Return is identical"", retVal != dfs.getMonths());"
108434,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DateFormatTest.java,55,,"			assertTrue(""Doesn't work"","
108435,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DateFormatTest.java,76,,"		assertTrue(""Wrong class"", f2.getClass() == SimpleDateFormat.class);"
108436,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DateFormatTest.java,77,,"		assertTrue(""Wrong default"", f2.equals(DateFormat.getDateInstance("
108437,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DateFormatTest.java,79,,"		assertTrue(""Wrong symbols"", f2.getDateFormatSymbols().equals("
108438,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DateFormatTest.java,132,,"            fail(""Should throw IAE"");"
108439,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatSymbolsTest.java,76,,"        Currency currE = Currency.getInstance(""EUR"");"
108440,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatSymbolsTest.java,186,,"        dfs.setNaN(""NAN!!"");"
108441,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatTest.java,69,,"        Number number = form.parse(""23.1"", new ParsePosition(0));"
108442,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatTest.java,92,,"        number = form.parse(""23.1f"", new ParsePosition(0));"
108443,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatTest.java,99,,"        number = form.parse(""-0.0"", new ParsePosition(0));"
108444,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatTest.java,103,,"        number = form.parse(""-9,223,372,036,854,775,8080.00"","
108445,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatTest.java,816,,"        compare(""00.0#E0: 12.0"", df.format(12.0), ""12.0E0"");"
108446,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatTest.java,819,,"        compare(""00.0#E0: 12346.0"", df.format(12346.0), ""12.35E3"");"
108447,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatTest.java,845,,"        compare(""##0.0E0: 123.0"", df.format(123.0), ""123E0"");"
108448,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatTest.java,846,,"        compare(""##0.0E0: 1234.0"", df.format(1234.0), ""1.234E3"");"
108449,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatTest.java,855,,"        compare(""#00.0##E0: 0.1"", df.format(0.1), "".100E0"");"
108450,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatTest.java,881,,"        compare(""#00.0##E0: 1.0"", df.format(1.0), ""1.00E0"");"
108451,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatTest.java,893,,"        compare(""#.0E0: 0.0"", df.format(0.0), "".0E0"");"
108452,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatTest.java,958,,"        compare(""###0.00#E0: 0.01"", df.format(0.01), ""100E-4"");"
108453,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatTest.java,1229,,"        DecimalFormat df = new DecimalFormat(""###0.##"");"
108454,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatTest.java,1275,,"        Number result = format.parse(""9223372036854775807"", pos);"
108455,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatTest.java,1369,,"        assertTrue(""Not set"", df.getDecimalFormatSymbols().equals(dfs));"
108456,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/DecimalFormatTest.java,1443,,"        assertEquals(""Not changed"", 4, df.getMaximumFractionDigits());"
108457,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/FieldPositionTest.java,32,,"		assertNull(""Constructor failed to set field attribute!"", fpos"
108458,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/MessageFormatTest.java,150,,"        checkSerialization(new MessageFormat(""{0}""));"
108459,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/MessageFormatTest.java,410,,"                new ChoiceFormat(""0#off|1#on""), DateFormat.getDateInstance(), };"
108460,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/MessageFormatTest.java,486,,"        f1.setFormatByArgumentIndex(4, new ChoiceFormat(""1#few|2#ok|3#a lot""));"
108461,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/SimpleDateFormatTest.java,112,,"        assertTrue(""Wrong class"", f2.getClass() == SimpleDateFormat.class);"
108462,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/SimpleDateFormatTest.java,115,,"        assertTrue(""Wrong symbols"", f2.getDateFormatSymbols().equals("
108463,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/SimpleDateFormatTest.java,117,,"        assertTrue(""Doesn't work"","
108464,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/SimpleDateFormatTest.java,126,,"        SimpleDateFormat f2 = new SimpleDateFormat(""yyyy"");"
108465,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/SimpleDateFormatTest.java,128,,"        assertEquals(""Wrong pattern"", ""yyyy"", f2.toPattern());"
108466,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/SimpleDateFormatTest.java,335,,"                ""test_formatLjava_util_DateLjava_lang_StringBufferLjava_text_FieldPosition"")"
108467,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/SimpleDateFormatTest.java,371,,"                "" 12"", DateFormat.DATE_FIELD);"
108468,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/SimpleDateFormatTest.java,381,,"        test.test("" H"", cal, "" 15"", DateFormat.HOUR_OF_DAY0_FIELD);"
108469,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/SimpleDateFormatTest.java,440,,"        test.test("" a"", cal, "" PM"", DateFormat.AM_PM_FIELD);"
108470,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/SimpleDateFormatTest.java,467,,"        format.setTimeZone(TimeZone.getTimeZone(""EST""));"
108471,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/SimpleDateFormatTest.java,468,,"        test.test("" z"", cal, "" GMT-05:00"", DateFormat.TIMEZONE_FIELD);"
108472,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/SimpleDateFormatTest.java,481,,"        test.test("" z"", cal, "" GMT+00:00"", DateFormat.TIMEZONE_FIELD);"
108473,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/SimpleDateFormatTest.java,530,,"                ""+1400, GMT+14:00"", summerDate);"
108474,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/SimpleDateFormatTest.java,651,,"        test.parse(""yyy"", ""99"", new GregorianCalendar(99, Calendar.JANUARY, 1)"
108475,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/SimpleDateFormatTest.java,693,,"        test.parse(""h z"", ""14 GMT-24 "", new Date(51840000), 0, 9);"
108476,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/StringCharacterIteratorTest.java,32,,"		assertNotNull(new StringCharacterIterator(""value"", 0));"
108477,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/StringCharacterIteratorTest.java,121,,"		StringCharacterIterator sci0 = new StringCharacterIterator(""fixture"");"
108478,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/StringCharacterIteratorTest.java,134,,"        StringCharacterIterator it1 = new StringCharacterIterator(""testing"", 2,"
108479,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/StringCharacterIteratorTest.java,172,,"                assertEquals(""Wrong current char"", 'i', it.current());"
108480,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/StringCharacterIteratorTest.java,192,,"                assertEquals(""Wrong next char"", 't', it1.next());"
108481,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/StringCharacterIteratorTest.java,408,,"		assertEquals(""Wrong begin index"", 0, it.getBeginIndex());"
108482,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/StringCharacterIteratorTest.java,409,,"		assertEquals(""Wrong end index"", 7, it.getEndIndex());"
108483,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/StringCharacterIteratorTest.java,410,,"		assertEquals(""Wrong current index"", 0, it.getIndex());"
108484,./TargetProjects/harmony/classlib/modules/text/src/test/java/org/apache/harmony/text/tests/java/text/Support_Format.java,46,,"            assertEquals(""Test "" + count + "": incorrect formatted text"","
108485,./TargetProjects/harmony/classlib/modules/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java,129,,"            ""TLS_RSA_WITH_NULL_MD5"", true, KeyExchange_RSA, null, ""MD5"","
108486,./TargetProjects/harmony/classlib/modules/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java,133,,"            ""TLS_RSA_WITH_NULL_SHA"", true, KeyExchange_RSA, null, ""SHA"","
108487,./TargetProjects/harmony/classlib/modules/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java,141,,"            ""TLS_RSA_WITH_RC4_128_MD5"", false, KeyExchange_RSA, ""RC4_128"","
108488,./TargetProjects/harmony/classlib/modules/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java,158,,"            ""DES40_CBC"", ""SHA"", code_TLS_RSA_EXPORT_WITH_DES40_CBC_SHA);"
108489,./TargetProjects/harmony/classlib/modules/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java,161,,"            ""TLS_RSA_WITH_DES_CBC_SHA"", false, KeyExchange_RSA, ""DES_CBC"","
108490,./TargetProjects/harmony/classlib/modules/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java,166,,"            ""3DES_EDE_CBC"", ""SHA"", code_TLS_RSA_WITH_3DES_EDE_CBC_SHA);"
108491,./TargetProjects/harmony/classlib/modules/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java,66,,"            throw new IllegalStateException(""SSLContext is not initiallized."");"
108492,./TargetProjects/harmony/classlib/modules/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImpl.java,236,,"                                    ""INTERNAL ERROR"", e);"
108493,./TargetProjects/harmony/classlib/modules/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImpl.java,258,,"                                            .getInstance(""DiffieHellman"");"
108494,./TargetProjects/harmony/classlib/modules/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java,59,,"            fail(""No expected IllegalArgumentException"");"
108495,./TargetProjects/harmony/classlib/modules/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext2Test.java,85,,"            fail(""RuntimeException must be thrown"");"
108496,./TargetProjects/harmony/classlib/modules/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext2Test.java,87,,"            assertEquals(""Incorrect message"", ""Not initialiazed"", e.getMessage());"
108497,./TargetProjects/harmony/classlib/modules/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext2Test.java,87,,"            assertEquals(""Incorrect message"", ""Not initialiazed"", e.getMessage());"
108498,./TargetProjects/harmony/classlib/modules/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext2Test.java,129,,"        assertTrue(""Not null result"",sslE instanceof SSLEngine);"
108499,./TargetProjects/harmony/classlib/modules/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineResultTest.java,55,,"            fail(""IllegalArgumentException must be thrown"");"
108500,./TargetProjects/harmony/classlib/modules/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java,73,,"        String host = ""new host"";"
108501,./TargetProjects/harmony/classlib/modules/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java,106,,"        assertTrue(""Not read only byte buffer"", roBb.isReadOnly());"
108502,./TargetProjects/harmony/classlib/modules/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java,164,,"            fail(""SSLException must be thrown"");"
108503,./TargetProjects/harmony/classlib/modules/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java,514,,"            throw new SSLException(""incorrect limits"");"
108504,./TargetProjects/harmony/classlib/modules/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLExceptionTest.java,61,,"            assertNull(""getCause() must return null"", tE.getCause());"
108505,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java,38,,"        DefaultSSLServerSocketFactory f = new DefaultSSLServerSocketFactory(""ERROR"");"
108506,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java,40,,"        DefaultSSLSocketFactory f = new DefaultSSLSocketFactory(""ERROR"");"
108507,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java,43,,"            fail(""No expected SocketException"");"
108508,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java,128,,"        assertEquals(""RC4"","
108509,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java,143,,"        assertEquals(""DES/CBC/NoPadding"","
108510,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java,149,,"        assertEquals(""DESede/CBC/NoPadding"","
108511,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java,295,,"        assertEquals(""HmacMD5"","
108512,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java,298,,"        assertEquals(""HmacSHA1"","
108513,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java,381,,"        assertEquals(""MD5"","
108514,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java,384,,"        assertEquals(""SHA-1"","
108515,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ClientKeyExchangeTest.java,47,,"            assertTrue(""incorrect ClientKeyExchange"", Arrays.equals("
108516,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ClientKeyExchangeTest.java,61,,"            assertTrue(""Incorrect message decoding"", Arrays.equals("
108517,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java,90,,"            fail(""No expected AlertException"");"
108518,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java,39,,"        String[] keyType = {""RSA"", ""DSA""};"
108519,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java,68,,"        assertEquals(""ssl_test_store"", al);"
108520,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java,148,,"        assertFalse(""Result differs from expected"","
108521,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java,150,,"        assertFalse(""Socket did not reset its want client auth state"","
108522,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java,188,,"        supported[0] = ""NOT_SUPPORTED_CIPHER_SUITE"";"
108523,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java,448,,"        assertEquals(""Incorrect status"", result.getStatus(),"
108524,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java,455,,"            fail(""Expected exception was not thrown."");"
108525,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java,529,,"            assertEquals(""Unexpected status of operation:"","
108526,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java,536,,"                ""The length of the consumed data differs from expected"","
108527,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java,539,,"                ""The length of the produced data differs from expected"","
108528,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java,568,,"                assertTrue(""Inbound should be closed."","
108529,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java,1071,,"            ""The length of the received data differs from expected"","
108530,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java,92,,"                    fail(""Handshake was not started"");"
108531,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java,290,,"        supported[0] = ""NOT_SUPPORTED_CIPHER_SUITE"";"
108532,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java,294,,"                fail(""Modification of the returned result """
108533,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java,295,,"                        + ""causes the modification of the internal state"");"
108534,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java,401,,"        supported[0] = ""NOT_SUPPORTED_PROTOCOL"";"
108535,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java,516,,"        assertFalse(""Result does not correspond to expected"","
108536,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java,534,,"        assertFalse(""Socket did not reset its want client auth state"","
108537,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java,111,,"            fail(""No expected IllegalArgumentException"");"
108538,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java,114,,"        assertNull(session.getValue(""abc""));"
108539,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java,137,,"                                new InetSocketAddress(""localhost"","
108540,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java,209,,"        supported[0] = ""NOT_SUPPORTED_CIPHER_SUITE"";"
108541,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java,81,,"                    ? new String[] {""TLS_""+cipher_suites[0]}"
108542,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java,82,,"                    : new String[] {""SSL_""+cipher_suites[0]});"
108543,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java,59,,"        return new SSLSocketImpl(""localhost"", port,"
108544,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java,105,,"                    fail(""Handshake was not started"");"
108545,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java,369,,"        supported[0] = ""NOT_SUPPORTED_CIPHER_SUITE"";"
108546,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java,373,,"                fail(""Modification of the returned result """
108547,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java,374,,"                        + ""causes the modification of the internal state"");"
108548,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java,478,,"        supported[0] = ""NOT_SUPPORTED_PROTOCOL"";"
108549,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java,645,,"            assertFalse(""Result does not correspond to expected"","
108550,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java,702,,"        assertFalse(""Socket did not reset its want client auth state"","
108551,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java,1035,,"            fail(""Expected exception was not thrown"");"
108552,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java,1038,,"                System.out.println(""Trowed exception: ""+e.getMessage());"
108553,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHelloTest.java,58,,"        assertTrue(""incorrect message decoding"", Arrays.equals("
108554,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerKeyExchangeTest.java,44,,"        assertTrue(""incorrect ServerKeyExchange"", Arrays.equals(message.hash,"
108555,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerKeyExchangeTest.java,61,,"        assertTrue(""incorrect message decoding"", Arrays.equals(message.hash,"
108556,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java,93,,"            tm.checkClientTrusted(null, ""RSA"");"
108557,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java,94,,"            fail(""No expected IllegalArgumentException "");"
108558,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java,44,,"        String def_keystore = System.getProperty(""javax.net.ssl.keyStore"");"
108559,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java,31,,"                ProtocolVersion.getByName(""SSLv3""));"
108560,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java,33,,"                ProtocolVersion.getByName(""TLSv1""));"
108561,./TargetProjects/harmony/classlib/modules/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java,44,,"        String def_keystore = System.getProperty(""javax.net.ssl.trustStore"");"
108562,./TargetProjects/harmony/classlib/modules/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java,49,,"            throw new RuntimeException(""Not initialiazed"");"
108563,./TargetProjects/harmony/classlib/modules/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java,55,,"            fail(""RuntimeException must be thrown"");"
108564,./TargetProjects/harmony/classlib/modules/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java,57,,"            assertEquals(""Incorrect message"", ""Not initialiazed"", e.getMessage());"
108565,./TargetProjects/harmony/classlib/modules/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java,57,,"            assertEquals(""Incorrect message"", ""Not initialiazed"", e.getMessage());"
108566,./TargetProjects/harmony/classlib/modules/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java,90,,"        assertNull(""Not null result"", sslConSpi.engineGetSocketFactory());"
108567,./TargetProjects/harmony/classlib/modules/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java,56,,"            throw new RuntimeException(""Not initialiazed"");"
108568,./TargetProjects/harmony/classlib/support/src/test/java/org/apache/harmony/testframework/CharWrapperTester.java,109,,"            o.write(""BUT"");"
108569,./TargetProjects/harmony/classlib/support/src/test/java/org/apache/harmony/testframework/CharWrapperTester.java,110,,"            o.write(""TERS"");"
108570,./TargetProjects/harmony/classlib/support/src/test/java/org/apache/harmony/testframework/serialization/SerializationTest.java,491,,"        Assert.assertFalse(""Empty array"", objects.length == 0);"
108571,./TargetProjects/harmony/classlib/support/src/test/java/tests/support/Support_HttpServer.java,305,,"				print(os, ""HTTP/1.1 "" + OK + "" OK\r\n"");"
108572,./TargetProjects/harmony/classlib/support/src/test/java/tests/support/Support_HttpServer.java,305,,"				print(os, ""HTTP/1.1 "" + OK + "" OK\r\n"");"
108573,./TargetProjects/harmony/classlib/support/src/test/java/tests/support/Support_HttpServer.java,306,,"				print(os, ""Content-Length: 5\r\n"");"
108574,./TargetProjects/harmony/classlib/support/src/test/java/tests/support/Support_HttpTests.java,50,,"		final String chunkedTestUrl = ""http://localhost:"" + portNumber"
108575,./TargetProjects/harmony/classlib/support/src/test/java/tests/support/Support_HttpTests.java,104,,"			String result = new String(bout.toByteArray(), ""ISO8859_1"");"
108576,./TargetProjects/harmony/classlib/support/src/test/java/tests/support/Support_StringReader.java,86,,"                    throw new IOException(""StringReader is closed"");"
108577,./TargetProjects/harmony/classlib/support/src/test/java/tests/support/Support_TestProvider.java,60,,"				put(""Alg.Alias.MessageDigest.SHA1"", ""SHA"");"
108578,./TargetProjects/harmony/classlib/support/src/test/java/tests/support/Support_TestProvider.java,73,,"				put(""Alg.Alias.AlgorithmParameters.1.2.840.10040.4.1"", ""DSA"");"
108579,./TargetProjects/harmony/classlib/support/src/test/java/tests/support/Support_TestProvider.java,96,,"				put(""Alg.Alias.Signature.DSA"", ""SHA1withDSA"");"
108580,./TargetProjects/harmony/classlib/support/src/test/java/tests/support/Support_UnmodifiableMapTest.java,50,,"				!map.containsKey(""100""));"
108581,./TargetProjects/harmony/drlvm/src/test/array_method_limit/src/Test.java,28,,"            System.out.println(""Test Failed, caught unexpected exception"");"
108582,./TargetProjects/harmony/drlvm/src/test/regression/H5201/JarLauncherTest.java,24,,"		System.out.println(""PASSED"");"
108583,./TargetProjects/harmony/drlvm/src/test/regression/H5480/LooseMathTest.java,46,,"        assertEquals(""d="" + d + "" ulp=""+ulp, StrictMath.sqrt(d), Math.sqrt(d), ulp);"
108584,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,86,,"    @igt(author=""Serguei Stepanovich Zapreyev"") public class Mc002<T3 extends ClassGenericsTest> {"
108585,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,116,,"        if(!((Class)tv.getGenericDeclaration()).getName().equals(""java.lang.ClassGenericsTest$Mc003"")) fail(""test_2, case 003 FAILED: ""+((Class)tv.getGenericDeclaration()).getName());"
108586,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,118,,"        if(!((Class)ab[0]).getName().equals(""java.lang.Thread"")) fail(""test_2, case 004 FAILED: ""+((Class)ab[0]).getName());"
108587,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,119,,"        if(!((Class)ab[1]).getName().equals(""java.io.Serializable"")) fail(""test_2, case 005 FAILED: ""+((Class)ab[1]).getName());"
108588,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,120,,"        if(!((Class)ab[2]).getName().equals(""java.lang.Cloneable"")) fail(""test_2, case 006 FAILED: ""+((Class)ab[2]).getName());"
108589,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,125,,"        if(!((Class)((ParameterizedType)ai[0]).getOwnerType()).getName().equals(""java.lang.ClassGenericsTest"")) fail(""test_2, case 009 FAILED: ""+((Class)((ParameterizedType)ai[0]).getOwnerType()).getName());"
108590,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,128,,"        if(!((Class)((ParameterizedType)aa[0]).getRawType()).getName().equals(""java.lang.ClassGenericsTest$MI003"")) fail(""test_2, case 011 FAILED: ""+((Class)((ParameterizedType)aa[0]).getRawType()).getName());"
108591,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,148,,"        if(!((Class)aa[0]).getName().equals(""java.lang.reflect.Type"")) fail(""test_2, case 024 FAILED: ""+((Class)((ParameterizedType)aa[0]).getRawType()).getName());"
108592,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,285,,"	        if(!((ParameterizedType)oc1).getOwnerType().toString().equals(""java.lang.ClassGenericsTest<X>"")) fail(""test_3, case 003 FAILED: ""+((ParameterizedType)oc1).getOwnerType().toString());"
108593,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,361,,"        if(!((ParameterizedType)oc1).getOwnerType().toString().equals(""java.lang.ClassGenericsTest<? super java.lang.Class>.Mc002<java.lang.ClassGenericsTest>"")) fail(""test_3, case 046 FAILED: ""+((ParameterizedType)oc1).getOwnerType().toString());"
108594,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,370,,"        if(!((ParameterizedType)((ParameterizedType)oc1).getOwnerType()).getOwnerType().toString().equals(""java.lang.ClassGenericsTest<? super java.lang.Class>"")) fail(""test_3, case 052 FAILED: ""+((Class)((ParameterizedType)oc1).getRawType()));"
108595,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,392,,"        if(!((Class)ab[0]).getName().equals(""java.lang.Object"")) fail(""test_3, case 062 FAILED: ""+((Class)ab[0]).getName());"
108596,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,416,,"/* + */    @igt(author=""*****"") public <UuUuU extends Throwable, TM1, TM2 extends Thread &java.io.Serializable &Cloneable> void foo1For_5(UuUuU a1) throws UuUuU, java.io.IOException {}"
108597,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,443,,"                if (am[i].getName().equals(""foo1For_5"")) {"
108598,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,459,,"        if(!tv.getName().equals(""UuUuU"")) fail(""test_5, case 005 FAILED: ""+tv.getName());"
108599,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,463,,"        if(!((Class)ab[0]).getName().equals(""java.lang.Throwable"")) fail(""test_5, case 008 FAILED: ""+((Class)ab[0]).getName());"
108600,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,465,,"        if(!tv.getName().equals(""TM1"")) fail(""test_5, case 009 FAILED: ""+tv.getName());"
108601,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,471,,"        if(!tv.getName().equals(""TM2"")) fail(""test_5, case 013 FAILED: ""+tv.getName());"
108602,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,488,,"        if(!((Class)aet[1]).getName().equals(""java.io.IOException"")) fail(""test_5, case 023 FAILED: ""+((Class)aet[1]).getName());"
108603,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,494,,"                if (am[i].getName().equals(""foo2For_5"")) {"
108604,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,573,,"                if (am[i].getName().equals(""foo3For_5"")) {"
108605,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,589,,"        if(!tv.getName().equals(""\u0576\u06C0\u06F1"")) fail(""test_5, case 068 FAILED: ""+tv.getName());"
108606,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,595,,"        if(!tv.getName().equals(""\u0576\u06C0\u06F11"")) fail(""test_5, case 072 FAILED: ""+tv.getName());"
108607,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,601,,"        if(!tv.getName().equals(""\u0576\u06C0\u06F12"")) fail(""test_5, case 076 FAILED: ""+tv.getName());"
108608,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,607,,"        if(!tv.getName().equals(""\u0576\u06C0\u06F13"")) fail(""test_5, case 079 FAILED: ""+tv.getName());"
108609,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest.java,857,,"        if(!((Constructor)tv.getGenericDeclaration()).getName().equals(""java.lang.ClassGenericsTest$MC006"")) fail(""test_6, case 006 FAILED: ""+((Constructor)tv.getGenericDeclaration()).getName());"
108610,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest2.java,137,,"        if(!((Class)((ParameterizedType)aa[0]).getOwnerType()).getName().equals(""java.lang.ClassGenericsTest2"")) fail(""test_2, case 014 FAILED: ""+((Class)((ParameterizedType)aa[0]).getOwnerType()).getName());"
108611,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest2.java,254,,"        if(!tv.getName().equals(""UuUuU"")) fail(""test_5, case 011 FAILED: ""+tv.getName());"
108612,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest5.java,80,,"        if(!C.class.getDeclaredMethod(""go2"",Throwable.class).toGenericString().equals(""protected abstract <T> java.lang.ClassGenericsTest5.OneParamType<? extends java.lang.String> java.lang.ClassGenericsTest5$C.go2(T) throws T,java.lang.Error"")) "
108613,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassGenericsTest5.java,86,,"        if(!B2.class.getDeclaredMethod(""bar"",int.class, Object[].class).toGenericString().equals(""public java.lang.String java.lang.ClassGenericsTest5$B2.bar(int,java.lang.Object[])"")) "
108614,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,62,,"    abstract String author() default ""Zapreyev"";"
108615,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,188,,"        if(!MC001.class.getEnclosingClass().equals(ClassHierarchyTest.class)) fail(""test_1, case 004 FAILED: ""+MC001.class.getEnclosingClass());"
108616,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,189,,"        if(MC001.class.getEnumConstants()!=null) fail(""test_1, case 009 FAILED: ""+MC001.class.getEnumConstants());"
108617,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,190,,"        if(MC001.class.isEnum()) fail(""test_1, case 000 FAILED: ""+MC001.class.isEnum());"
108618,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,191,,"        try{MC001.class.asSubclass(ClassHierarchyTest.class); fail(""test_1, case 011 FAILED: ""+MC001.class.asSubclass(ClassHierarchyTest.class));}catch(Exception e){/*e.printStackTrace();*/}"
108619,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,192,,"        if(MC001.class.getEnclosingMethod()!=null) fail(""test_1, case 013 FAILED: ""+MC001.class.getEnclosingMethod());"
108620,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,193,,"        if(MC001.class.getEnclosingConstructor()!=null) fail(""test_1, case 014 FAILED: ""+MC001.class.getEnclosingConstructor());"
108621,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,194,,"        if(!MC001.class.isMemberClass()) fail(""test_1, case 017 FAILED: ""+MC001.class.isMemberClass());"
108622,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,195,,"        if(MC001.class.isLocalClass()) fail(""test_1, case 018 FAILED: ""+MC001.class.isLocalClass());"
108623,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,196,,"        if(MC001.class.isAnonymousClass()) fail(""test_1, case 019 FAILED: ""+MC001.class.isAnonymousClass());"
108624,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,197,,"        if(MC001.class.isSynthetic()) fail(""test_1, case 020 FAILED: ""+MC001.class.isSynthetic());"
108625,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,198,,"        if(!MC001.class.getCanonicalName().equals(""java.lang.ClassHierarchyTest.MC001"")) fail(""test_1, case 021 FAILED: ""+MC001.class.getCanonicalName());"
108626,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,199,,"        if(!MC001.class.getSimpleName().equals(""MC001"")) fail(""test_1, case 022 FAILED: ""+MC001.class.getSimpleName());"
108627,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,227,,"        String name[] = caNa.split(""\\."");"
108628,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,230,,"            if(cuCla.getEnclosingClass() != null && cuCla.getEnclosingClass().getSimpleName().equals(name[i])) fail(""test_2, case 002 FAILED: ""+cuCla.getEnclosingClass().getSimpleName());"
108629,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,231,,"            if(cuCla.getEnumConstants()!=null) fail(""test_2, case 009 FAILED: ""+cuCla.getEnumConstants());"
108630,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,232,,"            if(cuCla.isEnum()) fail(""test_2, case 000 FAILED: ""+cuCla.isEnum());"
108631,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,233,,"            try{cuCla.asSubclass( cuCla.getEnclosingClass() != null ? cuCla.getEnclosingClass() : cuCla ); if(!cuCla.getCanonicalName().equals(""java.lang.ClassHierarchyTest"")) fail(""test_2, case 011 FAILED: ""+ cuCla.asSubclass( cuCla.getEnclosingClass() != null ? cuCla.getEnclosingClass() : cuCla ));}catch(Exception e){/*e.printStackTrace();*/}"
108632,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,233,,"            try{cuCla.asSubclass( cuCla.getEnclosingClass() != null ? cuCla.getEnclosingClass() : cuCla ); if(!cuCla.getCanonicalName().equals(""java.lang.ClassHierarchyTest"")) fail(""test_2, case 011 FAILED: ""+ cuCla.asSubclass( cuCla.getEnclosingClass() != null ? cuCla.getEnclosingClass() : cuCla ));}catch(Exception e){/*e.printStackTrace();*/}"
108633,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,234,,"            if(cuCla.getEnclosingMethod()!=null) fail(""test_2, case 013 FAILED: ""+cuCla.getEnclosingMethod());"
108634,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,235,,"            if(cuCla.getEnclosingConstructor()!=null) fail(""test_2, case 014 FAILED: ""+cuCla.getEnclosingConstructor());"
108635,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,237,,"            if(cuCla.isLocalClass()) fail(""test_2, case 018 FAILED: ""+cuCla.isLocalClass());"
108636,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,238,,"            if(cuCla.isAnonymousClass()) fail(""test_2, case 019 FAILED: ""+cuCla.isAnonymousClass());"
108637,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,239,,"            if(cuCla.isSynthetic()) fail(""test_2, case 020 FAILED: ""+cuCla.isSynthetic());"
108638,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,240,,"            if(!cuCla.getCanonicalName().equals(caNa)) fail(""test_2, case 021 FAILED: ""+cuCla.getCanonicalName());"
108639,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,242,,"            if(!cuCla.getSimpleName().equals(name[i])) fail(""test_2, case 022 FAILED: ""+cuCla.getSimpleName());"
108640,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,281,,"        if(!LC001.class.getEnclosingClass().equals(ClassHierarchyTest.class)) fail(""test_3, case 004 FAILED: ""+LC001.class.getEnclosingClass());"
108641,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,282,,"        if(LC001.class.getEnumConstants()!=null) fail(""test_3, case 009 FAILED: ""+LC001.class.getEnumConstants());"
108642,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,283,,"        if(LC001.class.isEnum()) fail(""test_3, case 000 FAILED: ""+LC001.class.isEnum());"
108643,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,284,,"        try{LC001.class.asSubclass(ClassHierarchyTest.class); fail(""test_3, case 011 FAILED: ""+LC001.class.asSubclass(ClassHierarchyTest.class));}catch(Exception e){/*e.printStackTrace();*/}"
108644,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,285,,"        if(!LC001.class.getEnclosingMethod().getName().equals(""test_3"")) fail(""test_3, case 013 FAILED: ""+LC001.class.getEnclosingMethod().getName());"
108645,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,286,,"        if(LC001.class.getEnclosingConstructor()!=null) fail(""test_3, case 014 FAILED: ""+LC001.class.getEnclosingConstructor());"
108646,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,287,,"        if(LC001.class.isMemberClass()) fail(""test_3, case 017 FAILED: ""+LC001.class.isMemberClass());"
108647,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,288,,"        if(!LC001.class.isLocalClass()) fail(""test_3, case 018 FAILED: ""+LC001.class.isLocalClass());"
108648,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,289,,"        if(LC001.class.isAnonymousClass()) fail(""test_3, case 019 FAILED: ""+LC001.class.isAnonymousClass());"
108649,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,290,,"        if(LC001.class.isSynthetic()) fail(""test_3, case 020 FAILED: ""+LC001.class.isSynthetic());"
108650,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,291,,"        if(LC001.class.getCanonicalName()!=null) fail(""test_3, case 021 FAILED: ""+LC001.class.getCanonicalName());"
108651,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,292,,"        if(!LC001.class.getSimpleName().equals(""LC001"")) fail(""test_3, case 022 FAILED: ""+LC001.class.getSimpleName());"
108652,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassHierarchyTest.java,367,,"        if(!cuCla.getEnclosingMethod().getName().equals(""value"")) fail(""test_4, case 013 FAILED: ""+cuCla.getEnclosingMethod().getName());"
108653,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassTestGetConstructor.java,55,,"            assertNotNull(""Unexpected null"", c);"
108654,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassTestGetConstructors.java,38,,"        assertNotNull(""Unexpected null"", cs);"
108655,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassTestGetDeclaredConstructor.java,40,,"            assertNotNull(""unexpected null"", c);"
108656,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassTestGetDeclaredConstructors.java,38,,"        assertNotNull(""unexpected null"", cs);"
108657,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassTestGetDeclaredConstructors.java,39,,"        assertEquals(""array length:"", 0, cs.length);"
108658,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassTestGetMethod.java,40,,"            assertEquals(""incorrect name"", ""method1"", m.getName());"
108659,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassTestGetMethod.java,41,,"            assertSame(""objects differ"", A.class, m.getDeclaringClass());"
108660,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassTestGetModifiers.java,44,,"        assertFalse(""interface"", Modifier.isInterface(mod));"
108661,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassTestIsAssignableFrom.java,49,,"        assertTrue(""Assert 0:"", Integer.TYPE.isAssignableFrom(int.class));"
108662,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassTestIsAssignableFrom.java,50,,"        assertTrue(""Assert 1:"", int.class.isAssignableFrom(Integer.TYPE));"
108663,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ClassTestNewInstance.java,43,,"        fail(""InstantiationException exception expected"");"
108664,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ObjectTest.java,120,,"                fail(""The main thread was interrupted."");"
108665,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ObjectTest.java,207,,"                fail(""The main thread was interrupted!"");"
108666,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/RuntimeAdditionalTest0.java,49,,"    public static String javaStarter = ""java"";"
108667,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/RuntimeAdditionalTest0.java,56,,"            os = ""Win"";"
108668,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/RuntimeAdditionalTest0.java,164,,"            os = ""Lin"";"
108669,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/RuntimeAdditionalTest0.java,170,,"					proc = Runtime.getRuntime().exec(new String[]{""find"", ""/usr"", ""-name"", ""java""});"
108670,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/RuntimeAdditionalTest0.java,170,,"					proc = Runtime.getRuntime().exec(new String[]{""find"", ""/usr"", ""-name"", ""java""});"
108671,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/RuntimeAdditionalTest0.java,170,,"					proc = Runtime.getRuntime().exec(new String[]{""find"", ""/usr"", ""-name"", ""java""});"
108672,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/RuntimeAdditionalTest0.java,172,,"					proc = Runtime.getRuntime().exec(new String[]{""/usr/bin/find"", ""/usr"", ""-name"", ""java""});"
108673,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/RuntimeAdditionalTest0.java,230,,"                            .println(""### WARNING: tree command hasn't been found! A lot of RuntimeAdditionalTest* can fail due to this reason!"");"
108674,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/RuntimeAdditionalTest0.java,344,,"                    "".txt"", fileLength)) != null) {"
108675,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/RuntimeAdditionalTest10.java,68,,"            String ttt = System.getProperty(""vm.boot.class.path"") +(System.getProperty(""java.class.path"").length() > 0 ? "
108676,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/RuntimeTest.java,125,,"                    stmp += ""0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789""+"
108677,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/StackTraceElementTest.java,32,,"        String[] fileName = new String[] {null, """", ""file""};"
108678,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/StackTraceElementTest.java,34,,"        String declaringClass = ""class"";"
108679,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/StackTraceElementTest.java,35,,"        String methodName = ""method"";"
108680,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/StackTraceElementTest.java,132,,"        assertEquals(""Assert 0: incorrect output"", ""class.method(file:1)"", ste.toString());"
108681,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadGroupTest.java,107,,"        ThreadGroup group = new ThreadGroup(""group"");"
108682,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadGroupTest.java,143,,"        ThreadGroup group = new ThreadGroup(""new"");"
108683,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadGroupTest.java,201,,"        ThreadGroup parent = new ThreadGroup(""parent"");"
108684,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadGroupTest.java,310,,"        ThreadGroup tg1 = new ThreadGroup(""tg1"");"
108685,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadGroupTest.java,324,,"        ThreadGroup tg2 = new ThreadGroup(tg1, ""tg2"");"
108686,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadGroupTest.java,407,,"        assertTrue(tg1.getName() + "" has not been destroyed"", tg1.isDestroyed());"
108687,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadGroupTest.java,470,,"            tArray[i] = new ThreadTest.ThreadRunning(tg, ""ttt"");"
108688,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadGroupTest.java,592,,"        ThreadGroup tg11 = new ThreadGroup(tg1, ""tg11"");"
108689,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadGroupTest.java,593,,"        new ThreadGroup(tg1, ""tg12"");"
108690,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadGroupTest.java,594,,"        new ThreadGroup(tg11, ""tg111"");"
108691,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadGroupTest.java,595,,"        new ThreadGroup(tg11, ""tg112"");"
108692,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadGroupTest.java,615,,"        assertEquals(""incorrect number of thread groups in tg"","
108693,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadTest.java,303,,"        assertTrue(""incorrect thread name"", "
108694,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadTest.java,304,,"                   t.toString().indexOf(""Thread-"") >= 0);"
108695,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadTest.java,305,,"        assertSame(""incorrect thread group"", "
108696,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadTest.java,357,,"        assertEquals(""thread has not run"", 625, s.squaredNumber);"
108697,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadTest.java,382,,"        String name = ""newThread"";"
108698,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadTest.java,428,,"        ThreadGroup tg = new ThreadGroup(""newGroup"");"
108699,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadTest.java,724,,"        assertTrue(""interrupt status has not changed to true"", t.interrupted1);"
108700,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadTest.java,1257,,"        ThreadGroup tg = new ThreadGroup(""test thread group"");"
108701,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThreadTest.java,1258,,"        Thread t = new Thread(tg, ""test thread"");"
108702,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThrowableTest.java,45,,"        Throwable th = new Throwable(""aaa"");"
108703,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThrowableTest.java,46,,"        assertEquals(""incorrect message"", ""aaa"", th.getMessage());"
108704,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThrowableTest.java,58,,"        assertSame(""incorrect cause"", th1, th.getCause());"
108705,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThrowableTest.java,142,,"        ste[0] = new StackTraceElement(""class"", ""method"", ""file"", -2);"
108706,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThrowableTest.java,142,,"        ste[0] = new StackTraceElement(""class"", ""method"", ""file"", -2);"
108707,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/ThrowableTest.java,142,,"        ste[0] = new StackTraceElement(""class"", ""method"", ""file"", -2);"
108708,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/reflect/Field5Test.java,44,,"        return AnnotatedField.class.getField(""foo"");"
108709,./TargetProjects/harmony/drlvm/vm/tests/kernel/java/lang/reflect/Method5Test.java,36,,"        return AnnotatedMethod.class.getMethod(""foo"");"
108710,./TargetProjects/harmony/drlvm/vm/tests/kernel/org/apache/harmony/lang/AnnotatedElementTestFrame.java,133,,"        assertNull(""case 1"", getElement2().getAnnotation(None.class));"
108711,./TargetProjects/harmony/drlvm/vm/tests/kernel/org/apache/harmony/lang/AnnotatedElementTestFrame.java,134,,"        assertNull(""case 2"", getElement2().getAnnotation(None.class));"
108712,./TargetProjects/harmony/drlvm/vm/tests/kernel/org/apache/harmony/lang/AnnotatedElementTestFrame.java,216,,"        assertEquals(""number of Annotations"", 1, an.length);"
108713,./TargetProjects/harmony/drlvm/vm/tests/kernel/org/apache/harmony/lang/annotation/AnnotationLoaderTest.java,57,,"        assertEquals(""annotations num"", 1, an.length);"
108714,./TargetProjects/harmony/drlvm/vm/tests/kernel/org/apache/harmony/lang/annotation/AnnotationLoaderTest.java,58,,"        assertEquals(""the class annotation"", anotherAntnClass, an[0].annotationType());"
108715,./TargetProjects/harmony/drlvm/vm/tests/kernel/org/apache/harmony/lang/annotation/AnnotationLoaderTest.java,70,,"        assertEquals(""the package annotation"", ""AnotherAntn"", an[0].annotationType().getSimpleName());"
108716,./TargetProjects/harmony/drlvm/vm/tests/kernel/org/apache/harmony/lang/annotation/AnnotationLoaderTest.java,81,,"        assertNotNull(""annotations"", an);"
108717,./TargetProjects/harmony/drlvm/vm/tests/smoke/Check.java,45,,"            tests = findTests(new File(baseDir(), ""tests"" + FS + ""smoke""));"
108718,./TargetProjects/harmony/drlvm/vm/tests/smoke/gc/Mark.java,133,,"                + "", pause threshold "" + pause_threshold + "" ms"""
108719,./TargetProjects/harmony/drlvm/vm/tests/smoke/gc/Mark.java,301,,"                    ""Pause max "" + max_pause + "" ms, """
108720,./TargetProjects/harmony/drlvm/vm/tests/smoke/gc/Mark.java,303,,"                        + ""avg "" + avg_pause + "" ms, """
108721,./TargetProjects/harmony/drlvm/vm/tests/smoke/gc/RunFinalizersOnExitTest.java,112,,"            System.err.println(""\nFAILED"");"
108722,./TargetProjects/harmony/drlvm/vm/vmcore/src/kernel_classes/javasrc/java/lang/Class.java,80,,"    @SuppressWarnings(""unchecked"")"
108723,./TargetProjects/harmony/drlvm/vm/vmcore/src/kernel_classes/javasrc/java/lang/Thread.java,398,,"                ""Thread Manager internal error "" + status);"
108724,./TargetProjects/harmony/drlvm/vm/vmcore/src/kernel_classes/javasrc/java/lang/ThreadLocal.java,46,,"    @SuppressWarnings(""unchecked"")"
108725,./TargetProjects/harmony/drlvm/vm/vmcore/src/kernel_classes/javasrc/java/security/AccessController.java,51,,"            throw new NullPointerException(""action can not be null"");"
108726,./TargetProjects/harmony/drlvm/vm/vmcore/src/kernel_classes/javasrc/org/apache/harmony/lang/reflect/parser/Parser.java,137,,"    @SuppressWarnings(""unchecked"")"
108727,./TargetProjects/harmony/drlvm/vm/vmcore/src/kernel_classes/javasrc/org/apache/harmony/lang/reflect/parser/SignatureLexer2.java,216,,"                                System.out.println("".............lex:ID_COLON:\""""+ident+""\"""");"
108728,./TargetProjects/harmony/drlvm/vm/vmcore/src/kernel_classes/javasrc/org/apache/harmony/lang/reflect/parser/SignatureLexer2.java,224,,"                                System.out.println("".............lex:ID:\""""+ident+""\"""");"
108729,./TargetProjects/harmony/drlvm/vm/vmcore/src/kernel_classes/javasrc/org/apache/harmony/lang/reflect/parser/SignatureLexer2.java,230,,"                            theRetToken=new MToken(MToken.INVALID_TYPE, ""figvam"");"
108730,./TargetProjects/harmony/drlvm/vm/vmcore/src/kernel_classes/javasrc/org/apache/harmony/lang/reflect/support/AuxiliaryUtil.java,56,,"                sb.append(""\\0"");"
108731,./TargetProjects/harmony/drlvm/vm/vmcore/src/kernel_classes/javasrc/sun/misc/Unsafe.java,314,,"        throw new UnsupportedOperationException(""Not Yet Implemented"");"
108732,./TargetProjects/harmony/jdktools/modules/jdktools/src/main/java/org/apache/harmony/tools/javap/Clazz.java,527,,"                    result.append("";\t//  "");"
108733,./TargetProjects/harmony/jdktools/modules/jdktools/src/main/java/org/apache/harmony/tools/jdb/Main.java,71,,"            @SuppressWarnings(""unchecked"")"
108734,./TargetProjects/harmony/jdktools/modules/jdktools/src/main/java/org/apache/harmony/tools/jdb/Main.java,404,,"                            return String.format(""Breakpoint set: "" + loc);"
108735,./TargetProjects/harmony/jdktools/modules/jdktools/src/main/java/org/apache/harmony/tools/jdb/Main.java,457,,"        CLEAR_METHOD(""clear"", ""clear <class id>.<method>[(argument_type,...)]"", """") {"
108736,./TargetProjects/harmony/jdktools/modules/jdktools/src/main/java/org/apache/harmony/tools/jdb/Main.java,644,,"        TRACE_METHODS(""trace"", ""trace [go] methods [thread]"", """") {"
108737,./TargetProjects/harmony/jdktools/modules/jdktools/src/main/java/org/apache/harmony/tools/jdb/Main.java,686,,"        STEP(""step"", ""step"", """") {"
108738,./TargetProjects/harmony/jdktools/modules/jdktools/src/main/java/org/apache/harmony/tools/jdb/Main.java,812,,"        MONITOR_CMD(""monitor"", ""monitor <command>"", """") {"
108739,./TargetProjects/harmony/jdktools/modules/jdktools/src/main/java/org/apache/harmony/tools/keytool/ArgumentsParser.java,321,,"                        throw new KeytoolException(""The password must be at least """
108740,./TargetProjects/harmony/jdktools/modules/jdktools/src/main/java/org/apache/harmony/tools/keytool/ArgumentsParser.java,322,,"                                + minPwdLength + "" characters"");"
108741,./TargetProjects/harmony/jdktools/modules/jdktools/src/main/java/org/apache/harmony/tools/keytool/ArgumentsParser.java,626,,"                    prompt = ""Enter new key password for <"" + alias + "">: "";"
108742,./TargetProjects/harmony/jdktools/modules/jdktools/src/main/java/org/apache/harmony/tools/keytool/ArgumentsParser.java,703,,"                new StringBuffer(""Unknown""), new StringBuffer(""Unknown""),"
108743,./TargetProjects/harmony/jdktools/modules/jdktools/src/main/java/org/apache/harmony/tools/keytool/KeyCertGenerator.java,207,,"            throw new NoSuchAlgorithmException(""The algorithm "" + keyAlg"
108744,./TargetProjects/harmony/jdktools/modules/jdktools/src/main/java/org/apache/harmony/tools/keytool/KeyCertGenerator.java,212,,"                            + "" is not found in the environment."").initCause(e);"
108745,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/framework/jdwp/JDWPConstants.java,70,,"                return ""<unknown>"";"
108746,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/framework/jdwp/JDWPConstants.java,92,,"            return ""NONE"";"
108747,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ArrayReference/GetValuesTest.java,165,,"        logWriter.println(""==> testGetValues001: checkArrayRegion: arrayID = "" + arrayID"
108748,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ArrayReference/GetValuesTest.java,166,,"                + ""; Expected error = "" + error + ""("" + JDWPConstants.Error.getName(error) + "")"""
108749,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ArrayReference/GetValuesTest.java,170,,"        logWriter.println(""==> PASSED!"");"
108750,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ClassObjectReference/ReflectedTypeTest.java,110,,"                logWriter.println(""==> refTypeId[""+j+""] = "" + typeInitID);"
108751,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ClassType/InvokeMethodTest.java,175,,"        checkReplyPacket(reply, ""ClassType::InvokeMethod command"");"
108752,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ClassType/InvokeMethodTest.java,180,,"        logWriter.println("" ClassType.InvokeMethod: returnValue.getIntValue()="""
108753,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ClassType/InvokeMethodTest.java,189,,"        logWriter.println("" ClassType.InvokeMethod: exception.tag="""
108754,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ClassType/InvokeMethodTest.java,190,,"                + exception.tag + "" exception.objectID="" + exception.objectID);"
108755,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ClassType/SuperClassTest.java,99,,"            asserSuperClassReplyIsValid(reply, ""Ljava/lang/Object;"");"
108756,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/DebuggerOnDemand/OnthrowLaunchDebugger002.java,59,,"            testSynchronizer.sendMessage(""FAIL"");"
108757,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/DebuggerOnDemand/OnthrowLaunchDebugger002.java,69,,"            logWriter.println(""##EXCEPTION: "" + e);"
108758,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEvents002Test.java,77,,"        logWriter.println(""==> "");"
108759,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,88,,"        logWriter.println(""=> debuggeeClassID = "" + debuggeeClassID);"
108760,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,91,,"        logWriter.println(""=> threadID = "" + threadID);"
108761,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,93,,"        long runMethodID = debuggeeWrapper.vmMirror.getMethodID(debuggeeClassID, ""run"");"
108762,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,94,,"        logWriter.println(""=> runMethodID = "" + runMethodID);"
108763,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,97,,"        logWriter.println(""=> Info for tested method '"" + methodForEvents + ""':"");"
108764,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,100,,"            String failureMessage = ""## FAILURE: Can NOT get MethodID for class '"""
108765,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,101,,"                + getDebuggeeClassName() + ""'; Method name = "" + methodForEvents;"
108766,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,104,,"        logWriter.println(""=> testedMethodID = "" + testedMethodID);"
108767,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,109,,"        logWriter.println(""=> Set request for BREAKPOINT event in debuggee: """
108768,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,114,,"            String failureMessage = ""## FAILURE: Can NOT get MethodEntryLocation for method '"""
108769,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,120,,"        logWriter.println(""=> Breakpoint requestID = "" + breakpointRequestID);"
108770,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,123,,"                + getDebuggeeClassName() + "", method: "" + methodForEvents);"
108771,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,130,,"        logWriter.println(""=> Set request for SINGLE_STEP event in class """
108772,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,148,,"        checkReplyPacket(setRequestReply, ""EventRequest::Set command"");"
108773,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,150,,"        logWriter.println(""=> SINGLE_STEP requestID = "" + stepRequestID);"
108774,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,170,,"        checkReplyPacket(clearReply, ""EventRequest::Clear"");"
108775,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,178,,"        logWriter.println(""=> Resume debuggee"");"
108776,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,667,,"            logWriter.println(""=> Event #"" + i + "";"");"
108777,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,668,,"            logWriter.println(""=> EventKind: """
108778,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTest.java,674,,"                    .println(""=> RequestID: "" + parsedEvents[i].getRequestID());"
108779,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/Events/CombinedEventsTestCase.java,58,,"                    + classID + ""; Method name = "" + methodName);"
108780,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ObjectReference/InvokeMethodTest.java,144,,"                + exception.tag + "" exception.objectID="" + exception.objectID);"
108781,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ObjectReference/InvokeMethodTest.java,152,,"        assertTrue(""exception must be != null"", exception != null);"
108782,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ObjectReference/InvokeMethodTest.java,153,,"        assertTrue(""exception.objectID must be == 0"", exception.objectID == 0);"
108783,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ObjectReference/InvokeMethodTest.java,213,,"        checkReplyPacket(reply, ""ObjectReference::InvokeMethod command"");"
108784,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ObjectReference/InvokeMethodTest.java,216,,"        logWriter.println("" ObjectReference.InvokeMethod: returnValue.getIntValue()="""
108785,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ObjectReference/InvokeMethodTest.java,220,,"        logWriter.println("" ObjectReference.InvokeMethod: exception.tag="""
108786,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ObjectReference/MonitorInfoTest.java,153,,"                (""## FAILURE: "" + thisCommandName + "" returns unexpected monitorOwnerThreadID:"" +"
108787,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ObjectReference/SetValues004Debuggee.java,80,,"            logWriter.println(""##> Debuggee: FAILURE: Unexpected value"");"
108788,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ObjectReference/SetValues004Debuggee.java,81,,"            logWriter.println(""##> Expected value = "" + null);"
108789,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ObjectReference/SetValues004Debuggee.java,84,,"            logWriter.println(""--> Debuggee: OK. Expected value"");"
108790,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ObjectReference/SetValuesDebuggee.java,56,,"            logWriter.println(""##> Debuggee: FAILURE: Unexpected value"");"
108791,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ObjectReference/SetValuesDebuggee.java,60,,"            logWriter.println(""--> Debuggee: PASSED: Expected value"");"
108792,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ReferenceType/FieldsTest.java,127,,"                    logWriter.println(""## Field name = "" + returnedFieldName);"
108793,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ReferenceType/FieldsWithGenericTest.java,141,,"                    logWriter.println(""## Field name = "" + returnedFieldName);"
108794,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ReferenceType/MethodsTest.java,135,,"                    logWriter.println(""## Method name = "" + returnedMethodName);"
108795,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ReferenceType/MethodsWithGenericTest.java,145,,"                    logWriter.println(""## Method name = "" + returnedMethodName);"
108796,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ReferenceType/MethodsWithGenericTest.java,149,,"                        returnedMethodName + "";\n"";"
108797,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ReferenceType/Signature002Test.java,130,,"                    + "" returns unexpected ERROR = "" + errorCode "
108798,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ReferenceType/Signature002Test.java,169,,"            (""\n## FAILURE: "" + thisCommandName + "" does NOT return expected error - INVALID_OBJECT"");"
108799,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/StackFrame/GetValuesTest.java,204,,"            logWriter.printError(""Unexpected tag of variable: """
108800,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/StackFrame/PopFrames002Test.java,94,,"        logWriter.println(""=> Wait for breakpoint in "" + breakpointMethodName);"
108801,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/StackFrame/PopFrames002Test.java,163,,"        logWriter.println(""=> Resume debuggee"");"
108802,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/StackFrame/SetValuesTest.java,223,,"            logWriter.printError(""Unexpected tag of variable: """
108803,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ThreadReference/FramesTest.java,75,,"        (""==> testedThreadName = |"" + testedThreadName +""|""); "
108804,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ThreadReference/FramesTest.java,77,,"        logWriter.println(""==> threadID = "" + threadID); "
108805,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ThreadReference/FramesTest.java,82,,"            printErrorAndFail(""Unexpected ERROR = "" + err "
108806,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ThreadReference/FramesTest.java,91,,"            logWriter.println(""\t"" + i + "". frameID="" + frame.frameID"
108807,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ThreadReference/FramesTest.java,92,,"                    + "" - "" + classSignature"
108808,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ThreadReference/ResumeTest.java,152,,"            if ( ! checkReplyPacketWithoutFail(reply, ""ThreadReference.Resume command"") ) {"
108809,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ThreadReference/ResumeTest.java,186,,"            logWriter.println(""==> Send ThreadReference.Status command...""); "
108810,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ThreadReference/ResumeTest.java,192,,"            if ( ! checkReplyPacketWithoutFail(reply, ""ThreadReference.Status command"") ) {"
108811,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ThreadReference/ResumeTest.java,200,,"            logWriter.println(""==> threadStatus = "" + threadStatus + ""("""
108812,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ThreadReference/ResumeTest.java,202,,"            logWriter.println(""==> suspendStatus = "" + suspendStatus + ""("""
108813,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ThreadReference/Status005Debuggee.java,98,,"        parent.logWriter.println(""--> Thread: "" + getName() +  "": started..."");"
108814,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ThreadReference/SuspendCountTest.java,74,,"            synchronizer.sendMessage(""FINISH"");"
108815,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ThreadReference/SuspendCountTest.java,137,,"            logWriter.println(""==> Send ThreadReference.SuspendCount command...""); "
108816,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ThreadReference/SuspendCountTest.java,143,,"            if ( ! checkReplyPacketWithoutFail(reply, ""ThreadReference.SuspendCount command"") ) {"
108817,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ThreadReference/SuspendCountTest.java,147,,"                logWriter.println(""==> ThreadReference.SuspendCount command returns suspendCount = "" + suspendCount); "
108818,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/ThreadReference/SuspendCountTest.java,149,,"                    logWriter.println(""## FAILURE: Unexpected suspendCount for thread = "" + threadName);"
108819,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/VirtualMachine/RedefineClassesTest.java,120,,"        logWriter.println(""==> "" + thisTestName + "" for "" + thisCommandName + "": START..."");"
108820,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/VirtualMachine/RedefineClassesTest.java,120,,"        logWriter.println(""==> "" + thisTestName + "" for "" + thisCommandName + "": START..."");"
108821,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/VirtualMachine/RedefineClassesTest.java,127,,"            (""===> File name = "" + byteCodeToRedefineFile);"
108822,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/VirtualMachine/RedefineClassesTest.java,129,,"            (""===> Test can NOT be run!"");"
108823,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/VirtualMachine/RedefineClassesTest.java,130,,"            logWriter.println(""==> "" + thisTestName + "" for "" + thisCommandName + "": FINISH"");"
108824,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/VirtualMachine/RedefineClassesTest.java,174,,"            logWriter.println(""===> Exception is thrown: "" + thrown);"
108825,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/VirtualMachine/TopLevelThreadGroupsTest.java,105,,"            logWriter.println(""\n==> childThreadID["" + j + ""] = "" + id);"
108826,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/share/JDWPRawTestCase.java,91,,"        logWriter.println(""----------------------------------------"");"
108827,./TargetProjects/harmony/jdktools/modules/jpda/src/test/java/org/apache/harmony/jpda/tests/jdwp/share/debuggee/InvokeMethodDebuggee.java,46,,"            throw new Throwable(""test exception"");"
108828,./TargetProjects/harmony/jdktools/modules/jretools/src/main/java/org/apache/harmony/jretools/keytool/ArgumentsParser.java,321,,"                        throw new KeytoolException(""The password must be at least """
108829,./TargetProjects/harmony/jdktools/modules/jretools/src/main/java/org/apache/harmony/jretools/keytool/ArgumentsParser.java,322,,"                                + minPwdLength + "" characters"");"
108830,./TargetProjects/harmony/jdktools/modules/jretools/src/main/java/org/apache/harmony/jretools/keytool/ArgumentsParser.java,626,,"                    prompt = ""Enter new key password for <"" + alias + "">: "";"
108831,./TargetProjects/harmony/jdktools/modules/jretools/src/main/java/org/apache/harmony/jretools/keytool/ArgumentsParser.java,703,,"                new StringBuffer(""Unknown""), new StringBuffer(""Unknown""),"
108832,./TargetProjects/harmony/jdktools/modules/jretools/src/main/java/org/apache/harmony/jretools/keytool/KeyCertGenerator.java,207,,"            throw new NoSuchAlgorithmException(""The algorithm "" + keyAlg"
108833,./TargetProjects/harmony/jdktools/modules/jretools/src/main/java/org/apache/harmony/jretools/keytool/KeyCertGenerator.java,212,,"                            + "" is not found in the environment."").initCause(e);"
108834,./TargetProjects/harmony/jdktools/modules/jretools/src/main/java/org/apache/harmony/jretools/policytool/control/PolicyFileHandler.java,73,,"            JOptionPane.showMessageDialog( dialogParentComponent, ""The file does not exist!"", ""Error"", JOptionPane.ERROR_MESSAGE );"
108835,./TargetProjects/harmony/jdktools/modules/jretools/src/main/java/org/apache/harmony/jretools/policytool/control/PolicyTextParser.java,158,,"                throw new InvalidPolicyTextException( ""Was expecting semicolon but found something else!"" );"
108836,./TargetProjects/harmony-classlib/modules/accessibility/src/test/api/java/common/javax/accessibility/AccessibleRelationTest.java,62,,"                AccessibleRelation.LABEL_FOR, new String(""test""));"
108837,./TargetProjects/harmony-classlib/modules/annotation/src/test/java/org/apache/harmony/annotation/tests/java/lang/annotation/AnnotationFormatErrorTest.java,33,,"        AnnotationFormatError e = new AnnotationFormatError(""some message"");"
108838,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/AttributesTest.java,35,,"        a.putValue(""1"", ""one"");"
108839,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/AttributesTest.java,36,,"        a.putValue(""2"", ""two"");"
108840,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/AttributesTest.java,38,,"        a.putValue(""4"", ""four"");"
108841,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/AttributesTest.java,151,,"        assertNull(""Assert 0: "", atts.put(Attributes.Name.CLASS_PATH, ""tools.jar""));"
108842,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarExecTest.java,46,,"		att.put(Attributes.Name.MANIFEST_VERSION, ""1.0"");"
108843,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarExecTest.java,47,,"		att.put(Attributes.Name.MAIN_CLASS, ""foo.bar.execjartest.Foo"");"
108844,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarExecTest.java,49,,"		File outputJar = File.createTempFile(""hyts_"", "".jar"");"
108845,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarExecTest.java,49,,"		File outputJar = File.createTempFile(""hyts_"", "".jar"");"
108846,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarExecTest.java,64,,"		String[] args = new String[] {""-jar"", outputJar.getAbsolutePath()};"
108847,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarExecTest.java,69,,"		assertTrue(""Error executing JAR : result returned was incorrect."", res"
108848,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarExecTest.java,70,,"				.startsWith(""FOOBAR""));"
108849,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarExecTest.java,93,,"		joutFoo.putNextEntry(new JarEntry(""foo/bar/execjartest/Foo.class""));"
108850,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarExecTest.java,94,,"		joutFoo.write(getResource(resources, ""hyts_Foo.ser""));"
108851,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarExecTest.java,98,,"		joutBar.putNextEntry(new JarEntry(""foo/bar/execjartest/Bar.class""));"
108852,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarExecTest.java,99,,"		joutBar.write(getResource(resources, ""hyts_Bar.ser""));"
108853,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarExecTest.java,199,,"		String booBody = new String(getResource(resources, ""hyts_Foo.ser""), ""iso-8859-1"");"
108854,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarFileTest.java,405,,"            fail(""SecurityException expected"");"
108855,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarInputStreamTest.java,76,,"        Support_Resources.copyFile(resources, null, ""Broken_entry.jar"");"
108856,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarInputStreamTest.java,194,,"                    fail(""Should throw Security Exception"");"
108857,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarOutputStreamTest.java,66,,"			outputJar = File.createTempFile(""hyts_"", "".jar"");"
108858,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/ManifestTest.java,85,,"                MANIFEST_CONTENTS.getBytes(""ISO-8859-1"")));"
108859,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/ZipExecTest.java,43,,"		att.put(Attributes.Name.MANIFEST_VERSION, ""1.0"");"
108860,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/ZipExecTest.java,44,,"		att.put(Attributes.Name.MAIN_CLASS, ""foo.bar.execjartest.Foo"");"
108861,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/ZipExecTest.java,46,,"		File outputZip = File.createTempFile(""hyts_"", "".zip"");"
108862,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/ZipExecTest.java,46,,"		File outputZip = File.createTempFile(""hyts_"", "".zip"");"
108863,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/ZipExecTest.java,56,,"		zout.putNextEntry(new ZipEntry(""META-INF/MANIFEST.MF""));"
108864,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/ZipExecTest.java,62,,"		String[] args = new String[] {""-jar"", outputZip.getAbsolutePath()};"
108865,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/ZipExecTest.java,68,,"				.startsWith(""FOOBAR""));"
108866,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/ZipExecTest.java,93,,"		zoutFoo.putNextEntry(new ZipEntry(""foo/bar/execjartest/Foo.class""));"
108867,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/ZipExecTest.java,94,,"		zoutFoo.write(getResource(resources, ""hyts_Foo.ser""));"
108868,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/ZipExecTest.java,98,,"		zoutBar.putNextEntry(new ZipEntry(""foo/bar/execjartest/Bar.class""));"
108869,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/ZipExecTest.java,99,,"		zoutBar.write(getResource(resources, ""hyts_Bar.ser""));"
108870,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/ZipExecTest.java,107,,"		assertTrue(""Error executing JAR : result returned was incorrect."", res"
108871,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/CheckedInputStreamTest.java,48,,"        InputStream checkInput = Support_Resources.getStream(""hyts_checkInput.txt"");"
108872,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/CheckedOutputStreamTest.java,35,,"			FileOutputStream outFile = new FileOutputStream(""chkOut.txt"");"
108873,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/CheckedOutputStreamTest.java,42,,"			fail(""Unable to find file"");"
108874,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/DeflaterOutputStreamTest.java,196,,"        assertEquals(""Incorrect Byte Returned."", 1, iis.read());"
108875,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/DeflaterOutputStreamTest.java,210,,"            fail(""IOException not thrown"");"
108876,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/DeflaterOutputStreamTest.java,300,,"        assertEquals(""Incorrect Byte Returned (EOF)."", -1, iis.read());"
108877,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/DeflaterOutputStreamTest.java,348,,"            fail(""IndexOutOfBoundsException not thrown"");"
108878,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/DeflaterTest.java,165,,"				fail(""Test "" + i"
108879,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/DeflaterTest.java,644,,"		InputStream inFile = Support_Resources.getStream(""hyts_checkInput.txt"");"
108880,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/DeflaterTest.java,954,,"					+ "" is called in test_"" + desc);"
108881,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/GZIPInputStreamTest.java,60,,"			Support_Resources.copyFile(resources, ""GZIPInputStream"","
108882,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/GZIPInputStreamTest.java,61,,"					""hyts_gInput.txt.gz"");"
108883,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/GZIPInputStreamTest.java,63,,"					+ ""/GZIPInputStream/hyts_gInput.txt.gz"").toURL();"
108884,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/GZIPOutputStreamTest.java,56,,"					""an IO error occured while trying to find the output file or creating GZIP constructor"");"
108885,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/InflaterInputStreamTest.java,85,,"		InputStream infile = Support_Resources.getStream(""hyts_constru(OD).txt"");"
108886,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/InflaterInputStreamTest.java,235,,"        Support_Resources.copyFile(resources, null, ""Broken_manifest.jar"");"
108887,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/InflaterInputStreamTest.java,294,,"		assertEquals(""Incorrect Byte Returned."", 5, iis.read());"
108888,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/InflaterTest.java,82,,"			fail(""Invalid input to be decompressed"");"
108889,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/InflaterTest.java,86,,"					""Final decompressed data does not equal the original data"","
108890,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/InflaterTest.java,158,,"			fail(""Input to inflate is invalid or corrupted - getTotalIn"");"
108891,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/ZipEntryTest.java,86,,"			fail(""IllegalArgumentException not thrown"");"
108892,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/ZipEntryTest.java,134,,"		zentry = new ZipEntry(""test.tst"");"
108893,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/ZipEntryTest.java,145,,"		zentry = zfile.getEntry(""File1.txt"");"
108894,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/ZipEntryTest.java,228,,"		assertTrue(""Set compressed size failed"","
108895,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/ZipFileTest.java,84,,"		return zip.getEntry(""File1.txt"");"
108896,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/ZipFileTest.java,360,,"						tempFileName, ""gabba.zip"");"
108897,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/ZipInputStreamTest.java,47,,"            InputStream is = Support_Resources.getStream(""hyts_ZipFile.zip"");"
108898,./TargetProjects/harmony-classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/ZipOutputStreamTest.java,81,,"        ZipEntry ze = new ZipEntry(""test"");"
108899,./TargetProjects/harmony-classlib/modules/auth/src/main/java/common/javax/security/auth/Subject.java,143,,"    @SuppressWarnings(""unchecked"")"
108900,./TargetProjects/harmony-classlib/modules/auth/src/main/java/common/javax/security/auth/callback/ConfirmationCallback.java,65,,"            throw new IllegalArgumentException(Messages.getString(""auth.16"")); //$NON-NLS-1$"
108901,./TargetProjects/harmony-classlib/modules/auth/src/main/java/common/javax/security/auth/callback/ConfirmationCallback.java,71,,"                    throw new IllegalArgumentException(Messages.getString(""auth.17"")); //$NON-NLS-1$"
108902,./TargetProjects/harmony-classlib/modules/auth/src/main/java/common/javax/security/auth/callback/ConfirmationCallback.java,99,,"            throw new IllegalArgumentException(Messages.getString(""auth.1A"")); //$NON-NLS-1$"
108903,./TargetProjects/harmony-classlib/modules/auth/src/main/java/common/javax/security/auth/kerberos/ServicePermission.java,51,,"            throw new IllegalArgumentException(Messages.getString(""auth.2E"")); //$NON-NLS-1$"
108904,./TargetProjects/harmony-classlib/modules/auth/src/main/java/common/org/apache/harmony/auth/module/SharedStateManager.java,51,,"        if (optionValue != null && optionValue.equals(""true"")) {"
108905,./TargetProjects/harmony-classlib/modules/auth/src/main/java/common/org/apache/harmony/auth/module/SharedStateManager.java,86,,"                        + new FailedLoginException(""Login incorrect"")"
108906,./TargetProjects/harmony-classlib/modules/auth/src/main/java/common/org/apache/harmony/auth/module/SharedStateManager.java,133,,"                .get(""javax.security.auth.login.name"");"
108907,./TargetProjects/harmony-classlib/modules/auth/src/main/java/common/org/apache/harmony/auth/module/SharedStateManager.java,135,,"                .get(""javax.security.auth.login.password"");"
108908,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/AuthPermissionTest.java,37,,"        ap = new AuthPermission(""name"");"
108909,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/PolicyTest.java,206,,"            assertFalse(""Elements: "", c.elements().hasMoreElements());"
108910,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/PolicyTest.java,214,,"            subject.getPrincipals().add(new OtherPrincipal(""duke""));"
108911,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/PolicyTest.java,230,,"            assertEquals(""Permission: "", per, new FilePermission(""/home/duke"","
108912,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/PrivateCredentialPermissionTest.java,59,,"        s_that = ""a.b.Credential a.b.Principal \""duke\"" a.c.Principal \""nuke\"""";"
108913,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/PrivateCredentialPermissionTest.java,60,,"        s_this = ""a.b.Credential a.b.Principal \""duke\"""";"
108914,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/PrivateCredentialPermissionTest.java,61,,"        p_that = new PrivateCredentialPermission(s_that, ""read"");"
108915,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/SubjectTest.java,143,,"        assertFalse(""Read only state"", subject.isReadOnly());"
108916,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/SubjectTest.java,199,,"    @SuppressWarnings(""unchecked"")"
108917,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/SubjectTest.java,204,,"            fail(""No expected NullPointerException"");"
108918,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/SubjectTest.java,280,,"            fail(""No expected AccessControlException"");"
108919,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/SubjectTest.java,370,,"        assertTrue(""Returned subject"", subject == contextSubject);"
108920,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/SubjectTest.java,375,,"        assertNull(""Subject is null"", contextSubject);"
108921,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/SubjectTest.java,381,,"        assertNull(""Combiner for null subject"", context.getDomainCombiner());"
108922,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/SubjectTest.java,625,,"                ""java.lang.Object * \""*\"""", ""read""));"
108923,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/SubjectTest.java,1886,,"                    .addTest(new TestSuite(IteratorInterface.class, ""Interface""));"
108924,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/SubjectTest.java,1887,,"            iterator.addTest(new TestSuite(IteratorReadOnly.class, ""ReadOnly""));"
108925,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/SubjectTest.java,1888,,"            iterator.addTest(new TestSuite(IteratorSecure.class, ""Secure""));"
108926,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/SubjectTest.java,1890,,"            TestSuite set = new TestSuite(""Set"");"
108927,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/SubjectTest.java,1894,,"                            ""UnsupportedNull""));"
108928,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/SubjectTest.java,1896,,"                    ""IneligibleElement""));"
108929,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/SubjectTest.java,1900,,"            TestSuite object = new TestSuite(""Object"");"
108930,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,125,,"        assertEquals(""CN=A"", s);"
108931,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,333,,"        String dn = ""CN=A+ST=CA,O=B,L=C,C=D,OU=E,CN=A+ST=CA,O=B,L=C,C=D,OU=E,CN=Z"";"
108932,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,600,,"        String dn = ""OID.2.16.4.3=B + CN=A"";"
108933,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,761,,"        String dn = ""CN=\\ "";"
108934,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,774,,"        String dn = ""CN=\""  \"""";"
108935,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,798,,"        assertEquals(""cn="", principal.getName(X500Principal.CANONICAL));"
108936,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,846,,"        String dn = ""CN="";"
108937,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,958,,"            fail(""No IllegalArgumentException on improper attribute hex value"");"
108938,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1038,,"            fail(""No IllegalArgumentException on input array with improper length field"");"
108939,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1296,,"        assertEquals(""cn=a"", s);"
108940,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1348,,"        String dn = ""CN=A,CN=\\\""B"";"
108941,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1431,,"        String dn = ""CN=\\\\B"";"
108942,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1470,,"        String dn = ""CN=\""ABCDEF\"""";"
108943,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1499,,"        String dn = ""CN=\""ABCD#EF\"""";"
108944,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1646,,"        String dn = ""CN=\\#XYZ"";"
108945,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1683,,"        String dn = ""CN=A,CN=B\\ "";"
108946,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1761,,"        String dn = ""CN=\\  B"";"
108947,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1813,,"        String dn = ""CN=\""A\\\""B\"""";"
108948,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1828,,"        assertEquals(""CN=A\\\""B"", s);"
108949,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1850,,"        String dn = ""CN=\""A\\\""\"""";"
108950,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1913,,"        String dn = ""CN=A\nB"";"
108951,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1953,,"        list.add(""CN=A,C=B"", ""CN=A,C=B"", ""CN=A, C=B"", ""cn=a,c=b"");"
108952,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1953,,"        list.add(""CN=A,C=B"", ""CN=A,C=B"", ""CN=A, C=B"", ""cn=a,c=b"");"
108953,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1967,,"        list.add(""CN=A+ST=CA"", ""CN=A+ST=CA"", ""CN=A + ST=CA"", ""cn=a+st=ca"");"
108954,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,1967,,"        list.add(""CN=A+ST=CA"", ""CN=A+ST=CA"", ""CN=A + ST=CA"", ""cn=a+st=ca"");"
108955,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2014,,"        list.add(""T=A"", ""2.5.4.12=#130141"", ""OID.2.5.4.12=A"","
108956,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2014,,"        list.add(""T=A"", ""2.5.4.12=#130141"", ""OID.2.5.4.12=A"","
108957,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2016,,"        list.add(""DNQ=A"", ""2.5.4.46=#130141"", ""OID.2.5.4.46=A"","
108958,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2059,,"            list.add(""CN=\\"" + element,"
108959,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2060,,"                    ""CN=\\"" + element, ""CN=\"""" + element"
108960,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2064,,"            list.add(""CN=A\\"" + element + ""B"", ""CN=A\\"""
108961,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2065,,"                    + element + ""B"", ""CN=\""A"" + element"
108962,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2066,,"                    + ""B\"""");"
108963,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2082,,"        list.add(""CN=\\41\\2C"", ""CN=A\\,"", ""CN=\""A,\""""); // 0x41=='A', 0x2C=','"
108964,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2082,,"        list.add(""CN=\\41\\2C"", ""CN=A\\,"", ""CN=\""A,\""""); // 0x41=='A', 0x2C=','"
108965,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2112,,"        list.add(""CN=\\41\\2C+ST=A"", ""CN=A\\,+ST=A"", ""CN=\""A,\"" + ST=A""); // 0x41=='A', 0x2C=','"
108966,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2112,,"        list.add(""CN=\\41\\2C+ST=A"", ""CN=A\\,+ST=A"", ""CN=\""A,\"" + ST=A""); // 0x41=='A', 0x2C=','"
108967,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2122,,"        list.add(""CN=A B"", ""CN=A B"", ""CN=A B"", ""cn=a b"");"
108968,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2127,,"        list.add(""CN=$"", ""CN=$"", ""CN=$"", new byte[] { 0x30, 0x0C, 0x31, 0x0A,"
108969,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2147,,"        list.add(""CN=#0101fF"", ""CN=#0101ff"", ""CN=#0101FF"", ""cn=#0101ff""); // ASN1 Boolean = TRUE"
108970,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2147,,"        list.add(""CN=#0101fF"", ""CN=#0101ff"", ""CN=#0101FF"", ""cn=#0101ff""); // ASN1 Boolean = TRUE"
108971,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2259,,"                        errorMsg.append(""\tparm: '"" + dn + ""'"");"
108972,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2261,,"                        errorMsg.append(""\treturned: '"""
108973,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2262,,"                                + p.getName(X500Principal.RFC2253) + ""'\n"");"
108974,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2420,,"                0x13, 0x01, 0x5A }, ""CN=Z"", ""CN=Z"", ""cn=z"");"
108975,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/javax/security/auth/x500/X500PrincipalTest.java,2420,,"                0x13, 0x01, 0x5A }, ""CN=Z"", ""CN=Z"", ""cn=z"");"
108976,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/internal/SecurityTest.java,188,,"    @SuppressWarnings(""unchecked"")"
108977,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/internal/SecurityTest.java,225,,"            assertFalse(""Set is empty"", set.iterator().hasNext());"
108978,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/internal/SecurityTest.java,237,,"            assertTrue(""Set is not empty"", set.iterator().hasNext());"
108979,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/internal/SecurityTest.java,249,,"                fail(""No expected NoSuchElementException"");"
108980,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/internal/SecurityTest.java,265,,"            assertEquals(""Element"", it.next(), element);"
108981,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/internal/SecurityTest.java,266,,"            assertFalse(""Next element"", it.hasNext());"
108982,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/internal/SecurityTest.java,316,,"                fail(""No expected IllegalStateException"");"
108983,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/internal/SecurityTest.java,594,,"                fail(""No expected AccessControlException"");"
108984,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/internal/SecurityTest.java,694,,"            assertEquals(""Size"", 1, set.size());"
108985,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/internal/SecurityTest.java,710,,"                fail(""No expected NullPointerException"");"
108986,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/internal/SecurityTest.java,749,,"            assertFalse(""Set doesn't contain element"", set.contains(element));"
108987,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/internal/SecurityTest.java,754,,"            assertTrue(""Set contains element"", set.contains(element));"
108988,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/internal/SecurityTest.java,801,,"            assertNotNull(""Iterator"", set.iterator());"
108989,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/internal/SecurityTest.java,858,,"            assertFalse(""Removing elements"", set.removeAll(hash));"
108990,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/callback/ChoiceCallbackTest.java,73,,"            fail(""should be throw IllegalArgumentException"");"
108991,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/callback/ConfirmationCallbackTest.java,155,,"        String[] opt1 = {""START"", """"};"
108992,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/callback/ConfirmationCallbackTest.java,180,,"            cc = new ConfirmationCallback(""prompt"", ConfirmationCallback.INFORMATION, ot[0], dopt[0]);"
108993,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/callback/TextInputCallbackTest.java,40,,"        text = new TextInputCallback(""prompt"");"
108994,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/callback/TextInputCallbackTest.java,42,,"        text = new TextInputCallback(""prompt"", ""defaultText"");"
108995,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/callback/TextInputCallbackTest.java,62,,"            fail(""Prompt and DefaultText should not be null"");"
108996,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/callback/TextOutputCallbackTest.java,40,,"        text = new TextOutputCallback(0, ""message"");"
108997,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/kerberos/DelegationPermissionTest.java,123,,"        DelegationPermission dp1 = new DelegationPermission(""\""AAA\"" \""BBB\"""");"
108998,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/kerberos/KerberosKeyTest.java,63,,"        assertEquals(""DES algorithm"", ""DES"", key.getAlgorithm());"
108999,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/kerberos/KerberosKeyTest.java,179,,"            fail(""No expected IllegalStateException"");"
