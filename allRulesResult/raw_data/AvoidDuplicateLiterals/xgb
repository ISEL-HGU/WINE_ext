157000,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestTimeRangeWriterWithQuery.java,166,,"          + "" FROM "", "" join "" + getDbName()"
157001,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestTimeRangeWriterWithQuery.java,167,,"          + ""c4_hourDimTbl timehourchain1 on testcube.test_time_dim_hour_id  = timehourchain1.id"", null,"
157002,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestTimeRangeWriterWithQuery.java,176,,"      getExpectedQuery(cubeName, ""select sum(testcube.msr2) as `msr2` FROM "", "" join "" + getDbName()"
157003,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestTimeRangeWriterWithQuery.java,182,,"      ""SELECT msr2 FROM testCube where testcube.cityid > 2 and "" + TWO_DAYS_RANGE_TTD + "" and testcube.cityid != 5"";"
157004,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestTimeRangeWriterWithQuery.java,250,,"          + ""c4_hourDimTbl timehourchain2 on testcube.test_time_dim_hour_id2  = timehourchain2.id"", null,"
157005,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestUnionAndJoinCandidates.java,54,,"        getValidUpdatePeriodsKey(""union_join_ctx_fact1"", ""C1""), ""DAILY"","
157006,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestUnionAndJoinCandidates.java,74,,"    String whereCond = "" union_join_ctx_zipcode = 'a' and union_join_ctx_cityid = 'b' and """
157007,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestUnionAndJoinCandidates.java,76,,"    String rewrittenQuery = rewrite(""select "" + colsSelected + "" from basecube where "" + whereCond, conf);"
157008,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestUnionAndJoinCandidates.java,76,,"    String rewrittenQuery = rewrite(""select "" + colsSelected + "" from basecube where "" + whereCond, conf);"
157009,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestUnionAndJoinCandidates.java,77,,"    assertTrue(rewrittenQuery.contains(""UNION ALL""));"
157010,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestUnionAndJoinCandidates.java,208,,"      expectedInnerSelect1 = ""SELECT (basecube.union_join_ctx_cityid) as `alias0`, (cubecityjoinunionctx.name) """
157011,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestUnionQueries.java,71,,"        getValidFactTablesKey(""basecube""), ""testfact"","
157012,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestUnionQueries.java,73,,"    ArrayList<String> storages = Lists.newArrayList(""daily_c6_testfact"", ""monthly_c6_testfact"");"
157013,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestUnionQueries.java,73,,"    ArrayList<String> storages = Lists.newArrayList(""daily_c6_testfact"", ""monthly_c6_testfact"");"
157014,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestUnionQueries.java,202,,"        getValidFactTablesKey(""testcube""), ""testfact"","
157015,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestVirtualFactQueries.java,106,,"      null, ""AND ( dim1 = 10 )"", getWhereForMonthlyDailyAndHourly2months(""virtualcube"","
157016,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/MockClientES.java,60,,"                  new ColumnDescriptor(""col1"", """", new TypeDescriptor(Type.STRING_TYPE), 0)"
157017,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,62,,"        Lists.newArrayList(""col1_alias"", ""col2""),"
157018,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,63,,"        Lists.newArrayList(""col1"", ""col2""),"
157019,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,64,,"        (JsonObject) JSON_PARSER.parse(""{\n"""
157020,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,66,,"          + ""  \""timed_out\"": false,\n"""
157021,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,67,,"          + ""  \""_shards\"": {\n"""
157022,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,68,,"          + ""    \""total\"": 5,\n"""
157023,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,69,,"          + ""    \""successful\"": 5,\n"""
157024,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,70,,"          + ""    \""failed\"": 0\n"""
157025,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,71,,"          + ""  },\n"""
157026,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,72,,"          + ""  \""hits\"": {\n"""
157027,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,73,,"          + ""    \""total\"": 100,\n"""
157028,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,76,,"          + ""      {\n"""
157029,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,77,,"          + ""        \""_index\"": \""index\"",\n"""
157030,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,78,,"          + ""        \""_type\"": \""type\"",\n"""
157031,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,80,,"          + ""        \""_score\"": 1,\n"""
157032,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,81,,"          + ""        \""fields\"": {\n"""
157033,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,82,,"          + ""          \""col1\"": [\n"""
157034,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,84,,"          + ""          ],\n"""
157035,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,85,,"          + ""          \""col2\"": [\n"""
157036,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,87,,"          + ""          ]\n"""
157037,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,88,,"          + ""        }\n"""
157038,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,103,,"          + ""      }\n"""
157039,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,105,,"          + ""  }\n"""
157040,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,131,,"        Lists.newArrayList(""col1"", ""col2"", ""aggr_col""),"
157041,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,153,,"          + ""          {\n"""
157042,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,156,,"          + ""            \""col2\"": {\n"""
157043,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,157,,"          + ""              \""doc_count_error_upper_bound\"": 0,\n"""
157044,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,158,,"          + ""              \""sum_other_doc_count\"": 0,\n"""
157045,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,159,,"          + ""              \""buckets\"": [\n"""
157046,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,160,,"          + ""                {\n"""
157047,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,163,,"          + ""                  \""aggr_col\"": {\n"""
157048,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,165,,"          + ""                  }\n"""
157049,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,173,,"          + ""                }\n"""
157050,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,174,,"          + ""              ]\n"""
157051,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,175,,"          + ""            }\n"""
157052,./TargetProjects/lens/lens-driver-es/src/test/java/org/apache/lens/driver/es/ResultSetTransformationTest.java,204,,"          new ResultRow(Lists.<Object>newArrayList(""g1v1"", ""g2v1"", 1.0)),"
157053,./TargetProjects/lens/lens-driver-hive/src/test/java/org/apache/lens/driver/hive/TestHiveDriver.java,100,,"    System.out.println(""###HADOOP_PATH "" + System.getProperty(""hadoop.bin.path""));"
157054,./TargetProjects/lens/lens-driver-hive/src/test/java/org/apache/lens/driver/hive/TestHiveDriver.java,103,,"    ss = new SessionState(hiveConf, ""testuser"");"
157055,./TargetProjects/lens/lens-driver-hive/src/test/java/org/apache/lens/driver/hive/TestHiveDriver.java,897,,"          put(""table1"", partitions);"
157056,./TargetProjects/lens/lens-driver-hive/src/test/java/org/apache/lens/driver/hive/TestRemoteHiveDriver.java,152,,"    driver.configure(driverConf, ""hive"", ""hive1"");"
157057,./TargetProjects/lens/lens-driver-hive/src/test/java/org/apache/lens/driver/hive/TestRemoteHiveDriver.java,152,,"    driver.configure(driverConf, ""hive"", ""hive1"");"
157058,./TargetProjects/lens/lens-driver-jdbc/src/main/java/org/apache/lens/driver/jdbc/ColumnarSQLRewriter.java,475,,"    String[] keys = factNameAndAlias.split(""\\s+"");"
157059,./TargetProjects/lens/lens-driver-jdbc/src/main/java/org/apache/lens/driver/jdbc/ColumnarSQLRewriter.java,511,,"    if (filterCond.matches(""(.*)"" + factAlias + ""(.*)"")) {"
157060,./TargetProjects/lens/lens-driver-jdbc/src/main/java/org/apache/lens/driver/jdbc/ColumnarSQLRewriter.java,619,,"          .append("" from "").append(tab).append("")"");"
157061,./TargetProjects/lens/lens-driver-jdbc/src/main/java/org/apache/lens/driver/jdbc/ColumnarSQLRewriter.java,659,,"          .replaceAll(""[(,)]"", """");"
157062,./TargetProjects/lens/lens-driver-jdbc/src/main/java/org/apache/lens/driver/jdbc/DruidSQLRewriter.java,78,,"      throw new SemanticException(""Subqueries in from clause is not supported by "" + this + "" Query : "" + this.query);"
157063,./TargetProjects/lens/lens-driver-jdbc/src/main/java/org/apache/lens/driver/jdbc/JDBCDriver.java,574,,"      throw new NullPointerException(""Null driver query for "" + explainCtx.getUserQuery());"
157064,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,144,,"    factColumns.add(new FieldSchema(""item_key"", ""int"", """"));"
157065,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,160,,"    itemdimColumns.add(new FieldSchema(""item_name"", ""string"", """"));"
157066,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,171,,"      createHiveTable(""default"", ""sales_fact"", factColumns);"
157067,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,264,,"      ""select fact.time_key,time_dim.day_of_week,time_dim.day,"""
157068,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,265,,"        + ""case when sum(fact.dollars_sold) = 0 then 0.0 else sum(fact.dollars_sold) end dollars_sold """
157069,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,266,,"        + ""from sales_fact fact "" + ""inner join time_dim time_dim on fact.time_key = time_dim.time_key """
157070,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,266,,"        + ""from sales_fact fact "" + ""inner join time_dim time_dim on fact.time_key = time_dim.time_key """
157071,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,267,,"        + ""inner join location_dim location_dim on fact.location_key = location_dim.location_key """
157072,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,268,,"        + ""and location_dim.location_name = 'test123' """
157073,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,269,,"        + ""where time_dim.time_key between '2013-01-01' and '2013-01-31' """
157074,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,270,,"        + ""group by fact.time_key,time_dim.day_of_week,time_dim.day "" + ""order by dollars_sold desc "";"
157075,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,270,,"        + ""group by fact.time_key,time_dim.day_of_week,time_dim.day "" + ""order by dollars_sold desc "";"
157076,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,321,,"        + ""case when sum(fact.dollars_sold) = 0 then 0.0 else sum(fact.dollars_sold) end dollars_sold, """
157077,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,322,,"        + ""sum(fact.units_sold),avg(fact.dollars_sold),min(fact.dollars_sold),max(fact.dollars_sold)"""
157078,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,349,,"      ""select fact.time_key,time_dim.day_of_week,time_dim.day,item_dim.item_key, """
157079,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,354,,"        + ""inner join item_dim item_dim on fact.item_key = item_dim.item_key """
157080,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,357,,"        + ""group by fact.time_key,time_dim.day_of_week,time_dim.day,item_dim.item_key "" + ""order by dollars_sold desc "";"
157081,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,381,,"        + ""where time_dim.time_key between '2013-01-01' and '2013-01-31' "" + ""and item_dim.item_name = 'item_1' """
157082,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,418,,"    String expected = ""select ( sales_fact___fact . time_key ), ( time_dim___time_dim . day_of_week ), """
157083,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,518,,"            + ""group by ( sales_fact___fact . time_key ), ( time_dim___time_dim . day_of_week ), """
157084,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,582,,"            + ""(  select time_dim .time_key from time_dim where ( time_dim. time_key ) """
157085,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,602,,"            + ""order by dollars_sold  desc"";"
157086,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,1084,,"    database.setName(""mydb"");"
157087,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,1089,,"      createTable(hconf, ""mydb"", ""mytable"", ""testDB"", ""testTable_1"");"
157088,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,1089,,"      createTable(hconf, ""mydb"", ""mytable"", ""testDB"", ""testTable_1"");"
157089,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,1090,,"      createTable(hconf, ""mydb"", ""mytable_2"", ""testDB"", ""testTable_2"");"
157090,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,1091,,"      createTable(hconf, ""default"", ""mytable_3"", ""testDB"", ""testTable_3"");"
157091,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,1146,,"    database.setName(""examples"");"
157092,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,1192,,"      columnMap.put(""name"", ""name1"");"
157093,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestColumnarSQLRewriter.java,1220,,"        ""Found: "" + HQLParser.getString(rewriter.getWhereAST()));"
157094,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestDruidSQLRewriter.java,95,,"    factColumns.add(new FieldSchema(""item_key"", ""int"", """"));"
157095,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestDruidSQLRewriter.java,100,,"      createHiveTable(""default"", ""sales_fact"", factColumns);"
157096,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestDruidSQLRewriter.java,313,,"    database.setName(""mydb"");"
157097,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestDruidSQLRewriter.java,317,,"    createTable(hconf, ""mydb"", ""mytable"", ""testDB"", ""testTable_1"");"
157098,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestDruidSQLRewriter.java,366,,"    database.setName(""examples"");"
157099,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestJDBCFinal.java,200,,"      assertEquals(col1.getTypeName().toLowerCase(), ""int"");"
157100,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestJdbcDriver.java,328,,"      ""lens.MethodMetricGauge.TestJdbcDriver-""+driverQualifiledName+""-validate-columnar-sql-rewrite"","
157101,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestJdbcDriver.java,336,,"    createTable(""test_metrics"", driver.getEstimateConnection()); // Create table"
157102,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestJdbcDriver.java,643,,"    createTable(""prepare_test"");"
157103,./TargetProjects/lens/lens-driver-jdbc/src/test/java/org/apache/lens/driver/jdbc/TestJdbcDriver.java,680,,"    createTable(""prepare_test3"");"
157104,./TargetProjects/lens/lens-examples/src/main/java/org/apache/lens/examples/PopulateSampleMetastore.java,92,,"    createDimTablePartition(""dim1-local-part.xml"", ""dim_table"", ""local"");"
157105,./TargetProjects/lens/lens-examples/src/main/java/org/apache/lens/examples/PopulateSampleMetastore.java,107,,"      partition.setLocation(""file://"" + System.getProperty(""lens.home"") + ""/"" + partLocation);"
157106,./TargetProjects/lens/lens-examples/src/main/java/org/apache/lens/examples/PopulateSampleMetastore.java,107,,"      partition.setLocation(""file://"" + System.getProperty(""lens.home"") + ""/"" + partLocation);"
157107,./TargetProjects/lens/lens-examples/src/main/java/org/apache/lens/examples/PopulateSampleMetastore.java,111,,"      System.err.println(""Adding partition from:""+ fileName + "" failed"");"
157108,./TargetProjects/lens/lens-examples/src/main/java/org/apache/lens/examples/PopulateSampleMetastore.java,194,,"    createFactPartition(""raw-local-part1.xml"", ""rawfact"", ""local"");"
157109,./TargetProjects/lens/lens-examples/src/main/java/org/apache/lens/examples/SampleMetastore.java,74,,"      System.err.println(""Creating cube from:"" + cubeSpec + "" failed, reason:"" + result.getMessage());"
157110,./TargetProjects/lens/lens-ml-lib/src/main/java/org/apache/lens/ml/algo/spark/BaseSparkAlgo.java,71,,"  @AlgoParam(name = ""partition"", help = ""Partition filter used to create create HCatInputFormats"")"
157111,./TargetProjects/lens/lens-ml-lib/src/main/java/org/apache/lens/ml/impl/LensMLImpl.java,206,,"      log.error(""Error saving model "" + model.getId() + "" reason: "" + io.getMessage(), io);"
157112,./TargetProjects/lens/lens-ml-lib/src/main/java/org/apache/lens/ml/impl/LensMLImpl.java,428,,"      throw new LensException(""Model not found: "" + modelID + "" algorithm="" + algorithm);"
157113,./TargetProjects/lens/lens-ml-lib/src/main/java/org/apache/lens/ml/server/MLServiceResource.java,150,,"  public StringList getParamDescription(@PathParam(""algorithm"") String algorithm) {"
157114,./TargetProjects/lens/lens-ml-lib/src/main/java/org/apache/lens/ml/server/MLServiceResource.java,190,,"  public ModelMetadata getModelMetadata(@PathParam(""algorithm"") String algorithm, @PathParam(""modelID"") String modelID)"
157115,./TargetProjects/lens/lens-ml-lib/src/main/java/org/apache/lens/ml/server/MLServiceResource.java,248,,"    if (isBlank(form.getFirst(""table""))) {"
157116,./TargetProjects/lens/lens-ml-lib/src/main/java/org/apache/lens/rdd/LensRDDClient.java,231,,"      rdd = HiveTableRDD.createHiveTableRDD(sparkContext, HIVE_CONF, ""default"", tempTableName, TEMP_TABLE_PART_COL"
157117,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestAbstractFileFormatter.java,84,,"    testFormatter(conf, ""UTF8"", LensConfConstants.RESULT_SET_PARENT_DIR_DEFAULT, "".csv"", getMockedResultSet());"
157118,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestAbstractFileFormatter.java,84,,"    testFormatter(conf, ""UTF8"", LensConfConstants.RESULT_SET_PARENT_DIR_DEFAULT, "".csv"", getMockedResultSet());"
157119,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestAbstractFileFormatter.java,86,,"    Assert.assertEquals(readFinalOutputFile(new Path(formatter.getFinalOutputPath()), conf, ""UTF-8""),"
157120,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestAbstractFileFormatter.java,132,,"    conf.set(LensConfConstants.QUERY_OUTPUT_CHARSET_ENCODING, ""UTF-16LE"");"
157121,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestCSVSerde.java,69,,"    Assert.assertEquals(""hello"", row.get(0));"
157122,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestCSVSerde.java,70,,"    Assert.assertEquals(""yes, okay"", row.get(1).toString());"
157123,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestCSVSerde.java,72,,"    Assert.assertEquals(""char      "", row.get(3).toString());"
157124,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,78,,"      .write(""\""NULL\"",\""NULL\"",\""NULL\"",\""NULL\"",\""1,2,NULL,4,NULL\"",\""NULL:NULL\"","""
157125,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,130,,"    ((PersistedOutputFormatter) formatter).addRowsFromPersistedPath(new Path(conf.get(""test.partfile.dir"")));"
157126,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,136,,"      ""\""firstcol\"",\""format(secondcol,2)\"",\""thirdcol\"",\""fourthcol\"",\""fifthcol\"",\""sixthcol\"",\""seventhcol\"""");"
157127,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,137,,"    conf.set(LensConfConstants.QUERY_OUTPUT_FOOTER, ""Total rows:5"");"
157128,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,150,,"    testFormatter(conf, ""UTF8"", LensConfConstants.RESULT_SET_PARENT_DIR_DEFAULT, "".csv"", getMockedResultSet());"
157129,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,152,,"    Assert.assertEquals(readFinalOutputFile(new Path(formatter.getFinalOutputPath()), conf, ""UTF-8""),"
157130,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,166,,"    conf.set(LensConfConstants.QUERY_OUTPUT_FILE_EXTN, "".txt"");"
157131,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,168,,"      ""firstcolsecondcolthirdcolfourthcolfifthcolsixthcolseventhcol"");"
157132,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,209,,"      ""firstcolformat(secondcol,2)thirdcolfourthcolfifthcolsixthcolseventhcol"");"
157133,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,232,,"    testFormatter(conf, ""UTF8"", LensConfConstants.RESULT_SET_PARENT_DIR_DEFAULT, "".zip"","
157134,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,336,,"        add(""\""1\"",\""one\"",\""one\"",\""one\"",\""1\"",\""1:one\"",\""1=one\"""");"
157135,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,337,,"        add(""\""2\"",\""two\"",\""two\"",\""two\"",\""1,2\"",\""2:two\"",\""1=one,2=two\"""");"
157136,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,338,,"        add(""\""NULL\"",\""three\"",\""three\"",\""three\"",\""1,2,NULL\"",\""NULL:three\"",\""1=one,2=two,NULL=three\"""");"
157137,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,339,,"        add(""\""4\"",\""NULL\"",\""NULL\"",\""NULL\"",\""1,2,NULL,4\"",\""4:NULL\"",\""1=one,2=two,NULL=three,4=NULL\"""");"
157138,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,341,,"          + ""\""1=one,2=two,NULL=three,4=NULL,5=NULL\"""");"
157139,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,351,,"        add(""1oneoneone            11one1one       "");"
157140,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,352,,"        add(""2twotwotwo            122two1one       2two       "");"
157141,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,353,,"        add(""\\Nthreethreethree          12\\N\\Nthree1one       2two       \\Nthree     "");"
157142,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,354,,"        add(""4\\N\\N\\N12\\N44\\N1one       2two       \\Nthree     4\\N"");"
157143,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,355,,"        add(""\\N\\N\\N\\N12\\N4\\N\\N\\N1one       2two       \\Nthree     4\\N5\\N"");"
157144,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFilePersistentFormatter.java,364,,"        add(""\""firstcol\"",\""secondcol\"",\""thirdcol\"",\""fourthcol\"",\""fifthcol\"",\""sixthcol\"",\""seventhcol\"""");"
157145,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFileSerdeFormatter.java,61,,"    conf.set(LensConfConstants.QUERY_OUTPUT_FILE_EXTN, "".txt"");"
157146,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFileSerdeFormatter.java,63,,"    testFormatter(conf, ""UTF8"", LensConfConstants.RESULT_SET_PARENT_DIR_DEFAULT, "".txt"","
157147,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFileSerdeFormatter.java,68,,"    Assert.assertEquals(readFinalOutputFile(new Path(formatter.getFinalOutputPath()), conf, ""UTF-8""),"
157148,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFileSerdeFormatter.java,146,,"    mapElements.put(1, ""one"");"
157149,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFileSerdeFormatter.java,161,,"    elements.add(""two"");"
157150,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFileSerdeFormatter.java,172,,"    mapElements.put(null, ""three"");"
157151,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFileSerdeFormatter.java,242,,"        add(""\""firstcol\"",\""format(secondcol,2)\"",\""thirdcol\"",\""fourthcol\"",\""fifthcol\"",\""sixthcol\"",\""seventhcol\"""");"
157152,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFileSerdeFormatter.java,250,,"        add(""Total rows:5"");"
157153,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFileSerdeFormatter.java,257,,"    txtRows.add(""firstcolformat(secondcol,2)thirdcolfourthcolfifthcolsixthcolseventhcol"");"
157154,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFileSerdeFormatter.java,269,,"    csvRows.add(""\""firstcol\"",\""secondcol\"",\""thirdcol\"",\""fourthcol\"",\""fifthcol\"",\""sixthcol\"",\""seventhcol\"""");"
157155,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestFileSerdeFormatter.java,284,,"        add(""firstcol\u0001secondcol\u0001thirdcol\u0001fourthcol\u0001fifthcol\u0001sixthcol\u0001seventhcol"");"
157156,./TargetProjects/lens/lens-query-lib/src/test/java/org/apache/lens/lib/query/TestJSONSerde.java,69,,"    Text in = new Text(""{\n"" + ""  \""a\"":\""hello\"",\n"" + ""  \""b\"":\""yes\"",\n"" + ""  \""c\"":1,\n"" + ""  \""d\"":\""char\""\n"""
157157,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/LensServerHelper.java,54,,"    Response response = this.exec(""get"", """", servLens, null, null, MediaType.TEXT_PLAIN_TYPE, MediaType.TEXT_PLAIN);"
157158,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/MetastoreHelper.java,59,,"    MapBuilder query = new MapBuilder(""sessionid"", sessionHandleString);"
157159,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/MetastoreHelper.java,63,,"    response = this.exec(""get"", MetastoreURL.METASTORE_DATABASES_CURRENT_URL, servLens, null, query);"
157160,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/MetastoreHelper.java,126,,"        .exec(""post"", MetastoreURL.METASTORE_DATABASES_URL, servLens, null, query, MediaType.APPLICATION_XML_TYPE, null,"
157161,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/QueryHelper.java,67,,"    formData.add(""sessionid"", sessionHandleString);"
157162,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/QueryHelper.java,68,,"    formData.add(""query"", queryString);"
157163,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/QueryHelper.java,69,,"    formData.add(""operation"", ""EXECUTE"");"
157164,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/QueryHelper.java,71,,"      formData.add(""queryName"", queryName);"
157165,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/QueryHelper.java,74,,"      conf = ""<?xml version=\""1.0\"" encoding=\""UTF-8\"" standalone=\""yes\""?><conf />"";"
157166,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/QueryHelper.java,76,,"    formData.add(""conf"", conf);"
157167,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/QueryHelper.java,78,,"    Response response = this.exec(""post"", QueryURL.QUERY_URL, servLens, null, null, MediaType.MULTIPART_FORM_DATA_TYPE,"
157168,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/QueryHelper.java,174,,"      formData.add(""user"", user);"
157169,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/QueryHelper.java,331,,"    Response response = this.exec(""get"", QueryURL.QUERY_URL + ""/"" + queryHandle.toString() + ""/resultset"", servLens,"
157170,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/QueryHelper.java,550,,"        .exec(""delete"", QueryURL.PREPAREDQUERY_URL + ""/"" + queryPreparedHandle.toString(), servLens, null, query);"
157171,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/QueryHelper.java,551,,"    log.info(""Response : {}"" + response);"
157172,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/QueryHelper.java,580,,"      queryList.put(""fromDate"", fromDate);"
157173,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/QueryHelper.java,583,,"      queryList.put(""toDate"", toDate);"
157174,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/SavedQueryResourceHelper.java,64,,"    MapBuilder query = new MapBuilder(""sessionid"", sessionHandleString, ""start"", start, ""count"", count);"
157175,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/SavedQueryResourceHelper.java,92,,"      response = this.exec(""post"", SAVED_QUERY_BASE_URL, servLens, null, map, inputMediaType,"
157176,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/ScheduleResourceHelper.java,57,,"    MapBuilder map = new MapBuilder(""sessionid"", sessionHandleString);"
157177,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/ScheduleResourceHelper.java,161,,"    Response response = this.exec(""get"", SCHEDULER_JOBS_URL + ""/"" + jobHandle, servLens, null, map, inputMedia,"
157178,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/core/helpers/SessionHelper.java,121,,"    MapBuilder query = new MapBuilder(""sessionid"", sessionHandleString);"
157179,./TargetProjects/lens/lens-regression/src/main/java/org/apache/lens/regression/util/Util.java,463,,"      log.error(""error"", e);"
157180,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/ITMetricsTest.java,101,,"    metricsMap.put(HTTP_REQUESTS_FINISHED, object.getJSONObject(""counters"").getJSONObject("
157181,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/ITMetricsTest.java,102,,"        LensRequestListener.class.getName() + ""."" + HTTP_REQUESTS_FINISHED).getInt(""count""));"
157182,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/ITRestartTests.java,102,,"        LensConfConstants.QUERY_PERSISTENT_RESULT_INDRIVER, ""false"", mailNotify, ""false"","
157183,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/ITSessionTests.java,107,,"      String session = sHelper.openSession(""test"", ""test"", lens.getCurrentDB());"
157184,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/ITStreamingTests.java,84,,"  @BeforeGroups(""large_purge_interval"")"
157185,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/ITStreamingTests.java,102,,"    sHelper.setAndValidateParam(LensConfConstants.QUERY_PERSISTENT_RESULT_INDRIVER, ""false"");"
157186,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITKillQueryTests.java,89,,"    Assert.assertEquals(queryStatus.getStatus(), QueryStatus.Status.RUNNING, ""Query is Not Running"");"
157187,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITKillQueryTests.java,101,,"    String diffUser = ""diff"";"
157188,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITKillQueryTests.java,285,,"    Assert.assertEquals(queryStatus1.getStatus(), QueryStatus.Status.CANCELED, ""Query is Not CANCELED"");"
157189,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITListQueryTest.java,66,,"    qHelper.killQuery(null, ""QUEUED"", ""all"");"
157190,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITListQueryTest.java,105,,"    Assert.assertEquals(lensQuery.getStatus().getStatus(), QueryStatus.Status.SUCCESSFUL, ""Query did not succeed"");"
157191,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITListQueryTest.java,124,,"    Assert.assertTrue(list.contains(queryHandle), ""List by Query Name failed"");"
157192,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITListQueryTest.java,173,,"    Assert.assertTrue(list.contains(queryHandle), ""QueryList by TimeRange is not correct"");"
157193,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITListQueryTest.java,192,,"    String diffUser = ""diff"";"
157194,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITListQueryTest.java,210,,"    Assert.assertTrue(list.contains(queryHandle1), ""List by user failed"");"
157195,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITListQueryTest.java,267,,"    List<QueryHandle> list = qHelper.getQueryHandleList(null, ""SUCCESSFUL"");"
157196,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITListQueryTest.java,268,,"    Assert.assertTrue(list.contains(queryHandle1), ""QueryList by State is not correct"");"
157197,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITListQueryTest.java,316,,"    Assert.assertTrue(list.contains(queryHandle1), ""QueryList by driver is not correct"");"
157198,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITListQueryTest.java,490,,"    Assert.assertTrue(list1.contains(q2), ""List by Query Name, Status,Time Range,User Failed"");"
157199,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITPreparedQueryTests.java,101,,"    Assert.assertNotNull(queryPrepareHandle, ""Query Execute Failed"");"
157200,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITPreparedQueryTests.java,102,,"    logger.info(""PREPARE QUERY HANDLE : "" + queryPrepareHandle);"
157201,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITPreparedQueryTests.java,202,,"    Assert.assertTrue(list.contains(queryPrepareHandle), ""List of All QueryPreparedHandle of a user failed"");"
157202,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITPreparedQueryTests.java,240,,"    String user = ""diff"", pass = ""diff"";"
157203,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITPreparedQueryTests.java,294,,"    Assert.assertTrue(list.contains(queryPrepareHandle1), ""List of All QueryPreparedHandle By timeRange failed"");"
157204,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITPreparedQueryTests.java,463,,"    Assert.assertEquals(size, 2, ""Wrong result"");"
157205,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITPreparedQueryTests.java,496,,"        ""List of all prepared query by user,Time range and query name failed"");"
157206,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITQueryApiTests.java,79,,"    String[][] testData = {{""true"", ""true""}, {""true"", ""false""}, {""false"", ""false""}};"
157207,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITQueryApiTests.java,79,,"    String[][] testData = {{""true"", ""true""}, {""true"", ""false""}, {""false"", ""false""}};"
157208,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITQueryApiTests.java,156,,"    Assert.assertEquals(lensQuery.getStatus().getStatus(), QueryStatus.Status.SUCCESSFUL, ""Query did not succeed"");"
157209,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITQueryApiTests.java,226,,"    Assert.assertEquals(result.getNumRows().intValue(), 2, ""Wrong result"");"
157210,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITQueryApiTests.java,253,,"    String resultSetJson = qHelper.getInmemoryResultSetJson(queryHandle, ""0"", ""100"", sessionHandleString);"
157211,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITQueryApiTests.java,292,,"    MapBuilder query = new MapBuilder(""sessionid"", sessionHandleString, ""fromindex"", ""0"", ""fetchsize"", ""100"");"
157212,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITSavedQueryTests.java,79,,"    paramList.add(savedQueryResourceHelper.getParameter(""param"", ParameterDataType.STRING, ""first"","
157213,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITSessionResourceTests.java,96,,"    MapBuilder query = new MapBuilder(""sessionid"", sessionHandle, ""verbose"", ""true"");"
157214,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITSessionResourceTests.java,97,,"    Response response = lens.sendQuery(""get"", SessionURL.SESSION_PARAMS_URL, query);"
157215,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITSessionResourceTests.java,110,,"    String newSessionHandle = sHelper.openSession(""diff"", ""diff"");"
157216,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITSessionResourceTests.java,124,,"    Map<String, String> resource = LensUtil.getHashMap(""sessionid"", sessionHandleString, ""key"", newParamsKey,"
157217,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITSessionResourceTests.java,229,,"    String newSession = sHelper.openSession(""test"", ""test"");"
157218,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/client/ITSessionResourceTests.java,273,,"    Assert.assertEquals(curDB, newDb, ""Could not open session with passed db"");"
157219,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITServerConfigTests.java,105,,"      sessionHandle = sHelper.openSession(""user"", ""pass"");"
157220,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITServerConfigTests.java,105,,"      sessionHandle = sHelper.openSession(""user"", ""pass"");"
157221,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITServerConfigTests.java,106,,"      sHelper.setAndValidateParam(sessionHandle, LensConfConstants.SESSION_CLUSTER_USER, ""test"");"
157222,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITServerConfigTests.java,111,,"      MapBuilder query = new MapBuilder(""sessionid"", sessionHandle, ""key"", LensConfConstants.SESSION_CLUSTER_USER);"
157223,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITServerConfigTests.java,112,,"      Response response = lens.sendQuery(""get"", SessionURL.SESSION_PARAMS_URL, query);"
157224,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITServerConfigTests.java,130,,"    String[][] testData = {{""true""}, {""false""}};"
157225,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITServerConfigTests.java,130,,"    String[][] testData = {{""true""}, {""false""}};"
157226,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITServerConfigTests.java,376,,"      InMemoryQueryResult resultSet = (InMemoryQueryResult) qHelper.getResultSet(statsQuery, ""0"", ""100"");"
157227,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITSessionConfigTests.java,78,,"  @DataProvider(name=""query_provider"")"
157228,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITSessionConfigTests.java,91,,"    sHelper.setAndValidateParam(LensConfConstants.QUERY_PERSISTENT_RESULT_SET, ""false"");"
157229,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITSessionConfigTests.java,96,,"    Assert.assertEquals(lensQuery.getStatus().getStatus(), QueryStatus.Status.SUCCESSFUL, ""Query did not succeed"");"
157230,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITSessionConfigTests.java,105,,"    sHelper.setAndValidateParam(LensConfConstants.QUERY_PERSISTENT_RESULT_SET, ""true"");"
157231,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITSessionConfigTests.java,127,,"    String parentDir = ""file://"" + queryResultParentDirPath;"
157232,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITSessionConfigTests.java,142,,"    String rowCount = Util.runRemoteCommand(""cat "" + queryResultParentDirPath + ""/"" + hdfsoutPath + ""/"""
157233,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITSessionConfigTests.java,180,,"      rowCount = Util.runRemoteCommand(""hadoop fs -cat  "" + parentDir + ""/"" + queryHandle + ""* | gunzip | wc -l"");"
157234,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITSessionConfigTests.java,260,,"    Assert.assertEquals(lensQuery.getStatus().getStatus(), QueryStatus.Status.SUCCESSFUL, ""Query did not succeed!!"");"
157235,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITSessionConfigTests.java,283,,"    Util.runRemoteCommand(""gzip -d "" + queryResultParentDirPath + ""/"" + queryHandle + "".csv.gz"");"
157236,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITSessionConfigTests.java,283,,"    Util.runRemoteCommand(""gzip -d "" + queryResultParentDirPath + ""/"" + queryHandle + "".csv.gz"");"
157237,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/config/ITSessionConfigTests.java,285,,"    String content = Util.runRemoteCommand(""cat "" + queryResultParentDirPath + ""/"" + queryHandle + "".csv"");"
157238,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/sanity/ITSmokeTest.java,63,,"    log.info(""Output : {}"", output);"
157239,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/scheduler/ITMaxScheduledQueryTests.java,85,,"  @Test(groups = ""max_scheduled_job_per_user"")"
157240,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/scheduler/ITMaxScheduledQueryTests.java,89,,"    String session = sHelper.openSession(""max1"", ""pwd"", lens.getCurrentDB());"
157241,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/scheduler/ITMaxScheduledQueryTests.java,90,,"    XJob xJob = scheduleHelper.getXJob(""job-submit"", QueryInventory.QUERY, null, currentDate, endDate,"
157242,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/scheduler/ITScheduleQueryTests.java,173,,"        ""0/20 * * * * ?"");"
157243,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/throttling/ITCostTests.java,88,,"    qHelper.killQuery(null, ""QUEUED"", ""all"");"
157244,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/throttling/ITCostTests.java,88,,"    qHelper.killQuery(null, ""QUEUED"", ""all"");"
157245,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/throttling/ITCostTests.java,89,,"    qHelper.killQuery(null, ""RUNNING"", ""all"");"
157246,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/throttling/ITCostTests.java,101,,"  @Test(enabled = true, groups= ""user-cost-ceiling"")"
157247,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/throttling/ITThrottlingTests.java,98,,"    qHelper.killQuery(null, ""QUEUED"", ""all"");"
157248,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/throttling/ITThrottlingTests.java,98,,"    qHelper.killQuery(null, ""QUEUED"", ""all"");"
157249,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/throttling/ITThrottlingTests.java,99,,"    qHelper.killQuery(null, ""RUNNING"", ""all"");"
157250,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/throttling/ITThrottlingTests.java,170,,"      logger.info(""Running query count : "" + running.size() + ""\t Queued query count : "" + queued.size());"
157251,./TargetProjects/lens/lens-regression/src/test/java/org/apache/lens/regression/throttling/ITThrottlingTests.java,170,,"      logger.info(""Running query count : "" + running.size() + ""\t Queued query count : "" + queued.size());"
157252,./TargetProjects/lens/lens-server-api/src/test/java/org/apache/lens/server/api/driver/hooks/UserBasedQueryHookTest.java,55,,"      {""a,b"", ""b,c"", ""d"", false}, // disallow setting both"
157253,./TargetProjects/lens/lens-server-api/src/test/java/org/apache/lens/server/api/query/save/TestParameterParser.java,39,,"      Sets.newHashSet(""param"")"
157254,./TargetProjects/lens/lens-server-api/src/test/java/org/apache/lens/server/api/query/save/TestParameterResolution.java,80,,"        ""param5"", ""Param5"", new String[]{""true""}, BOOLEAN, SINGLE"
157255,./TargetProjects/lens/lens-server-api/src/test/java/org/apache/lens/server/api/query/save/TestParameterResolution.java,83,,"        ""param6"", ""Param6"", null, BOOLEAN, MULTIPLE"
157256,./TargetProjects/lens/lens-server-api/src/test/java/org/apache/lens/server/api/query/save/TestParameterResolution.java,92,,"    parameterValues.put(""param6"", Lists.newArrayList(""true"", ""false""));"
157257,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/ServerModeFilter.java,43,,"        if (!requestContext.getMethod().equals(""GET"")) {"
157258,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/metastore/CubeMetastoreServiceImpl.java,296,,"        log.info(""Dropped storage "" + s + "" from dimension table "" + dimTblName"
157259,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/metastore/MetastoreResource.java,248,,"  public StringList getAllDatabases(@QueryParam(""sessionid"") LensSessionHandle sessionid) throws LensException {"
157260,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/metastore/MetastoreResource.java,298,,"    @QueryParam(""cascade"") boolean cascade) throws LensException {"
157261,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/metastore/MetastoreResource.java,434,,"    @PathParam(""cubeName"") String cubeName, XCube cube) throws LensException {"
157262,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/metastore/MetastoreResource.java,542,,"    @PathParam(""storage"") String storageName) throws LensException {"
157263,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/metastore/MetastoreResource.java,617,,"    @PathParam(""dimName"") String dimName, XDimension dimension) throws LensException {"
157264,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/metastore/MetastoreResource.java,769,,"    @PathParam(""factName"") String factName)"
157265,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/metastore/MetastoreResource.java,998,,"  @Path(""/facts/{factName}/storages/{storage}/partitions"")"
157266,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/metastore/MetastoreResource.java,1002,,"    @QueryParam(""filter"") String filter) throws LensException {"
157267,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/metastore/MetastoreResource.java,1188,,"    @PathParam(""dimTableName"") String dimTableName,"
157268,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/metastore/MetastoreResource.java,1328,,"  @Path(""/dimtables/{dimTableName}/storages/{storage}/partitions"")"
157269,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/metrics/MetricsServiceImpl.java,377,,"    totalAcceptedQueries = metricRegistry.counter(MetricRegistry.name(QueryExecutionService.class, ""total-"""
157270,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/LensServerDAO.java,500,,"      log.info(""Inserted query with query "" + ctx.getQueryHandleString() + "" in database."");"
157271,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/LensServerDAO.java,502,,"      log.error(""Failed to insert query "" + ctx.getQueryHandleString() + "" in database with error, "" + e);"
157272,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/QueryExecutionServiceImpl.java,2897,,"      if (""all"".equalsIgnoreCase(userName)) {"
157273,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/QueryServiceResource.java,140,,"  public List<QueryHandle> getAllQueries(@QueryParam(""sessionid"") LensSessionHandle sessionid,"
157274,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/QueryServiceResource.java,141,,"    @QueryParam(""state"") String states, @QueryParam(""queryName"") String queryName, @QueryParam(""user"") String user,"
157275,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/QueryServiceResource.java,141,,"    @QueryParam(""state"") String states, @QueryParam(""queryName"") String queryName, @QueryParam(""user"") String user,"
157276,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/QueryServiceResource.java,142,,"    @QueryParam(""driver"") String driver, @QueryParam(""fromDate"") String fromDate, @QueryParam(""toDate"") String toDate)"
157277,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/QueryServiceResource.java,142,,"    @QueryParam(""driver"") String driver, @QueryParam(""fromDate"") String fromDate, @QueryParam(""toDate"") String toDate)"
157278,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/QueryServiceResource.java,211,,"  @MultiPurposeResource(formParamName = ""operation"")"
157279,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/QueryServiceResource.java,214,,"      @FormDataParam(""conf"") LensConf conf, @DefaultValue(""30000"") @FormDataParam(""timeoutmillis"") Long timeoutmillis,"
157280,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/QueryServiceResource.java,289,,"      return new APIResult(Status.SUCCEEDED, ""Cancel all queries "" + msgString + "" is successful"");"
157281,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/QueryServiceResource.java,293,,"        return new APIResult(Status.FAILED, ""Cancel on the query "" + msgString + "" has failed"");"
157282,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/QueryServiceResource.java,448,,"  @Path(""preparedqueries/{prepareHandle}"")"
157283,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/QueryServiceResource.java,451,,"    @PathParam(""prepareHandle"") String prepareHandle) throws LensException {"
157284,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/QueryServiceResource.java,475,,"      return new APIResult(Status.FAILED, ""Destroy on the query "" + prepareHandle + "" failed"");"
157285,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/QueryServiceResource.java,490,,"    @PathParam(""queryHandle"") String queryHandle) throws LensException {"
157286,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/QueryServiceResource.java,536,,"      return new APIResult(Status.SUCCEEDED, ""Update on the query conf for "" + queryHandle + "" is successful"");"
157287,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/save/SavedQueryDao.java,134,,"          + NAME_COL_NAME + "" = '"" + ecmaEscaped.getName() + ""',"""
157288,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/save/SavedQueryDao.java,316,,"        + NAME_COL_NAME + "" varchar(255), """
157289,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/save/SavedQueryResource.java,107,,"    @QueryParam(""sessionid"") LensSessionHandle sessionid,"
157290,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/query/save/SavedQueryResource.java,124,,"  @Path(""/savedqueries/{id}"")"
157291,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/scheduler/ScheduleResource.java,77,,"  public LensAPIResult<SchedulerJobHandle> submitJob(@QueryParam(""sessionid"") LensSessionHandle sessionId,"
157292,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/scheduler/ScheduleResource.java,151,,"    @PathParam(""jobHandle"") SchedulerJobHandle jobHandle) throws LensException {"
157293,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/scheduler/SchedulerDAO.java,410,,"      String fetchSQL = ""SELECT * FROM "" + JOB_TABLE + "" WHERE "" + COLUMN_ID + ""=?"";"
157294,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/scheduler/SchedulerDAO.java,410,,"      String fetchSQL = ""SELECT * FROM "" + JOB_TABLE + "" WHERE "" + COLUMN_ID + ""=?"";"
157295,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/scheduler/SchedulerDAO.java,435,,"      String fetchSQL = ""SELECT "" + COLUMN_JOB + "" FROM "" + JOB_TABLE + "" WHERE "" + COLUMN_ID + ""=?"";"
157296,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/scheduler/SchedulerDAO.java,435,,"      String fetchSQL = ""SELECT "" + COLUMN_JOB + "" FROM "" + JOB_TABLE + "" WHERE "" + COLUMN_ID + ""=?"";"
157297,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/scheduler/SchedulerDAO.java,493,,"        whereClause += ((whereClause.isEmpty()) ? "" WHERE "" : "" AND "") + COLUMN_USER + "" = '"" + username + ""'"";"
157298,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/scheduler/SchedulerDAO.java,532,,"        ""UPDATE "" + JOB_TABLE + "" SET "" + COLUMN_JOB + ""=?, "" + COLUMN_MODIFIED_ON + ""=? "" + "" WHERE "" + COLUMN_ID"
157299,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/scheduler/SchedulerDAO.java,681,,"        ""CREATE TABLE IF NOT EXISTS "" + JOB_TABLE + ""( "" + COLUMN_ID + "" VARCHAR(255) NOT NULL,"" + COLUMN_JOB + "" TEXT,"""
157300,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/scheduler/SchedulerDAO.java,682,,"          + COLUMN_USER + "" VARCHAR(255),"" + COLUMN_STATUS + "" VARCHAR(20),"" + COLUMN_CREATED_ON + "" BIGINT, """
157301,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/scheduler/SchedulerDAO.java,683,,"          + COLUMN_MODIFIED_ON + "" BIGINT, "" + COLUMN_JOB_NAME + "" VARCHAR(255), "" + "" PRIMARY KEY ( "" + COLUMN_ID + "")"""
157302,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/scheduler/SchedulerDAO.java,683,,"          + COLUMN_MODIFIED_ON + "" BIGINT, "" + COLUMN_JOB_NAME + "" VARCHAR(255), "" + "" PRIMARY KEY ( "" + COLUMN_ID + "")"""
157303,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/scheduler/SchedulerDAO.java,694,,"        ""CREATE TABLE IF NOT EXISTS "" + JOB_INSTANCE_TABLE + ""( "" + COLUMN_ID + "" VARCHAR(255) NOT NULL, """
157304,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/session/SessionResource.java,156,,"  public APIResult closeSession(@QueryParam(""sessionid"") LensSessionHandle sessionid) {"
157305,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/session/SessionResource.java,192,,"        if (matchedPath.startsWith(""file:"") && !matchedPath.startsWith(""file://"")) {"
157306,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/session/SessionResource.java,192,,"        if (matchedPath.startsWith(""file:"") && !matchedPath.startsWith(""file://"")) {"
157307,./TargetProjects/lens/lens-server/src/main/java/org/apache/lens/server/stats/event/query/QueryExecutionStatistics.java,134,,"    colList.add(new FieldSchema(""handle"", ""string"", ""Query Handle""));"
157308,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/LensServerTestUtil.java,89,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""sessionid"").build(), lensSessionId,"
157309,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/LensServerTestUtil.java,93,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""conf"").fileName(""conf"").build(), conf,"
157310,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/TestServerMode.java,154,,"      APIResult result = dbTarget.queryParam(""sessionid"", lensSessionId).request(MediaType.APPLICATION_XML_TYPE)"
157311,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/TestServerRestart.java,157,,"    LensSessionHandle lensSessionId = queryService.openSession(""foo"", ""bar"", new HashMap<String, String>());"
157312,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/TestServerRestart.java,157,,"    LensSessionHandle lensSessionId = queryService.openSession(""foo"", ""bar"", new HashMap<String, String>());"
157313,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/TestServerRestart.java,403,,"    mp1.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""sessionid"").build(), restartTestSession,"
157314,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/common/RestAPITestUtil.java,112,,"    return target.path(""queryapi/queries"").request(mt).post("
157315,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/common/RestAPITestUtil.java,133,,"    return target.path(""session"").queryParam(""sessionid"", sessionId).request(mt).delete(APIResult.class);"
157316,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/common/RestAPITestUtil.java,137,,"    WebTarget dbTarget = target.path(""metastore"").path(""databases/current"");"
157317,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,93,,"    lensSessionId = metastoreService.openSession(""foo"", ""bar"", new HashMap<String, String>());"
157318,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,93,,"    lensSessionId = metastoreService.openSession(""foo"", ""bar"", new HashMap<String, String>());"
157319,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,113,,"  @Test(dataProvider = ""mediaTypeData"")"
157320,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,118,,"      WebTarget dbTarget = target().path(""metastore"").path(""databases/current"");"
157321,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,120,,"        dbTarget.queryParam(""sessionid"", lensSessionId).request(mediaType).put(getEntityForString(dbName, mediaType),"
157322,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,128,,"      APIResult result = target().path(""metastore"").path(""databases"")"
157323,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,189,,"      .queryParam(""cascade"", ""true"")"
157324,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,189,,"      .queryParam(""cascade"", ""true"")"
157325,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,234,,"    WebTarget target = target().path(""metastore"").path(""storages"");"
157326,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,241,,"    prop.setName(""prop1.name"");"
157327,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,296,,"    xd1.setName(""dim1"");"
157328,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,297,,"    xd1.setType(""STRING"");"
157329,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,306,,"    xd2.setType(""INT"");"
157330,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,313,,"    xd3.setName(""testdim2col2"");"
157331,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,318,,"    xcc.setChainName(""chain1"");"
157332,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,319,,"    xcc.setRefCol(""col2"");"
157333,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,336,,"    xm1.setName(""msr1"");"
157334,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,343,,"    xm1.setDefaultAggr(""sum"");"
157335,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,359,,"    xj1.setDescription(""first chain"");"
157336,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,360,,"    xj1.setDisplayString(""Chain-1"");"
157337,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,366,,"    link1.setColumn(""col1"");"
157338,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,368,,"    link2.setTable(""testdim"");"
157339,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,391,,"    link4.setTable(""testdim2"");"
157340,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,400,,"    xe1.setName(""expr1"");"
157341,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,409,,"    xe2.setName(""expr2"");"
157342,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,479,,"      final XCube cube = createTestCube(""testCube1"");"
157343,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,480,,"      final WebTarget target = target().path(""metastore"").path(""cubes"");"
157344,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,496,,"      StringList cubes = target().path(""metastore/cubes"").queryParam(""sessionid"", lensSessionId).request(mediaType)"
157345,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,500,,"      XCube dcube = createDerivedCube(""testderived"", ""testCube1"", true);"
157346,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,524,,"        .queryParam(""type"", ""base"").request(mediaType).get(StringList.class);"
157347,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,587,,"      final XBaseCube cube = createTestCube(""testGetCube"");"
157348,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,637,,"      assertEquals(testdim2col2.getType(), ""string"");"
157349,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,713,,"    final String DB = dbPFX + ""test_drop_cube"" + mediaType.getSubtype();"
157350,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,748,,"        log.error(""Resource not found."", ex);"
157351,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,791,,"      xm2.setName(""msr3"");"
157352,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,797,,"      xd2.setName(""dim3"");"
157353,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,826,,"      XDerivedCube dcube = createDerivedCube(""test_update_derived"", cubeName, true);"
157354,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,888,,"      createStorage(""store1"", mediaType);"
157355,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1034,,"    p1.setName(""foodim"");"
157356,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1049,,"    dt.getStorageTables().getStorageTable().add(createStorageTblElement(""test"", dimTableName, ""HOURLY""));"
157357,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1049,,"    dt.getStorageTables().getStorageTable().add(createStorageTblElement(""test"", dimTableName, ""HOURLY""));"
157358,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1052,,"      .path(""dimtables"").queryParam(""sessionid"", lensSessionId)"
157359,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1097,,"    xe1.setName(""dimexpr"");"
157360,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1107,,"    xp1.setName(""dimension.foo"");"
157361,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1118,,"    xd3.setName(""col3"");"
157362,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1120,,"    xd3.setDescription(""inline column"");"
157363,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1127,,"    xd4.setName(""col4"");"
157364,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1149,,"    hd3.setDescription(""ref column"");"
157365,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1160,,"    xd5.setName(""col5"");"
157366,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1380,,"        target().path(""metastore/dimtables"").path(table)"
157367,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1551,,"    createStorage(""test2"", mediaType);"
157368,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1552,,"    createStorage(""test3"", mediaType);"
157369,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1556,,"      XStorageTableElement sTbl = createStorageTblElement(""test2"", table, ""DAILY"");"
157370,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1583,,"      result = target().path(""metastore/dimtables/"").path(table).path(""storages"").path(""test"")"
157371,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1675,,"    return createSegmentation(segName, ""testCube"");"
157372,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1731,,"              .path(""segmentations"").queryParam(""sessionid"", lensSessionId)"
157373,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1811,,"        fail(""Expected 404"");"
157374,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1896,,"      APIResult result = target().path(""metastore"").path(""facts"").queryParam(""sessionid"", lensSessionId)"
157375,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1902,,"      StringList factNames = target().path(""metastore/facts"").queryParam(""sessionid"", lensSessionId).request(mediaType)"
157376,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1954,,"      APIResult partAddResult = target().path(""metastore/facts/"").path(table).path(""storages/S1/partition"")"
157377,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1975,,"        .path(""storages/S1/partitions"").queryParam(""sessionid"", lensSessionId)"
157378,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1976,,"        .queryParam(""filter"", ""dt='"" + HOURLY.format(partDate) + ""'"")"
157379,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,1976,,"        .queryParam(""filter"", ""dt='"" + HOURLY.format(partDate) + ""'"")"
157380,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,2251,,"    createStorage(""VS1"", mediaType);"
157381,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,2252,,"    createStorage(""VS2"", mediaType);"
157382,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,2698,,"      Response response = target().path(""metastore/facts/"").path(table).path(""storages/S2/partitions"")"
157383,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,2748,,"      Response resp = target().path(""metastore/facts/"").path(table).path(""storages/S2/partition"")"
157384,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,2985,,"      Response resp = target().path(""metastore/dimtables/"").path(table).path(""storages/test/partition"")"
157385,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,3015,,"        .path(""storages/test/partitions"")"
157386,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,3206,,"        .queryParam(""dbOption"", ""current"").request(mediaType).get(StringList.class);"
157387,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,3206,,"        .queryParam(""dbOption"", ""current"").request(mediaType).get(StringList.class);"
157388,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metastore/TestMetastoreService.java,3218,,"        .queryParam(""dbName"", DB).request(mediaType).get(StringList.class);"
157389,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metrics/TestResourceMethodMetrics.java,148,,"    WebTarget dbTarget = target().path(""metastore"").path(""databases/blah"");"
157390,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/metrics/TestResourceMethodMetrics.java,150,,"      dbTarget.queryParam(""sessionid"", lensSessionId).request(mediaType).get(APIResult.class);"
157391,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/QueryAPIErrorResponseTest.java,104,,"  @Test(dataProvider = ""mediaTypeData"")"
157392,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/QueryAPIErrorResponseTest.java,120,,"    LensSessionHandle sessionId = openSession(target(), ""foo"", ""bar"", new LensConf(), mt);"
157393,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/QueryAPIErrorResponseTest.java,120,,"    LensSessionHandle sessionId = openSession(target(), ""foo"", ""bar"", new LensConf(), mt);"
157394,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestLensDAO.java,88,,"    QueryContext queryContext = service.createContext(userQuery, ""foo@localhost"", new LensConf(),"
157395,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryEndEmailNotifier.java,98,,"    sessionconf.put(LensConfConstants.QUERY_MAIL_NOTIFY, ""true"");"
157396,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryIndependenceFromSessionClose.java,227,,"      Optional.of(sessionHandle), Optional.of(""select * from "" + TEST_TABLE), Optional.of(conf), mt);"
157397,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,150,,"    sessionconf.put(""test.session.key"", ""svalue"");"
157398,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,150,,"    sessionconf.put(""test.session.key"", ""svalue"");"
157399,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,152,,"    lensSessionId = queryService.openSession(""foo@localhost"", ""bar"", sessionconf);"
157400,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,251,,"  @Test(dataProvider = ""mediaTypeData"")"
157401,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,253,,"    final WebTarget target = target().path(""queryapi/queries"");"
157402,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,255,,"    Response rs = target.path(""random"").queryParam(""sessionid"", lensSessionId).request(mt).get();"
157403,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,283,,"      new FormDataBodyPart(FormDataContentDisposition.name(""query"").build(), ""select ID from non_exist_table""));"
157404,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,284,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""operation"").build(), ""execute""));"
157405,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,284,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""operation"").build(), ""execute""));"
157406,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,285,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""conf"").fileName(""conf"").build(), conf, mt));"
157407,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,364,,"    QueryHandle theHandle = executeAndGetHandle(target(), Optional.of(lensSessionId), Optional.of(""select ID from """
157408,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,434,,"    conf.addProperty(""my.property"", ""myvalue"");"
157409,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,434,,"    conf.addProperty(""my.property"", ""myvalue"");"
157410,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,471,,"    final WebTarget ptarget = target().path(""queryapi/preparedqueries"");"
157411,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,583,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""queryName"").build(), ""testQuery1""));"
157412,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,741,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""query"").build(), ""select ID, IDSTR from """
157413,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,796,,"    validatePersistedResult(handle, target(), lensSessionId, new String[][]{{""ID"", ""INT""}, {""IDSTR"", ""STRING""}}, true,"
157414,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,796,,"    validatePersistedResult(handle, target(), lensSessionId, new String[][]{{""ID"", ""INT""}, {""IDSTR"", ""STRING""}}, true,"
157415,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,796,,"    validatePersistedResult(handle, target(), lensSessionId, new String[][]{{""ID"", ""INT""}, {""IDSTR"", ""STRING""}}, true,"
157416,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,829,,"    conf.addProperty(LensConfConstants.QUERY_PERSISTENT_RESULT_SET, ""true"");"
157417,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,832,,"    conf.addProperty(""deferPersistenceByMillis"", 5000); // defer persistence for 5 secs"
157418,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,876,,"    String presultset = target.path(handle.toString()).path(""resultset"").queryParam(""sessionid"", lensSessionId)"
157419,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,1098,,"    conf.addProperty(LensConfConstants.QUERY_PERSISTENT_RESULT_INDRIVER, ""false"");"
157420,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,1292,,"      assertEquals(resultSet.replaceAll(""\\W"", """"), expectedJsonResult().replaceAll(""\\W"", """"));"
157421,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,1350,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""operation"").build(), ""execute_with_timeout""));"
157422,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,1352,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""timeoutmillis"").build(), ""300000""));"
157423,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,1352,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""timeoutmillis"").build(), ""300000""));"
157424,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,1591,,"    assertNotNull(conf.get(""lens.query.enable.persistent.resultset""));"
157425,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,1671,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""operation"").build(), ""estimate""));"
157426,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestQueryService.java,1846,,"      ""lens.MethodMetricGauge."" + gaugeKey + ""-DRIVER_SELECTION"","
157427,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestResultFormatting.java,128,,"  @Test(dataProvider = ""mediaTypeData"")"
157428,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestResultFormatting.java,135,,"    queryService.conf.set(LensConfConstants.RESULT_FS_READ_URL, ""filereadurl://"");"
157429,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/TestResultFormatting.java,151,,"    conf.addProperty(LensConfConstants.QUERY_PERSISTENT_RESULT_INDRIVER, ""true"");"
157430,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/retry/QueryRetryTest.java,102,,"    QueryHandle handle = getQueryService().executeAsync(session, ""select 1"","
157431,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/retry/QueryRetryTest.java,103,,"      getLensConf(""driver.retry/single_failure.cost"", ""1"", ""driver.retry/double_failure.cost"", ""2""),"
157432,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/retry/QueryRetryTest.java,104,,"      ""random query"");"
157433,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/retry/QueryRetryTest.java,133,,"    assertEquals(attempt1.getDriverName(), ""retry/double_failure"");"
157434,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/save/TestSavedQueryService.java,140,,"      .path(String.valueOf(id)).queryParam(""sessionid"", lensSessionId)"
157435,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/query/save/TestSavedQueryService.java,144,,"    savedquery.getStringHeaders().putSingle(HttpHeaders.CONTENT_TYPE, ""application/json"");"
157436,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/rewrite/TestRewriting.java,216,,"    q2 = ""select name from cube_table"";"
157437,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/rewrite/TestRewriting.java,232,,"      + ""join cube_dim2 on cube_dim.d2id=cube_dim2.id"", lensConf, conf, drivers);"
157438,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/rewrite/TestRewriting.java,317,,"    Assert.assertEquals(cubeQueries.get(1).query, ""select name2 from cube_table2"");"
157439,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/scheduler/SchedulerDAOTest.java,105,,"    SchedulerJobInfo info = new SchedulerJobInfo(jobHandle, job, ""lens"", SchedulerJobState.NEW, currentTime,"
157440,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestDatabaseResourceService.java,87,,"      if (jarFile.endsWith(db + "".jar"")) {"
157441,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionClassLoaders.java,97,,"    LensSessionHandle sessionHandle = sessionService.openSession(""foo"", ""bar"", new HashMap<String, String>());"
157442,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionClassLoaders.java,97,,"    LensSessionHandle sessionHandle = sessionService.openSession(""foo"", ""bar"", new HashMap<String, String>());"
157443,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionClassLoaders.java,101,,"    session.setCurrentDatabase(""default"");"
157444,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionClassLoaders.java,181,,"      Class testClass2 = dbClassLoader.loadClass(""ClassLoaderTestClass2"");"
157445,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionClassLoaders.java,186,,"      Class clz = Class.forName(""ClassLoaderTestClass"", true, Thread.currentThread().getContextClassLoader());"
157446,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionResource.java,130,,"    final WebTarget target = target().path(""session"");"
157447,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionResource.java,132,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""username"").build(), ""foo""));"
157448,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionResource.java,132,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""username"").build(), ""foo""));"
157449,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionResource.java,133,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""password"").build(), ""bar""));"
157450,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionResource.java,133,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""password"").build(), ""bar""));"
157451,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionResource.java,134,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""sessionconf"").fileName(""sessionconf"").build(),"
157452,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionResource.java,144,,"    String result = target.queryParam(""sessionid"", handle).request().delete(String.class);"
157453,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionResource.java,153,,"  @Test(dataProvider = ""mediaTypeData"")"
157454,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionResource.java,170,,"    System.out.println(""Session params:"" + sessionParams.getElements());"
157455,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionResource.java,179,,"    setpart.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""key"").build(), ""hivevar:myvar""));"
157456,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionResource.java,179,,"    setpart.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""key"").build(), ""hivevar:myvar""));"
157457,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/session/TestSessionResource.java,500,,"        LensSessionHandle sessionHandle = sessionService.openSession(""test@localhost"", ""test"","
157458,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/user/TestUserConfigLoader.java,83,,"    Assert.assertEquals(UserConfigLoaderFactory.getUserConfig(""user1""), expected);"
157459,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/util/TestScannedPaths.java,53,,"      sc = new ScannedPaths(fileRegex, ""file"");"
157460,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/util/TestScannedPaths.java,87,,"      jarFile = createNewPath(tempPath + ""jar_order"");"
157461,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/util/TestScannedPaths.java,88,,"      writer = new PrintWriter(jarFile, ""UTF-8"");"
157462,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/util/TestScannedPaths.java,92,,"      sc = new ScannedPaths(fileRegex, ""jar"");"
157463,./TargetProjects/lens/lens-server/src/test/java/org/apache/lens/server/util/TestScannedPaths.java,168,,"    createNewPath(tempPath, dir3, filenameC, ""-duplicate"", jarExtension);"
157464,./TargetProjects/lenya/org.apache.lenya.core.ac/src/main/java/org/apache/lenya/ac/impl/AbstractIPRange.java,158,,"            throw new AccessControlException(""Failed to convert address ["" + address + ""]: "", e);"
157465,./TargetProjects/lenya/org.apache.lenya.core.api/src/main/java/org/apache/lenya/net/InetAddressUtil.java,51,,"            getLogger().debug(""======================================="");"
157466,./TargetProjects/lenya/org.apache.lenya.core.metadata.cocoon/src/main/java/org/apache/lenya/modules/metadata/LenyaMetaDataGenerator.java,219,,"        this.contentHandler.startElement(namespace, ""elements"", ""elements"", attributes);"
157467,./TargetProjects/lenya/org.apache.lenya.core.usecase/src/main/java/org/apache/lenya/cms/cocoon/transformation/UsecaseMenuTransformer.java,194,,"            super.startElement(MENU_NAMESPACE, ""message"", ""message"", new AttributesImpl());"
157468,./TargetProjects/lenya/org.apache.lenya.core.usecase/src/main/java/org/apache/lenya/cms/cocoon/transformation/UsecaseMenuTransformer.java,200,,"                    super.startElement(MENU_NAMESPACE, ""parameter"", ""parameter"","
157469,./TargetProjects/lenya/org.apache.lenya.core.usecase/src/main/java/org/apache/lenya/cms/usecase/AbstractUsecase.java,72,,"            new StateMachine.Transition(""start"", ""preChecked"", EVENT_CHECK_PRECONDITIONS),"
157470,./TargetProjects/lenya/org.apache.lenya.core.usecase/src/main/java/org/apache/lenya/cms/usecase/AbstractUsecase.java,75,,"            new StateMachine.Transition(""nodesLocked"", ""execChecked"",EVENT_CHECK_EXECUTION_CONDITIONS),"
157471,./TargetProjects/lenya/org.apache.lenya.core.usecase/src/main/java/org/apache/lenya/cms/usecase/AbstractUsecase.java,237,,"            addErrorMessage(e.getMessage() + "" - Please consult the logfiles."");"
157472,./TargetProjects/lenya/org.apache.lenya.deprecated/src/test/java/org/apache/lenya/cms/metadata/MetaDataTest.java,71,,"        dc.setValue(""title"", ""This is the title"");"
157473,./TargetProjects/lenya/org.apache.lenya.deprecated/src/test/java/org/apache/lenya/cms/metadata/MetaDataTest.java,100,,"        sourceMeta.setValue(""copy"", ""sourceCopy"");"
157474,./TargetProjects/lenya/org.apache.lenya.deprecated/src/test/java/org/apache/lenya/cms/metadata/MetaDataTest.java,101,,"        sourceMeta.setValue(""ignore"", ""sourceIgnore"");"
157475,./TargetProjects/lenya/org.apache.lenya.deprecated/src/test/java/org/apache/lenya/cms/metadata/MetaDataTest.java,102,,"        sourceMeta.setValue(""delete"", ""sourceDelete"");"
157476,./TargetProjects/lenya/org.apache.lenya.module.blog/src/main/java/org/apache/cocoon/generation/BlogOverviewGenerator.java,174,,"                    STRUCT_ATTR_NAME, ""CDATA"", String.valueOf(structure));"
157477,./TargetProjects/lenya/org.apache.lenya.module.editors/src/main/java/org/apache/lenya/cms/editors/forms/FormsEditor.java,565,,"            return ""<xupdate:modifications xmlns:xupdate=\""http://www.xmldb.org/xupdate\"">"""
157478,./TargetProjects/lenya/org.apache.lenya.module.editors/src/main/java/org/apache/lenya/cms/editors/forms/FormsEditor.java,566,,"                    + xupdateUpdate + ""</xupdate:modifications>"";"
157479,./TargetProjects/lenya/org.apache.lenya.module.linkcheck/src/main/java/org/apache/lenya/cms/cocoon/generation/LinkStatusGenerator.java,519,,"        attributes.addAttribute("""", HREF_ATTR_NAME, HREF_ATTR_NAME, ""CDATA"", uri);"
157480,./TargetProjects/lenya/org.apache.lenya.module.lucene/src/main/java/org/apache/cocoon/components/search/components/impl/ParallelIndexerImpl.java,190,,"                getLogger().error(""Thread "" + getName() + "": opening error"", e);"
157481,./TargetProjects/lenya/org.apache.lenya.module.lucene/src/main/java/org/apache/cocoon/transformation/LuceneIndexTransformer2.java,185,,"    public static final String LUCENE_DOCUMENT_UID_ATTRIBUTE = ""uid"";"
157482,./TargetProjects/lenya/org.apache.lenya.module.notification/src/main/java/org/apache/lenya/inbox/xml/XmlSourceInbox.java,146,,"                    Element bodyTextElement = helper.getFirstChild(bodyElement, ""text"");"
157483,./TargetProjects/lenya/org.apache.lenya.module.notification/src/main/java/org/apache/lenya/inbox/xml/XmlSourceInbox.java,148,,"                    Element[] bodyParamElements = helper.getChildren(bodyElement, ""param"");"
157484,./TargetProjects/lenya/org.apache.lenya.module.sitetree/src/main/java/org/apache/lenya/cms/cocoon/generation/SitetreeFragmentGenerator.java,236,,"            this.attributes.addAttribute("""", ATTR_PUBLICATION, ATTR_PUBLICATION, ""CDATA"", this.site"
157485,./TargetProjects/lenya/org.apache.lenya.module.sitetree/src/main/java/org/apache/lenya/cms/site/tree/DefaultSiteTree.java,409,,"            throw new SiteException(""Node to move: "" + path + "" not found"");"
157486,./TargetProjects/log4j/contribs/SvenReimers/gui/JListView.java,64,,"					       ""Message "", new Throwable());"
157487,./TargetProjects/log4j/contribs/ThomasFenner/code_example2.java,52,,"		ja.setOption(JDBCAppender.USERNAME_OPTION, ""mex_pr_dev60"");"
157488,./TargetProjects/log4j/contribs/VolkerMentzner/Log4jRequestHandler.java,102,,"      out.write(""  <td>\r\n"");"
157489,./TargetProjects/log4j/contribs/VolkerMentzner/Log4jRequestHandler.java,111,,"      out.write(""  </td>\r\n"");"
157490,./TargetProjects/log4j/src/main/java/org/apache/log4j/DailyRollingFileAppender.java,242,,"      LogLog.debug(""Appender [""+name+""] to be rolled every minute."");"
157491,./TargetProjects/log4j/src/main/java/org/apache/log4j/HTMLLayout.java,141,,"    sbuf.append(""</td>"" + Layout.LINE_SEP);"
157492,./TargetProjects/log4j/src/main/java/org/apache/log4j/PropertyConfigurator.java,770,,"      LogLog.debug(""Parsing appender named \"""" + appenderName +""\""."");"
157493,./TargetProjects/log4j/src/main/java/org/apache/log4j/config/PropertySetter.java,153,,"                LogLog.warn(""Failed to set property ["" + key +"
157494,./TargetProjects/log4j/src/main/java/org/apache/log4j/config/PropertySetter.java,154,,"                            ""] to value \"""" + value + ""\"". "", ex);"
157495,./TargetProjects/log4j/src/main/java/org/apache/log4j/config/PropertySetter.java,154,,"                            ""] to value \"""" + value + ""\"". "", ex);"
157496,./TargetProjects/log4j/src/main/java/org/apache/log4j/helpers/OptionConverter.java,354,,"	    LogLog.error(""Could not instantiate class ["" + className + ""]."", e);"
157497,./TargetProjects/log4j/src/main/java/org/apache/log4j/jmx/LoggerDynamicMBean.java,85,,"					   ""java.lang.String"","
157498,./TargetProjects/log4j/src/main/java/org/apache/log4j/net/ZeroConfSupport.java,40,,"            jmDNSClass.getMethod(""create"", null);"
157499,./TargetProjects/log4j/src/main/java/org/apache/log4j/spi/LoggingEvent.java,448,,"    LogLog.warn(""Level deserialization failed, reverting to default."", e);"
157500,./TargetProjects/log4j/src/main/javadoc/org/apache/log4j/xml/examples/XMLSample.java,69,,"    cat.debug(""Message "" + ++i);"
157501,./TargetProjects/log4j/src/main/javadoc/org/apache/log4j/xml/examples/doc-files/XMLSample.java,69,,"    cat.debug(""Message "" + ++i);"
157502,./TargetProjects/log4j/tests/src/java/org/apache/log4j/CategoryTest.java,44,,"    MockCategory category = new MockCategory(""org.example.foo"");"
157503,./TargetProjects/log4j/tests/src/java/org/apache/log4j/EnhancedPatternLayoutTestCase.java,349,,"    MDC.put(""key1"", ""va11"");"
157504,./TargetProjects/log4j/tests/src/java/org/apache/log4j/EnhancedPatternLayoutTestCase.java,350,,"    MDC.put(""key2"", ""va12"");"
157505,./TargetProjects/log4j/tests/src/java/org/apache/log4j/EnhancedPatternLayoutTestCase.java,410,,"    logger.debug(""Message "" + ++i);"
157506,./TargetProjects/log4j/tests/src/java/org/apache/log4j/LevelTest.java,113,,"      assertEquals(""TRACE"", Level.TRACE.toString());"
157507,./TargetProjects/log4j/tests/src/java/org/apache/log4j/LoggerTestCase.java,119,,"    Logger ab = Logger.getLogger(""a.b"");"
157508,./TargetProjects/log4j/tests/src/java/org/apache/log4j/LoggerTestCase.java,141,,"    Logger abc = Logger.getLogger(""a.b.c"");"
157509,./TargetProjects/log4j/tests/src/java/org/apache/log4j/LoggerTestCase.java,346,,"      tracer.trace(""Message 1"");"
157510,./TargetProjects/log4j/tests/src/java/org/apache/log4j/LoggerTestCase.java,347,,"      root.trace(""Discarded Message"");"
157511,./TargetProjects/log4j/tests/src/java/org/apache/log4j/MDCTestCase.java,39,,"    MDC.put(""key"", ""some value"");"
157512,./TargetProjects/log4j/tests/src/java/org/apache/log4j/MinimumTestCase.java,134,,"    ERR.log(Level.FATAL, ""Message "" + i); i++;  //0"
157513,./TargetProjects/log4j/tests/src/java/org/apache/log4j/PatternLayoutTestCase.java,310,,"    logger.trace(""Message "" + ++i);"
157514,./TargetProjects/log4j/tests/src/java/org/apache/log4j/RFATestCase.java,51,,"          logger.debug(""Hello---"" + i);"
157515,./TargetProjects/log4j/tests/src/java/org/apache/log4j/RFATestCase.java,53,,"          logger.debug(""Hello--"" + i);"
157516,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogMF.java,102,,"        LogMF.trace(logger, ""Hello, World"", Math.PI);"
157517,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogMF.java,112,,"        LogMF.trace(logger, ""Hello, {."", Math.PI);"
157518,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogMF.java,122,,"        LogMF.trace(logger, ""Hello, {0}World"", new Object[0]);"
157519,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogMF.java,132,,"        LogMF.trace(logger, ""Hello, {0}"", ""World"");"
157520,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogMF.java,132,,"        LogMF.trace(logger, ""Hello, {0}"", ""World"");"
157521,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogMF.java,143,,"        assertEquals(""Hello, null"", capture.getMessage());"
157522,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogMF.java,154,,"        LogMF.trace(logger, ""Iteration {0}"", val);"
157523,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogMF.java,155,,"        assertEquals(""Iteration 42"", capture.getMessage());"
157524,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogMF.java,203,,"        assertEquals(""Iteration C"", capture.getMessage());"
157525,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogMF.java,215,,"        assertEquals(""Iteration true"", capture.getMessage());"
157526,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogMF.java,250,,"        LogMF.trace(logger, ""{1}, {0}."", ""World"", ""Hello"");"
157527,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogMF.java,250,,"        LogMF.trace(logger, ""{1}, {0}."", ""World"", ""Hello"");"
157528,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogMF.java,251,,"        assertEquals(""Hello, World."", capture.getMessage());"
157529,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogMF.java,260,,"        LogMF.trace(logger, ""{1}{2} {0}."", ""World"", ""Hello"", "","");"
157530,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogMF.java,270,,"        LogMF.trace(logger, ""{1}{2} {0}{3}"", ""World"", ""Hello"", "","", ""."");"
157531,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogMF.java,1067,,"        LogMF.logrb(logger, Level.ERROR, null, ""Iteration0"", Math.PI);"
157532,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,100,,"        LogSF.trace(logger, ""Hello, World"", Math.PI);"
157533,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,110,,"        LogSF.trace(logger, ""Hello, {."", Math.PI);"
157534,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,120,,"        LogSF.trace(logger, ""Hello, {}World"", new Object[0]);"
157535,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,130,,"        LogSF.trace(logger, ""Hello, {}"", ""World"");"
157536,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,130,,"        LogSF.trace(logger, ""Hello, {}"", ""World"");"
157537,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,141,,"        assertEquals(""Hello, null"", capture.getMessage());"
157538,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,151,,"        LogSF.trace(logger, ""Iteration {}"", val);"
157539,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,152,,"        assertEquals(""Iteration 42"", capture.getMessage());"
157540,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,196,,"        assertEquals(""Iteration C"", capture.getMessage());"
157541,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,207,,"        assertEquals(""Iteration true"", capture.getMessage());"
157542,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,218,,"        assertEquals(""Iteration "" + String.valueOf(val), capture.getMessage());"
157543,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,238,,"        LogSF.trace(logger, ""{}, {}."", ""Hello"", ""World"");"
157544,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,238,,"        LogSF.trace(logger, ""{}, {}."", ""Hello"", ""World"");"
157545,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,239,,"        assertEquals(""Hello, World."", capture.getMessage());"
157546,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,249,,"        LogSF.trace(logger, ""{}{} {}."", ""Hello"", "","", ""World"");"
157547,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,259,,"        LogSF.trace(logger, ""{}{} {}{}"", ""Hello"", "","", ""World"", ""."");"
157548,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogSF.java,990,,"        LogSF.logrb(logger, Level.ERROR, null, ""Iteration0"", Math.PI);"
157549,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogXF.java,95,,"        LogXF.entering(logger, ""SomeClass"", ""someMethod"");"
157550,./TargetProjects/log4j/tests/src/java/org/apache/log4j/TestLogXF.java,95,,"        LogXF.entering(logger, ""SomeClass"", ""someMethod"");"
157551,./TargetProjects/log4j/tests/src/java/org/apache/log4j/customLogger/XLoggerTestCase.java,53,,"    logger.trace(""Message "" + ++i);"
157552,./TargetProjects/log4j/tests/src/java/org/apache/log4j/helpers/DateLayoutTest.java,124,,"    layout.setOption(""tImezOne"", ""+05:00"");"
157553,./TargetProjects/log4j/tests/src/java/org/apache/log4j/net/SocketServerTestCase.java,108,,"    socketAppender = new SocketAppender(""localhost"", PORT);"
157554,./TargetProjects/log4j/tests/src/java/org/apache/log4j/net/SocketServerTestCase.java,188,,"    if(!System.getProperty(""java.version"").startsWith(""1.1."")) {"
157555,./TargetProjects/log4j/tests/src/java/org/apache/log4j/net/SocketServerTestCase.java,188,,"    if(!System.getProperty(""java.version"").startsWith(""1.1."")) {"
157556,./TargetProjects/log4j/tests/src/java/org/apache/log4j/net/SocketServerTestCase.java,260,,"    MDC.put(""hostID"", ""client-test6"");"
157557,./TargetProjects/log4j/tests/src/java/org/apache/log4j/net/SocketServerTestCase.java,369,,"    logger.log(XLevel.TRACE, ""Message "" + ++i);"
157558,./TargetProjects/log4j/tests/src/java/org/apache/log4j/net/SyslogAppenderTest.java,66,,"    assertEquals(""user"", appender.getFacility());"
157559,./TargetProjects/log4j/tests/src/java/org/apache/log4j/net/SyslogAppenderTest.java,236,,"    appender.setFacility(""kern"");"
157560,./TargetProjects/log4j/tests/src/java/org/apache/log4j/net/SyslogAppenderTest.java,405,,"      appender.setTag(""testtag"");"
157561,./TargetProjects/log4j/tests/src/java/org/apache/log4j/net/SyslogAppenderTest.java,477,,"      String s = log(false, null, ""greetings"", null, 1)[0];"
157562,./TargetProjects/log4j/tests/src/java/org/apache/log4j/net/SyslogAppenderTest.java,517,,"        assertEquals(""<11>"", s[2]);"
157563,./TargetProjects/log4j/tests/src/java/org/apache/log4j/nt/NTEventLogAppenderTest.java,48,,"    logger.debug( ""Message "" + i++);"
157564,./TargetProjects/log4j/tests/src/java/org/apache/log4j/pattern/NameAbbreviatorTest.java,52,,"    StringBuffer buf = new StringBuffer(""DEBUG - "");"
157565,./TargetProjects/log4j/tests/src/java/org/apache/log4j/pattern/NameAbbreviatorTest.java,54,,"    buf.append(""org.example.foo.bar"");"
157566,./TargetProjects/log4j/tests/src/java/org/apache/log4j/pattern/NameAbbreviatorTest.java,79,,"    assertEquals(""DEBUG - bar"", buf.toString());"
157567,./TargetProjects/log4j/tests/src/java/org/apache/log4j/pattern/NameAbbreviatorTest.java,84,,"    buf.append(""bar"");"
157568,./TargetProjects/log4j/tests/src/java/org/apache/log4j/pattern/NameAbbreviatorTest.java,135,,"    buf.append(""foo.bar"");"
157569,./TargetProjects/log4j/tests/src/java/org/apache/log4j/spi/LoggingEventTest.java,55,,"        root.getClass().getName(), root, Level.INFO, ""Hello, world."", null);"
157570,./TargetProjects/log4j/tests/src/java/org/apache/log4j/spi/ThrowableInformationTest.java,287,,"        Throwable t = new StringThrowable(""Hello, World"");"
157571,./TargetProjects/log4j/tests/src/java/org/apache/log4j/varia/ErrorHandlerTestCase.java,108,,"    logger.debug(""Message "" + ++i);"
157572,./TargetProjects/log4j/tests/src/java/org/apache/log4j/xml/CustomLevelTestCase.java,73,,"    logger.debug(""Message "" + ++i);"
157573,./TargetProjects/log4j/tests/src/java/org/apache/log4j/xml/DOMTestCase.java,157,,"    logger.trace(""Message "" + ++i);"
157574,./TargetProjects/log4j/tests/src/java/org/apache/log4j/xml/XMLLayoutTest.java,198,,"        ""org.apache.log4j.Logger"", logger, Level.INFO, ""Hello, World"", null);"
157575,./TargetProjects/log4j/tests/src/java/org/apache/log4j/xml/XMLLayoutTest.java,225,,"        fail(""Unexpected node type"");"
157576,./TargetProjects/log4j/tests/src/java/org/apache/log4j/xml/XMLLayoutTest.java,455,,"        Logger logger = Logger.getLogger(""com.example.bar"");"
157577,./TargetProjects/log4j/tests/src/java/org/apache/log4j/xml/XMLLayoutTestCase.java,201,,"    logger.trace(""Message "" + ++i);"
157578,./TargetProjects/log4j-extras/src/main/java/org/apache/log4j/extras/XSLTLayout.java,270,,"                    ""CDATA"", event.getLoggerName());"
157579,./TargetProjects/log4j-extras/src/main/java/org/apache/log4j/extras/XSLTLayout.java,282,,"            transformer.startElement(LOG4J_NS, ""event"", ""event"", attrs);"
157580,./TargetProjects/log4j-extras/src/main/java/org/apache/log4j/extras/XSLTLayout.java,288,,"            transformer.startElement(LOG4J_NS, ""message"", ""message"", attrs);"
157581,./TargetProjects/log4j-extras/src/main/java/org/apache/log4j/extras/XSLTLayout.java,300,,"                transformer.startElement(LOG4J_NS, ""NDC"", ""NDC"", attrs);"
157582,./TargetProjects/log4j-extras/src/main/java/org/apache/log4j/extras/XSLTLayout.java,312,,"                    transformer.startElement(LOG4J_NS, ""throwable"","
157583,./TargetProjects/log4j-extras/src/main/java/org/apache/log4j/extras/XSLTLayout.java,338,,"                transformer.startElement(LOG4J_NS, ""locationInfo"","
157584,./TargetProjects/log4j-extras/src/main/java/org/apache/log4j/extras/XSLTLayout.java,364,,"                                ""data"", ""data"", attrs);"
157585,./TargetProjects/log4j-extras/src/main/java/org/apache/log4j/receivers/net/XMLSocketNode.java,70,,"      getLogger().warn(""Unable to construct decoder"", iae);"
157586,./TargetProjects/log4j-extras/src/main/java/org/apache/log4j/rule/InFixToPostFix.java,250,,"      keywords.remove(""PROP."");"
157587,./TargetProjects/log4j-extras/src/main/java/org/apache/log4j/xml/XSLTLayout.java,266,,"                    ""CDATA"", event.getLoggerName());"
157588,./TargetProjects/log4j-extras/src/main/java/org/apache/log4j/xml/XSLTLayout.java,278,,"            transformer.startElement(LOG4J_NS, ""event"", ""event"", attrs);"
157589,./TargetProjects/log4j-extras/src/main/java/org/apache/log4j/xml/XSLTLayout.java,284,,"            transformer.startElement(LOG4J_NS, ""message"", ""message"", attrs);"
157590,./TargetProjects/log4j-extras/src/main/java/org/apache/log4j/xml/XSLTLayout.java,296,,"                transformer.startElement(LOG4J_NS, ""NDC"", ""NDC"", attrs);"
157591,./TargetProjects/log4j-extras/src/main/java/org/apache/log4j/xml/XSLTLayout.java,308,,"                    transformer.startElement(LOG4J_NS, ""throwable"","
157592,./TargetProjects/log4j-extras/src/main/java/org/apache/log4j/xml/XSLTLayout.java,334,,"                transformer.startElement(LOG4J_NS, ""locationInfo"","
157593,./TargetProjects/log4j-extras/src/main/java/org/apache/log4j/xml/XSLTLayout.java,360,,"                                ""data"", ""data"", attrs);"
157594,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/component/plugins/PluginTestCase.java,99,,"        logger.info(""stopping "" + plugin1.getIdentifier() +"
157595,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/component/plugins/PluginTestCase.java,192,,"            (plugin1.isActive() ? ""active"" : ""inactive""));"
157596,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/filter/AndFilterTest.java,44,,"        LoggingEvent event = new LoggingEvent(""org.apache.log4j.Logger"","
157597,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/filter/AndFilterTest.java,46,,"                System.currentTimeMillis(), Level.INFO, ""Hello, World"", null);"
157598,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/filter/AndFilterTest.java,62,,"        filter1.setLevelToMatch(""info"");"
157599,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/filter/LevelMatchFilterTest.java,44,,"        LoggingEvent event = new LoggingEvent(""org.apache.log4j.Logger"","
157600,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/filter/LevelMatchFilterTest.java,46,,"                System.currentTimeMillis(), Level.INFO, ""Hello, World"", null);"
157601,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/filter/LevelRangeFilterTest.java,45,,"        LoggingEvent event = new LoggingEvent(""org.apache.log4j.Logger"","
157602,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/filter/LevelRangeFilterTest.java,47,,"                System.currentTimeMillis(), Level.INFO, ""Hello, World"", null);"
157603,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/filter/LoggerMatchFilterTest.java,45,,"        LoggingEvent event = new LoggingEvent(""org.apache.log4j.Logger"","
157604,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/filter/LoggerMatchFilterTest.java,47,,"                System.currentTimeMillis(), Level.INFO, ""Hello, World"", null);"
157605,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/filter/SimpleFilterTest.java,212,,"    logger.debug(""Message "" + ++i);"
157606,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/filter/StringMatchFilterTest.java,45,,"        LoggingEvent event = new LoggingEvent(""org.apache.log4j.Logger"","
157607,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/filter/StringMatchFilterTest.java,47,,"                System.currentTimeMillis(), Level.INFO, ""Hello, World"", null);"
157608,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/pattern/FormattingInfoTest.java,67,,"      StringBuffer buf = new StringBuffer(""foobar"");"
157609,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rolling/CompositeTriggeringPolicyTest.java,51,,"        Assert.assertFalse(composite.isTriggeringEvent(appender, event, ""file"", 100));"
157610,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rolling/SizeBasedRollingTest.java,63,,"        PatternLayout layout = new PatternLayout(""%m\n"");"
157611,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rolling/SizeBasedRollingTest.java,65,,"        rfa.setName(""ROLLING"");"
157612,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rolling/SizeBasedRollingTest.java,86,,"            logger.debug(""Hello---"" + i);"
157613,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rolling/SizeBasedRollingTest.java,88,,"            logger.debug(""Hello--"" + i);"
157614,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rolling/SizeBasedRollingTest.java,98,,"         ""witness/rolling/sbr-test2.log""));"
157615,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rolling/SizeBasedRollingTest.java,101,,"         ""witness/rolling/sbr-test2.0""));"
157616,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rolling/SizeBasedRollingTest.java,104,,"         ""witness/rolling/sbr-test2.1""));"
157617,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rolling/SizeBasedRollingTest.java,258,,"    rfa.setFile(""target/sizeBased-test5.log"");"
157618,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rolling/SizeBasedRollingTest.java,280,,"    FileOutputStream os0 = new FileOutputStream(""target/sizeBased-test5.0"");"
157619,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rolling/TimeBasedRollingTest.java,101,,"    PatternLayout layout = new PatternLayout(""%c{1} - %m%n"");"
157620,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rolling/TimeBasedRollingTest.java,105,,"    String datePattern = ""yyyy-MM-dd_HH_mm_ss"";"
157621,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rolling/TimeBasedRollingTest.java,124,,"    System.out.println(""Waiting until next second and 100 millis."");"
157622,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rolling/TimeBasedRollingTest.java,126,,"    System.out.println(""Done waiting."");"
157623,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rolling/TimeBasedRollingTest.java,129,,"      logger.debug(""Hello---"" + i);"
157624,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rolling/TimeBasedRollingTest.java,223,,"      filenames[i] = ""target/test3-"" + sdf.format(cal.getTime()) + "".gz"";"
157625,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/AndRuleTest.java,50,,"        stack.push(LevelEqualsRule.getRule(""INFO""));"
157626,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/AndRuleTest.java,78,,"        stack.push(TimestampInequalityRule.getRule("">="", ""2008/05/21 00:44:45""));"
157627,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/AndRuleTest.java,82,,"        LoggingEvent event = new LoggingEvent(""org.apache.log4j.Logger"","
157628,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/AndRuleTest.java,84,,"                ""Hello, World"", null);"
157629,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/EqualsRuleTest.java,82,,"        LoggingEvent event = new LoggingEvent(""org.apache.log4j.Logger"","
157630,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/EqualsRuleTest.java,84,,"                ""Hello, World"", null);"
157631,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/LevelEqualsRuleTest.java,47,,"        LevelEqualsRule rule = (LevelEqualsRule) LevelEqualsRule.getRule(""info"");"
157632,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/LevelEqualsRuleTest.java,48,,"        LoggingEvent event = new LoggingEvent(""org.apache.log4j.Logger"","
157633,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/LevelEqualsRuleTest.java,50,,"                ""Hello, World"", null);"
157634,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/LevelEqualsRuleTest.java,93,,"        LevelEqualsRule rule = (LevelEqualsRule) LevelEqualsRule.getRule(""finer"");"
157635,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/LevelInequalityRuleTest.java,68,,"        LoggingEvent event = new LoggingEvent(""org.apache.log4j.Logger"","
157636,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/LevelInequalityRuleTest.java,70,,"                ""Hello, World"", null);"
157637,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/LevelInequalityRuleTest.java,90,,"        Rule rule = (Rule) LevelInequalityRule.getRule("">="", ""finer"");"
157638,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/NotEqualsRuleTest.java,81,,"        LoggingEvent event = new LoggingEvent(""org.apache.log4j.Logger"","
157639,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/NotEqualsRuleTest.java,83,,"                ""Hello, World"", null);"
157640,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/NotRuleTest.java,75,,"        stack.push(LevelEqualsRule.getRule(""INFO""));"
157641,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/NotRuleTest.java,79,,"        LoggingEvent event = new LoggingEvent(""org.apache.log4j.Logger"","
157642,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/NotRuleTest.java,81,,"                ""Hello, World"", null);"
157643,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/OrRuleTest.java,50,,"        stack.push(LevelEqualsRule.getRule(""INFO""));"
157644,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/OrRuleTest.java,82,,"        LoggingEvent event = new LoggingEvent(""org.apache.log4j.Logger"","
157645,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/OrRuleTest.java,84,,"                ""Hello, World"", null);"
157646,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/PartialTextMatchRuleTest.java,79,,"        LoggingEvent event = new LoggingEvent(""org.apache.log4j.Logger"","
157647,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/PartialTextMatchRuleTest.java,81,,"                ""Hello, World"", null);"
157648,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/TimestampEqualsRuleTest.java,48,,"        TimestampEqualsRule rule = (TimestampEqualsRule) TimestampEqualsRule.getRule(""2008/05/21 00:45:44"");"
157649,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/TimestampEqualsRuleTest.java,50,,"        LoggingEvent event = new LoggingEvent(""org.apache.log4j.Logger"","
157650,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/rule/TimestampEqualsRuleTest.java,52,,"                ""Hello, World"", null);"
157651,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/xml/XSLTLayoutTest.java,105,,"      ""org.apache.log4j.xml.XSLTLayoutTest"", element.getAttribute(""logger""));"
157652,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/xml/XSLTLayoutTest.java,171,,"        ""org.apache.log4j.Logger"", logger, Level.INFO, ""Hello, World"", null);"
157653,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/xml/XSLTLayoutTest.java,350,,"          ""target/temp"", ""target/filtered"","
157654,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/xml/XSLTLayoutTest.java,388,,"        Logger logger = Logger.getLogger(""com.example.bar"");"
157655,./TargetProjects/log4j-extras/src/test/java/org/apache/log4j/xml/XSLTLayoutTestCase.java,181,,"    logger.debug(""Message "" + ++i);"
157656,./TargetProjects/logging-chainsaw/src/main/java/org/apache/log4j/chainsaw/ChainsawToolBarAndMenus.java,183,,"        action.putValue(""enabled"", Boolean.TRUE);"
157657,./TargetProjects/logging-chainsaw/src/main/java/org/apache/log4j/chainsaw/LogFilePatternLayoutBuilder.java,215,,"                if (appenderAttributes.getNamedItem(""name"") != null && appenderClass != null && appenderClass.getNodeValue() != null) {"
157658,./TargetProjects/logging-chainsaw/src/main/java/org/apache/log4j/chainsaw/LogPanel.java,242,,"        logPanelPreferencesFrame.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(escape, ""ESCAPE"");"
157659,./TargetProjects/logging-chainsaw/src/main/java/org/apache/log4j/chainsaw/LogPanel.java,396,,"            ""logTreePanelVisible"","
157660,./TargetProjects/logging-chainsaw/src/main/java/org/apache/log4j/chainsaw/LogPanel.java,568,,"        table.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(""F2""), ""none"");"
157661,./TargetProjects/logging-chainsaw/src/main/java/org/apache/log4j/chainsaw/LogPanel.java,1845,,"        filterText.setToolTipText(""Enter an expression - right click or ctrl-space for menu - press enter to add to list"");"
157662,./TargetProjects/logging-chainsaw/src/main/java/org/apache/log4j/chainsaw/LogPanel.java,1863,,"                                filterText.setBackground(UIManager.getColor(""TextField.background""));"
157663,./TargetProjects/logging-chainsaw/src/main/java/org/apache/log4j/chainsaw/LogUI.java,303,,"        Enumeration appenders = Logger.getLogger(""org.apache"").getAllAppenders();"
157664,./TargetProjects/logging-chainsaw/src/main/java/org/apache/log4j/chainsaw/LogUI.java,316,,"        appenders = Logger.getLogger(""httpclient"").getAllAppenders();"
157665,./TargetProjects/logging-chainsaw/src/main/java/org/apache/log4j/chainsaw/LogUI.java,993,,"                        putValue(""TutorialStarted"", Boolean.TRUE);"
157666,./TargetProjects/logging-chainsaw/src/main/java/org/apache/log4j/chainsaw/LoggerNameTreePanel.java,395,,"            visibilityRuleDelegate.firePropertyChange(""hiddenSet"", null, null);"
157667,./TargetProjects/logging-chainsaw/src/main/java/org/apache/log4j/chainsaw/color/ColorPanel.java,343,,"        backgroundColors.add(""Browse..."");"
157668,./TargetProjects/logging-chainsaw/src/main/java/org/apache/log4j/chainsaw/color/RuleColorizer.java,87,,"        colorChangeSupport.firePropertyChange(""colorrule"", false, true);"
157669,./TargetProjects/logging-chainsaw/src/main/java/org/apache/log4j/chainsaw/vfs/VFSLogFilePatternReceiver.java,271,,"                        int index = oldURL.indexOf(""://"");"
157670,./TargetProjects/logging-chainsaw/src/main/java/org/apache/log4j/chainsaw/vfs/VFSLogFilePatternReceiver.java,343,,"                            reader = new InputStreamReader(fileObject.getContent().getInputStream(), ""UTF-8"");"
157671,./TargetProjects/logging-chainsaw/src/main/java/org/apache/log4j/chainsaw/zeroconf/ZeroConfPlugin.java,473,,"            receiver.setName(name + ""-receiver"");"
157672,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/main/java/org/apache/logging/log4j/audit/AbstractEventLogger.java,144,,"            errors.append(""Event "").append(eventName).append("" is missing required attribute(s) "").append(missingAttributes.toString());"
157673,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/test/java/org/apache/logging/log4j/audit/TransferTest.java,80,,"        ThreadContext.put(""companyId"", ""12345"");"
157674,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/test/java/org/apache/logging/log4j/audit/TransferTest.java,80,,"        ThreadContext.put(""companyId"", ""12345"");"
157675,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/test/java/org/apache/logging/log4j/audit/TransferTest.java,81,,"        ThreadContext.put(""ipAddress"", ""127.0.0.1"");"
157676,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/test/java/org/apache/logging/log4j/audit/TransferTest.java,81,,"        ThreadContext.put(""ipAddress"", ""127.0.0.1"");"
157677,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/test/java/org/apache/logging/log4j/audit/TransferTest.java,82,,"        ThreadContext.put(""environment"", ""dev"");"
157678,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/test/java/org/apache/logging/log4j/audit/TransferTest.java,82,,"        ThreadContext.put(""environment"", ""dev"");"
157679,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/test/java/org/apache/logging/log4j/audit/TransferTest.java,83,,"        ThreadContext.put(""product"", ""TestProduct"");"
157680,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/test/java/org/apache/logging/log4j/audit/TransferTest.java,83,,"        ThreadContext.put(""product"", ""TestProduct"");"
157681,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/test/java/org/apache/logging/log4j/audit/TransferTest.java,84,,"        ThreadContext.put(""timeZone"", ""America/Phoenix"");"
157682,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/test/java/org/apache/logging/log4j/audit/TransferTest.java,84,,"        ThreadContext.put(""timeZone"", ""America/Phoenix"");"
157683,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/test/java/org/apache/logging/log4j/audit/TransferTest.java,85,,"        ThreadContext.put(""loginId"", ""TestUser"");"
157684,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/test/java/org/apache/logging/log4j/audit/TransferTest.java,85,,"        ThreadContext.put(""loginId"", ""TestUser"");"
157685,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/test/java/org/apache/logging/log4j/audit/TransferTest.java,103,,"        ThreadContext.put(""accountNumber"", ""12345"");"
157686,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/test/java/org/apache/logging/log4j/audit/TransferTest.java,105,,"        ThreadContext.put(""userId"", ""JohnDoe"");"
157687,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/test/java/org/apache/logging/log4j/audit/TransferTest.java,105,,"        ThreadContext.put(""userId"", ""JohnDoe"");"
157688,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-api/src/test/java/org/apache/logging/log4j/audit/TransferTest.java,146,,"        assertNotNull(""No messages"", msgs);"
157689,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-war/src/main/java/org/apache/logging/log4j/audit/service/controller/CatalogController.java,128,,"    @ApiImplicitParams( {@ApiImplicitParam(dataType = ""String"", name = ""Authorization"", paramType = ""header"")})"
157690,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-war/src/main/java/org/apache/logging/log4j/audit/service/controller/CatalogController.java,128,,"    @ApiImplicitParams( {@ApiImplicitParam(dataType = ""String"", name = ""Authorization"", paramType = ""header"")})"
157691,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-war/src/main/java/org/apache/logging/log4j/audit/service/controller/CatalogController.java,128,,"    @ApiImplicitParams( {@ApiImplicitParam(dataType = ""String"", name = ""Authorization"", paramType = ""header"")})"
157692,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-war/src/main/java/org/apache/logging/log4j/audit/service/controller/CatalogController.java,129,,"    @ApiOperation(value = ""List catalog Attributes"", notes = ""List catalog attributes for a catalog id"", tags = {""Catalog""})"
157693,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-war/src/main/java/org/apache/logging/log4j/audit/service/controller/CatalogController.java,131,,"    public ResponseEntity<List<Attribute>> getAttributes(@ApiParam(value = ""catalog id"", required = true) @PathVariable String catalogId,"
157694,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-war/src/main/java/org/apache/logging/log4j/audit/service/controller/CatalogController.java,132,,"                                                         @RequestParam(value = ""startIndex"", required = false) Integer startIndex,"
157695,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-war/src/main/java/org/apache/logging/log4j/audit/service/controller/CatalogController.java,133,,"                                                         @RequestParam(value = ""pageSize"", required = false) Integer pageSize,"
157696,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-war/src/main/java/org/apache/logging/log4j/audit/service/controller/CatalogController.java,134,,"                                                         @RequestParam(value = ""sortCol"", required= false) String sortColumn,"
157697,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-war/src/main/java/org/apache/logging/log4j/audit/service/controller/CatalogController.java,135,,"                                                         @RequestParam(value = ""sortDir"", required = false) String sortDirection) {"
157698,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-war/src/main/java/org/apache/logging/log4j/audit/service/controller/CatalogController.java,144,,"                sortColumn = ""name"";"
157699,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-war/src/main/java/org/apache/logging/log4j/audit/service/controller/CatalogController.java,183,,"            throw new IllegalArgumentException(""The default catalog cannot be modified at run time."");"
157700,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-war/src/main/java/org/apache/logging/log4j/audit/service/controller/CatalogController.java,190,,"                    ""An attribute named "" + attribute.getName() + "" in catalog "" + attribute.getCatalogId() + "" already exists"");"
157701,./TargetProjects/logging-log4j-audit/log4j-audit/log4j-audit-war/src/main/java/org/apache/logging/log4j/audit/service/controller/CatalogController.java,190,,"                    ""An attribute named "" + attribute.getName() + "" in catalog "" + attribute.getCatalogId() + "" already exists"");"
157702,./TargetProjects/logging-log4j-audit/log4j-catalog/log4j-catalog-api/src/main/java/org/apache/logging/log4j/catalog/api/Attribute.java,283,,"        sb.append(""id=\"""").append(id).append(""\"" "");"
157703,./TargetProjects/logging-log4j-audit/log4j-catalog/log4j-catalog-editor/src/main/java/org/apache/logging/log4j/catalog/controller/AttributeController.java,103,,"            response.put(""Result"", ""OK"");"
157704,./TargetProjects/logging-log4j-audit/log4j-catalog/log4j-catalog-editor/src/main/java/org/apache/logging/log4j/catalog/controller/AttributeController.java,104,,"            response.put(""Records"", attributes);"
157705,./TargetProjects/logging-log4j-audit/log4j-catalog/log4j-catalog-editor/src/main/java/org/apache/logging/log4j/catalog/controller/AttributeController.java,106,,"            response.put(""Result"", ""FAILURE"");"
157706,./TargetProjects/logging-log4j-audit/log4j-catalog/log4j-catalog-editor/src/main/java/org/apache/logging/log4j/catalog/controller/CategoryController.java,96,,"            response.put(""Result"", ""OK"");"
157707,./TargetProjects/logging-log4j-audit/log4j-catalog/log4j-catalog-editor/src/main/java/org/apache/logging/log4j/catalog/controller/CategoryController.java,99,,"            response.put(""Result"", ""FAILURE"");"
157708,./TargetProjects/logging-log4j-audit/log4j-catalog/log4j-catalog-editor/src/main/java/org/apache/logging/log4j/catalog/controller/EventController.java,99,,"            response.put(""Result"", ""OK"");"
157709,./TargetProjects/logging-log4j-audit/log4j-catalog/log4j-catalog-editor/src/main/java/org/apache/logging/log4j/catalog/controller/EventController.java,100,,"            response.put(""Records"", events);"
157710,./TargetProjects/logging-log4j-audit/log4j-catalog/log4j-catalog-editor/src/main/java/org/apache/logging/log4j/catalog/controller/EventController.java,102,,"            response.put(""Result"", ""FAILURE"");"
157711,./TargetProjects/logging-log4j-audit/log4j-catalog/log4j-catalog-editor/src/main/java/org/apache/logging/log4j/catalog/controller/EventController.java,103,,"            response.put(""Message"", ex.getMessage());"
157712,./TargetProjects/logging-log4j-audit/log4j-catalog/log4j-catalog-editor/src/main/java/org/apache/logging/log4j/catalog/controller/ProductController.java,95,,"            response.put(""Result"", ""OK"");"
157713,./TargetProjects/logging-log4j-audit/log4j-catalog/log4j-catalog-editor/src/main/java/org/apache/logging/log4j/catalog/controller/ProductController.java,98,,"            response.put(""Result"", ""FAILURE"");"
157714,./TargetProjects/logging-log4j2/log4j-1.2-api/src/main/java/org/apache/log4j/Category.java,130,,"    public static Category getInstance(@SuppressWarnings(""rawtypes"") final Class clazz) {"
157715,./TargetProjects/logging-log4j2/log4j-1.2-api/src/main/java/org/apache/log4j/Category.java,390,,"            @SuppressWarnings(""unchecked"")"
157716,./TargetProjects/logging-log4j2/log4j-1.2-api/src/main/java/org/apache/log4j/builders/BuilderManager.java,61,,"                @SuppressWarnings(""unchecked"")"
157717,./TargetProjects/logging-log4j2/log4j-1.2-api/src/main/java/org/apache/log4j/builders/BuilderManager.java,65,,"                LOGGER.warn(""Unable to load plugin: {} due to: {}"", plugin.getKey(), ex.getMessage());"
157718,./TargetProjects/logging-log4j2/log4j-1.2-api/src/test/java/org/apache/log4j/CategoryTest.java,79,,"        final MockCategory category = new MockCategory(""org.example.foo"");"
157719,./TargetProjects/logging-log4j2/log4j-1.2-api/src/test/java/org/apache/log4j/CategoryTest.java,82,,"        category.info(""Hello, World"");"
157720,./TargetProjects/logging-log4j2/log4j-1.2-api/src/test/java/org/apache/log4j/LevelTest.java,118,,"        assertEquals(""TRACE"", Level.TRACE.toString());"
157721,./TargetProjects/logging-log4j2/log4j-1.2-api/src/test/java/org/apache/log4j/LoggerTest.java,121,,"        final Logger loggerAB = Logger.getLogger(""a.b"");"
157722,./TargetProjects/logging-log4j2/log4j-1.2-api/src/test/java/org/apache/log4j/LoggerTest.java,149,,"        final Logger abc = Logger.getLogger(""a.b.c"");"
157723,./TargetProjects/logging-log4j2/log4j-1.2-api/src/test/java/org/apache/log4j/LoggerTest.java,390,,"        final ListAppender appender = new ListAppender(""List"");"
157724,./TargetProjects/logging-log4j2/log4j-1.2-api/src/test/java/org/apache/log4j/LoggerTest.java,399,,"        tracer.trace(""Message 1"");"
157725,./TargetProjects/logging-log4j2/log4j-1.2-api/src/test/java/org/apache/log4j/LoggerTest.java,400,,"        root.trace(""Discarded Message"");"
157726,./TargetProjects/logging-log4j2/log4j-1.2-api/src/test/java/org/apache/log4j/MDCTestCase.java,38,,"        MDC.put(""key"", ""some value"");"
157727,./TargetProjects/logging-log4j2/log4j-1.2-api/src/test/java/org/apache/log4j/PriorityTest.java,92,,"    @SuppressWarnings(""deprecation"")"
157728,./TargetProjects/logging-log4j2/log4j-1.2-api/src/test/java/org/apache/log4j/config/Log4j1ConfigurationFactoryTest.java,150,,"		testRollingFileAppender(""config-1.2/log4j-RollingFileAppender.properties"", ""RFA"", ""target/hadoop.log.%i"");"
157729,./TargetProjects/logging-log4j2/log4j-1.2-api/src/test/java/org/apache/log4j/pattern/Log4j1MdcPatternConverterTest.java,41,,"        contextMap.putValue(""key1"", ""value1"");"
157730,./TargetProjects/logging-log4j2/log4j-1.2-api/src/test/java/org/apache/log4j/pattern/Log4j1MdcPatternConverterTest.java,41,,"        contextMap.putValue(""key1"", ""value1"");"
157731,./TargetProjects/logging-log4j2/log4j-1.2-api/src/test/java/org/apache/log4j/pattern/Log4j1NdcPatternConverterTest.java,42,,"        ThreadContext.push(""foo"");"
157732,./TargetProjects/logging-log4j2/log4j-api/src/main/java/org/apache/logging/log4j/LogManager.java,159,,"            LOGGER.warn(ex.getMessage() + "" Using SimpleLogger"");"
157733,./TargetProjects/logging-log4j2/log4j-api/src/main/java/org/apache/logging/log4j/MarkerManager.java,214,,"        @PerformanceSensitive({""allocation"", ""unrolled""})"
157734,./TargetProjects/logging-log4j2/log4j-api/src/main/java/org/apache/logging/log4j/message/MapMessage.java,159,,"    @SuppressWarnings(""unchecked"")"
157735,./TargetProjects/logging-log4j2/log4j-api/src/main/java/org/apache/logging/log4j/util/SortedArrayStringMap.java,216,,"    @SuppressWarnings(""unchecked"")"
157736,./TargetProjects/logging-log4j2/log4j-api/src/main/java/org/apache/logging/log4j/util/Unbox.java,48,,"@PerformanceSensitive(""allocation"")"
157737,./TargetProjects/logging-log4j2/log4j-api/src/test/java-test/org/apache/logging/log4j/test/ThreadContextTest.java,114,,"        assertNull(ThreadContext.get(""testKey""));"
157738,./TargetProjects/logging-log4j2/log4j-api/src/test/java-test/org/apache/logging/log4j/test/ThreadContextTest.java,115,,"        ThreadContext.put(""testKey"", ""testValue"");"
157739,./TargetProjects/logging-log4j2/log4j-api/src/test/java-test/org/apache/logging/log4j/test/ThreadContextTest.java,126,,"        assertFalse(ThreadContext.containsKey(""key""));"
157740,./TargetProjects/logging-log4j2/log4j-api/src/test/java-test/org/apache/logging/log4j/test/ThreadContextTest.java,153,,"        ThreadContext.put(""testKey1"", ""testValue1"");"
157741,./TargetProjects/logging-log4j2/log4j-api/src/test/java-test/org/apache/logging/log4j/test/ThreadContextTest.java,154,,"        ThreadContext.put(""testKey2"", ""testValue2"");"
157742,./TargetProjects/logging-log4j2/log4j-api/src/test/java-test/org/apache/logging/log4j/test/ThreadContextUtilityClass.java,66,,"        map1.put(""K"", ""val""); // no error"
157743,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/AbstractLoggerTest.java,56,,"    private static final Message simple = new SimpleMessage(""Hello"");"
157744,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/AbstractLoggerTest.java,142,,"        assertEquals(4, logger.getCharSeqCount(), ""log(CharSeq) invocations"");"
157745,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/AbstractLoggerTest.java,143,,"        assertEquals(5, logger.getObjectCount(), ""log(Object) invocations"");"
157746,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/AbstractLoggerTest.java,986,,"            assertEquals(level, currentLevel, ""Incorrect Level. Expected "" + currentLevel + "", actual "" + level);"
157747,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/AbstractLoggerTest.java,989,,"                    fail(""Incorrect marker. Expected "" + currentEvent.markerName + "", actual is null"");"
157748,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/AbstractLoggerTest.java,989,,"                    fail(""Incorrect marker. Expected "" + currentEvent.markerName + "", actual is null"");"
157749,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/AbstractLoggerTest.java,1001,,"                    fail(""Incorrect message. Expected "" + currentEvent.data + "", actual is null"");"
157750,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/AbstractLoggerTest.java,1017,,"                    fail(""Incorrect Throwable. Expected "" + currentEvent.t + "", actual is null"");"
157751,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/CloseableThreadContextTest.java,70,,"        final String oldValue = ""oldValue"";"
157752,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LambdaLoggerTest.java,352,,"        logger2.disable().debug(""abc {}"", supplierArray1);"
157753,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LambdaLoggerTest.java,362,,"        assertEquals(""abc Hi"", event.message.getFormattedMessage());"
157754,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LogManagerTest.java,56,,"        assertNotNull(logger, ""No Logger returned"");"
157755,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LogManagerTest.java,57,,"        assertEquals(LogManagerTest.class.getName(), logger.getName(), ""Incorrect Logger name: "" + logger.getName());"
157756,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LoggerSupplierTest.java,61,,"        assertThat(entry).startsWith(""ENTER[ FLOW ] TRACE Enter"")"
157757,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LoggerSupplierTest.java,94,,"                .contains(""(1234567890)"")"
157758,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LoggerTest.java,81,,"        assertThat(""Incorrect Entry"", results.get(0), equalTo(""ENTER[ FLOW ] TRACE Enter""));"
157759,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LoggerTest.java,81,,"        assertThat(""Incorrect Entry"", results.get(0), equalTo(""ENTER[ FLOW ] TRACE Enter""));"
157760,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LoggerTest.java,82,,"        assertThat(""incorrect Exit"", results.get(1), equalTo(""EXIT[ FLOW ] TRACE Exit""));"
157761,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LoggerTest.java,95,,"        assertThat(""Missing entry data"", results.get(0), containsString(""\""foo\"":\""bar\""""));"
157762,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LoggerTest.java,97,,"        assertThat(""Missing exit data"", results.get(1), containsString(""\""message\"":\""Generic error\""""));"
157763,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LoggerTest.java,102,,"        logger.traceEntry(""doFoo(a={}, b={})"", 1, 2);"
157764,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LoggerTest.java,106,,"        assertThat(""Missing entry data"", results.get(0), containsString(""doFoo(a=1, b=2)""));"
157765,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LoggerTest.java,107,,"        assertThat(""Incorrect Exit"", results.get(1), startsWith(""EXIT[ FLOW ] TRACE Exit""));"
157766,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LoggerTest.java,108,,"        assertThat(""Missing exit data"", results.get(1), containsString(""doFoo(a=1, b=2): 3""));"
157767,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LoggerTest.java,256,,"        testLogger.debug(""%,d"", Integer.MAX_VALUE);"
157768,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LoggerTest.java,258,,"        assertEquals(String.format("" DEBUG %,d"", Integer.MAX_VALUE), testLogger.getEntries().get(0));"
157769,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/LoggerTest.java,459,,"        assertTrue(logger.isEnabled(Level.ALL), ""Incorrect level"");"
157770,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/MarkerTest.java,52,,"        final Marker parent = MarkerManager.getMarker(""PARENT"");"
157771,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/MarkerTest.java,62,,"        final Marker test1 = MarkerManager.getMarker(""TEST1"").setParents(parent);"
157772,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/ThreadContextInheritanceTest.java,52,,"        ThreadContext.push(""Hello"");"
157773,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/ThreadContextInheritanceTest.java,127,,"        assertNull(ThreadContext.get(""testKey""));"
157774,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/TraceLoggingTest.java,221,,"        assertEquals(level, currentLevel, ""Incorrect Level. Expected "" + currentLevel + "", actual "" + level);"
157775,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/TraceLoggingTest.java,269,,"        final ParameterizedMessage paramMsg = new ParameterizedMessage(""Tracy {}"", ""Logan"");"
157776,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/TraceLoggingTest.java,269,,"        final ParameterizedMessage paramMsg = new ParameterizedMessage(""Tracy {}"", ""Logan"");"
157777,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/TraceLoggingTest.java,275,,"        ReusableParameterizedMessageTest.set(msg, ""Some other message {}"", 123);"
157778,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/TraceLoggingTest.java,280,,"        assertEquals(""Tracy Logan"", entry.getMessage().getFormattedMessage());"
157779,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/LocalizedMessageTest.java,43,,"        final LocalizedMessage msg = new LocalizedMessage(""MF"", new Locale(""en"", ""US""), ""msg1"", new Object[] { ""1"", ""Test"" });"
157780,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/LocalizedMessageTest.java,43,,"        final LocalizedMessage msg = new LocalizedMessage(""MF"", new Locale(""en"", ""US""), ""msg1"", new Object[] { ""1"", ""Test"" });"
157781,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/LocalizedMessageTest.java,44,,"        assertEquals(""This is test number 1 with string argument Test."", msg.getFormattedMessage());"
157782,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/MapMessageTest.java,39,,"        final String testMsg = ""Test message {}"";"
157783,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/MapMessageTest.java,41,,"        msg.put(""message"", testMsg);"
157784,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/MapMessageTest.java,42,,"        msg.put(""project"", ""Log4j"");"
157785,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/MapMessageTest.java,42,,"        msg.put(""project"", ""Log4j"");"
157786,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/MapMessageTest.java,65,,"        final String result = msg.getFormattedMessage(new String[]{""XML""});"
157787,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/MapMessageTest.java,89,,"        final String result = msg.getFormattedMessage(new String[]{""JSON""});"
157788,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/MapMessageTest.java,164,,"                .with(""key"", recursiveValue)"
157789,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/MessageFormatMessageTest.java,42,,"        final String testMsg = ""Test message {0}"";"
157790,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/MessageFormatsPerfTest.java,78,,"            final StringFormattedMessage msg = new StringFormattedMessage(testMsg, ""Apache"", ""Log4j"");"
157791,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/MessageFormatsPerfTest.java,78,,"            final StringFormattedMessage msg = new StringFormattedMessage(testMsg, ""Apache"", ""Log4j"");"
157792,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/ParameterFormatterTest.java,48,,"        final String testMsg = ""Test message {}{} {}"";"
157793,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/ParameterFormatterTest.java,51,,"        assertEquals(""Test message ab c"", result);"
157794,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/ReusableMessageFactoryTest.java,31,,"        final Message message1 = factory.newMessage(""text, p0={} p1={} p2={} p3={}"", 1, 2, 3, 4);"
157795,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/ReusableMessageFactoryTest.java,78,,"        final Message message2 = factory.newMessage(""other, A={} B={} C={} D={}"", 1, 2, 3, 4);"
157796,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/ReusableObjectMessageTest.java,31,,"        msg.set(""abc"");"
157797,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/ReusableObjectMessageTest.java,45,,"        msg.set(""def"");"
157798,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/ReusableObjectMessageTest.java,47,,"        msg.set(""xyz"");"
157799,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/ReusableParameterizedMessageTest.java,40,,"        final String testMsg = ""Test message {}"";"
157800,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/ReusableSimpleMessageTest.java,31,,"        msg.set(""abc"");"
157801,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/ReusableSimpleMessageTest.java,45,,"        msg.set(""def"");"
157802,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/ReusableSimpleMessageTest.java,47,,"        msg.set(""xyz"");"
157803,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/StructuredDataMessageTest.java,30,,"        final String testMsg = ""Test message {}"";"
157804,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/StructuredDataMessageTest.java,31,,"        final StructuredDataMessage msg = new StructuredDataMessage(""MsgId@12345"", testMsg, ""Alert"");"
157805,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/StructuredDataMessageTest.java,31,,"        final StructuredDataMessage msg = new StructuredDataMessage(""MsgId@12345"", testMsg, ""Alert"");"
157806,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/StructuredDataMessageTest.java,32,,"        msg.put(""message"", testMsg);"
157807,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/StructuredDataMessageTest.java,33,,"        msg.put(""project"", ""Log4j"");"
157808,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/StructuredDataMessageTest.java,33,,"        msg.put(""project"", ""Log4j"");"
157809,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/StructuredDataMessageTest.java,34,,"        msg.put(""memo"", ""This is a very long test memo to prevent regression of LOG4J2-114"");"
157810,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/StructuredDataMessageTest.java,34,,"        msg.put(""memo"", ""This is a very long test memo to prevent regression of LOG4J2-114"");"
157811,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/message/ThreadDumpMessageTest.java,30,,"        final ThreadDumpMessage msg = new ThreadDumpMessage(""Testing"");"
157812,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/spi/DefaultThreadContextMapTest.java,56,,"        assertFalse(map.containsKey(""key""));"
157813,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/spi/DefaultThreadContextMapTest.java,57,,"        map.put(""key"", ""value"");"
157814,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/spi/DefaultThreadContextMapTest.java,103,,"        assertEquals(""value2"", map.get(""key2""));"
157815,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/spi/DefaultThreadContextMapTest.java,103,,"        assertEquals(""value2"", map.get(""key2""));"
157816,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/spi/DefaultThreadContextMapTest.java,150,,"        map.put(""key1"", ""value1"");"
157817,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/spi/DefaultThreadContextMapTest.java,150,,"        map.put(""key1"", ""value1"");"
157818,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/spi/DefaultThreadContextStackTest.java,118,,"        stack.push(""msg1"");"
157819,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/spi/DefaultThreadContextStackTest.java,119,,"        stack.add(""msg2"");"
157820,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/spi/DefaultThreadContextStackTest.java,135,,"        stack.push(""msg3"");"
157821,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/spi/MutableThreadContextStackTest.java,49,,"        stack.push(""msg1"");"
157822,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/spi/MutableThreadContextStackTest.java,50,,"        stack.add(""msg2"");"
157823,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/spi/MutableThreadContextStackTest.java,66,,"        stack.push(""msg3"");"
157824,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/PropertySourceTokenizerTest.java,32,,"            {""log4j.simple"", Collections.singletonList(""simple"")},"
157825,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/PropertySourceTokenizerTest.java,40,,"            {""log4j.simpleProperty"", Arrays.asList(""simple"", ""property"")},"
157826,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,65,,"        original.putValue(""a"", ""avalue"");"
157827,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,66,,"        original.putValue(""B"", ""Bvalue"");"
157828,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,67,,"        original.putValue(""3"", ""3value"");"
157829,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,202,,"        original.putValue(""a"", ""aORIG"");"
157830,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,203,,"        original.putValue(""b"", ""bORIG"");"
157831,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,204,,"        original.putValue(""c"", ""cORIG"");"
157832,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,205,,"        original.putValue(""d"", ""dORIG"");"
157833,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,206,,"        original.putValue(""e"", ""eORIG"");"
157834,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,215,,"        assertEquals(7, original.size(), ""size after put other"");"
157835,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,228,,"        original.putValue(null, ""nullORIG"");"
157836,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,283,,"        other.putValue(null, ""nullNEW"");"
157837,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,435,,"        assertDoesNotThrow(() -> original.toMap().put(""abc"", ""xyz""), ""Expected map to be mutable"");"
157838,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,441,,"        original.putValue(""a"", ""aaa"");"
157839,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,442,,"        original.putValue(""b"", ""bbb"");"
157840,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,443,,"        original.putValue(""c"", ""ccc"");"
157841,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,444,,"        assertEquals(3, original.size(), ""size"");"
157842,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,454,,"        other.putValue(""1"", ""111"");"
157843,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,455,,"        other.putValue(""2"", ""222"");"
157844,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,456,,"        other.putValue(""3"", ""333"");"
157845,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,474,,"        original.putValue(""d"", ""ddd"");"
157846,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,551,,"        assertThrows(ConcurrentModificationException.class, () -> original.forEach((s, o) -> original.putValue(""c"", ""other"")));"
157847,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,667,,"        original.putValue(""c"", ""cvalue"");"
157848,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,668,,"        original.putValue(""d"", ""dvalue"");"
157849,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,722,,"        original.putValue(null, ""nullvalue"");"
157850,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,851,,"        original.putValue(""0"", ""0value"");"
157851,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/SortedArrayStringMapTest.java,1003,,"        assertFalse(original.isEmpty(), ""size="" + original.size());"
157852,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/Unbox1Test.java,74,,"        assertEquals(""127"", Unbox.box((byte) 127).toString());"
157853,./TargetProjects/logging-log4j2/log4j-api/src/test/java/org/apache/logging/log4j/util/Unbox1Test.java,76,,"        assertEquals(""-128"", Unbox.box((byte) -128).toString());"
157854,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/FilterPerformanceComparison.java,107,,"        System.out.println(""###############################################"");"
157855,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/PerformanceComparison.java,89,,"            System.out.println(""###############################################"");"
157856,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/PerformanceComparison.java,141,,"            log4jlogger.debug(""SEE IF THIS IS LOGGED "" + j + '.');"
157857,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/PerformanceRun.java,58,,"        System.out.println(""###############################################"");"
157858,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/core/appender/HttpAppenderTest.java,142,,"        .withHeader(""Content-Type"", ""application/json"")"
157859,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/core/appender/HttpAppenderTest.java,142,,"        .withHeader(""Content-Type"", ""application/json"")"
157860,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/core/appender/HttpAppenderTest.java,162,,"        wireMockRule.stubFor(post(urlEqualTo(""/test/log4j/""))"
157861,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/core/appender/HttpAppenderTest.java,166,,"            .setName(""Http"")"
157862,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/core/appender/HttpAppenderTest.java,169,,"            .setUrl(new URL(""http://localhost:"" + wireMockRule.port() + ""/test/log4j/""))"
157863,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/core/appender/HttpAppenderTest.java,174,,"            .withHeader(""Host"", containing(""localhost""))"
157864,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/core/appender/HttpAppenderTest.java,174,,"            .withHeader(""Host"", containing(""localhost""))"
157865,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/core/appender/HttpAppenderTest.java,176,,"            .withRequestBody(containing(""\""message\"" : \"""" + LOG_MESSAGE + ""\"""")));"
157866,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/core/appender/SocketAppenderTest.java,133,,"                .setName(""test"")"
157867,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/core/appender/SocketAppenderTest.java,162,,"        assertNotNull(""No event retrieved"", event);"
157868,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/core/appender/XmlCompactFileAppenderTest.java,64,,"        assertTrue(""line1 incorrect: ["" + line1 + ""], does not contain: ["" + msg1 + ']', line1.contains(msg1));"
157869,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/core/appender/XmlCompactFileAppenderTest.java,64,,"        assertTrue(""line1 incorrect: ["" + line1 + ""], does not contain: ["" + msg1 + ']', line1.contains(msg1));"
157870,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/core/appender/XmlCompleteFileAppenderTest.java,94,,"        assertTrue(""line1 incorrect: ["" + line1 + ""], does not contain: ["" + msg1 + ']', line1.equals(msg1));"
157871,./TargetProjects/logging-log4j2/log4j-core-its/src/test/java/org/apache/logging/log4j/core/appender/XmlRandomAccessFileAppenderTest.java,73,,"        assertTrue(""line1 incorrect: ["" + line1 + ""], does not contain: ["" + msg1 + ']', line1.equals(msg1));"
157872,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/appender/ScriptAppenderSelector.java,108,,"        public Builder setAppenderNodeSet(@SuppressWarnings(""hiding"") final AppenderSet appenderSet) {"
157873,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/appender/routing/Routes.java,97,,"        public Builder setConfiguration(@SuppressWarnings(""hiding"") final Configuration configuration) {"
157874,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/appender/routing/RoutingAppender.java,111,,"        public B setRoutes(@SuppressWarnings(""hiding"") final Routes routes) {"
157875,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/config/builder/impl/DefaultConfigurationBuilder.java,367,,"        return new DefaultLoggerComponentBuilder(this, name, null, ""AsyncLogger"");"
157876,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/config/builder/impl/DefaultConfigurationBuilder.java,397,,"        return new DefaultRootLoggerComponentBuilder(this, ""AsyncRoot"");"
157877,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/config/builder/impl/DefaultLoggerComponentBuilder.java,40,,"            addAttribute(""level"", level);"
157878,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/config/builder/impl/DefaultRootLoggerComponentBuilder.java,39,,"            addAttribute(""level"", level);"
157879,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/config/properties/PropertiesConfigurationBuilder.java,245,,"        final String level = Strings.trimToNull((String) properties.remove(""level""));"
157880,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/filter/ScriptFilter.java,72,,"        bindings.put(""substitutor"", configuration.getStrSubstitutor());"
157881,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/impl/ExtendedStackTraceElement.java,185,,"            textRenderer.render(""("", output, ""StackTraceElement.Container"");"
157882,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/impl/ThrowableProxyRenderer.java,50,,"        textRenderer.render(lineSeparator, sb, ""Text"");"
157883,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/impl/ThrowableProxyRenderer.java,66,,"        textRenderer.render(prefix, sb, ""Prefix"");"
157884,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/impl/ThrowableProxyRenderer.java,132,,"            textRenderer.render(""\t... "", sb, ""Suppressed"");"
157885,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/layout/HtmlLayout.java,161,,"        sbuf.append(""</td>"").append(Strings.LINE_SEPARATOR);"
157886,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/message/ExtendedThreadInformation.java,112,,"                sb.append(info.getLockOwnerName()).append(""\"" Id="").append(info.getLockOwnerId()).append(')');"
157887,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/message/ExtendedThreadInformation.java,122,,"                        sb.append("" owned by \"""");"
157888,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/net/MulticastDnsAdvertiser.java,91,,"                jmDNSClass.getMethod(""create"");"
157889,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/pattern/AbstractStyleNameConverter.java,55,,"    @Plugin(name = Black.NAME, category = ""Converter"")"
157890,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/pattern/EncodingPatternConverter.java,33,,"@Plugin(name = ""encode"", category = PatternConverter.CATEGORY)"
157891,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/pattern/EqualsIgnoreCaseReplacementConverter.java,30,,"@Plugin(name = ""equalsIgnoreCase"", category = PatternConverter.CATEGORY)"
157892,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/pattern/EqualsReplacementConverter.java,30,,"@Plugin(name = ""equals"", category = PatternConverter.CATEGORY)"
157893,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/pattern/HighlightConverter.java,97,,"        DEFAULT_STYLES.put(Level.FATAL.name(), AnsiEscape.createSequence(""BRIGHT"", ""RED""));"
157894,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/pattern/HighlightConverter.java,97,,"        DEFAULT_STYLES.put(Level.FATAL.name(), AnsiEscape.createSequence(""BRIGHT"", ""RED""));"
157895,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/pattern/RegexReplacementConverter.java,30,,"@Plugin(name = ""replace"", category = PatternConverter.CATEGORY)"
157896,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/pattern/RepeatPatternConverter.java,28,,"@Plugin(name = ""repeat"", category = PatternConverter.CATEGORY)"
157897,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/pattern/StyleConverter.java,37,,"@Plugin(name = ""style"", category = PatternConverter.CATEGORY)"
157898,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/pattern/VariablesNotEmptyReplacementConverter.java,30,,"@Plugin(name = ""notEmpty"", category = PatternConverter.CATEGORY)"
157899,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/time/internal/format/FastDateParser.java,848,,"                if (tzId.equalsIgnoreCase(""GMT"")) {"
157900,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/time/internal/format/FixedDateFormat.java,81,,"        DEFAULT(""yyyy-MM-dd HH:mm:ss,SSS"", ""yyyy-MM-dd "", 0, ':', 1, ',', 1, 3, null),"
157901,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/time/internal/format/FixedDateFormat.java,109,,"        ISO8601(""yyyy-MM-dd'T'HH:mm:ss,SSS"", ""yyyy-MM-dd'T'"", 2, ':', 1, ',', 1, 3, null),"
157902,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,98,,"                        + ""    }%n"";"
157903,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,177,,"            + ""    /**%n"" "
157904,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,179,,"            + ""     * %n"" "
157905,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,181,,"            + ""     */%n"" "
157906,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,184,,"            + ""        return new CLASSNAME(wrapped);%n"" "
157907,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,193,,"            + ""     * @return The custom Logger.%n"" "
157908,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,282,,"            + ""     * @param marker the marker data specific to this log statement%n"" "
157909,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,283,,"            + ""     * @param msg the message string to be logged%n"" "
157910,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,294,,"            + ""     * @param t A Throwable or null.%n"" "
157911,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,301,,"            + ""     * Logs a message object with the {@code CUSTOM_LEVEL} level.%n"" "
157912,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,304,,"            + ""     * @param message the message object to log.%n"" "
157913,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,315,,"            + ""     * @since Log4j-2.6%n"" "
157914,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,322,,"            + ""     * Logs a message at the {@code CUSTOM_LEVEL} level including the stack trace of%n"" "
157915,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,323,,"            + ""     * the {@link Throwable} {@code t} passed as parameter.%n"" "
157916,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,326,,"            + ""     * @param message the message to log.%n"" "
157917,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,327,,"            + ""     * @param t the exception to log, including its stack trace.%n"" "
157918,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,357,,"            + ""     * Logs a message with parameters at the {@code CUSTOM_LEVEL} level.%n"" "
157919,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,360,,"            + ""     * @param message the message to log; the format depends on the message factory.%n"" "
157920,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,362,,"            + ""     * @see #getMessageFactory()%n"" "
157921,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,373,,"            + ""     * @param p0 parameter to the message.%n"" "
157922,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,387,,"            + ""     * @param p1 parameter to the message.%n"" "
157923,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,391,,"            + ""    public void methodName(final Marker marker, final String message, final Object p0, "" "
157924,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,403,,"            + ""     * @param p2 parameter to the message.%n"" "
157925,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,420,,"            + ""     * @param p3 parameter to the message.%n"" "
157926,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,425,,"            + ""final Object p1, final Object p2,%n"" "
157927,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,439,,"            + ""     * @param p4 parameter to the message.%n"" "
157928,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,459,,"            + ""     * @param p5 parameter to the message.%n"" "
157929,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,480,,"            + ""     * @param p6 parameter to the message.%n"" "
157930,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,502,,"            + ""     * @param p7 parameter to the message.%n"" "
157931,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,508,,"            + ""            final Object p3, final Object p4, final Object p5, final Object p6,%n"" "
157932,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,526,,"            + ""     * @param p8 parameter to the message.%n"" "
157933,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,678,,"            + ""    public void methodName(final String message, final Object p0, "" "
157934,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,857,,"            + ""     *%n"" "
157935,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,858,,"            + ""     * @param msgSupplier A function, which when called, produces the desired log message;%n"" "
157936,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,859,,"            + ""     *            the format depends on the message factory.%n"" "
157937,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,860,,"            + ""     * @since Log4j-2.4%n"" "
157938,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,867,,"            + ""     * Logs a message (only to be constructed if the logging level is the {@code CUSTOM_LEVEL}%n"" "
157939,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/Generate.java,941,,"            + ""     * @param msgSupplier A function, which when called, produces the desired log message.%n"" "
157940,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/picocli/CommandLine.java,3038,,"                    + (sb.toString()) + System.getProperty(""line.separator"");"
157941,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/tools/picocli/CommandLine.java,4696,,"            this.commandLine = Assert.notNull(commandLine, ""commandLine"");"
157942,./TargetProjects/logging-log4j2/log4j-core/src/main/java/org/apache/logging/log4j/core/util/Loader.java,101,,"                LOGGER.trace(""Trying to find [{}] using {} class loader."", resource, classLoader);"
157943,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/EventParameterMemoryLeakTest.java,56,,"        Object parameter = new ParameterObject(""paramValue"", latch);"
157944,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/LogEventTest.java,49,,"                .setLoggerFqcn(""org.apache.logging.log4j.core.Logger"") //"
157945,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/LogEventTest.java,51,,"                .setMessage(new SimpleMessage(""Hello, world!"")) //"
157946,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/LoggerTest.java,137,,"        logger.debug(""Debug message 1"");"
157947,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/LoggerTest.java,140,,"        logger.debug(""Debug message 2"");"
157948,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/LoggerTest.java,143,,"        logger.debug(""Debug message 3"");"
157949,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/LoggerTest.java,259,,"        testLogger.debug(""%,d"", Integer.MAX_VALUE);"
157950,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/PatternSelectorTest.java,39,,"        logger.info(""Hello World"");"
157951,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/StrictXmlConfigTest.java,50,,"        assertEquals(2, events.size(), ""Incorrect number of events. Expected 2, actual "" + events.size());"
157952,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/StrictXmlConfigTest.java,73,,"        assertEquals(1, events.size(), ""Incorrect number of events. Expected 1, actual "" + events.size());"
157953,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/AsyncAppenderTest.java,40,,"        logger.error(""This is a test"");"
157954,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/FileAppenderTest.java,66,,"        writer(false, logEventCount, ""test"", createOnDemand, false);"
157955,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/InMemoryAppenderTest.java,39,,"        assertMessage(""Test"", app, expectedHeader);"
157956,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/MemoryMappedFileAppenderTest.java,56,,"            log.warn(""Test log1"");"
157957,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/RandomAccessFileAppenderTest.java,49,,"                        { ""RandomAccessFileAppenderTest"", false, "".xml"" },"
157958,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/db/AbstractDatabaseManagerTest.java,80,,"        setUp(""name"", 0);"
157959,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,91,,"        try (final NoSqlDatabaseManager<?> manager = NoSqlDatabaseManager.getNoSqlDatabaseManager(""name"", 0,"
157960,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,161,,"            assertEquals(""The message is not correct."", ""My formatted message 01."", object.get(""message""));"
157961,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,166,,"            assertTrue(""The source should be a map."", object.get(""source"") instanceof Map);"
157962,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,167,,"            @SuppressWarnings(""unchecked"")"
157963,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,169,,"            assertEquals(""The class is not correct."", ""com.foo.Bar"", source.get(""className""));"
157964,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,170,,"            assertEquals(""The method is not correct."", ""testMethod01"", source.get(""methodName""));"
157965,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,171,,"            assertEquals(""The file name is not correct."", ""Bar.java"", source.get(""fileName""));"
157966,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,172,,"            assertEquals(""The line number is not correct."", 15, source.get(""lineNumber""));"
157967,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,174,,"            assertNull(""The marker should be null."", object.get(""marker""));"
157968,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,176,,"            assertNull(""The thrown should be null."", object.get(""thrown""));"
157969,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,178,,"            assertTrue(""The context map should be empty."", ((Map<?, ?>) object.get(""contextMap"")).isEmpty());"
157970,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,180,,"            assertTrue(""The context stack should be null."", ((Collection<?>) object.get(""contextStack"")).isEmpty());"
157971,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,188,,"        given(message.getFormattedMessage()).willReturn(""Another cool message 02."");"
157972,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,209,,"                .setLoggerName(""com.foo.NoSQLDbTest.testWriteInternal02"")"
157973,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,211,,"                .setSource(new StackTraceElement(""com.bar.Foo"", ""anotherMethod03"", ""Foo.java"", 9))"
157974,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,211,,"                .setSource(new StackTraceElement(""com.bar.Foo"", ""anotherMethod03"", ""Foo.java"", 9))"
157975,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,211,,"                .setSource(new StackTraceElement(""com.bar.Foo"", ""anotherMethod03"", ""Foo.java"", 9))"
157976,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,214,,"                .setThreadName(""AnotherThread-B"")"
157977,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,257,,"            assertTrue(""The thrown stack trace should be a list."", thrown.get(""stackTrace"") instanceof List);"
157978,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,266,,"                assertEquals(""Element class name ["" + i + ""] is not correct."", e1.getClassName(), e2.get(""className""));"
157979,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,273,,"            assertNull(""The thrown should have no cause."", thrown.get(""cause""));"
157980,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/nosql/NoSqlDatabaseManagerTest.java,352,,"            assertTrue(""The marker parents should be a list."", marker.get(""parents"") instanceof List);"
157981,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rewrite/LoggerNameLevelRewritePolicyTest.java,42,,"                .setLoggerFqcn(""LoggerNameLevelRewritePolicyTest.testUpdate()"").setLevel(Level.INFO)"
157982,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rewrite/LoggerNameLevelRewritePolicyTest.java,43,,"                .setMessage(new SimpleMessage(""Test"")).setThrown(new RuntimeException(""test"")).setThreadName(""none"")"
157983,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rewrite/LoggerNameLevelRewritePolicyTest.java,43,,"                .setMessage(new SimpleMessage(""Test"")).setThrown(new RuntimeException(""test"")).setThreadName(""none"")"
157984,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rewrite/LoggerNameLevelRewritePolicyTest.java,43,,"                .setMessage(new SimpleMessage(""Test"")).setThrown(new RuntimeException(""test"")).setThreadName(""none"")"
157985,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rewrite/MapRewritePolicyTest.java,54,,"        stringMap.putValue(""test2"", ""two"");"
157986,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rewrite/MapRewritePolicyTest.java,57,,"                .setLoggerName(""test"") //"
157987,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rewrite/MapRewritePolicyTest.java,64,,"                .setSource(new StackTraceElement(""MapRewritePolicyTest"", ""setupClass"", ""MapRewritePolicyTest"", 28))"
157988,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rewrite/MapRewritePolicyTest.java,64,,"                .setSource(new StackTraceElement(""MapRewritePolicyTest"", ""setupClass"", ""MapRewritePolicyTest"", 28))"
157989,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rewrite/RewriteAppenderTest.java,51,,"        msg.put(""Key1"", ""Value1"");"
157990,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rolling/PatternProcessorTest.java,136,,"        final PatternProcessor pp = new PatternProcessor(""logs/app-%d{yyyy-MM}.log.gz"");"
157991,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rolling/RollingAppenderDeleteMaxDepthTest.java,79,,"        assertTrue(p1 + "" should not have been deleted"", Files.exists(p1));"
157992,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rolling/RollingFileAppenderUpdateDataTest.java,39,,"        return buildConfigurationBuilder(""target/rolling-update-date/foo.log.%i"");"
157993,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rolling/RollingRandomAccessFileManagerTest.java,63,,"        final File file = File.createTempFile(""log4j2"", ""test"");"
157994,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rolling/RollingRandomAccessFileManagerTest.java,63,,"        final File file = File.createTempFile(""log4j2"", ""test"");"
157995,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rolling/action/Bzip2CompressActionTest.java,40,,"                () -> new CommonsCompressAction(""bzip2"", null, new File(""any""), true));"
157996,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rolling/action/DeleteActionTest.java,71,,"        final DeleteAction delete = createAnyFilter(""any"", false, 23, false);"
157997,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rolling/action/DeletingVisitorTest.java,59,,"        final Path base = Paths.get(""/a/b/c"");"
157998,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rolling/action/DeletingVisitorTest.java,63,,"        final Path any = Paths.get(""/a/b/c/any"");"
157999,./TargetProjects/logging-log4j2/log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rolling/action/DurationTest.java,51,,"        assertEquals(""P4DT3H2M1S"", Duration.parse(""p4dt3h2m1s"").toString());"
