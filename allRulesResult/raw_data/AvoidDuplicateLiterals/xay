24000,./TargetProjects/brooklyn-server/launcher/src/test/java/org/apache/brooklyn/launcher/BrooklynLauncherUpgradeCatalogOsgiTest.java,276,,"            assertTrue(resultWithoutForceMessage.contains(""Bundle ""+bundleV1.getVersionedName()+"" forcibly removed, upgraded to 2.0.0""), ""msg=""+resultWithoutForceMessage);"
24001,./TargetProjects/brooklyn-server/launcher/src/test/java/org/apache/brooklyn/launcher/BrooklynWebServerTest.java,151,,"                .put(""keystorePassword"", ""password"")"
24002,./TargetProjects/brooklyn-server/launcher/src/test/java/org/apache/brooklyn/launcher/CleanOrphanedLocationsTest.java,55,,"                .configure(ConfigKeys.newConfigKey(Object.class, ""myconfig""), referantLoc));"
24003,./TargetProjects/brooklyn-server/launcher/src/test/java/org/apache/brooklyn/launcher/WebAppRunnerTest.java,85,,"            assertRootPageAvailableAt(""http://localhost:""+server.getActualPort()+""/"");"
24004,./TargetProjects/brooklyn-server/launcher/src/test/java/org/apache/brooklyn/launcher/WebAppRunnerTest.java,100,,"            MutableMap.of(""port"", ""8091+"", ""war"", null, ""wars"", MutableMap.of(""hello"", ""hello-world.war"")) );"
24005,./TargetProjects/brooklyn-server/launcher/src/test/java/org/apache/brooklyn/launcher/WebAppRunnerTest.java,107,,"            HttpAsserts.assertContentEventuallyContainsText(""http://localhost:""+server.getActualPort()+""/hello"","
24006,./TargetProjects/brooklyn-server/launcher/src/test/java/org/apache/brooklyn/launcher/WebAppRunnerTest.java,108,,"                ""This is the home page for a sample application"");"
24007,./TargetProjects/brooklyn-server/launcher/src/test/java/org/apache/brooklyn/launcher/blueprints/CouchbaseBlueprintTest.java,25,,"    @Test(groups={""Live"", ""Broken""})"
24008,./TargetProjects/brooklyn-server/launcher/src/test/java/org/apache/brooklyn/launcher/blueprints/CouchbaseBlueprintTest.java,25,,"    @Test(groups={""Live"", ""Broken""})"
24009,./TargetProjects/brooklyn-server/launcher/src/test/java/org/apache/brooklyn/launcher/blueprints/MongoDbBlueprintTest.java,27,,"    @Test(groups={""Integration"", ""WIP"", ""Broken""})"
24010,./TargetProjects/brooklyn-server/launcher/src/test/java/org/apache/brooklyn/launcher/blueprints/MongoDbBlueprintTest.java,27,,"    @Test(groups={""Integration"", ""WIP"", ""Broken""})"
24011,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/entity/helm/HelmEntityLiveTest.java,58,,"    @Test(groups = {""Live""})"
24012,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/entity/helm/HelmEntityLiveTest.java,60,,"        HelmEntity andManageChild = newHelmSpec(""nginx-test"", ""bitnami/nginx"");"
24013,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/entity/helm/HelmEntityLiveTest.java,60,,"        HelmEntity andManageChild = newHelmSpec(""nginx-test"", ""bitnami/nginx"");"
24014,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/docker/DockerJcloudsLocationLiveTest.java,123,,"    @Test(groups = {""Live"", ""Live-sanity""})"
24015,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/docker/DockerJcloudsLocationLiveTest.java,123,,"    @Test(groups = {""Live"", ""Live-sanity""})"
24016,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/docker/DockerJcloudsLocationLiveTest.java,129,,"        assertMachineSshableSecureAndFromImage(machine, ""brooklyncentral/centos:7"");"
24017,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/docker/DockerJcloudsLocationLiveTest.java,249,,"            fail(""Password '"" + val + ""' does not contain a digit"");"
24018,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/ImageChooserTest.java,53,,"        assertEquals(chooser.chooseImage(""uBuNtU"", null).orNull(), ""brooklyncentral/ubuntu:14.04"");"
24019,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/KubernetesCertsTest.java,77,,"                .put(KubernetesLocationConfig.CA_CERT_DATA, ""myCaCertData"")"
24020,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/KubernetesCertsTest.java,78,,"                .put(KubernetesLocationConfig.CLIENT_CERT_DATA, ""myClientCertData"")"
24021,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/KubernetesCertsTest.java,79,,"                .put(KubernetesLocationConfig.CLIENT_KEY_DATA, ""myClientKeyData"")"
24022,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/KubernetesLocationLiveTest.java,99,,"    @Test(groups = {""Live""})"
24023,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/KubernetesLocationLiveTest.java,102,,"        runImage(ImmutableMap.<String, Object>of(), ""centos"", ""7"");"
24024,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/KubernetesLocationLiveTest.java,120,,"        runImage(ImmutableMap.<String, Object>of(KubernetesLocationConfig.OS_FAMILY.getName(), ""ubuntu""), ""ubuntu"", ""14.04"");"
24025,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/KubernetesLocationYamlLiveTest.java,115,,"    @Test(groups = {""Live""})"
24026,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/KubernetesLocationYamlLiveTest.java,121,,"                ""services:"","
24027,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/KubernetesLocationYamlLiveTest.java,122,,"                ""  - type: "" + EmptySoftwareProcess.class.getName(),"
24028,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/KubernetesLocationYamlLiveTest.java,123,,"                ""    brooklyn.config:"","
24029,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/KubernetesLocationYamlLiveTest.java,157,,"                ""      - type: "" + OnPublicNetworkEnricher.class.getName(),"
24030,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/KubernetesLocationYamlLiveTest.java,158,,"                ""        brooklyn.config:"","
24031,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/KubernetesLocationYamlLiveTest.java,234,,"                ""      docker.container.imageName: tomcat"","
24032,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/KubernetesLocationYamlLiveTest.java,307,,"                ""          docker.container.inboundPorts:"","
24033,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/KubernetesLocationYamlLiveTest.java,309,,"                ""          docker.container.environment:"","
24034,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/kubernetes/KubernetesLocationYamlLiveTest.java,375,,"                ""      docker.container.inboundPorts:"","
24035,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/openshift/OpenShiftLocationYamlLiveTest.java,58,,"                ""    "" + OpenShiftLocation.CLOUD_ENDPOINT.getName() + "": \"""" + OPENSHIFT_ENDPOINT + ""\"""","
24036,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/openshift/OpenShiftLocationYamlLiveTest.java,58,,"                ""    "" + OpenShiftLocation.CLOUD_ENDPOINT.getName() + "": \"""" + OPENSHIFT_ENDPOINT + ""\"""","
24037,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/openshift/OpenShiftLocationYamlLiveTest.java,67,,"    @Test(groups = {""Live""})"
24038,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/openshift/OpenShiftLocationYamlLiveTest.java,71,,"                ""services:"","
24039,./TargetProjects/brooklyn-server/locations/container/src/test/java/org/apache/brooklyn/container/location/openshift/OpenShiftLocationYamlLiveTest.java,73,,"                ""    brooklyn.config:"","
24040,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/CreateUserStatements.java,156,,"                        statements.add(SshStatements.sshdConfig(ImmutableMap.of(""PasswordAuthentication"", ""yes"")));"
24041,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsByonLocationResolver.java,106,,"            throw new IllegalArgumentException(""Invalid location '""+spec+""'; provider must be defined"");"
24042,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,243,,"                throw new IllegalStateException(MAX_CONCURRENT_MACHINE_CREATIONS.getName() + "" must be >= 1, but was ""+maxConcurrent);"
24043,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,428,,"                throw new IllegalStateException(""Failed to create CloudMachineNamer ""+namerClass+"" for location ""+this);"
24044,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,654,,"        boolean waitForSshable = !""false"".equalsIgnoreCase(setup.get(JcloudsLocationConfig.WAIT_FOR_SSHABLE));"
24045,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,709,,"            LOG.info(""Creating VM ""+getCreationString(setup)+"" in ""+this);"
24046,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,1077,,"                            ? ""password="" + userCredentials.getOptionalPassword().or(""<absent>"")"
24047,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,1082,,"                    + ""semaphore obtained in ""+Duration.of(semaphoreTimestamp).toStringRounded()+"";"""
24048,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,1233,,"            LOG.error(""Problem suspending machine "" + rawLocation + "" in "" + this + "", instance id "" + instanceId, e);"
24049,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,1707,,"        sshProps.put(""user"", initialUser);"
24050,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,1708,,"        sshProps.put(""address"", hostAndPort.getHostText());"
24051,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,1714,,"        sshProps.remove(""password"");"
24052,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,1715,,"        sshProps.remove(""privateKeyData"");"
24053,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,2243,,"                    ""; ignoring and continuing, """
24054,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,2244,,"                    + (tothrow==null ? ""will throw subsequently"" : ""swallowing due to previous error"")+"": ""+e, e);"
24055,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/JcloudsLocation.java,2244,,"                    + (tothrow==null ? ""will throw subsequently"" : ""swallowing due to previous error"")+"": ""+e, e);"
24056,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/LocationCustomizerDelegate.java,119,,"                LOG.error(""Problem invoking pre-release customizer ""+customizer+"" for machine ""+machine+"
24057,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/LocationCustomizerDelegate.java,120,,"                    ""; ignoring and continuing, """
24058,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/LocationCustomizerDelegate.java,121,,"                    + (tothrow==null ? ""will throw subsequently"" : ""swallowing due to previous error"")+"": ""+e, e);"
24059,./TargetProjects/brooklyn-server/locations/jclouds/src/main/java/org/apache/brooklyn/location/jclouds/LocationCustomizerDelegate.java,121,,"                    + (tothrow==null ? ""will throw subsequently"" : ""swallowing due to previous error"")+"": ""+e, e);"
24060,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/core/mgmt/persist/jclouds/BlobStoreTest.java,85,,"        Blob b = context.getBlobStore().blobBuilder(""my-blob-1"").payload(Streams.newInputStreamWithContents(""hello world"")).build();"
24061,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/core/mgmt/persist/jclouds/BlobStoreTest.java,85,,"        Blob b = context.getBlobStore().blobBuilder(""my-blob-1"").payload(Streams.newInputStreamWithContents(""hello world"")).build();"
24062,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/core/mgmt/persist/jclouds/BlobStoreTest.java,96,,"        context.getBlobStore().createDirectory(testContainerName, ""my-dir-1"");"
24063,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/core/mgmt/persist/jclouds/BrooklynMementoPersisterJcloudsObjectStoreTest.java,35,,"@Test(groups={""Live"", ""Live-sanity""})"
24064,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/core/mgmt/persist/jclouds/BrooklynMementoPersisterJcloudsObjectStoreTest.java,35,,"@Test(groups={""Live"", ""Live-sanity""})"
24065,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/core/mgmt/persist/jclouds/HighAvailabilityManagerJcloudsObjectStoreTest.java,34,,"@Test(groups={""Live"", ""Live-sanity""})"
24066,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/core/mgmt/persist/jclouds/HighAvailabilityManagerJcloudsObjectStoreTest.java,34,,"@Test(groups={""Live"", ""Live-sanity""})"
24067,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/core/mgmt/persist/jclouds/JcloudsObjectStoreAccessorWriterTest.java,42,,"@Test(groups={""Live"", ""Live-sanity""})"
24068,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/core/mgmt/persist/jclouds/JcloudsObjectStoreAccessorWriterTest.java,42,,"@Test(groups={""Live"", ""Live-sanity""})"
24069,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/BailOutJcloudsLocation.java,132,,"                .put(IMAGE_ID, ""bogus"")"
24070,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/BrooklynImageChooserTest.java,62,,"                .description(""7.6"")"
24071,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/BrooklynImageChooserTest.java,78,,"            .description(""7.3-SRIOV"")"
24072,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/BrooklynImageChooserTest.java,98,,"                getScore(OsFamily.CENTOS, ""7.0""),"
24073,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/DefaultConnectivityResolverTest.java,96,,"                JcloudsLocationConfig.WAIT_FOR_SSHABLE, ""1ms"","
24074,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/DefaultConnectivityResolverTest.java,99,,"                jcloudsLocation, HostAndPort.fromParts(""10.0.0.234"", 22),"
24075,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/DefaultConnectivityResolverTest.java,135,,"        final HostAndPort authorisedHostAndPort = HostAndPort.fromParts(""10.0.0.2"", 22);"
24076,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/DefaultConnectivityResolverTest.java,178,,"                new Object[]{NetworkMode.ONLY_PUBLIC, haps(""10.0.0.2:22"", ""192.168.0.1:22"", ""192.168.0.2:22""), ""10.0.0.2""},"
24077,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/DefaultConnectivityResolverTest.java,178,,"                new Object[]{NetworkMode.ONLY_PUBLIC, haps(""10.0.0.2:22"", ""192.168.0.1:22"", ""192.168.0.2:22""), ""10.0.0.2""},"
24078,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsAwsImageChoiceStubbedLiveTest.java,64,,"    @Test(groups={""Live"", ""Live-sanity""})"
24079,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsAwsImageChoiceStubbedLiveTest.java,64,,"    @Test(groups={""Live"", ""Live-sanity""})"
24080,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsAwsImageChoiceStubbedLiveTest.java,72,,"        assertEquals(image.getId(), imageId, ""image=""+image);"
24081,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsAwsImageChoiceStubbedLiveTest.java,82,,"        assertCentos(image, ""7.0"");"
24082,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsAwsImageChoiceStubbedLiveTest.java,88,,"        obtainMachine(ImmutableMap.of(JcloudsLocation.OS_FAMILY, ""ubuntu""));"
24083,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsAwsImageChoiceStubbedLiveTest.java,118,,"        obtainMachine(ImmutableMap.of(JcloudsLocation.OS_FAMILY, ""centos""));"
24084,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsByonLocationResolverAwsLiveTest.java,52,,"    @BeforeClass(groups=""Live"")"
24085,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsByonLocationResolverSoftlayerLiveTest.java,76,,"        checkSoftlayer(""jcloudsByon:(provider=\""softlayer\"",region=\""""+SOFTLAYER_REGION+""\"",hosts=\""""+slVmInstanceId+""\"",user=\""""+slVmUser+""\"")"");"
24086,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsGceHardwareProfilesStubbedLiveTest.java,52,,"    private static final String G1_SMALL_HARDWARE_ID_LONG_FORM = GCE_ZONES_PREFIX + GCE_USCENTRAL_REGION_NAME + ""/machineTypes/"" + G1_SMALL_HARDWARE_ID;"
24087,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsGceHardwareProfilesStubbedLiveTest.java,74,,"    @Test(groups={""Live"", ""Live-sanity""})"
24088,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsGceHardwareProfilesStubbedLiveTest.java,74,,"    @Test(groups={""Live"", ""Live-sanity""})"
24089,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsGceHardwareProfilesStubbedLiveTest.java,78,,"        assertTrue(template.getHardware().getRam() >= 1000, ""template=""+template);"
24090,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsHardwareProfilesStubbedLiveTest.java,54,,"        assertTrue(template.getHardware().getRam() >= 1000, ""template=""+template);"
24091,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsImageChoiceStubbedLiveTest.java,61,,"    @Test(groups={""Live"", ""Live-sanity""})"
24092,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsImageChoiceStubbedLiveTest.java,61,,"    @Test(groups={""Live"", ""Live-sanity""})"
24093,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsImageChoiceStubbedLiveTest.java,63,,"        obtainMachine(ImmutableMap.of(JcloudsLocationConfig.IMAGE_ID, ""DEBIAN_8_64""));"
24094,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsImageChoiceStubbedLiveTest.java,64,,"        assertEquals(template.getImage().getId(), ""DEBIAN_8_64"", ""template=""+template);"
24095,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationRegisterMachineLiveTest.java,52,,"    @Test(groups = { ""Live"", ""Live-sanity"" })"
24096,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationRegisterMachineLiveTest.java,55,,"            jcloudsLocation.registerMachine(ImmutableMap.of(""id"", ""incorrectid"", ""hostname"", ""myhostname"", ""user"", ""myusername""));"
24097,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,82,,"        String file = resolve(""jclouds:aws-ec2"").getConfig(JcloudsLocation.LOGIN_USER_PRIVATE_KEY_FILE);"
24098,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,88,,"        brooklynProperties.put(""brooklyn.location.jclouds.aws-ec2.privateKeyFile"", ""myprivatekeyfile"");"
24099,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,89,,"        brooklynProperties.put(""brooklyn.location.jclouds.aws-ec2.publicKeyFile"", ""mypublickeyfile"");"
24100,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,90,,"        brooklynProperties.put(""brooklyn.location.jclouds.aws-ec2.privateKeyData"", ""myprivateKeyData"");"
24101,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,91,,"        brooklynProperties.put(""brooklyn.location.jclouds.aws-ec2.publicKeyData"", ""myPublicKeyData"");"
24102,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,92,,"        brooklynProperties.put(""brooklyn.location.jclouds.aws-ec2.privateKeyPassphrase"", ""myprivateKeyPassphrase"");"
24103,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,93,,"        brooklynProperties.put(""brooklyn.location.jclouds.aws-ec2.multi.prefix.property"", ""value"");"
24104,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,96,,"        assertEquals(conf.get(""privateKeyFile""), ""myprivatekeyfile"");"
24105,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,97,,"        assertEquals(conf.get(""publicKeyFile""), ""mypublickeyfile"");"
24106,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,98,,"        assertEquals(conf.get(""privateKeyData""), ""myprivateKeyData"");"
24107,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,99,,"        assertEquals(conf.get(""publicKeyData""), ""myPublicKeyData"");"
24108,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,100,,"        assertEquals(conf.get(""privateKeyPassphrase""), ""myprivateKeyPassphrase"");"
24109,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,125,,"        brooklynProperties.put(""brooklyn.location.loginUser.privateKeyData"", ""is-set"");"
24110,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,203,,"        Assert.assertTrue(resolve(""aws-ec2"") instanceof JcloudsLocation);"
24111,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,213,,"        Assert.assertTrue(resolve(""eu-west-1"") instanceof JcloudsLocation);"
24112,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,225,,"        brooklynProperties.put(""brooklyn.location.jclouds.openstack-nova.endpoint"", ""myendpoint"");"
24113,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,226,,"        JcloudsLocation loc = resolve(""jclouds:openstack-nova"");"
24114,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,236,,"        brooklynProperties.put(""brooklyn.location.jclouds.openstack-nova.foo"", ""bar"");"
24115,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,284,,"        assertJcloudsEquals(resolve(""jclouds:aws-ec2:us-east-1""), ""aws-ec2"", ""us-east-1"");"
24116,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,298,,"        assertEquals(conf.get(""region""), ""was01"");"
24117,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,322,,"        brooklynProperties.put(""brooklyn.location.jclouds.softlayer.prop1"", ""1"");"
24118,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,323,,"        brooklynProperties.put(""brooklyn.location.jclouds.softlayer.prop2"", ""1"");"
24119,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,325,,"        brooklynProperties.put(""brooklyn.location.named.foo"", ""jclouds:softlayer:138124"");"
24120,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,328,,"        brooklynProperties.put(""brooklyn.location.named.bar"", ""named:foo"");"
24121,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,332,,"        assertJcloudsEquals(l, ""softlayer"", ""138124"");"
24122,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,334,,"        Assert.assertEquals(l.config().getLocalBag().getStringKey(""prop2""), ""2"");"
24123,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationResolverTest.java,335,,"        Assert.assertEquals(l.config().getLocalBag().getStringKey(""prop1""), ""1"");"
24124,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationSuspendResumeMachineLiveTest.java,58,,"        assertTrue(sshMachine.isSshable(), ""Cannot SSH to "" + sshMachine);"
24125,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationTemplateOptionsCustomisersLiveTest.java,57,,"                .configure(key, ImmutableMap.of(""iamInstanceProfileName"", (Object)""helloworld""));"
24126,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationTest.java,485,,"            registerJcloudsMachineLocation(""bogus"", result);"
24127,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLocationTest.java,590,,"        Assert.assertTrue(statements.contains(""PermitRootLogin""), ""Error:\n""+statements);"
24128,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLoginLiveTest.java,72,,"    private File privateRsaFile = new File(Os.tidyPath(""~/.ssh/id_rsa""));"
24129,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLoginLiveTest.java,74,,"    private File privateRsaFileTmp = new File(privateRsaFile.getAbsoluteFile()+"".tmp"");"
24130,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLoginLiveTest.java,76,,"    private File publicRsaFile = new File(Os.tidyPath(""~/.ssh/id_rsa.pub""));"
24131,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLoginLiveTest.java,85,,"    @Test(groups = {""Live""})"
24132,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLoginLiveTest.java,88,,"        brooklynProperties.put(BROOKLYN_PROPERTIES_PREFIX+JcloudsLocationConfig.USER.getName(), ""myname"");"
24133,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLoginLiveTest.java,96,,"                .put(""address"", machine.getAddress())"
24134,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLoginLiveTest.java,97,,"                .put(""user"", ""myname"")"
24135,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLoginLiveTest.java,142,,"            brooklynProperties.put(BROOKLYN_PROPERTIES_PREFIX+JcloudsLocationConfig.PASSWORD.getName(), ""mypassword"");"
24136,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLoginLiveTest.java,299,,"            brooklynProperties.put(BROOKLYN_PROPERTIES_PREFIX+JcloudsLocationConfig.USER.getName(), ""root"");"
24137,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLoginLiveTest.java,324,,"        machine = createEc2Machine(ImmutableMap.<String,Object>of(""imageId"", AWS_EC2_UBUNTU_10_IMAGE_ID));"
24138,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLoginLiveTest.java,415,,"            LOG.info(""Moving {} to {}"", privateRsaFile, privateRsaFileTmp);"
24139,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLoginLiveTest.java,416,,"            Runtime.getRuntime().exec(""mv ""+privateRsaFile.getAbsolutePath()+"" ""+privateRsaFileTmp.getAbsolutePath());"
24140,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsLoginLiveTest.java,438,,"            LOG.info(""Restoring {} form {}"", privateRsaFile, privateRsaFileTmp);"
24141,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsPropertiesFromBrooklynPropertiesTest.java,79,,"        Map<String, Object> map = parser.getJcloudsProperties(""openstack-nova"", null, ""cloudfirst"", sampleNamedProps());"
24142,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsRateLimitedRetryLiveTest.java,86,,"    @Test(groups = {""Live"", ""Acceptance""})"
24143,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsRateLimitedRetryLiveTest.java,86,,"    @Test(groups = {""Live"", ""Acceptance""})"
24144,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsRenamesRebindTest.java,55,,"        JcloudsLocation loc = resolve(""aws-ec2:us-east-1"", ImmutableMap.of(""identity"", ""dummy"", ""credential"", ""dummy""));"
24145,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsStubTemplateBuilder.java,84,,"        this(""aws-ec2"", ""us-east-1"");"
24146,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsStubTemplateBuilder.java,134,,"        case ""ec2"" :"
24147,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsStubTemplateBuilder.java,189,,"                    .operatingSystem(new OperatingSystem(OsFamily.UBUNTU, null, ""1.0"", VirtualizationType.PARAVIRTUAL.value(), ""ubuntu"", true))"
24148,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsSuseLiveTest.java,55,,"                JcloudsLocation.USER.getName(), ""myname""));"
24149,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsTypeCoercionsWithBuilderTest.java,42,,"                coerce(ImmutableMap.of(""arg1"", ""val1"", ""arg2"", ""val2""), MyClazz.class), "
24150,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsTypeCoercionsWithBuilderTest.java,42,,"                coerce(ImmutableMap.of(""arg1"", ""val1"", ""arg2"", ""val2""), MyClazz.class), "
24151,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsTypeCoercionsWithBuilderTest.java,42,,"                coerce(ImmutableMap.of(""arg1"", ""val1"", ""arg2"", ""val2""), MyClazz.class), "
24152,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsTypeCoercionsWithBuilderTest.java,42,,"                coerce(ImmutableMap.of(""arg1"", ""val1"", ""arg2"", ""val2""), MyClazz.class), "
24153,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsTypeCoercionsWithCreateTest.java,46,,"                coerce(ImmutableMap.of(""arg1"", ""val1"", ""arg2"", ""val2""), MyClazz.class), "
24154,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsTypeCoercionsWithCreateTest.java,46,,"                coerce(ImmutableMap.of(""arg1"", ""val1"", ""arg2"", ""val2""), MyClazz.class), "
24155,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsTypeCoercionsWithCreateTest.java,46,,"                coerce(ImmutableMap.of(""arg1"", ""val1"", ""arg2"", ""val2""), MyClazz.class), "
24156,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsTypeCoercionsWithCreateTest.java,46,,"                coerce(ImmutableMap.of(""arg1"", ""val1"", ""arg2"", ""val2""), MyClazz.class), "
24157,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsTypeCoercionsWithCreateTest.java,72,,"                coerce(ImmutableMap.builder().put(""boolArg"", true).put(""byteArg"", (byte)1).put(""shortArg"", (short)2)"
24158,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsTypeCoercionsWithCreateTest.java,72,,"                coerce(ImmutableMap.builder().put(""boolArg"", true).put(""byteArg"", (byte)1).put(""shortArg"", (short)2)"
24159,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsTypeCoercionsWithCreateTest.java,72,,"                coerce(ImmutableMap.builder().put(""boolArg"", true).put(""byteArg"", (byte)1).put(""shortArg"", (short)2)"
24160,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsTypeCoercionsWithCreateTest.java,73,,"                        .put(""intArg"", (int)3).put(""longArg"", (long)4).put(""floatArg"", (float)5.0)"
24161,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsTypeCoercionsWithCreateTest.java,73,,"                        .put(""intArg"", (int)3).put(""longArg"", (long)4).put(""floatArg"", (float)5.0)"
24162,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsTypeCoercionsWithCreateTest.java,73,,"                        .put(""intArg"", (int)3).put(""longArg"", (long)4).put(""floatArg"", (float)5.0)"
24163,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsTypeCoercionsWithCreateTest.java,74,,"                        .put(""doubleArg"", (double)6.0).build(), MyClazzWithPrimitives.class), "
24164,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsTypeCoercionsWithCreateTest.java,85,,"                coerce(ImmutableMap.of(""vals"", ImmutableList.of()), ListOfMyClazz.class), "
24165,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/JcloudsWinrmingLiveTest.java,49,,"    public static final String AWS_EC2_LOCATION_SPEC = ""jclouds:"" + AWS_EC2_PROVIDER + "":"" + AWS_EC2_USEAST_REGION_NAME;"
24166,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/RebindJcloudsLocationLiveTest.java,86,,"    @Test(groups=""Live"")"
24167,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/RebindJcloudsLocationLiveTest.java,141,,"        assertTrue(origMachineXml.contains(""NodeMetadataImpl""), origMachineXml);"
24168,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/RebindJcloudsLocationLiveTest.java,148,,"        JcloudsSshMachineLocation machine2 = (JcloudsSshMachineLocation) app2.getManagementContext().getLocationManager().getLocation(""aKEcbxKN"");"
24169,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/RebindJcloudsLocationLiveTest.java,151,,"        String errmsg = ""loc=""+loc2.toVerboseString()+""; machine=""+machine2.toVerboseString();"
24170,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/RebindJcloudsLocationLiveTest.java,151,,"        String errmsg = ""loc=""+loc2.toVerboseString()+""; machine=""+machine2.toVerboseString();"
24171,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/RebindJcloudsLocationLiveTest.java,157,,"        assertEquals(machine2.getPrivateAddresses(), ImmutableSet.of(""10.144.66.5""), errmsg);"
24172,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/RebindJcloudsLocationLiveTest.java,158,,"        assertEquals(machine2.getPublicAddresses(), ImmutableSet.of(""54.254.23.53""), errmsg);"
24173,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/RebindJcloudsLocationLiveTest.java,224,,"        JcloudsWinRmMachineLocation machine2 = (JcloudsWinRmMachineLocation) app2.getManagementContext().getLocationManager().getLocation(""KYSryzW8"");"
24174,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/RebindJcloudsLocationLiveTest.java,230,,"        assertEquals(machine2.getAddress().getHostAddress(), ""52.28.153.46"", errmsg);"
24175,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/RebindJcloudsLocationLiveTest.java,233,,"        assertEquals(machine2.getPrivateAddresses(), ImmutableSet.of(""172.31.18.175""), errmsg);"
24176,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SimpleJcloudsLocationUserLoginAndConfigLiveTest.java,56,,"    @SuppressWarnings(""rawtypes"")"
24177,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SimpleJcloudsLocationUserLoginAndConfigLiveTest.java,57,,"    @Test(groups=""Live"")"
24178,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SimpleJcloudsLocationUserLoginAndConfigLiveTest.java,62,,"        Map details = MutableMap.of(""id"", m1.getJcloudsId(), ""hostname"", m1.getAddress().getHostAddress(), ""user"", m1.getUser());"
24179,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SimpleJcloudsLocationUserLoginAndConfigLiveTest.java,62,,"        Map details = MutableMap.of(""id"", m1.getJcloudsId(), ""hostname"", m1.getAddress().getHostAddress(), ""user"", m1.getUser());"
24180,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SimpleJcloudsLocationUserLoginAndConfigLiveTest.java,63,,"        log.info(""got machine ""+m1+"" at ""+jcloudsLocation+"": ""+details+""; now trying to rebind"");"
24181,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SimpleJcloudsLocationUserLoginAndConfigLiveTest.java,63,,"        log.info(""got machine ""+m1+"" at ""+jcloudsLocation+"": ""+details+""; now trying to rebind"");"
24182,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SimpleJcloudsLocationUserLoginAndConfigLiveTest.java,63,,"        log.info(""got machine ""+m1+"" at ""+jcloudsLocation+"": ""+details+""; now trying to rebind"");"
24183,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SimpleJcloudsLocationUserLoginAndConfigLiveTest.java,66,,"        result = execWithOutput(m1, Arrays.asList(""echo trying  m1"", ""hostname"", ""date""));"
24184,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SimpleJcloudsLocationUserLoginAndConfigLiveTest.java,66,,"        result = execWithOutput(m1, Arrays.asList(""echo trying  m1"", ""hostname"", ""date""));"
24185,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SimpleJcloudsLocationUserLoginAndConfigLiveTest.java,67,,"        Assert.assertTrue(result.contains(""trying m1""));"
24186,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SimpleJcloudsLocationUserLoginAndConfigLiveTest.java,69,,"        log.info(""now trying rebind ""+m1);"
24187,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SimpleJcloudsLocationUserLoginAndConfigLiveTest.java,71,,"        result = execWithOutput(m2, Arrays.asList(""echo trying  m2"", ""hostname"", ""date""));"
24188,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SimpleJcloudsLocationUserLoginAndConfigLiveTest.java,72,,"        Assert.assertTrue(result.contains(""trying m2""));"
24189,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SimpleJcloudsLocationUserLoginAndConfigLiveTest.java,131,,"            obtainMachine(MutableMap.of(""imageId"", EC2_CENTOS_IMAGE, ""waitForSshable"", 30*1000));"
24190,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SimpleJcloudsLocationUserLoginAndConfigLiveTest.java,131,,"            obtainMachine(MutableMap.of(""imageId"", EC2_CENTOS_IMAGE, ""waitForSshable"", 30*1000));"
24191,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SimpleJcloudsLocationUserLoginAndConfigLiveTest.java,144,,"                ""loginUser"", ""ec2-user"","
24192,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SingleMachineProvisioningLocationJcloudsLiveTest.java,43,,"    @Test(groups=""Live"")"
24193,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/SingleMachineProvisioningLocationJcloudsLiveTest.java,50,,"        log.info(""GOT ""+m1);"
24194,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/StandaloneJcloudsLiveTest.java,142,,"            LOG.error(""Failed to start VM: ""+e, e);"
24195,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizerTest.java,89,,"        when(location.getId()).thenReturn(""aws-ec2"");"
24196,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizerTest.java,114,,"        JcloudsLocation jcloudsLocationA = new JcloudsLocation(MutableMap.of(""deferConstruction"", true));"
24197,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/networking/JcloudsLocationSecurityGroupCustomizerTest.java,230,,"        SecurityGroup uniqueGroup = newGroup(""unique"");"
24198,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/networking/JcloudsPortForwardingStubbedTest.java,66,,"            HostAndPort result = HostAndPort.fromParts(""1.2.3.4"", nextPublicPort++);"
24199,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/networking/JcloudsPortForwardingStubbedTest.java,97,,"        assertEquals(getNodeCreator().created.size(), 1, ""created=""+getNodeCreator().created+""; machine=""+machine);"
24200,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/networking/JcloudsPortForwardingStubbedTest.java,128,,"        pfm.associate(""mypublicip"", publicHostAndPort, machine, 80);"
24201,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/networking/JcloudsReachableAddressStubbedTest.java,114,,"        List<String> publicAddresses = ImmutableList.of(""1.1.1.1"");"
24202,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/networking/JcloudsReachableAddressStubbedTest.java,115,,"        List<String> privateAddresses = ImmutableList.of(""2.1.1.1"");"
24203,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/networking/JcloudsReachableAddressStubbedTest.java,186,,"        List<String> publicAddresses = ImmutableList.of(""1.1.1.1"", ""1.1.1.2"", ""1.1.1.3"");"
24204,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/networking/JcloudsReachableAddressStubbedTest.java,211,,"        List<String> privateAddresses = ImmutableList.of(""2.1.1.1"", ""2.1.1.2"", ""2.1.1.3"");"
24205,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/networking/JcloudsReachableAddressStubbedTest.java,211,,"        List<String> privateAddresses = ImmutableList.of(""2.1.1.1"", ""2.1.1.2"", ""2.1.1.3"");"
24206,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/networking/JcloudsReachableAddressStubbedTest.java,278,,"        reachableIp = ""1.2.3.4"";"
24207,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/networking/creator/DefaultAzureArmNetworkCreatorTest.java,106,,"        Map<String, Object> ipOptions = (Map<String, Object>) ((List)templateOptions.get(""ipOptions"")).iterator().next();"
24208,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/networking/creator/DefaultAzureArmNetworkCreatorTest.java,107,,"        assertEquals(ipOptions.get(""subnet""), TEST_SUBNET_ID);"
24209,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/networking/creator/DefaultAzureArmNetworkCreatorTest.java,108,,"        assertEquals(ipOptions.get(""allocateNewPublicIp""), true);"
24210,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/provider/AbstractJcloudsLocationTest.java,150,,"        if (imageOwner != null) builder.put(""imageOwner"", imageOwner);"
24211,./TargetProjects/brooklyn-server/locations/jclouds/src/test/java/org/apache/brooklyn/location/jclouds/provider/CarrenzaLocationLiveTest.java,72,,"        brooklynProperties.remove(""brooklyn.jclouds.""+PROVIDER+"".image-description-regex"");"
24212,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/action/AbstractScheduledEffectorPolicy.java,82,,"    @SuppressWarnings(""serial"")"
24213,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,273,,"    @SuppressWarnings(""serial"")"
24214,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,498,,"                highlightViolation(""Size ""+size+"" too large (target ""+targetRange+"")"");"
24215,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,778,,"                            LOG.error(""Error resizing: ""+e, e);"
24216,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicy.java,871,,"            highlightViolation(""Metric ""+String.format(""%.02f"", data.currentMetricValue)+"" too hot """
24217,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/failover/ElectPrimaryEffector.java,140,,"                    ServiceProblemsLogic.updateProblemsIndicator(entity(), ""primary"", ""No primary could be found"");"
24218,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/failover/PrimaryRunningEnricher.java,60,,"            ServiceNotUpLogic.updateNotUpIndicator(entity, ""primary.enricher"", ""no primary found"");"
24219,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/followthesun/FollowTheSunStrategy.java,131,,"                    LOG.info(""POLICY ""+name+"" detected ""+itemName+"" should be in location ""+highestLocation+"" on ""+optimalContainerInHighest+"" (""+highestMsgRate+"" of ""+total+"" msgs/sec), migrating"");"
24220,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/followthesun/FollowTheSunStrategy.java,131,,"                    LOG.info(""POLICY ""+name+"" detected ""+itemName+"" should be in location ""+highestLocation+"" on ""+optimalContainerInHighest+"" (""+highestMsgRate+"" of ""+total+"" msgs/sec), migrating"");"
24221,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/ha/ServiceReplacer.java,133,,"                        LOG.warn(""ServiceReplacer not running, so not acting on failure detected at ""+entity+"" (""+event.getValue()+"", child of ""+entity+"")"");"
24222,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/BalancingStrategy.java,151,,"                    ""policy ""+getDataProvider().getName()+"" not balancing ""+questionedNode+""; "" +"
24223,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/BalancingStrategy.java,253,,"                        ""(""+node+"", workrate {0,number,#.##}), "" +"
24224,./TargetProjects/brooklyn-server/policy/src/main/java/org/apache/brooklyn/policy/loadbalancing/BalancingStrategy.java,350,,"                        ""policy ""+getDataProvider().getName()+"" not balancing cold node ""+questionedNode+"" "" +"
24225,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/action/PeriodicEffectorPolicyTest.java,46,,"                        .configure(PeriodicEffectorPolicy.EFFECTOR, ""myEffector"")"
24226,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/action/ScheduledEffectorPolicyTest.java,41,,"                        .configure(ScheduledEffectorPolicy.EFFECTOR, ""myEffector"")"
24227,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/action/ScheduledPolicyRebindTest.java,55,,"                        .configure(PeriodicEffectorPolicy.EFFECTOR, ""myEffector"")"
24228,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicyMetricTest.java,79,,"        Asserts.succeedsContinually(ImmutableMap.of(""timeout"", SHORT_WAIT_MS), currentSizeAsserter(tc, 1));"
24229,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicyMetricTest.java,102,,"    @Test(groups=""Integration"")"
24230,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicyMetricTest.java,318,,"        assertEquals(tc.getDesiredSizeHistory(), ImmutableList.of(1, 2), ""desired=""+tc.getDesiredSizeHistory());"
24231,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicyMetricTest.java,319,,"        assertEquals(tc.getSizeHistory(), ImmutableList.of(0, 1, 2), ""sizes=""+tc.getSizeHistory());"
24232,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicyPoolSizeTest.java,110,,"        Assert.assertEquals((int)cluster.getSizeHistory().get(0), CLUSTER_INIITIAL_SIZE, ""history: ""+cluster.getSizeHistory());"
24233,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicyRebindTest.java,78,,"                .name(""myname"")"
24234,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicyReconfigurationTest.java,70,,"        Asserts.succeedsEventually(ImmutableMap.of(""timeout"", TIMEOUT_MS), currentSizeAsserter(tc, 3));"
24235,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicyTest.java,105,,"        Asserts.succeedsEventually(ImmutableMap.of(""timeout"", TIMEOUT_MS), currentSizeAsserter(resizable, targetSize));"
24236,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicyTest.java,246,,"    @Test(groups=""Integration"")"
24237,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/autoscaling/AutoScalerPolicyTest.java,429,,"        Asserts.succeedsEventually(MutableMap.of(""period"", 1, ""timeout"", TIMEOUT_MS), new Runnable() {"
24238,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/enricher/DeltaEnrichersTests.java,57,,"        @SuppressWarnings(""unchecked"")"
24239,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/enricher/DeltaEnrichersTests.java,59,,"                .configure(""producer"", producer)"
24240,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/enricher/DeltaEnrichersTests.java,60,,"                .configure(""source"", intSensor)"
24241,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/enricher/DeltaEnrichersTests.java,61,,"                .configure(""target"", deltaSensor));"
24242,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/enricher/HttpLatencyDetectorTest.java,76,,"    @Test(groups=""Integration"")"
24243,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/enricher/RebindEnricherTest.java,62,,"                .configure(""producer"", origApp)"
24244,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/enricher/RebindEnricherTest.java,63,,"                .configure(""source"", INT_METRIC)"
24245,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/enricher/RebindEnricherTest.java,64,,"                .configure(""target"", INT_METRIC2));"
24246,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/followthesun/FollowTheSunPolicySoakTest.java,86,,"    @Test(groups={""Integration""}) // takes ~2s"
24247,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/ha/ConnectionFailureDetectorTest.java,49,,"@Test(groups=""Integration"")"
24248,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/ha/ConnectionFailureDetectorTest.java,140,,"        assertEquals(events.size(), 1, ""events=""+events);"
24249,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/ha/ServiceFailureDetectorStabilizationTest.java,91,,"    @Test(groups=""Integration"") // Because slow"
24250,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/ha/ServiceFailureDetectorTest.java,83,,"    @Test(groups=""Integration"") // Has a 1 second wait"
24251,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/ha/ServiceFailureDetectorTest.java,102,,"        assertEquals(events.size(), 0, ""events=""+events);"
24252,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/ha/ServiceFailureDetectorTest.java,120,,"        ServiceProblemsLogic.updateProblemsIndicator(e1, ""test"", ""foo"");"
24253,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/ha/ServiceFailureDetectorTest.java,120,,"        ServiceProblemsLogic.updateProblemsIndicator(e1, ""test"", ""foo"");"
24254,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/ha/ServiceFailureDetectorTest.java,246,,"        EntityAsserts.assertAttributeEqualsContinually(ImmutableMap.of(""timeout"", 100), e1, TestEntity.SERVICE_STATE_ACTUAL, Lifecycle.RUNNING);"
24255,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/ha/ServiceReplacerTest.java,101,,"        e1.sensors().emit(HASensors.ENTITY_FAILED, new FailureDescriptor(e1, ""simulate failure""));"
24256,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/ha/ServiceReplacerTest.java,110,,"                assertEquals(((TestEntity)Iterables.getOnlyElement(newMembers)).getCallHistory(), ImmutableList.of(""start""));"
24257,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/ha/ServiceReplacerTest.java,116,,"    @Test(invocationCount=100, groups=""Integration"")"
24258,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/ha/ServiceRestarterTest.java,77,,"        e1.sensors().emit(HASensors.ENTITY_FAILED, new FailureDescriptor(e1, ""simulate failure""));"
24259,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/loadbalancing/ItemsInContainersGroupTest.java,62,,"                                input.getConfig(MockContainerEntity.MOCK_MEMBERSHIP) == ""ingroup"";"
24260,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/loadbalancing/LoadBalancingPolicyConcurrencyTest.java,82,,"    @Test(groups=""Broken"")"
24261,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/loadbalancing/LoadBalancingPolicyConcurrencyTest.java,88,,"            containers.add(newContainer(app, ""container""+i, 10, 30));"
24262,./TargetProjects/brooklyn-server/policy/src/test/java/org/apache/brooklyn/policy/loadbalancing/LoadBalancingPolicyConcurrencyTest.java,91,,"            newItemWithPeriodicWorkrates(app, containers.get(0), ""item""+i, 20);"
24263,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/ActivityApi.java,48,,"            @ApiParam(value = ""Task ID"", required = true) @PathParam(""task"") String taskId);"
24264,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/ActivityApi.java,48,,"            @ApiParam(value = ""Task ID"", required = true) @PathParam(""task"") String taskId);"
24265,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/AdjunctApi.java,63,,"            @ApiParam(value = ""Application ID or name"", required = true)"
24266,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/AdjunctApi.java,64,,"            @PathParam(""application"") final String application,"
24267,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/AdjunctApi.java,65,,"            @ApiParam(value = ""Entity ID or name"", required = true)"
24268,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/AdjunctApi.java,66,,"            @PathParam(""entity"") final String entityToken,"
24269,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/AdjunctApi.java,97,,"            @ApiResponse(code = 404, message = ""Could not find application, entity or adjunct"")"
24270,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/AdjunctApi.java,106,,"            @ApiParam(name = ""adjunct"", value = ""Adjunct ID or name"", required = true)"
24271,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/AdjunctApi.java,106,,"            @ApiParam(name = ""adjunct"", value = ""Adjunct ID or name"", required = true)"
24272,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/ApplicationApi.java,124,,"    @Path(""/{application}"")"
24273,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/ApplicationApi.java,136,,"            @PathParam(""application"") String application);"
24274,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/ApplicationApi.java,145,,"                    name = ""applicationSpec"","
24275,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/ApplicationApi.java,170,,"            @ApiResponse(code = 404, message = ""Undefined entity or location""),"
24276,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/ApplicationApi.java,174,,"            @ApiParam(name = ""plan"", value = ""Plan"", required = true) String yaml,"
24277,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/ApplicationApi.java,192,,"            @ApiParam(name = ""format"", value = ""Format eg broolyn-camp"", required = false)"
24278,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/BundleApi.java,62,,"        @ApiParam(name = ""detail"", value = ""Whether to include types and other detail info, default 'false'"", "
24279,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/BundleApi.java,63,,"        required = false, defaultValue = ""false"")"
24280,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/BundleApi.java,73,,"        @ApiParam(name = ""symbolicName"", value = ""Bundle name to query"", required = true)"
24281,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/BundleApi.java,73,,"        @ApiParam(name = ""symbolicName"", value = ""Bundle name to query"", required = true)"
24282,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/BundleApi.java,89,,"        @ApiParam(name = ""version"", value = ""Version to query"", required = true)"
24283,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/BundleApi.java,127,,"        @ApiParam(name = ""typeSymbolicName"", value = ""Type name to query"", required = true)"
24284,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/BundleApi.java,145,,"        @ApiParam(name = ""typeVersion"", value = ""Version to query (if different to bundle version)"", required = true)"
24285,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/BundleApi.java,178,,"        @ApiParam(name = ""force"", value = ""Whether to forcibly remove it, even if in use and/or errors"", required = false, defaultValue = ""false"")"
24286,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,60,,"    @ApiOperation(value = ""(deprecated)"", hidden = true, response = String.class)"
24287,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,62,,"            @ApiParam(name=""forceUpdate"", value=""Force update of catalog item (overwriting existing catalog items with same name and version)"")"
24288,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,62,,"            @ApiParam(name=""forceUpdate"", value=""Force update of catalog item (overwriting existing catalog items with same name and version)"")"
24289,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,63,,"            @QueryParam(""forceUpdate"") @DefaultValue(""false"") boolean forceUpdate);"
24290,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,88,,"            @ApiParam(name=""detail"", value=""Provide a wrapping details map"", required=false)"
24291,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,154,,"            notes = ""Version must exists, otherwise the API will return a 404. Alternatively, passing 'latest' will"" +"
24292,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,155,,"                    ""pick up the latest version for the given 'symbolicName'"""
24293,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,158,,"        @ApiResponse(code = 404, message = ""Entity not found"")"
24294,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,161,,"        @ApiParam(name = ""symbolicName"", value = ""The symbolic name of the application or template to delete"", required = true)"
24295,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,164,,"        @ApiParam(name = ""version"", value = ""The version identifier of the application or template to delete"", required = true)"
24296,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,200,,"        @ApiParam(name = ""policyId"", value = ""The ID of the policy to delete"", required = true)"
24297,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,220,,"        @ApiParam(name = ""locationId"", value = ""The ID of the location to delete"", required = true)"
24298,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,233,,"            responseContainer = ""List"")"
24299,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,235,,"        @ApiParam(name = ""regex"", value = ""Regular expression to search for"")"
24300,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,235,,"        @ApiParam(name = ""regex"", value = ""Regular expression to search for"")"
24301,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,237,,"        @ApiParam(name = ""fragment"", value = ""Substring case-insensitive to search for"")"
24302,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,237,,"        @ApiParam(name = ""fragment"", value = ""Substring case-insensitive to search for"")"
24303,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,239,,"        @ApiParam(name = ""allVersions"", value = ""Include all versions (defaults false, only returning the best version)"")"
24304,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,239,,"        @ApiParam(name = ""allVersions"", value = ""Include all versions (defaults false, only returning the best version)"")"
24305,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,385,,"        @ApiParam(name = ""itemId"", value = ""ID of catalog item (application, entity, policy, location)"", required=true)"
24306,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/CatalogApi.java,453,,"            @ApiParam(name = ""enricherId"", value = ""The ID of the enricher to retrieve"", required = true)"
24307,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/EffectorApi.java,57,,"            @ApiParam(name = ""application"", value = ""Application name"", required = true)"
24308,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/EffectorApi.java,59,,"            @ApiParam(name = ""entity"", value = ""Entity name"", required = true)"
24309,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/EntityApi.java,53,,"            @ApiParam(value = ""Application ID or name"", required = true)"
24310,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/EntityApi.java,54,,"            @PathParam(""application"") final String application);"
24311,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/EntityApi.java,61,,"            @ApiResponse(code = 404, message = ""Application or entity missing"")"
24312,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/EntityApi.java,66,,"            @ApiParam(value = ""Entity ID or name"", required = true)"
24313,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/EntityApi.java,67,,"            @PathParam(""entity"") String entity);"
24314,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/EntityConfigApi.java,56,,"            @ApiParam(value = ""Application ID or name"", required = true)"
24315,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/EntityConfigApi.java,57,,"            @PathParam(""application"") final String application,"
24316,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/EntityConfigApi.java,58,,"            @ApiParam(value = ""Entity ID or name"", required = true)"
24317,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/EntityConfigApi.java,59,,"            @PathParam(""entity"") final String entityToken);"
24318,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/EntityConfigApi.java,75,,"            @QueryParam(""skipResolution"") @DefaultValue(""false"") final Boolean skipResolution,"
24319,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/PolicyApi.java,51,,"            @ApiParam(value = ""Application ID or name"", required = true)"
24320,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/PolicyApi.java,52,,"            @PathParam(""application"") final String application,"
24321,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/PolicyApi.java,53,,"            @ApiParam(value = ""Entity ID or name"", required = true)"
24322,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/PolicyApi.java,54,,"            @PathParam(""entity"") final String entityToken);"
24323,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/PolicyApi.java,93,,"            @ApiResponse(code = 404, message = ""Could not find application, entity or policy"")"
24324,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/PolicyApi.java,102,,"            @ApiParam(name = ""policy"", value = ""Policy ID or name"", required = true)"
24325,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/PolicyApi.java,102,,"            @ApiParam(name = ""policy"", value = ""Policy ID or name"", required = true)"
24326,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/PolicyConfigApi.java,57,,"            @ApiParam(value = ""Application ID or name"", required = true)"
24327,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/PolicyConfigApi.java,58,,"            @PathParam(""application"") final String application,"
24328,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/PolicyConfigApi.java,59,,"            @ApiParam(value = ""Entity ID or name"", required = true)"
24329,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/PolicyConfigApi.java,60,,"            @PathParam(""entity"") final String entityToken,"
24330,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/PolicyConfigApi.java,61,,"            @ApiParam(value = ""Policy ID or name"", required = true)"
24331,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/PolicyConfigApi.java,62,,"            @PathParam(""policy"") final String policyToken);"
24332,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/SensorApi.java,57,,"            @ApiParam(value = ""Application ID or name"", required = true)"
24333,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/SensorApi.java,58,,"            @PathParam(""application"") final String application,"
24334,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/SensorApi.java,59,,"            @ApiParam(value = ""Entity ID or name"", required = true)"
24335,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/SensorApi.java,60,,"            @PathParam(""entity"") final String entityToken);"
24336,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/SensorApi.java,77,,"    @Path(""/{sensor}"")"
24337,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/SensorApi.java,80,,"            @ApiResponse(code = 404, message = ""Could not find application, entity or sensor"")"
24338,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/SensorApi.java,88,,"            @ApiParam(value = ""Sensor name"", required = true)"
24339,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/SensorApi.java,89,,"            @PathParam(""sensor"") String sensorName,"
24340,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/TypeApi.java,81,,"        @ApiParam(name = ""symbolicName"", value = ""Type name to query"", required = true)"
24341,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/TypeApi.java,84,,"        @ApiParam(name = ""version"", value = ""Version to query"", required = true)"
24342,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/UsageApi.java,58,,"                    name = ""start"","
24343,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/UsageApi.java,64,,"                    name = ""end"","
24344,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/UsageApi.java,65,,"                    value = ""timestamp of end marker for usage reporting in format UTC millis or yyyy-MM-dd'T'HH:mm:ssZ"","
24345,./TargetProjects/brooklyn-server/rest/rest-api/src/main/java/org/apache/brooklyn/rest/api/UsageApi.java,81,,"                    name = ""application"","
24346,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/ApplicationResource.java,273,,"            Object sensorsO = result.getExtraFields().get(""sensors"");"
24347,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/CatalogResource.java,189,,"        if (!Entitlements.isEntitled(mgmt().getEntitlementManager(), Entitlements.MODIFY_CATALOG_ITEM, StringAndArgument.of(symbolicName+(Strings.isBlank(version) ? """" : "":""+version), ""delete""))) {"
24348,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/CatalogResource.java,190,,"            throw WebResourceUtils.forbidden(""User '%s' is not authorized to modify catalog"","
24349,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/CatalogResource.java,273,,"            throw WebResourceUtils.forbidden(""User '%s' is not authorized to see catalog entry"","
24350,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/ServerResource.java,119,,"            throw WebResourceUtils.forbidden(""User '%s' is not authorized to perform this operation"", Entitlements.getEntitlementContext().user());"
24351,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/resources/UsageResource.java,65,,"            throw WebResourceUtils.forbidden(""User '%s' is not authorized to perform this operation"", Entitlements.getEntitlementContext().user());"
24352,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/transform/CatalogTransformer.java,105,,"                log.warn(""Unable to create spec for ""+item+"": ""+e, e);"
24353,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/transform/CatalogTransformer.java,160,,"            log.trace(""Unable to create policy spec for ""+item+"": ""+e, e);"
24354,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/transform/EntityTransformer.java,72,,"        URI applicationUri = serviceUriBuilder(ub, ApplicationApi.class, ""get"").build(entity.getApplicationId());"
24355,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/transform/LocationTransformer.java,82,,"        URI selfUri = serviceUriBuilder(ub, LocationApi.class, ""get"").build(id);"
24356,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/transform/PolicyTransformer.java,52,,"        URI applicationUri = serviceUriBuilder(ub, ApplicationApi.class, ""get"").build(entity.getApplicationId());"
24357,./TargetProjects/brooklyn-server/rest/rest-resources/src/main/java/org/apache/brooklyn/rest/util/MultiSessionAttributeAdapter.java,532,,"        if (r==null) return ""null"";"
24358,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/filter/HaHotCheckTest.java,59,,"        testResourceFetch(""/ha/method/ok"", 200);"
24359,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/filter/HaHotCheckTest.java,60,,"        testResourceFetch(""/ha/method/fail"", 200);"
24360,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/filter/HaHotCheckTest.java,61,,"        testResourceFetch(""/ha/class/fail"", 200);"
24361,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/filter/HaHotCheckTest.java,62,,"        testResourcePost(""/ha/post"", 204);"
24362,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/filter/HaHotCheckTest.java,63,,"        testResourcePost(""/server/shutdown"", 204);"
24363,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ActivityRestTest.java,155,,"        Response response = client().path(""/activities/""+t.getId())"
24364,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ActivityRestTest.java,189,,"        Assert.assertTrue(tasksContain(tasks, leaf), ""tasks should have included leaf ""+leaf+""; was ""+tasks);"
24365,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ActivityRestTest.java,208,,"        response = client().path(""/activities/""+leafGrandparent.getId()+""/children/recurse"")"
24366,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/AdjunctResourceTest.java,141,,"            ConfigSummary summary = client().path(ENDPOINT + policyId + ""/config/"" + invalidConfigName)"
24367,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApidocResourceTest.java,70,,"        String data = client().path(""/apidoc/swagger.json"").get(String.class);"
24368,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApidocResourceTest.java,90,,"        assertEquals(operations.size(), 2, ""ops=""+operations);"
24369,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceIntegrationTest.java,62,,"    @Test(groups=""Integration"")"
24370,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceTest.java,138,,"    private final ApplicationSpec simpleSpec = ApplicationSpec.builder().name(""simple-app"")"
24371,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceTest.java,140,,"                  new EntitySpec(""simple-ent"", RestMockSimpleEntity.class.getName()),"
24372,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceTest.java,141,,"                  new EntitySpec(""simple-group"", NameMatcherGroup.class.getName(), ImmutableMap.of(""namematchergroup.regex"", ""simple-ent""))"
24373,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceTest.java,143,,"          .locations(ImmutableSet.of(""localhost""))"
24374,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceTest.java,197,,"        assertTrue(response.getStatus() / 100 == 2, ""response is "" + response);"
24375,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceTest.java,205,,"    @Test(dependsOnMethods = { ""testDeployApplication"", ""testLocatedLocation"" })"
24376,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceTest.java,205,,"    @Test(dependsOnMethods = { ""testDeployApplication"", ""testLocatedLocation"" })"
24377,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceTest.java,224,,"        String yaml = ""{ name: simple-app-yaml, location: localhost, services: [ { serviceType: ""+BasicApplication.class.getCanonicalName()+"" } ] }"";"
24378,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceTest.java,226,,"        Response response = client().path(""/applications"")"
24379,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceTest.java,227,,"                .post(Entity.entity(yaml, ""application/x-yaml""));"
24380,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceTest.java,324,,"        Set<EntitySummary> children = client().path(entity.getLinks().get(""children""))"
24381,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceTest.java,367,,"        Map app = ((Collection<Map>)apps).stream().filter(m -> ""simple-app"".equals(m.get(""name""))).findFirst().orElse(null);"
24382,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceTest.java,389,,"                .query(""sensors"", ""[ service.state.expected, \""host.address\"" ]"")"
24383,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceTest.java,399,,"        Assert.assertEquals(entityDetails.get(""parentId""), app.get(""id""));"
24384,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceTest.java,465,,"                .query(""config"", ""*"")"
24385,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/ApplicationResourceTest.java,583,,"        assertEquals(result, ""foo4"");"
24386,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,143,,"                ""brooklyn.catalog:"","
24387,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,144,,"                ""  id: "" + symbolicName,"
24388,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,145,,"                ""  version: "" + TEST_VERSION,"
24389,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,146,,"                ""  itemType: entity"","
24390,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,147,,"                ""  name: My Catalog App"","
24391,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,148,,"                ""  description: My description"","
24392,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,149,,"                ""  icon_url: classpath:/org/apache/brooklyn/test/osgi/entities/icon.gif"","
24393,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,150,,"                ""  libraries:"","
24394,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,151,,"                ""  - url: "" + bundleUrl,"
24395,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,152,,"                ""  item:"","
24396,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,153,,"                ""    type: org.apache.brooklyn.core.test.entity.TestEntity"");"
24397,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,155,,"        Response response = client().path(""/catalog/bundles"")"
24398,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,156,,"                .header(HttpHeaders.CONTENT_TYPE, ""application/yaml"")"
24399,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,165,,"        TypeDetail entityItem = client().path(""/catalog/types/""+symbolicName + ""/"" + TEST_VERSION)"
24400,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,178,,"        List<TypeSummary> list2 = client().path(""/catalog/types"").get(new GenericType<List<TypeSummary>>() {});"
24401,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,180,,"        List<TypeSummary> list3 = client().path(""/catalog/types"").query(""supertype"", ""entity"").get(new GenericType<List<TypeSummary>>() {});"
24402,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,180,,"        List<TypeSummary> list3 = client().path(""/catalog/types"").query(""supertype"", ""entity"").get(new GenericType<List<TypeSummary>>() {});"
24403,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,191,,"        URI expectedIconUrl = URI.create(getEndpointAddress() + ""/catalog/types/"" + symbolicName + ""/"" + entityItem.getVersion()+""/icon"").normalize();"
24404,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,192,,"        assertEquals(entityItem.getDisplayName(), ""My Catalog App"");"
24405,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,193,,"        assertEquals(entityItem.getDescription(), ""My description"");"
24406,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,199,,"            @SuppressWarnings(""unchecked"")"
24407,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,231,,"                ""    type: "" + policyType);"
24408,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,355,,"        Response deleteResponse = client().path(""/catalog/bundles/""+locationItem.getContainingBundle().replaceAll("":"", ""/""))"
24409,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,527,,"        File f = Os.newTempFile(""osgi"", ""zip"");"
24410,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,530,,"                .header(HttpHeaders.CONTENT_TYPE, ""application/x-zip"")"
24411,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,551,,"        File f = createZip(ImmutableMap.<String, String>of(""catalog.bom"", Joiner.on(""\n"").join("
24412,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,618,,"                        ""  bundle: "" + bundle,"
24413,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,621,,"                        ""  name: "" + name,"
24414,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,634,,"                .header(HttpHeaders.CONTENT_TYPE, ""application/x-jar"")"
24415,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,963,,"                ""  description: "" + initialDescription,"
24416,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,1127,,"        final String symbolicName = ""test.duplicate.type.""+JavaClassNames.niceClassAndMethod();"
24417,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,1128,,"        final String entityName = symbolicName+"".type"";"
24418,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,1134,,"                ""  items:"","
24419,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,1135,,"                ""  - id: "" + entityName,"
24420,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,1136,,"                ""    itemType: entity"","
24421,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,1137,,"                ""    name: T"","
24422,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,1138,,"                ""    item:"","
24423,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,1139,,"                ""      type: org.apache.brooklyn.core.test.entity.TestEntity"","
24424,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,1387,,"                ImmutableMap.of(""name"", ""unp2"", ""label"", ""unp 2"", ""pinned"", false),"
24425,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,1387,,"                ImmutableMap.of(""name"", ""unp2"", ""label"", ""unp 2"", ""pinned"", false),"
24426,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/BundleAndTypeResourcesTest.java,1387,,"                ImmutableMap.of(""name"", ""unp2"", ""label"", ""unp 2"", ""pinned"", false),"
24427,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourcePerformanceTest.java,78,,"                    ""    description: My description"","
24428,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourcePerformanceTest.java,80,,"                    ""    item:"","
24429,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourcePerformanceTest.java,112,,"    @Test(groups={""Integration""})"
24430,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,146,,"                ""brooklyn.catalog:"","
24431,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,147,,"                ""  id: "" + itemSymbolicName,"
24432,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,148,,"                ""  version: "" + TEST_VERSION,"
24433,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,149,,"                ""  itemType: entity"","
24434,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,150,,"                ""  name: My Catalog App"","
24435,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,151,,"                ""  description: My description"","
24436,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,152,,"                ""  icon_url: classpath:/org/apache/brooklyn/test/osgi/entities/icon.gif"","
24437,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,153,,"                ""  libraries:"","
24438,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,154,,"                ""  - url: "" + bundleUrl,"
24439,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,155,,"                ""  item:"","
24440,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,156,,"                ""    type: org.apache.brooklyn.core.test.entity.TestEntity"");"
24441,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,158,,"        Response response = client().path(""/catalog"")"
24442,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,164,,"                .planYamlPredicate(StringPredicates.containsLiteral(""org.apache.brooklyn.core.test.entity.TestEntity""))"
24443,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,165,,"                .name(""My Catalog App"")"
24444,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,166,,"                .description(""My description"")"
24445,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,196,,"                ""    type: "" + policyType);"
24446,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,210,,"        List<CatalogEntitySummary> entities = client().path(""/catalog/entities"")"
24447,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,227,,"                .query(""fragment"", ""vaNIllasOFTWAREpROCESS"").get(new GenericType<List<CatalogEntitySummary>>() {});"
24448,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,477,,"        Response deleteResponse = client().path(""/catalog/entities/""+symbolicName+""/""+TEST_VERSION)"
24449,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,495,,"        addTestCatalogItem(symbolicName, ""template"", TEST_VERSION, serviceType);"
24450,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,496,,"        addTestCatalogItem(symbolicName, ""template"", ""2.0"", serviceType);"
24451,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,498,,"            List<CatalogEntitySummary> applications = client().path(""/catalog/applications"")"
24452,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,499,,"                    .query(""fragment"", symbolicName).query(""allVersions"", ""true"").get(new GenericType<List<CatalogEntitySummary>>() {});"
24453,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,499,,"                    .query(""fragment"", symbolicName).query(""allVersions"", ""true"").get(new GenericType<List<CatalogEntitySummary>>() {});"
24454,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,508,,"                    .query(""fragment"", ""basicapp"").query(""allVersions"", ""true"").get(new GenericType<List<CatalogEntitySummary>>() {});"
24455,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,587,,"        File f = Os.newTempFile(""osgi"", ""zip"");"
24456,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,590,,"                .header(HttpHeaders.CONTENT_TYPE, ""application/x-zip"")"
24457,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,611,,"        File f = createZip(ImmutableMap.<String, String>of(""catalog.bom"", Joiner.on(""\n"").join("
24458,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,671,,"        String version = ""0.1.0"";"
24459,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,699,,"                .libraryNames(new VersionedName(""org.apache.brooklyn.test"", version))"
24460,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,760,,"                        ""  bundle: "" + bundle,"
24461,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,763,,"                        ""  name: "" + name,"
24462,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,776,,"                .header(HttpHeaders.CONTENT_TYPE, ""application/x-jar"")"
24463,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,1000,,"        CatalogItemSummary application = client().path(""/catalog/applications/"" + symbolicName + ""/latest"")"
24464,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,1000,,"        CatalogItemSummary application = client().path(""/catalog/applications/"" + symbolicName + ""/latest"")"
24465,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/CatalogResourceTest.java,1141,,"                ""  description: "" + initialDescription,"
24466,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/DescendantsTest.java,72,,"        descs = client().path(""/applications/""+application.getApplicationId()+""/descendants"")"
24467,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/DescendantsTest.java,72,,"        descs = client().path(""/applications/""+application.getApplicationId()+""/descendants"")"
24468,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/DescendantsTest.java,78,,"            .query(""typeRegex"", "".*\\.RestMockSimpleEntity"")"
24469,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/DescendantsTest.java,78,,"            .query(""typeRegex"", "".*\\.RestMockSimpleEntity"")"
24470,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/EffectorResourceTest.java,74,,"        String path = ""/applications/""+app.getId()+""/entities/""+entity.getId()+""/effectors/""+""myEffector"";"
24471,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/EffectorResourceTest.java,74,,"        String path = ""/applications/""+app.getId()+""/entities/""+entity.getId()+""/effectors/""+""myEffector"";"
24472,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/EffectorResourceTest.java,74,,"        String path = ""/applications/""+app.getId()+""/entities/""+entity.getId()+""/effectors/""+""myEffector"";"
24473,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/EffectorResourceTest.java,74,,"        String path = ""/applications/""+app.getId()+""/entities/""+entity.getId()+""/effectors/""+""myEffector"";"
24474,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/EffectorResourceTest.java,112,,"        String path = ""/applications/""+app.getId()+""/entities/""+entity.getId()+""/effectors/""+""sleepEffector"";"
24475,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/EntityConfigResourceTest.java,72,,"                  entities(ImmutableSet.of(new EntitySpec(""simple-ent"", RestMockSimpleEntity.class.getName(), ImmutableMap.of(""install.version"", ""1.0.0""))))."
24476,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/EntityRelationsResourceTest.java,57,,"                        new EntitySpec(""simple-ent"", RestMockSimpleEntity.class.getName()),"
24477,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/EntityRelationsResourceTest.java,58,,"                        new EntitySpec(""simple-group"", NameMatcherGroup.class.getName(), ImmutableMap.of(""namematchergroup.regex"", ""simple-ent""))"
24478,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/EntityRelationsResourceTest.java,97,,"        assertEquals(simpleEntRelationSummary.getType().getTarget(), ""targetter"");"
24479,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/EntityRelationsResourceTest.java,98,,"        assertEquals(simpleEntRelationSummary.getType().getSource(), ""target"");"
24480,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/EntityRelationsResourceTest.java,129,,"        Map app = ((Collection<Map>)apps).stream().filter(m -> ""simple-app"".equals(m.get(""name""))).findFirst().orElse(null);"
24481,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/EntityResourceTest.java,132,,"        entity.tags().addTag(""foo"");"
24482,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/EntityResourceTest.java,203,,"        Assert.assertFalse(raw.contains(entity.getManagementContext().getManagementNodeId()), ""unexpected app tag, includes too much mgmt info: ""+raw);"
24483,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/LocationResourceTest.java,94,,"        assertEquals(location.getSpec(), ""brooklyn.catalog:""+legacyLocationName+"":""+BasicBrooklynCatalog.NO_VERSION);"
24484,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/LocationResourceTest.java,95,,"        assertTrue(addedLegacyLocationUri.getPath().startsWith(""/locations/""));"
24485,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/LocationResourceTest.java,109,,"        Response response = client().path(""/catalog"")"
24486,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/LocationResourceTest.java,127,,"            ""  version: "" + locationVersion,"
24487,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/LocationResourceTest.java,128,,"            ""  items:"","
24488,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/LocationResourceTest.java,129,,"            ""  - id: "" + webIconLocation ,"
24489,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/LocationResourceTest.java,130,,"            ""    itemType: location"","
24490,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/LocationResourceTest.java,131,,"            ""    item:"","
24491,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/LocationResourceTest.java,145,,"    @SuppressWarnings(""deprecation"")"
24492,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/LocationResourceTest.java,167,,"        log.info(""added, at: "" + addedCatalogItemUri);"
24493,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/LocationResourceTest.java,170,,"        CatalogLocationSummary locationItem = client().path(""/catalog/locations/""+locationName + ""/"" + locationVersion)"
24494,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/LocationResourceTest.java,172,,"        log.info("" item: "" + locationItem);"
24495,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/LocationResourceTest.java,174,,"        log.info("" summary: "" + locationSummary);"
24496,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/LogbookResourceTest.java,49,,"@Test(singleThreaded = true, suiteName = ""LogbookResourceTest"")"
24497,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/LogbookResourceTest.java,88,,"                .path(""/logbook"")"
24498,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/PolicyResourceTest.java,103,,"            PolicyConfigSummary summary = client().path(ENDPOINT + policyId + ""/config/"" + invalidConfigName)"
24499,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/SensorResourceTest.java,135,,"                assertEquals(currentState.get(sensor), ""12345 frogs"");"
24500,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/SensorResourceTest.java,298,,"        doGetSensorTest(""myMgmt"", Map.class, ImmutableMap.of(""type"", ManagementContext.class.getName()));"
24501,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/SensorResourceTest.java,341,,"        entity.sensors().set(Sensors.newSensor(Task.class, ""myTask""), task);"
24502,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/UsageResourceTest.java,101,,"        Response response = client().path(""/usage/applications"").get();"
24503,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/UsageResourceTest.java,108,,"        response = client().path(""/usage/applications"").query(""start"", 0).query(""end"", preStart.getTime().getTime()-1).get();"
24504,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/UsageResourceTest.java,108,,"        response = client().path(""/usage/applications"").query(""start"", 0).query(""end"", preStart.getTime().getTime()-1).get();"
24505,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/UsageResourceTest.java,111,,"        assertTrue(Iterables.isEmpty(usages), ""usages=""+usages);"
24506,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/UsageResourceTest.java,167,,"        Response response = client().path(""/usage/applications/"" + appId).get();"
24507,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/UsageResourceTest.java,177,,"        response = client().path(""/usage/applications/"" + appId).query(""start"", ""9999-01-01T00:00:00+0100"").get();"
24508,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/resources/UsageResourceTest.java,230,,"        Response response = client().path(""/usage/machines"").get();"
24509,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/security/provider/LdapSecurityProviderLiveTest.java,38,,"    @Test(groups = {""Live""})"
24510,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/util/BrooklynRestResourceUtilsTest.java,72,,"                .name(""myname"")"
24511,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/util/BrooklynRestResourceUtilsTest.java,92,,"        createAppFromCatalog(""app.noop"", true);"
24512,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/util/BrooklynRestResourceUtilsTest.java,101,,"    @SuppressWarnings(""deprecation"")"
24513,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/util/BrooklynRestResourceUtilsTest.java,141,,"        createEntityFromCatalog(""app.basic"", true);"
24514,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/util/json/BrooklynJacksonSerializerTest.java,182,,"        Assert.assertFalse(result.toString().contains(""error""), ""Shouldn't have had an error, instead got: ""+result);"
24515,./TargetProjects/brooklyn-server/rest/rest-resources/src/test/java/org/apache/brooklyn/rest/util/json/BrooklynJacksonSerializerTest.java,182,,"        Assert.assertFalse(result.toString().contains(""error""), ""Shouldn't have had an error, instead got: ""+result);"
24516,./TargetProjects/brooklyn-server/rest/rest-server/src/test/java/org/apache/brooklyn/rest/CorsFilterLauncherTest.java,54,,"        final String shouldAllowOrigin = ""http://foo.bar.com"";"
24517,./TargetProjects/brooklyn-server/rest/rest-server/src/test/java/org/apache/brooklyn/rest/CorsFilterLauncherTest.java,60,,"        HttpToolResponse response = HttpTool.execAndConsume(client, httpOptionsRequest(""server/ha/state"", ""GET"", shouldAllowOrigin));"
24518,./TargetProjects/brooklyn-server/rest/rest-server/src/test/java/org/apache/brooklyn/rest/CorsFilterLauncherTest.java,60,,"        HttpToolResponse response = HttpTool.execAndConsume(client, httpOptionsRequest(""server/ha/state"", ""GET"", shouldAllowOrigin));"
24519,./TargetProjects/brooklyn-server/rest/rest-server/src/test/java/org/apache/brooklyn/rest/CorsFilterLauncherTest.java,65,,"                .addHeader(""Origin"", shouldAllowOrigin)"
24520,./TargetProjects/brooklyn-server/rest/rest-server/src/test/java/org/apache/brooklyn/rest/CorsFilterLauncherTest.java,93,,"        HttpToolResponse response = HttpTool.execAndConsume(client, httpOptionsRequest(""script/groovy"", ""POST"", shouldAllowOrigin));"
24521,./TargetProjects/brooklyn-server/rest/rest-server/src/test/java/org/apache/brooklyn/rest/CorsFilterLauncherTest.java,93,,"        HttpToolResponse response = HttpTool.execAndConsume(client, httpOptionsRequest(""script/groovy"", ""POST"", shouldAllowOrigin));"
24522,./TargetProjects/brooklyn-server/rest/rest-server/src/test/java/org/apache/brooklyn/rest/CorsFilterLauncherTest.java,133,,"        assertEquals(response.getHeaderLists().get(HEADER_AC_ALLOW_HEADERS).get(0), ""x-csrf-token"", ""Should have asked and allowed x-csrf-token header from "" + shouldAllowOrigin);"
24523,./TargetProjects/brooklyn-server/rest/rest-server/src/test/java/org/apache/brooklyn/rest/CsrfTokenFilterLauncherTest.java,55,,"            client, URI.create(getBaseUriRest() + ""server/ha/state""),"
24524,./TargetProjects/brooklyn-server/rest/rest-server/src/test/java/org/apache/brooklyn/rest/HaMasterCheckFilterTest.java,71,,"    @Test(groups = ""Integration"")"
24525,./TargetProjects/brooklyn-server/rest/rest-server/src/test/java/org/apache/brooklyn/rest/entitlement/EntityConfigApiEntitlementsTest.java,60,,"        assertEquals(httpGet(""myCustom"", path), val);"
24526,./TargetProjects/brooklyn-server/rest/rest-server/src/test/java/org/apache/brooklyn/rest/entitlement/SensorApiEntitlementsTest.java,63,,"        assertEquals(httpGet(""myCustom"", path), val);"
24527,./TargetProjects/brooklyn-server/rest/rest-server/src/test/java/org/apache/brooklyn/rest/util/json/BrooklynJacksonSerializerIntegrationTest.java,93,,"    @Test(groups=""Integration"") //because of time"
24528,./TargetProjects/brooklyn-server/server-cli/src/main/java/org/apache/brooklyn/cli/ItemLister.java,131,,"                mkdir(parentDir, ""entities"");"
24529,./TargetProjects/brooklyn-server/server-cli/src/main/java/org/apache/brooklyn/cli/ItemLister.java,132,,"                mkdir(parentDir, ""policies"");"
24530,./TargetProjects/brooklyn-server/server-cli/src/main/java/org/apache/brooklyn/cli/ItemLister.java,133,,"                mkdir(parentDir, ""enrichers"");"
24531,./TargetProjects/brooklyn-server/server-cli/src/main/java/org/apache/brooklyn/cli/ItemLister.java,134,,"                mkdir(parentDir, ""locations"");"
24532,./TargetProjects/brooklyn-server/server-cli/src/main/java/org/apache/brooklyn/cli/ItemLister.java,163,,"                    String type = (String) entity.get(""type"");"
24533,./TargetProjects/brooklyn-server/server-cli/src/main/java/org/apache/brooklyn/cli/ItemLister.java,164,,"                    String name = (String) entity.get(""name"");"
24534,./TargetProjects/brooklyn-server/server-cli/src/main/java/org/apache/brooklyn/cli/ItemLister.java,166,,"                    Files.write(entityHtml, new File(Os.mergePaths(outputFolder, ""entities"", type + "".html"")), Charsets.UTF_8);"
24535,./TargetProjects/brooklyn-server/server-cli/src/main/java/org/apache/brooklyn/cli/Main.java,327,,"        @Option(name = { ""--persistenceLocation"" }, title = ""persistence location"","
24536,./TargetProjects/brooklyn-server/server-cli/src/main/java/org/apache/brooklyn/cli/lister/ItemDescriptors.java,119,,"            result.put(""name"", catalogAnnotation.name());"
24537,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CliTest.java,156,,"        assertEquals(entities.size(), 1, ""entities=""+entities);"
24538,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CliTest.java,246,,"        BrooklynCommand command = buildCli().parse(""launch"", "
24539,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CliTest.java,247,,"                ""--app"", ""my.App"", "
24540,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CliTest.java,248,,"                ""--location"", ""localhost"","
24541,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CliTest.java,248,,"                ""--location"", ""localhost"","
24542,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CliTest.java,251,,"                ""--noConsole"", ""--noConsoleSecurity"", ""--stopOnKeyPress"", "
24543,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CliTest.java,315,,"        assertTrue(command instanceof HelpCommand, ""Command is: ""+command);"
24544,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CliTest.java,482,,"        BrooklynCommand command = cli.parse(""generate-password"", ""--user"", ""myname"");"
24545,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CliTest.java,482,,"        BrooklynCommand command = cli.parse(""generate-password"", ""--user"", ""myname"");"
24546,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CliTest.java,482,,"        BrooklynCommand command = cli.parse(""generate-password"", ""--user"", ""myname"");"
24547,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CliTest.java,526,,"        List<String> stdoutLines = runCommand(ImmutableList.of(""info""), """");"
24548,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CliTest.java,529,,"            assertTrue(stdoutLines.contains(line), ""out=""+stdoutLines);"
24549,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CloudExplorerLiveTest.java,65,,"    @Test(groups={""Live"", ""Live-sanity""})"
24550,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CloudExplorerLiveTest.java,65,,"    @Test(groups={""Live"", ""Live-sanity""})"
24551,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CloudExplorerLiveTest.java,67,,"        call(""cloud-compute"", ""list-instances"", ""--location"", ""jclouds:aws-ec2:eu-west-1"");"
24552,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CloudExplorerLiveTest.java,67,,"        call(""cloud-compute"", ""list-instances"", ""--location"", ""jclouds:aws-ec2:eu-west-1"");"
24553,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CloudExplorerLiveTest.java,69,,"        String errmsg = ""stdout=""+stdout+""; stderr=""+stderr;"
24554,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CloudExplorerLiveTest.java,69,,"        String errmsg = ""stdout=""+stdout+""; stderr=""+stderr;"
24555,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CloudExplorerLiveTest.java,79,,"        call(""cloud-compute"", ""list-images"", ""--location"", ""jclouds:softlayer:ams01"");"
24556,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CloudExplorerLiveTest.java,91,,"        assertTrue(imageLines.get(0).matches("".*id=.*providerId=.*os=.*description=.*""), ""line=""+imageLines.get(0)+""; ""+errmsg);"
24557,./TargetProjects/brooklyn-server/server-cli/src/test/java/org/apache/brooklyn/cli/CloudExplorerLiveTest.java,226,,"        assertEquals(lines.get(nextLineCount++), ""Location {"", ""lineNum=""+nextLineCount+""; "" + errmsg);"
24558,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/brooklynnode/BrooklynNodeSshDriver.java,354,,"        newScript(ImmutableMap.of(""usePidFile"", "
24559,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/java/JavaAppUtils.java,148,,"                        .attributeName(""HeapMemoryUsage"")"
24560,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/java/VanillaJavaAppSshDriver.java,98,,"            ArchiveUtils.deploy(MutableMap.<String, Object>of(), entry, machine, getRunDir(), Os.mergePaths(getRunDir(), ""lib""), destFile);"
24561,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/AbstractSoftwareProcessSshDriver.java,198,,"        String mutexId = ""installation lock at host"";"
24562,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/AbstractSoftwareProcessSshDriver.java,537,,"                            BashCommands.sudoAsUser(processOwner, ""test -f ""+pidFile) + "" || exit 1"","
24563,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/AbstractSoftwareProcessSshDriver.java,537,,"                            BashCommands.sudoAsUser(processOwner, ""test -f ""+pidFile) + "" || exit 1"","
24564,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/AbstractSoftwareProcessWinRmDriver.java,120,,"                .useMutex(getLocation().mutexes(), ""installation lock at host"", ""installing ""+elvis(entity,this))"
24565,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/SoftwareProcessDriverLifecycleEffectorTasks.java,63,,"            log.debug(""restart of ""+entity()+"" requested be applied at machine level"");"
24566,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcess.java,49,,"        ""config['""+BrooklynConfigKeys.ONBOX_BASE_DIR.getName()+""']!"" +"
24567,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcess.java,49,,"        ""config['""+BrooklynConfigKeys.ONBOX_BASE_DIR.getName()+""']!"" +"
24568,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/lifecycle/MachineLifecycleEffectorTasks.java,1077,,"            log.debug(""No machine decommissioning necessary for ""+entity()+"" - no locations"");"
24569,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/lifecycle/ScriptHelper.java,70,,"    @SuppressWarnings(""rawtypes"")"
24570,./TargetProjects/brooklyn-server/software/base/src/main/java/org/apache/brooklyn/entity/software/base/lifecycle/ScriptHelper.java,95,,"    @SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
24571,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/AbstractEc2LiveTest.java,67,,"    @Test(groups = {""Live""})"
24572,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/AbstractEc2LiveTest.java,70,,"        runTest(ImmutableMap.of(""imageId"", ""us-east-1/ami-5e12dc36"", ""loginUser"", ""admin"", ""hardwareId"", SMALL_HARDWARE_ID));"
24573,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/AbstractEc2LiveTest.java,70,,"        runTest(ImmutableMap.of(""imageId"", ""us-east-1/ami-5e12dc36"", ""loginUser"", ""admin"", ""hardwareId"", SMALL_HARDWARE_ID));"
24574,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/AbstractEc2LiveTest.java,70,,"        runTest(ImmutableMap.of(""imageId"", ""us-east-1/ami-5e12dc36"", ""loginUser"", ""admin"", ""hardwareId"", SMALL_HARDWARE_ID));"
24575,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/AbstractOpenstackLiveTest.java,67,,"            ""osFamily"", ""centos"","
24576,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/brooklynnode/BrooklynNodeIntegrationTest.java,125,,"        pseudoBrooklynPropertiesFile = Os.newTempFile(""brooklynnode-test"", "".properties"");"
24577,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/brooklynnode/BrooklynNodeIntegrationTest.java,125,,"        pseudoBrooklynPropertiesFile = Os.newTempFile(""brooklynnode-test"", "".properties"");"
24578,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/brooklynnode/BrooklynNodeIntegrationTest.java,174,,"    @Test(groups={""Integration"", ""Broken""})"
24579,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/brooklynnode/BrooklynNodeIntegrationTest.java,174,,"    @Test(groups={""Integration"", ""Broken""})"
24580,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/brooklynnode/BrooklynNodeIntegrationTest.java,178,,"        log.info(""started ""+app+"" containing ""+brooklynNode+"" for ""+JavaClassNames.niceClassAndMethod());"
24581,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/brooklynnode/BrooklynNodeIntegrationTest.java,178,,"        log.info(""started ""+app+"" containing ""+brooklynNode+"" for ""+JavaClassNames.niceClassAndMethod());"
24582,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/brooklynnode/BrooklynNodeIntegrationTest.java,178,,"        log.info(""started ""+app+"" containing ""+brooklynNode+"" for ""+JavaClassNames.niceClassAndMethod());"
24583,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/brooklynnode/BrooklynNodeIntegrationTest.java,190,,"                .configure(BrooklynNode.BROOKLYN_GLOBAL_PROPERTIES_CONTENTS, ""abc=def""));"
24584,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/brooklynnode/BrooklynNodeIntegrationTest.java,266,,"        String apps = HttpTestUtils.getContent(webConsoleUri.toString()+""/v1/applications"");"
24585,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/brooklynnode/BrooklynNodeIntegrationTest.java,267,,"        List<String> appType = parseJsonList(apps, ImmutableList.of(""spec"", ""type""), String.class);"
24586,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/brooklynnode/BrooklynNodeIntegrationTest.java,267,,"        List<String> appType = parseJsonList(apps, ImmutableList.of(""spec"", ""type""), String.class);"
24587,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/brooklynnode/BrooklynNodeIntegrationTest.java,305,,"        File destDir = new File(new File(tempDir, ""lib""), ""dropins"");"
24588,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/brooklynnode/CallbackEntityHttpClient.java,70,,"        throw new IllegalStateException(""Method call not expected"");"
24589,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/brooklynnode/SelectMasterEffectorTest.java,190,,"                    checkRequest(input, HttpPost.METHOD_NAME, ""/v1/server/ha/priority"", ""priority"", ""1"");"
24590,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/java/EntityPollingTest.java,145,,"        jmxService = new JmxService(""localhost"", 40123);"
24591,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/java/EntityPollingTest.java,146,,"        jmxService.registerMBean(ImmutableMap.of(attributeName, ""myval""), objectName);"
24592,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/java/JavaOptsTest.java,84,,"            .configure(""main"", ""my.Main"").configure(""useJmx"", false));"
24593,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/java/JavaOptsTest.java,84,,"            .configure(""main"", ""my.Main"").configure(""useJmx"", false));"
24594,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/java/JavaOptsTest.java,84,,"            .configure(""main"", ""my.Main"").configure(""useJmx"", false));"
24595,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/java/JavaOptsTest.java,89,,"        List<String> expectedCmds = ImmutableList.of(String.format(""java $JAVA_OPTS -cp \""%1$s/lib\"" my.Main  >> %1$s/console 2>&1 </dev/null &"", runDir));"
24596,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/java/JavaOptsTest.java,116,,"        Map<String,String> expectedEnvs = ImmutableMap.<String,String>of(""JAVA_OPTS"", expectedJavaOpts);"
24597,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/java/JavaSoftwareProcessSshDriverIntegrationTest.java,76,,"    @Test(groups = ""Integration"")"
24598,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/java/VanillaJavaAppTest.java,108,,"            .configure(""main"", ""my.Main"").configure(""classpath"", ImmutableList.of(""c1"", ""c2""))"
24599,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/java/VanillaJavaAppTest.java,108,,"            .configure(""main"", ""my.Main"").configure(""classpath"", ImmutableList.of(""c1"", ""c2""))"
24600,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/java/VanillaJavaAppTest.java,109,,"            .configure(""args"", ImmutableList.of(""a1"", ""a2"")));"
24601,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/java/VanillaJavaAppTest.java,116,,"    @Test(groups={""WIP"", ""Integration""})"
24602,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/java/VanillaJavaAppTest.java,147,,"        Asserts.succeedsEventually(MutableMap.of(""timeout"", TIMEOUT_MS), new Runnable() {"
24603,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/machine/SetHostnameCustomizerTest.java,66,,"                .configure(""address"", ""4.3.2.1""));"
24604,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/machine/SetHostnameCustomizerTest.java,66,,"                .configure(""address"", ""4.3.2.1""));"
24605,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SameServerDriverLifecycleEffectorTasksTest.java,71,,"                ""expected="" + Iterables.toString(expected) + "", actual="" + Iterables.toString(requiredPorts));"
24606,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SameServerDriverLifecycleEffectorTasksTest.java,71,,"                ""expected="" + Iterables.toString(expected) + "", actual="" + Iterables.toString(requiredPorts));"
24607,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareEffectorTest.java,87,,"    @Test(groups=""Integration"")"
24608,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessEntityLatchTest.java,85,,"    private static final ImmutableList<String> SOFTWARE_PROCESS_START_TASKS = ImmutableList.of(""setup"", ""copyInstallResources"", ""install"", ""customize"", ""copyRuntimeResources"", ""launch"");"
24609,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessEntityLatchTest.java,85,,"    private static final ImmutableList<String> SOFTWARE_PROCESS_START_TASKS = ImmutableList.of(""setup"", ""copyInstallResources"", ""install"", ""customize"", ""copyRuntimeResources"", ""launch"");"
24610,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessEntityLatchTest.java,85,,"    private static final ImmutableList<String> SOFTWARE_PROCESS_START_TASKS = ImmutableList.of(""setup"", ""copyInstallResources"", ""install"", ""customize"", ""copyRuntimeResources"", ""launch"");"
24611,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessEntityLatchTest.java,102,,"                .configure(""address"", ""localhost""));"
24612,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessEntityLatchTest.java,121,,"    @Test(dataProvider=""latchAndTaskNamesProvider"")"
24613,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessEntityLatchTest.java,143,,"        final AttributeSensor<Object> latchSensor = Sensors.newSensor(Object.class, ""latch"");"
24614,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessEntityLatchTest.java,148,,"        final Task<Void> startTask = Entities.invokeEffector(app, app, MyService.START, ImmutableMap.of(""locations"", ImmutableList.of(loc)));"
24615,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessEntityTest.java,232,,"        Assert.assertEquals(d.events, ImmutableList.of(""setup"", ""copyInstallResources"", ""install"", ""customize"", ""copyRuntimeResources"", ""launch"", ""stop""));"
24616,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessRebindNotRunningEntityTest.java,150,,"    @Test(dataProvider=""terminateOrigManagementContextProvider"")"
24617,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessRebindNotRunningEntityTest.java,161,,"                .configure(VanillaSoftwareProcess.LAUNCH_COMMAND, ""myLaunch"")"
24618,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessRebindNotRunningEntityTest.java,162,,"                .configure(VanillaSoftwareProcess.CHECK_RUNNING_COMMAND, ""myCheckRunning""));"
24619,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessSshDriverIntegrationTest.java,92,,"    @Test(groups=""Integration"")"
24620,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessSshDriverIntegrationTest.java,118,,"        assertTrue(installDir.startsWith(""/tmp/brooklyn-""+Os.user()+""/installs/""), ""installed in ""+installDir);"
24621,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessSshDriverIntegrationTest.java,280,,"                .configure(SoftwareProcess.INSTALL_FILES, MutableMap.of(""classpath://org/apache/brooklyn/entity/software/base/frogs.txt"", ""frogs.txt""))"
24622,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessStopsDuringStartTest.java,114,,"        assertEquals(loc.getCalls(), ImmutableList.of(""obtain"", ""release""));"
24623,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessStopsDuringStartTest.java,114,,"        assertEquals(loc.getCalls(), ImmutableList.of(""obtain"", ""release""));"
24624,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessSubclassTest.java,76,,"            callHistory.add(""doStart"");"
24625,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/SoftwareProcessSubclassTest.java,82,,"            callHistory.add(""doStop"");"
24626,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessAndChildrenIntegrationTest.java,80,,"    @Test(groups = ""Integration"")"
24627,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessAndChildrenIntegrationTest.java,87,,"        Assert.assertTrue(startTime >= PARENT_TASK_SLEEP_LENGTH_SECS*1000 - EARLY_RETURN_GRACE_MS, ""startTime=""+Time.makeTimeStringRounded(startTime));"
24628,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessIntegrationTest.java,63,,"    @Test(groups = ""Integration"")"
24629,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessIntegrationTest.java,68,,"                .configure(VanillaSoftwareProcess.INSTALL_COMMAND, ""echo installCommand >> ""+runRecord.toAbsolutePath())"
24630,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessIntegrationTest.java,81,,"        assertEquals(lines.get(0), ""preInstallCommand"", ""lines=""+lines);"
24631,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessIntegrationTest.java,82,,"        assertEquals(lines.get(1), ""installCommand"", ""lines=""+lines);"
24632,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessIntegrationTest.java,143,,"        Files.write(downloadArtifact, ""my download artifact"".getBytes());"
24633,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessIntegrationTest.java,149,,"                    .configure(VanillaSoftwareProcess.CHECK_RUNNING_COMMAND, ""echo running""));"
24634,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessIntegrationTest.java,155,,"            Path installCompletionMarker = FileSystems.getDefault().getPath(entity.getAttribute(VanillaSoftwareProcess.INSTALL_DIR), ""BROOKLYN"");"
24635,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessIntegrationTest.java,156,,"            assertTrue(Files.isRegularFile(installCompletionMarker), ""file=""+installCompletionMarker);"
24636,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessIntegrationTest.java,167,,"                .configure(VanillaSoftwareProcess.LAUNCH_COMMAND, ""echo launching"")"
24637,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessStreamsIntegrationTest.java,52,,"                .configure(VanillaSoftwareProcess.PRE_INSTALL_COMMAND, ""echo "" + cmds.get(""pre-install-command""))"
24638,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessTest.java,87,,"                .configure(VanillaSoftwareProcess.PRE_INSTALL_COMMAND, ""preInstallCommand"")"
24639,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessTest.java,88,,"                .configure(VanillaSoftwareProcess.INSTALL_COMMAND, ""installCommand"")"
24640,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessTest.java,89,,"                .configure(VanillaSoftwareProcess.POST_INSTALL_COMMAND, ""postInstallCommand"")"
24641,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessTest.java,90,,"                .configure(VanillaSoftwareProcess.PRE_CUSTOMIZE_COMMAND, ""preCustomizeCommand"")"
24642,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessTest.java,91,,"                .configure(VanillaSoftwareProcess.CUSTOMIZE_COMMAND, ""customizeCommand"")"
24643,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessTest.java,92,,"                .configure(VanillaSoftwareProcess.POST_CUSTOMIZE_COMMAND, ""postCustomizeCommand"")"
24644,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessTest.java,93,,"                .configure(VanillaSoftwareProcess.PRE_LAUNCH_COMMAND, ""preLaunchCommand"")"
24645,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessTest.java,94,,"                .configure(VanillaSoftwareProcess.LAUNCH_COMMAND, ""launchCommand"")"
24646,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessTest.java,95,,"                .configure(VanillaSoftwareProcess.POST_LAUNCH_COMMAND, ""postLaunchCommand"")"
24647,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessTest.java,96,,"                .configure(VanillaSoftwareProcess.CHECK_RUNNING_COMMAND, ""checkRunningCommand"")"
24648,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaSoftwareProcessTest.java,97,,"                .configure(VanillaSoftwareProcess.STOP_COMMAND, ""stopCommand""));"
24649,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessTest.java,87,,"                .configure(VanillaWindowsProcess.PRE_INSTALL_COMMAND, ""preInstallCommand"")"
24650,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessTest.java,88,,"                .configure(VanillaWindowsProcess.INSTALL_COMMAND, ""installCommand"")"
24651,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessTest.java,89,,"                .configure(VanillaWindowsProcess.POST_INSTALL_COMMAND, ""postInstallCommand"")"
24652,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessTest.java,90,,"                .configure(VanillaWindowsProcess.PRE_CUSTOMIZE_COMMAND, ""preCustomizeCommand"")"
24653,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessTest.java,91,,"                .configure(VanillaWindowsProcess.CUSTOMIZE_COMMAND, ""customizeCommand"")"
24654,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessTest.java,92,,"                .configure(VanillaWindowsProcess.POST_CUSTOMIZE_COMMAND, ""postCustomizeCommand"")"
24655,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessTest.java,93,,"                .configure(VanillaWindowsProcess.PRE_LAUNCH_COMMAND, ""preLaunchCommand"")"
24656,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessTest.java,94,,"                .configure(VanillaWindowsProcess.LAUNCH_COMMAND, ""launchCommand"")"
24657,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessTest.java,95,,"                .configure(VanillaWindowsProcess.POST_LAUNCH_COMMAND, ""postLaunchCommand"")"
24658,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessTest.java,96,,"                .configure(VanillaWindowsProcess.CHECK_RUNNING_COMMAND, ""checkRunningCommand"")"
24659,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessTest.java,97,,"                .configure(VanillaWindowsProcess.STOP_COMMAND, ""stopCommand""));"
24660,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessWinrmExitStatusLiveTest.java,101,,"    @Test(groups = ""Live"")"
24661,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessWinrmExitStatusLiveTest.java,151,,"        runExecNonZeroExitCode(""pre-install-command"");"
24662,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessWinrmExitStatusLiveTest.java,156,,"        runExecNonZeroExitCode(""install-command"");"
24663,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessWinrmExitStatusLiveTest.java,161,,"        runExecNonZeroExitCode(""post-install-command"");"
24664,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessWinrmExitStatusLiveTest.java,166,,"        runExecNonZeroExitCode(""customize-command"");"
24665,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessWinrmExitStatusLiveTest.java,171,,"        runExecNonZeroExitCode(""pre-launch-command"");"
24666,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessWinrmExitStatusLiveTest.java,176,,"        runExecNonZeroExitCode(""launch-command"");"
24667,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessWinrmExitStatusLiveTest.java,181,,"        runExecNonZeroExitCode(""is-running-command"");"
24668,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessWinrmExitStatusLiveTest.java,186,,"        runExecNonZeroExitCode(""stop-command"");"
24669,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessWinrmExitStatusLiveTest.java,252,,"                if (!(e.toString().contains(""invalid result"") && e.toString().contains(""for ""+phase))) throw e;"
24670,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessWinrmExitStatusLiveTest.java,252,,"                if (!(e.toString().contains(""invalid result"") && e.toString().contains(""for ""+phase))) throw e;"
24671,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/VanillaWindowsProcessWinrmStreamsLiveTest.java,92,,"                .configure(VanillaSoftwareProcess.PRE_INSTALL_COMMAND, ""echo "" + getCommands().get(""winrm: pre-install-command.*""))"
24672,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/lifecycle/MyEntityImpl.java,95,,"            newScript(MutableMap.of(""usePidFile"", true), LAUNCHING)"
24673,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/lifecycle/NaiveScriptRunnerTest.java,96,,"        ScriptHelper h = new ScriptHelper(newMockRunner(101), ""mock"");"
24674,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/lifecycle/NaiveScriptRunnerTest.java,126,,"    @Test(groups = ""Integration"")"
24675,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/lifecycle/NaiveScriptRunnerTest.java,149,,"                    ""\nSTDERR:\n""+script.getResultStderr());"
24676,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/core/mgmt/usage/ApplicationUsageTrackingRebindTest.java,84,,"                assertEquals(events.size(), 1, ""events=""+events);"
24677,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/core/mgmt/usage/ApplicationUsageTrackingTest.java,74,,"                assertEquals(events.size(), 1, ""events=""+events);"
24678,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/core/mgmt/usage/JcloudsLocationUsageTrackingTest.java,131,,"                        .id(""myNodeId"")"
24679,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/core/mgmt/usage/JcloudsLocationUsageTrackingTest.java,157,,"                        .put(JcloudsLocation.IMAGE_ID.getName(), ""UBUNTU_14_64"")"
24680,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/core/mgmt/usage/JcloudsLocationUsageTrackingTest.java,170,,"        LOG.info(""metadata=""+usage.getMetadata());"
24681,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/core/mgmt/usage/LocationUsageTrackingTest.java,125,,"        assertEquals(usage2.getEvents().size(), 2, ""usage=""+usage2);"
24682,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/group/DynamicClusterWithAvailabilityZonesMultiLocationTest.java,76,,"        subLoc1 = app.newLocalhostProvisioningLocation(ImmutableMap.of(""displayName"", ""loc1""));"
24683,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/group/DynamicClusterWithAvailabilityZonesMultiLocationTest.java,77,,"        subLoc2 = app.newLocalhostProvisioningLocation(ImmutableMap.of(""displayName"", ""loc2""));"
24684,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/SecurityGroupLiveTest.java,84,,"        brooklynProperties.remove(""brooklyn.jclouds.""+PROVIDER+"".image-description-regex"");"
24685,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/WinRmMachineLocationLiveTest.java,130,,"    @Test(groups=""Live"")"
24686,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/WinRmMachineLocationLiveTest.java,150,,"        String msg = ""statusCode=""+response.getStatusCode()+""; out=""+response.getStdOut()+""; err=""+response.getStdErr();"
24687,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/WinRmMachineLocationLiveTest.java,150,,"        String msg = ""statusCode=""+response.getStatusCode()+""; out=""+response.getStdOut()+""; err=""+response.getStdErr();"
24688,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/WinRmMachineLocationLiveTest.java,150,,"        String msg = ""statusCode=""+response.getStatusCode()+""; out=""+response.getStdOut()+""; err=""+response.getStdErr();"
24689,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/WinRmMachineLocationLiveTest.java,173,,"        assertExecSucceeds(""echo myline"", ""myline"", """");"
24690,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/WinRmMachineLocationLiveTest.java,181,,"    @Test(groups={""Live"", ""WIP""}, enabled=false)"
24691,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/WinRmMachineLocationLiveTest.java,183,,"        assertExecSucceeds(""echo first"" + ""\r\n"" + ""echo second"", ""first""+""\r\n""+""second"", """");"
24692,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/WinRmMachineLocationLiveTest.java,183,,"        assertExecSucceeds(""echo first"" + ""\r\n"" + ""echo second"", ""first""+""\r\n""+""second"", """");"
24693,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/WinRmMachineLocationLiveTest.java,183,,"        assertExecSucceeds(""echo first"" + ""\r\n"" + ""echo second"", ""first""+""\r\n""+""second"", """");"
24694,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/WinRmMachineLocationLiveTest.java,224,,"        String script = ""EXIT /B 0"";"
24695,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/WinRmMachineLocationLiveTest.java,225,,"        String scriptPath = ""C:\\myscript-""+Identifiers.makeRandomId(4)+"".bat"";"
24696,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/WinRmMachineLocationLiveTest.java,225,,"        String scriptPath = ""C:\\myscript-""+Identifiers.makeRandomId(4)+"".bat"";"
24697,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/WinRmMachineLocationLiveTest.java,278,,"                ""Write-Host myline"", "
24698,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/WinRmMachineLocationLiveTest.java,280,,"        String scriptPath = ""C:\\myscript-""+Identifiers.makeRandomId(4)+"".ps1"";"
24699,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/WinRmMachineLocationLiveTest.java,293,,"                ""exit 1"");"
24700,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/location/WinRmMachineLocationLiveTest.java,346,,"        assertExecPsSucceeds(""& '""+scriptPath+""'"", null, """");"
24701,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/entity/software/base/test/mysql/DynamicToyMySqlEntityBuilder.java,111,,"                            ""cd ""+dir(entity),"
24702,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/feed/jmx/JmxFeedTest.java,215,,"                new String[] {""myint"", ""mystring"", ""mybool""},    // item names"
24703,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/feed/jmx/JmxFeedTest.java,215,,"                new String[] {""myint"", ""mystring"", ""mybool""},    // item names"
24704,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/feed/jmx/JmxFeedTest.java,215,,"                new String[] {""myint"", ""mystring"", ""mybool""},    // item names"
24705,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/feed/jmx/JmxFeedTest.java,272,,"        Asserts.succeedsEventually(ImmutableMap.of(""timeout"", TIMEOUT_MS), new Runnable() {"
24706,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/feed/jmx/JmxHelperTest.java,94,,"        GeneralisedDynamicMBean mbean = jmxService.registerMBean(MutableMap.of(""myattr"", ""myval""), objectName);"
24707,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/feed/jmx/JmxHelperTest.java,94,,"        GeneralisedDynamicMBean mbean = jmxService.registerMBean(MutableMap.of(""myattr"", ""myval""), objectName);"
24708,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/feed/jmx/JmxHelperTest.java,108,,"        jmxHelper.setAttribute(jmxObjectName, ""myattr"", ""abc"");"
24709,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/feed/jmx/JmxValueFunctionsTest.java,46,,"                new String[] {""key1"", ""key2""}, "
24710,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/feed/jmx/JmxValueFunctionsTest.java,46,,"                new String[] {""key1"", ""key2""}, "
24711,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/feed/jmx/JmxValueFunctionsTest.java,75,,"                ""key1"", ""row1.val1"","
24712,./TargetProjects/brooklyn-server/software/base/src/test/java/org/apache/brooklyn/feed/jmx/JmxValueFunctionsTest.java,78,,"                ""key1"", ""row2.val1"","
24713,./TargetProjects/brooklyn-server/software/winrm/src/main/java/org/apache/brooklyn/util/core/internal/winrm/winrm4j/Winrm4jTool.java,191,,"                            + (logCredentials ? ""password="" + password : """")"
24714,./TargetProjects/brooklyn-server/software/winrm/src/test/java/org/apache/brooklyn/feed/windows/WinRmCommandSensorTest.java,69,,"        RecordingWinRmTool.setCustomResponse("".*mycommand.*"", new RecordingWinRmTool.CustomResponse(0, ""myval"", """"));"
24715,./TargetProjects/brooklyn-server/software/winrm/src/test/java/org/apache/brooklyn/feed/windows/WinRmCommandSensorTest.java,75,,"                        WinRmCommandSensor.SENSOR_NAME, ""mysensor"")))));"
24716,./TargetProjects/brooklyn-server/software/winrm/src/test/java/org/apache/brooklyn/feed/windows/WinRmFeedLiveTest.java,95,,"    @Test(groups=""Live"")"
24717,./TargetProjects/brooklyn-server/software/winrm/src/test/java/org/apache/brooklyn/feed/windows/WinRmFeedLiveTest.java,111,,"        Assert.assertTrue(val.contains(""hello""), ""val=""+val);"
24718,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/RelativeEntityTestCaseTest.java,49,,"                .configure(BrooklynCampConstants.PLAN_ID, ""child-plan""));"
24719,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/SimpleShellCommandDeprecatedIntegrationTest.java,67,,"            { ""pwd"", ""pwd.sh"", Boolean.FALSE },"
24720,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/SimpleShellCommandDeprecatedIntegrationTest.java,74,,"    @Test(groups= ""Integration"", dataProvider = ""shouldInsistOnJustOneOfCommandAndScript"")"
24721,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/SimpleShellCommandDeprecatedIntegrationTest.java,124,,"            .withFailMessage(""Service should be up"");"
24722,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/SimpleShellCommandDeprecatedIntegrationTest.java,126,,"            .withFailMessage(""Service should be marked running"");"
24723,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TargetableTestComponentTest.java,64,,"        app.sensors().set(STRING_SENSOR, ""myval"");"
24724,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TargetableTestComponentTest.java,69,,"                .configure(TestSensor.ASSERTIONS, ImmutableList.of(ImmutableMap.of(""equals"", ""myval""))));"
24725,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TargetableTestComponentTest.java,77,,"                .configure(BrooklynCampConstants.PLAN_ID, ""myTargetId""));"
24726,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestCaseTest.java,59,,"    @DataProvider(name = ""continueOnFailurePermutations"")"
24727,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestCaseTest.java,100,,"        assertEquals(child1.getCallHistory(), ImmutableList.of(""start""));"
24728,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestCaseTest.java,109,,"                .configure(TestCase.ON_ERROR_SPEC, EntitySpec.create(TestEntity.class).displayName(""onerr""))"
24729,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestCaseTest.java,131,,"            Asserts.expectedFailureContains(t, ""Simulating entity start failure for test"");"
24730,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestCaseTest.java,186,,"                .child(EntitySpec.create(TestEntity.class).displayName(""child2"")));"
24731,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestEndpointReachableTest.java,90,,"        AttributeSensor<String> sensor = Sensors.newStringSensor(""test.reachable.endpoint"");"
24732,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,58,,"                {""some-sensor-value"", Arrays.asList(ImmutableMap.of(""isEqualTo"", ""some-sensor-value""))},"
24733,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,58,,"                {""some-sensor-value"", Arrays.asList(ImmutableMap.of(""isEqualTo"", ""some-sensor-value""))},"
24734,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,60,,"                {""some-sensor-value"", Arrays.asList(ImmutableMap.of(""equals"", ""some-sensor-value""))},"
24735,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,61,,"                {""some-sensor-value"", Arrays.asList(ImmutableMap.of(""notEqual"", ""other-sensor-value""))},"
24736,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,64,,"                {null, Arrays.asList(ImmutableMap.of(""isNull"", Boolean.TRUE))},"
24737,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,65,,"                {""some-non-null-value"", Arrays.asList(ImmutableMap.of(""isNull"", Boolean.FALSE))},"
24738,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,66,,"                {null, Arrays.asList(ImmutableMap.of(""notNull"", Boolean.FALSE))},"
24739,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,69,,"                {""<html><body><h1>Im a H1 tag!</h1></body></html>"", Arrays.asList(ImmutableMap.of(""contains"", ""Im a H1 tag!""))},"
24740,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,72,,"                {""some-regex-value-to-match"", Arrays.asList(ImmutableMap.of(""matches"", ""some.*match"", ""isEqualTo"", ""some-regex-value-to-match""))},"
24741,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,73,,"                {""line1\nline2\nline3\n"", Arrays.asList(ImmutableMap.of(""matches"", ""(?s).*line2.*""))},"
24742,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,78,,"                {""line1\nline2\nline3\n"", Arrays.asList(ImmutableMap.of(""containsMatch"", ""line1""))},"
24743,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,82,,"                {"""", Arrays.asList(ImmutableMap.of(""isEmpty"", Boolean.TRUE))},"
24744,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,84,,"                {null, Arrays.asList(ImmutableMap.of(""notEmpty"", Boolean.FALSE))},"
24745,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,87,,"                {""true"", Arrays.asList(ImmutableMap.of(""hasTruthValue"", Boolean.TRUE))},"
24746,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,90,,"                {25, Collections.singletonList(ImmutableMap.of(""greaterThan"", 24))},"
24747,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,92,,"                {24, Collections.singletonList(ImmutableMap.of(""lessThan"", 25))},"
24748,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,104,,"                LOG.info(""Supplier invoked for data [{}]"", data);"
24749,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestFrameworkAssertionsTest.java,158,,"                {""<html><body><h1>Im a H1 tag!</h1></body></html>"", ""contains"", ""quack"", Arrays.asList(ImmutableMap.of(""contains"", ""quack""))},"
24750,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestHttpCallTest.java,64,,"                .handler(""/201"", new TestHttpRequestHandler()"
24751,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestHttpCallTest.java,74,,"                .handler(""/foo/bar"", new TestHttpTestRequestHandler()"
24752,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestHttpCallTest.java,93,,"    @Test(groups = ""Integration"")"
24753,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestHttpCallTest.java,98,,"                .configure(TestSensor.ASSERTIONS, newAssertion(""isEqualTo"", ""Created - "" + testId)));"
24754,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestSensorTest.java,103,,"                .configure(TestSensor.ASSERTIONS, newMapAssertion(""equals"", true)));"
24755,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestSensorTest.java,181,,"                .configure(TestSensor.ASSERTIONS,  newMapAssertion(""isNull"", true)));"
24756,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestSensorTest.java,221,,"                .configure(TestSensor.ASSERTIONS, newListAssertion(""matches"", String.format("".*%s.*"", time))));"
24757,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestSensorTest.java,221,,"                .configure(TestSensor.ASSERTIONS, newListAssertion(""matches"", String.format("".*%s.*"", time))));"
24758,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestSshCommandIntegrationTest.java,69,,"    @Test(groups = ""Integration"")"
24759,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestSshCommandIntegrationTest.java,74,,"                .configure(RUN_DIR, ""/tmp"")"
24760,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestSshCommandIntegrationTest.java,122,,"            assertThat(testWithScript.sensors().get(SERVICE_UP)).isTrue().withFailMessage(""Service should be up"");"
24761,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestSshCommandIntegrationTest.java,124,,"                .withFailMessage(""Service should be marked running"");"
24762,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestSshCommandTest.java,97,,"                { ""pwd"", ""pwd.sh"", Boolean.FALSE },"
24763,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestWinrmCommandTest.java,85,,"                { ""pwd"", ""pwd"", Boolean.FALSE },"
24764,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/TestWinrmCommandTest.java,117,,"            .configure(PS_SCRIPT, ""uptime""));"
24765,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/live/TestFrameworkRun.java,44,,"            prerequisites.add(checkNotNull(value, ""value""));"
24766,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/live/TestFrameworkSuiteBuilder.java,62,,"            prerequisites.add(checkNotNull(value, ""value""));"
24767,./TargetProjects/brooklyn-server/test-framework/src/test/java/org/apache/brooklyn/test/framework/yaml/TestHttpCallYamlTest.java,81,,"                ""- type: "" + TestEntity.class.getName(),"
24768,./TargetProjects/brooklyn-server/test-support/src/main/java/org/apache/brooklyn/test/HttpTestUtils.java,225,,"                    LOG.warn(""CONTENTS OF URL ""+url+"" MISSING TEXT: ""+text+""\n""+contents);"
24769,./TargetProjects/brooklyn-server/test-support/src/main/java/org/apache/brooklyn/test/HttpTestUtils.java,226,,"                    Assert.fail(""URL ""+url+"" does not contain text: ""+text);"
24770,./TargetProjects/brooklyn-server/test-support/src/main/java/org/apache/brooklyn/test/performance/PerformanceTestDescriptor.java,82,,"        if (sealed) throw new IllegalStateException(""Should not modify after sealed (e.g. after use)"");"
24771,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/test/Asserts.java,222,,"                fail(""Collections not equal: expected: "" + expected + "" and actual: "" + actual);"
24772,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/test/Asserts.java,1163,,"        if (input==null) fail(""Input is null."");"
24773,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/JavaGroovyEquivalents.java,58,,"    @SuppressWarnings(""unchecked"")"
24774,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/http/HttpAsserts.java,192,,"                    LOG.warn(""CONTENTS OF URL ""+url+"" MISSING TEXT: ""+text+""\n""+contents);"
24775,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/http/HttpAsserts.java,193,,"                    Asserts.fail(""URL ""+url+"" does not contain text: ""+text);"
24776,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/javalang/FieldOrderings.java,62,,"    @SuppressWarnings(""unchecked"")"
24777,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/javalang/Reflections.java,134,,"            throw new ReflectionAccessException(""Failed to create instance of class '"" + classname + ""' using class loader "" + classLoader + "": "" + Exceptions.collapseText(e), e);"
24778,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/javalang/Reflections.java,156,,"    @SuppressWarnings(""unchecked"")"
24779,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/javalang/Reflections.java,233,,"            throw new ReflectionAccessException(""Failed to load constructor of class '"" + clazz + "" with argument types "" + Arrays.asList(argTypes) + "": "" + Exceptions.collapseText(e), e);"
24780,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/javalang/Reflections.java,388,,"            throw new ReflectionNotFoundException(""Failed to invoke method "" + methodName + "" on class "" + clazz + "" with argument types "" + Arrays.asList(argTypes) + "", using class loader "" + clazz.getClassLoader() + "": "" + Exceptions.collapseText(e), e);"
24781,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/javalang/Reflections.java,408,,"            throw new ReflectionAccessException(""Failed to invoke method '"" + methodName + "" on class "" + clazz + "": "" + Exceptions.collapseText(e), e);"
24782,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/javalang/Reflections.java,423,,"            throw new ReflectionAccessException(""Failed to invoke method '"" + method.toGenericString() + "" on class "" + method.getDeclaringClass() + "" with argument values "" + Arrays.asList(argValues) + "": "" + Exceptions.collapseText(e), e);"
24783,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/javalang/coerce/TypeCoercerExtensible.java,126,,"    @SuppressWarnings(""unchecked"")"
24784,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/javalang/coerce/TypeCoercerExtensible.java,152,,"                    () -> ""Generic type mismatch coercing ""+value.getClass().getName()+"" to ""+targetTypeTokenF+"": ""+Exceptions.collapseText(e), e));"
24785,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/math/MathFunctions.java,31,,"    @SuppressWarnings(""unused"") @Deprecated "
24786,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/math/MathPredicates.java,29,,"    @SuppressWarnings(""unused"") @Deprecated "
24787,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/net/Networking.java,261,,"                checkArgument(fromTo.length == 2, ""Invalid port range '%s'"", portRule);"
24788,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/net/Networking.java,315,,"        if (""127.0.0.1"".equals(hostnameOrIp)) return true;"
24789,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/os/Os.java,162,,"                    log.debug(""TmpDirFinder: Candidate tmp dir '""+candidate+""' does not exist"");"
24790,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/ssh/BashCommands.java,294,,"        return ""( "" + Strings.join(commands, "" && "") + "" )"";"
24791,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/ssh/BashCommands.java,306,,"        return ""{ "" + Strings.join(commands, "" && "") + "" ; }"";"
24792,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/ssh/BashCommands.java,333,,"        return ""( "" + Strings.join(commands, "" || "") + "" )"";"
24793,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/ssh/BashCommands.java,398,,"        String zypperInstall = formatIfNotNull(""zypper --non-interactive --no-gpg-checks install %s"", getFlag(flags, ""zypper"", packageDefaultName));"
24794,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/ssh/BashCommands.java,498,,"                ""    ""+ (failOnTimeout ?"
24795,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/ssh/BashCommands.java,727,,"        return sudo(String.format(""sed -i.""+tempFileId+"" -e '1i\\\n%s %s' /etc/hosts"", ip, Joiner.on("" "").join(hostnames)));"
24796,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/stream/ReaderInputStream.java,73,,"            throw new IOException(""Stream Closed"");"
24797,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/text/StringEscapes.java,291,,"                    throw new IllegalArgumentException(""String '""+s+""' has invalid separators, should be '""+separator+""'"");"
24798,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/text/StringEscapes.java,515,,"                    throw new IllegalArgumentException(""String '""+s+""' is not a valid ""+mode+"" string (must start with double quote)"");"
24799,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/text/StringFunctions.java,36,,"    @SuppressWarnings(""unused"") @Deprecated "
24800,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/text/StringPredicates.java,57,,"    @SuppressWarnings(""unused"") @Deprecated "
24801,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/time/Time.java,526,,"            else if (s.equalsIgnoreCase(""s"") || s.equalsIgnoreCase(""sec"") || s.equalsIgnoreCase(""secs"")"
24802,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/time/Time.java,529,,"            else if (s.equalsIgnoreCase(""m"") || s.equalsIgnoreCase(""min"") || s.equalsIgnoreCase(""mins"")"
24803,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/time/Time.java,533,,"                || s.equalsIgnoreCase(""hour"") || s.equalsIgnoreCase(""hours""))"
24804,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/time/Time.java,535,,"            else if (s.equalsIgnoreCase(""d"") || s.equalsIgnoreCase(""day"") || s.equalsIgnoreCase(""days""))"
24805,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/time/Time.java,657,,"            namedGroup(""year"", DIGIT+DIGIT+DIGIT+DIGIT) +"
24806,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/time/Time.java,659,,"            namedGroup(""month"", options(optionally(DIGIT)+DIGIT, anyChar(LETTER)+""+"")) +"
24807,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/time/Time.java,811,,"                    return Maybe.absent(""Unknown date format '""+input+""': invalid month '""+monthS+""'; try http://yaml.org/type/timestamp.html format e.g. 2015-06-15 16:00:00 +0000"");"
24808,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/time/Time.java,811,,"                    return Maybe.absent(""Unknown date format '""+input+""': invalid month '""+monthS+""'; try http://yaml.org/type/timestamp.html format e.g. 2015-06-15 16:00:00 +0000"");"
24809,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/yaml/Yamls.java,77,,"    @SuppressWarnings({ ""unchecked"", ""rawtypes"" })"
24810,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/yaml/Yamls.java,510,,"                    throw new IllegalStateException(""Key ""+key+"" is not a scalar, searching for ""+pathItem+"" at depth ""+pathIndex+"" of ""+Arrays.asList(path));"
24811,./TargetProjects/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/yaml/Yamls.java,510,,"                    throw new IllegalStateException(""Key ""+key+"" is not a scalar, searching for ""+pathItem+"" at depth ""+pathIndex+"" of ""+Arrays.asList(path));"
24812,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/core/validation/BrooklynValidationTest.java,42,,"        Target s = new Target(""foo"");"
24813,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/core/validation/BrooklynValidationTest.java,50,,"        Target s = new Target(""bar"");"
24814,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/test/AssertsTest.java,106,,"        Asserts.assertStringContains(""hello"", ""hello"", ""he"");"
24815,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/test/AssertsTest.java,108,,"            Asserts.assertStringContains(""hello"", ""goodbye"");"
24816,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/test/AssertsTest.java,115,,"        Asserts.assertStringContainsIgnoreCase(""hello"", ""Hello"");"
24817,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/HttpAssertsTest.java,85,,"        simpleEndpoint = testUri(""/simple"");"
24818,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/HttpAssertsTest.java,96,,"            .handler(""/missing"", new TestHttpRequestHandler().code(HttpStatus.SC_NOT_FOUND).response(""Missing""))"
24819,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/HttpAssertsTest.java,185,,"        HttpAsserts.assertUrlUnreachableEventually(ImmutableMap.of(""timeout"", ""10s""), baseUrlOrig);"
24820,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/HttpAssertsTest.java,270,,"        HttpAsserts.assertContentMatches(simpleEndpoint, ""[Oo][Kk]"");"
24821,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/JavaGroovyEquivalentsTest.java,71,,"        assertEquals(elvis("""", ""string2""), ""string2"");"
24822,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,52,,"        Map<?, ?> val1 = ImmutableMap.of(""key1"", ""val1a"", ""key2"", ""val2a"");"
24823,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,52,,"        Map<?, ?> val1 = ImmutableMap.of(""key1"", ""val1a"", ""key2"", ""val2a"");"
24824,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,52,,"        Map<?, ?> val1 = ImmutableMap.of(""key1"", ""val1a"", ""key2"", ""val2a"");"
24825,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,53,,"        Map<?, ?> val2 = ImmutableMap.of(""key1"", ""val1b"", ""key3"", ""val3b"");"
24826,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,53,,"        Map<?, ?> val2 = ImmutableMap.of(""key1"", ""val1b"", ""key3"", ""val3b"");"
24827,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,91,,"                ""key1: val1"","
24828,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,92,,"                ""key2:"","
24829,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,93,,"                ""  key2.1: val2.1a"","
24830,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,94,,"                ""  key2.2:"", "
24831,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,95,,"                ""    key2.2.1: val2.2.1a"","
24832,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,96,,"                ""    key2.2.2:"","
24833,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,97,,"                ""      key2.2.2.1: val2.2.2.1a"","
24834,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,98,,"                ""      key2.2.2.2:"","
24835,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,99,,"                ""        key2.2.2.2.1: val2.2.2.2.1a"");"
24836,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,102,,"                ""key1b: val1b"","
24837,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,105,,"                ""  key2.1b: val2.1b"","
24838,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,108,,"                ""    key2.2.1b: val2.2.1b"","
24839,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,280,,"                ""key1:"","
24840,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,281,,"                ""- key1.1"","
24841,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,283,,"                ""  key2.1:"","
24842,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,284,,"                ""  - key2.1.1"","
24843,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,285,,"                ""key3:"","
24844,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,286,,"                ""  key3.1:"","
24845,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,287,,"                ""    key3.1.1:"","
24846,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,288,,"                ""    - key3.1.1.1"","
24847,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,289,,"                ""key4:"","
24848,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,290,,"                ""  key4.1:"","
24849,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,291,,"                ""    key4.1.1:"","
24850,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,292,,"                ""      key4.1.1.1:"","
24851,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,293,,"                ""      - key4.1.1.1.1"");"
24852,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,296,,"                ""- key1.1b"","
24853,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/CollectionMergerTest.java,299,,"                ""  - key2.1.1b"","
24854,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/JsonyaTest.java,35,,"        return Jsonya.newInstance().at(""europe"", ""uk"", ""edinburgh"")"
24855,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/JsonyaTest.java,35,,"        return Jsonya.newInstance().at(""europe"", ""uk"", ""edinburgh"")"
24856,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/JsonyaTest.java,36,,"                .put(""population"", 500*1000)"
24857,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/JsonyaTest.java,37,,"                .put(""weather"", ""wet"", ""lighting"", ""dark"")"
24858,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/JsonyaTest.java,38,,"                .root().at(""europe"").at(""france"").put(""population"", 80*1000*1000)"
24859,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/JsonyaTest.java,53,,"    @SuppressWarnings(""rawtypes"")"
24860,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/JsonyaTest.java,56,,"        Navigator<MutableMap<Object, Object>> n = Jsonya.of(europeMap().getRootMap()).at(""asia"")"
24861,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/JsonyaTest.java,57,,"            .put(MutableMap.of(""china"", null))"
24862,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/JsonyaTest.java,58,,"            .put(MutableMap.of(""japan"", null));"
24863,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/JsonyaTest.java,68,,"        n.at(""europe"", ""uk"", ""neighbours"").list().add(""ireland"")"
24864,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/JsonyaTest.java,69,,"            .root().at(""europe"", ""france"", ""neighbours"").list().add(""spain"", ""germany"").add(""switzerland"")"
24865,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/JsonyaTest.java,86,,"        MutableMap<Object, Object> map = Jsonya.at(""countries"").list().map().add(""europe"", ""uk"").getRootMap();"
24866,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/JsonyaTest.java,200,,"        Navigator<MutableMap<Object, Object>> j = Jsonya.newInstance().add(""root"", map);"
24867,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/JsonyaTest.java,210,,"        Assert.assertEquals( j.toString(), ""{ \""root\"": [ \""a\"", \""b\"" ] }"");"
24868,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/JsonyaTest.java,246,,"        Assert.assertEquals( j.toString(), ""[ \""a\"", \""b\"" ]"");"
24869,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/JsonyaTest.java,307,,"        Navigator<MutableMap<Object, Object>> j = Jsonya.newInstance().at(""root"").add(""value"").root();"
24870,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/TimeWindowedListTest.java,43,,"        TimeWindowedList list = new TimeWindowedList<Object>(MutableMap.of(""timePeriod"", 1L, ""minVals"", 2));"
24871,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/collections/TimeWindowedListTest.java,69,,"        TimeWindowedList list = new TimeWindowedList<Object>(MutableMap.of(""timePeriod"", 1000L, ""minExpiredVals"", 1));"
24872,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/exceptions/ExceptionsTest.java,45,,"        NullPointerException tothrow = new NullPointerException(""simulated"");"
24873,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/exceptions/ExceptionsTest.java,217,,"        RuntimeException e = Exceptions.create(""test1"", MutableSet.of(new IllegalStateException(""test2""), new IllegalStateException(""test3"")));"
24874,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/exceptions/ExceptionsTest.java,217,,"        RuntimeException e = Exceptions.create(""test1"", MutableSet.of(new IllegalStateException(""test2""), new IllegalStateException(""test3"")));"
24875,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/exceptions/ExceptionsTest.java,252,,"        Throwable t = new Throwable(""test"");"
24876,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/guava/MaybeFunctionsTest.java,30,,"        Maybe<Object> result = MaybeFunctions.wrap().apply(""myval"");"
24877,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/guava/MaybeTest.java,32,,"        Maybe<String> m = Maybe.of(""yes"");"
24878,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/guava/MaybeTest.java,85,,"        Maybe<String> m = Maybe.absent(""nope"");"
24879,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/guava/MaybeTest.java,109,,"            Asserts.expectedFailureContains(e, ""absent"");"
24880,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/internal/CommandLineUtilTest.java,59,,"        List<String> args = Lists.newArrayList(""k1"", ""vdup"", ""k2"", ""v2"", ""k3"", ""vdup"");"
24881,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/io/FileUtilTest.java,53,,"    @Test(groups=""Integration"")"
24882,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/io/FileUtilTest.java,78,,"            Files.write(""abc"", new File(dir, ""afile""), Charsets.UTF_8);"
24883,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/io/FileUtilTest.java,78,,"            Files.write(""abc"", new File(dir, ""afile""), Charsets.UTF_8);"
24884,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/javalang/EnumsTest.java,31,,"        Assert.assertEquals(Enums.valueOfIgnoreCase(SomeENum.class, ""e_300"").get(), SomeENum.E_300);"
24885,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/javalang/ReflectionsTest.java,129,,"        Assert.assertEquals(m.invoke(null, ""hello"", 1, 2, new int[] { 3, 4}), ""hello10"");"
24886,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/javalang/coerce/TypeCoercionsTest.java,205,,"        @SuppressWarnings(""serial"")"
24887,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/javalang/coerce/TypeCoercionsTest.java,214,,"        Assert.assertTrue(Arrays.equals(val, new Integer[] {1, 2}), ""val=""+Arrays.toString(val)+"" of type ""+val.getClass());"
24888,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/javalang/coerce/TypeCoercionsTest.java,221,,"            Integer[] val = coerce(new String[] {""myWrongVal""}, new TypeToken<Integer[]>() { });"
24889,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/javalang/coerce/TypeCoercionsTest.java,269,,"        Assert.assertTrue(Arrays.equals(s, new String[] {""a"", ""b""}), ""result=""+Arrays.toString(s));"
24890,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/javalang/coerce/TypeCoercionsTest.java,284,,"        List<?> s = coerce(ImmutableList.of(""java.lang.Integer"", ""java.lang.Double""), new TypeToken<List<Class<?>>>() { });"
24891,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/javalang/coerce/TypeCoercionsTest.java,284,,"        List<?> s = coerce(ImmutableList.of(""java.lang.Integer"", ""java.lang.Double""), new TypeToken<List<Class<?>>>() { });"
24892,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/javalang/coerce/TypeCoercionsTest.java,312,,"        Map<?,?> s = coerce(ImmutableMap.of(""int"", ""java.lang.Integer"", ""double"", ""java.lang.Double""), new TypeToken<Map<String, Class<?>>>() { });"
24893,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/javalang/coerce/TypeCoercionsTest.java,312,,"        Map<?,?> s = coerce(ImmutableMap.of(""int"", ""java.lang.Integer"", ""double"", ""java.lang.Double""), new TypeToken<Map<String, Class<?>>>() { });"
24894,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/javalang/coerce/TypeCoercionsTest.java,399,,"        String s = coerce(URI.create(""http://localhost:1234/""), String.class);"
24895,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/net/CidrTest.java,39,,"        Cidr c = new Cidr(""10.0.0.0/8"");"
24896,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/net/CidrTest.java,64,,"        Assert.assertEquals(c.toString(), ""0.0.0.0/0"");"
24897,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/net/NetworkingUtilsTest.java,188,,"            assertFalse(Networking.isPortAvailable(port), ""port mistakenly reported as available"");"
24898,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/net/UrlsTest.java,53,,"        encodeAndDecodeUrl(""simple"", ""simple"");"
24899,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/net/UserAndHostAndPortTest.java,32,,"        assertIt(UserAndHostAndPort.fromParts(""myuser"", ""myhost"", 1234), ""myuser"", HostAndPort.fromParts(""myhost"", 1234));"
24900,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/net/UserAndHostAndPortTest.java,32,,"        assertIt(UserAndHostAndPort.fromParts(""myuser"", ""myhost"", 1234), ""myuser"", HostAndPort.fromParts(""myhost"", 1234));"
24901,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/os/OsTest.java,72,,"        for (String path : ImmutableSet.of(""/a/b"", ""//a///b"", ""/a/b/"", ""/a/b/."", ""/q/../a/b"")) {"
24902,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/osgi/OsgiTestResources.java,37,,"    public static final String BROOKLYN_OSGI_TEST_A_0_1_0_PATH = ""/brooklyn/osgi/"" + BROOKLYN_OSGI_TEST_A_SYMBOLIC_NAME + ""_0.1.0.jar"";"
24903,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/osgi/OsgiTestResources.java,70,,"    public static final String BROOKLYN_TEST_OSGI_ENTITIES_COM_EXAMPLE_URL = ""classpath:""+BROOKLYN_TEST_OSGI_ENTITIES_COM_EXAMPLE_PATH;"
24904,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/osgi/OsgiUtilsTest.java,38,,"        assertVersion(""4aug2000r7-dev"", ""0.0.0.4aug2000r7-dev"");"
24905,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/osgi/OsgisTest.java,31,,"        assertEquals(OsgiUtils.parseOsgiIdentifier(""a.b"").get(), new VersionedName(""a.b"", (String)null));"
24906,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/osgi/VersionedNameTest.java,53,,"        assertEquals(VersionedName.parseMaybe(""a.b"", false).get(), new VersionedName(""a.b"", (String)null));"
24907,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/repeat/RepeaterTest.java,75,,"        fail(""Expected exception was not thrown"");"
24908,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/ssh/IptablesCommandsFirewalldTest.java,36,,"    private static final String firewalldService = ""( if test \""$UID\"" -eq 0; then ( ( { """
24909,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/stream/StreamGobblerTest.java,65,,"            assertEqualsEventually(out, ""line1"" + NL);"
24910,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/stream/StreamsTest.java,41,,"        Assert.assertTrue(Streams.compare(Streams.newInputStreamWithContents(""hello""), Streams.newInputStreamWithContents(""hello"")));"
24911,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/BrooklynVersionSyntaxTest.java,29,,"        assertVersion(""1.0.0"", true, true, true);"
24912,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/BrooklynVersionSyntaxTest.java,30,,"        assertVersion(""1.0.0.SNAPSHOT"", true, true, false);"
24913,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/BrooklynVersionSyntaxTest.java,31,,"        assertVersion(""1.0.0-SNAPSHOT"", true, false, true);"
24914,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/BrooklynVersionSyntaxTest.java,92,,"        assertOsgiVersion(""0.0.0.4aug2000r7-dev"", ""0.0.0.4aug2000r7-dev"");"
24915,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/ComparableVersionTest.java,26,,"    ComparableVersion v = new ComparableVersion(""10.5.8"");"
24916,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/QuotedStringTokenizerTest.java,53,,"        testResultingTokens(""foo,bar,baz"", ""\"""", false, "","", false, ""foo"", ""bar"", ""baz"");"
24917,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/QuotedStringTokenizerTest.java,53,,"        testResultingTokens(""foo,bar,baz"", ""\"""", false, "","", false, ""foo"", ""bar"", ""baz"");"
24918,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/QuotedStringTokenizerTest.java,54,,"        testResultingTokens(""\""foo,bar\"",baz"", ""\"""", false, "","", false, ""foo,bar"", ""baz"");"
24919,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringEscapesTest.java,60,,"        Assert.assertEquals(JavaStringEscapes.unwrapJavaString(""\""Hello World\""""), ""Hello World"");"
24920,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringEscapesTest.java,64,,"            Assert.fail(""Should have thrown"");"
24921,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringEscapesTest.java,91,,"                JavaStringEscapes.unwrapQuotedJavaStringList(""\""hello\"", \""world\"""", "",""), "
24922,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringEscapesTest.java,92,,"                MutableList.of(""hello"", ""world""));"
24923,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringEscapesTest.java,92,,"                MutableList.of(""hello"", ""world""));"
24924,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringEscapesTest.java,94,,"            JavaStringEscapes.unwrapQuotedJavaStringList(""\""hello\"", world"", "","");"
24925,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringEscapesTest.java,115,,"                JavaStringEscapes.unwrapJsonishListIfPossible(""hello\"", \""world\""""),"
24926,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringFunctionsTest.java,31,,"        Assert.assertEquals(StringFunctions.prepend(""Hello "").apply(""World""), ""Hello World"");"
24927,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringFunctionsTest.java,31,,"        Assert.assertEquals(StringFunctions.prepend(""Hello "").apply(""World""), ""Hello World"");"
24928,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringFunctionsTest.java,42,,"        Assert.assertEquals(StringFunctions.formatterForArray(""Hello"").apply(new Object[0]), ""Hello"");"
24929,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringPredicatesTest.java,39,,"        Assert.assertTrue(StringPredicates.containsLiteral(""xx"").apply(""texxxt tessst""));"
24930,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringPredicatesTest.java,59,,"        Assert.assertTrue(StringPredicates.startsWith(""t"").apply(""test""));"
24931,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringsTest.java,42,,"        assertFalse(Strings.isEmpty(""   \t   ""));"
24932,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringsTest.java,43,,"        assertFalse(Strings.isEmpty(""abc""));"
24933,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringsTest.java,44,,"        assertFalse(Strings.isEmpty(""   abc   ""));"
24934,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringsTest.java,66,,"        assertEquals(""abcdef"", Strings.makeValidFilename(""abcdef""));"
24935,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringsTest.java,101,,"        assertEquals(Strings.removeFromEnd("""", ""bar""), """");"
24936,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringsTest.java,104,,"        assertEquals(Strings.removeFromEnd(""foobar"", ""bar""), ""foo"");"
24937,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringsTest.java,104,,"        assertEquals(Strings.removeFromEnd(""foobar"", ""bar""), ""foo"");"
24938,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringsTest.java,119,,"        assertEquals(Strings.removeAllFromEnd(""foobarbaz"", ""bar"", ""baz""), ""foo"");"
24939,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringsTest.java,119,,"        assertEquals(Strings.removeAllFromEnd(""foobarbaz"", ""bar"", ""baz""), ""foo"");"
24940,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringsTest.java,149,,"        assertEquals(Strings.removeFromStart(""xyz"", ""x""), ""yz"");"
24941,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringsTest.java,157,,"        assertEquals(Strings.removeFromEnd(""http://foo.com/"", ""/""), ""http://foo.com"");"
24942,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringsTest.java,186,,"        assertTrue(Strings.containsLiteral(""hello"", ""ell""));"
24943,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringsTest.java,213,,"        Assert.assertEquals(x.toString(), ""hello world"");"
24944,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringsTest.java,234,,"            return ""world""+(appendCount?""""+count:"""");"
24945,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/StringsTest.java,408,,"        assertTrue(Strings.containsLiteralAsWord(""hello cruel world"", ""cruel""));"
24946,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/VersionComparatorTest.java,33,,"        assertVersionOrder(""0.1-SNAPSHOT"", ""0.1-R"", ""0.1-S"", ""0.1-T"", ""0.1"");"
24947,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/WildcardGlobsTest.java,43,,"        assertTrue(WildcardGlobs.isGlobMatched(""a{,?}{,b}"", ""a""));"
24948,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/WildcardGlobsTest.java,55,,"        assertTrue(newGlobExpander().isGlobMatchedNumeric(""a{1-3,5}"", ""a1""));"
24949,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/WildcardGlobsTest.java,64,,"        assertTrue(newGlobExpander().isGlobMatchedNumeric(""a{01-03,05}"", ""a01""));"
24950,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/WildcardGlobsTest.java,65,,"        assertTrue(newGlobExpander().isGlobMatchedNumeric(""a{ 01  - 03 , 05 }"", ""a01""));"
24951,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/WildcardGlobsTest.java,78,,"        assertEquals(result, Arrays.asList(""a"",""b""), ""Expansion was ""+result);"
24952,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/text/WildcardGlobsTest.java,141,,"            fail(""exception expected"");"
24953,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/time/DurationTest.java,53,,"                Duration.of(""4h 3m 30s"").toMilliseconds());"
24954,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/time/DurationTest.java,62,,"        Asserts.assertFailsWith(() -> Duration.of(""-1m 1s""), e -> Asserts.expectedFailureContainsIgnoreCase(e, ""negati"", ""space""));"
24955,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/time/TimeTest.java,267,,"        if (integration) assertDatesParseToEqual(""20150604 BST"", ""2015-06-04 +0100"");"
24956,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/time/TimeTest.java,303,,"        assertDatesParseToEqual(""20150604 08:00:12.345"", ""2015-06-04-080012.345"");"
24957,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/time/TimeTest.java,305,,"        assertDatesParseToEqual(""2015-12-1"", ""2015-12-01-0000"");"
24958,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/time/TimeTest.java,342,,"            assertDatesParseToEqual(""2015-Mar-1"", ""2015-03-01-0000"");"
24959,./TargetProjects/brooklyn-server/utils/common/src/test/java/org/apache/brooklyn/util/yaml/YamlsTest.java,80,,"        Assert.assertEquals(Yamls.getTextOfYamlAtPath(sample, ""k2"", ""k21"").getMatchedYamlText(),"
24960,./TargetProjects/brooklyn-server/utils/groovy/src/main/java/org/apache/brooklyn/util/groovy/GroovyJavaMethods.java,62,,"    @SuppressWarnings(""unchecked"")"
24961,./TargetProjects/brooklyn-server/utils/groovy/src/test/java/org/apache/brooklyn/util/groovy/GroovJavaMethodsTest.java,66,,"        assertEquals(elvis("""", ""string2""), ""string2"");"
24962,./TargetProjects/brooklyn-server/utils/jmx/jmxmp-ssl-agent/src/main/java/org/apache/brooklyn/util/jmx/jmxmp/JmxmpAgent.java,258,,"        if (""true"".equalsIgnoreCase(vv)) return true;"
24963,./TargetProjects/brooklyn-server/utils/jmx/jmxmp-ssl-agent/src/test/java/org/apache/brooklyn/util/jmx/jmxmp/JmxmpAgentSslTest.java,79,,"        caRootSigner = new FluentKeySigner(""ca-root"").ca(0).selfsign();"
24964,./TargetProjects/brooklyn-server/utils/jmx/jmxmp-ssl-agent/src/test/java/org/apache/brooklyn/util/jmx/jmxmp/JmxmpAgentSslTest.java,84,,"        caChildCert = caRootSigner.newCertificateFor(""ca-child"", caChildKey);"
24965,./TargetProjects/brooklyn-server/utils/jmx/jmxmp-ssl-agent/src/test/java/org/apache/brooklyn/util/jmx/jmxmp/JmxmpAgentSslTest.java,89,,"        grandchildCert = caChildSigner.newCertificateFor(""grandchild"", grandchildKey);"
24966,./TargetProjects/brooklyn-server/utils/jmx/jmxmp-ssl-agent/src/test/java/org/apache/brooklyn/util/jmx/jmxmp/JmxmpAgentSslTest.java,94,,"                newCertificateFor(""child-2"", child2Key);"
24967,./TargetProjects/brooklyn-server/utils/jmx/jmxmp-ssl-agent/src/test/java/org/apache/brooklyn/util/jmx/jmxmp/JmxmpAgentSslTest.java,98,,"                new FluentKeySigner(""self-1"", selfSign1Key)."
24968,./TargetProjects/brooklyn-server/utils/jmx/jmxmp-ssl-agent/src/test/java/org/apache/brooklyn/util/jmx/jmxmp/JmxmpAgentSslTest.java,153,,"        new JmxmpClient().connect(""service:jmx:jmxmp://localhost:11099"", new LinkedHashMap());"
24969,./TargetProjects/bval/bval-jsr/src/main/java/org/apache/bval/jsr/metadata/EmptyBuilder.java,58,,"        @SuppressWarnings(""rawtypes"")"
24970,./TargetProjects/bval/bval-jsr/src/main/java/org/apache/bval/jsr/metadata/EmptyBuilder.java,61,,"        @SuppressWarnings(""unchecked"")"
24971,./TargetProjects/bval/bval-jsr/src/main/java/org/apache/bval/jsr/metadata/HierarchyBuilder.java,116,,"                @SuppressWarnings(""unchecked"")"
24972,./TargetProjects/bval/bval-jsr/src/main/java/org/apache/bval/jsr/metadata/XmlBuilder.java,196,,"        @SuppressWarnings(""unchecked"")"
24973,./TargetProjects/bval/bval-jsr/src/main/java/org/apache/bval/jsr/util/NodeImpl.java,398,,"    @SuppressWarnings(""serial"")"
24974,./TargetProjects/bval/bval-jsr/src/main/java/org/apache/bval/util/reflection/TypeUtils.java,274,,"        throw new IllegalStateException(""found an unhandled type: "" + toType);"
24975,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/BeanDescriptorTest.java,65,,"            validator.getConstraintsForClass(Form.class).getConstraintsForProperty(""name"").getConstraintDescriptors();"
24976,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/BeanDescriptorTest.java,66,,"        assertEquals(""Incorrect number of descriptors"", 1, nameDescriptors.size());"
24977,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/BeanDescriptorTest.java,68,,"        assertTrue(""groups attribute not present"", nameDescriptor.getAttributes().containsKey(""groups""));"
24978,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/ConstraintCompositionTest.java,63,,"        assertEquals(""Wrong number of violations detected"", 1, violations.size());"
24979,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/ConstraintCompositionTest.java,98,,"        assertEquals(""There should only be 1 group"", 1, manNameDesc.getGroups().size());"
24980,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/ConstraintCompositionTest.java,124,,"        assertEquals(""There should only be 1 payload class"", 1, manNameDesc.getPayload().size());"
24981,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/ConstraintDefinitionsTest.java,154,,"        String message() default ""def msg"";"
24982,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/DefaultMessageInterpolatorTest.java,128,,"            context(""12345678"","
24983,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/DefaultMessageInterpolatorTest.java,132,,"                    .orElseThrow(() -> new AssertionError(""expected constraint missing""))));"
24984,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/DefaultMessageInterpolatorTest.java,157,,"                () -> validator.getConstraintsForClass(Person.class).getConstraintsForProperty(""idNumber"")"
24985,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/DefaultMessageInterpolatorTest.java,200,,"        assertEquals(""${regexp.charAt(4)}"", interpolator.interpolate(""${regexp.charAt(4)}"","
24986,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/ExceptionsContractTest.java,118,,"        validator.validateValue(Person.class, null, ""John"");"
24987,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/ValidationTest.java,315,,"        country.setISO2Code(""too_long"");"
24988,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/ValidationTest.java,349,,"        adr.setCity(""dark"");"
24989,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/ValidationTest.java,368,,"        value.setCity(""whatever"");"
24990,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/ValidationTest.java,369,,"        value.setAddressline1(""1 address line"");"
24991,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/ValidationTest.java,377,,"        value.getCountry().setName(""NWO"");"
24992,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/ValidationTest.java,446,,"        final String propPath = ""[foo]"";"
24993,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/ValidationTest.java,537,,"        final String propPath = ""[0]"";"
24994,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/groups/GroupSequenceIsolationTest.java,57,,"        h.b2 = ""good"";"
24995,./TargetProjects/bval/bval-jsr/src/test/java/org/apache/bval/jsr/groups/redefining/RedefiningDefaultGroupTest.java,48,,"        assertNotNull(TestUtils.getViolation(violations, ""street1""));"
24996,./TargetProjects/bval/bval-perf/src/test/java/org/apache/bval/jsr/Jsr303Benchmark.java,95,,"                                                                                     .validate(new BookSimple(""Hello"","
24997,./TargetProjects/calcite/babel/src/test/java/org/apache/calcite/test/BabelParserTest.java,60,,"    assertThat(metadata.isReservedFunctionName(""ABS""), is(true));"
24998,./TargetProjects/calcite/babel/src/test/java/org/apache/calcite/test/BabelParserTest.java,98,,"        + ""FROM `T`"";"
24999,./TargetProjects/calcite/cassandra/src/test/java/org/apache/calcite/test/CassandraAdapterTest.java,69,,"        .explainContains(""PLAN=CassandraToEnumerableConverter\n"""
