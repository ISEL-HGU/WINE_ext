194000,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestMySQLDatabaseAdapter.java,79,,"        List<String> columnNames = Arrays.asList(""column1"", ""column2"", ""column3"", ""column4"");"
194001,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestMySQLDatabaseAdapter.java,79,,"        List<String> columnNames = Arrays.asList(""column1"", ""column2"", ""column3"", ""column4"");"
194002,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestOracle12DatabaseAdapter.java,29,,"        String sql1 = db.getSelectStatement(""database.tablename"", ""some(set),of(columns),that,might,contain,methods,a.*"", """", """", null, null);"
194003,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestOracle12DatabaseAdapter.java,29,,"        String sql1 = db.getSelectStatement(""database.tablename"", ""some(set),of(columns),that,might,contain,methods,a.*"", """", """", null, null);"
194004,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestOracle12DatabaseAdapter.java,53,,"        String sql1 = db.getSelectStatement(""database.tablename"", ""some(set),of(columns),that,might,contain,methods,a.*"", """", ""contain"", 100L, 0L);"
194005,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestOracleDatabaseAdapter.java,29,,"        String sql1 = db.getSelectStatement(""database.tablename"", ""some(set),of(columns),that,might,contain,methods,a.*"", """", """", null, null);"
194006,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestOracleDatabaseAdapter.java,29,,"        String sql1 = db.getSelectStatement(""database.tablename"", ""some(set),of(columns),that,might,contain,methods,a.*"", """", """", null, null);"
194007,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestOracleDatabaseAdapter.java,53,,"        String sql1 = db.getSelectStatement(""database.tablename"", ""some(set),of(columns),that,might,contain,methods,a.*"", """", ""contain"","
194008,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestOracleDatabaseAdapter.java,55,,"        String expected1 = ""SELECT some(set),of(columns),that,might,contain,methods,a.* FROM (SELECT a.*, ROWNUM rnum FROM (SELECT some(set),of(columns),that,might,contain,methods,a.* """
194009,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestPostgreSQLDatabaseAdapter.java,46,,"        testGetUpsertStatement(null, Arrays.asList(""notEmpty""), Arrays.asList(""notEmpty""), new IllegalArgumentException(""Table name cannot be null or blank""));"
194010,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestPostgreSQLDatabaseAdapter.java,78,,"        List<String> columnNames = Arrays.asList(""column1"",""column2"", ""column3"", ""column4"");"
194011,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestPostgreSQLDatabaseAdapter.java,78,,"        List<String> columnNames = Arrays.asList(""column1"",""column2"", ""column3"", ""column4"");"
194012,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ftp/TestVirtualFileSystem.java,41,,"            new VirtualPath(""/Directory1""),"
194013,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ftp/TestVirtualFileSystemView.java,48,,"        fileSystem.mkdir(new VirtualPath(""/Directory1""));"
194014,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ftp/TestVirtualPath.java,33,,"        String expectedPath = ""/Directory1/Directory2"".replace('/', File.separatorChar);"
194015,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ftp/TestVirtualPath.java,46,,"        String expectedPath = ""/Directory1"".replace('/', File.separatorChar);"
194016,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/util/ITestSFTPTransferWithSSHTestServer.java,167,,"        properties.put(SFTPTransfer.IGNORE_DOTTED_FILES, ""false"");"
194017,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/util/ITestSFTPTransferWithSSHTestServer.java,196,,"        properties.put(SFTPTransfer.RECURSIVE_SEARCH, ""true"");"
194018,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/util/ITestSFTPTransferWithSSHTestServer.java,305,,"        properties.put(SFTPTransfer.REMOTE_PATH, ""DOES-NOT-EXIST"");"
194019,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/util/ITestSFTPTransferWithSSHTestServer.java,412,,"                Assert.fail(""Should have failed"");"
194020,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/util/ITestSFTPTransferWithSSHTestServer.java,581,,"            final String target = DIR_2 + ""/"" + FILE_1 + ""-RENAMED"";"
194021,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/util/ITestSFTPTransferWithSSHTestServer.java,621,,"        final String permissions = ""rw-rw-rw-"";"
194022,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/util/ITestSFTPTransferWithSSHTestServer.java,627,,"        final String fileContent = ""this is a test"";"
194023,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/util/TestSFTPTransfer.java,89,,"        final File remoteDir = new File(""/dir1/dir2/dir3"");"
194024,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/util/TestSFTPTransfer.java,122,,"        when(sftpClient.stat(""/dir1/dir2/dir3"")).thenThrow(new SFTPException(Response.StatusCode.NO_SUCH_FILE, ""No such file""));"
194025,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/util/TestSFTPTransfer.java,131,,"        verify(sftpClient).stat(eq(""/dir1/dir2"")); // so, dir2 was checked"
194026,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/util/TestSFTPTransfer.java,186,,"        when(processContext.getProperty(SFTPTransfer.DISABLE_DIRECTORY_LISTING)).thenReturn(new MockPropertyValue(""true""));"
194027,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/security/util/crypto/OpenPGPKeyBasedEncryptorTest.java,82,,"                InputStream plainStream = new ByteArrayInputStream(PLAINTEXT.getBytes(""UTF-8""));"
194028,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/security/util/crypto/OpenPGPPasswordBasedEncryptorTest.java,80,,"                InputStream plainStream = new java.io.ByteArrayInputStream(PLAINTEXT.getBytes(""UTF-8""));"
194029,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-reporting-tasks/src/main/java/org/apache/nifi/controller/ControllerStatusReportingTask.java,282,,"            final String input = inputCount + "" / "" + FormatUtils.formatDataSize(inputBytes);"
194030,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-reporting-tasks/src/main/java/org/apache/nifi/reporting/ganglia/StandardGangliaReporter.java,95,,"        metricsRegistry.newGauge(new MetricName(METRICS_GROUP, ""int32"", ""FlowFiles Received Last 5 mins""), new Gauge<Integer>() {"
194031,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-reporting-tasks/src/main/java/org/apache/nifi/reporting/ganglia/StandardGangliaReporter.java,108,,"        metricsRegistry.newGauge(new MetricName(METRICS_GROUP, ""int64"", ""Bytes Received Last 5 mins""), new Gauge<Long>() {"
194032,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-utils/src/test/java/org/apache/nifi/processors/standard/util/TestTransformFactory.java,122,,"        JoltTransform transform = TransformFactory.getCustomTransform(customClassLoader,""TestCustomJoltTransform"",JsonUtils.jsonToObject(chainrSpec));"
194033,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-dbcp-service-bundle/nifi-dbcp-service/src/main/java/org/apache/nifi/record/sink/db/DatabaseRecordSink.java,117,,"            .allowableValues(""true"", ""false"")"
194034,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-dbcp-service-bundle/nifi-dbcp-service/src/main/java/org/apache/nifi/record/sink/db/DatabaseRecordSink.java,117,,"            .allowableValues(""true"", ""false"")"
194035,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-dbcp-service-bundle/nifi-dbcp-service/src/test/java/org/apache/nifi/dbcp/DBCPServiceTest.java,173,,"        runner.setProperty(service, DBCPConnectionPool.MAX_CONN_LIFETIME, ""1 secs"");"
194036,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-dbcp-service-bundle/nifi-dbcp-service/src/test/java/org/apache/nifi/dbcp/TestDBCPConnectionPoolLookup.java,72,,"        runner.addControllerService(""dbcp-lookup"", dbcpLookupService);"
194037,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-dbcp-service-bundle/nifi-dbcp-service/src/test/java/org/apache/nifi/dbcp/TestDBCPConnectionPoolLookup.java,161,,"        ff0.putAttributes(Collections.singletonMap(DBCPConnectionPoolLookup.DATABASE_NAME_ATTRIBUTE, ""db-A""));"
194038,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-dbcp-service-bundle/nifi-dbcp-service/src/test/java/org/apache/nifi/dbcp/TestDBCPConnectionPoolLookup.java,162,,"        ff1.putAttributes(Collections.singletonMap(DBCPConnectionPoolLookup.DATABASE_NAME_ATTRIBUTE, ""db-B""));"
194039,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-server/src/test/java/org/apache/nifi/distributed/cache/server/TestServerAndClient.java,82,,"        Assume.assumeFalse(""test is skipped due to build environment being OS X with JDK 1.8. See https://issues.apache.org/jira/browse/NIFI-437"","
194040,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-server/src/test/java/org/apache/nifi/distributed/cache/server/TestServerAndClient.java,85,,"        LOGGER.info(""Testing "" + Thread.currentThread().getStackTrace()[1].getMethodName());"
194041,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-server/src/test/java/org/apache/nifi/distributed/cache/server/TestServerAndClient.java,89,,"        runner.addControllerService(""server"", server);"
194042,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-server/src/test/java/org/apache/nifi/distributed/cache/server/TestServerAndClient.java,94,,"        final boolean added = client.addIfAbsent(""test"", serializer);"
194043,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-server/src/test/java/org/apache/nifi/distributed/cache/server/TestServerAndClient.java,123,,"        final File dataFile = new File(""target/cache-data"");"
194044,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-server/src/test/java/org/apache/nifi/distributed/cache/server/TestServerAndClient.java,136,,"        final boolean added2 = client.addIfAbsent(""test2"", serializer);"
194045,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-server/src/test/java/org/apache/nifi/distributed/cache/server/TestServerAndClient.java,158,,"        runner.addControllerService(""server2"", newServer);"
194046,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-server/src/test/java/org/apache/nifi/distributed/cache/server/TestServerAndClient.java,199,,"        final boolean added3 = client.addIfAbsent(""test3"", serializer);"
194047,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-server/src/test/java/org/apache/nifi/distributed/cache/server/TestServerAndClient.java,213,,"        final boolean added4 = client.addIfAbsent(""test4"", serializer);"
194048,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-server/src/test/java/org/apache/nifi/distributed/cache/server/TestServerAndClient.java,309,,"        client.put(""test.1"", ""1"", serializer, serializer);"
194049,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-server/src/test/java/org/apache/nifi/distributed/cache/server/TestServerAndClient.java,310,,"        client.put(""test.2"", ""2"", serializer, serializer);"
194050,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-server/src/test/java/org/apache/nifi/distributed/cache/server/TestServerAndClient.java,312,,"        final long removedTwo = client.removeByPattern(""test\\..*"");"
194051,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-server/src/test/java/org/apache/nifi/distributed/cache/server/TestServerAndClient.java,428,,"        MockControllerServiceInitializationContext clientInitContext = new MockControllerServiceInitializationContext(client, ""client"");"
194052,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-server/src/test/java/org/apache/nifi/distributed/cache/server/TestServerAndClient.java,432,,"        clientProperties.put(DistributedMapCacheClientService.HOSTNAME, ""localhost"");"
194053,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-server/src/test/java/org/apache/nifi/distributed/cache/server/TestServerAndClient.java,434,,"        clientProperties.put(DistributedMapCacheClientService.COMMUNICATIONS_TIMEOUT, ""360 secs"");"
194054,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-server/src/test/java/org/apache/nifi/distributed/cache/server/TestServerAndClient.java,441,,"        final String original = client.getAndPutIfAbsent(""testKey"", ""test"", keySerializer, valueSerializer, deserializer);"
194055,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-hbase_1_1_2-client-service-bundle/nifi-hbase_1_1_2-client-service/src/test/java/org/apache/nifi/hbase/TestHBase_1_1_2_ClientMapCacheService.java,86,,"        final String row = ""row1"";"
194056,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-hbase_1_1_2-client-service-bundle/nifi-hbase_1_1_2-client-service/src/test/java/org/apache/nifi/hbase/TestHBase_1_1_2_ClientMapCacheService.java,87,,"        final String content = ""content1"";"
194057,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-hbase_1_1_2-client-service-bundle/nifi-hbase_1_1_2-client-service/src/test/java/org/apache/nifi/hbase/TestHBase_1_1_2_ClientService.java,79,,"        final String tableName = ""nifi"";"
194058,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-hbase_1_1_2-client-service-bundle/nifi-hbase_1_1_2-client-service/src/test/java/org/apache/nifi/hbase/TestHBase_1_1_2_ClientService.java,85,,"        runner.addControllerService(""hbaseClientService"", service);"
194059,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-hbase_1_1_2-client-service-bundle/nifi-hbase_1_1_2-client-service/src/test/java/org/apache/nifi/hbase/TestHBase_1_1_2_ClientService.java,186,,"        final String row = ""row1"";"
194060,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-hbase_2-client-service-bundle/nifi-hbase_2-client-service/src/test/java/org/apache/nifi/hbase/TestHBase_2_ClientMapCacheService.java,86,,"        final String row = ""row1"";"
194061,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-hbase_2-client-service-bundle/nifi-hbase_2-client-service/src/test/java/org/apache/nifi/hbase/TestHBase_2_ClientMapCacheService.java,87,,"        final String content = ""content1"";"
194062,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-hbase_2-client-service-bundle/nifi-hbase_2-client-service/src/test/java/org/apache/nifi/hbase/TestHBase_2_ClientService.java,79,,"        final String tableName = ""nifi"";"
194063,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-hbase_2-client-service-bundle/nifi-hbase_2-client-service/src/test/java/org/apache/nifi/hbase/TestHBase_2_ClientService.java,85,,"        runner.addControllerService(""hbaseClientService"", service);"
194064,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-hbase_2-client-service-bundle/nifi-hbase_2-client-service/src/test/java/org/apache/nifi/hbase/TestHBase_2_ClientService.java,186,,"        final String row = ""row1"";"
194065,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-hwx-schema-registry-bundle/nifi-hwx-schema-registry-service/src/main/java/com/hortonworks/registries/schemaregistry/client/SchemaRegistryClient.java,550,,"        WebTarget target = currentSchemaRegistryTargets().schemasTarget.path(schemaName).path(""/versions/upload"").queryParam(""branch"",schemaBranchName);"
194066,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-hwx-schema-registry-bundle/nifi-hwx-schema-registry-service/src/main/java/org/apache/nifi/schemaregistry/hortonworks/HortonworksSchemaRegistry.java,333,,"                throw new org.apache.nifi.schema.access.SchemaNotFoundException(""Could not find schema with name '"" + schemaName + ""'"");"
194067,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-hwx-schema-registry-bundle/nifi-hwx-schema-registry-service/src/test/java/org/apache/nifi/schemaregistry/hortonworks/TestHortonworksSchemaRegistry.java,101,,"        final SchemaVersionInfo info = new SchemaVersionInfo(1L, ""unit-test"", 2, text, System.currentTimeMillis(), ""description"");"
194068,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-lookup-services-bundle/nifi-lookup-services/src/main/java/org/apache/nifi/lookup/maxmind/IPLookupService.java,97,,"        .allowableValues(""true"", ""false"")"
194069,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-lookup-services-bundle/nifi-lookup-services/src/main/java/org/apache/nifi/lookup/maxmind/IPLookupService.java,97,,"        .allowableValues(""true"", ""false"")"
194070,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-lookup-services-bundle/nifi-lookup-services/src/test/java/org/apache/nifi/lookup/TestCSVRecordLookupService.java,46,,"        runner.addControllerService(""csv-file-lookup-service"", service);"
194071,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-lookup-services-bundle/nifi-lookup-services/src/test/java/org/apache/nifi/lookup/TestCSVRecordLookupService.java,49,,"        runner.setProperty(service, CSVRecordLookupService.LOOKUP_KEY_COLUMN, ""key"");"
194072,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-lookup-services-bundle/nifi-lookup-services/src/test/java/org/apache/nifi/lookup/TestCSVRecordLookupService.java,61,,"        assertEquals(""this is property 1"", property1.get().getAsString(""value""));"
194073,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-lookup-services-bundle/nifi-lookup-services/src/test/java/org/apache/nifi/lookup/TestDistributedMapCacheLookupService.java,94,,"            throw new UnsupportedOperationException(""not implemented"");"
194074,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-lookup-services-bundle/nifi-lookup-services/src/test/java/org/apache/nifi/lookup/TestPropertiesFileLookupService.java,41,,"        runner.addControllerService(""properties-file-lookup-service"", service);"
194075,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-lookup-services-bundle/nifi-lookup-services/src/test/java/org/apache/nifi/lookup/TestPropertiesFileLookupService.java,53,,"        final Optional<String> property1 = lookupService.lookup(Collections.singletonMap(""key"", ""property.1""));"
194076,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-lookup-services-bundle/nifi-lookup-services/src/test/java/org/apache/nifi/lookup/TestSimpleCsvFileLookupService.java,44,,"        runner.addControllerService(""csv-file-lookup-service"", service);"
194077,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-lookup-services-bundle/nifi-lookup-services/src/test/java/org/apache/nifi/lookup/TestSimpleCsvFileLookupService.java,47,,"        runner.setProperty(service, SimpleCsvFileLookupService.LOOKUP_KEY_COLUMN, ""key"");"
194078,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-lookup-services-bundle/nifi-lookup-services/src/test/java/org/apache/nifi/lookup/TestXMLFileLookupService.java,52,,"        final Optional<String> property1 = lookupService.lookup(Collections.singletonMap(""key"", ""properties.property(0)""));"
194079,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/main/java/org/apache/nifi/xml/XMLRecordSetWriter.java,78,,"            .allowableValues(""true"", ""false"")"
194080,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/main/java/org/apache/nifi/xml/XMLRecordSetWriter.java,78,,"            .allowableValues(""true"", ""false"")"
194081,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/avro/TestAvroReaderWithEmbeddedSchema.java,134,,"        accountFields.add(new Field(""accountId"", Schema.create(Type.LONG), null, (Object) null));"
194082,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/avro/TestAvroReaderWithEmbeddedSchema.java,135,,"        accountFields.add(new Field(""accountName"", Schema.create(Type.STRING), null, (Object) null));"
194083,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/avro/TestAvroReaderWithEmbeddedSchema.java,136,,"        final Schema accountSchema = Schema.createRecord(""account"", null, null, false);"
194084,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/avro/TestAvroReaderWithEmbeddedSchema.java,140,,"        catFields.add(new Field(""catTailLength"", Schema.create(Type.INT), null, (Object) null));"
194085,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/avro/TestAvroReaderWithEmbeddedSchema.java,141,,"        catFields.add(new Field(""catName"", Schema.create(Type.STRING), null, (Object) null));"
194086,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/avro/TestAvroReaderWithEmbeddedSchema.java,146,,"        dogFields.add(new Field(""dogTailLength"", Schema.create(Type.INT), null, (Object) null));"
194087,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/avro/TestAvroReaderWithEmbeddedSchema.java,147,,"        dogFields.add(new Field(""dogName"", Schema.create(Type.STRING), null, (Object) null));"
194088,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/avro/TestAvroReaderWithEmbeddedSchema.java,158,,"        fields.add(new Field(""binary"", Schema.create(Type.BYTES), null, (Object) null));"
194089,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/avro/TestAvroReaderWithEmbeddedSchema.java,159,,"        fields.add(new Field(""fixed"", Schema.createFixed(""fixed"", null, null, 5), null, (Object) null));"
194090,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/avro/TestAvroReaderWithEmbeddedSchema.java,306,,"            r1.put(""field"", 123);"
194091,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/avro/TestAvroReaderWithExplicitSchema.java,53,,"        assertNotNull(record.get(""key""));"
194092,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/avro/TestAvroReaderWithExplicitSchema.java,116,,"        record.put(""price"", ""0.000000"");"
194093,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/avro/TestWriteAvroResult.java,104,,"        fields.add(new RecordField(""msg"", RecordFieldType.STRING.getDataType()));"
194094,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/avro/TestWriteAvroResult.java,108,,"        values.put(""msg"", ""nifi"");"
194095,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/avro/TestWriteAvroResult.java,187,,"            fields.add(new RecordField(""decimal"" + decimal[0], (DataType) decimal[1]));"
194096,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/avro/TestWriteAvroResult.java,354,,"                assertEquals(fieldName + "" not equal"", recordArray.length, avroArray.size());"
194097,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,61,,"        for (final String fieldName : new String[] {""id"", ""name"", ""balance"", ""address"", ""city"", ""state"", ""zipCode"", ""country""}) {"
194098,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,61,,"        for (final String fieldName : new String[] {""id"", ""name"", ""balance"", ""address"", ""city"", ""state"", ""zipCode"", ""country""}) {"
194099,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,61,,"        for (final String fieldName : new String[] {""id"", ""name"", ""balance"", ""address"", ""city"", ""state"", ""zipCode"", ""country""}) {"
194100,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,61,,"        for (final String fieldName : new String[] {""id"", ""name"", ""balance"", ""address"", ""city"", ""state"", ""zipCode"", ""country""}) {"
194101,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,61,,"        for (final String fieldName : new String[] {""id"", ""name"", ""balance"", ""address"", ""city"", ""state"", ""zipCode"", ""country""}) {"
194102,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,61,,"        for (final String fieldName : new String[] {""id"", ""name"", ""balance"", ""address"", ""city"", ""state"", ""zipCode"", ""country""}) {"
194103,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,61,,"        for (final String fieldName : new String[] {""id"", ""name"", ""balance"", ""address"", ""city"", ""state"", ""zipCode"", ""country""}) {"
194104,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,97,,"        fields.add(new RecordField(""date"", RecordFieldType.DATE.getDataType()));"
194105,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,103,,"                     ""MM/dd/yyyy"", RecordFieldType.TIME.getDefaultFormat(), RecordFieldType.TIMESTAMP.getDefaultFormat(), ""UTF-8"")) {"
194106,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,212,,"        fields.add(new RecordField(""time"", RecordFieldType.TIME.getDataType()));"
194107,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,239,,"            assertEquals(""01:02:03"", record.getValue(""time""));"
194108,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,286,,"        fields.add(new RecordField(""timestamp"", RecordFieldType.TIMESTAMP.getDataType()));"
194109,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,329,,"            final Object[] expectedValues = new Object[] {""1"", ""John Doe"", 4750.89D, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""};"
194110,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,329,,"            final Object[] expectedValues = new Object[] {""1"", ""John Doe"", 4750.89D, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""};"
194111,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,329,,"            final Object[] expectedValues = new Object[] {""1"", ""John Doe"", 4750.89D, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""};"
194112,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,329,,"            final Object[] expectedValues = new Object[] {""1"", ""John Doe"", 4750.89D, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""};"
194113,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,329,,"            final Object[] expectedValues = new Object[] {""1"", ""John Doe"", 4750.89D, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""};"
194114,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,422,,"            assertEquals(""John"", record.getValue(""name""));"
194115,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVRecordReader.java,453,,"            assertEquals(""40.80"", record.getValue(""balance""));"
194116,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVSchemaInference.java,45,,"    private final TimeValueInference timestampInference = new TimeValueInference(""yyyy-MM-dd"", ""HH:mm:ss"", ""yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"");"
194117,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVSchemaInference.java,45,,"    private final TimeValueInference timestampInference = new TimeValueInference(""yyyy-MM-dd"", ""HH:mm:ss"", ""yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"");"
194118,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVSchemaInference.java,66,,"        assertSame(RecordFieldType.STRING, schema.getDataType(""eventId"").get().getFieldType());"
194119,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVSchemaInference.java,67,,"        assertSame(RecordFieldType.INT, schema.getDataType(""eventOrdinal"").get().getFieldType());"
194120,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVSchemaInference.java,68,,"        assertSame(RecordFieldType.STRING, schema.getDataType(""eventType"").get().getFieldType());"
194121,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVSchemaInference.java,69,,"        assertSame(RecordFieldType.LONG, schema.getDataType(""timestampMillis"").get().getFieldType());"
194122,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVSchemaInference.java,71,,"        assertEquals(RecordFieldType.TIMESTAMP.getDataType(""yyyy-MM-dd'T'HH:mm:ss.SSS'Z'""), schema.getDataType(""timestamp"").get());"
194123,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVSchemaInference.java,72,,"        assertEquals(RecordFieldType.TIME.getDataType(""HH:mm:ss""), schema.getDataType(""eventTime"").get());"
194124,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVSchemaInference.java,73,,"        assertEquals(RecordFieldType.DATE.getDataType(""yyyy-MM-dd""), schema.getDataType(""eventDate"").get());"
194125,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVSchemaInference.java,79,,"                schema.getDataType(""maybeTime"").get()"
194126,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVSchemaInference.java,81,,"        assertEquals(RecordFieldType.DATE.getDataType(""yyyy-MM-dd""), schema.getDataType(""maybeDate"").get());"
194127,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVSchemaInference.java,83,,"        assertSame(RecordFieldType.INT, schema.getDataType(""parentIds"").get().getFieldType());"
194128,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVSchemaInference.java,84,,"        assertSame(RecordFieldType.STRING, schema.getDataType(""numeric string"").get().getFieldType());"
194129,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVValidators.java,38,,"        ValidationResult result = validator.validate(""EscapeChar"", null, mockContext);"
194130,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestCSVValidators.java,85,,"        ValidationResult result = validator.validate(""Delimiter"", null, mockContext);"
194131,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestJacksonCSVRecordReader.java,53,,"        for (final String fieldName : new String[] {""id"", ""name"", ""balance"", ""address"", ""city"", ""state"", ""zipCode"", ""country""}) {"
194132,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestJacksonCSVRecordReader.java,53,,"        for (final String fieldName : new String[] {""id"", ""name"", ""balance"", ""address"", ""city"", ""state"", ""zipCode"", ""country""}) {"
194133,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestJacksonCSVRecordReader.java,53,,"        for (final String fieldName : new String[] {""id"", ""name"", ""balance"", ""address"", ""city"", ""state"", ""zipCode"", ""country""}) {"
194134,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestJacksonCSVRecordReader.java,53,,"        for (final String fieldName : new String[] {""id"", ""name"", ""balance"", ""address"", ""city"", ""state"", ""zipCode"", ""country""}) {"
194135,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestJacksonCSVRecordReader.java,53,,"        for (final String fieldName : new String[] {""id"", ""name"", ""balance"", ""address"", ""city"", ""state"", ""zipCode"", ""country""}) {"
194136,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestJacksonCSVRecordReader.java,53,,"        for (final String fieldName : new String[] {""id"", ""name"", ""balance"", ""address"", ""city"", ""state"", ""zipCode"", ""country""}) {"
194137,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestJacksonCSVRecordReader.java,53,,"        for (final String fieldName : new String[] {""id"", ""name"", ""balance"", ""address"", ""city"", ""state"", ""zipCode"", ""country""}) {"
194138,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestJacksonCSVRecordReader.java,113,,"            final Object[] expectedValues = new Object[] {""1"", ""John Doe"", 4750.89D, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""};"
194139,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestJacksonCSVRecordReader.java,113,,"            final Object[] expectedValues = new Object[] {""1"", ""John Doe"", 4750.89D, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""};"
194140,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestJacksonCSVRecordReader.java,113,,"            final Object[] expectedValues = new Object[] {""1"", ""John Doe"", 4750.89D, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""};"
194141,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestJacksonCSVRecordReader.java,113,,"            final Object[] expectedValues = new Object[] {""1"", ""John Doe"", 4750.89D, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""};"
194142,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestJacksonCSVRecordReader.java,113,,"            final Object[] expectedValues = new Object[] {""1"", ""John Doe"", 4750.89D, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""};"
194143,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestJacksonCSVRecordReader.java,206,,"            assertEquals(""John"", record.getValue(""name""));"
194144,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestJacksonCSVRecordReader.java,237,,"            assertEquals(""40.80"", record.getValue(""balance""));"
194145,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestWriteCSVResult.java,58,,"        values.put(""name"", ""John Doe"");"
194146,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/csv/TestWriteCSVResult.java,182,,"            RecordFieldType.DATE.getDefaultFormat(), RecordFieldType.TIME.getDefaultFormat(), RecordFieldType.TIMESTAMP.getDefaultFormat(), true, ""ASCII"")) {"
194147,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/grok/TestGrokRecordReader.java,65,,"            final String[] logLevels = new String[] {""INFO"", ""WARN"", ""ERROR"", ""FATAL"", ""FINE""};"
194148,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/grok/TestGrokRecordReader.java,65,,"            final String[] logLevels = new String[] {""INFO"", ""WARN"", ""ERROR"", ""FATAL"", ""FINE""};"
194149,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/grok/TestGrokRecordReader.java,65,,"            final String[] logLevels = new String[] {""INFO"", ""WARN"", ""ERROR"", ""FATAL"", ""FINE""};"
194150,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/grok/TestGrokRecordReader.java,94,,"            + ""org.apache.nifi.exception.UnitTestException: Testing to ensure we are able to capture stack traces"";"
194151,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/grok/TestGrokRecordReader.java,195,,"                        + ""NodeClusterCoordinator.java:185) [nifi-framework-cluster-1.0.0-SNAPSHOT.jar:1.0.0-SNAPSHOT]""));"
194152,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/grok/TestGrokRecordReader.java,237,,"            assertTrue(fieldNames.contains(""_raw""));  // always implicitly there"
194153,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/grok/TestGrokRecordReader.java,258,,"        final String nonMatchingRecord = ""hello there"";"
194154,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/grok/TestGrokRecordReader.java,259,,"        final String matchingRecord = ""1 2 3 4 5"";"
194155,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/grok/TestGrokRecordReader.java,265,,"            final Grok grok = grokCompiler.compile(""%{NUMBER:first} %{NUMBER:second} %{NUMBER:third} %{NUMBER:fourth} %{NUMBER:fifth}"");"
194156,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/grok/TestGrokRecordReader.java,270,,"            assertTrue(fieldNames.contains(""first""));"
194157,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/grok/TestGrokRecordReader.java,271,,"            assertTrue(fieldNames.contains(""second""));"
194158,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/grok/TestGrokRecordReader.java,272,,"            assertTrue(fieldNames.contains(""third""));"
194159,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/grok/TestGrokRecordReader.java,273,,"            assertTrue(fieldNames.contains(""fourth""));"
194160,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/grok/TestGrokRecordReader.java,274,,"            assertTrue(fieldNames.contains(""fifth""));"
194161,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestInferJsonSchemaAccessStrategy.java,54,,"    private final SchemaInferenceEngine<JsonNode> timestampInference = new JsonSchemaInference(new TimeValueInference(""yyyy-MM-dd"", ""HH:mm:ss"", ""yyyy-MM-dd'T'HH:mm:ss.SSS'Z'""));"
194162,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestInferJsonSchemaAccessStrategy.java,60,,"        final File file = new File(""src/test/resources/json/prov-events.json"");"
194163,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonPathRowRecordReader.java,62,,"        allJsonPaths.put(""name"", JsonPath.compile(""$.name""));"
194164,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonPathRowRecordReader.java,63,,"        allJsonPaths.put(""balance"", JsonPath.compile(""$.balance""));"
194165,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonPathRowRecordReader.java,64,,"        allJsonPaths.put(""address"", JsonPath.compile(""$.address""));"
194166,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonPathRowRecordReader.java,65,,"        allJsonPaths.put(""city"", JsonPath.compile(""$.city""));"
194167,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonPathRowRecordReader.java,66,,"        allJsonPaths.put(""state"", JsonPath.compile(""$.state""));"
194168,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonPathRowRecordReader.java,67,,"        allJsonPaths.put(""zipCode"", JsonPath.compile(""$.zipCode""));"
194169,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonPathRowRecordReader.java,68,,"        allJsonPaths.put(""country"", JsonPath.compile(""$.country""));"
194170,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonPathRowRecordReader.java,112,,"            Assert.assertArrayEquals(new Object[] {1, ""John Doe"", 4750.89, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""}, firstRecordValues);"
194171,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonPathRowRecordReader.java,112,,"            Assert.assertArrayEquals(new Object[] {1, ""John Doe"", 4750.89, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""}, firstRecordValues);"
194172,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonPathRowRecordReader.java,112,,"            Assert.assertArrayEquals(new Object[] {1, ""John Doe"", 4750.89, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""}, firstRecordValues);"
194173,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonPathRowRecordReader.java,112,,"            Assert.assertArrayEquals(new Object[] {1, ""John Doe"", 4750.89, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""}, firstRecordValues);"
194174,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonPathRowRecordReader.java,112,,"            Assert.assertArrayEquals(new Object[] {1, ""John Doe"", 4750.89, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""}, firstRecordValues);"
194175,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonPathRowRecordReader.java,115,,"            Assert.assertArrayEquals(new Object[] {2, ""Jane Doe"", 4820.09, ""321 Your Street"", ""Your City"", ""NY"", ""33333"", ""USA""}, secondRecordValues);"
194176,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonPathRowRecordReader.java,115,,"            Assert.assertArrayEquals(new Object[] {2, ""Jane Doe"", 4820.09, ""321 Your Street"", ""Your City"", ""NY"", ""33333"", ""USA""}, secondRecordValues);"
194177,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonPathRowRecordReader.java,115,,"            Assert.assertArrayEquals(new Object[] {2, ""Jane Doe"", 4820.09, ""321 Your Street"", ""Your City"", ""NY"", ""33333"", ""USA""}, secondRecordValues);"
194178,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonPathRowRecordReader.java,115,,"            Assert.assertArrayEquals(new Object[] {2, ""Jane Doe"", 4820.09, ""321 Your Street"", ""Your City"", ""NY"", ""33333"", ""USA""}, secondRecordValues);"
194179,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,77,,"        fields.add(new RecordField(""name"", RecordFieldType.STRING.getDataType()));"
194180,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,78,,"        fields.add(new RecordField(""balance"", balanceDataType));"
194181,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,79,,"        fields.add(new RecordField(""address"", RecordFieldType.STRING.getDataType()));"
194182,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,80,,"        fields.add(new RecordField(""city"", RecordFieldType.STRING.getDataType()));"
194183,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,81,,"        fields.add(new RecordField(""state"", RecordFieldType.STRING.getDataType()));"
194184,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,82,,"        fields.add(new RecordField(""zipCode"", RecordFieldType.STRING.getDataType()));"
194185,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,83,,"        fields.add(new RecordField(""country"", RecordFieldType.STRING.getDataType()));"
194186,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,114,,"            assertEquals(""string"", ((Record) firstElement).getAsString(""type""));"
194187,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,199,,"            assertEquals(Arrays.asList(""id"", ""child""), firstOuterSchema.getFieldNames());"
194188,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,247,,"        try (final InputStream in = new FileInputStream(new File(""src/test/resources/json/bank-account-array.json""));"
194189,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,260,,"            Assert.assertArrayEquals(new Object[] {1, ""John Doe"", 4750.89, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""}, firstRecordValues);"
194190,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,260,,"            Assert.assertArrayEquals(new Object[] {1, ""John Doe"", 4750.89, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""}, firstRecordValues);"
194191,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,260,,"            Assert.assertArrayEquals(new Object[] {1, ""John Doe"", 4750.89, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""}, firstRecordValues);"
194192,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,260,,"            Assert.assertArrayEquals(new Object[] {1, ""John Doe"", 4750.89, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""}, firstRecordValues);"
194193,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,260,,"            Assert.assertArrayEquals(new Object[] {1, ""John Doe"", 4750.89, ""123 My Street"", ""My City"", ""MS"", ""11111"", ""USA""}, firstRecordValues);"
194194,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,263,,"            Assert.assertArrayEquals(new Object[] {2, ""Jane Doe"", 4820.09, ""321 Your Street"", ""Your City"", ""NY"", ""33333"", ""USA""}, secondRecordValues);"
194195,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,263,,"            Assert.assertArrayEquals(new Object[] {2, ""Jane Doe"", 4820.09, ""321 Your Street"", ""Your City"", ""NY"", ""33333"", ""USA""}, secondRecordValues);"
194196,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,263,,"            Assert.assertArrayEquals(new Object[] {2, ""Jane Doe"", 4820.09, ""321 Your Street"", ""Your City"", ""NY"", ""33333"", ""USA""}, secondRecordValues);"
194197,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,263,,"            Assert.assertArrayEquals(new Object[] {2, ""Jane Doe"", 4820.09, ""321 Your Street"", ""Your City"", ""NY"", ""33333"", ""USA""}, secondRecordValues);"
194198,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,763,,"            new RecordField(""integer"", RecordFieldType.INT.getDataType()),"
194199,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,764,,"            new RecordField(""boolean"", RecordFieldType.BOOLEAN.getDataType()),"
194200,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,804,,"            new RecordField(""record"", RecordFieldType.CHOICE.getChoiceDataType("
194201,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestJsonTreeRowRecordReader.java,1034,,"                        put(""extraString"", ""extraStringValue11"");"
194202,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestWriteJsonResult.java,99,,"        valueMap.put(""date"", Date.valueOf(""2017-01-01""));"
194203,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestWriteJsonResult.java,100,,"        valueMap.put(""time"", new Time(time));"
194204,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestWriteJsonResult.java,101,,"        valueMap.put(""timestamp"", new Timestamp(time));"
194205,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestWriteJsonResult.java,128,,"        fields.add(new RecordField(""name"", RecordFieldType.STRING.getDataType()));"
194206,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestWriteJsonResult.java,217,,"        final String expected = ""[{\""id\"":\""1\""}]"";"
194207,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/json/TestWriteJsonResult.java,271,,"        final String expected = ""[{\""id\"":\""1\"",\""name\"":null}]"";"
194208,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/syslog/TestSyslog5424RecordReader.java,97,,"            Assert.assertTrue(structured.containsKey(""exampleSDID@32473""));"
194209,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/syslog/TestSyslog5424RecordReader.java,100,,"            Assert.assertTrue(example1.containsKey(""iut""));"
194210,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/syslog/TestSyslog5424RecordReader.java,101,,"            Assert.assertTrue(example1.containsKey(""eventSource""));"
194211,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/syslog/TestSyslog5424RecordReader.java,102,,"            Assert.assertTrue(example1.containsKey(""eventID""));"
194212,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/syslog/TestSyslog5424RecordReader.java,107,,"            Assert.assertTrue(structured.containsKey(""exampleSDID@32480""));"
194213,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/windowsevent/TestWindowsEventLogRecordReader.java,53,,"        Object childObj = r.getValue(""System"");"
194214,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/windowsevent/TestWindowsEventLogRecordReader.java,58,,"        childObj = childRecord.getValue(""Provider"");"
194215,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/windowsevent/TestWindowsEventLogRecordReader.java,63,,"        assertEquals(""Microsoft-Windows-Security-Auditing"", childRecord.getAsString(""Name""));"
194216,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/windowsevent/TestWindowsEventLogRecordReader.java,63,,"        assertEquals(""Microsoft-Windows-Security-Auditing"", childRecord.getAsString(""Name""));"
194217,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/windowsevent/TestWindowsEventLogRecordReader.java,66,,"        childObj = r.getValue(""EventData"");"
194218,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/windowsevent/TestWindowsEventLogRecordReader.java,71,,"        assertEquals(""DOMAIN"", childRecord.getAsString(""TargetDomainName""));"
194219,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/windowsevent/TestWindowsEventLogRecordReader.java,71,,"        assertEquals(""DOMAIN"", childRecord.getAsString(""TargetDomainName""));"
194220,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestWriteXMLResult.java,88,,"                    out, true, false, ALWAYS_SUPPRESS, NO_WRAPPING, null, ""root"", null, ""UTF-8"", DATE_FORMAT, TIME_FORMAT, TIMESTAMP_FORMAT);"
194221,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestWriteXMLResult.java,102,,"                out, true, false, ALWAYS_SUPPRESS, NO_WRAPPING, null, ""ROOT"", null, ""UTF-8"", DATE_FORMAT, TIME_FORMAT, TIMESTAMP_FORMAT);"
194222,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestWriteXMLResult.java,107,,"        String xmlResult = ""<ROOT><PERSON><NAME>Cleve Butler</NAME><AGE>42</AGE><COUNTRY>USA</COUNTRY></PERSON>"" +"
194223,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestWriteXMLResult.java,108,,"                ""<PERSON><NAME>Ainslie Fletcher</NAME><AGE>33</AGE><COUNTRY>UK</COUNTRY></PERSON></ROOT>"";"
194224,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestWriteXMLResult.java,119,,"                out, true, false, ALWAYS_SUPPRESS, NO_WRAPPING, null, null, ""PERSON"", ""UTF-8"", DATE_FORMAT, TIME_FORMAT, TIMESTAMP_FORMAT);"
194225,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestWriteXMLResult.java,247,,"                ""<PERSON><AGE>33</AGE><COUNTRY>UK</COUNTRY></PERSON></ROOT>"";"
194226,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestWriteXMLResult.java,262,,"        String xmlResult = ""<ROOT><PERSON><NAME></NAME><AGE>42</AGE><COUNTRY>USA</COUNTRY></PERSON>"" +"
194227,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestWriteXMLResult.java,341,,"        String xmlResult = ""<ROOT><PERSON><NAME>Cleve Butler</NAME><AGE>42</AGE><COUNTRY>USA</COUNTRY>"" +"
194228,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestWriteXMLResult.java,343,,"                ""<PERSON><NAME>Ainslie Fletcher</NAME><AGE>33</AGE><COUNTRY>UK</COUNTRY><ADDRESS>"" +"
194229,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestWriteXMLResult.java,432,,"                ""<NAME>Cleve Butler</NAME><AGE>42</AGE><COUNTRY>USA</COUNTRY></PERSON>"" +"
194230,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestWriteXMLResult.java,434,,"                ""<NAME>Ainslie Fletcher</NAME><AGE>33</AGE><COUNTRY>UK</COUNTRY></PERSON></ROOT>"";"
194231,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestWriteXMLResult.java,578,,"                out, true, false, ALWAYS_SUPPRESS, USE_PROPERTY_AS_WRAPPER, ""ARRAY"", ""ROOT"", ""PERSON"", ""UTF-8"", DATE_FORMAT, TIME_FORMAT, TIMESTAMP_FORMAT);"
194232,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLReader.java,62,,"        TestRunner runner = setup(""src/test/resources/xml/testschema"");"
194233,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,58,,"                null, ""CONTENT"", dateFormat, timeFormat, timestampFormat, Mockito.mock(ComponentLog.class));"
194234,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,59,,"        Assert.assertArrayEquals(new Object[] {""Cleve Butler"", 42, ""USA""}, reader.nextRecord().getValues());"
194235,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,59,,"        Assert.assertArrayEquals(new Object[] {""Cleve Butler"", 42, ""USA""}, reader.nextRecord().getValues());"
194236,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,71,,"        Map firstMap = (Map) first.getValue(""MAP"");"
194237,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,72,,"        assertEquals(""Cleve Butler"", firstMap.get(""NAME""));"
194238,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,73,,"        assertEquals(""42"", firstMap.get(""AGE""));"
194239,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,74,,"        assertEquals(""USA"", firstMap.get(""COUNTRY""));"
194240,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,79,,"        assertEquals(""Ainslie Fletcher"", secondMap.get(""NAME""));"
194241,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,99,,"        Assert.assertArrayEquals(new Object[] {""Amélie Bonfils"", 74, ""FR""}, ((Record) secondMap.get(""ENTRY"")).getValues());"
194242,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,100,,"        Assert.assertArrayEquals(new Object[] {""Elenora Scrivens"", 16, ""USA""}, ((Record) secondMap.get(""ENTRY2"")).getValues());"
194243,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,105,,"        InputStream is = new FileInputStream(""src/test/resources/xml/people_tag_in_characters.xml"");"
194244,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,125,,"        assertEquals(""attr content"", firstNested.getValue(""ATTR""));"
194245,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,125,,"        assertEquals(""attr content"", firstNested.getValue(""ATTR""));"
194246,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,126,,"        assertEquals(""inner content"", firstNested.getValue(""INNER""));"
194247,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,126,,"        assertEquals(""inner content"", firstNested.getValue(""INNER""));"
194248,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,253,,"        InputStream is = new FileInputStream(""src/test/resources/xml/people.xml"");"
194249,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,344,,"        assertEquals(""P1"", first.getAsString(""ATTR_ID""));"
194250,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,578,,"        InputStream is = new FileInputStream(""src/test/resources/xml/people_nested.xml"");"
194251,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,580,,"        fields.add(new RecordField(""ADDRESS"", RecordFieldType.CHOICE.getDataType()));"
194252,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,588,,"        assertEquals(""292 West Street"", nested.getValue(""STREET""));"
194253,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,588,,"        assertEquals(""292 West Street"", nested.getValue(""STREET""));"
194254,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,589,,"        assertEquals(""Jersey City"", nested.getValue(""CITY""));"
194255,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,589,,"        assertEquals(""Jersey City"", nested.getValue(""CITY""));"
194256,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,710,,"        Assert.assertArrayEquals(new Object[] {""123 6th St."", ""Seattle""},((Record) valuesSecondRecord[valuesSecondRecord.length - 1]).getValues());"
194257,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,710,,"        Assert.assertArrayEquals(new Object[] {""123 6th St."", ""Seattle""},((Record) valuesSecondRecord[valuesSecondRecord.length - 1]).getValues());"
194258,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,714,,"        Assert.assertArrayEquals(new Object[] {""44 Shirley Ave."", ""Los Angeles""},((Record) valuesThirdRecord[valuesThirdRecord.length - 1]).getValues());"
194259,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,714,,"        Assert.assertArrayEquals(new Object[] {""44 Shirley Ave."", ""Los Angeles""},((Record) valuesThirdRecord[valuesThirdRecord.length - 1]).getValues());"
194260,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,718,,"        Assert.assertArrayEquals(new Object[] {""70 Bowman St."" , ""Columbus""},((Record) valuesFourthRecord[valuesFourthRecord.length - 1]).getValues());"
194261,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,718,,"        Assert.assertArrayEquals(new Object[] {""70 Bowman St."" , ""Columbus""},((Record) valuesFourthRecord[valuesFourthRecord.length - 1]).getValues());"
194262,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,962,,"        Assert.assertArrayEquals(new Object[] {""child1"", ""child2""}, nestedArrayFirstRecord);"
194263,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,962,,"        Assert.assertArrayEquals(new Object[] {""child1"", ""child2""}, nestedArrayFirstRecord);"
194264,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,963,,"        assertNotEquals(null, firstRecord.getValue(""CHILD""));"
194265,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,1032,,"        Record nestedArrayFirstRecord = (Record) firstRecord.getValue(""CHILDREN"");"
194266,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,1070,,"        assertEquals(""daughter"", first_1_1_1.getValue(""ROLE""));"
194267,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,1070,,"        assertEquals(""daughter"", first_1_1_1.getValue(""ROLE""));"
194268,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,1071,,"        assertEquals(""1-1-1"", first_1_1_1.getValue(""ID""));"
194269,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,1072,,"        assertEquals(""Selina"", first_1_1_1.getValue(""NAME""));"
194270,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,1075,,"        assertEquals(""son"", first_1_1_2.getValue(""ROLE""));"
194271,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,1076,,"        assertEquals(""1-1-2"", first_1_1_2.getValue(""ID""));"
194272,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,1077,,"        assertEquals(""Hans"", first_1_1_2.getValue(""NAME""));"
194273,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,1094,,"        assertEquals(""2-1-1"", second_2_1_1.getValue(""ID""));"
194274,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordReader.java,1117,,"        assertEquals(""mother"", first_1_1.getValue(""ROLE""));"
194275,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/src/test/java/org/apache/nifi/xml/TestXMLRecordSetWriter.java,70,,"        runner.setProperty(writer, XMLRecordSetWriter.ROOT_TAG_NAME, ""root"");"
194276,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-sink-service-bundle/nifi-record-sink-service/src/test/java/org/apache/nifi/record/sink/lookup/TestRecordSinkServiceLookup.java,103,,"            String returnedName = writeResult.getAttributes().get(""my.name"");"
194277,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-sink-service-bundle/nifi-record-sink-service/src/test/java/org/apache/nifi/record/sink/lookup/TestRecordSinkServiceLookup.java,106,,"            fail(""Should have completed successfully"");"
194278,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-ssl-context-bundle/nifi-ssl-context-service/src/main/java/org/apache/nifi/ssl/StandardSSLContextService.java,429,,"                    .subject(""Keystore Properties"").build());"
194279,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-ssl-context-bundle/nifi-ssl-context-service/src/main/java/org/apache/nifi/ssl/StandardSSLContextService.java,463,,"                results.add(new ValidationResult.Builder().valid(false).explanation(""If the truststore filename or type are set, both must be populated"").subject(""Truststore Properties"").build());"
194280,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-ssl-context-bundle/nifi-ssl-context-service/src/test/java/org/apache/nifi/ssl/SSLContextServiceTest.java,122,,"        runner.addControllerService(""test-good1"", service);"
194281,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-services/nifi-ssl-context-bundle/nifi-ssl-context-service/src/test/java/org/apache/nifi/ssl/SSLContextServiceTest.java,131,,"        runner.setProperty(""SSL Context Svc ID"", ""test-good1"");"
194282,./TargetProjects/nifi/nifi-nar-bundles/nifi-stateful-analysis-bundle/nifi-stateful-analysis-processors/src/test/java/org/apache/nifi/processors/stateful/analysis/AttributeRollingWindowIT.java,45,,"        runner.setProperty(AttributeRollingWindow.VALUE_TO_TRACK, ""${value}"");"
194283,./TargetProjects/nifi/nifi-nar-bundles/nifi-stateful-analysis-bundle/nifi-stateful-analysis-processors/src/test/java/org/apache/nifi/processors/stateful/analysis/AttributeRollingWindowIT.java,50,,"        attributes.put(""value"", ""bad"");"
194284,./TargetProjects/nifi/nifi-nar-bundles/nifi-stateful-analysis-bundle/nifi-stateful-analysis-processors/src/test/java/org/apache/nifi/processors/stateful/analysis/AttributeRollingWindowIT.java,116,,"        flowFile.assertAttributeEquals(ROLLING_WINDOW_VALUE_KEY, ""1.0"");"
194285,./TargetProjects/nifi/nifi-nar-bundles/nifi-stateful-analysis-bundle/nifi-stateful-analysis-processors/src/test/java/org/apache/nifi/processors/stateful/analysis/AttributeRollingWindowIT.java,125,,"        flowFile.assertAttributeEquals(ROLLING_WINDOW_VALUE_KEY, ""2.0"");"
194286,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,96,,"        runner.setProperty(""attribute.1"", ""value.1"");"
194287,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,96,,"        runner.setProperty(""attribute.1"", ""value.1"");"
194288,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,97,,"        runner.setProperty(""attribute.2"", ""new.value.2"");"
194289,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,114,,"        runner.setProperty(""NewAttr"", ""${one:plus(${two})}"");"
194290,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,131,,"        runner.setProperty(""count"", ""${getStateValue('count'):plus(1)}"");"
194291,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,132,,"        runner.setProperty(""sum"", ""${getStateValue('sum'):plus(${pencils})}"");"
194292,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,139,,"        attributes2.put(""pencils"", ""2"");"
194293,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,232,,"        addRule(criteria, ""rule"", Arrays.asList("
194294,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,234,,"                ""${getStateValue('maxValue'):lt(${value})}""), getMap("
194295,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,236,,"                ""maxValue"", ""${value}""));"
194296,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,236,,"                ""maxValue"", ""${value}""));"
194297,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,244,,"        attributes.put(""value"", ""1"");"
194298,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,276,,"                ""maxValue2"", ""${value}""));"
194299,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,437,,"                ""whatIsIt"", ""even""));"
194300,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,515,,"                        ""attribute.2"", ""value.2""));"
194301,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,561,,"                ""${attribute.1:equals('value.1')}""), getMap("
194302,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,592,,"        runner.setProperty(""attribute.2"", ""default.value.2"");"
194303,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,608,,"        addRule(criteria, ""rule 1"", Arrays.asList("
194304,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,613,,"        addRule(criteria, ""rule 2"", Arrays.asList("
194305,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,617,,"                        ""attribute.3"", ""value.3""));"
194306,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,617,,"                        ""attribute.3"", ""value.3""));"
194307,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,806,,"        attributes.put(""attributex2"", ""valuex2"");"
194308,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,846,,"        attributes.put(""attribute.6"", ""value.6"");"
194309,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,846,,"        attributes.put(""attribute.6"", ""value.6"");"
194310,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,847,,"        attributes.put(""sampleSize"", ""value.size"");"
194311,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,847,,"        attributes.put(""sampleSize"", ""value.size"");"
194312,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,848,,"        attributes.put(""sample.1"", ""value.sample.1"");"
194313,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,848,,"        attributes.put(""sample.1"", ""value.sample.1"");"
194314,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,849,,"        attributes.put(""simple.1"", ""value.simple.1"");"
194315,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-processor/src/test/java/org/apache/nifi/update/attributes/TestUpdateAttribute.java,849,,"        attributes.put(""simple.1"", ""value.simple.1"");"
194316,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-ui/src/main/java/org/apache/nifi/update/attributes/api/RuleResource.java,93,,"    public Response getEvaluationContext(@QueryParam(""processorId"") final String processorId) {"
194317,./TargetProjects/nifi/nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-ui/src/main/java/org/apache/nifi/update/attributes/api/RuleResource.java,96,,"        final NiFiWebConfigurationContext nifiWebContext = (NiFiWebConfigurationContext) servletContext.getAttribute(""nifi-web-configuration-context"");"
194318,./TargetProjects/nifi/nifi-nar-bundles/nifi-websocket-bundle/nifi-websocket-processors/src/test/java/org/apache/nifi/processors/websocket/TestPutWebSocket.java,79,,"        final String serviceId = ""ws-service"";"
194319,./TargetProjects/nifi/nifi-nar-bundles/nifi-websocket-bundle/nifi-websocket-processors/src/test/java/org/apache/nifi/processors/websocket/TestPutWebSocket.java,80,,"        final String endpointId = ""client-1"";"
194320,./TargetProjects/nifi/nifi-nar-bundles/nifi-websocket-bundle/nifi-websocket-processors/src/test/java/org/apache/nifi/processors/websocket/TestPutWebSocket.java,81,,"        final String textMessageFromServer = ""message from server."";"
194321,./TargetProjects/nifi/nifi-nar-bundles/nifi-websocket-bundle/nifi-websocket-services-jetty/src/test/java/org/apache/nifi/websocket/jetty/TestJettyWebSocketClient.java,33,,"        final ControllerServiceTestContext context = new ControllerServiceTestContext(service, ""service-id"");"
194322,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-bootstrap/src/main/java/org/apache/nifi/registry/bootstrap/RunNiFiRegistry.java,300,,"        modified.remove(""secret.key"");"
194323,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-bundle-utils/src/test/java/org/apache/nifi/registry/bundle/extract/nar/TestNarBundleExtractor.java,56,,"            assertEquals(""org.apache.nifi"", bundleIdentifier.getGroupId());"
194324,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-bundle-utils/src/test/java/org/apache/nifi/registry/bundle/extract/nar/docs/TestJacksonExtensionManifestParser.java,50,,"        assertEquals(""1.10.0-SNAPSHOT"", extensionManifest.getSystemApiVersion());"
194325,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyBundleVersionClient.java,169,,"                    target = target.queryParam(""version"", filterParams.getVersion());"
194326,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyBundleVersionClient.java,183,,"            throw new IllegalArgumentException(""Bundle id cannot be null or blank"");"
194327,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyBundleVersionClient.java,189,,"                    .resolveTemplate(""bundleId"", bundleId);"
194328,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyBundleVersionClient.java,205,,"            throw new IllegalArgumentException(""Version cannot be null or blank"");"
194329,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyExtensionRepoClient.java,67,,"            throw new IllegalArgumentException(""Bucket name cannot be null or blank"");"
194330,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyExtensionRepoClient.java,73,,"                    .resolveTemplate(""bucketName"", bucketName);"
194331,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyExtensionRepoClient.java,89,,"            throw new IllegalArgumentException(""Group id cannot be null or blank"");"
194332,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyExtensionRepoClient.java,96,,"                    .resolveTemplate(""groupId"", groupId);"
194333,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyExtensionRepoClient.java,119,,"        return executeAction(""Error retrieving versions for extension repo"", () -> {"
194334,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyExtensionRepoClient.java,124,,"                    .resolveTemplate(""artifactId"", artifactId);"
194335,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyExtensionRepoClient.java,143,,"                    .resolveTemplate(""version"", version);"
194336,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyExtensionRepoClient.java,226,,"        return executeAction(""Error retrieving version content for extension repo"", () -> {"
194337,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowClient.java,62,,"            throw new IllegalArgumentException(""Bucket Identifier cannot be blank"");"
194338,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowClient.java,67,,"                    .resolveTemplate(""bucketId"", bucketId);"
194339,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowClient.java,84,,"            throw new IllegalArgumentException(""Flow Identifier cannot be blank"");"
194340,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowClient.java,89,,"                    .path(""/{flowId}"")"
194341,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowClient.java,91,,"                    .resolveTemplate(""flowId"", flowId);"
194342,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowSnapshotClient.java,61,,"            throw new IllegalArgumentException(""Bucket Identifier cannot be blank"");"
194343,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowSnapshotClient.java,66,,"            throw new IllegalArgumentException(""Flow Identifier cannot be blank"");"
194344,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowSnapshotClient.java,71,,"                    .resolveTemplate(""bucketId"", bucketId)"
194345,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowSnapshotClient.java,72,,"                    .resolveTemplate(""flowId"", flowId);"
194346,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-data-model/src/main/java/org/apache/nifi/registry/extension/repo/ExtensionRepoVersion.java,40,,"            dataType = ""org.apache.nifi.registry.link.JaxbLink"", readOnly = true)"
194347,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-data-model/src/test/java/org/apache/nifi/registry/flow/TestVersionedRemoteProcessGroup.java,44,,"        vRPG.setTargetUris(""uri-2"");"
194348,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-data-model/src/test/java/org/apache/nifi/registry/flow/TestVersionedRemoteProcessGroup.java,49,,"        vRPG.setTargetUris(""uri-2,uri-3"");"
194349,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-data-model/src/test/java/org/apache/nifi/registry/flow/TestVersionedRemoteProcessGroup.java,79,,"        vRPG.setTargetUri(""uri-1"");"
194350,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/db/DataSourceFactory.java,63,,"            throw new IllegalStateException(NiFiRegistryProperties.DATABASE_URL + "" is required"");"
194351,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/db/DatabaseMetadataService.java,154,,"            ""SELECT "" +"
194352,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/db/DatabaseMetadataService.java,374,,"                ""FROM "" +"
194353,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/db/DatabaseMetadataService.java,378,,"                ""WHERE "" +"
194354,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/db/DatabaseMetadataService.java,437,,"                    ""ID, "" +"
194355,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/db/DatabaseMetadataService.java,515,,"                .append(""AND eb.group_id = ? "")"
194356,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/db/DatabaseMetadataService.java,516,,"                .append(""AND eb.artifact_id = ? "");"
194357,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/db/DatabaseMetadataService.java,581,,"        sqlBuilder.append("" AND "");"
194358,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/provider/flow/FlowMetadataSynchronizer.java,56,,"        LOGGER.info(""**************************************************"");"
194359,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/security/authorization/AuthorizerFactory.java,674,,"                                        throw new IllegalStateException(String.format(""User/user group already exists with the identity '%s'."", user.getIdentity()));"
194360,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProvider.java,700,,"                throw new AuthorizationAccessException(""User identity attribute ["" + userIdentityAttribute + ""] does not exist."");"
194361,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/AuthorizationService.java,228,,"            LOGGER.warn(""The specified user id [{}] does not exist."", identifier);"
194362,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/AuthorizationService.java,229,,"            throw new ResourceNotFoundException(""The specified user ID does not exist in this registry."");"
194363,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/AuthorizationService.java,302,,"            LOGGER.warn(""The specified user group id [{}] does not exist."", identifier);"
194364,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/AuthorizationService.java,303,,"            throw new ResourceNotFoundException(""The specified user group ID does not exist in this registry."");"
194365,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/AuthorizationService.java,366,,"            LOGGER.warn(""The specified access policy id [{}] does not exist."", identifier);"
194366,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/AuthorizationService.java,367,,"            throw new ResourceNotFoundException(""The specified policy does not exist in this registry."");"
194367,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,145,,"            throw new IllegalArgumentException(""Bucket identifier cannot be null"");"
194368,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,150,,"            LOGGER.warn(""The specified bucket id [{}] does not exist."", bucketIdentifier);"
194369,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,151,,"            throw new ResourceNotFoundException(""The specified bucket ID does not exist in this registry."");"
194370,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,326,,"            throw new IllegalArgumentException(""Bucket identifier cannot be null or blank"");"
194371,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,375,,"            throw new IllegalArgumentException(""Versioned flow identifier cannot be null or blank"");"
194372,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,387,,"            LOGGER.warn(""The specified flow id [{}] does not exist."", flowIdentifier);"
194373,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,388,,"            throw new ResourceNotFoundException(""The specified flow ID does not exist in this bucket."");"
194374,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,392,,"            throw new IllegalStateException(""The requested flow is not located in the given bucket"");"
194375,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,507,,"            throw new IllegalArgumentException(""Flow identifier cannot be null or blank"");"
194376,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,690,,"                    + flowEntity.getId() + "" and version "" + version);"
194377,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/extension/StandardExtensionService.java,430,,"            throw new IllegalArgumentException(""Bucket identifiers cannot be null"");"
194378,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/extension/docs/HtmlExtensionDocWriter.java,164,,"        xmlStreamWriter.writeStartElement(""table"");"
194379,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/extension/docs/HtmlExtensionDocWriter.java,172,,"        writeSimpleElement(xmlStreamWriter, ""td"", ""Full Name"", true, ""bundle-info"");"
194380,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/extension/docs/HtmlExtensionDocWriter.java,295,,"            writeSimpleElement(xmlStreamWriter, ""strong"", ""bold"");"
194381,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/extension/docs/HtmlExtensionDocWriter.java,320,,"            writeSimpleElement(xmlStreamWriter, ""th"", ""Description"");"
194382,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/extension/docs/HtmlExtensionDocWriter.java,481,,"                final String name = StringUtils.isBlank(dynamicProperty.getName()) ? ""Not Specified"" : dynamicProperty.getName();"
194383,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,84,,"        final BucketEntity bucket = metadataService.getBucketById(""does-not-exist"");"
194384,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,287,,"        final List<FlowEntity> flows = metadataService.getFlowsByName(""Flow 1"");"
194385,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,413,,"        final BundleEntity entity = metadataService.getBundle(""eb1"");"
194386,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,417,,"        assertEquals(""nifi-example-processors-nar"", entity.getName());"
194387,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,426,,"        assertEquals(""org.apache.nifi"", entity.getGroupId());"
194388,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,440,,"        final String artifact = ""nifi-example-service-api-nar"";"
194389,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,505,,"                BundleFilterParams.of(""org.apache.nifi"", ""nifi-example-processors-%""));"
194390,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,609,,"        bundleVersion.setSystemApiVersion(""2.0.0"");"
194391,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,684,,"                bucketIds, BundleVersionFilterParams.of(""org.apache.nifi"", ""nifi-example-processors-nar"", ""1.0.0""));"
194392,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,700,,"        assertEquals(""eb1-v1"", bundleVersion.getId());"
194393,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,901,,"        assertEquals(""org.apache.nifi.ExampleProcessor"", extension.getName());"
194394,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/event/TestEventFactory.java,98,,"        assertEquals(""unknown"", event.getField(EventFieldName.USER).getValue());"
194395,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/TestStandardProviderFactory.java,46,,"                .thenReturn(new ExtensionClassLoader(""/tmp"", new URL[0],this.getClass().getClassLoader()));"
194396,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/extension/TestFileSystemBundlePersistenceProvider.java,82,,"        final BundleVersionCoordinate versionCoordinate1 = getVersionCoordinate(""b1"", ""g1"", ""a1"", ""1.0.0"", type);"
194397,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/extension/TestFileSystemBundlePersistenceProvider.java,88,,"        final BundleVersionCoordinate versionCoordinate2 = getVersionCoordinate(""b1"", ""g1"", ""a1"", ""1.1.0"", type);"
194398,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/flow/TestFileSystemFlowPersistenceProvider.java,71,,"        createAndSaveSnapshot(fileSystemFlowProvider,""bucket1"", ""flow1"", 1, ""flow1v1"");"
194399,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/flow/TestFileSystemFlowPersistenceProvider.java,71,,"        createAndSaveSnapshot(fileSystemFlowProvider,""bucket1"", ""flow1"", 1, ""flow1v1"");"
194400,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/flow/TestFileSystemFlowPersistenceProvider.java,71,,"        createAndSaveSnapshot(fileSystemFlowProvider,""bucket1"", ""flow1"", 1, ""flow1v1"");"
194401,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/flow/TestFileSystemFlowPersistenceProvider.java,74,,"        createAndSaveSnapshot(fileSystemFlowProvider,""bucket1"", ""flow1"", 2, ""flow1v2"");"
194402,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/flow/git/TestGitFlowPersistenceProvider.java,101,,"                config.setString(""user"", null, ""name"", ""git-user"");"
194403,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/flow/git/TestGitFlowPersistenceProvider.java,127,,"                p.getFlowContent(""bucket-id-A"", ""flow-id-1"", 1);"
194404,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/flow/git/TestGitFlowPersistenceProvider.java,127,,"                p.getFlowContent(""bucket-id-A"", ""flow-id-1"", 1);"
194405,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/flow/git/TestGitFlowPersistenceProvider.java,164,,"            contextBuilder.flowId(""flow-id-2"").flowName(""FlowTwo"").comments(""4th commit."").version(1);"
194406,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/authorization/database/TestDatabaseAccessPolicyProvider.java,345,,"        configure(""does-not-exist"", null);"
194407,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/authorization/database/TestDatabaseAccessPolicyProvider.java,364,,"                .addUser(""user1"")"
194408,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/authorization/database/TestDatabaseAccessPolicyProvider.java,365,,"                .addGroup(""group1"")"
194409,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/authorization/database/TestDatabaseUserGroupProvider.java,135,,"        final String userIdentity1 = ""user1"";"
194410,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/authorization/database/TestDatabaseUserGroupProvider.java,136,,"        final String userIdentity2 = ""user2"";"
194411,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/authorization/database/TestDatabaseUserGroupProvider.java,247,,"        final User retrievedUser1 = userGroupProvider.getUser(""does-not-exist"");"
194412,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/authorization/database/TestDatabaseUserGroupProvider.java,285,,"        final Group group1 = new Group.Builder().identifier(UUID.randomUUID().toString()).name(""group1"").build();"
194413,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,141,,"        when(configurationContext.getProperty(PROP_USER_IDENTITY_ATTRIBUTE)).thenReturn(new StandardPropertyValue(""uid""));"
194414,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,145,,"        assertNotNull(ldapUserGroupProvider.getUserByIdentity(""user1""));"
194415,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,184,,"        when(configurationContext.getProperty(PROP_USER_SEARCH_FILTER)).thenReturn(new StandardPropertyValue(""(uid=user1)""));"
194416,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,206,,"        when(configurationContext.getProperty(PROP_USER_GROUP_ATTRIBUTE)).thenReturn(new StandardPropertyValue(""description"")); // using description in lieu of memberof"
194417,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,212,,"        final UserAndGroups user4AndGroups = ldapUserGroupProvider.getUserAndGroups(""user4"");"
194418,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,217,,"        final UserAndGroups user7AndGroups = ldapUserGroupProvider.getUserAndGroups(""user7"");"
194419,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,242,,"        assertEquals(""team1"", userAndGroups.getGroups().iterator().next().getName());"
194420,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,254,,"        when(configurationContext.getProperty(PROP_GROUP_MEMBER_ATTRIBUTE)).thenReturn(new StandardPropertyValue(""member""));"
194421,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,327,,"        final Group admins = groups.stream().filter(group -> ""admins"".equals(group.getName())).findFirst().orElse(null);"
194422,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,416,,"        final Group team2 = groups.stream().filter(group -> ""team2"".equals(group.getName())).findFirst().orElse(null);"
194423,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,574,,"        final AuthorizerConfigurationContext configurationContext = getBaseConfiguration(""ou=users-2,o=nifi"", null);"
194424,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,581,,"        final AuthorizerConfigurationContext configurationContext = getBaseConfiguration(""ou=users-2,o=nifi"", ""ou=groups-2,o=nifi"");"
194425,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,583,,"        when(configurationContext.getProperty(PROP_USER_OBJECT_CLASS)).thenReturn(new StandardPropertyValue(""room"")); // using room due to reqs of groupOfNames"
194426,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,592,,"        final Group team3 = groups.stream().filter(group -> ""team3"".equals(group.getName())).findFirst().orElse(null);"
194427,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/serialization/TestFlowContentSerializer.java,158,,"                fail(""Should fail"");"
194428,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,105,,"        bucket.setName(""My Bucket"");"
194429,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,106,,"        bucket.setDescription(""This is my bucket."");"
194430,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,152,,"        existingBucket.setDescription(""This is my bucket"");"
194431,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,281,,"        flowToDelete.setId(""flow1"");"
194432,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,316,,"        versionedFlow.setName(""My Flow"");"
194433,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,404,,"        flowEntity.setDescription(""This is my flow."");"
194434,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,637,,"        snapshotMetadata.setAuthor(""user1"");"
194435,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,730,,"        existingSnapshot.setComments(""This is an existing snapshot"");"
194436,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,732,,"        existingSnapshot.setCreatedBy(""test-user"");"
194437,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,1294,,"                .filter(p->p.getComponentId().equals(""ProcessorFirstV1"")).findFirst();"
194438,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/alias/RegistryUrlAliasServiceTest.java,53,,"        String external = ""http://localhost:18080"";"
194439,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/alias/RegistryUrlAliasServiceTest.java,65,,"        internal += ""/nifi-registry/"";"
194440,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-revision/nifi-registry-revision-entity-service/src/test/java/org/apache/nifi/registry/revision/entity/TestStandardRevisableEntityService.java,48,,"        final String userIdentity = ""user1"";"
194441,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-revision/nifi-registry-revision-entity-service/src/test/java/org/apache/nifi/registry/revision/entity/TestStandardRevisableEntityService.java,130,,"                createdEntity, ""user2"", () -> createdEntity);"
194442,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-revision/nifi-registry-revision-spring-jdbc/src/test/java/org/apache/nifi/registry/revision/jdbc/TestJdbcRevisionManager.java,118,,"        final String entityId = ""entity1"";"
194443,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-revision/nifi-registry-revision-spring-jdbc/src/test/java/org/apache/nifi/registry/revision/jdbc/TestJdbcRevisionManager.java,142,,"        final String entityId = ""entity-1"";"
194444,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-revision/nifi-registry-revision-spring-jdbc/src/test/java/org/apache/nifi/registry/revision/jdbc/TestJdbcRevisionManager.java,300,,"        createRevision(""entity2"", new Long(1), null);"
194445,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-security-utils/src/main/java/org/apache/nifi/registry/security/util/ProxiedEntitiesUtils.java,138,,"                logger.warn(""The provided DN ["" + rawDn + ""] contained dangerous characters that were escaped to ["" + escapedDn + ""]"");"
194446,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessPolicyResource.java,62,,"@Path(""/policies"")"
194447,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessPolicyResource.java,89,,"                    @Extension(name = ""access-policy"", properties = {"
194448,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessPolicyResource.java,90,,"                            @ExtensionProperty(name = ""action"", value = ""write""),"
194449,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessPolicyResource.java,91,,"                            @ExtensionProperty(name = ""resource"", value = ""/policies"") })"
194450,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessPolicyResource.java,123,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194451,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java,85,,"        value = ""access"","
194452,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java,169,,"                    ""The token returned is formatted as a JSON Web Token (JWT). The token is base64 encoded and comprised of three parts. The header, "" +"
194453,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java,170,,"                    ""the body, and the signature. The expiration of the token is a contained within the body. The token can be used in the Authorization header "" +"
194454,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java,171,,"                    ""in the format 'Authorization: Bearer <token>'."","
194455,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java,183,,"            throw new IllegalStateException(""Access tokens are only issued over HTTPS"");"
194456,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java,218,,"        final URI uri = URI.create(generateResourceUri(""access"", ""token""));"
194457,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java,303,,"            throw new IllegalStateException(""User authentication/authorization is only supported when running over HTTPS."");"
194458,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java,542,,"            throw new IllegalStateException(""OpenId Connect is not configured."");"
194459,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,86,,"                    @Extension(name = ""access-policy"", properties = {"
194460,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,87,,"                            @ExtensionProperty(name = ""action"", value = ""write""),"
194461,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,87,,"                            @ExtensionProperty(name = ""action"", value = ""write""),"
194462,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,88,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets/{bucketId}"") })"
194463,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,88,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets/{bucketId}"") })"
194464,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,98,,"            @PathParam(""bucketId"")"
194465,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,99,,"            @ApiParam(""The bucket identifier"")"
194466,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,121,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194467,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,164,,"            @PathParam(""flowId"")"
194468,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,165,,"            @ApiParam(""The flow identifier"")"
194469,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketResource.java,77,,"                    @Extension(name = ""access-policy"", properties = {"
194470,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketResource.java,78,,"                            @ExtensionProperty(name = ""action"", value = ""write""),"
194471,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketResource.java,79,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets"") })"
194472,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,80,,"            responseContainer = ""List"""
194473,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,114,,"                    @Extension(name = ""access-policy"", properties = {"
194474,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,115,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194475,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,115,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194476,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,116,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets/{bucketId}"") })"
194477,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,116,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets/{bucketId}"") })"
194478,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,126,,"            @PathParam(""bundleId"")"
194479,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,127,,"            @ApiParam(""The extension bundle identifier"")"
194480,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,188,,"            @QueryParam(""version"")"
194481,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,256,,"            @ApiParam(""The version of the bundle"")"
194482,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,78,,"            responseContainer = ""List"""
194483,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,101,,"                    @Extension(name = ""access-policy"", properties = {"
194484,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,102,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194485,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,102,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194486,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,103,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets/{bucketId}"") })"
194487,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,103,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets/{bucketId}"") })"
194488,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,113,,"            @PathParam(""bucketName"")"
194489,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,114,,"            @ApiParam(""The bucket name"")"
194490,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,146,,"            @PathParam(""groupId"")"
194491,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,180,,"            @ApiParam(""The group identifier"")"
194492,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,182,,"            @PathParam(""artifactId"")"
194493,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,183,,"            @ApiParam(""The artifact identifier"")"
194494,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,221,,"            @PathParam(""version"")"
194495,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,222,,"            @ApiParam(""The version"")"
194496,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/FlowResource.java,85,,"                    @Extension(name = ""access-policy"", properties = {"
194497,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/FlowResource.java,86,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194498,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/FlowResource.java,86,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194499,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/FlowResource.java,87,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets/{bucketId}"") })"
194500,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/FlowResource.java,87,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets/{bucketId}"") })"
194501,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/FlowResource.java,97,,"            @PathParam(""flowId"")"
194502,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/FlowResource.java,98,,"            @ApiParam(""The flow identifier"")"
194503,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/TenantResource.java,60,,"@Path(""tenants"")"
194504,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/TenantResource.java,93,,"                    @Extension(name = ""access-policy"", properties = {"
194505,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/TenantResource.java,94,,"                            @ExtensionProperty(name = ""action"", value = ""write""),"
194506,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/TenantResource.java,94,,"                            @ExtensionProperty(name = ""action"", value = ""write""),"
194507,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/TenantResource.java,95,,"                            @ExtensionProperty(name = ""resource"", value = ""/tenants"") })"
194508,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/TenantResource.java,95,,"                            @ExtensionProperty(name = ""resource"", value = ""/tenants"") })"
194509,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/TenantResource.java,133,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194510,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/link/LinkService.java,74,,"        return Link.fromUri(uri).rel(""self"").build();"
194511,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/link/LinkService.java,114,,"                .resolveTemplate(""bundleId"", extensionBundle.getIdentifier())"
194512,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/link/LinkService.java,127,,"                .resolveTemplate(""version"", bundleVersion.getVersion())"
194513,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/link/LinkService.java,154,,"                .resolveTemplate(""name"", extensionMetadata.getName())"
194514,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/link/LinkService.java,182,,"                .resolveTemplate(""bucketName"", extensionRepoBucket.getBucketName())"
194515,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/link/LinkService.java,195,,"                .resolveTemplate(""groupId"", extensionRepoGroup.getGroupId())"
194516,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/link/LinkService.java,209,,"                .resolveTemplate(""artifactId"", extensionRepoArtifact.getArtifactId())"
194517,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/service/StandardServiceFacade.java,1090,,"            throw new IllegalArgumentException(""Unable to authorize access because bucket identifier is null or blank"");"
194518,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/BucketsIT.java,46,,"                .target(createURL(""buckets""))"
194519,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/BucketsIT.java,118,,"        bucket.setName(""Integration Test Bucket"");"
194520,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/BucketsIT.java,119,,"        bucket.setDescription(""A bucket created by an integration test."");"
194521,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/BucketsIT.java,161,,"                .target(createURL(""buckets/"" + createdBucket.getIdentifier()))"
194522,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/FlowsIT.java,61,,"                .target(createURL(""buckets/{bucketId}/flows""))"
194523,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/FlowsIT.java,62,,"                .resolveTemplate(""bucketId"", emptyBucketId)"
194524,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/FlowsIT.java,117,,"        final RevisionInfo initialRevision = new RevisionInfo(""FlowsIT"", 0L);"
194525,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/FlowsIT.java,128,,"        flow.setName(""Test Flow"");"
194526,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/FlowsIT.java,129,,"        flow.setDescription(""This is a flow created by an integration test."");"
194527,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/FlowsIT.java,175,,"                .target(createURL(""buckets/{bucketId}/flows/{flowId}""))"
194528,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/FlowsIT.java,177,,"                .resolveTemplate(""flowId"", createdFlow.getIdentifier())"
194529,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/FlowsIT.java,353,,"                .target(createURL(""buckets/{bucketId}/flows/{flowId}/versions""))"
194530,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/NoRevisionsIT.java,77,,"                .resolveTemplate(""bucketId"", flow.getBucketIdentifier())"
194531,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureKerberosIT.java,73,,"                 validTicket = Arrays.equals(validKerberosTicket.getBytes(""UTF-8""), token);"
194532,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureKerberosIT.java,109,,"                .target(createURL(""/access/token/kerberos""))"
194533,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureKerberosIT.java,111,,"                .header(""Authorization"", ""Negotiate "" + validTicket)"
194534,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,159,,"        final String basicAuthCredentials = encodeCredentialsForBasicAuth(""nifiadmin"", ""password"");"
194535,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,163,,"                .header(""Authorization"", ""Basic "" + basicAuthCredentials)"
194536,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,163,,"                .header(""Authorization"", ""Basic "" + basicAuthCredentials)"
194537,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,193,,"        final String basicAuthCredentials = encodeCredentialsForBasicAuth(""nobel"", ""password"");"
194538,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,213,,"                .header(""Authorization"", ""Bearer "" + token)"
194539,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,287,,"                .target(createURL(""/access""))"
194540,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,429,,"                    ""\""accessPolicies\"":[],"" +"
194541,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,430,,"                    ""\""configurable\"":false"" +"
194542,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,532,,"                .target(createURL(""buckets""))"
194543,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,562,,"                .target(createURL(""policies""))"
194544,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,729,,"                .target(createURL(""policies/"" + policyId))"
194545,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureNiFiRegistryClientIT.java,206,,"            fail(""Shouldn't have been able to retrieve flow"");"
194546,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/TenantResourceTest.java,68,,"        RevisionInfo revisionInfo = new RevisionInfo(""client1"", 0L);"
194547,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/TenantResourceTest.java,69,,"        User user = new User(null, ""identity"");"
194548,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/TenantResourceTest.java,73,,"        User result = new User(""identifier"", user.getIdentity());"
194549,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/UnsecuredNiFiRegistryClientIT.java,379,,"        assertEquals(""org.apache.nifi"", testNarV1Bundle.getGroupId());"
194550,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/UnsecuredNiFiRegistryClientIT.java,392,,"        assertEquals(""1.0.0"", testNarV1Metadata.getVersion());"
194551,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/UnsecuredNiFiRegistryClientIT.java,541,,"        final BundleVersion bundleVersion2 = bundleVersionClient.getBundleVersion(testNarV1Bundle.getIdentifier(), ""2.0.0"");"
194552,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/link/TestLinkService.java,230,,"                ""buckets/"" + b.getIdentifier(), b.getLink().getUri().toString()));"
194553,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/link/TestLinkService.java,257,,"                Assert.assertEquals(""bundles/"" + i.getIdentifier(), i.getLink().getUri().toString());"
194554,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/link/TestLinkService.java,298,,"                ""extension-repository/"" + i.getBucketName(),"
194555,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITCreateDuplicateBucket.java,65,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""[data-automation-id='new-bucket-button']"")));"
194556,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITCreateDuplicateBucket.java,72,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""#nifi-registry-admin-create-bucket-dialog"")));"
194557,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITCreateDuplicateBucket.java,75,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""#nifi-registry-admin-create-bucket-dialog input"")));"
194558,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITCreateDuplicateBucket.java,85,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""[data-automation-id='create-new-bucket-button']"")));"
194559,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITCreateMultipleBuckets.java,74,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""#nifi-registry-admin-create-bucket-dialog input"")));"
194560,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITCreateMultipleBuckets.java,91,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""[data-automation-id='create-new-bucket-button']"")));"
194561,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITRenameBucketDuplicate.java,65,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""[data-automation-id='new-bucket-button']"")));"
194562,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITRenameBucketDuplicate.java,72,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""#nifi-registry-admin-create-bucket-dialog"")));"
194563,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITRenameBucketDuplicate.java,75,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""#nifi-registry-admin-create-bucket-dialog input"")));"
194564,./TargetProjects/nifi/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITRenameBucketDuplicate.java,85,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""[data-automation-id='create-new-bucket-button']"")));"
194565,./TargetProjects/nifi/nifi-registry/nifi-registry-extensions/nifi-registry-aws/nifi-registry-aws-extensions/src/main/java/org/apache/nifi/registry/aws/S3BundlePersistenceProvider.java,85,,"            throw new ProviderCreationException(""The property '"" + BUCKET_NAME_PROP + ""' must be provided"");"
194566,./TargetProjects/nifi/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerAuthorizer.java,178,,"                .thenReturn(new StandardPropertyValue(""true""));"
194567,./TargetProjects/nifi/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerAuthorizer.java,186,,"            Assert.fail(""Should have thrown exception"");"
194568,./TargetProjects/nifi/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerAuthorizer.java,279,,"        final String systemResource = ""/system"";"
194569,./TargetProjects/nifi/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerAuthorizer.java,281,,"        final String user = ""admin"";"
194570,./TargetProjects/nifi/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerBasePluginWithPolicies.java,56,,"        final String resourceIdentifier1 = ""/resource-1"";"
194571,./TargetProjects/nifi/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerBasePluginWithPolicies.java,63,,"        policy1Item.setAccesses(Stream.of(new RangerPolicy.RangerPolicyItemAccess(""READ"")).collect(Collectors.toList()));"
194572,./TargetProjects/nifi/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerBasePluginWithPolicies.java,77,,"        policy2Item.setAccesses(Stream.of(new RangerPolicy.RangerPolicyItemAccess(""READ""), new RangerPolicy.RangerPolicyItemAccess(""WRITE"")).collect(Collectors.toList()));"
194573,./TargetProjects/nifi/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerBasePluginWithPolicies.java,89,,"        serviceDef.setName(""nifi-registry"");"
194574,./TargetProjects/nifi/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerBasePluginWithPolicies.java,142,,"        assertFalse(pluginWithPolicies.doesPolicyExist(""resource-3"", RequestAction.WRITE));"
194575,./TargetProjects/nifi/nifi-stateless/nifi-stateless-bundle/nifi-stateless-engine/src/main/java/org/apache/nifi/stateless/config/PropertiesFileFlowDefinitionParser.java,155,,"                    logger.warn(""Encountered unexpected property <"" + propertyName + ""> in flow definition. This property will be ignored."");"
194576,./TargetProjects/nifi/nifi-stateless/nifi-stateless-bundle/nifi-stateless-engine/src/main/java/org/apache/nifi/stateless/config/PropertiesFileFlowDefinitionParser.java,155,,"                    logger.warn(""Encountered unexpected property <"" + propertyName + ""> in flow definition. This property will be ignored."");"
194577,./TargetProjects/nifi/nifi-stateless/nifi-stateless-bundle/nifi-stateless-engine/src/main/java/org/apache/nifi/stateless/queue/StatelessFlowFileQueue.java,289,,"        throw new UnsupportedOperationException(""Cannot list FlowFiles in a queue in Stateless NiFi"");"
194578,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/AsyncCommitCallbackIT.java,68,,"        builder.createConnection(generate, throwException, ""success"");"
194579,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/AsyncCommitCallbackIT.java,102,,"        testCleanupAfterFlowFilesTerminated(""asynchronous"");"
194580,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/AsyncCommitCallbackIT.java,107,,"        testCleanupAfterFlowFilesTerminated(""synchronous"");"
194581,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/AsyncCommitCallbackIT.java,112,,"        final VersionedProcessor ingestFile = builder.createSimpleProcessor(""IngestFile"");"
194582,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/AsyncCommitCallbackIT.java,114,,"        ingestProperties.put(""Filename"", inputFile.getAbsolutePath());"
194583,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/AsyncCommitCallbackIT.java,115,,"        ingestProperties.put(""Commit Mode"", commitMode);"
194584,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/AsyncCommitCallbackIT.java,118,,"        final VersionedProcessor replace = builder.createSimpleProcessor(""ReplaceWithFile"");"
194585,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/CreatesFlowFileIT.java,49,,"        assertEquals(Collections.singleton(""Out""), dataflow.getOutputPortNames());"
194586,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/InputOutputIT.java,51,,"        dataflow.enqueue(new byte[0], Collections.singletonMap(""abc"", ""123""), ""In"");"
194587,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/InputOutputIT.java,51,,"        dataflow.enqueue(new byte[0], Collections.singletonMap(""abc"", ""123""), ""In"");"
194588,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/InputOutputIT.java,57,,"        final List<FlowFile> outputFlowFiles = result.getOutputFlowFiles(""Out"");"
194589,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/InputOutputIT.java,62,,"        assertEquals(""bar"", output.getAttribute(""foo""));"
194590,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/InputOutputIT.java,62,,"        assertEquals(""bar"", output.getAttribute(""foo""));"
194591,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/RequiresAdditionalInputIT.java,53,,"        final VersionedPort mergedPort = flowBuilder.createOutputPort(""merged"");"
194592,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/RequiresAdditionalInputIT.java,54,,"        final VersionedPort originalPort = flowBuilder.createOutputPort(""original"");"
194593,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/RequiresAdditionalInputIT.java,58,,"        generateProperties.put(""Text"", ""abc"");"
194594,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/RequiresAdditionalInputIT.java,61,,"        final VersionedProcessor merge = flowBuilder.createSimpleProcessor(""ConcatenateFlowFiles"");"
194595,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/RequiresAdditionalInputIT.java,62,,"        merge.setProperties(Collections.singletonMap(""FlowFile Count"", String.valueOf(flowFileCount)));"
194596,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/basics/RollbackOnExceptionIT.java,50,,"        builder.createConnection(generate, setAttribute, ""success"");"
194597,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/classloader/InstanceClassLoaderIT.java,44,,"        passThrough1.setAutoTerminatedRelationships(Collections.singleton(""success""));"
194598,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/parameters/ParameterContextIT.java,56,,"        final VersionedPort outPort = flowBuilder.createOutputPort(""Out"");"
194599,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/parameters/ParameterContextIT.java,57,,"        final VersionedProcessor generate = flowBuilder.createSimpleProcessor(""GenerateFlowFile"");"
194600,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/parameters/ParameterContextIT.java,59,,"        generate.setProperties(Collections.singletonMap(""Batch Size"", ""#{three}""));"
194601,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/parameters/ParameterContextIT.java,59,,"        generate.setProperties(Collections.singletonMap(""Batch Size"", ""#{three}""));"
194602,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/parameters/ParameterContextIT.java,60,,"        flowBuilder.createConnection(generate, outPort, ""success"");"
194603,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/parameters/ParameterContextIT.java,71,,"        final VersionedParameterContext parameterContext = flowBuilder.createParameterContext(""Context 1"");"
194604,./TargetProjects/nifi/nifi-system-tests/nifi-stateless-system-test-suite/src/test/java/org/apache/nifi/stateless/parameters/ParameterContextIT.java,72,,"        parameterContext.getParameters().add(createVersionedParameter(""three"", ""-1""));  // Set value to -1. This should be overridden by the Numeric Parameter Context."
194605,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-extensions-bundle/nifi-system-test-extensions/src/main/java/org/apache/nifi/cs/tests/system/StandardSleepService.java,40,,"        .defaultValue(""0 sec"")"
194606,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-extensions-bundle/nifi-system-test-extensions/src/main/java/org/apache/nifi/processors/tests/system/Sleep.java,47,,"        .defaultValue(""0 sec"")"
194607,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/NiFiClientUtil.java,331,,"        waitForProcessorState(processorId, ""RUNNING"");"
194608,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/NiFiSystemIT.java,121,,"        getClientUtil().stopProcessGroupComponents(""root"");"
194609,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/SpawnedStandaloneNiFiInstanceFactory.java,144,,"                final File destinationNifiProperties = new File(destinationConf, ""nifi.properties"");"
194610,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/controllerservice/ControllerServiceApiValidationIT.java,34,,"        final ControllerServiceEntity fakeServiceEntity = getClientUtil().createControllerService(""FakeControllerService1"");"
194611,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/controllerservice/ControllerServiceApiValidationIT.java,39,,"        runStatusEntity.setState(""ENABLED"");"
194612,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/controllerservice/ControllerServiceApiValidationIT.java,42,,"        getClientUtil().waitForControllerSerivcesEnabled(""root"");"
194613,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/controllerservice/ControllerServiceApiValidationIT.java,47,,"        assertEquals(""Stopped"", processorStatus);"
194614,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/loadbalance/LoadBalanceIT.java,74,,"        final ProcessorEntity generate = getClientUtil().createProcessor(""GenerateFlowFile"");"
194615,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/loadbalance/LoadBalanceIT.java,75,,"        final ProcessorEntity count = getClientUtil().createProcessor(""CountEvents"");"
194616,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/loadbalance/LoadBalanceIT.java,77,,"        final ConnectionEntity connection = getClientUtil().createConnection(generate, count, ""success"");"
194617,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/loadbalance/LoadBalanceIT.java,82,,"        generateProperties.put(""File Size"", ""1 MB"");"
194618,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/loadbalance/LoadBalanceIT.java,82,,"        generateProperties.put(""File Size"", ""1 MB"");"
194619,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/loadbalance/LoadBalanceIT.java,83,,"        generateProperties.put(""Batch Size"", ""20"");"
194620,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/loadbalance/LoadBalanceIT.java,175,,"        generateProperties.put(""number"", ""0"");"
194621,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/parameters/ParameterContextIT.java,56,,"        parameterEntities.add(createParameterEntity(""foo"", null, false, ""bar""));"
194622,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/parameters/ParameterContextIT.java,56,,"        parameterEntities.add(createParameterEntity(""foo"", null, false, ""bar""));"
194623,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/parameters/ParameterContextIT.java,127,,"        setParameterContext(""root"", createdContextEntity);"
194624,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/parameters/ParameterContextIT.java,133,,"        final ProcessorEntity generate = getClientUtil().createProcessor(""GenerateFlowFile"");"
194625,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/parameters/ParameterContextIT.java,135,,"        getClientUtil().setAutoTerminatedRelationships(generate, ""success"");"
194626,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/parameters/ParameterContextIT.java,260,,"        generateProperties.put(""Text"", ""#{Text}"");"
194627,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/parameters/ParameterContextIT.java,328,,"        final ParameterContextEntity createdContextEntity = createParameterContext(""sleep"", ""6 secs"");"
194628,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/pg/SingleFlowFileConcurrencyIT.java,44,,"        final ProcessGroupEntity processGroupEntity = getClientUtil().createProcessGroup(""My Group"", ""root"");"
194629,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/pg/SingleFlowFileConcurrencyIT.java,60,,"        final ConnectionEntity generateToInput = getClientUtil().createConnection(generate, inputPort, ""success"");"
194630,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/pg/SingleFlowFileConcurrencyIT.java,158,,"        assertEquals(""1"", attributes.get(""batch.output.Out""));"
194631,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/pg/SingleFlowFileConcurrencyIT.java,159,,"        assertEquals(""1"", attributes.get(""batch.output.Out2""));"
194632,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/provenance/ProvenanceRepositoryIT.java,65,,"        getClientUtil().setAutoTerminatedRelationships(count, ""success"");"
194633,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/provenance/ProvenanceRepositoryIT.java,101,,"        generateFlowFile = getClientUtil().updateProcessorProperties(generateFlowFile, Collections.singletonMap(""Batch Size"", ""800""));"
194634,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/repositories/ContentAccessIT.java,68,,"        final ProcessorEntity terminateAa = getClientUtil().createProcessor(""TerminateFlowFile"");"
194635,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/validation/DependentPropertyValidationIT.java,40,,"        getClientUtil().updateProcessorProperties(processor, Collections.singletonMap(""Always Optional"", ""hello""));"
194636,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/variables/ProcessGroupVariablesIT.java,37,,"        ProcessGroupEntity rootGroup = getNifiClient().getProcessGroupClient().getProcessGroup(""root"");"
194637,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/variables/ProcessGroupVariablesIT.java,38,,"        getClientUtil().updateVariableRegistry(rootGroup, Collections.singletonMap(""abc"", ""123""));"
194638,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/variables/ProcessGroupVariablesIT.java,38,,"        getClientUtil().updateVariableRegistry(rootGroup, Collections.singletonMap(""abc"", ""123""));"
194639,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/variables/ProcessGroupVariablesIT.java,42,,"        getClientUtil().updateProcessorProperties(generateFlowFile, Collections.singletonMap(""Value"", ""Hello ${abc}""));"
194640,./TargetProjects/nifi/nifi-system-tests/nifi-system-test-suite/src/test/java/org/apache/nifi/tests/system/variables/ProcessGroupVariablesIT.java,46,,"        final ConnectionEntity connection = getClientUtil().createConnection(generateFlowFile, countEvents, ""success"");"
194641,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/main/java/org/apache/nifi/toolkit/cli/impl/client/nifi/impl/JerseyConnectionClient.java,136,,"            throw new IllegalArgumentException(""Connection ID cannot be null"");"
194642,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/main/java/org/apache/nifi/toolkit/cli/impl/client/nifi/impl/JerseyConnectionClient.java,164,,"                .resolveTemplate(""requestId"", dropRequestId);"
194643,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/main/java/org/apache/nifi/toolkit/cli/impl/client/nifi/impl/JerseyControllerClient.java,113,,"            throw new IllegalArgumentException(""Node ID cannot be null or empty"");"
194644,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/main/java/org/apache/nifi/toolkit/cli/impl/client/nifi/impl/JerseyControllerClient.java,117,,"            final WebTarget target = controllerTarget.path(""cluster/nodes/"" + nodeId);"
194645,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/main/java/org/apache/nifi/toolkit/cli/impl/client/nifi/impl/JerseyProcessGroupClient.java,82,,"            throw new IllegalArgumentException(""Process group id cannot be null or blank"");"
194646,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/main/java/org/apache/nifi/toolkit/cli/impl/client/nifi/impl/JerseyProcessGroupClient.java,145,,"                    .resolveTemplate(""processGroupId"", processGroupId);"
194647,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/main/java/org/apache/nifi/toolkit/cli/impl/client/nifi/impl/JerseyProcessGroupClient.java,163,,"            throw new IllegalArgumentException(""Request id cannot be null or blank"");"
194648,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/main/java/org/apache/nifi/toolkit/cli/impl/command/composite/QuickImport.java,175,,"            println(""Created new flow '"" + flowName + ""'..."");"
194649,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/main/java/org/apache/nifi/toolkit/cli/impl/command/nifi/pg/PGDisableControllerServices.java,127,,"        println("" - "" + serviceStates.getEnabled() + "" enabled"");"
194650,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/test/java/org/apache/nifi/toolkit/cli/impl/command/registry/RegistryManualIT.java,95,,"                "" --userNameList "" + TEST_USER_NAME +"
194651,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/test/java/org/apache/nifi/toolkit/cli/impl/command/registry/RegistryManualIT.java,96,,"                "" --userIdList "" + testUserId"
194652,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/test/java/org/apache/nifi/toolkit/cli/impl/command/registry/RegistryManualIT.java,167,,"            ""--accessPolicyResource "" + resource +"
194653,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/test/java/org/apache/nifi/toolkit/cli/impl/command/registry/RegistryManualIT.java,168,,"                "" --accessPolicyAction "" + action +"
194654,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/test/java/org/apache/nifi/toolkit/cli/impl/command/registry/tenant/TestTenantHelper.java,38,,"            createTenant(""__1"", ""__1""),"
194655,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/test/java/org/apache/nifi/toolkit/cli/impl/command/registry/tenant/TestTenantHelper.java,39,,"            createTenant(""__2"", ""__2"")"
194656,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/test/java/org/apache/nifi/toolkit/cli/impl/command/registry/tenant/TestTenantHelper.java,57,,"        Tenant tenantFoundByName3 = createTenant(""__3"", ""name3"");"
194657,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/test/java/org/apache/nifi/toolkit/cli/impl/command/registry/tenant/TestTenantHelper.java,58,,"        Tenant tenantNotFound4 = createTenant(""__4"", ""__4"");"
194658,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-cli/src/test/java/org/apache/nifi/toolkit/cli/impl/result/writer/TestDynamicTableWriter.java,78,,"                ""12345-12345-12345-12345-12345-12345"","
194659,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-flowanalyzer/src/main/java/org/apache/nifi/toolkit/flowanalyzer/FlowAnalyzerDriver.java,49,,"        BigDecimal totalDataSize = new BigDecimal(""0.0"");"
194660,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-s2s/src/test/java/org/apache/nifi/toolkit/s2s/SiteToSiteSenderTest.java,83,,"        DataPacketDto dataPacketDto = new DataPacketDto(""test-data"".getBytes(StandardCharsets.UTF_8)).putAttribute(""key"", ""value"");"
194661,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-s2s/src/test/java/org/apache/nifi/toolkit/s2s/SiteToSiteSenderTest.java,83,,"        DataPacketDto dataPacketDto = new DataPacketDto(""test-data"".getBytes(StandardCharsets.UTF_8)).putAttribute(""key"", ""value"");"
194662,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-s2s/src/test/java/org/apache/nifi/toolkit/s2s/SiteToSiteSenderTest.java,83,,"        DataPacketDto dataPacketDto = new DataPacketDto(""test-data"".getBytes(StandardCharsets.UTF_8)).putAttribute(""key"", ""value"");"
194663,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-tls/src/test/java/org/apache/nifi/toolkit/tls/configuration/InstanceDefinitionTest.java,47,,"        testCreateDefinitions(Arrays.asList(""hostname""), Arrays.asList(""hostname""), Arrays.asList(1), false);"
194664,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-tls/src/test/java/org/apache/nifi/toolkit/tls/configuration/InstanceDefinitionTest.java,67,,"                integerRange(1, 10).flatMap(v -> integerRange(2, 5).flatMap(v2 -> integerRange(1, 20).map(v3 -> ""host"" + v + ""name"" + String.format(""%02d"", v2)))).collect(Collectors.toList()),"
194665,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-tls/src/test/java/org/apache/nifi/toolkit/tls/configuration/InstanceDefinitionTest.java,67,,"                integerRange(1, 10).flatMap(v -> integerRange(2, 5).flatMap(v2 -> integerRange(1, 20).map(v3 -> ""host"" + v + ""name"" + String.format(""%02d"", v2)))).collect(Collectors.toList()),"
194666,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-tls/src/test/java/org/apache/nifi/toolkit/tls/configuration/InstanceIdentifierTest.java,92,,"        testCreateIdentifiers(Arrays.asList(""hostname""), Arrays.asList(""hostname""), Arrays.asList(1));"
194667,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-tls/src/test/java/org/apache/nifi/toolkit/tls/service/client/TlsCertificateAuthorityClientCommandLineTest.java,141,,"        String testPath = ""/1/2/3/4"";"
194668,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-tls/src/test/java/org/apache/nifi/toolkit/tls/service/client/TlsCertificateSigningRequestPerformerTest.java,159,,"            fail(""Expected IOE"");"
194669,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-tls/src/test/java/org/apache/nifi/toolkit/tls/standalone/TlsToolkitStandaloneCommandLineTest.java,227,,"        String testPassword = ""testPassword"";"
194670,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-tls/src/test/java/org/apache/nifi/toolkit/tls/standalone/TlsToolkitStandaloneCommandLineTest.java,376,,"        InstanceDefinition nifi3_1 = definitionMap.get(new InstanceIdentifier(""nifi3"", 1));"
194671,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-tls/src/test/java/org/apache/nifi/toolkit/tls/standalone/TlsToolkitStandaloneCommandLineTest.java,469,,"        tlsToolkitStandaloneCommandLine.parse(""-splitKeystore"", keystoreFile, ""-S"", keystorePass, ""-K"", keyPass, ""-o"", outputFolder.getPath());"
194672,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-tls/src/test/java/org/apache/nifi/toolkit/tls/standalone/TlsToolkitStandaloneTest.java,258,,"        runAndAssertExitCode(ExitCode.SUCCESS, ""-o"", tempDir.getAbsolutePath(), ""-n"", hostname, ""--subjectAlternativeName"", san);"
194673,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-tls/src/test/java/org/apache/nifi/toolkit/tls/standalone/TlsToolkitStandaloneTest.java,274,,"        String nodeNames = ""node[1-2].nifi.apache.org"";"
194674,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-tls/src/test/java/org/apache/nifi/toolkit/tls/status/TlsToolkitGetStatusCommandLineTest.java,60,,"                    ""-ts"", TRUSTSTORE_PATH,"
194675,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-tls/src/test/java/org/apache/nifi/toolkit/tls/status/TlsToolkitGetStatusCommandLineTest.java,61,,"                    ""-tst"", JKS_TYPE,"
194676,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-tls/src/test/java/org/apache/nifi/toolkit/tls/status/TlsToolkitGetStatusCommandLineTest.java,62,,"                    ""-tsp"", TRUSTSTORE_PASSWORD);"
194677,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-tls/src/test/java/org/apache/nifi/toolkit/tls/util/TlsHelperTest.java,277,,"        String testPassword = ""testPassword"";"
194678,./TargetProjects/nifi/nifi-toolkit/nifi-toolkit-tls/src/test/java/org/apache/nifi/toolkit/tls/util/TlsHelperTest.java,290,,"            fail(""Expected "" + ioException);"
194679,./TargetProjects/nifi-maven/src/main/java/org/apache/nifi/NarMojo.java,112,,"@Mojo(name = ""nar"", defaultPhase = LifecyclePhase.PACKAGE, threadSafe = true, requiresDependencyResolution = ResolutionScope.RUNTIME)"
194680,./TargetProjects/nifi-maven/src/main/java/org/apache/nifi/NarMojo.java,180,,"    @Parameter(property = ""nar.useDefaultManifestFile"", defaultValue = ""false"")"
194681,./TargetProjects/nifi-minifi/minifi-bootstrap/src/main/java/org/apache/nifi/minifi/bootstrap/RunMiNiFi.java,364,,"        modified.remove(""secret.key"");"
194682,./TargetProjects/nifi-minifi/minifi-bootstrap/src/main/java/org/apache/nifi/minifi/bootstrap/RunMiNiFi.java,438,,"        try (final Socket socket = new Socket(""localhost"", port)) {"
194683,./TargetProjects/nifi-minifi/minifi-bootstrap/src/main/java/org/apache/nifi/minifi/bootstrap/configuration/ingestors/PullHttpChangeIngestor.java,124,,"            throw new IllegalArgumentException(""Property, "" + PULL_HTTP_POLLING_PERIOD_KEY + "", for the polling period ms must be set with a positive integer."");"
194684,./TargetProjects/nifi-minifi/minifi-bootstrap/src/main/java/org/apache/nifi/minifi/bootstrap/configuration/ingestors/PullHttpChangeIngestor.java,148,,"        final String useEtagString = (String) properties.getOrDefault(USE_ETAG_KEY, ""false"");"
194685,./TargetProjects/nifi-minifi/minifi-bootstrap/src/main/java/org/apache/nifi/minifi/bootstrap/configuration/ingestors/PullHttpChangeIngestor.java,366,,"            throw new IllegalArgumentException(KEYSTORE_LOCATION_KEY + "" is set but "" + KEYSTORE_PASSWORD_KEY + "" is not (or is empty). If the location is set, the password must also be."");"
194686,./TargetProjects/nifi-minifi/minifi-bootstrap/src/main/java/org/apache/nifi/minifi/bootstrap/util/ConfigTransformer.java,183,,"            orderedProperties.setProperty(""nifi.flow.configuration.archive.enabled"", ""false"");"
194687,./TargetProjects/nifi-minifi/minifi-bootstrap/src/main/java/org/apache/nifi/minifi/bootstrap/util/ConfigTransformer.java,185,,"            orderedProperties.setProperty(""nifi.flowcontroller.autoResumeState"", ""true"");"
194688,./TargetProjects/nifi-minifi/minifi-bootstrap/src/main/java/org/apache/nifi/minifi/bootstrap/util/ConfigTransformer.java,367,,"            addTextElement(serviceElement, ""name"", ""SSL-Context-Service"");"
194689,./TargetProjects/nifi-minifi/minifi-bootstrap/src/main/java/org/apache/nifi/minifi/bootstrap/util/ConfigTransformer.java,368,,"            addTextElement(serviceElement, ""comment"", """");"
194690,./TargetProjects/nifi-minifi/minifi-bootstrap/src/main/java/org/apache/nifi/minifi/bootstrap/util/ConfigTransformer.java,369,,"            addTextElement(serviceElement, ""class"", ""org.apache.nifi.ssl.StandardSSLContextService"");"
194691,./TargetProjects/nifi-minifi/minifi-bootstrap/src/main/java/org/apache/nifi/minifi/bootstrap/util/ConfigTransformer.java,473,,"        addTextElement(element, ""scheduledState"", ""RUNNING"");"
194692,./TargetProjects/nifi-minifi/minifi-bootstrap/src/main/java/org/apache/nifi/minifi/bootstrap/util/ConfigTransformer.java,473,,"        addTextElement(element, ""scheduledState"", ""RUNNING"");"
194693,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/configuration/ConfigurationChangeCoordinatorTest.java,62,,"        Assert.assertEquals(""Did not receive the correct number of registered listeners"", coordinatorSpy.getChangeListeners().size(), 1);"
194694,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/configuration/ingestors/PullHttpChangeIngestorSSLTest.java,38,,"        ssl.setKeyStorePassword(""localtest"");"
194695,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/configuration/ingestors/PullHttpChangeIngestorSSLTest.java,39,,"        ssl.setKeyStoreType(""JKS"");"
194696,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/configuration/ingestors/RestChangeIngestorSSLTest.java,58,,"        properties.setProperty(RestChangeIngestor.TRUSTSTORE_PASSWORD_KEY, ""localtest"");"
194697,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/configuration/ingestors/RestChangeIngestorSSLTest.java,59,,"        properties.setProperty(RestChangeIngestor.TRUSTSTORE_TYPE_KEY, ""JKS"");"
194698,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/configuration/ingestors/common/PullHttpChangeIngestorCommonTest.java,103,,"        properties.put(PullHttpChangeIngestor.OVERRIDE_SECURITY, ""true"");"
194699,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/configuration/ingestors/common/PullHttpChangeIngestorCommonTest.java,171,,"        properties.put(PATH_KEY, ""/config.yml"");"
194700,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/status/reporters/StatusLoggerTest.java,76,,"        properties.setProperty(REPORT_PERIOD_KEY, ""100"");"
194701,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/status/reporters/StatusLoggerTest.java,149,,"        IOException ioException = new IOException(""This is an expected test exception"");"
194702,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/util/ConfigTransformerTest.java,182,,"            assertEquals(""Property key "" + name + "" doesn't match."", pre216Properties.getProperty(name), properties.getProperty(name));"
194703,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/util/ConfigTransformerTest.java,182,,"            assertEquals(""Property key "" + name + "" doesn't match."", pre216Properties.getProperty(name), properties.getProperty(name));"
194704,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/util/ConfigTransformerTest.java,235,,"        ConfigTransformer.transformConfigFile(new FileInputStream(inputFile), ""./target/"", null);"
194705,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/util/ConfigTransformerTest.java,236,,"        File nifiPropertiesFile = new File(""./target/nifi.properties"");"
194706,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/util/ConfigTransformerTest.java,243,,"        File flowXml = new File(""./target/flow.xml.gz"");"
194707,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/util/ConfigTransformerTest.java,423,,"            fail(""Invalid configuration file was not detected."");"
194708,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/util/ConfigTransformerTest.java,521,,"        assertEquals(processGroupSchema.getName(), getText(element, ""name""));"
194709,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/util/ConfigTransformerTest.java,522,,"        assertEquals(nullToEmpty(processGroupSchema.getComment()), nullToEmpty(getText(element, ""comment"")));"
194710,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/util/ParentGroupIdResolverTest.java,41,,"        configLines.add(""MiNiFi Config Version: 2"");"
194711,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/util/ParentGroupIdResolverTest.java,47,,"        configLines.add(""Process Groups:"");"
194712,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/util/ParentGroupIdResolverTest.java,54,,"        assertEquals(""rpgOneId"", parentGroupIdResolver.getRemoteInputPortParentId(""one""));"
194713,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/util/ParentGroupIdResolverTest.java,55,,"        assertEquals(""rpgTwoId"", parentGroupIdResolver.getRemoteInputPortParentId(""two""));"
194714,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/util/ParentGroupIdResolverTest.java,102,,"        configLines.add(""- id: one"");"
194715,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/util/ParentGroupIdResolverTest.java,104,,"        configLines.add(""- id: pgTwo"");"
194716,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/util/ParentGroupIdResolverTest.java,106,,"        configLines.add(""  - id: two"");"
194717,./TargetProjects/nifi-minifi/minifi-bootstrap/src/test/java/org/apache/nifi/minifi/bootstrap/util/ParentGroupIdResolverTest.java,113,,"        assertEquals(""pgTwo"", parentGroupIdResolver.getInputPortParentId(""two""));"
194718,./TargetProjects/nifi-minifi/minifi-c2/minifi-c2-cache/minifi-c2-cache-filesystem/src/test/java/org/apache/nifi/minfi/c2/cache/filesystem/FileSystemConfigurationCacheTest.java,55,,"    final String pathRoot = ""files"";"
194719,./TargetProjects/nifi-minifi/minifi-c2/minifi-c2-integration-tests/src/test/java/org/apache/nifi/minifi/c2/integration/test/AbstractTestSecure.java,72,,"                ""-C"", ""CN=user1"", ""-C"", ""CN=user2"", ""-C"", ""CN=user3"", ""-C"", ""CN=user4"", ""-S"", ""badKeystorePass"", ""-K"", ""badKeyPass"", ""-P"", ""badTrustPass""));"
194720,./TargetProjects/nifi-minifi/minifi-c2/minifi-c2-integration-tests/src/test/java/org/apache/nifi/minifi/c2/integration/test/AbstractTestSecure.java,99,,"        assertReturnCode(""?class=raspi2"", trustSslContext, 403);"
194721,./TargetProjects/nifi-minifi/minifi-c2/minifi-c2-integration-tests/src/test/java/org/apache/nifi/minifi/c2/integration/test/AbstractTestSecure.java,100,,"        assertReturnCode(""?class=raspi3"", trustSslContext, 403);"
194722,./TargetProjects/nifi-minifi/minifi-c2/minifi-c2-integration-tests/src/test/java/org/apache/nifi/minifi/c2/integration/test/NiFiRestConfigurationProviderSecureTest.java,49,,"            .waitingForServices(Arrays.asList(""squid"", ""mocknifi""),"
194723,./TargetProjects/nifi-minifi/minifi-c2/minifi-c2-integration-tests/src/test/java/org/apache/nifi/minifi/c2/integration/test/NiFiRestConfigurationProviderSecureTest.java,53,,"                            return SslContextFactory.createSslContext(c2.resolve(""keystore.jks"").toFile().getAbsolutePath(), ""badKeystorePass"".toCharArray(), ""badKeyPass"".toCharArray(), ""JKS"","
194724,./TargetProjects/nifi-minifi/minifi-commons/minifi-commons-schema/src/main/java/org/apache/nifi/minifi/commons/schema/RemoteProcessGroupSchema.java,43,,"    public static final String EXPECTED_PROXY_HOST_IF_PROXY_PORT = ""expected "" + PROXY_HOST_KEY + "" to be set if "" + PROXY_PORT_KEY + "" is"";"
194725,./TargetProjects/nifi-minifi/minifi-commons/minifi-commons-schema/src/main/java/org/apache/nifi/minifi/commons/schema/RemoteProcessGroupSchema.java,43,,"    public static final String EXPECTED_PROXY_HOST_IF_PROXY_PORT = ""expected "" + PROXY_HOST_KEY + "" to be set if "" + PROXY_PORT_KEY + "" is"";"
194726,./TargetProjects/nifi-minifi/minifi-commons/minifi-commons-schema/src/main/java/org/apache/nifi/minifi/commons/schema/RemoteProcessGroupSchema.java,43,,"    public static final String EXPECTED_PROXY_HOST_IF_PROXY_PORT = ""expected "" + PROXY_HOST_KEY + "" to be set if "" + PROXY_PORT_KEY + "" is"";"
194727,./TargetProjects/nifi-minifi/minifi-commons/minifi-commons-schema/src/test/java/org/apache/nifi/minifi/commons/schema/ConfigSchemaTest.java,60,,"        ConfigSchema configSchema = new ConfigSchema(Collections.singletonMap(CommonPropertyKeys.PROCESSORS_KEY, getListWithKeyValues(ID_KEY, ""testId1"", ""testId2"")));"
194728,./TargetProjects/nifi-minifi/minifi-commons/minifi-commons-schema/src/test/java/org/apache/nifi/minifi/commons/schema/v1/ConfigSchemaV1Test.java,87,,"        assertEquals(""348c4f93-cd15-3d91-82f2-bfe5d43834d8"", ConfigSchemaV1.getUniqueId(ids, ""test$id""));"
194729,./TargetProjects/nifi-minifi/minifi-commons/minifi-utils/src/main/java/org/apache/nifi/minifi/commons/status/util/StatusReportPopulator.java,103,,"                bulletinStatus.setMessage(""Bulletin message"");"
194730,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-framework-bundle/minifi-framework/minifi-framework-core/src/main/java/org/apache/nifi/minifi/status/StatusRequestParser.java,87,,"                case ""health"":"
194731,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-framework-bundle/minifi-framework/minifi-framework-core/src/main/java/org/apache/nifi/minifi/status/StatusRequestParser.java,96,,"                case ""bulletins"":"
194732,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-framework-bundle/minifi-framework/minifi-framework-core/src/main/java/org/apache/nifi/minifi/status/StatusRequestParser.java,99,,"                case ""stats"":"
194733,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-framework-bundle/minifi-framework/minifi-framework-core/src/test/java/org/apache/nifi/minifi/status/StatusConfigReporterTest.java,574,,"        when(bulletin.getMessage()).thenReturn(""Bulletin message"");"
194734,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-framework-bundle/minifi-framework/minifi-nar-utils/src/main/java/org/apache/nifi/init/ReflectionUtils.java,108,,"                            LOG.error(""Unable to invoke method {} on {} due to {}"", new Object[]{method.getName(), instance, ite.getCause()});"
194735,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-framework-bundle/minifi-framework/minifi-nar-utils/src/test/java/org/apache/nifi/nar/NarUnpackerTest.java,84,,"        NiFiProperties properties = loadSpecifiedProperties(""/NarUnpacker/conf/nifi.properties"", Collections.EMPTY_MAP);"
194736,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-framework-bundle/minifi-framework/minifi-nar-utils/src/test/java/org/apache/nifi/nar/NarUnpackerTest.java,89,,"                properties.getProperty(""nifi.nar.library.directory.alt""));"
194737,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-provenance-repository-bundle/minifi-persistent-provenance-repository/src/main/java/org/apache/nifi/provenance/MiNiFiPersistentProvenanceRepository.java,210,,"            final Path journalDirectory = storageDirectory.resolve(""journals"");"
194738,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-provenance-repository-bundle/minifi-persistent-provenance-repository/src/main/java/org/apache/nifi/provenance/MiNiFiPersistentProvenanceRepository.java,1915,,"        throw new MethodNotSupportedException(""Computation of lineage is not available for implementation "" + this.getClass().getName());"
194739,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-provenance-repository-bundle/minifi-persistent-provenance-repository/src/main/java/org/apache/nifi/provenance/MiNiFiPersistentProvenanceRepository.java,2108,,"        throw new MethodNotSupportedException(""Querying and indexing is not available for implementation "" + this.getClass().getName());"
194740,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-provenance-repository-bundle/minifi-persistent-provenance-repository/src/test/java/org/apache/nifi/provenance/MiNiFiPersistentProvenanceRepositoryTest.java,113,,"        builder.setTransitUri(""nifi://unit-test"");"
194741,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-provenance-repository-bundle/minifi-persistent-provenance-repository/src/test/java/org/apache/nifi/provenance/MiNiFiPersistentProvenanceRepositoryTest.java,114,,"        attributes.put(""uuid"", ""12345678-0000-0000-0000-012345678912"");"
194742,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-provenance-repository-bundle/minifi-persistent-provenance-repository/src/test/java/org/apache/nifi/provenance/MiNiFiPersistentProvenanceRepositoryTest.java,114,,"        attributes.put(""uuid"", ""12345678-0000-0000-0000-012345678912"");"
194743,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-provenance-repository-bundle/minifi-persistent-provenance-repository/src/test/java/org/apache/nifi/provenance/MiNiFiPersistentProvenanceRepositoryTest.java,116,,"        builder.setComponentId(""1234"");"
194744,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-provenance-repository-bundle/minifi-persistent-provenance-repository/src/test/java/org/apache/nifi/provenance/MiNiFiPersistentProvenanceRepositoryTest.java,117,,"        builder.setComponentType(""dummy processor"");"
194745,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-provenance-repository-bundle/minifi-persistent-provenance-repository/src/test/java/org/apache/nifi/provenance/MiNiFiPersistentProvenanceRepositoryTest.java,264,,"        attributes.put(""abc"", ""xyz"");"
194746,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-provenance-repository-bundle/minifi-persistent-provenance-repository/src/test/java/org/apache/nifi/provenance/MiNiFiPersistentProvenanceRepositoryTest.java,264,,"        attributes.put(""abc"", ""xyz"");"
194747,./TargetProjects/nifi-minifi/minifi-nar-bundles/minifi-provenance-repository-bundle/minifi-persistent-provenance-repository/src/test/java/org/apache/nifi/provenance/MiNiFiPersistentProvenanceRepositoryTest.java,358,,"            attributes.put(""uuid"", ""00000000-0000-0000-0000-00000000000"" + i);"
194748,./TargetProjects/nifi-minifi/minifi-toolkit/minifi-toolkit-configuration/src/test/java/org/apache/nifi/minifi/toolkit/configuration/ConfigMainTest.java,455,,"            differences.add(""Expect size of "" + expected.size() + "" for list at "" + path + "" but got "" + actual.size());"
194749,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-bootstrap/src/main/java/org/apache/nifi/registry/bootstrap/RunNiFiRegistry.java,300,,"        modified.remove(""secret.key"");"
194750,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-bundle-utils/src/test/java/org/apache/nifi/registry/bundle/extract/nar/TestNarBundleExtractor.java,56,,"            assertEquals(""org.apache.nifi"", bundleIdentifier.getGroupId());"
194751,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-bundle-utils/src/test/java/org/apache/nifi/registry/bundle/extract/nar/docs/TestJacksonExtensionManifestParser.java,50,,"        assertEquals(""1.10.0-SNAPSHOT"", extensionManifest.getSystemApiVersion());"
194752,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyBundleVersionClient.java,169,,"                    target = target.queryParam(""version"", filterParams.getVersion());"
194753,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyBundleVersionClient.java,183,,"            throw new IllegalArgumentException(""Bundle id cannot be null or blank"");"
194754,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyBundleVersionClient.java,189,,"                    .resolveTemplate(""bundleId"", bundleId);"
194755,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyBundleVersionClient.java,205,,"            throw new IllegalArgumentException(""Version cannot be null or blank"");"
194756,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyExtensionRepoClient.java,67,,"            throw new IllegalArgumentException(""Bucket name cannot be null or blank"");"
194757,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyExtensionRepoClient.java,73,,"                    .resolveTemplate(""bucketName"", bucketName);"
194758,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyExtensionRepoClient.java,89,,"            throw new IllegalArgumentException(""Group id cannot be null or blank"");"
194759,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyExtensionRepoClient.java,96,,"                    .resolveTemplate(""groupId"", groupId);"
194760,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyExtensionRepoClient.java,119,,"        return executeAction(""Error retrieving versions for extension repo"", () -> {"
194761,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyExtensionRepoClient.java,124,,"                    .resolveTemplate(""artifactId"", artifactId);"
194762,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyExtensionRepoClient.java,143,,"                    .resolveTemplate(""version"", version);"
194763,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyExtensionRepoClient.java,226,,"        return executeAction(""Error retrieving version content for extension repo"", () -> {"
194764,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowClient.java,62,,"            throw new IllegalArgumentException(""Bucket Identifier cannot be blank"");"
194765,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowClient.java,67,,"                    .resolveTemplate(""bucketId"", bucketId);"
194766,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowClient.java,84,,"            throw new IllegalArgumentException(""Flow Identifier cannot be blank"");"
194767,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowClient.java,89,,"                    .path(""/{flowId}"")"
194768,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowClient.java,91,,"                    .resolveTemplate(""flowId"", flowId);"
194769,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowSnapshotClient.java,61,,"            throw new IllegalArgumentException(""Bucket Identifier cannot be blank"");"
194770,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowSnapshotClient.java,66,,"            throw new IllegalArgumentException(""Flow Identifier cannot be blank"");"
194771,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowSnapshotClient.java,71,,"                    .resolveTemplate(""bucketId"", bucketId)"
194772,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-client/src/main/java/org/apache/nifi/registry/client/impl/JerseyFlowSnapshotClient.java,72,,"                    .resolveTemplate(""flowId"", flowId);"
194773,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-data-model/src/main/java/org/apache/nifi/registry/extension/repo/ExtensionRepoVersion.java,40,,"            dataType = ""org.apache.nifi.registry.link.JaxbLink"", readOnly = true)"
194774,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-data-model/src/test/java/org/apache/nifi/registry/flow/TestVersionedRemoteProcessGroup.java,44,,"        vRPG.setTargetUris(""uri-2"");"
194775,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-data-model/src/test/java/org/apache/nifi/registry/flow/TestVersionedRemoteProcessGroup.java,49,,"        vRPG.setTargetUris(""uri-2,uri-3"");"
194776,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-data-model/src/test/java/org/apache/nifi/registry/flow/TestVersionedRemoteProcessGroup.java,79,,"        vRPG.setTargetUri(""uri-1"");"
194777,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/db/DataSourceFactory.java,63,,"            throw new IllegalStateException(NiFiRegistryProperties.DATABASE_URL + "" is required"");"
194778,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/db/DatabaseMetadataService.java,154,,"            ""SELECT "" +"
194779,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/db/DatabaseMetadataService.java,374,,"                ""FROM "" +"
194780,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/db/DatabaseMetadataService.java,378,,"                ""WHERE "" +"
194781,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/db/DatabaseMetadataService.java,437,,"                    ""ID, "" +"
194782,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/db/DatabaseMetadataService.java,515,,"                .append(""AND eb.group_id = ? "")"
194783,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/db/DatabaseMetadataService.java,516,,"                .append(""AND eb.artifact_id = ? "");"
194784,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/db/DatabaseMetadataService.java,581,,"        sqlBuilder.append("" AND "");"
194785,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/provider/flow/FlowMetadataSynchronizer.java,56,,"        LOGGER.info(""**************************************************"");"
194786,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/security/authorization/AuthorizerFactory.java,674,,"                                        throw new IllegalStateException(String.format(""User/user group already exists with the identity '%s'."", user.getIdentity()));"
194787,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProvider.java,700,,"                throw new AuthorizationAccessException(""User identity attribute ["" + userIdentityAttribute + ""] does not exist."");"
194788,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/AuthorizationService.java,228,,"            LOGGER.warn(""The specified user id [{}] does not exist."", identifier);"
194789,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/AuthorizationService.java,229,,"            throw new ResourceNotFoundException(""The specified user ID does not exist in this registry."");"
194790,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/AuthorizationService.java,302,,"            LOGGER.warn(""The specified user group id [{}] does not exist."", identifier);"
194791,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/AuthorizationService.java,303,,"            throw new ResourceNotFoundException(""The specified user group ID does not exist in this registry."");"
194792,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/AuthorizationService.java,366,,"            LOGGER.warn(""The specified access policy id [{}] does not exist."", identifier);"
194793,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/AuthorizationService.java,367,,"            throw new ResourceNotFoundException(""The specified policy does not exist in this registry."");"
194794,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,145,,"            throw new IllegalArgumentException(""Bucket identifier cannot be null"");"
194795,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,150,,"            LOGGER.warn(""The specified bucket id [{}] does not exist."", bucketIdentifier);"
194796,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,151,,"            throw new ResourceNotFoundException(""The specified bucket ID does not exist in this registry."");"
194797,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,326,,"            throw new IllegalArgumentException(""Bucket identifier cannot be null or blank"");"
194798,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,375,,"            throw new IllegalArgumentException(""Versioned flow identifier cannot be null or blank"");"
194799,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,387,,"            LOGGER.warn(""The specified flow id [{}] does not exist."", flowIdentifier);"
194800,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,388,,"            throw new ResourceNotFoundException(""The specified flow ID does not exist in this bucket."");"
194801,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,392,,"            throw new IllegalStateException(""The requested flow is not located in the given bucket"");"
194802,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,507,,"            throw new IllegalArgumentException(""Flow identifier cannot be null or blank"");"
194803,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java,690,,"                    + flowEntity.getId() + "" and version "" + version);"
194804,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/extension/StandardExtensionService.java,430,,"            throw new IllegalArgumentException(""Bucket identifiers cannot be null"");"
194805,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/extension/docs/HtmlExtensionDocWriter.java,164,,"        xmlStreamWriter.writeStartElement(""table"");"
194806,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/extension/docs/HtmlExtensionDocWriter.java,172,,"        writeSimpleElement(xmlStreamWriter, ""td"", ""Full Name"", true, ""bundle-info"");"
194807,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/extension/docs/HtmlExtensionDocWriter.java,295,,"            writeSimpleElement(xmlStreamWriter, ""strong"", ""bold"");"
194808,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/extension/docs/HtmlExtensionDocWriter.java,320,,"            writeSimpleElement(xmlStreamWriter, ""th"", ""Description"");"
194809,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/extension/docs/HtmlExtensionDocWriter.java,481,,"                final String name = StringUtils.isBlank(dynamicProperty.getName()) ? ""Not Specified"" : dynamicProperty.getName();"
194810,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,84,,"        final BucketEntity bucket = metadataService.getBucketById(""does-not-exist"");"
194811,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,287,,"        final List<FlowEntity> flows = metadataService.getFlowsByName(""Flow 1"");"
194812,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,413,,"        final BundleEntity entity = metadataService.getBundle(""eb1"");"
194813,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,417,,"        assertEquals(""nifi-example-processors-nar"", entity.getName());"
194814,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,426,,"        assertEquals(""org.apache.nifi"", entity.getGroupId());"
194815,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,440,,"        final String artifact = ""nifi-example-service-api-nar"";"
194816,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,505,,"                BundleFilterParams.of(""org.apache.nifi"", ""nifi-example-processors-%""));"
194817,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,609,,"        bundleVersion.setSystemApiVersion(""2.0.0"");"
194818,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,684,,"                bucketIds, BundleVersionFilterParams.of(""org.apache.nifi"", ""nifi-example-processors-nar"", ""1.0.0""));"
194819,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,700,,"        assertEquals(""eb1-v1"", bundleVersion.getId());"
194820,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/db/TestDatabaseMetadataService.java,901,,"        assertEquals(""org.apache.nifi.ExampleProcessor"", extension.getName());"
194821,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/event/TestEventFactory.java,98,,"        assertEquals(""unknown"", event.getField(EventFieldName.USER).getValue());"
194822,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/TestStandardProviderFactory.java,44,,"                .thenReturn(new ExtensionClassLoader(""/tmp"", new URL[0],this.getClass().getClassLoader()));"
194823,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/extension/TestFileSystemBundlePersistenceProvider.java,82,,"        final BundleVersionCoordinate versionCoordinate1 = getVersionCoordinate(""b1"", ""g1"", ""a1"", ""1.0.0"", type);"
194824,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/extension/TestFileSystemBundlePersistenceProvider.java,88,,"        final BundleVersionCoordinate versionCoordinate2 = getVersionCoordinate(""b1"", ""g1"", ""a1"", ""1.1.0"", type);"
194825,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/flow/TestFileSystemFlowPersistenceProvider.java,71,,"        createAndSaveSnapshot(fileSystemFlowProvider,""bucket1"", ""flow1"", 1, ""flow1v1"");"
194826,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/flow/TestFileSystemFlowPersistenceProvider.java,71,,"        createAndSaveSnapshot(fileSystemFlowProvider,""bucket1"", ""flow1"", 1, ""flow1v1"");"
194827,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/flow/TestFileSystemFlowPersistenceProvider.java,71,,"        createAndSaveSnapshot(fileSystemFlowProvider,""bucket1"", ""flow1"", 1, ""flow1v1"");"
194828,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/flow/TestFileSystemFlowPersistenceProvider.java,74,,"        createAndSaveSnapshot(fileSystemFlowProvider,""bucket1"", ""flow1"", 2, ""flow1v2"");"
194829,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/flow/git/TestGitFlowPersistenceProvider.java,101,,"                config.setString(""user"", null, ""name"", ""git-user"");"
194830,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/flow/git/TestGitFlowPersistenceProvider.java,127,,"                p.getFlowContent(""bucket-id-A"", ""flow-id-1"", 1);"
194831,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/flow/git/TestGitFlowPersistenceProvider.java,127,,"                p.getFlowContent(""bucket-id-A"", ""flow-id-1"", 1);"
194832,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/provider/flow/git/TestGitFlowPersistenceProvider.java,164,,"            contextBuilder.flowId(""flow-id-2"").flowName(""FlowTwo"").comments(""4th commit."").version(1);"
194833,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/authorization/database/TestDatabaseAccessPolicyProvider.java,340,,"        configure(""does-not-exist"", null);"
194834,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/authorization/database/TestDatabaseAccessPolicyProvider.java,359,,"                .addUser(""user1"")"
194835,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/authorization/database/TestDatabaseAccessPolicyProvider.java,360,,"                .addGroup(""group1"")"
194836,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/authorization/database/TestDatabaseUserGroupProvider.java,134,,"        final String userIdentity1 = ""user1"";"
194837,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/authorization/database/TestDatabaseUserGroupProvider.java,135,,"        final String userIdentity2 = ""user2"";"
194838,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/authorization/database/TestDatabaseUserGroupProvider.java,244,,"        final User retrievedUser1 = userGroupProvider.getUser(""does-not-exist"");"
194839,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/authorization/database/TestDatabaseUserGroupProvider.java,282,,"        final Group group1 = new Group.Builder().identifier(UUID.randomUUID().toString()).name(""group1"").build();"
194840,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,141,,"        when(configurationContext.getProperty(PROP_USER_IDENTITY_ATTRIBUTE)).thenReturn(new StandardPropertyValue(""uid""));"
194841,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,145,,"        assertNotNull(ldapUserGroupProvider.getUserByIdentity(""user1""));"
194842,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,184,,"        when(configurationContext.getProperty(PROP_USER_SEARCH_FILTER)).thenReturn(new StandardPropertyValue(""(uid=user1)""));"
194843,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,206,,"        when(configurationContext.getProperty(PROP_USER_GROUP_ATTRIBUTE)).thenReturn(new StandardPropertyValue(""description"")); // using description in lieu of memberof"
194844,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,212,,"        final UserAndGroups user4AndGroups = ldapUserGroupProvider.getUserAndGroups(""user4"");"
194845,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,217,,"        final UserAndGroups user7AndGroups = ldapUserGroupProvider.getUserAndGroups(""user7"");"
194846,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,242,,"        assertEquals(""team1"", userAndGroups.getGroups().iterator().next().getName());"
194847,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,254,,"        when(configurationContext.getProperty(PROP_GROUP_MEMBER_ATTRIBUTE)).thenReturn(new StandardPropertyValue(""member""));"
194848,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,327,,"        final Group admins = groups.stream().filter(group -> ""admins"".equals(group.getName())).findFirst().orElse(null);"
194849,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,416,,"        final Group team2 = groups.stream().filter(group -> ""team2"".equals(group.getName())).findFirst().orElse(null);"
194850,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,574,,"        final AuthorizerConfigurationContext configurationContext = getBaseConfiguration(""ou=users-2,o=nifi"", null);"
194851,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,581,,"        final AuthorizerConfigurationContext configurationContext = getBaseConfiguration(""ou=users-2,o=nifi"", ""ou=groups-2,o=nifi"");"
194852,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,583,,"        when(configurationContext.getProperty(PROP_USER_OBJECT_CLASS)).thenReturn(new StandardPropertyValue(""room"")); // using room due to reqs of groupOfNames"
194853,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/security/ldap/tenants/LdapUserGroupProviderTest.java,592,,"        final Group team3 = groups.stream().filter(group -> ""team3"".equals(group.getName())).findFirst().orElse(null);"
194854,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/serialization/TestFlowContentSerializer.java,158,,"                fail(""Should fail"");"
194855,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,105,,"        bucket.setName(""My Bucket"");"
194856,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,106,,"        bucket.setDescription(""This is my bucket."");"
194857,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,152,,"        existingBucket.setDescription(""This is my bucket"");"
194858,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,281,,"        flowToDelete.setId(""flow1"");"
194859,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,316,,"        versionedFlow.setName(""My Flow"");"
194860,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,404,,"        flowEntity.setDescription(""This is my flow."");"
194861,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,637,,"        snapshotMetadata.setAuthor(""user1"");"
194862,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,730,,"        existingSnapshot.setComments(""This is an existing snapshot"");"
194863,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,732,,"        existingSnapshot.setCreatedBy(""test-user"");"
194864,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java,1294,,"                .filter(p->p.getComponentId().equals(""ProcessorFirstV1"")).findFirst();"
194865,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/alias/RegistryUrlAliasServiceTest.java,53,,"        String external = ""http://localhost:18080"";"
194866,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/alias/RegistryUrlAliasServiceTest.java,65,,"        internal += ""/nifi-registry/"";"
194867,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-revision/nifi-registry-revision-entity-service/src/test/java/org/apache/nifi/registry/revision/entity/TestStandardRevisableEntityService.java,48,,"        final String userIdentity = ""user1"";"
194868,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-revision/nifi-registry-revision-entity-service/src/test/java/org/apache/nifi/registry/revision/entity/TestStandardRevisableEntityService.java,130,,"                createdEntity, ""user2"", () -> createdEntity);"
194869,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-revision/nifi-registry-revision-spring-jdbc/src/test/java/org/apache/nifi/registry/revision/jdbc/TestJdbcRevisionManager.java,118,,"        final String entityId = ""entity1"";"
194870,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-revision/nifi-registry-revision-spring-jdbc/src/test/java/org/apache/nifi/registry/revision/jdbc/TestJdbcRevisionManager.java,142,,"        final String entityId = ""entity-1"";"
194871,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-revision/nifi-registry-revision-spring-jdbc/src/test/java/org/apache/nifi/registry/revision/jdbc/TestJdbcRevisionManager.java,300,,"        createRevision(""entity2"", new Long(1), null);"
194872,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-security-utils/src/main/java/org/apache/nifi/registry/security/util/ProxiedEntitiesUtils.java,138,,"                logger.warn(""The provided DN ["" + rawDn + ""] contained dangerous characters that were escaped to ["" + escapedDn + ""]"");"
194873,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessPolicyResource.java,62,,"@Path(""/policies"")"
194874,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessPolicyResource.java,89,,"                    @Extension(name = ""access-policy"", properties = {"
194875,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessPolicyResource.java,90,,"                            @ExtensionProperty(name = ""action"", value = ""write""),"
194876,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessPolicyResource.java,91,,"                            @ExtensionProperty(name = ""resource"", value = ""/policies"") })"
194877,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessPolicyResource.java,123,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194878,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java,85,,"        value = ""access"","
194879,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java,169,,"                    ""The token returned is formatted as a JSON Web Token (JWT). The token is base64 encoded and comprised of three parts. The header, "" +"
194880,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java,170,,"                    ""the body, and the signature. The expiration of the token is a contained within the body. The token can be used in the Authorization header "" +"
194881,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java,171,,"                    ""in the format 'Authorization: Bearer <token>'."","
194882,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java,183,,"            throw new IllegalStateException(""Access tokens are only issued over HTTPS"");"
194883,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java,218,,"        final URI uri = URI.create(generateResourceUri(""access"", ""token""));"
194884,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java,303,,"            throw new IllegalStateException(""User authentication/authorization is only supported when running over HTTPS."");"
194885,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java,542,,"            throw new IllegalStateException(""OpenId Connect is not configured."");"
194886,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,82,,"                    @Extension(name = ""access-policy"", properties = {"
194887,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,83,,"                            @ExtensionProperty(name = ""action"", value = ""write""),"
194888,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,84,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets/{bucketId}"") })"
194889,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,84,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets/{bucketId}"") })"
194890,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,94,,"            @PathParam(""bucketId"")"
194891,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,95,,"            @ApiParam(""The bucket identifier"")"
194892,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,117,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194893,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,160,,"            @PathParam(""flowId"")"
194894,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java,161,,"            @ApiParam(""The flow identifier"")"
194895,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketResource.java,77,,"                    @Extension(name = ""access-policy"", properties = {"
194896,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketResource.java,78,,"                            @ExtensionProperty(name = ""action"", value = ""write""),"
194897,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketResource.java,79,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets"") })"
194898,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,80,,"            responseContainer = ""List"""
194899,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,114,,"                    @Extension(name = ""access-policy"", properties = {"
194900,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,115,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194901,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,115,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194902,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,116,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets/{bucketId}"") })"
194903,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,116,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets/{bucketId}"") })"
194904,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,126,,"            @PathParam(""bundleId"")"
194905,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,127,,"            @ApiParam(""The extension bundle identifier"")"
194906,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,188,,"            @QueryParam(""version"")"
194907,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BundleResource.java,256,,"            @ApiParam(""The version of the bundle"")"
194908,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,78,,"            responseContainer = ""List"""
194909,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,101,,"                    @Extension(name = ""access-policy"", properties = {"
194910,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,102,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194911,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,102,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194912,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,103,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets/{bucketId}"") })"
194913,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,103,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets/{bucketId}"") })"
194914,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,113,,"            @PathParam(""bucketName"")"
194915,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,114,,"            @ApiParam(""The bucket name"")"
194916,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,146,,"            @PathParam(""groupId"")"
194917,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,180,,"            @ApiParam(""The group identifier"")"
194918,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,182,,"            @PathParam(""artifactId"")"
194919,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,183,,"            @ApiParam(""The artifact identifier"")"
194920,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,221,,"            @PathParam(""version"")"
194921,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ExtensionRepoResource.java,222,,"            @ApiParam(""The version"")"
194922,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/FlowResource.java,85,,"                    @Extension(name = ""access-policy"", properties = {"
194923,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/FlowResource.java,86,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194924,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/FlowResource.java,86,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194925,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/FlowResource.java,87,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets/{bucketId}"") })"
194926,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/FlowResource.java,87,,"                            @ExtensionProperty(name = ""resource"", value = ""/buckets/{bucketId}"") })"
194927,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/FlowResource.java,97,,"            @PathParam(""flowId"")"
194928,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/FlowResource.java,98,,"            @ApiParam(""The flow identifier"")"
194929,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/TenantResource.java,60,,"@Path(""tenants"")"
194930,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/TenantResource.java,93,,"                    @Extension(name = ""access-policy"", properties = {"
194931,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/TenantResource.java,94,,"                            @ExtensionProperty(name = ""action"", value = ""write""),"
194932,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/TenantResource.java,94,,"                            @ExtensionProperty(name = ""action"", value = ""write""),"
194933,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/TenantResource.java,95,,"                            @ExtensionProperty(name = ""resource"", value = ""/tenants"") })"
194934,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/TenantResource.java,95,,"                            @ExtensionProperty(name = ""resource"", value = ""/tenants"") })"
194935,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/TenantResource.java,133,,"                            @ExtensionProperty(name = ""action"", value = ""read""),"
194936,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/link/LinkService.java,74,,"        return Link.fromUri(uri).rel(""self"").build();"
194937,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/link/LinkService.java,114,,"                .resolveTemplate(""bundleId"", extensionBundle.getIdentifier())"
194938,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/link/LinkService.java,127,,"                .resolveTemplate(""version"", bundleVersion.getVersion())"
194939,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/link/LinkService.java,154,,"                .resolveTemplate(""name"", extensionMetadata.getName())"
194940,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/link/LinkService.java,182,,"                .resolveTemplate(""bucketName"", extensionRepoBucket.getBucketName())"
194941,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/link/LinkService.java,195,,"                .resolveTemplate(""groupId"", extensionRepoGroup.getGroupId())"
194942,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/link/LinkService.java,209,,"                .resolveTemplate(""artifactId"", extensionRepoArtifact.getArtifactId())"
194943,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/service/StandardServiceFacade.java,1046,,"            throw new IllegalArgumentException(""Unable to authorize access because bucket identifier is null or blank"");"
194944,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/BucketsIT.java,46,,"                .target(createURL(""buckets""))"
194945,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/BucketsIT.java,118,,"        bucket.setName(""Integration Test Bucket"");"
194946,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/BucketsIT.java,119,,"        bucket.setDescription(""A bucket created by an integration test."");"
194947,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/BucketsIT.java,161,,"                .target(createURL(""buckets/"" + createdBucket.getIdentifier()))"
194948,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/FlowsIT.java,56,,"                .target(createURL(""buckets/{bucketId}/flows""))"
194949,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/FlowsIT.java,57,,"                .resolveTemplate(""bucketId"", emptyBucketId)"
194950,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/FlowsIT.java,112,,"        final RevisionInfo initialRevision = new RevisionInfo(""FlowsIT"", 0L);"
194951,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/FlowsIT.java,123,,"        flow.setName(""Test Flow"");"
194952,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/FlowsIT.java,124,,"        flow.setDescription(""This is a flow created by an integration test."");"
194953,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/FlowsIT.java,170,,"                .target(createURL(""buckets/{bucketId}/flows/{flowId}""))"
194954,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/FlowsIT.java,172,,"                .resolveTemplate(""flowId"", createdFlow.getIdentifier())"
194955,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/NoRevisionsIT.java,77,,"                .resolveTemplate(""bucketId"", flow.getBucketIdentifier())"
194956,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureKerberosIT.java,73,,"                 validTicket = Arrays.equals(validKerberosTicket.getBytes(""UTF-8""), token);"
194957,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureKerberosIT.java,109,,"                .target(createURL(""/access/token/kerberos""))"
194958,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureKerberosIT.java,111,,"                .header(""Authorization"", ""Negotiate "" + validTicket)"
194959,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,157,,"        final String basicAuthCredentials = encodeCredentialsForBasicAuth(""nifiadmin"", ""password"");"
194960,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,161,,"                .header(""Authorization"", ""Basic "" + basicAuthCredentials)"
194961,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,161,,"                .header(""Authorization"", ""Basic "" + basicAuthCredentials)"
194962,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,191,,"        final String basicAuthCredentials = encodeCredentialsForBasicAuth(""nobel"", ""password"");"
194963,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,211,,"                .header(""Authorization"", ""Bearer "" + token)"
194964,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,285,,"                .target(createURL(""/access""))"
194965,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,427,,"                    ""\""accessPolicies\"":[],"" +"
194966,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,428,,"                    ""\""configurable\"":false"" +"
194967,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,530,,"                .target(createURL(""buckets""))"
194968,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,560,,"                .target(createURL(""policies""))"
194969,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java,727,,"                .target(createURL(""policies/"" + policyId))"
194970,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureNiFiRegistryClientIT.java,206,,"            fail(""Shouldn't have been able to retrieve flow"");"
194971,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/TenantResourceTest.java,68,,"        RevisionInfo revisionInfo = new RevisionInfo(""client1"", 0L);"
194972,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/TenantResourceTest.java,69,,"        User user = new User(null, ""identity"");"
194973,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/TenantResourceTest.java,73,,"        User result = new User(""identifier"", user.getIdentity());"
194974,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/UnsecuredNiFiRegistryClientIT.java,379,,"        assertEquals(""org.apache.nifi"", testNarV1Bundle.getGroupId());"
194975,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/UnsecuredNiFiRegistryClientIT.java,392,,"        assertEquals(""1.0.0"", testNarV1Metadata.getVersion());"
194976,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/UnsecuredNiFiRegistryClientIT.java,541,,"        final BundleVersion bundleVersion2 = bundleVersionClient.getBundleVersion(testNarV1Bundle.getIdentifier(), ""2.0.0"");"
194977,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/link/TestLinkService.java,230,,"                ""buckets/"" + b.getIdentifier(), b.getLink().getUri().toString()));"
194978,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/link/TestLinkService.java,257,,"                Assert.assertEquals(""bundles/"" + i.getIdentifier(), i.getLink().getUri().toString());"
194979,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/link/TestLinkService.java,298,,"                ""extension-repository/"" + i.getBucketName(),"
194980,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITCreateDuplicateBucket.java,65,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""[data-automation-id='new-bucket-button']"")));"
194981,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITCreateDuplicateBucket.java,72,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""#nifi-registry-admin-create-bucket-dialog"")));"
194982,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITCreateDuplicateBucket.java,75,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""#nifi-registry-admin-create-bucket-dialog input"")));"
194983,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITCreateDuplicateBucket.java,85,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""[data-automation-id='create-new-bucket-button']"")));"
194984,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITCreateMultipleBuckets.java,74,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""#nifi-registry-admin-create-bucket-dialog input"")));"
194985,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITCreateMultipleBuckets.java,91,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""[data-automation-id='create-new-bucket-button']"")));"
194986,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITRenameBucketDuplicate.java,65,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""[data-automation-id='new-bucket-button']"")));"
194987,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITRenameBucketDuplicate.java,72,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""#nifi-registry-admin-create-bucket-dialog"")));"
194988,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITRenameBucketDuplicate.java,75,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""#nifi-registry-admin-create-bucket-dialog input"")));"
194989,./TargetProjects/nifi-registry/nifi-registry-core/nifi-registry-web-ui/src/test/java/org/apache/nifi/registry/ui/ITRenameBucketDuplicate.java,85,,"        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(""[data-automation-id='create-new-bucket-button']"")));"
194990,./TargetProjects/nifi-registry/nifi-registry-extensions/nifi-registry-aws/nifi-registry-aws-extensions/src/main/java/org/apache/nifi/registry/aws/S3BundlePersistenceProvider.java,85,,"            throw new ProviderCreationException(""The property '"" + BUCKET_NAME_PROP + ""' must be provided"");"
194991,./TargetProjects/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerAuthorizer.java,178,,"                .thenReturn(new StandardPropertyValue(""true""));"
194992,./TargetProjects/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerAuthorizer.java,186,,"            Assert.fail(""Should have thrown exception"");"
194993,./TargetProjects/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerAuthorizer.java,279,,"        final String systemResource = ""/system"";"
194994,./TargetProjects/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerAuthorizer.java,281,,"        final String user = ""admin"";"
194995,./TargetProjects/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerBasePluginWithPolicies.java,56,,"        final String resourceIdentifier1 = ""/resource-1"";"
194996,./TargetProjects/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerBasePluginWithPolicies.java,63,,"        policy1Item.setAccesses(Stream.of(new RangerPolicy.RangerPolicyItemAccess(""READ"")).collect(Collectors.toList()));"
194997,./TargetProjects/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerBasePluginWithPolicies.java,77,,"        policy2Item.setAccesses(Stream.of(new RangerPolicy.RangerPolicyItemAccess(""READ""), new RangerPolicy.RangerPolicyItemAccess(""WRITE"")).collect(Collectors.toList()));"
194998,./TargetProjects/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerBasePluginWithPolicies.java,89,,"        serviceDef.setName(""nifi-registry"");"
194999,./TargetProjects/nifi-registry/nifi-registry-extensions/nifi-registry-ranger/nifi-registry-ranger-plugin/src/test/java/org/apache/nifi/registry/ranger/TestRangerBasePluginWithPolicies.java,142,,"        assertFalse(pluginWithPolicies.doesPolicyExist(""resource-3"", RequestAction.WRITE));"
