26000,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,941,,"        + ""where deptno = 10\n"""
26001,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,982,,"    getDiffRepos().assertEquals(""planBefore"", ""${planBefore}"", planBefore);"
26002,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,982,,"    getDiffRepos().assertEquals(""planBefore"", ""${planBefore}"", planBefore);"
26003,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1003,,"    getDiffRepos().assertEquals(""planAfter"", ""${planAfter}"", planAfter);"
26004,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1003,,"    getDiffRepos().assertEquals(""planAfter"", ""${planAfter}"", planAfter);"
26005,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1024,,"        + ""  select distinct deptno from emp\n"""
26006,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1025,,"        + ""  where sal > 100) using (deptno)"";"
26007,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1087,,"    final String sql = ""select * from (\n"""
26008,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1164,,"        + ""from sales.dept group by name"";"
26009,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1182,,"        + ""from sales.emp"";"
26010,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1191,,"        + ""from sales.emp group by deptno"";"
26011,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1334,,"        + ""FROM emp\n"""
26012,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1335,,"        + ""GROUP BY deptno"";"
26013,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1372,,"        + ""from sales.emp group by empno, deptno\n"";"
26014,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1531,,"        + ""on e.ename = b.ename and e.deptno = 10"";"
26015,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1560,,"    final String sql = ""SELECT e1.empno\n"""
26016,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1718,,"    final String sql = ""select count(*), "" + NOT_STRONG_EXPR + ""\n"""
26017,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1720,,"        + ""group by "" + NOT_STRONG_EXPR;"
26018,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1892,,"          .project(b.field(""SAL""))"
26019,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1932,,"        + ""    select name, deptno, count(1) from dept group by name, deptno\n"""
26020,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1994,,"    final String sql = ""select * from emp where deptno = 10\n"""
26021,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1996,,"        + ""select * from emp where deptno = 20\n"""
26022,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,1998,,"        + ""select * from emp where deptno = 30\n"";"
26023,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,2011,,"        + ""union\n"" // same as 'union distinct'"
26024,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,2051,,"        + ""intersect\n"""
26025,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,2107,,"        + ""except\n"""
26026,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,2152,,"    final String sql = ""select e1.ename from emp e1, dept d, emp e2\n"""
26027,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,2232,,"    final String sql = ""select d.deptno"""
26028,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,2233,,"        + "" from dept d"""
26029,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,3008,,"        .project(b.field(""EMPNO""))"
26030,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,3015,,"    final String sql = ""select * from emp e\n"""
26031,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,3017,,"        + ""on e.deptno = d.deptno"";"
26032,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,3547,,"        + "" group by deptno,job"""
26033,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,3548,,"        + ""  union all"""
26034,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,3620,,"    final String sql = ""select 1 from sales.emp d\n"""
26035,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,3628,,"        + ""inner join sales.emp e on d.deptno = e.deptno"";"
26036,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,3641,,"    final String sql = ""select 1 from\n"""
26037,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,3651,,"        + ""inner join sales.emp e on d.deptno = e.deptno\n"""
26038,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,4048,,"        + ""group by deptno"";"
26039,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,4068,,"        + ""from (select * from sales.emp where ename = 'A') as e\n"""
26040,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,4069,,"        + ""join sales.dept as d on e.job = d.name\n"""
26041,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,4070,,"        + ""group by e.job,d.name"";"
26042,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,4081,,"        + ""left outer join sales.dept as d on e.job = d.name\n"""
26043,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,4118,,"    final String sql = ""select e.job\n"""
26044,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,4121,,"        + ""group by e.job"";"
26045,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,4159,,"        + ""and e.deptno + e.empno = d.deptno + 5\n"""
26046,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,4250,,"        + ""from sales.emp as e\n"""
26047,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,4316,,"        + ""group by e.deptno"";"
26048,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,4385,,"        + ""from sales.emp as A\n"""
26049,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,4387,,"        + ""on A.sal=B.sal\n"";"
26050,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,4866,,"        + ""from sales.emp e\n"""
26051,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,4929,,"        + ""FROM sales.emp e\n"""
26052,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,4930,,"        + ""LEFT JOIN sales.dept d1 ON e.deptno = d1.deptno\n"""
26053,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,4931,,"        + ""LEFT JOIN sales.dept d2 ON e.deptno = d2.deptno"";"
26054,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,5184,,"        + ""  select * from sales.dept d) d on e.deptno = d.deptno\n"""
26055,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,5373,,"    final String sql = ""select empno,\n"""
26056,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,5400,,"    final String sql = ""select * from emp e1\n"""
26057,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,5512,,"    final String sql = ""select empno\n"""
26058,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,5516,,"        + ""or emp.sal < 100"";"
26059,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,5581,,"        + ""from sales.emp left join sales.dept\n"""
26060,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,5659,,"    final String sql = ""select * from emp e1 where exists ("""
26061,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,5960,,"        + ""from GEO.Restaurants as r\n"""
26062,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,6529,,"    final String sql = ""select sum(distinct deptno), count(distinct deptno), """
26063,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RexShuttleTest.java,54,,"            .scan(""EMP"")"
26064,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RexShuttleTest.java,56,,"                builder.field(""DEPTNO""),"
26065,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RexShuttleTest.java,57,,"                builder.field(""SAL""))"
26066,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ScannableTableTest.java,94,,"        .returnsUnordered(""i=0"", ""i=10"", ""i=20"", ""i=30"");"
26067,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ScannableTableTest.java,94,,"        .returnsUnordered(""i=0"", ""i=10"", ""i=20"", ""i=30"");"
26068,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ScannableTableTest.java,100,,"        .with(newSchema(""s"", Pair.of(""beatles"", new BeatlesTable())))"
26069,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ScannableTableTest.java,112,,"    final String explain = ""PLAN="""
26070,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ScannableTableTest.java,113,,"        + ""EnumerableInterpreter\n"""
26071,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ScannableTableTest.java,134,,"        .with(newSchema(""s"", Pair.of(""beatles2"", table)))"
26072,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ScannableTableTest.java,237,,"        + ""  EnumerableInterpreter\n"""
26073,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlAdvisorJdbcTest.java,102,,"            ""id=; names=null; type=MATCH""));"
26074,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java,79,,"    assertThat(SqlFunctions.toString(1.5f), is(""1.5""));"
26075,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java,80,,"    assertThat(SqlFunctions.toString(-1.5f), is(""-1.5""));"
26076,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java,116,,"    assertThat(posixRegex(""abc"", ""abc"", true), is(true));"
26077,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java,121,,"    assertThat(posixRegex(""abc"", ""ABC"", false), is(true));"
26078,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java,136,,"    assertThat(regexpReplace(""a b c"", ""b"", ""X""), is(""a X c""));"
26079,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java,137,,"    assertThat(regexpReplace(""abc def ghi"", ""[g-z]+"", ""X""), is(""abc def X""));"
26080,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java,138,,"    assertThat(regexpReplace(""abc def ghi"", ""[a-z]+"", ""X""), is(""X X X""));"
26081,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java,231,,"      fail(""Expected NPE, got "" + o);"
26082,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java,256,,"    assertThat(rtrim(""   x  ""), is(""   x""));"
26083,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java,652,,"    assertThat(SqlFunctions.ltAny(""apple"", ""banana""), is(true));"
26084,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java,652,,"    assertThat(SqlFunctions.ltAny(""apple"", ""banana""), is(true));"
26085,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java,672,,"              + ""class java.lang.Long""));"
26086,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlHintsConverterTest.java,149,,"        + ""sum(e1.empno) from emp e1, dept d1\n"""
26087,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlHintsConverterTest.java,150,,"        + ""where e1.deptno = d1.deptno\n"""
26088,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlHintsConverterTest.java,151,,"        + ""and e1.sal> (\n"""
26089,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlHintsConverterTest.java,217,,"        + ""ename, job, sal, dept.name\n"""
26090,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlHintsConverterTest.java,220,,"        + ""on emp.deptno = dept.deptno"";"
26091,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlHintsConverterTest.java,328,,"        + ""from emp join dept on emp.deptno = dept.deptno"";"
26092,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlJsonFunctionsTest.java,64,,"    assertJsonValueExpression(""null"","
26093,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlJsonFunctionsTest.java,69,,"    assertJsonApiCommonSyntax(""{\""foo\"": \""bar\""}"", ""$.foo"","
26094,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlJsonFunctionsTest.java,71,,"            JsonFunctions.JsonPathContext.withJavaObj(JsonFunctions.PathMode.STRICT, ""bar"")));"
26095,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlJsonFunctionsTest.java,132,,"        JsonFunctions.JsonPathContext.withStrictException(new Exception(""test message"")),"
26096,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlJsonFunctionsTest.java,173,,"        ""empty"","
26097,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlJsonFunctionsTest.java,186,,"                + ""allowed"", null)));"
26098,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlJsonFunctionsTest.java,273,,"        is(""[\""bar\""]""));"
26099,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlJsonFunctionsTest.java,457,,"        ""foo"","
26100,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlJsonFunctionsTest.java,590,,"    assertIsJsonValue(""100"", is(true));"
26101,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlStatisticProviderTest.java,103,,"        provider.isKey(productTable, columns(productTable, ""product_id"")),"
26102,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,114,,"        + ""from emp"";"
26103,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,124,,"    final String sql = ""select\n"""
26104,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,150,,"    final String sql = ""select * from (\n"""
26105,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,178,,"    final String sql = ""select * from emp\n"""
26106,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,186,,"    final String sql = ""SELECT * FROM emp\n"""
26107,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,243,,"    final String sql = ""select *\n"""
26108,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,244,,"        + ""from emp as e\n"""
26109,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,274,,"    final String sql = ""SELECT *\n"""
26110,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,281,,"        + ""FROM emp\n"""
26111,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,311,,"        + ""from emp\n"""
26112,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,313,,"        + ""group by deptno"";"
26113,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,413,,"    final String sql = ""select deptno, ename, sum(sal) from emp\n"""
26114,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,415,,"        + ""order by 2"";"
26115,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,455,,"    final String sql = ""select 1\n"""
26116,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,510,,"        + ""from (values (1, 2, 3, 4)) as t(a, b, c, d)\n"""
26117,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,668,,"        + ""from orders\n"""
26118,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,816,,"        + ""union all\n"""
26119,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,842,,"    final String sql = ""select empno from emp\n"""
26120,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,898,,"        + ""group by deptno\n"""
26121,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,951,,"        + ""where exists (\n"""
26122,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,952,,"        + ""  with dept2 as (select * from dept where dept.deptno >= emp.deptno)\n"""
26123,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,953,,"        + ""  select 1 from dept2 where deptno <= emp.deptno)"";"
26124,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,1054,,"        + "" where SAL = 20"").with(getExtendedTester()).ok();"
26125,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,1102,,"        + "" where ename = 'Bob'"").ok();"
26126,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,1176,,"    final String sql = ""select stream *\n"""
26127,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,1476,,"        + ""from dept"";"
26128,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,1509,,"    final String sql = ""select*from emp where exists (\n"""
26129,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,1510,,"        + ""  select 1 from dept where emp.deptno=dept.deptno)"";"
26130,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,1576,,"        + "" (select deptno from dept)"";"
26131,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,1709,,"    final String sql = ""select empno, deptno not in (\n"""
26132,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,1796,,"    final String sql = ""select * from emp,\n"""
26133,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,1921,,"        + ""from table(\n"""
26134,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,1923,,"        + ""  DATA => table Shipments,\n"""
26135,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,1924,,"        + ""  TIMECOL => descriptor(rowtime),\n"""
26136,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,2069,,"        + ""  count(*) over (order by deptno\n"""
26137,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,2535,,"        + "" (ename, deptno, empno, updated, sal)\n"""
26138,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,2610,,"    final String sql = ""update emp\n"""
26139,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,2780,,"    final String sql = ""SELECT e1.empno\n"""
26140,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,2800,,"    final String sql = ""select deptno\n"""
26141,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,2801,,"        + ""from EMP\n"""
26142,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,2934,,"    final String sql = ""select deptno,\n"""
26143,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,3026,,"        + ""FROM emp e1, dept d1 where e1.deptno = d1.deptno\n"""
26144,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,3027,,"        + ""and e1.deptno < 10 and d1.deptno < 15\n"""
26145,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,3222,,"        + ""from\n"""
26146,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,3223,,"        + ""  (\n"""
26147,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,3240,,"        + ""from sales.dept_nested dn"";"
26148,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,3316,,"            + ""  coord_ne.sub.a,\n"""
26149,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,3548,,"        + ""  from emp match_recognize\n"""
26150,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,3552,,"        + ""    pattern (strt down+ up+)\n"""
26151,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,3553,,"        + ""    define\n"""
26152,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,4127,,"        + ""select deptno from\n"""
26153,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,4128,,"        + ""(select ename, deptno from emp\n"""
26154,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java,4130,,"        + ""select name, deptno from dept)"";"
26155,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,135,,"      ""RecordType(INTEGER NOT NULL EMPNO,"""
26156,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,136,,"          + "" VARCHAR(20) NOT NULL ENAME,"""
26157,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,137,,"          + "" VARCHAR(10) NOT NULL JOB,"""
26158,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,138,,"          + "" INTEGER MGR,"""
26159,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,139,,"          + "" TIMESTAMP(0) NOT NULL HIREDATE,"""
26160,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,140,,"          + "" INTEGER NOT NULL SAL,"""
26161,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,141,,"          + "" INTEGER NOT NULL COMM,"""
26162,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,142,,"          + "" INTEGER NOT NULL DEPTNO,"""
26163,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,190,,"        .columnType(""INTEGER NOT NULL"");"
26164,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,192,,"        .columnType(""CHAR(3) NOT NULL"");"
26165,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,196,,"        .columnType(""BOOLEAN"");"
26166,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,208,,"        .columnType(""CHAR(6) NOT NULL"");"
26167,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,241,,"        .columnType(""DOUBLE NOT NULL"");"
26168,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,243,,"        .columnType(""BOOLEAN NOT NULL"");"
26169,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,305,,"        .fails(""(?s).*Cannot apply.*"");"
26170,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,357,,"        .columnType(""INTERVAL SECOND NOT NULL"");"
26171,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,359,,"        .columnType(""INTERVAL MONTH NOT NULL"");"
26172,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,437,,"        .fails(""(?s).*Cannot apply '=' to arguments of type """
26173,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,442,,"        .fails(""(?s).*Cannot apply '<>' to arguments of type """
26174,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,506,,"        .fails(""(?s).*Cannot apply 'POWER' to arguments of type """
26175,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,562,,"        .columnType(""INTEGER"");"
26176,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,563,,"    expr(""CASE 1\n"""
26177,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,582,,"    sql(""select\n"""
26178,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,636,,"        .columnType(""CHAR(1) NOT NULL"");"
26179,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,647,,"        .columnType(""VARCHAR NOT NULL"");"
26180,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,734,,"        .fails(""(?s)Cannot apply 'CONCAT' to arguments of type """
26181,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,771,,"        .fails(""(?s).*Cannot apply .* to the two different charsets.*"");"
26182,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,860,,"        .fails(""Parameters must be of the same type"");"
26183,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,907,,"        .fails(""No match found for function signature """
26184,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,918,,"            + ""Was expecting 3 arguments"");"
26185,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,982,,"        .columnType(""VARCHAR(1) NOT NULL"");"
26186,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1084,,"        .fails(""(?s).*Illegal use of .NULL.*"");"
26187,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1112,,"        .columnType(""BIGINT"");"
26188,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1118,,"        .columnType(""DOUBLE"");"
26189,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1130,,"        .columnType(""TIME(0)"");"
26190,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1132,,"        .columnType(""TIMESTAMP(0)"");"
26191,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1159,,"        .columnType(""REAL NOT NULL"");"
26192,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1171,,"        .columnType(""BIGINT NOT NULL"");"
26193,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1175,,"        .columnType(""FLOAT NOT NULL"");"
26194,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1191,,"        .columnType(""DECIMAL(19, 0) NOT NULL"");"
26195,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1220,,"        .columnType(""TIME(0) NOT NULL"");"
26196,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1233,,"        .columnType(""TIMESTAMP(0) NOT NULL"");"
26197,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1259,,"        .fails(""(?s).*Cast function cannot convert value of type """
26198,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1311,,"        .fails(""(?s).*Numeric literal '100000000000000' out of range.*"");"
26199,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1357,,"        .columnType(""DATE NOT NULL"");"
26200,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1483,,"            + ""Was expecting 2 arguments"");"
26201,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1681,,"        + ""from emp"")"
26202,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1812,,"    final String sql = ""SELECT * FROM emp\n"""
26203,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1822,,"    final String sql = ""SELECT *\n"""
26204,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1828,,"    final String type = ""RecordType(INTEGER NOT NULL DEPTNO, """
26205,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1837,,"        + ""FROM (\n"""
26206,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1919,,"    final String sql = ""SELECT * FROM Emp\n"""
26207,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,1942,,"        + ""UNPIVOT (remuneration\n"""
26208,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2121,,"        .columnType(""INTERVAL YEAR NOT NULL"");"
26209,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2172,,"        .columnType(""INTERVAL YEAR TO MONTH NOT NULL"");"
26210,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2278,,"        .columnType(""INTERVAL DAY NOT NULL"");"
26211,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2322,,"        .columnType(""INTERVAL DAY TO HOUR NOT NULL"");"
26212,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2377,,"        .columnType(""INTERVAL DAY TO MINUTE NOT NULL"");"
26213,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2432,,"        .columnType(""INTERVAL DAY TO SECOND NOT NULL"");"
26214,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2501,,"        .columnType(""INTERVAL HOUR NOT NULL"");"
26215,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2552,,"        .columnType(""INTERVAL HOUR TO MINUTE NOT NULL"");"
26216,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2607,,"        .columnType(""INTERVAL HOUR TO SECOND NOT NULL"");"
26217,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2676,,"        .columnType(""INTERVAL MINUTE NOT NULL"");"
26218,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2727,,"        .columnType(""INTERVAL MINUTE TO SECOND NOT NULL"");"
26219,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2876,,"        .fails(""Interval field value 100 exceeds precision of YEAR\\(2\\) field.*"");"
26220,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2884,,"        .fails(""Interval field value 2,147,483,648 exceeds precision of """
26221,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2887,,"        .fails(""Interval field value -2,147,483,648 exceeds precision of """
26222,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2892,,"        .fails(""Interval leading field precision '11' out of range for """
26223,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2899,,"        .fails(""Interval leading field precision '0' out of range for """
26224,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,2926,,"        .fails(""Illegal interval literal format 'bogus text' for """
26225,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,3053,,"        .fails(""Interval field value 100 exceeds precision of DAY\\(2\\) field.*"");"
26226,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,3062,,"            + ""DAY\\(10\\) field.*"");"
26227,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,3247,,"            + ""INTERVAL DAY TO SECOND"");"
26228,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,3298,,"            + ""INTERVAL DAY TO SECOND.*"");"
26229,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,3387,,"        .fails(""Interval field value 100 exceeds precision of """
26230,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,3388,,"            + ""HOUR\\(2\\) field.*"");"
26231,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,3394,,"            + ""HOUR\\(3\\) field.*"");"
26232,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,3400,,"            + ""HOUR\\(10\\) field.*"");"
26233,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,3615,,"        .fails(""Interval field value 100 exceeds precision of MINUTE\\(2\\) field.*"");"
26234,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4257,,"        + ""from emp\n"""
26235,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4260,,"        .fails(""OVER clause is necessary for window functions"");"
26236,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4304,,"        + ""group by deptno"";"
26237,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4309,,"    winSql(sql2).fails(""Expression 'EMPNO' is not being grouped"");"
26238,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4340,,"    winSql(""select *\n"""
26239,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4341,,"        + "" from emp\n"""
26240,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4352,,"        + ""order by deptno"")"
26241,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4513,,"        + "" from emp window w as (order by empno)"").ok();"
26242,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4545,,"        + "" from emp"")"
26243,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4558,,"        + ""from emp window w as (order by empno)"").ok();"
26244,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4650,,"        + ""rows 2 preceding )"").ok();"
26245,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4657,,"    winExp2(""sum(sal) over ("""
26246,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4663,,"        + ""order by deptno """
26247,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4734,,"    winSql(""select """
26248,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4817,,"        .fails(""Expression 'DEPTNO' is not being grouped"");"
26249,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4837,,"    win(""window w as ("""
26250,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,4919,,"        .fails(""Column 'DEPTNO' is ambiguous"");"
26251,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5010,,"    sql(""select * from "" + emps + "" join "" + depts + ""\n"""
26252,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5010,,"    sql(""select * from "" + emps + "" join "" + depts + ""\n"""
26253,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5050,,"        .fails(""Table 'E' not found"");"
26254,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5084,,"    sql(""select * from emp as e\n"""
26255,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5154,,"        .fails(""Unknown field '\\*'"");"
26256,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5223,,"    sql(""select * from emp\n"""
26257,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5349,,"        .fails(""Duplicate relation name 'EMP' in FROM clause"");"
26258,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5393,,"        .type(""RecordType(INTEGER NOT NULL DEPTNO,"""
26259,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5394,,"            + "" VARCHAR(10) NOT NULL NAME) NOT NULL"");"
26260,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5538,,"        equalTo(""[{}]""));"
26261,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5592,,"        .fails(""Argument to GROUPING operator must be a grouped expression"");"
26262,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5602,,"        .fails(""GROUPING operator may only occur in an aggregate query"");"
26263,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5626,,"        .fails(""GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause"");"
26264,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5629,,"    sql(""select deptno from emp\n"""
26265,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5658,,"        .fails(""GROUPING_ID operator may only occur in an aggregate query"");"
26266,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5684,,"        .fails(""GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause"");"
26267,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5784,,"        .fails(""Table 'EMP' not found"");"
26268,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5815,,"        + ""union\n"""
26269,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5817,,"        .fails(""Column 'EMPNO' not found in any table"");"
26270,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5824,,"        .fails(""Column count mismatch in UNION"");"
26271,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5847,,"        .fails(""Type mismatch in column 2 of UNION"");"
26272,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5925,,"        + "" INTEGER NOT NULL EMPNO,"""
26273,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5932,,"        + "" BOOLEAN NOT NULL SLACKER,"""
26274,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,5980,,"        .fails(""Cannot qualify common column 'EMP.DEPTNO'"")"
26275,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6217,,"        + ""from emp as e\n"""
26276,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6277,,"        .fails(""Expression 'EMP\\.EMPNO' is not being grouped"");"
26277,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6282,,"        .fails(""Expression 'SAL' is not being grouped"");"
26278,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6298,,"        + ""select * from emp2"")"
26279,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6400,,"        + ""join (\n"""
26280,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6438,,"        + ""union all\n"""
26281,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6524,,"    sql(""^select 2+2^"")"
26282,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6576,,"            ""Ordinal out of range"");"
26283,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6652,,"    sql(""with e as (select * from emp)\n"""
26284,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6675,,"    sql(""select empno, sal from emp """
26285,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6676,,"        + ""union all """
26286,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6677,,"        + ""select deptno, deptno from dept """
26287,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6752,,"        .fails(""Expression 'EMPNO' is not in the select clause"");"
26288,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6767,,"        + ""from emp """
26289,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6794,,"        .withConformance(strict).fails(""Column 'E' not found in any table"")"
26290,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6806,,"        .withConformance(strict).fails(""Column 'ENO' not found in any table"")"
26291,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,6981,,"    sql(""select distinct cast(empno as bigint) as empno """
26292,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,7036,,"        + ""group by empno\n"""
26293,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,7331,,"        + ""from emp group by deptno"")"
26294,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,7339,,"        + "" from emp group by deptno"")"
26295,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,7349,,"    sql(""select avg(sum(sal)) OVER (partition by ^empno^)\n"""
26296,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,7416,,"        + ""from emp group by empno + deptno"").ok();"
26297,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,7507,,"    sql(""select deptno,\n"""
26298,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,7694,,"    expr(""(date '1-2-3', date '1-2-3')\n"""
26299,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,7697,,"    expr(""period (date '1-2-3', date '1-2-3')\n"""
26300,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,7709,,"        .fails(""(?s).*Cannot apply 'OVERLAPS' to arguments of type .*"");"
26301,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,7720,,"    expr(""true\n"""
26302,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,7721,,"        + ""or (date '1-2-3', date '1-2-3')\n"""
26303,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,7723,,"        + ""or false"")"
26304,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,7964,,"        + ""from dept_nested_expanded as d CROSS JOIN\n"""
26305,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,8053,,"        + ""from COMPLEXTYPES.CTC_T1"")"
26306,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,8121,,"    final String sql1 = ""select d.deptno, e.*\n"""
26307,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,8610,,"        + ""on orders.productid = products_temporal.productid"").ok();"
26308,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,8751,,"        + ""UNION ALL """
26309,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,8816,,"    final String expected = ""SELECT `NAME`\n"""
26310,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,8817,,"        + ""FROM `DEPT`\n"""
26311,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,9048,,"    s.sql(""select ^x^ from (\n"""
26312,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,9148,,"    s.sql(""select * from emp as [e] where exists (\n"""
26313,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,9671,,"    sql(""insert into empnullables (empno, ename)\n"""
26314,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,9715,,"    final String sql1 = ""insert into empnullables\n"""
26315,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,9789,,"        + ""values (1, 'Arthur', 'clown', true)"").ok();"
26316,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,9805,,"        + ""values (?, ?, ?)"";"
26317,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,9818,,"        .bindType(""RecordType(VARCHAR(20) ?0, INTEGER ?1)"");"
26318,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,9898,,"        .bindType(""RecordType(INTEGER ?0, VARCHAR(20) ?1)"");"
26319,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,9948,,"    final String error0 = ""Modifiable view constraint is not satisfied"""
26320,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,9949,,"        + "" for column 'DEPTNO' of base table 'EMP_MODIFIABLEVIEW2'"";"
26321,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,9968,,"    s.sql(""update EMP_MODIFIABLEVIEW2"""
26322,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,9970,,"        + "" where ename = 'Lex'"").ok();"
26323,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,9996,,"    final String sql0 = ""insert into ^VIRTUALCOLUMNS.VC_T1^\n"""
26324,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10027,,"        .fails(""Column 'EMPNO' has no default value and does not allow NULLs"");"
26325,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10029,,"        .fails(""Column 'ENAME' has no default value and does not allow NULLs"");"
26326,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10087,,"        .fails(""Number of INSERT target columns \\(9\\) does not equal """
26327,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10088,,"            + ""number of source items \\(1\\)"");"
26328,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10094,,"            + ""number of source items \\(2\\)"");"
26329,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10122,,"        .fails(""Duplicate name 'EXTRA' in column list"");"
26330,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10145,,"        + "" where SAL = 20"").ok();"
26331,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10164,,"    s.sql(""select ENAME, EMPNO, JOB, SLACKER, SAL, HIREDATE, MGR, COMM\n"""
26332,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10201,,"    final String sql0 = ""select ENAME, EMPNO, JOB, SLACKER, SAL, HIREDATE,"""
26333,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10205,,"    final String error0 = ""Cannot assign to target field 'SLACKER' of type"""
26334,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10213,,"    final String error1 = ""Cannot assign to target field 'EMPNO' of type"""
26335,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10224,,"    final String error = ""Cannot assign to target field 'EXTRA' of type"""
26336,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10265,,"        + "" values (45, 'Jake', 5)"";"
26337,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10402,,"        + ""where deptno = 10"")"
26338,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10410,,"        + ""from orders\n"""
26339,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10421,,"        + ""from orders"")"
26340,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10459,,"    sql(""select stream\n"""
26341,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10590,,"    sql(""select stream *\n"""
26342,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10671,,"        .type(""RecordType(INTEGER NOT NULL C2) NOT NULL"");"
26343,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10679,,"        .type(""RecordType(VARCHAR(20) NOT NULL C1) NOT NULL"");"
26344,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10712,,"    sql(""select f0.c2 from struct."" + table + "" f0"")"
26345,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10722,,"        .type(""RecordType(INTEGER NOT NULL C1) NOT NULL"");"
26346,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10806,,"    sql(""select rowtime, productid, orderid, 'window_start', 'window_end'\n"""
26347,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10807,,"        + ""from table(\n"""
26348,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10809,,"        + ""data => table orders,\n"""
26349,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10810,,"        + ""timecol => descriptor(rowtime),\n"""
26350,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10823,,"        .fails(""Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\(<RECORDTYPE\\"""
26351,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10824,,"            + ""(TIMESTAMP\\(0\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\)>, <COLUMN_LIST>, """
26352,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10850,,"    sql(""select * from table(\n"""
26353,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10890,,"        + ""slide => interval '2' hour,\n"""
26354,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10891,,"        + ""size => interval '1' hour))"").ok();"
26355,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10938,,"        .fails(""Cannot apply 'HOP' to arguments of type 'HOP\\(<RECORDTYPE\\(TIMESTAMP\\(0\\) """
26356,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10992,,"        .fails(""Cannot apply 'SESSION' to arguments of type 'SESSION\\(<RECORDTYPE\\(TIMESTAMP\\("""
26357,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,10995,,"            + ""timecol\\), DESCRIPTOR\\(key\\) optional, datetime interval\\)"");"
26358,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,11077,,"        + ""  count(*) as c\n"""
26359,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,11210,,"        + "" where deptno = 10"").ok();"
26360,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,11294,,"        + "" where ename = 'Jane'"").ok();"
26361,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,11336,,"        + "" deptno INTEGER)\n"""
26362,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,11443,,"    sql(""insert into EMPDEFAULTS(\""comm\"" BOOLEAN)"""
26363,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,11497,,"    final String sql1 = ""insert into EMP_MODIFIABLEVIEW2(\""extra\"" INTEGER)"""
26364,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,11583,,"        + ""where sal > 10"";"
26365,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,11883,,"        .columnType(""VARCHAR(2000)"");"
26366,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,11929,,"        .columnType(""VARCHAR(2000) NOT NULL"");"
26367,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java,12115,,"        .fails(""(?s).*No match found for function signature """
26368,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/StreamTest.java,66,,"  public static final String STREAM_SCHEMA_NAME = ""STREAMS"";"
26369,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/StreamTest.java,120,,"        .convertContains(""LogicalDelta\n"""
26370,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/StreamTest.java,400,,"          {ts(10, 15, 0), 1, ""paint"", 10},"
26371,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TableFunctionTest.java,91,,"    try (Connection connection = DriverManager.getConnection(""jdbc:calcite:"")) {"
26372,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TableFunctionTest.java,98,,"      schema.add(""GenerateStrings"", table);"
26373,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TableFunctionTest.java,99,,"      final String sql = ""select *\n"""
26374,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TableFunctionTest.java,155,,"    schema.add(""Maze"", table);"
26375,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TableFunctionTest.java,522,,"      final String expected = ""F0=5; N=4; C=abcd\n"""
26376,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TopDownOptTest.java,97,,"    final String sql = ""select * from\n"""
26377,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TopDownOptTest.java,98,,"        + ""sales.emp r join sales.bonus s on r.ename=s.ename and r.job=s.job\n"""
26378,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TopDownOptTest.java,155,,"        + ""join sales.bonus s on r.job=s.job and r.ename=s.ename"";"
26379,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TopDownOptTest.java,190,,"    final String sql = ""select * from emp e\n"""
26380,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TopDownOptTest.java,425,,"        + ""on r.contactno=s.acctno and r.email=s.type\n"""
26381,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TopDownOptTest.java,426,,"        + ""order by r.contactno desc, r.email desc"";"
26382,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TopDownOptTest.java,438,,"        + ""customer.account s\n"""
26383,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TopDownOptTest.java,479,,"        + "" customer.contact_peek r left outer join\n"""
26384,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TopDownOptTest.java,481,,"        + ""on r.contactno>s.acctno and r.email<s.type\n"""
26385,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TopDownOptTest.java,576,,"        + ""join sales.bonus s on r.ename>s.ename and r.job<s.job\n"""
26386,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TypeCoercionConverterTest.java,43,,"    checkPlanEquals(""select\n"""
26387,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TypeCoercionTest.java,274,,"        : ""Expected """
26388,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TypeCoercionTest.java,276,,"        + "" as common type for """
26389,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TypeCoercionTest.java,278,,"        + "" and """
26390,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TypeCoercionTest.java,280,,"        + "", but found """
26391,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TypeCoercionTest.java,448,,"        .type(""RecordType(VARCHAR NOT NULL EXPR$0) NOT NULL"");"
26392,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TypeCoercionTest.java,564,,"    expr(""'2' = 3"").columnType(""BOOLEAN NOT NULL"");"
26393,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TypeCoercionTest.java,572,,"    expr(""'2' = null"").columnType(""BOOLEAN"");"
26394,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TypeCoercionTest.java,618,,"        .type(""RecordType(TIMESTAMP(0) NOT NULL EXPR$0) NOT NULL"");"
26395,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/TypeCoercionTest.java,806,,"        .columnType(""VARCHAR"");"
26396,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,65,,"    final String model = ""{\n"""
26397,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,66,,"        + ""  version: '1.0',\n"""
26398,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,67,,"        + ""   schemas: [\n"""
26399,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,68,,"        + ""     {\n"""
26400,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,69,,"        + ""       name: 'adhoc',\n"""
26401,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,70,,"        + ""       tables: [\n"""
26402,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,71,,"        + ""         {\n"""
26403,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,72,,"        + ""           name: 'EMPLOYEES',\n"""
26404,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,73,,"        + ""           type: 'custom',\n"""
26405,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,74,,"        + ""           factory: '"""
26406,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,76,,"        + ""',\n"""
26407,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,77,,"        + ""           operand: {'foo': true, 'bar': 345}\n"""
26408,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,78,,"        + ""         }\n"""
26409,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,79,,"        + ""       ],\n"""
26410,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,80,,"        + ""       functions: [\n"""
26411,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,83,,"        + ""           className: '"""
26412,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,85,,"        + ""'\n"""
26413,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,86,,"        + ""         },\n"""
26414,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,124,,"        + ""           name: 'COUNT_ARGS',\n"""
26415,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,178,,"        + ""       ]\n"""
26416,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,179,,"        + ""     }\n"""
26417,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,180,,"        + ""   ]\n"""
26418,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,190,,"        + ""from \""adhoc\"".EMPLOYEES"";"
26419,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,193,,"    withUdf().query(sql).returnsUnordered(""P=110"","
26420,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,221,,"    final String expected = ""P=20\n"""
26421,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,235,,"        .returnsUnordered(""P=null"","
26422,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,330,,"    with.query(""select \""name\"" as p from \""adhoc\"".EMPLOYEES\n"""
26423,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,404,,"        + ""from \""adhoc\"".EMPLOYEES\n"""
26424,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,557,,"        + ""           name: 'MY_SUM2',\n"""
26425,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,564,,"        .withDefaultSchema(""adhoc"");"
26426,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,568,,"        .returns(""P=50\n"");"
26427,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/UdfTest.java,958,,"            .returns(""EXPR$0=1.0\n"");"
26428,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/catalog/MockCatalogReader.java,156,,"    empRolledTable.addColumn(""SLACKINGMIN"", f.intType);"
26429,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/catalog/MockCatalogReaderSimple.java,80,,"        new CountingFactory(ImmutableList.of(""DEPTNO""));"
26430,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/catalog/MockCatalogReaderSimple.java,91,,"    empTable.addColumn(""EMPNO"", fixture.intType, true);"
26431,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/catalog/MockCatalogReaderSimple.java,92,,"    empTable.addColumn(""ENAME"", fixture.varchar20Type);"
26432,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/catalog/MockCatalogReaderSimple.java,93,,"    empTable.addColumn(""JOB"", fixture.varchar10Type);"
26433,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/catalog/MockCatalogReaderSimple.java,94,,"    empTable.addColumn(""MGR"", fixture.intTypeNull);"
26434,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/catalog/MockCatalogReaderSimple.java,95,,"    empTable.addColumn(""HIREDATE"", fixture.timestampType);"
26435,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/catalog/MockCatalogReaderSimple.java,96,,"    empTable.addColumn(""SAL"", fixture.intType);"
26436,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/catalog/MockCatalogReaderSimple.java,97,,"    empTable.addColumn(""COMM"", fixture.intType);"
26437,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/catalog/MockCatalogReaderSimple.java,99,,"    empTable.addColumn(""SLACKER"", fixture.booleanType);"
26438,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/catalog/MockCatalogReaderSimple.java,149,,"    deptTable.addColumn(""NAME"", fixture.varchar10Type);"
26439,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/catalog/MockCatalogReaderSimple.java,232,,"    ordersStream.addColumn(""ROWTIME"", fixture.timestampType);"
26440,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/concurrent/ConcurrentTestCommandGenerator.java,1042,,"            ""Row "" + rowNum + "" Expected "" + expected.size()"
26441,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/concurrent/ConcurrentTestCommandScript.java,533,,"      assert false : ""IOException via StringReader"";"
26442,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/concurrent/ConcurrentTestCommandScript.java,1002,,"            : LOCKSTEP + "" and "" + NOLOCKSTEP + "" may only appear once"";"
26443,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/concurrent/ConcurrentTestCommandScript.java,1002,,"            : LOCKSTEP + "" and "" + NOLOCKSTEP + "" may only appear once"";"
26444,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableBatchNestedLoopJoinTest.java,51,,"                .scan(""s"", ""emps"").as(""e"")"
26445,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableBatchNestedLoopJoinTest.java,54,,"                        builder.field(2, ""d"", ""deptno""),"
26446,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableCalcTest.java,65,,"    checkPosixRegex(""E..c"", SqlStdOperatorTable.POSIX_REGEX_CASE_SENSITIVE,"
26447,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableCalcTest.java,66,,"        ""empid=200; name=Eric"");"
26448,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableCalcTest.java,67,,"    checkPosixRegex(""e..c"", SqlStdOperatorTable.POSIX_REGEX_CASE_SENSITIVE, """");"
26449,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableCalcTest.java,79,,"        ""empid=100; name=Bill"", ""empid=110; name=Theodore"", ""empid=150; name=Sebastian"");"
26450,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableCalcTest.java,79,,"        ""empid=100; name=Bill"", ""empid=110; name=Theodore"", ""empid=150; name=Sebastian"");"
26451,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableCalcTest.java,79,,"        ""empid=100; name=Bill"", ""empid=110; name=Theodore"", ""empid=150; name=Sebastian"");"
26452,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableCorrelateTest.java,81,,"            ""empid=110; name=Theodore"","
26453,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableCorrelateTest.java,82,,"            ""empid=150; name=Sebastian"");"
26454,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableCorrelateTest.java,189,,"                .scan(""s"", ""emps"").as(""e"")"
26455,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableCorrelateTest.java,192,,"                        builder.field(2, ""d"", ""deptno""),"
26456,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableHashJoinTest.java,46,,"        .explainContains(""EnumerableCalc(expr#0..4=[{inputs}], empid=[$t0], """
26457,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableHashJoinTest.java,47,,"            + ""name=[$t2], dept=[$t4])\n"""
26458,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableHashJoinTest.java,49,,"            + ""    EnumerableCalc(expr#0..4=[{inputs}], proj#0..2=[{exprs}])\n"""
26459,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableHashJoinTest.java,50,,"            + ""      EnumerableTableScan(table=[[s, emps]])\n"""
26460,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableHashJoinTest.java,51,,"            + ""    EnumerableCalc(expr#0..3=[{inputs}], proj#0..1=[{exprs}])\n"""
26461,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableHashJoinTest.java,52,,"            + ""      EnumerableTableScan(table=[[s, depts]])\n"")"
26462,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableHashJoinTest.java,54,,"            ""empid=100; name=Bill; dept=Sales"","
26463,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableHashJoinTest.java,55,,"            ""empid=110; name=Theodore; dept=Sales"","
26464,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableJoinTest.java,53,,"                .scan(""s"", ""depts"").as(""d"")"
26465,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableJoinTest.java,54,,"                .scan(""s"", ""emps"").as(""e"")"
26466,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableJoinTest.java,57,,"                        builder.field(2, ""d"", ""deptno""),"
26467,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableJoinTest.java,61,,"                    builder.field(""name""))"
26468,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableJoinTest.java,131,,"                        builder.field(2, ""empOther"", ""commission""),"
26469,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableJoinTest.java,134,,"                    builder.field(""empid""),"
26470,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,42,,"        .explainContains(""EnumerableMergeUnion(all=[true])\n"""
26471,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,43,,"            + ""  EnumerableSort(sort0=[$0], dir0=[ASC])\n"""
26472,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,44,,"            + ""    EnumerableCalc(expr#0..4=[{inputs}], expr#5=['G%'], expr#6=[LIKE($t2, $t5)], empid=[$t0], name=[$t2], $condition=[$t6])\n"""
26473,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,45,,"            + ""      EnumerableTableScan(table=[[s, emps]])\n"""
26474,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,47,,"            + ""    EnumerableCalc(expr#0..4=[{inputs}], expr#5=['%l'], expr#6=[LIKE($t2, $t5)], empid=[$t0], name=[$t2], $condition=[$t6])\n"""
26475,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,50,,"            ""empid=1; name=Bill"","
26476,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,51,,"            ""empid=6; name=Guy"","
26477,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,52,,"            ""empid=10; name=Gabriel"","
26478,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,54,,"            ""empid=12; name=Paul"","
26479,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,55,,"            ""empid=29; name=Anibal"","
26480,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,56,,"            ""empid=40; name=Emmanuel"","
26481,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,57,,"            ""empid=45; name=Pascal"");"
26482,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,64,,"        .explainContains(""EnumerableMergeUnion(all=[false])\n"""
26483,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,86,,"            + ""  EnumerableSort(sort0=[$1], dir0=[ASC])\n"""
26484,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,151,,"            + ""    EnumerableCalc(expr#0..4=[{inputs}], empid=[$t0], name=[$t2])\n"""
26485,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,154,,"            + ""          EnumerableTableScan(table=[[s, emps]])\n"""
26486,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,210,,"            + ""  EnumerableSort(sort0=[$0], sort1=[$1], dir0=[ASC-nulls-first], dir1=[DESC])\n"""
26487,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,211,,"            + ""    EnumerableCalc(expr#0..4=[{inputs}], expr#5=['R%'], expr#6=[LIKE($t2, $t5)], commission=[$t4], name=[$t2], $condition=[$t6])\n"""
26488,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,214,,"            + ""    EnumerableCalc(expr#0..4=[{inputs}], expr#5=['%y%'], expr#6=[LIKE($t2, $t5)], commission=[$t4], name=[$t2], $condition=[$t6])\n"""
26489,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,217,,"            ""commission=null; name=Taylor"","
26490,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,218,,"            ""commission=null; name=Riyad"","
26491,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,220,,"            ""commission=null; name=Ralf"","
26492,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,221,,"            ""commission=250; name=Seohyun"","
26493,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,222,,"            ""commission=250; name=Hyuna"","
26494,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,223,,"            ""commission=250; name=Andy"","
26495,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,224,,"            ""commission=500; name=Kylie"","
26496,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,225,,"            ""commission=500; name=Guy"");"
26497,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableMergeUnionTest.java,255,,"            + ""  EnumerableSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[DESC])\n"""
26498,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableRepeatUnionHierarchyTest.java,152,,"          .scan(""s"", ""emps"");"
26499,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableRepeatUnionHierarchyTest.java,158,,"                builder.field(""empid""),"
26500,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableRepeatUnionTest.java,48,,"                .transientScan(""DELTA"")"
26501,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableRepeatUnionTest.java,59,,"        .returnsOrdered(""i=1"", ""i=2"", ""i=3"", ""i=4"", ""i=5"", ""i=6"", ""i=7"", ""i=8"", ""i=9"", ""i=10"");"
26502,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableRepeatUnionTest.java,59,,"        .returnsOrdered(""i=1"", ""i=2"", ""i=3"", ""i=4"", ""i=5"", ""i=6"", ""i=7"", ""i=8"", ""i=9"", ""i=10"");"
26503,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableRepeatUnionTest.java,74,,"                .transientScan(""AUX"")"
26504,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableSortedAggregateTest.java,38,,"            + ""max(salary) as max_salary, count(name) as num_employee """
26505,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableSortedAggregateTest.java,47,,"            + ""    EnumerableTableScan(table=[[s, emps]])"")"
26506,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableStringComparisonTest.java,85,,"            ""name"","
26507,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableStringComparisonTest.java,108,,"                ""Legal"", ""presales"", ""hr"", ""Administration"", ""MARKETING"")"
26508,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableStringComparisonTest.java,108,,"                ""Legal"", ""presales"", ""hr"", ""Administration"", ""MARKETING"")"
26509,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableStringComparisonTest.java,108,,"                ""Legal"", ""presales"", ""hr"", ""Administration"", ""MARKETING"")"
26510,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableStringComparisonTest.java,211,,"    testStringComparison(""aaa"", ""AAA"", EQUALS, false);"
26511,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableStringComparisonTest.java,238,,"    testStringComparison(""ABC"", ""ABC"", EQUALS, SPECIAL_COLLATION_PRIMARY, true);"
26512,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableStringComparisonTest.java,243,,"    testStringComparison(""abc"", ""ÀBC"", EQUALS, SPECIAL_COLLATION_PRIMARY, true);"
26513,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableStringComparisonTest.java,243,,"    testStringComparison(""abc"", ""ÀBC"", EQUALS, SPECIAL_COLLATION_PRIMARY, true);"
26514,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/enumerable/EnumerableUncollectTest.java,112,,"    final String sql = ""select * from (values (1), (2)) T1(x),"""
26515,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/fuzzer/RexFuzzer.java,144,,"    throw new AssertionError(""should not reach here"");"
26516,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/tools/PlannerTest.java,126,,"        ""SELECT *\n"""
26517,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/tools/PlannerTest.java,127,,"            + ""FROM `emps`\n"""
26518,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/tools/PlannerTest.java,289,,"    SqlNode parse = planner.parse(""select * from \""emps\"""");"
26519,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/tools/PlannerTest.java,316,,"        ""select * from \""emps\"" where \""deptno\"" < 10\n"""
26520,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/tools/PlannerTest.java,317,,"            + ""union all\n"""
26521,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/tools/PlannerTest.java,399,,"            ""EnumerableProject(empid=[$0], deptno=[$1], name=[$2], salary=[$3], commission=[$4])\n"""
26522,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/tools/PlannerTest.java,400,,"            + ""  EnumerableTableScan(table=[[hr, emps]])\n""));"
26523,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/tools/PlannerTest.java,425,,"            + "" union all select * from (values(3)) where false"","
26524,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/tools/PlannerTest.java,563,,"        equalTo(""EnumerableSort(sort0=[$1], dir0=[ASC])\n"""
26525,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/tools/PlannerTest.java,565,,"            + ""    EnumerableTableScan(table=[[hr, emps]])\n""));"
26526,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/tools/PlannerTest.java,618,,"        + ""order by deptno"","
26527,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/tools/PlannerTest.java,1024,,"        + ""join \""customer\"" as c\n"""
26528,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/tools/PlannerTest.java,1025,,"        + ""  on s.\""customer_id\"" = c.\""customer_id\""\n"""
26529,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/tools/PlannerTest.java,1457,,"        .scan(""EMP"")"
26530,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/ImmutableBeanTest.java,81,,"      throw new AssertionError(""expected error, got "" + v);"
26531,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/ImmutableBeanTest.java,85,,"              + "" is required and has no default value""));"
26532,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/ImmutableBeanTest.java,136,,"    assertThat(b.getStringWithDefault(), is(""abc""));"
26533,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/ImmutableBeanTest.java,307,,"    final List<String> singletonList = Collections.singletonList(""Elvis"");"
26534,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/ImmutableBitSetTest.java,403,,"      fail(""expected throw"");"
26535,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/PartiallyOrderedSetTest.java,111,,"    assertEquals(""['abcd']"", poset.getNonChildren().toString());"
26536,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/PartiallyOrderedSetTest.java,112,,"    assertEquals(""['']"", poset.getNonParents().toString());"
26537,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/PartiallyOrderedSetTest.java,310,,"        System.out.println(""Random seed: "" + seed);"
26538,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/Smalls.java,108,,"      Types.lookupMethod(Smalls.class, ""view"", String.class);"
26539,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/SourceTest.java,129,,"    assertAppend(file(null, fooRelative), file(null, barRelative), ""fo o+/b ar+"");"
26540,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/TestUtilTest.java,141,,"    assertThat(distance.toString(), is(""[b, d]""));"
26541,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,204,,"        Util.toJavaId(""foo"", 0));"
26542,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,463,,"      fail(""expected error, got "" + z);"
26543,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,540,,"    properties.put(""foo"", ""george"");"
26544,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,541,,"    properties.put(""bar"", ""ringo"");"
26545,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,541,,"    properties.put(""bar"", ""ringo"");"
26546,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,583,,"        new LinkedHashSet<>(Arrays.asList(""John"", ""Paul"", ""George"", ""Ringo""));"
26547,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,583,,"        new LinkedHashSet<>(Arrays.asList(""John"", ""Paul"", ""George"", ""Ringo""));"
26548,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,583,,"        new LinkedHashSet<>(Arrays.asList(""John"", ""Paul"", ""George"", ""Ringo""));"
26549,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,583,,"        new LinkedHashSet<>(Arrays.asList(""John"", ""Paul"", ""George"", ""Ringo""));"
26550,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,588,,"    Util.printIterable(sb, ImmutableSet.of(""abc""));"
26551,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,837,,"    map.put(""person"", ""world"");"
26552,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,948,,"    assertThat(Spaces.padLeft(""abcde"", 5), equalTo(""abcde""));"
26553,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,949,,"    assertThat(Spaces.padLeft(""abcdef"", 5), equalTo(""abcdef""));"
26554,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,960,,"    List<String> strings = Arrays.asList(""paul"", ""george"", ""john"", ""ringo"");"
26555,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,960,,"    List<String> strings = Arrays.asList(""paul"", ""george"", ""john"", ""ringo"");"
26556,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,1321,,"    @SuppressWarnings(""unchecked"")"
26557,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,1534,,"    assertEquals(""myJdbcDriver"", AvaticaUtils.toCamelCase(""MY_JDBC_DRIVER""));"
26558,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,1589,,"    map.put(""baz"", true);"
26559,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,2236,,"    assertThat(map.get(""ABCDE""), equalTo(""abCde""));"
26560,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,2387,,"    assertThat(names.contains(""BAZ"", true), is(false));"
26561,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,2393,,"    assertThat(names.range(""BaZ"", true).size(), is(0));"
26562,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,2397,,"    assertThat(names.contains(""bAzinga"", false), is(false));"
26563,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,2401,,"    assertThat(names.contains(""zoo"", true), is(false));"
26564,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,2406,,"    names.add(""Baz"");"
26565,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,2408,,"    names.add(""WOMBAT"");"
26566,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,2424,,"    assertThat(names.contains(""wombat"", true), is(false));"
26567,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,2426,,"    assertThat(names.contains(""womBat"", true), is(false));"
26568,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,2430,,"    assertThat(names.contains(""zyMurgy"", true), is(false));"
26569,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,2736,,"    assertThat(""x\ny"", isLinux(""x\ny""));"
26570,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,2737,,"    assertThat(""x\r\ny"", isLinux(""x\ny""));"
26571,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,2874,,"    c.add(""Abc"");"
26572,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/util/UtilTest.java,2879,,"    assertThat(c.areEquivalent(""abc"", ""ABC""), is(false));"
26573,./TargetProjects/calcite/druid/src/main/java/org/apache/calcite/adapter/druid/DruidConnectionImpl.java,462,,"      throw new RuntimeException(""expected "" + expected + "", got "" + token);"
26574,./TargetProjects/calcite/druid/src/main/java/org/apache/calcite/adapter/druid/DruidConnectionImpl.java,487,,"  @SuppressWarnings(""unused"")"
26575,./TargetProjects/calcite/druid/src/main/java/org/apache/calcite/adapter/druid/DruidJsonFilter.java,468,,"      generator.writeStringField(""type"", type.lowercase());"
26576,./TargetProjects/calcite/druid/src/main/java/org/apache/calcite/adapter/druid/DruidQuery.java,539,,"        pw.item(""intervals"", intervals);"
26577,./TargetProjects/calcite/druid/src/main/java/org/apache/calcite/adapter/druid/DruidQuery.java,541,,"        pw.item(""filter"", ((Filter) rel).getCondition());"
26578,./TargetProjects/calcite/druid/src/main/java/org/apache/calcite/adapter/druid/DruidQuery.java,1216,,"      generator.writeStringField(""queryType"", ""timeseries"");"
26579,./TargetProjects/calcite/druid/src/main/java/org/apache/calcite/adapter/druid/DruidQuery.java,1217,,"      generator.writeStringField(""dataSource"", druidTable.dataSource);"
26580,./TargetProjects/calcite/druid/src/main/java/org/apache/calcite/adapter/druid/DruidQuery.java,1223,,"      writeFieldIf(generator, ""virtualColumns"","
26581,./TargetProjects/calcite/druid/src/main/java/org/apache/calcite/adapter/druid/DruidQuery.java,1659,,"      generator.writeStringField(""type"", type);"
26582,./TargetProjects/calcite/druid/src/main/java/org/apache/calcite/adapter/druid/DruidTableFactory.java,66,,"        if (!(map.get(""name"") instanceof String)) {"
26583,./TargetProjects/calcite/druid/src/main/java/org/apache/calcite/adapter/druid/DruidTableFactory.java,70,,"        if (!(map.get(""type"") instanceof String)"
26584,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,112,,"                metaData.getColumns(null, null, ""foodmart"", null);"
26585,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,134,,"    final String explain = ""PLAN="""
26586,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,135,,"        + ""EnumerableInterpreter\n"""
26587,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,138,,"    final String druidQuery = ""{'queryType':'groupBy','dataSource':'foodmart','granularity':'all',"""
26588,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,141,,"        + ""'aggregations':[],"""
26589,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,142,,"        + ""'intervals':['1900-01-09T00:00:00.000Z/2992-01-10T00:00:00.000Z']}"";"
26590,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,152,,"    final String explain = ""PLAN=EnumerableInterpreter\n"""
26591,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,153,,"        + ""  DruidQuery(table=[[foodmart, foodmart]], """
26592,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,154,,"        + ""intervals=[[1900-01-09T00:00:00.000Z/2992-01-10T00:00:00.000Z]], """
26593,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,157,,"        + ""from \""foodmart\""\n"""
26594,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,194,,"    final String druidQuery = ""{'queryType':'groupBy','dataSource':'foodmart',"""
26595,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,195,,"        + ""'granularity':'all','dimensions':[{'type':'default',"""
26596,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,268,,"        + ""  EnumerableInterpreter\n"""
26597,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,269,,"        + ""    DruidQuery(table=[[foodmart, foodmart]], """
26598,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,288,,"    final String druidQuery = ""{'queryType':'scan','dataSource':'foodmart',"""
26599,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,289,,"        + ""'intervals':['1900-01-09T00:00:00.000Z/2992-01-10T00:00:00.000Z'],"""
26600,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,291,,"        + ""'resultFormat':'compactedList'}"";"
26601,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,349,,"        + ""  DruidQuery(table=[[foodmart, foodmart]], intervals=[[1900-01-09T00:00:00.000Z/"""
26602,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,434,,"            new DruidChecker(""'queryType':'groupBy'"", ""'granularity':'all'"", ""'limitSpec"""
26603,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,454,,"    final String druidQueryPart1 = ""{'queryType':'groupBy','dataSource':'foodmart'"";"
26604,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,504,,"    final String sql = ""select \""product_name\"" from \""foodmart\""\n"""
26605,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,619,,"            ""gender=M"","
26606,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,643,,"    final String druidQuery = ""{'queryType':'timeseries','dataSource':'foodmart',"""
26607,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,647,,"        + ""'context':{'skipEmptyBuckets':false}}"";"
26608,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,721,,"        + ""group by \""state_province\""\n"""
26609,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,761,,"            + ""    DruidQuery(table=[[foodmart, foodmart]], intervals=[[1900-01-09T00:00:00.000Z/"""
26610,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,765,,"            new DruidChecker(""{'queryType':'groupBy','dataSource':'foodmart','granularity':'all'"""
26611,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,780,,"    final String sql = ""select sum(\""unit_sales\"") as s,\n"""
26612,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,781,,"        + "" count(\""store_sqft\"") as c\n"""
26613,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,803,,"        + ""group by floor(\""timestamp\"" to MONTH)\n"""
26614,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1045,,"            ""state_province=WA; city=Spokane; product_name=High Top Dried Mushrooms"","
26615,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1047,,"            ""state_province=WA; city=Yakima; product_name=High Top Dried Mushrooms"");"
26616,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1150,,"        + ""from \""foodmart\"" """
26617,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1156,,"        + ""'granularity':'all','dimensions':[{'type':'extraction',"""
26618,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1168,,"        + ""('1997-01-01' as timestamp)"" + "" group by """
26619,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1168,,"        + ""('1997-01-01' as timestamp)"" + "" group by """
26620,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1173,,"                "",'granularity':'all'"","
26621,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1174,,"                ""{'type':'extraction',"""
26622,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1175,,"                    + ""'dimension':'__time','outputName':'extract_year',"""
26623,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1177,,"                    + ""'timeZone':'UTC','locale':'en-US'}}""))"
26624,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1192,,"                    + ""'dimension':'__time','outputName':'extract_month',"""
26625,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1211,,"                    + ""'dimension':'__time','outputName':'extract_day',"""
26626,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1212,,"                    + ""'extractionFn':{'type':'timeFormat','format':'d',"""
26627,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1330,,"    String druidQuery = ""{'queryType':'timeseries','dataSource':'foodmart','descending':false,"""
26628,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1445,,"        .queryContains(new DruidChecker(""'queryType':'timeseries'"", ""'descending':true""))"
26629,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1750,,"    Assumptions.assumeTrue(Bug.CALCITE_4204_FIXED, ""CALCITE-4204"");"
26630,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1776,,"    String postAggString = ""'postAggregations':[{'type':'expression','name':'A',"""
26631,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,1841,,"    final String druidQuery = ""\""postAggregations\"":[{\""type\"":\""expression\"",\""name\"":\""A\"","""
26632,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,2119,,"        + ""['1900-01-09T00:00:00.000Z/2992-01-10T00:00:00.000Z'],"""
26633,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,2241,,"    String sql = ""select """
26634,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,2370,,"            new DruidChecker(""\""queryType\"":\""timeseries\"""", ""\""filter\"":{\""type\"":\""bound\"","""
26635,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,2372,,"                + ""\""ordering\"":\""numeric\""}""))"
26636,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,2387,,"            new DruidChecker(""\""queryType\"":\""groupBy\"""", ""{\""type\"":\""bound\"","""
26637,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,2472,,"        .returnsUnordered(""EXPR$0=86829"")"
26638,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,2622,,"    final String sqlQuery = ""select sum(\""store_cost\"") as a """
26639,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,2628,,"        ""{'queryType':'timeseries','dataSource':'foodmart','descending':false,'granularity':'all',"""
26640,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,2714,,"        .returnsOrdered(""T=1997-01-01 00:00:00"", ""T=1997-01-01 00:00:00"")"
26641,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,2813,,"        .returnsUnordered(""EXPR$0=7394"");"
26642,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,2831,,"                + ""(\\\""city\\\"") =="", ""Spokane""))"
26643,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,2832,,"        .returnsUnordered(""EXPR$0=0"");"
26644,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,2901,,"            new DruidChecker(""(concat(\\\""city\\\"",\\\""state_province\\\"") =="", ""SpokaneWA""))"
26645,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,2901,,"            new DruidChecker(""(concat(\\\""city\\\"",\\\""state_province\\\"") =="", ""SpokaneWA""))"
26646,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapter2IT.java,3098,,"    final String sql = ""SELECT COUNT(*) FROM "" + FOODMART_TABLE"
26647,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,141,,"    final String explain = ""PLAN="""
26648,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,142,,"        + ""EnumerableInterpreter\n"""
26649,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,144,,"        + ""intervals=[[1900-01-09T00:00:00.000Z/2992-01-10T00:00:00.000Z]], """
26650,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,166,,"        + ""from \""wikipedia\""\n"""
26651,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,178,,"        + ""'aggregations':[],"""
26652,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,198,,"        + ""  EnumerableInterpreter\n"""
26653,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,229,,"    final String sql = ""select"""
26654,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,234,,"        ""PLAN=EnumerableInterpreter\n"""
26655,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,263,,"            new DruidChecker(""'queryType':'groupBy'"", ""'limitSpec':{'type':'default',"""
26656,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,296,,"        + ""'intervals':['1900-01-09T00:00:00.000Z/2992-01-10T00:00:00.000Z']}"";"
26657,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,337,,"        + ""'granularity':'all','dimensions':[{'type':'extraction',"""
26658,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,354,,"                metaData.getColumns(null, null, ""foodmart"", null);"
26659,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,380,,"    final String druidQuery = ""{'queryType':'groupBy','dataSource':'foodmart','granularity':'all',"""
26660,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,395,,"        + ""  DruidQuery(table=[[foodmart, foodmart]], """
26661,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,399,,"        + ""from \""foodmart\""\n"""
26662,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,436,,"    final String druidQuery = ""{'queryType':'groupBy','dataSource':'foodmart',"""
26663,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,437,,"        + ""'granularity':'all','dimensions':[{'type':'default',"""
26664,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,511,,"        + ""    DruidQuery(table=[[foodmart, foodmart]], """
26665,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,530,,"    final String druidQuery = ""{'queryType':'scan','dataSource':'foodmart',"""
26666,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,531,,"        + ""'intervals':['1900-01-09T00:00:00.000Z/2992-01-10T00:00:00.000Z'],"""
26667,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,533,,"        + ""'resultFormat':'compactedList'}"";"
26668,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,609,,"        + ""  DruidQuery(table=[[foodmart, foodmart]], intervals=[[1900-01-09T00:00:00.000Z/"""
26669,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,715,,"    final String druidQueryPart1 = ""{'queryType':'groupBy','dataSource':'foodmart'"";"
26670,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,767,,"    final String sql = ""select \""product_name\"" from \""foodmart\""\n"""
26671,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,882,,"            ""gender=M"","
26672,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,906,,"    final String druidQuery = ""{'queryType':'timeseries','dataSource':'foodmart',"""
26673,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,910,,"        + ""'context':{'skipEmptyBuckets':false}}"";"
26674,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,986,,"        + ""group by \""state_province\""\n"""
26675,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1026,,"            + ""    DruidQuery(table=[[foodmart, foodmart]], intervals=[[1900-01-09T00:00:00.000Z/"""
26676,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1030,,"            new DruidChecker(""{'queryType':'groupBy','dataSource':'foodmart','granularity':'all'"""
26677,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1045,,"    final String sql = ""select sum(\""unit_sales\"") as s,\n"""
26678,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1046,,"        + "" count(\""store_sqft\"") as c\n"""
26679,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1068,,"        + ""group by floor(\""timestamp\"" to MONTH)\n"""
26680,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1313,,"            ""state_province=WA; city=Spokane; product_name=High Top Dried Mushrooms"","
26681,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1315,,"            ""state_province=WA; city=Yakima; product_name=High Top Dried Mushrooms"");"
26682,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1435,,"        + ""from \""foodmart\"" """
26683,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1453,,"        + ""('1997-01-01' as timestamp)"" + "" group by """
26684,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1453,,"        + ""('1997-01-01' as timestamp)"" + "" group by """
26685,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1458,,"                "",'granularity':'all'"","
26686,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1459,,"                ""{'type':'extraction',"""
26687,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1460,,"                    + ""'dimension':'__time','outputName':'extract_year',"""
26688,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1462,,"                    + ""'timeZone':'UTC','locale':'en-US'}}""))"
26689,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1477,,"                    + ""'dimension':'__time','outputName':'extract_month',"""
26690,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1496,,"                    + ""'dimension':'__time','outputName':'extract_day',"""
26691,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1497,,"                    + ""'extractionFn':{'type':'timeFormat','format':'d',"""
26692,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1617,,"    String druidQuery = ""{'queryType':'timeseries','dataSource':'foodmart','descending':false,"""
26693,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,1735,,"        .queryContains(new DruidChecker(""'queryType':'timeseries'"", ""'descending':true""))"
26694,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,2042,,"    Assumptions.assumeTrue(Bug.CALCITE_4204_FIXED, ""CALCITE-4204"");"
26695,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,2068,,"    String postAggString = ""'postAggregations':[{'type':'expression','name':'A',"""
26696,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,2138,,"    final String druidQuery = ""\""postAggregations\"":[{\""type\"":\""expression\"",\""name\"":\""A\"","""
26697,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,2422,,"        + ""from \""foodmart\"""";"
26698,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,2428,,"        + ""['1900-01-09T00:00:00.000Z/2992-01-10T00:00:00.000Z'],"""
26699,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,2550,,"    String sql = ""select """
26700,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,2678,,"            new DruidChecker(""\""queryType\"":\""timeseries\"""", ""\""filter\"":{\""type\"":\""bound\"","""
26701,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,2680,,"                + ""\""ordering\"":\""numeric\""}""))"
26702,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,2692,,"        + ""    DruidQuery(table=[[foodmart, foodmart]], intervals=[[1900-01-09T00:00:00"""
26703,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,2699,,"            new DruidChecker(""\""queryType\"":\""groupBy\"""", ""{\""type\"":\""bound\"","""
26704,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,2824,,"        .returnsUnordered(""EXPR$0=86829"")"
26705,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,3013,,"        .returnsUnordered(""EXPR$0=0"");"
26706,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,3100,,"    final String sqlQuery = ""select sum(\""store_cost\"") as a """
26707,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,3107,,"        ""{'queryType':'timeseries','dataSource':'foodmart','descending':false,'granularity':'all',"""
26708,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,3240,,"        .with(CalciteConnectionProperty.TIME_ZONE, ""Asia/Kolkata"")"
26709,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,3367,,"        .returnsUnordered(""EXPR$0=7394"");"
26710,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,3385,,"                + ""(\\\""city\\\"") =="", ""Spokane""))"
26711,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,3442,,"            + ""groups=[{}], aggs=[[COUNT()]])"")"
26712,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,3458,,"            new DruidChecker(""(concat(\\\""city\\\"",\\\""state_province\\\"") =="", ""SpokaneWA""))"
26713,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,3458,,"            new DruidChecker(""(concat(\\\""city\\\"",\\\""state_province\\\"") =="", ""SpokaneWA""))"
26714,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,3491,,"            new DruidChecker(""\""filter\"":{\""type\"":\""expression\"",\""expression\"":\"""""
26715,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,3561,,"    final String filterTimezoneName = ""America/Los_Angeles"";"
26716,./TargetProjects/calcite/druid/src/test/java/org/apache/calcite/test/DruidAdapterIT.java,3728,,"    final String sql = ""SELECT COUNT(*) FROM "" + FOODMART_TABLE"
26717,./TargetProjects/calcite/elasticsearch/src/main/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchJson.java,68,,"    Objects.requireNonNull(aggregations, ""aggregations"");"
26718,./TargetProjects/calcite/elasticsearch/src/main/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchJson.java,225,,"    Result(@JsonProperty(""hits"") SearchHits hits,"
26719,./TargetProjects/calcite/elasticsearch/src/main/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchJson.java,320,,"        value = node.get(""value"").numberValue();"
26720,./TargetProjects/calcite/elasticsearch/src/main/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchSearchResult.java,46,,"  ElasticsearchSearchResult(@JsonProperty(""hits"") SearchHits hits,"
26721,./TargetProjects/calcite/elasticsearch/src/main/java/org/apache/calcite/adapter/elasticsearch/PredicateAnalyzer.java,675,,"          + ""cannot be applied to a compound expression"");"
26722,./TargetProjects/calcite/elasticsearch/src/main/java/org/apache/calcite/adapter/elasticsearch/QueryBuilders.java,239,,"      Objects.requireNonNull(queryBuilder, ""queryBuilder"");"
26723,./TargetProjects/calcite/elasticsearch/src/main/java/org/apache/calcite/adapter/elasticsearch/QueryBuilders.java,301,,"      this.fieldName = Objects.requireNonNull(fieldName, ""fieldName"");"
26724,./TargetProjects/calcite/elasticsearch/src/main/java/org/apache/calcite/adapter/elasticsearch/QueryBuilders.java,302,,"      this.value = Objects.requireNonNull(value, ""value"");"
26725,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/AggregationTest.java,133,,"        .returns(""EXPR$0=2\n"");"
26726,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/ElasticSearchAdapterTest.java,193,,"    final String explain = ""PLAN=ElasticsearchToEnumerableConverter\n"""
26727,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/ElasticSearchAdapterTest.java,287,,"            String.format(Locale.ROOT, ""size:%s"", ElasticsearchTransport.DEFAULT_FETCH_SIZE)))"
26728,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/ElasticSearchAdapterTest.java,506,,"        + ""from zips\n"""
26729,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/ElasticSearchAdapterTest.java,555,,"            ElasticsearchChecker.elasticsearchChecker(""'_source':false"","
26730,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/ElasticSearchAdapterTest.java,556,,"            ""size:0"", ""'stored_fields': '_none_'"", ""track_total_hits:true""))"
26731,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/ElasticSearchAdapterTest.java,556,,"            ""size:0"", ""'stored_fields': '_none_'"", ""track_total_hits:true""))"
26732,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/ElasticSearchAdapterTest.java,635,,"            + ""group by state\n"""
26733,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchJsonTest.java,69,,"    assertEquals(""agg1"", a.asList().get(0).getName());"
26734,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchJsonTest.java,88,,"    assertThat(values.keySet(), hasItems(""min"", ""max"", ""avg""));"
26735,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchJsonTest.java,107,,"    assertThat(a.asMap().keySet(), hasItem(""groupby""));"
26736,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchJsonTest.java,152,,"    assertThat(a.asMap().keySet(), hasItem(""col1""));"
26737,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchJsonTest.java,159,,"    assertThat(m.buckets().get(0).getAggregations().asMap().keySet(), hasItem(""col2""));"
26738,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/MatchTest.java,91,,"    final Map<String, String> mapping = ImmutableMap.of(""city"", ""text"", ""state"","
26739,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/MatchTest.java,124,,"        root.add(""elastic"", new ElasticsearchSchema(NODE.restClient(), NODE.mapper(), ZIPS));"
26740,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/Projection2Test.java,86,,"                +  "" from \""elastic\"".\""%s\"""", NAME);"
26741,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/ProjectionTest.java,56,,"    final Map<String, String> mappings = ImmutableMap.of(""A"", ""keyword"","
26742,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/QueryBuildersTest.java,50,,"        toJson(QueryBuilders.termQuery(""foo"", ""bar"")));"
26743,./TargetProjects/calcite/elasticsearch/src/test/java/org/apache/calcite/adapter/elasticsearch/QueryBuildersTest.java,50,,"        toJson(QueryBuilders.termQuery(""foo"", ""bar"")));"
26744,./TargetProjects/calcite/example/csv/src/test/java/org/apache/calcite/test/CsvTest.java,130,,"    return Stream.of(""text"", ""dot"");"
26745,./TargetProjects/calcite/example/csv/src/test/java/org/apache/calcite/test/CsvTest.java,130,,"    return Stream.of(""text"", ""dot"");"
26746,./TargetProjects/calcite/example/csv/src/test/java/org/apache/calcite/test/CsvTest.java,158,,"    info.put(""model"","
26747,./TargetProjects/calcite/example/csv/src/test/java/org/apache/calcite/test/CsvTest.java,175,,"        DriverManager.getConnection(""jdbc:calcite:"", info);"
26748,./TargetProjects/calcite/example/csv/src/test/java/org/apache/calcite/test/CsvTest.java,192,,"    sql(""smart"", ""select name from EMPS"").ok();"
26749,./TargetProjects/calcite/example/csv/src/test/java/org/apache/calcite/test/CsvTest.java,206,,"    sql(""bug"", sql).checking(resultSet -> {"
26750,./TargetProjects/calcite/example/csv/src/test/java/org/apache/calcite/test/CsvTest.java,260,,"          + ""}\n"";"
26751,./TargetProjects/calcite/example/csv/src/test/java/org/apache/calcite/test/CsvTest.java,340,,"    sql(""filterable-model"", ""select name from EMPS"").ok();"
26752,./TargetProjects/calcite/example/csv/src/test/java/org/apache/calcite/test/CsvTest.java,587,,"        .returns(""NAME=Alice"").ok();"
26753,./TargetProjects/calcite/example/csv/src/test/java/org/apache/calcite/test/CsvTest.java,641,,"      assertEquals(java.sql.Date.valueOf(""1996-08-03""),"
26754,./TargetProjects/calcite/example/csv/src/test/java/org/apache/calcite/test/CsvTest.java,652,,"      assertEquals(java.sql.Timestamp.valueOf(""1996-08-03 00:01:02""),"
26755,./TargetProjects/calcite/example/function/src/test/java/org/apache/calcite/test/ExampleFunctionTest.java,53,,"        + ""+--+--+--+--+--+\n"""
26756,./TargetProjects/calcite/file/src/test/java/org/apache/calcite/adapter/file/FileAdapterTest.java,63,,"    return Stream.of(""text"", ""dot"");"
26757,./TargetProjects/calcite/file/src/test/java/org/apache/calcite/adapter/file/FileAdapterTest.java,63,,"    return Stream.of(""text"", ""dot"");"
26758,./TargetProjects/calcite/file/src/test/java/org/apache/calcite/adapter/file/FileAdapterTest.java,110,,"        .returns(""DEPTNO=10; NAME=Sales"","
26759,./TargetProjects/calcite/file/src/test/java/org/apache/calcite/adapter/file/FileAdapterTest.java,119,,"    sql(""sales-csv"", sql)"
26760,./TargetProjects/calcite/file/src/test/java/org/apache/calcite/adapter/file/FileAdapterTest.java,174,,"    final String sql = ""select count(*) as c,\n"""
26761,./TargetProjects/calcite/file/src/test/java/org/apache/calcite/adapter/file/FileAdapterTest.java,207,,"    sql(""sales-json"", sql)"
26762,./TargetProjects/calcite/file/src/test/java/org/apache/calcite/adapter/file/FileAdapterTest.java,270,,"    info.put(""model"","
26763,./TargetProjects/calcite/file/src/test/java/org/apache/calcite/adapter/file/FileAdapterTest.java,287,,"        DriverManager.getConnection(""jdbc:calcite:"", info);"
26764,./TargetProjects/calcite/file/src/test/java/org/apache/calcite/adapter/file/FileAdapterTest.java,304,,"    sql(""smart"", ""select name from EMPS"").ok();"
26765,./TargetProjects/calcite/file/src/test/java/org/apache/calcite/adapter/file/FileAdapterTest.java,318,,"    sql(""bug"", sql).checking(resultSet -> {"
26766,./TargetProjects/calcite/file/src/test/java/org/apache/calcite/adapter/file/FileAdapterTest.java,445,,"    sql(""filterable-model"", ""select name from EMPS"").ok();"
26767,./TargetProjects/calcite/file/src/test/java/org/apache/calcite/adapter/file/FileAdapterTest.java,596,,"        .returns(""NAME=Alice"").ok();"
26768,./TargetProjects/calcite/file/src/test/java/org/apache/calcite/adapter/file/FileAdapterTest.java,650,,"      assertEquals(Date.valueOf(""1996-08-03""), resultSet.getDate(1));"
26769,./TargetProjects/calcite/file/src/test/java/org/apache/calcite/adapter/file/FileAdapterTest.java,658,,"      assertEquals(Timestamp.valueOf(""1996-08-03 00:01:02""),"
26770,./TargetProjects/calcite/file/src/test/java/org/apache/calcite/adapter/file/FileReaderTest.java,134,,"    final Source source = resource(""tableOK.html"");"
26771,./TargetProjects/calcite/geode/src/main/java/org/apache/calcite/adapter/geode/rel/GeodeTable.java,135,,"        selectBuilder.add(groupByField + "" AS "" + groupByField);"
26772,./TargetProjects/calcite/geode/src/main/java/org/apache/calcite/adapter/geode/simple/GeodeSimpleSchema.java,37,,"  @SuppressWarnings(""unused"")"
26773,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeAllDataTypesTest.java,108,,"        .query(""SELECT booleanValue as booleanValue """
26774,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeAllDataTypesTest.java,112,,"            GeodeAssertions.query(""SELECT booleanValue AS booleanValue FROM /allDataTypesRegion """
26775,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeAllDataTypesTest.java,162,,"        .query(""SELECT dateValue\n"""
26776,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeAllDataTypesTest.java,163,,"            + ""FROM geode.allDataTypesRegion\n"""
26777,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeAllDataTypesTest.java,167,,"            GeodeAssertions.query(""SELECT dateValue AS dateValue """
26778,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeAllDataTypesTest.java,168,,"                + ""FROM /allDataTypesRegion """
26779,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeAllDataTypesTest.java,208,,"        .query(""SELECT timeValue\n"""
26780,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeAllDataTypesTest.java,213,,"            GeodeAssertions.query(""SELECT timeValue AS timeValue """
26781,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeAllDataTypesTest.java,253,,"        .query(""SELECT timestampValue\n"""
26782,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeAllDataTypesTest.java,258,,"            GeodeAssertions.query(""SELECT timestampValue AS timestampValue """
26783,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeBookstoreTest.java,82,,"        .explainContains(""PLAN=GeodeToEnumerableConverter\n"""
26784,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeBookstoreTest.java,84,,"            + ""    GeodeTableScan(table=[[geode, BookMaster]])"")"
26785,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeBookstoreTest.java,105,,"    String expectedQuery = ""SELECT author AS author FROM /BookMaster """
26786,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeBookstoreTest.java,117,,"            + ""      GeodeTableScan(table=[[geode, BookMaster]])\n"")"
26787,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeBookstoreTest.java,182,,"        .returns(""yearPublished=1971\n"""
26788,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeBookstoreTest.java,183,,"            + ""yearPublished=2011\n"""
26789,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeBookstoreTest.java,279,,"            + ""    GeodeTableScan(table=[[geode, BookMaster]])\n"");"
26790,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeBookstoreTest.java,367,,"            + ""      GeodeTableScan(table=[[geode, BookCustomer]])\n"");"
26791,./TargetProjects/calcite/geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeZipsTest.java,103,,"        .explainContains(""PLAN=GeodeToEnumerableConverter\n"""
26792,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,71,,"        .explainContains(""PLAN=InnodbToEnumerableConverter\n"""
26793,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,89,,"            + ""  InnodbProject(EMPNO=[$0], ENAME=[$1])\n"""
26794,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,90,,"            + ""    InnodbTableScan(table=[[test, EMP]])\n"")"
26795,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,93,,"            + ""EMPNO=7521; ENAME=WARD\n"""
26796,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,95,,"            + ""EMPNO=7654; ENAME=MARTIN\n"""
26797,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,96,,"            + ""EMPNO=7698; ENAME=BLAKE\n"""
26798,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,97,,"            + ""EMPNO=7782; ENAME=CLARK\n"""
26799,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,98,,"            + ""EMPNO=7788; ENAME=SCOTT\n"""
26800,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,99,,"            + ""EMPNO=7839; ENAME=KING\n"""
26801,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,100,,"            + ""EMPNO=7844; ENAME=TURNER\n"""
26802,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,101,,"            + ""EMPNO=7876; ENAME=ADAMS\n"""
26803,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,102,,"            + ""EMPNO=7900; ENAME=JAMES\n"""
26804,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,103,,"            + ""EMPNO=7902; ENAME=FORD\n"""
26805,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,104,,"            + ""EMPNO=7934; ENAME=MILLER\n"");"
26806,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,128,,"            + ""      InnodbTableScan(table=[[test, EMP]])\n"")"
26807,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,150,,"              + empno + "")])\n"""
26808,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,176,,"            + ""UPSERT_TIME="" + expectedLocalTime(""2018-04-09 09:00:00"") + ""\n"");"
26809,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,288,,"            + ""    InnodbFilter(condition=[(PK_RANGE_QUERY, index=PRIMARY_KEY, """
26810,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,381,,"            + ""        InnodbTableScan(table=[[test, EMP]])\n"")"
26811,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,453,,"        .returns(""ENAME=BLAKE; UPSERT_TIME="" + expectedLocalTime(""2018-06-01 14:45:00"") + ""\n"");"
26812,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,478,,"            + ""  InnodbToEnumerableConverter\n"""
26813,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,516,,"            + ""  InnodbProject(DEPTNO=[$8], ENAME=[$1], HIREDATE=[$5])\n"""
26814,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,616,,"            + ""  InnodbProject(EMPNO=[$0], ENAME=[$1], UPSERT_TIME=[$12])\n"""
26815,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,626,,"        + expectedLocalTime(""2018-09-02 12:12:56"") + ""'"")"
26816,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,648,,"            + expectedLocalTime(""2017-08-18 23:11:06"") + ""\n"""
26817,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,742,,"            + ""  InnodbProject(EMPNO=[$0], ENAME=[$1], AGE=[$3])\n"""
26818,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,811,,"        .explainContains(""InnodbToEnumerableConverter\n"""
26819,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,871,,"            + ""DEPTNO>=20, DEPTNO<=20)])\n"""
26820,./TargetProjects/calcite/innodb/src/test/java/org/apache/calcite/adapter/innodb/InnodbAdapterTest.java,1006,,"            + ""    InnodbToEnumerableConverter\n"""
26821,./TargetProjects/calcite/linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java,569,,"        @SuppressWarnings(""argument.type.incompatible"")"
26822,./TargetProjects/calcite/linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java,2499,,"  @SuppressWarnings(""unchecked"")"
26823,./TargetProjects/calcite/linq4j/src/main/java/org/apache/calcite/linq4j/function/Functions.java,88,,"  @SuppressWarnings(""unchecked"")"
26824,./TargetProjects/calcite/linq4j/src/main/java/org/apache/calcite/linq4j/tree/ConstantExpression.java,174,,"      list(writer, Primitive.asList(value), ""[] {\n"", "",\n"", ""}"");"
26825,./TargetProjects/calcite/linq4j/src/main/java/org/apache/calcite/linq4j/tree/Primitive.java,71,,"  @SuppressWarnings(""ImmutableEnumChecker"")"
26826,./TargetProjects/calcite/linq4j/src/main/java/org/apache/calcite/linq4j/tree/Primitive.java,260,,"  @API(since = ""1.27"", status = API.Status.EXPERIMENTAL)"
26827,./TargetProjects/calcite/linq4j/src/main/java/org/apache/calcite/linq4j/tree/Primitive.java,588,,"      throw new AssertionError(""unexpected "" + this);"
26828,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/BlockBuilderTest.java,58,,"        ""{\n"""
26829,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/BlockBuilderTest.java,63,,"            + ""}\n"","
26830,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/DeterministicTest.java,112,,"        Expressions.call(getMethod(Integer.class, ""valueOf"", int.class),"
26831,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/DeterministicTest.java,136,,"                    ""test"","
26832,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/DeterministicTest.java,139,,"        equalTo(""{\n"""
26833,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/DeterministicTest.java,140,,"            + ""  return new Runnable(){\n"""
26834,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/DeterministicTest.java,141,,"            + ""      int test() {\n"""
26835,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/DeterministicTest.java,143,,"            + ""      }\n"""
26836,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/DeterministicTest.java,145,,"            + ""      static final int $L4J$C$1_2 = 1 + 2;\n"""
26837,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/DeterministicTest.java,146,,"            + ""    };\n"""
26838,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/DeterministicTest.java,147,,"            + ""}\n""));"
26839,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/DeterministicTest.java,291,,"            + ""      static final java.math.BigInteger """
26840,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java,76,,"        Expressions.parameter(Integer.TYPE, ""arg"");"
26841,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java,89,,"        ""new org.apache.calcite.linq4j.function.Function1() {\n"""
26842,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java,92,,"            + ""  }\n"""
26843,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java,94,,"            + ""    return apply(\n"""
26844,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java,97,,"            + ""  public Object apply(Object arg) {\n"""
26845,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java,101,,"            + ""}\n"","
26846,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java,472,,"        ""true"","
26847,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java,635,,"                ""length"")));"
26848,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java,671,,"                Expressions.constant(""foo""),"
26849,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java,688,,"                Expressions.constant(new String[] {""foo"", ""bar""}),"
26850,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java,874,,"            + ""  new org.apache.calcite.linq4j.test.Linq4jTest.Employee(\n"""
26851,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java,974,,"        ""{\n"""
26852,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java,980,,"            + ""    }\n"""
26853,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/InlinerTest.java,89,,"        ""{\n"""
26854,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/InlinerTest.java,92,,"            + ""}\n"","
26855,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/JoinPreserveOrderTest.java,157,,"  @MethodSource(""data"")"
26856,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/JoinPreserveOrderTest.java,164,,"  @MethodSource(""noNullsFirstOnLeft"")"
26857,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,179,,"    Predicate1<Department> deptoNameSales = v1 -> v1.name != null && v1.name.equals(""Sales"");"
26858,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,244,,"    assertTrue(map.get(110).name.equals(""Bill""));"
26859,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,249,,"        Linq4j.asEnumerable(Arrays.asList(""foo"", ""bar"", ""far""))"
26860,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,249,,"        Linq4j.asEnumerable(Arrays.asList(""foo"", ""bar"", ""far""))"
26861,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,249,,"        Linq4j.asEnumerable(Arrays.asList(""foo"", ""bar"", ""far""))"
26862,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,263,,"    assertTrue(map.get(""FOO"").equals(""foo""));"
26863,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,326,,"        assertTrue(grouping.contains(""Fred""));"
26864,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,327,,"        assertTrue(grouping.contains(""Eric""));"
26865,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,328,,"        assertTrue(grouping.contains(""Janet""));"
26866,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,451,,"    String[] people = {""Brill"", ""Smith"", ""Simpsom""};"
26867,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,451,,"    String[] people = {""Brill"", ""Smith"", ""Simpsom""};"
26868,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,452,,"    String[] peopleWithoutCharS = {""Brill"", ""Andrew"", ""Alice""};"
26869,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,452,,"    String[] peopleWithoutCharS = {""Brill"", ""Andrew"", ""Alice""};"
26870,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,460,,"      fail(""expected exception, but got"" + s);"
26871,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,499,,"    String[] people = {""Brill"", ""Smith"", ""Simpson""};"
26872,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,693,,"        ""[10: Fred+Eric+Janet, 30: Bill]"","
26873,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,850,,"        new Employee(150, ""Theodore"", 10),"
26874,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,1013,,"                DEPT_DEPTNO_SELECTOR, (v1, v2) -> v1.name + "" works in "" + v2.name)"
26875,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,1018,,"        ""[Bill works in Marketing, """
26876,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,1019,,"            + ""Eric works in Sales, """
26877,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,1020,,"            + ""Fred works in Sales, """
26878,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,1463,,"            + "" Employee(name: Eric, deptno:10),"""
26879,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,1553,,"    final List<String> experience = Arrays.asList(""jimi"", ""mitch"", ""noel"");"
26880,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,1553,,"    final List<String> experience = Arrays.asList(""jimi"", ""mitch"", ""noel"");"
26881,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,1553,,"    final List<String> experience = Arrays.asList(""jimi"", ""mitch"", ""noel"");"
26882,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,1702,,"        Linq4j.asEnumerable(Arrays.asList(""jimi"", ""mitch"", ""ming""));"
26883,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,1914,,"                String.format(Locale.ROOT, ""%s: %s"", group.getKey(),"
26884,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java,1937,,"    assertThat(s, is(""[10: Fred+Bill+Eric+Janet]""));"
26885,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/OptimizerTest.java,52,,"    assertEquals(""{\n  return true;\n}\n"","
26886,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/OptimizerTest.java,58,,"    assertEquals(""{\n  return 1;\n}\n"","
26887,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/OptimizerTest.java,73,,"                Expressions.parameter(boolean.class, ""bool""), ONE, ONE)));"
26888,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/OptimizerTest.java,164,,"                    Expressions.parameter(Integer.class, ""inp0_"")),"
26889,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/OptimizerTest.java,251,,"    assertEquals(""{\n  return false;\n}\n"","
26890,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/OptimizerTest.java,277,,"    assertEquals(""{\n  return x;\n}\n"","
26891,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/OptimizerTest.java,512,,"        ""{\n"""
26892,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/OptimizerTest.java,513,,"            + ""  if (bool) {\n"""
26893,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/OptimizerTest.java,514,,"            + ""    return 1;\n"""
26894,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/OptimizerTest.java,515,,"            + ""  } else {\n"""
26895,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/OptimizerTest.java,517,,"            + ""  }\n"""
26896,./TargetProjects/calcite/linq4j/src/test/java/org/apache/calcite/linq4j/test/OptimizerTest.java,518,,"            + ""}\n"","
26897,./TargetProjects/calcite/mongodb/src/main/java/org/apache/calcite/adapter/mongodb/MongoFilter.java,158,,"      if (key.equals(""$lt"") || key.equals(""$lte"")) {"
26898,./TargetProjects/calcite/mongodb/src/test/java/org/apache/calcite/adapter/mongodb/MongoAdapterTest.java,166,,"        .explainContains(""PLAN=MongoToEnumerableConverter\n"""
26899,./TargetProjects/calcite/mongodb/src/test/java/org/apache/calcite/adapter/mongodb/MongoAdapterTest.java,226,,"                ""{\n"""
26900,./TargetProjects/calcite/mongodb/src/test/java/org/apache/calcite/adapter/mongodb/MongoAdapterTest.java,232,,"                    + ""  }\n"""
26901,./TargetProjects/calcite/mongodb/src/test/java/org/apache/calcite/adapter/mongodb/MongoAdapterTest.java,317,,"                    + ""  \""$match\"": {\n"""
26902,./TargetProjects/calcite/mongodb/src/test/java/org/apache/calcite/adapter/mongodb/MongoAdapterTest.java,343,,"                    + ""      {\n"""
26903,./TargetProjects/calcite/mongodb/src/test/java/org/apache/calcite/adapter/mongodb/MongoAdapterTest.java,345,,"                    + ""      },\n"""
26904,./TargetProjects/calcite/mongodb/src/test/java/org/apache/calcite/adapter/mongodb/MongoAdapterTest.java,410,,"                ""{$project: {STATE: '$state'}}"","
26905,./TargetProjects/calcite/mongodb/src/test/java/org/apache/calcite/adapter/mongodb/MongoAdapterTest.java,428,,"                ""{$sort: {STATE: 1}}""));"
26906,./TargetProjects/calcite/mongodb/src/test/java/org/apache/calcite/adapter/mongodb/MongoAdapterTest.java,455,,"                ""{$project: {STATE: '$state', POP: '$pop'}}"","
26907,./TargetProjects/calcite/pig/src/test/java/org/apache/calcite/test/PigAdapterTest.java,48,,"        .explainContains(""PigToEnumerableConverter\n"""
26908,./TargetProjects/calcite/pig/src/test/java/org/apache/calcite/test/PigAdapterTest.java,50,,"            + ""    PigTableScan(table=[[PIG, t]])"")"
26909,./TargetProjects/calcite/pig/src/test/java/org/apache/calcite/test/PigAdapterTest.java,53,,"            pigScriptChecker(""t = LOAD '"""
26910,./TargetProjects/calcite/pig/src/test/java/org/apache/calcite/test/PigAdapterTest.java,54,,"                + getFullPathForTestDataFile(""data.txt"")"
26911,./TargetProjects/calcite/pig/src/test/java/org/apache/calcite/test/PigAdapterTest.java,55,,"                + ""' USING PigStorage() AS (tc0:chararray, tc1:chararray);\n"""
26912,./TargetProjects/calcite/pig/src/test/java/org/apache/calcite/test/PigAdapterTest.java,87,,"                + ""t = FOREACH t {\n"""
26913,./TargetProjects/calcite/pig/src/test/java/org/apache/calcite/test/PigRelBuilderStyleTest.java,80,,"        .filter(builder.call(GREATER_THAN, builder.field(""tc0""), builder.literal(""abc""))).build();"
26914,./TargetProjects/calcite/pig/src/test/java/org/apache/calcite/test/PigRelBuilderStyleTest.java,83,,"        ""t = LOAD 'target/data.txt"""
26915,./TargetProjects/calcite/pig/src/test/java/org/apache/calcite/test/PigRelBuilderStyleTest.java,84,,"            + ""' USING PigStorage() AS (tc0:chararray, tc1:chararray);\n"""
26916,./TargetProjects/calcite/pig/src/test/java/org/apache/calcite/test/PigRelBuilderStyleTest.java,89,,"  @Test @Disabled(""CALCITE-1751"")"
26917,./TargetProjects/calcite/pig/src/test/java/org/apache/calcite/test/PigRelBuilderStyleTest.java,96,,"                builder.call(EQUALS, builder.field(""tc1""), builder.literal(""3""))))"
26918,./TargetProjects/calcite/pig/src/test/java/org/apache/calcite/test/PigRelBuilderStyleTest.java,118,,"            + ""t = FOREACH t {\n"""
26919,./TargetProjects/calcite/piglet/src/main/java/org/apache/calcite/piglet/Ast.java,64,,"          + "", source: "" + foreach.source.value + "", expList: "")"
26920,./TargetProjects/calcite/piglet/src/main/java/org/apache/calcite/piglet/PigRelOpVisitor.java,614,,"    throw new FrontendException(""Not implemented"", 10000);"
26921,./TargetProjects/calcite/piglet/src/main/java/org/apache/calcite/piglet/PigRelSqlUdfs.java,102,,"            typeFactory -> getRelDataTypes(operands), i -> ""arg"" + i,"
26922,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,182,,"        + ""(10,ACCOUNTING,NEW YORK)\n"""
26923,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,183,,"        + ""(20,RESEARCH,DALLAS)\n"""
26924,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,184,,"        + ""(30,SALES,CHICAGO)\n"""
26925,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,185,,"        + ""(40,OPERATIONS,BOSTON)\n"";"
26926,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,211,,"        + ""A = LOAD 'scott.DEPT' as (DEPTNO:int, DNAME:chararray, LOC:CHARARRAY);\n"""
26927,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,215,,"        + ""  LogicalTableScan(table=[[scott, DEPT]])\n"";"
26928,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,217,,"    final String sql = ""SELECT *\n"""
26929,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,218,,"        + ""FROM scott.DEPT\n"""
26930,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,243,,"        + ""    JOB:chararray, MGR:int, HIREDATE:datetime, SAL:bigdecimal,\n"""
26931,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,244,,"        + ""    COMM:bigdecimal, DEPTNO:int);\n"""
26932,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,249,,"        + ""LogicalUnion(all=[true])\n"""
26933,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,251,,"        + ""    LogicalTableScan(table=[[scott, EMP]])\n"""
26934,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,267,,"        + ""FROM scott.EMP\n"""
26935,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,269,,"        + ""UNION ALL\n"""
26936,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,327,,"        + ""A = LOAD 'scott.EMP' as (EMPNO:int, ENAME:chararray,\n"""
26937,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,337,,"        + ""(40,7698)\n"""
26938,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,423,,"        + ""B = GROUP A BY DEPTNO;\n"""
26939,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,545,,"        + ""      LogicalTableScan(table=[[scott, DEPT]])\n"";"
26940,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,550,,"        + ""    LogicalTableScan(table=[[scott, DEPT]])\n"";"
26941,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,587,,"        + ""      LogicalTableScan(table=[[scott, EMP]])\n"""
26942,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,679,,"        + ""RESEARCH,DALLAS)\n"""
26943,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,681,,"        + ""SALES,CHICAGO)\n"""
26944,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,701,,"        + ""CHICAGO)\n"""
26945,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,734,,"        + ""    FROM scott.DEPT\n"""
26946,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,764,,"        + ""    LOC:CHARARRAY);\n"""
26947,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,792,,"        + ""A = LOAD 'scott.DEPT' as (DEPTNO:int, DNAME:chararray,\n"""
26948,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,895,,"        + ""GROUP BY DEPTNO"";"
26949,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,927,,"        + ""        LogicalTableScan(table=[[scott, EMP]])\n"";"
26950,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,1323,,"        + ""B = GROUP A BY (DEPTNO, MGR, HIREDATE);\n"""
26951,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,1325,,"        + ""D = ORDER C BY salSum;\n"";"
26952,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,1327,,"        + ""LogicalSort(sort0=[$2], dir0=[ASC])\n"""
26953,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,1330,,"        + ""    LogicalProject(group=[ROW($0, $1, $2)], A=[$3])\n"""
26954,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,1331,,"        + ""      LogicalAggregate(group=[{0, 1, 2}], A=[COLLECT($3)])\n"""
26955,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,1332,,"        + ""        LogicalProject(DEPTNO=[$7], MGR=[$3], HIREDATE=[$4], """
26956,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,1333,,"        + ""$f3=[ROW($0, $1, $2, $3, $4, $5, $6, $7)])\n"""
26957,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,1334,,"        + ""          LogicalTableScan(table=[[scott, EMP]])\n"";"
26958,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,1340,,"        + ""      LogicalProject(DEPTNO=[$7], MGR=[$3], HIREDATE=[$4], SAL=[$5])\n"""
26959,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,1364,,"        + ""GROUP BY DEPTNO, MGR, HIREDATE\n"""
26960,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigRelOpTest.java,1365,,"        + ""ORDER BY CAST(SUM(SAL) AS DECIMAL(19, 0))"";"
26961,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigletTest.java,91,,"    final String s = ""A = LOAD 'DEPT';\n"""
26962,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigletTest.java,92,,"        + ""DUMP A;"";"
26963,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigletTest.java,116,,"        + ""  LogicalTableScan(table=[[scott, DEPT]])\n"";"
26964,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigletTest.java,161,,"        + ""(4,3,3),\n"""
26965,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigletTest.java,166,,"        + ""DUMP X;\n"";"
26966,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigletTest.java,193,,"        + ""(8,4,3)\n"";"
26967,./TargetProjects/calcite/piglet/src/test/java/org/apache/calcite/test/PigletTest.java,200,,"        + ""(8,3,4)\n"""
26968,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpcds/TpcdsTest.java,101,,"            + "" CC_COUNTY=Williamson County; CC_STATE=TN; CC_ZIP=31904     ;"""
26969,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,68,,"      ""select\n"""
26970,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,79,,"          + ""from\n"""
26971,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,83,,"          + ""group by\n"""
26972,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,87,,"          + ""order by\n"""
26973,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,94,,"          + ""  s.s_name,\n"""
26974,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,95,,"          + ""  n.n_name,\n"""
26975,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,103,,"          + ""  tpch.supplier s,\n"""
26976,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,107,,"          + ""where\n"""
26977,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,112,,"          + ""  and s.s_nationkey = n.n_nationkey\n"""
26978,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,117,,"          + ""    select\n"""
26979,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,120,,"          + ""    from\n"""
26980,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,122,,"          + ""      tpch.supplier s,\n"""
26981,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,125,,"          + ""    where\n"""
26982,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,131,,"          + ""  )\n"""
26983,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,144,,"          + ""  o.o_orderdate,\n"""
26984,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,148,,"          + ""  tpch.customer c,\n"""
26985,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,149,,"          + ""  tpch.orders o,\n"""
26986,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,201,,"          + ""  tpch.lineitem l,\n"""
26987,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,241,,"          + ""  (\n"""
26988,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,263,,"          + ""      )\n"""
26989,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,280,,"          + ""    else 0\n"""
26990,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,350,,"          + ""  c.c_custkey,\n"""
26991,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,351,,"          + ""  c.c_name,\n"""
26992,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,362,,"          + ""  tpch.nation n\n"""
26993,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,473,,"          + ""  tpch.part p\n"""
26994,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,649,,"          + ""        select\n"""
26995,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,651,,"          + ""        from\n"""
26996,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,653,,"          + ""        where\n"""
26997,./TargetProjects/calcite/plus/src/test/java/org/apache/calcite/adapter/tpch/TpchTest.java,754,,"  @Disabled(""it's wasting time"")"
26998,./TargetProjects/calcite/redis/src/test/java/org/apache/calcite/adapter/redis/RedisDataCaseBase.java,64,,"      jedis.set(""csv_01"", ""10:Sales"");"
26999,./TargetProjects/calcite/redis/src/test/java/org/apache/calcite/adapter/redis/RedisDataCaseBase.java,69,,"      jedis.lpush(""csv_02"", ""10:Sales"", ""20:Sales"");"
