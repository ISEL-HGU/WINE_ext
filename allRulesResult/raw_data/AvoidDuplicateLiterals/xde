82000,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/HiveTableSourceITCase.java,181,,"                .commit(""pt=1"");"
82001,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/HiveTableSourceITCase.java,212,,"        String[] explain = src.explain().split(""==.*==\n"");"
82002,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/HiveTableSourceITCase.java,240,,"            HiveTestUtils.createTextTableInserter(hiveCatalog, ""db1"", ""part"")"
82003,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/HiveTableSourceITCase.java,240,,"            HiveTestUtils.createTextTableInserter(hiveCatalog, ""db1"", ""part"")"
82004,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/HiveTableSourceITCase.java,536,,"        tEnv.registerCatalog(""hive"", hiveCatalog);"
82005,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/HiveTableSourceITCase.java,602,,"                        + ""'streaming-source.enable'='true',"""
82006,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/HiveTableSourceITCase.java,603,,"                        + ""'streaming-source.monitor-interval'='1s',"""
82007,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/HiveTableSourceITCase.java,628,,"                    .addRow(new Object[] {i, ""new_add"", 11 + i})"
82008,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/HiveTableSourceITCase.java,629,,"                    .addRow(new Object[] {i, ""new_add_1"", 11 + i})"
82009,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/PartitionMonitorTest.java,58,,"        commitPartitionWithGivenCreateTime(Arrays.asList(""p1=A1"", ""p2=B1""), 1);"
82010,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java,79,,"        tableEnv.executeSql(""create database db1"");"
82011,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java,81,,"            tableEnv.useDatabase(""db1"");"
82012,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java,114,,"            tableEnv.executeSql(""drop database db1 cascade"");"
82013,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java,124,,"        HiveTestUtils.createTextTableInserter(hiveCatalog, ""db1"", ""src"")"
82014,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java,133,,"        Table hiveTable = hmsClient.getTable(""db1"", ""part"");"
82015,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogGenericMetadataTest.java,103,,"            hiveTable.getParameters().put(""flink.generic.table.schema.0.name"", ""ti"");"
82016,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogGenericMetadataTest.java,104,,"            hiveTable.getParameters().put(""flink.generic.table.schema.0.data-type"", ""TINYINT"");"
82017,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogGenericMetadataTest.java,105,,"            hiveTable.getParameters().put(""flink.generic.table.schema.1.name"", ""si"");"
82018,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogGenericMetadataTest.java,106,,"            hiveTable.getParameters().put(""flink.generic.table.schema.1.data-type"", ""SMALLINT"");"
82019,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogGenericMetadataTest.java,107,,"            hiveTable.getParameters().put(""flink.generic.table.schema.2.name"", ""i"");"
82020,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogGenericMetadataTest.java,108,,"            hiveTable.getParameters().put(""flink.generic.table.schema.2.data-type"", ""INT"");"
82021,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogGenericMetadataTest.java,109,,"            hiveTable.getParameters().put(""flink.generic.table.schema.3.name"", ""bi"");"
82022,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogGenericMetadataTest.java,110,,"            hiveTable.getParameters().put(""flink.generic.table.schema.3.data-type"", ""BIGINT"");"
82023,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogGenericMetadataTest.java,206,,"            hiveTable.getParameters().put(""flink.generic.table.schema.2.data-type"", ""TIMESTAMP(3)"");"
82024,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogITCase.java,114,,"        tableEnv.registerCatalog(""myhive"", hiveCatalog);"
82025,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogTest.java,74,,"                        new ObjectPath(""test"", ""test""),"
82026,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/module/hive/HiveModuleTest.java,135,,"        tEnv.unloadModule(""core"");"
82027,./TargetProjects/flink/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/module/hive/HiveModuleTest.java,136,,"        tEnv.loadModule(""hive"", new HiveModule());"
82028,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/dialect/JdbcDialect.java,110,,"                        .map(f -> format(""%s = :%s"", quoteIdentifier(f), f))"
82029,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/dialect/JdbcDialect.java,111,,"                        .collect(Collectors.joining("" AND ""));"
82030,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/dialect/JdbcDialect.java,112,,"        return ""SELECT 1 FROM "" + quoteIdentifier(tableName) + "" WHERE "" + fieldExpressions;"
82031,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/internal/JdbcOutputFormat.java,183,,"            throw new RuntimeException(""Writing records to JDBC failed."", flushException);"
82032,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactory.java,121,,"        properties.add(SCHEMA + "".#."" + SCHEMA_DATA_TYPE);"
82033,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/JdbcDataTypeTest.java,53,,"                createTestItem(""derby"", ""CHAR""),"
82034,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/JdbcDataTypeTest.java,69,,"                createTestItem(""mysql"", ""CHAR""),"
82035,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/JdbcDataTypeTest.java,85,,"                createTestItem(""postgresql"", ""CHAR""),"
82036,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/JdbcTestFixture.java,47,,"    public static final String SELECT_ALL_BOOKS = ""select * from "" + INPUT_TABLE;"
82037,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/JdbcTestFixture.java,68,,"        new TestEntry(1005, (""A Teaspoon of Java""), (""Kevin Jones""), 55.55, 55),"
82038,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/JdbcTestFixture.java,242,,"            stat.executeUpdate(""DROP TABLE "" + INPUT_TABLE);"
82039,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogITCase.java,59,,"        assertEquals(""[+I[1]]"", results.toString());"
82040,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogITCase.java,66,,"                        tEnv.sqlQuery(String.format(""select * from %s"", TABLE1))"
82041,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/statement/FieldNamedPreparedStatementImplTest.java,41,,"            new String[] {""id"", ""name"", ""email"", ""ts"", ""field1"", ""field_2"", ""__field_3__""};"
82042,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/statement/FieldNamedPreparedStatementImplTest.java,41,,"            new String[] {""id"", ""name"", ""email"", ""ts"", ""field1"", ""field_2"", ""__field_3__""};"
82043,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/statement/FieldNamedPreparedStatementImplTest.java,41,,"            new String[] {""id"", ""name"", ""email"", ""ts"", ""field1"", ""field_2"", ""__field_3__""};"
82044,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/statement/FieldNamedPreparedStatementImplTest.java,41,,"            new String[] {""id"", ""name"", ""email"", ""ts"", ""field1"", ""field_2"", ""__field_3__""};"
82045,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/statement/FieldNamedPreparedStatementImplTest.java,41,,"            new String[] {""id"", ""name"", ""email"", ""ts"", ""field1"", ""field_2"", ""__field_3__""};"
82046,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/statement/FieldNamedPreparedStatementImplTest.java,49,,"                ""INSERT INTO `tbl`(`id`, `name`, `email`, `ts`, `field1`, `field_2`, `__field_3__`) """
82047,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableFactoryTest.java,57,,"                            Column.physical(""aaa"", DataTypes.INT().notNull()),"
82048,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableFactoryTest.java,58,,"                            Column.physical(""bbb"", DataTypes.STRING().notNull()),"
82049,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableFactoryTest.java,77,,"                        .setDBUrl(""jdbc:derby:memory:mydb"")"
82050,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableFactoryTest.java,78,,"                        .setTableName(""mytable"")"
82051,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableFactoryTest.java,128,,"        properties.put(""scan.partition.upper-bound"", ""100"");"
82052,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableFactoryTest.java,169,,"        properties.put(""lookup.cache.ttl"", ""10s"");"
82053,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableFactoryTest.java,278,,"            fail(""exception expected"");"
82054,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableFactoryTest.java,283,,"                                    ""Either all or none of the following options should be provided:\n"""
82055,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableSinkITCase.java,90,,"                    ""CREATE TABLE """
82056,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableSinkITCase.java,138,,"            stat.execute(""DROP TABLE "" + OUTPUT_TABLE1);"
82057,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableSinkITCase.java,195,,"                        + ""  'url'='"""
82058,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableSourceITCase.java,70,,"                    ""CREATE TABLE """
82059,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcOutputFormatTest.java,66,,"    private static String[] fieldNames = new String[] {""id"", ""title"", ""author"", ""price"", ""qty""};"
82060,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcOutputFormatTest.java,66,,"    private static String[] fieldNames = new String[] {""id"", ""title"", ""author"", ""price"", ""qty""};"
82061,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcOutputFormatTest.java,66,,"    private static String[] fieldNames = new String[] {""id"", ""title"", ""author"", ""price"", ""qty""};"
82062,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcOutputFormatTest.java,66,,"    private static String[] fieldNames = new String[] {""id"", ""title"", ""author"", ""price"", ""qty""};"
82063,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcOutputFormatTest.java,116,,"            fail(""Expected exception is not thrown."");"
82064,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java,56,,"                    .field(""aaa"", DataTypes.INT())"
82065,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java,68,,"        properties.put(""connector.password"", ""pass"");"
82066,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java,77,,"                        .setDBUrl(""jdbc:derby:memory:mydb"")"
82067,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java,78,,"                        .setTableName(""mytable"")"
82068,./TargetProjects/flink/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java,226,,"            fail(""exception expected"");"
82069,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/main/java/org/apache/flink/streaming/connectors/kafka/KafkaTableSourceSinkFactoryBase.java,121,,"        properties.add(CONNECTOR_PROPERTIES + "".#."" + CONNECTOR_PROPERTIES_KEY);"
82070,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/main/java/org/apache/flink/streaming/connectors/kafka/internals/ClosableBlockingQueue.java,209,,"                throw new IllegalStateException(""queue is closed"");"
82071,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/main/java/org/apache/flink/streaming/connectors/kafka/internals/FlinkKafkaInternalProducer.java,217,,"            Object transactionManager = getField(kafkaProducer, ""transactionManager"");"
82072,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/main/java/org/apache/flink/streaming/connectors/kafka/internals/FlinkKafkaInternalProducer.java,349,,"                throw new RuntimeException(""Incompatible KafkaProducer version"", e);"
82073,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/connector/kafka/source/reader/deserializer/KafkaRecordDeserializationSchemaTest.java,57,,"        assertEquals(""world"", deserializedValue.get(""value"").get(""word"").asText());"
82074,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/connector/kafka/source/reader/deserializer/KafkaRecordDeserializationSchemaTest.java,58,,"        assertEquals(""topic#1"", deserializedValue.get(""metadata"").get(""topic"").asText());"
82075,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkFixedPartitionerTest.java,47,,"        Assert.assertEquals(0, part.partition(""abc1"", null, null, null, partitions));"
82076,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumerBaseTest.java,114,,"    @SuppressWarnings(""unchecked"")"
82077,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumerBaseTest.java,269,,"                Arrays.asList(new String[] {""kafka_topic_1"", ""kafka_topic_2""}),"
82078,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumerBaseTest.java,269,,"                Arrays.asList(new String[] {""kafka_topic_1"", ""kafka_topic_2""}),"
82079,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumerBaseTest.java,393,,"        state1.put(new KafkaTopicPartition(""abc"", 13), 16768L);"
82080,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumerBaseTest.java,394,,"        state1.put(new KafkaTopicPartition(""def"", 7), 987654321L);"
82081,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumerBaseTest.java,624,,"                ""partitionDiscoverer should be closed when consumer is closed"","
82082,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumerBaseTest.java,957,,"            super(new KafkaTopicsDescriptor(Arrays.asList(""foo""), null), 0, 1);"
82083,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaProducerBaseTest.java,96,,"    @SuppressWarnings(""unchecked"")"
82084,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaProducerBaseTest.java,157,,"        testHarness.processElement(new StreamRecord<>(""msg-1""));"
82085,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaProducerBaseTest.java,162,,"                .onCompletion(null, new Exception(""artificial async exception""));"
82086,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaProducerStateSerializerTest.java,72,,"                                    ""fake"", 1L, (short) 42, null),"
82087,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaProducerTest.java,45,,"                new FlinkKafkaProducer<>(""localhost:9092"", ""test-topic"", schema);"
82088,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaProducerTest.java,45,,"                new FlinkKafkaProducer<>(""localhost:9092"", ""test-topic"", schema);"
82089,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/JSONKeyValueDeserializationSchemaTest.java,36,,"        initialKey.put(""index"", 4);"
82090,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/JSONKeyValueDeserializationSchemaTest.java,40,,"        initialValue.put(""word"", ""world"");"
82091,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/JSONKeyValueDeserializationSchemaTest.java,40,,"        initialValue.put(""word"", ""world"");"
82092,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/JSONKeyValueDeserializationSchemaTest.java,47,,"        Assert.assertTrue(deserializedValue.get(""metadata"") == null);"
82093,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/JSONKeyValueDeserializationSchemaTest.java,48,,"        Assert.assertEquals(4, deserializedValue.get(""key"").get(""index"").asInt());"
82094,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/JSONKeyValueDeserializationSchemaTest.java,49,,"        Assert.assertEquals(""world"", deserializedValue.get(""value"").get(""word"").asText());"
82095,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/KafkaConsumerTestBase.java,334,,"                ""auto.offset.reset"","
82096,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/KafkaConsumerTestBase.java,497,,"            stream = env.fromSource(source, WatermarkStrategy.noWatermarks(), ""KafkaSource"");"
82097,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/KafkaConsumerTestBase.java,890,,"        producerProperties.setProperty(""retries"", ""3"");"
82098,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/KafkaTableSourceSinkFactoryTestBase.java,94,,"        KAFKA_PROPERTIES.setProperty(""group.id"", ""dummy"");"
82099,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/KafkaTableSourceSinkFactoryTestBase.java,188,,"                            if (!k.equals(""connector.properties.group.id"")) {"
82100,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/KafkaTableSourceSinkFactoryTestBase.java,258,,"        legacyPropertiesMap.remove(""connector.specific-offsets"");"
82101,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/KafkaTableSourceSinkFactoryTestBase.java,259,,"        legacyPropertiesMap.remove(""connector.properties.bootstrap.servers"");"
82102,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/KafkaTestBase.java,101,,"        LOG.info(""-------------------------------------------------------------------------"");"
82103,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/KafkaTestBase.java,271,,"                    ""org.apache.kafka.common.serialization.IntegerDeserializer"");"
82104,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/internals/AbstractFetcherWatermarksTest.java,79,,"            final String testTopic = ""test topic name"";"
82105,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/internals/AbstractPartitionDiscovererTest.java,47,,"    private static final String TEST_TOPIC = ""test-topic"";"
82106,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/internals/AbstractPartitionDiscovererTest.java,428,,"                        new KafkaTopicPartition(""test-topic2"", 0),"
82107,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/internals/ClosableBlockingQueueTest.java,112,,"                fail(""should cause an exception"");"
82108,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/internals/KafkaTopicsDescriptorTest.java,38,,"                    {""topic1"", null, Arrays.asList(""topic1"", ""topic2"", ""topic3""), true},"
82109,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/BufferedUpsertSinkFunctionTest.java,89,,"                StringData.fromString(""Tan Ah Teck""),"
82110,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/BufferedUpsertSinkFunctionTest.java,113,,"                StringData.fromString(""Kevin Jones""),"
82111,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaChangelogTableITCase.java,98,,"                                + "" name STRING,"""
82112,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaChangelogTableITCase.java,104,,"                                + "") WITH ("""
82113,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaConnectorOptionsUtilTest.java,60,,"        options.put(""key.fields"", ""address; name"");"
82114,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java,125,,"        KAFKA_SOURCE_PROPERTIES.setProperty(""group.id"", ""dummy"");"
82115,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java,174,,"                            Column.metadata(TIME, DataTypes.TIMESTAMP(3), ""timestamp"", false),"
82116,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java,228,,"                        getBasicSourceOptions(), options -> options.remove(""properties.group.id""));"
82117,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java,250,,"                            options.remove(""topic"");"
82118,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java,253,,"                                    ""scan.startup.mode"","
82119,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java,486,,"                    options.put(""format"", ""debezium-avro-confluent"");"
82120,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java,490,,"                ""N/A"");"
82121,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java,495,,"                    options.put(""value.format"", ""avro-confluent"");"
82122,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java,495,,"                    options.put(""value.format"", ""avro-confluent"");"
82123,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java,506,,"                    options.put(""key.format"", ""avro-confluent"");"
82124,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java,508,,"                    options.put(""key.fields"", NAME);"
82125,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java,565,,"        options.put(""connector"", KafkaDynamicTableFactory.IDENTIFIER);"
82126,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java,568,,"        options.put(""properties.bootstrap.servers"", ""dummy"");"
82127,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java,710,,"                        getBasicSinkOptions(), options -> options.put(""sink.partitioner"", ""abc""));"
82128,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java,800,,"                                                ""%s.%s"","
82129,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaTableITCase.java,97,,"        String groupId = getStandardProps().getProperty(""group.id"");"
82130,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaTableITCase.java,115,,"                                    + ""  'topic' = '%s',\n"""
82131,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaTableITCase.java,116,,"                                    + ""  'properties.bootstrap.servers' = '%s',\n"""
82132,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaTableITCase.java,117,,"                                    + ""  'properties.group.id' = '%s',\n"""
82133,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaTableITCase.java,118,,"                                    + ""  'scan.startup.mode' = 'earliest-offset',\n"""
82134,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaTableITCase.java,119,,"                                    + ""  %s\n"""
82135,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaTableITCase.java,158,,"                ""INSERT INTO kafka\n"""
82136,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaTableITCase.java,319,,"                        ""CREATE TABLE kafka (\n"""
82137,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaTableITCase.java,331,,"                                + "") WITH (\n"""
82138,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaTableITCase.java,332,,"                                + ""  'connector' = 'kafka',\n"""
82139,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaTableITCase.java,345,,"                        + ""VALUES\n"""
82140,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaDynamicTableFactoryTest.java,91,,"                            Column.physical(""region"", DataTypes.STRING().notNull()),"
82141,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaDynamicTableFactoryTest.java,92,,"                            Column.physical(""view_count"", DataTypes.BIGINT())),"
82142,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaDynamicTableFactoryTest.java,117,,"        UPSERT_KAFKA_SOURCE_PROPERTIES.setProperty(""bootstrap.servers"", ""dummy"");"
82143,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaDynamicTableFactoryTest.java,269,,"                    options.put(""value.format"", ""avro-confluent"");"
82144,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaDynamicTableFactoryTest.java,269,,"                    options.put(""value.format"", ""avro-confluent"");"
82145,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaDynamicTableFactoryTest.java,270,,"                    options.put(""value.avro-confluent.url"", TEST_REGISTRY_URL);"
82146,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaDynamicTableFactoryTest.java,271,,"                    options.put(""key.format"", ""avro-confluent"");"
82147,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaDynamicTableFactoryTest.java,272,,"                    options.put(""key.avro-confluent.url"", TEST_REGISTRY_URL);"
82148,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaDynamicTableFactoryTest.java,429,,"                                                ""value.%s.%s"","
82149,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaDynamicTableFactoryTest.java,504,,"                        ""key.%s.%s"","
82150,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,123,,"                                + "") WITH (\n"""
82151,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,124,,"                                + ""  'connector' = 'upsert-kafka',\n"""
82152,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,125,,"                                + ""  'topic' = '%s',\n"""
82153,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,126,,"                                + ""  'properties.bootstrap.servers' = '%s',\n"""
82154,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,127,,"                                + ""  'key.format' = '%s',\n"""
82155,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,154,,"                                ""name 1"","
82156,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,162,,"                                ""name 2"","
82157,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,348,,"                Row.of(""good""),"
82158,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,355,,"        expected.put(Row.of(""study""), Collections.singletonList(changelogRow(""+I"", ""study"", 1L)));"
82159,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,357,,"                Row.of(""day""),"
82160,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,363,,"        expected.put(Row.of(""boy""), Collections.singletonList(changelogRow(""+I"", ""boy"", 1L)));"
82161,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,464,,"                                ""Alice"","
82162,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,466,,"                                LocalDateTime.parse(""2020-08-15T00:00:02"")),"
82163,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,471,,"                                ""Berlin"","
82164,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,472,,"                                LocalDateTime.parse(""2020-08-15T00:00:03"")),"
82165,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,476,,"                                ""Richard"","
82166,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,484,,"                                LocalDateTime.parse(""2020-08-16T00:02:00"")),"
82167,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,488,,"                                ""Tomato"","
82168,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,489,,"                                ""Hongkong"","
82169,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,490,,"                                LocalDateTime.parse(""2020-08-16T00:05:05"")),"
82170,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,494,,"                                ""Tim"","
82171,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,495,,"                                ""Shenzhen"","
82172,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,600,,"                                ""WUHAN"","
82173,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,621,,"                                ""BERLIN"","
82174,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaTableITCase.java,649,,"                                ""HONGKONG"","
82175,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/table/descriptors/KafkaTest.java,39,,"                        .version(""0.11"")"
82176,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/table/descriptors/KafkaTest.java,40,,"                        .topic(""MyTable"")"
82177,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/table/descriptors/KafkaTest.java,72,,"        props1.put(""connector.property-version"", ""1"");"
82178,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/table/descriptors/KafkaTest.java,73,,"        props1.put(""connector.type"", ""kafka"");"
82179,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/table/descriptors/KafkaTest.java,73,,"        props1.put(""connector.type"", ""kafka"");"
82180,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/table/descriptors/KafkaTest.java,74,,"        props1.put(""connector.version"", ""0.8"");"
82181,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/table/descriptors/KafkaTest.java,75,,"        props1.put(""connector.topic"", ""WhateverTopic"");"
82182,./TargetProjects/flink/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/table/descriptors/KafkaTest.java,76,,"        props1.put(""connector.startup-mode"", ""earliest-offset"");"
82183,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisConsumerTest.java,122,,"                                        ""fakeStream"","
82184,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisConsumerTest.java,209,,"                                        ""fakeStream1"","
82185,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisConsumerTest.java,321,,"    @SuppressWarnings(""unchecked"")"
82186,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisConsumerTest.java,344,,"        HashMap<StreamShardHandle, SequenceNumber> fakeRestoredState = getFakeRestoredStore(""all"");"
82187,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisConsumerTest.java,414,,"                getFakeRestoredStore(""fakeStream2"");"
82188,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducerTest.java,121,,"    @SuppressWarnings(""ResultOfMethodCallIgnored"")"
82189,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducerTest.java,132,,"        testHarness.processElement(new StreamRecord<>(""msg-1""));"
82190,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducerTest.java,136,,"                .setException(new Exception(""artificial async exception""));"
82191,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducerTest.java,139,,"            testHarness.processElement(new StreamRecord<>(""msg-2""));"
82192,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/internals/KinesisDataFetcherTest.java,109,,"                createTestDataFetcherWithNoShards(10, 2, ""fakeStream1"", ""fakeStream2"");"
82193,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/internals/KinesisDataFetcherTest.java,109,,"                createTestDataFetcherWithNoShards(10, 2, ""fakeStream1"", ""fakeStream2"");"
82194,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/internals/KinesisDataFetcherTest.java,116,,"        final String stream = ""fakeStream"";"
82195,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/internals/KinesisDataFetcherTest.java,181,,"        fakeStreams.add(""fakeStream3"");"
82196,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/internals/KinesisDataFetcherTest.java,182,,"        fakeStreams.add(""fakeStream4"");"
82197,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/internals/publisher/fanout/FanOutRecordPublisherConfigurationTest.java,92,,"        List<String> streams = Arrays.asList(""fakedstream1"", ""fakedstream2"");"
82198,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/internals/publisher/fanout/FanOutRecordPublisherConfigurationTest.java,92,,"        List<String> streams = Arrays.asList(""fakedstream1"", ""fakedstream2"");"
82199,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/internals/publisher/fanout/FanOutRecordPublisherConfigurationTest.java,146,,"        testConfig.setProperty(EFO_CONSUMER_NAME, ""name"");"
82200,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/internals/publisher/fanout/FanOutRecordPublisherTest.java,275,,"                        ""arn"","
82201,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/internals/publisher/fanout/FanOutShardSubscriberTest.java,51,,"                        ""consumerArn"","
82202,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/internals/publisher/fanout/FanOutShardSubscriberTest.java,52,,"                        ""shardId"","
82203,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/internals/publisher/fanout/StreamConsumerRegistrarTest.java,86,,"        registrar.registerStreamConsumer(STREAM, ""name"");"
82204,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/model/StartingPositionTest.java,53,,"        SequenceNumber sequenceNumber = new SequenceNumber(""200"", 3);"
82205,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/model/StreamShardHandleTest.java,32,,"                StreamShardHandle.compareShardIds(""shardId-000000000001"", ""shardId-000000000010""),"
82206,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/proxy/KinesisProxyTest.java,78,,"                new ProvisionedThroughputExceededException(""asdf"");"
82207,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/proxy/KinesisProxyTest.java,107,,"        kinesisConsumerConfig.setProperty(ConsumerConfigConstants.AWS_REGION, ""us-east-1"");"
82208,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/proxy/KinesisProxyTest.java,132,,"        Whitebox.getField(KinesisProxy.class, ""kinesisClient"").set(kinesisProxy, mockClient);"
82209,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/proxy/KinesisProxyTest.java,148,,"        String fakeStreamName = ""fake-stream"";"
82210,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/proxy/KinesisProxyV2Test.java,147,,"        RegisterStreamConsumerResponse actual = proxy.registerStreamConsumer(""arn"", ""name"");"
82211,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/proxy/KinesisProxyV2Test.java,147,,"        RegisterStreamConsumerResponse actual = proxy.registerStreamConsumer(""arn"", ""name"");"
82212,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/table/KinesisDynamicTableFactoryTest.java,148,,"        List<String> sinkPartitionKeys = Arrays.asList(""name"", ""curr_id"");"
82213,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/table/KinesisDynamicTableFactoryTest.java,148,,"        List<String> sinkPartitionKeys = Arrays.asList(""name"", ""curr_id"");"
82214,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/table/RowDataFieldsKinesisPartitionerTest.java,64,,"                                    DataTypes.FIELD(""month"", DataTypes.STRING()),"
82215,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/testutils/FakeKinesisFanOutBehavioursFactory.java,568,,"            throw new UnsupportedOperationException(""This method is not implemented."");"
82216,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/AwsV2UtilTest.java,150,,"        properties.setProperty(AWS_REGION, ""eu-west-2"");"
82217,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/AwsV2UtilTest.java,512,,"        Exception nonRecoverable = new IllegalArgumentException(""abc"");"
82218,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/KinesisConfigUtilTest.java,64,,"        testConfig.setProperty(AWSConfigConstants.AWS_REGION, ""us-east-1"");"
82219,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/KinesisConfigUtilTest.java,65,,"        testConfig.setProperty(""RateLimit"", ""unparsableLong"");"
82220,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/KinesisConfigUtilTest.java,150,,"        testConfig.setProperty(AWSConfigConstants.AWS_ACCESS_KEY_ID, ""accessKey"");"
82221,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/KinesisConfigUtilTest.java,151,,"        testConfig.setProperty(AWSConfigConstants.AWS_SECRET_ACCESS_KEY, ""secretKey"");"
82222,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/KinesisConfigUtilTest.java,186,,"        testConfig.setProperty(AWSConfigConstants.AWS_CREDENTIALS_PROVIDER, ""BASIC"");"
82223,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/KinesisConfigUtilTest.java,442,,"        testConfig.setProperty(ConsumerConfigConstants.STREAM_INITIAL_POSITION, ""AT_TIMESTAMP"");"
82224,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/KinesisConfigUtilTest.java,451,,"                ""Invalid value given for initial timestamp for AT_TIMESTAMP initial position in stream."");"
82225,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/KinesisConfigUtilTest.java,587,,"                ""unparsableDouble"");"
82226,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/KinesisConfigUtilTest.java,599,,"        testConfig.setProperty(ConsumerConfigConstants.SHARD_GETRECORDS_RETRIES, ""unparsableInt"");"
82227,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/StreamConsumerRegistrarUtilTest.java,43,,"        configProps.setProperty(EFO_CONSUMER_NAME, ""consumer-name"");"
82228,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/StreamConsumerRegistrarUtilTest.java,46,,"        when(registrar.registerStreamConsumer(""stream-1"", ""consumer-name""))"
82229,./TargetProjects/flink/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/StreamConsumerRegistrarUtilTest.java,48,,"        when(registrar.registerStreamConsumer(""stream-2"", ""consumer-name""))"
82230,./TargetProjects/flink/flink-connectors/flink-connector-rabbitmq/src/test/java/org/apache/flink/streaming/connectors/rabbitmq/RMQSinkTest.java,58,,"    private static final String MESSAGE_STR = ""msg"";"
82231,./TargetProjects/flink/flink-connectors/flink-connector-rabbitmq/src/test/java/org/apache/flink/streaming/connectors/rabbitmq/RMQSourceTest.java,360,,"        builder.setHost(""hostTest"")"
82232,./TargetProjects/flink/flink-connectors/flink-connector-rabbitmq/src/test/java/org/apache/flink/streaming/connectors/rabbitmq/RMQSourceTest.java,362,,"                .setUserName(""userTest"")"
82233,./TargetProjects/flink/flink-connectors/flink-connector-rabbitmq/src/test/java/org/apache/flink/streaming/connectors/rabbitmq/RMQSourceTest.java,363,,"                .setPassword(""passTest"")"
82234,./TargetProjects/flink/flink-connectors/flink-connector-rabbitmq/src/test/java/org/apache/flink/streaming/connectors/rabbitmq/common/RMQConnectionConfigTest.java,42,,"                        .setUserName(""guest"")"
82235,./TargetProjects/flink/flink-connectors/flink-connector-rabbitmq/src/test/java/org/apache/flink/streaming/connectors/rabbitmq/common/RMQConnectionConfigTest.java,54,,"                        .setHost(""localhost"")"
82236,./TargetProjects/flink/flink-connectors/flink-hadoop-compatibility/src/test/java/org/apache/flink/api/java/hadoop/mapred/wrapper/HadoopInputSplitTest.java,66,,"        Assert.assertArrayEquals(new String[] {""host0""}, split.getHostnames());"
82237,./TargetProjects/flink/flink-container/src/test/java/org/apache/flink/container/entrypoint/StandaloneApplicationClusterConfigurationParserFactoryTest.java,72,,"    private static final String JOB_CLASS_NAME = ""foobar"";"
82238,./TargetProjects/flink/flink-container/src/test/java/org/apache/flink/container/entrypoint/StandaloneApplicationClusterConfigurationParserFactoryTest.java,86,,"            ""--configDir"","
82239,./TargetProjects/flink/flink-container/src/test/java/org/apache/flink/container/entrypoint/StandaloneApplicationClusterConfigurationParserFactoryTest.java,88,,"            ""--job-id"","
82240,./TargetProjects/flink/flink-container/src/test/java/org/apache/flink/container/entrypoint/StandaloneApplicationClusterConfigurationParserFactoryTest.java,95,,"            ""--job-classname"","
82241,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/common/ExecutionConfig.java,726,,"            throw new NullPointerException(""Cannot register null class or serializer."");"
82242,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/common/functions/util/AbstractRuntimeUDFContext.java,205,,"                ""This state is only accessible by functions executed on a KeyedStream"");"
82243,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/common/operators/CollectionExecutor.java,179,,"        @SuppressWarnings(""unchecked"")"
82244,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/common/operators/CollectionExecutor.java,373,,"                    ""The iteration """
82245,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/common/operators/GenericDataSourceBase.java,66,,"            throw new IllegalArgumentException(""Input format may not be null."");"
82246,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/common/typeinfo/SqlTimeTypeInfo.java,45,,"    @SuppressWarnings({""rawtypes"", ""unchecked""})"
82247,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/common/typeutils/CompositeTypeSerializerSnapshot.java,132,,"    @SuppressWarnings(""unchecked"")"
82248,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/common/typeutils/UnloadableDummyTypeSerializer.java,63,,"        throw new UnsupportedOperationException(""This object is a dummy TypeSerializer."");"
82249,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/MissingTypeInfo.java,61,,"                ""The missing type information cannot be used as a type information."");"
82250,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/ObjectArrayTypeInfo.java,72,,"    @SuppressWarnings(""unchecked"")"
82251,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/PojoTypeInfo.java,234,,"    @SuppressWarnings(""unchecked"")"
82252,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/TupleTypeInfo.java,56,,"    @SuppressWarnings(""unchecked"")"
82253,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/TupleTypeInfo.java,216,,"                throw new IllegalArgumentException(""Type at position "" + i + "" is null."");"
82254,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/TypeExtractor.java,443,,"    @SuppressWarnings(""unchecked"")"
82255,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/TypeExtractor.java,1451,,"                            ""Basic type '"" + typeInfo + ""' expected but was '"" + actual + ""'."");"
82256,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/TypeExtractor.java,2014,,"                            + ""and must be processed as GenericType. Please read the Flink documentation """
82257,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/TypeExtractor.java,2015,,"                            + ""on \""Data Types & Serialization\"" for details of the effect on performance."");"
82258,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,105,,"    @SuppressWarnings(""unchecked"")"
82259,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,197,,"            throw new RuntimeException(""Cannot instantiate class."", e);"
82260,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,214,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
82261,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,243,,"                        ""Error during POJO copy, this should not happen since we check the fields before."");"
82262,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/runtime/TupleComparator.java,48,,"    @SuppressWarnings(""unchecked"")"
82263,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/runtime/TupleComparatorBase.java,61,,"    @SuppressWarnings(""unchecked"")"
82264,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/runtime/TupleSerializerSnapshot.java,51,,"                checkNotNull(serializerInstance.getTupleClass(), ""tuple class can not be NULL"");"
82265,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializerSnapshotData.java,199,,"    @SuppressWarnings(""unchecked"")"
82266,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java,291,,"    @SuppressWarnings(""unchecked"")"
82267,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java,104,,"                            ""A (semicolon-separated) list of patterns that specifies which classes should always be"""
82268,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java,248,,"    @SuppressWarnings(""unused"")"
82269,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java,404,,"        return ConfigOptions.key(""fs."" + scheme + "".limit.total"").defaultValue(-1);"
82270,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/configuration/RestartStrategyOptions.java,64,,"                                                    code(""fixed-delay""),"
82271,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/configuration/RestartStrategyOptions.java,71,,"                                                    code(""failure-rate""),"
82272,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/configuration/RestartStrategyOptions.java,78,,"                                                    code(""exponential-delay""),"
82273,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/configuration/RestartStrategyOptions.java,136,,"                                                    + ""It can be specified using notation: \""1 min\"", \""20 s\"""","
82274,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/configuration/SecurityOptions.java,196,,"            ""The SSL Setup encourages separate configs for internal and REST security."")"
82275,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/configuration/SecurityOptions.java,262,,"                                    + ""for Flink's internal endpoints (rpc, data transport, blob server)."");"
82276,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/configuration/SecurityOptions.java,333,,"                                    + ""for Flink's external REST endpoints."");"
82277,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/configuration/WebOptions.java,151,,"                    .withDescription(""This config option is no longer used"");"
82278,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/core/fs/LimitedConnectionsFileSystem.java,94,,"    @GuardedBy(""lock"")"
82279,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/core/io/SimpleVersionedSerialization.java,53,,"        checkNotNull(serializer, ""serializer"");"
82280,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/core/memory/DataInputDeserializer.java,185,,"            @SuppressWarnings(""restriction"")"
82281,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/core/memory/DataOutputSerializer.java,196,,"    @SuppressWarnings(""restriction"")"
82282,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/core/memory/MemorySegment.java,80,,"    @SuppressWarnings(""restriction"")"
82283,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/core/memory/MemorySegment.java,330,,"            throw new IllegalStateException(""segment has been freed"");"
82284,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/types/Record.java,1387,,"                @SuppressWarnings(""restriction"")"
82285,./TargetProjects/flink/flink-core/src/main/java/org/apache/flink/util/InstantiationUtil.java,584,,"    @SuppressWarnings(""unchecked"")"
82286,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/ExecutionConfigFromConfigurationTest.java,43,,"                        .whenSetFromFile(""pipeline.auto-generate-uids"", ""false"")"
82287,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/eventtime/WatermarkOutputMultiplexerTest.java,315,,"        multiplexer.registerNewOutput(""lower"");"
82288,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/eventtime/WatermarkOutputMultiplexerTest.java,316,,"        multiplexer.registerNewOutput(""higher"");"
82289,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/functions/util/RuntimeUDFContextTest.java,95,,"            ctx.setBroadcastVariable(""name1"", Arrays.asList(1, 2, 3, 4));"
82290,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/functions/util/RuntimeUDFContextTest.java,96,,"            ctx.setBroadcastVariable(""name2"", Arrays.asList(1.0, 2.0, 3.0, 4.0));"
82291,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/functions/util/RuntimeUDFContextTest.java,138,,"            ctx.setBroadcastVariable(""name"", Arrays.asList(1, 2, 3, 4));"
82292,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/DelimitedInputFormatSamplingTest.java,40,,"            ""123456789\n"""
82293,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/DelimitedInputFormatSamplingTest.java,52,,"            ""12345\n"" + ""12345\n"" + ""12345\n"" + ""12345\n"" + ""12345\n"" + ""12345\n"" + ""12345\n"""
82294,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/DelimitedInputFormatSamplingTest.java,105,,"            format.setFilePath(tempFile.replace(""file"", ""test""));"
82295,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/DelimitedInputFormatSamplingTest.java,105,,"            format.setFilePath(tempFile.replace(""file"", ""test""));"
82296,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/DelimitedInputFormatSamplingTest.java,111,,"                    ""Wrong number of samples taken."","
82297,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/DelimitedInputFormatTest.java,506,,"                ""The file size from the statistics is wrong."","
82298,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/EnumerateNestedFilesTest.java,66,,"            this.config.setBoolean(""recursive.file.enumeration"", true);"
82299,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/EnumerateNestedFilesTest.java,88,,"            TestFileUtils.createTempFileInDirectory(nestedDir.getAbsolutePath(), ""paella"");"
82300,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/EnumerateNestedFilesTest.java,89,,"            TestFileUtils.createTempFileInDirectory(insideNestedDir.getAbsolutePath(), ""kalamari"");"
82301,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/EnumerateNestedFilesTest.java,90,,"            TestFileUtils.createTempFileInDirectory(insideNestedDir.getAbsolutePath(), ""fideua"");"
82302,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/EnumerateNestedFilesTest.java,149,,"            TestFileUtils.createTempFileInDirectory(nestedNestedDir.getAbsolutePath(), ""bravas"");"
82303,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/FileInputFormatTest.java,96,,"        format.setFilePaths(""/an/imaginary/path"", null);"
82304,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/FileInputFormatTest.java,144,,"        final String myPath2 = ""/an/imaginary/path2"";"
82305,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/FileInputFormatTest.java,288,,"                    ""The file size from the statistics is wrong."", SIZE, stats.getTotalInputSize());"
82306,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/FileInputFormatTest.java,664,,"            File child1 = temporaryFolder.newFile(""dataFile1.txt"");"
82307,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/FileInputFormatTest.java,665,,"            File child2 = temporaryFolder.newFile(""another_file.bin"");"
82308,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/FileOutputFormatTest.java,40,,"        File tmpOutPath = File.createTempFile(""fileOutputFormatTest"", ""Test1"");"
82309,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/FileOutputFormatTest.java,40,,"        File tmpOutPath = File.createTempFile(""fileOutputFormatTest"", ""Test1"");"
82310,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/FileOutputFormatTest.java,63,,"        Assert.assertTrue(""Directory could not be created."", tmpOutPath.mkdir());"
82311,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/GenericCsvInputFormatTest.java,91,,"            final String fileContent = ""111|222|333|444|555\n666|777|888|999|000|"";"
82312,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/GenericCsvInputFormatTest.java,124,,"            fail(""Test failed due to a "" + ex.getClass().getSimpleName() + "": "" + ex.getMessage());"
82313,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/GenericCsvInputFormatTest.java,318,,"            fail(""Test erroneous"");"
82314,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/GenericCsvInputFormatTest.java,624,,"            File tempFile = File.createTempFile(""test_contents"", ""tmp"");"
82315,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/GenericCsvInputFormatTest.java,638,,"                            new String[] {""localhost""});"
82316,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/io/GlobFilePathFilterTest.java,37,,"        assertFalse(matcher.filterPath(new Path(""dir/file.txt"")));"
82317,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/operators/SelectorFunctionKeysTest.java,137,,"    @SuppressWarnings(""serial"")"
82318,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/operators/SlotSharingGroupTest.java,36,,"        final String name = ""ssg"";"
82319,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/operators/base/InnerJoinOperatorBaseTest.java,75,,"        List<String> inputData1 = new ArrayList<String>(Arrays.asList(""foo"", ""bar"", ""foobar""));"
82320,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/operators/base/InnerJoinOperatorBaseTest.java,75,,"        List<String> inputData1 = new ArrayList<String>(Arrays.asList(""foo"", ""bar"", ""foobar""));"
82321,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/operators/base/OuterJoinOperatorBaseTest.java,97,,"        final List<String> leftInput = Arrays.asList(""foo"", ""bar"", ""foobar"");"
82322,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/operators/base/OuterJoinOperatorBaseTest.java,97,,"        final List<String> leftInput = Arrays.asList(""foo"", ""bar"", ""foobar"");"
82323,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/operators/base/OuterJoinOperatorBaseTest.java,97,,"        final List<String> leftInput = Arrays.asList(""foo"", ""bar"", ""foobar"");"
82324,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/operators/base/OuterJoinOperatorBaseTest.java,104,,"                        ""foobar,null"","
82325,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/operators/base/OuterJoinOperatorBaseTest.java,116,,"        List<String> expected = Arrays.asList(""bar,bar"", ""foo,foo"", ""foobar,foobar"");"
82326,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/operators/base/OuterJoinOperatorBaseTest.java,116,,"        List<String> expected = Arrays.asList(""bar,bar"", ""foo,foo"", ""foobar,foobar"");"
82327,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/operators/base/OuterJoinOperatorBaseTest.java,141,,"        final List<String> rightInput = Arrays.asList(""bar"", ""foo"", ""barfoo"");"
82328,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/operators/base/OuterJoinOperatorBaseTest.java,143,,"        List<String> expected = Arrays.asList(""bar,bar"", ""null,barfoo"", ""foo,foo"", ""foobar,null"");"
82329,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/state/ListStateDescriptorTest.java,46,,"        ListStateDescriptor<String> descr = new ListStateDescriptor<>(""testName"", serializer);"
82330,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/state/MapStateDescriptorTest.java,49,,"                new MapStateDescriptor<>(""testName"", keySerializer, valueSerializer);"
82331,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/state/ReducingStateDescriptorTest.java,46,,"                new ReducingStateDescriptor<>(""testName"", reducer, serializer);"
82332,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/state/StateDescriptorTest.java,55,,"        final TestStateDescriptor<String> descr = new TestStateDescriptor<>(""test"", serializer);"
82333,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/state/ValueStateDescriptorTest.java,39,,"        final String name = ""testName"";"
82334,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/typeutils/ComparatorTestBase.java,129,,"            fail(""Exception in test: "" + e.getMessage());"
82335,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/typeutils/CompositeSerializerTest.java,64,,"                    @SuppressWarnings(""unchecked"")"
82336,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/typeutils/SerializerTestBase.java,123,,"            fail(""Exception in test: "" + e.getMessage());"
82337,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/typeutils/SerializerTestBase.java,259,,"                deepEquals(""Deserialized value if wrong."", value, deserialized);"
82338,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications.java,98,,"            return new BigInteger(""123456789012345678901234567890123456"");"
82339,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/typeutils/base/EnumSerializerCompatibilityTest.java,44,,"    private static final String ENUM_A = ""public enum "" + ENUM_NAME + "" { A, B, C }"";"
82340,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/common/typeutils/base/EnumSerializerUpgradeTest.java,99,,"        @SuppressWarnings(""unchecked"")"
82341,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/ClosureCleanerTest.java,221,,"                new WithWriteReplace.SerializablePayload(new WithWriteReplace.Payload(""text""));"
82342,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/ClosureCleanerTest.java,318,,"@SuppressWarnings(""serial"")"
82343,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/tuple/TupleGenerator.java,56,,"    private static final String TUPLE_CLASSNAME = ""Tuple"";"
82344,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/tuple/TupleGenerator.java,246,,"            w.println(""\tpublic "" + GEN_TYPE_PREFIX + i + "" f"" + i + ';');"
82345,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/tuple/TupleGenerator.java,260,,"        w.println(""\t/**"");"
82346,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/tuple/TupleGenerator.java,262,,"        w.println(""\t */"");"
82347,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/tuple/TupleGenerator.java,276,,"        w.println(""\t}"");"
82348,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/tuple/TupleGenerator.java,280,,"        w.println(""\t@Override"");"
82349,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/tuple/TupleGenerator.java,288,,"        w.println(""\t@SuppressWarnings(\""unchecked\"")"");"
82350,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/tuple/TupleGenerator.java,295,,"        w.println(""\t\t}"");"
82351,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/CompositeTypeTest.java,101,,"        assertEquals(3, nestedTypeInfo.getFlatFields(""1.*"").size());"
82352,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/PojoTypeExtractionTest.java,241,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
82353,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/PojoTypeExtractionTest.java,241,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
82354,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/PojoTypeExtractionTest.java,370,,"                    Assert.fail(""already seen"");"
82355,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/PojoTypeExtractionTest.java,431,,"        Assert.assertTrue(""Field was not present"", dateSeen);"
82356,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/PojoTypeExtractionTest.java,547,,"            if (name.equals(""field1"")) {"
82357,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/PojoTypeExtractionTest.java,549,,"            } else if (name.equals(""field2"")) {"
82358,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/PojoTypeExtractionTest.java,553,,"            } else if (name.equals(""key"")) {"
82359,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/PojoTypeExtractionTest.java,556,,"                Assert.fail(""Unexpected field "" + field);"
82360,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/RowTypeInfoTest.java,54,,"                    new String[] {""int"", ""int2""})"
82361,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/RowTypeInfoTest.java,60,,"        new RowTypeInfo(typeList, new String[] {""int"", ""string""});"
82362,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/RowTypeInfoTest.java,72,,"        String[] fieldNames = new String[] {""int"", ""row"", ""string""};"
82363,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/RowTypeInfoTest.java,136,,"                        new String[] {""field1"", ""field2""});"
82364,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/TypeExtractorTest.java,74,,"    @SuppressWarnings({""rawtypes"", ""unchecked""})"
82365,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/TypeExtractorTest.java,74,,"    @SuppressWarnings({""rawtypes"", ""unchecked""})"
82366,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/TypeExtractorTest.java,839,,"                        function, (TypeInformation) Types.STRING, ""name"", true);"
82367,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/TypeExtractorTest.java,844,,"            Assert.fail(""Expected an exception"");"
82368,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/TypeExtractorTest.java,1093,,"            Assert.fail(""exception expected"");"
82369,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/TypeInfoFactoryTest.java,268,,"        @SuppressWarnings(""unchecked"")"
82370,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/EitherSerializerCommonTest.java,49,,"            new Either.Left(""hello friend""),"
82371,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/EitherSerializerTest.java,49,,"    @SuppressWarnings(""unchecked"")"
82372,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/GenericPairComparatorTest.java,40,,"                new Tuple3<Integer, String, Double>(4, ""hello"", 20.0),"
82373,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/GenericPairComparatorTest.java,41,,"                new Tuple3<Integer, String, Double>(4, ""world"", 23.2),"
82374,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializerTest.java,247,,"    @SuppressWarnings({""rawtypes"", ""unchecked""})"
82375,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications.java,44,,"    @SuppressWarnings(""WeakerAccess"")"
82376,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications.java,219,,"            return new StaticSchemaPojo(""Gordon"", 27, StaticSchemaPojo.Color.BLUE, false);"
82377,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/TestDataOutputSerializer.java,163,,"    @SuppressWarnings(""restriction"")"
82378,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/TupleComparatorISD1Test.java,36,,"                new Tuple3<Integer, String, Double>(4, ""hello"", 20.0),"
82379,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/TupleComparatorISD2Test.java,37,,"                new Tuple3<Integer, String, Double>(4, ""hello"", 20.0),"
82380,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/TupleComparatorISD2Test.java,38,,"                new Tuple3<Integer, String, Double>(4, ""world"", 23.2),"
82381,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/TupleComparatorISD3Test.java,38,,"                new Tuple3<Integer, String, Double>(4, ""hello"", 20.0),"
82382,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/TupleComparatorTTT1Test.java,42,,"                        new Tuple2<String, Double>(""hello"", 1.0),"
82383,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/TupleComparatorTTT1Test.java,62,,"                        new Tuple2<String, Double>(""world"", 1.0),"
82384,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/TupleComparatorTTT2Test.java,44,,"                        new Tuple2<String, Double>(""hello"", 1.0),"
82385,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/TupleComparatorTTT2Test.java,64,,"                        new Tuple2<String, Double>(""world"", 1.0),"
82386,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/TupleComparatorTTT3Test.java,43,,"                        new Tuple2<String, Double>(""hello"", 1.0),"
82387,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/TupleComparatorTTT3Test.java,63,,"                        new Tuple2<String, Double>(""world"", 1.0),"
82388,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/TupleSerializerTest.java,55,,"        @SuppressWarnings({""unchecked"", ""rawtypes""})"
82389,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializerUpgradeTest.java,100,,"            return new Dog(""Hasso"");"
82390,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigOptionTest.java,45,,"                ConfigOptions.key(""key"")"
82391,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigOptionTest.java,47,,"                        .withDeprecatedKeys(""deprecated1"", ""deprecated2"");"
82392,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigOptionTest.java,47,,"                        .withDeprecatedKeys(""deprecated1"", ""deprecated2"");"
82393,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigOptionTest.java,58,,"                ConfigOptions.key(""key"").defaultValue(0).withFallbackKeys(""fallback1"", ""fallback2"");"
82394,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationConversionsTest.java,59,,"        pc.setInteger(""int"", 5);"
82395,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationConversionsTest.java,60,,"        pc.setLong(""long"", 15);"
82396,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationConversionsTest.java,61,,"        pc.setLong(""too_long"", TOO_LONG);"
82397,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationConversionsTest.java,62,,"        pc.setFloat(""float"", 2.1456775f);"
82398,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationConversionsTest.java,63,,"        pc.setDouble(""double"", Math.PI);"
82399,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationConversionsTest.java,64,,"        pc.setDouble(""negative_double"", -1.0);"
82400,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationConversionsTest.java,65,,"        pc.setDouble(""zero"", 0.0);"
82401,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationConversionsTest.java,66,,"        pc.setDouble(""too_long_double"", TOO_LONG_DOUBLE);"
82402,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationConversionsTest.java,67,,"        pc.setString(""string"", ""42"");"
82403,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationConversionsTest.java,68,,"        pc.setString(""non_convertible_string"", ""bcdefg&&"");"
82404,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationConversionsTest.java,69,,"        pc.setBoolean(""boolean"", true);"
82405,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationConversionsTest.java,312,,"                                ""For input string: \""bcdefg&&\"""", NumberFormatException.class),"
82406,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationConversionsTest.java,341,,"                        .expectException(""For input string: \""true\""""),"
82407,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationParsingInvalidFormatsTest.java,38,,"            new Object[] {ConfigOptions.key(""int"").intType().defaultValue(1), ""ABC""},"
82408,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationTest.java,63,,"        PROPERTIES_MAP.put(""prop1"", ""value1"");"
82409,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationTest.java,127,,"        cfg.setString(""string-key"", ""abc"");"
82410,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationTest.java,127,,"        cfg.setString(""string-key"", ""abc"");"
82411,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationTest.java,130,,"                ConfigOptions.key(""string-key"").defaultValue(""my-beautiful-default"");"
82412,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationTest.java,150,,"        assertEquals(""override"", cfg.getString(stringOption, ""override""));"
82413,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationTest.java,183,,"        cfg.setInteger(""the-key"", 11);"
82414,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationTest.java,184,,"        cfg.setInteger(""old-key"", 12);"
82415,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationTest.java,185,,"        cfg.setInteger(""older-key"", 13);"
82416,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ConfigurationTest.java,193,,"                ConfigOptions.key(""does-not-exist"")"
82417,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/GlobalConfigurationTest.java,85,,"            assertEquals(""null"", conf.getString(""mykey3"", ""null""));"
82418,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/MemorySizeTest.java,159,,"            fail(""exception expected"");"
82419,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/ReadableWritableConfigurationTest.java,107,,"                                                                Tuple2.of(""prop1"", ""value1"")))))"
82420,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/StructuredOptionsSplitterTest.java,49,,"                TestSpec.split(""'A;B';C"", ';').expect(""A;B"", ""C""),"
82421,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/configuration/StructuredOptionsSplitterTest.java,58,,"                                ""Could not split string. Quoting was not closed properly.""),"
82422,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/fs/AbstractRecoverableWriterTest.java,91,,"        final Path path = new Path(testDir, ""part-0"");"
82423,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/fs/EntropyInjectorTest.java,43,,"        EntropyInjectingFileSystem efs = new TestEntropyInjectingFs(""test"", ""ignored"");"
82424,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/fs/EntropyInjectorTest.java,43,,"        EntropyInjectingFileSystem efs = new TestEntropyInjectingFs(""test"", ""ignored"");"
82425,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/fs/EntropyInjectorTest.java,52,,"        EntropyInjectingFileSystem efs = new TestEntropyInjectingFs(""_entropy_key_"", ""ignored"");"
82426,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/fs/EntropyInjectorTest.java,142,,"        final Path path = new Path(Path.fromLocalFile(folder), entropyKey + ""/path/"");"
82427,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/fs/LimitedConnectionsConfigurationTest.java,61,,"        config.setInteger(""fs."" + fsScheme + "".limit.total"", 42);"
82428,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/fs/PathTest.java,38,,"        Path p = new Path(""/my/path"");"
82429,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/fs/PathTest.java,60,,"        assertEquals(""hdfs"", p.toUri().getScheme());"
82430,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/fs/PathTest.java,70,,"        p = new Path(""C:/my/windows/path"");"
82431,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/fs/PathTest.java,157,,"        assertEquals(""path"", p.getName());"
82432,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/io/LocatableSplitAssignerTest.java,75,,"                splits.add(new LocatableInputSplit(i, ""testhost""));"
82433,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/io/LocatableSplitAssignerTest.java,100,,"            final String[] hosts = {""host1"", ""host1"", ""host1"", ""host2"", ""host2"", ""host3""};"
82434,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/io/LocatableSplitAssignerTest.java,100,,"            final String[] hosts = {""host1"", ""host1"", ""host1"", ""host2"", ""host2"", ""host3""};"
82435,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/io/LocatableSplitAssignerTest.java,100,,"            final String[] hosts = {""host1"", ""host1"", ""host1"", ""host2"", ""host2"", ""host3""};"
82436,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/io/LocatableSplitAssignerTest.java,118,,"            assertNull(ia.getNextInputSplit(""anotherHost"", 0));"
82437,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/memory/CrossSegmentTypeTest.java,221,,"                        fail(""should fail with an IndexOutOfBoundsException"");"
82438,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/memory/MemorySegmentTestBase.java,83,,"            fail(""IndexOutOfBoundsException expected"");"
82439,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/memory/MemorySegmentTestBase.java,299,,"            fail(""should fail with an IndexOutOfBoundsException"");"
82440,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/memory/MemorySegmentTestBase.java,2087,,"            fail(""should fail with an exception"");"
82441,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/memory/MemorySegmentTestBase.java,2237,,"            fail(""Expecting an IllegalStateException"");"
82442,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/memory/MemorySegmentUndersizedTest.java,81,,"            fail(""IndexOutOfBoundsException expected"");"
82443,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/core/memory/OperationsOnFreedSegmentTest.java,142,,"            fail(""Should fail with an exception"");"
82444,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/testutils/ClassLoaderUtils.java,198,,"                        + ""  }"""
82445,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/JavaToValueConverterTest.java,38,,"                    new StringValue(""123Test""),"
82446,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/PrimitiveDataTypeTest.java,122,,"        StringValue string0 = new StringValue(""This is a test"");"
82447,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/RecordTest.java,82,,"            Assert.fail(""Test failed due to an exception: "" + t.getMessage());"
82448,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/RecordTest.java,744,,"                            ""Value at position """
82449,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/RecordTest.java,746,,"                                    + "" expected to be null in """
82450,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/RecordTest.java,753,,"                            ""Wrong value at position "" + pos + "" in "" + Arrays.toString(expected),"
82451,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/RecordTest.java,753,,"                            ""Wrong value at position "" + pos + "" in "" + Arrays.toString(expected),"
82452,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/RowTest.java,67,,"        row.setField(""c"", ""Hello"");"
82453,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/RowTest.java,247,,"        final Row row1 = Row.of(1, ""hello"", null, Tuple2.of(2L, ""hi""), true);"
82454,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/RowTest.java,266,,"        row.setField(4, ""hello world"");"
82455,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/StringSerializationTest.java,55,,"            fail(""Exception in test: "" + e.getMessage());"
82456,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/StringValueSerializationTest.java,50,,"            fail(""Exception in test: "" + e.getMessage());"
82457,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/parser/ParserTestBase.java,70,,"            fail(""Test erroneous: "" + e.getMessage());"
82458,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/parser/ParserTestBase.java,109,,"                        ""Parser declared the valid value "" + testValues[i] + "" as invalid."","
82459,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/parser/ParserTestBase.java,109,,"                        ""Parser declared the valid value "" + testValues[i] + "" as invalid."","
82460,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/parser/ParserTestBase.java,118,,"                assertEquals(""Invalid number of bytes read returned."", bytes1.length, numRead1);"
82461,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/parser/ParserTestBase.java,179,,"                assertEquals(""Parser parsed wrong."", results[i], result1);"
82462,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/types/parser/VarLengthStringParserTest.java,66,,"        recBytes = ""abcde"".getBytes(ConfigConstants.DEFAULT_CHARSET);"
82463,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/util/ExceptionUtilsTest.java,106,,"        Throwable rootThrowable = new OutOfMemoryError(""old message"");"
82464,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/util/ExceptionUtilsTest.java,107,,"        ExceptionUtils.updateDetailMessage(rootThrowable, t -> ""new message"");"
82465,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/util/LinkedOptionalMapTest.java,43,,"        map.put(""java.lang.String"", String.class, ""a string class"");"
82466,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/util/LinkedOptionalMapTest.java,43,,"        map.put(""java.lang.String"", String.class, ""a string class"");"
82467,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/util/LinkedOptionalMapTest.java,88,,"        second.put(""a"", String.class, ""aaa"");"
82468,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/util/LinkedOptionalMapTest.java,89,,"        second.put(""b"", String.class, ""bbb"");"
82469,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/util/LinkedOptionalMapTest.java,90,,"        second.put(""c"", Void.class, ""ccc"");"
82470,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/util/LinkedOptionalMapTest.java,91,,"        second.put(""d"", String.class, ""ddd"");"
82471,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/util/TimeUtilsTest.java,125,,"            fail(""exception expected"");"
82472,./TargetProjects/flink/flink-core/src/test/java/org/apache/flink/util/UnionIteratorTest.java,48,,"                fail(""should fail with an exception"");"
82473,./TargetProjects/flink/flink-docs/src/main/java/org/apache/flink/docs/configuration/ConfigOptionsDocGenerator.java,148,,"                        .collect(Collectors.joining(""\n\t"", ""\n\t"", """")));"
82474,./TargetProjects/flink/flink-docs/src/main/java/org/apache/flink/docs/configuration/ConfigOptionsDocGenerator.java,458,,"                + ""</td>\n"""
82475,./TargetProjects/flink/flink-docs/src/main/java/org/apache/flink/docs/rest/RestAPIDocGenerator.java,165,,"            sb.append(""    <tr>\n"");"
82476,./TargetProjects/flink/flink-docs/src/main/java/org/apache/flink/docs/rest/RestAPIDocGenerator.java,170,,"            sb.append(""    </tr>\n"");"
82477,./TargetProjects/flink/flink-docs/src/main/java/org/apache/flink/docs/rest/RestAPIDocGenerator.java,193,,"            sb.append(""      <td colspan=\""2\"">\n"");"
82478,./TargetProjects/flink/flink-docs/src/main/java/org/apache/flink/docs/rest/RestAPIDocGenerator.java,197,,"            sb.append(""      </td>\n"");"
82479,./TargetProjects/flink/flink-docs/src/main/java/org/apache/flink/docs/rest/RestAPIDocGenerator.java,229,,"            sb.append(""          </div>\n"");"
82480,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,63,,"                ConfigOptions.key(""first.option.a"")"
82481,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,66,,"                        .withDescription(""This is example description for the first option."");"
82482,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,102,,"                        .withDescription(""Description"");"
82483,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,148,,"                ""<table class=\""configuration table table-bordered\"">\n"""
82484,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,149,,"                        + ""    <thead>\n"""
82485,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,150,,"                        + ""        <tr>\n"""
82486,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,151,,"                        + ""            <th class=\""text-left\"" style=\""width: 20%\"">Key</th>\n"""
82487,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,152,,"                        + ""            <th class=\""text-left\"" style=\""width: 15%\"">Default</th>\n"""
82488,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,153,,"                        + ""            <th class=\""text-left\"" style=\""width: 10%\"">Type</th>\n"""
82489,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,154,,"                        + ""            <th class=\""text-left\"" style=\""width: 55%\"">Description</th>\n"""
82490,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,155,,"                        + ""        </tr>\n"""
82491,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,156,,"                        + ""    </thead>\n"""
82492,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,157,,"                        + ""    <tbody>\n"""
82493,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,162,,"                        + ""            <td>Description</td>\n"""
82494,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,172,,"                        + ""            <td style=\""word-wrap: break-word;\"">(none)</td>\n"""
82495,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,200,,"                        + ""    </tbody>\n"""
82496,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,201,,"                        + ""</table>\n"";"
82497,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,224,,"                        + ""            <td><h5>first.option.a</h5></td>\n"""
82498,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,225,,"                        + ""            <td style=\""word-wrap: break-word;\"">2</td>\n"""
82499,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,226,,"                        + ""            <td>Integer</td>\n"""
82500,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,227,,"                        + ""            <td>This is example description for the first option.</td>\n"""
82501,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,232,,"                        + ""            <td>String</td>\n"""
82502,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,245,,"                @ConfigGroup(name = ""group1"", keyPrefix = ""a.b""),"
82503,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,286,,"            tablesConverted.put(table.f0 != null ? table.f0.name() : ""default"", table.f1);"
82504,./TargetProjects/flink/flink-docs/src/test/java/org/apache/flink/docs/configuration/ConfigOptionsDocGeneratorTest.java,492,,"                        + ""</td>\n"""
82505,./TargetProjects/flink/flink-end-to-end-tests/flink-end-to-end-tests-common-kafka/src/main/java/org/apache/flink/tests/util/kafka/LocalStandaloneKafkaResource.java,122,,"                kafkaDir.resolve(Paths.get(""config"", ""zookeeper.properties"")),"
82506,./TargetProjects/flink/flink-end-to-end-tests/flink-end-to-end-tests-common-kafka/src/main/java/org/apache/flink/tests/util/kafka/LocalStandaloneKafkaResource.java,137,,"                kafkaDir.resolve(Paths.get(""bin"", ""zookeeper-server-start.sh"")).toString(),"
82507,./TargetProjects/flink/flink-end-to-end-tests/flink-end-to-end-tests-common-kafka/src/main/java/org/apache/flink/tests/util/kafka/LocalStandaloneKafkaResource.java,274,,"                ""--topic"","
82508,./TargetProjects/flink/flink-end-to-end-tests/flink-end-to-end-tests-common-kafka/src/test/java/org/apache/flink/tests/util/kafka/StreamingKafkaITCase.java,196,,"                        String.format(""Messages from Kafka %s: %s"", kafkaVersion, messages),"
82509,./TargetProjects/flink/flink-end-to-end-tests/flink-end-to-end-tests-hbase/src/test/java/org/apache/flink/tests/util/hbase/SQLClientHBaseITCase.java,139,,"            hbase.createTable(""source"", ""family1"", ""family2"");"
82510,./TargetProjects/flink/flink-end-to-end-tests/flink-end-to-end-tests-hbase/src/test/java/org/apache/flink/tests/util/hbase/SQLClientHBaseITCase.java,139,,"            hbase.createTable(""source"", ""family1"", ""family2"");"
82511,./TargetProjects/flink/flink-end-to-end-tests/flink-end-to-end-tests-hbase/src/test/java/org/apache/flink/tests/util/hbase/SQLClientHBaseITCase.java,139,,"            hbase.createTable(""source"", ""family1"", ""family2"");"
82512,./TargetProjects/flink/flink-end-to-end-tests/flink-end-to-end-tests-hbase/src/test/java/org/apache/flink/tests/util/hbase/SQLClientHBaseITCase.java,141,,"            hbase.putData(""source"", ""row1"", ""family1"", ""f1c1"", ""v1"");"
82513,./TargetProjects/flink/flink-end-to-end-tests/flink-end-to-end-tests-hbase/src/test/java/org/apache/flink/tests/util/hbase/SQLClientHBaseITCase.java,141,,"            hbase.putData(""source"", ""row1"", ""family1"", ""f1c1"", ""v1"");"
82514,./TargetProjects/flink/flink-end-to-end-tests/flink-end-to-end-tests-hbase/src/test/java/org/apache/flink/tests/util/hbase/SQLClientHBaseITCase.java,142,,"            hbase.putData(""source"", ""row1"", ""family2"", ""f2c1"", ""v2"");"
82515,./TargetProjects/flink/flink-end-to-end-tests/flink-end-to-end-tests-hbase/src/test/java/org/apache/flink/tests/util/hbase/SQLClientHBaseITCase.java,143,,"            hbase.putData(""source"", ""row1"", ""family2"", ""f2c2"", ""v3"");"
82516,./TargetProjects/flink/flink-end-to-end-tests/flink-end-to-end-tests-hbase/src/test/java/org/apache/flink/tests/util/hbase/SQLClientHBaseITCase.java,144,,"            hbase.putData(""source"", ""row2"", ""family1"", ""f1c1"", ""v4"");"
82517,./TargetProjects/flink/flink-end-to-end-tests/flink-glue-schema-registry-test/src/main/java/org/apache/flink/glue/schema/registry/test/GlueSchemaRegistryExampleTest.java,111,,"        sansa.put(""name"", ""Sansa"");"
82518,./TargetProjects/flink/flink-end-to-end-tests/flink-glue-schema-registry-test/src/main/java/org/apache/flink/glue/schema/registry/test/GlueSchemaRegistryExampleTest.java,112,,"        sansa.put(""favorite_number"", 99);"
82519,./TargetProjects/flink/flink-end-to-end-tests/flink-glue-schema-registry-test/src/main/java/org/apache/flink/glue/schema/registry/test/GlueSchemaRegistryExampleTest.java,113,,"        sansa.put(""favorite_color"", ""white"");"
82520,./TargetProjects/flink/flink-end-to-end-tests/flink-stream-sql-test/src/main/java/org/apache/flink/sql/tests/StreamSQLTestProgram.java,101,,"                        ""SELECT """
82521,./TargetProjects/flink/flink-end-to-end-tests/flink-stream-state-ttl-test/src/main/java/org/apache/flink/streaming/tests/verify/AbstractTtlStateVerifier.java,52,,"    @SuppressWarnings(""unchecked"")"
82522,./TargetProjects/flink/flink-end-to-end-tests/flink-stream-state-ttl-test/src/main/java/org/apache/flink/streaming/tests/verify/ValueWithTs.java,67,,"        @SuppressWarnings(""unchecked"")"
82523,./TargetProjects/flink/flink-end-to-end-tests/flink-stream-stateful-job-upgrade-test/src/main/java/org/apache/flink/streaming/tests/StatefulStreamJobUpgradeTestProgram.java,94,,"                        .name(""EventSource"")"
82524,./TargetProjects/flink/flink-end-to-end-tests/flink-stream-stateful-job-upgrade-test/src/main/java/org/apache/flink/streaming/tests/StatefulStreamJobUpgradeTestProgram.java,161,,"                        ""stateMap1"", simpleStateUpdate(""stateMap1""), source, stateSer, stateClass);"
82525,./TargetProjects/flink/flink-end-to-end-tests/flink-stream-stateful-job-upgrade-test/src/main/java/org/apache/flink/streaming/tests/StatefulStreamJobUpgradeTestProgram.java,163,,"                ""stateMap2"", lastStateUpdate(""stateMap2""), source, stateSer, stateClass);"
82526,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/clustering/KMeans.java,106,,"                        .withBroadcastSet(loop, ""centroids"")"
82527,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,37,,"            ""url_0"","
82528,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,41,,"            ""url_1"","
82529,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,45,,"            ""url_2"","
82530,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,49,,"            ""url_3"","
82531,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,60,,"            ""url_6"","
82532,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,68,,"            ""url_8"","
82533,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,72,,"            ""url_9"","
82534,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,80,,"            ""url_11"","
82535,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,84,,"            ""url_12"","
82536,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,88,,"            ""url_13"","
82537,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,92,,"            ""url_14"","
82538,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,96,,"            ""url_15"","
82539,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,100,,"            ""url_16"","
82540,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,104,,"            ""url_17"","
82541,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,108,,"            ""url_18"","
82542,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,112,,"            ""url_19"", ""ipsum tation laoreet tation adipiscing wisi nibh diam Ut suscipit ad wisi """
82543,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,115,,"            ""url_20"","
82544,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,119,,"            ""url_21"","
82545,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,123,,"            ""url_22"","
82546,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,127,,"            ""url_23"","
82547,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,131,,"            ""url_24"","
82548,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,135,,"            ""url_25"", ""consectetuer consectetuer exerci quis ea veniam aliquam laoreet minim ex """
82549,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,138,,"            ""url_26"","
82550,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,142,,"            ""url_27"","
82551,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,146,,"            ""url_28"","
82552,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,154,,"            ""url_30"","
82553,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,158,,"            ""url_31"","
82554,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,162,,"            ""url_32"","
82555,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,170,,"            ""url_34"","
82556,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,174,,"            ""url_35"","
82557,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,178,,"            ""url_36"","
82558,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,182,,"            ""url_37"","
82559,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,186,,"            ""url_38"","
82560,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,194,,"            ""url_40"","
82561,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,198,,"            ""url_41"","
82562,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,202,,"            ""url_42"","
82563,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,206,,"            ""url_43"","
82564,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,210,,"            ""url_44"","
82565,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,214,,"            ""url_45"","
82566,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,218,,"            ""url_46"","
82567,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,222,,"            ""url_47"","
82568,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,226,,"            ""url_48"","
82569,./TargetProjects/flink/flink-examples/flink-examples-batch/src/main/java/org/apache/flink/examples/java/relational/util/WebLogData.java,230,,"            ""url_49"","
82570,./TargetProjects/flink/flink-examples/flink-examples-streaming/src/main/java/org/apache/flink/streaming/examples/windowing/util/TopSpeedWindowingExampleData.java,36,,"                    + ""(0,65,108.33333333333333,1424951924635)\n"""
82571,./TargetProjects/flink/flink-examples/flink-examples-streaming/src/main/java/org/apache/flink/streaming/examples/windowing/util/TopSpeedWindowingExampleData.java,61,,"                    + ""(1,75,272.2222222222222,1424951936639)\n"""
82572,./TargetProjects/flink/flink-examples/flink-examples-streaming/src/main/java/org/apache/flink/streaming/examples/windowing/util/TopSpeedWindowingExampleData.java,93,,"                    + ""(1,85,586.111111111111,1424951952645)\n"""
82573,./TargetProjects/flink/flink-examples/flink-examples-streaming/src/main/java/org/apache/flink/streaming/examples/windowing/util/TopSpeedWindowingExampleData.java,114,,"                    + ""(0,80,670.8333333333334,1424951963648)\n"""
82574,./TargetProjects/flink/flink-examples/flink-examples-streaming/src/main/java/org/apache/flink/streaming/examples/windowing/util/TopSpeedWindowingExampleData.java,123,,"                    + ""(1,100,937.4999999999998,1424951967650)\n"""
82575,./TargetProjects/flink/flink-examples/flink-examples-streaming/src/main/java/org/apache/flink/streaming/examples/windowing/util/TopSpeedWindowingExampleData.java,132,,"                    + ""(0,85,861.1111111111112,1424951972651)\n"""
82576,./TargetProjects/flink/flink-examples/flink-examples-streaming/src/main/java/org/apache/flink/streaming/examples/windowing/util/TopSpeedWindowingExampleData.java,156,,"                    + ""(0,95,1133.3333333333335,1424951984655)\n"""
82577,./TargetProjects/flink/flink-examples/flink-examples-streaming/src/main/java/org/apache/flink/streaming/examples/windowing/util/TopSpeedWindowingExampleData.java,169,,"                    + ""(1,100,1563.8888888888896,1424951990658)\n"""
82578,./TargetProjects/flink/flink-examples/flink-examples-streaming/src/main/java/org/apache/flink/streaming/examples/windowing/util/TopSpeedWindowingExampleData.java,174,,"                    + ""(0,100,1358.3333333333335,1424951993659)\n"""
82579,./TargetProjects/flink/flink-examples/flink-examples-streaming/src/main/java/org/apache/flink/streaming/examples/windowing/util/TopSpeedWindowingExampleData.java,203,,"                    + ""(1,95,1973.6111111111115,1424952007664)\n"""
82580,./TargetProjects/flink/flink-examples/flink-examples-streaming/src/main/java/org/apache/flink/streaming/examples/windowing/util/TopSpeedWindowingExampleData.java,327,,"                    + ""CarEvent(1,100,937.4999999999998,1424951967650)\n"""
82581,./TargetProjects/flink/flink-examples/flink-examples-streaming/src/main/java/org/apache/flink/streaming/examples/windowing/util/TopSpeedWindowingExampleData.java,341,,"                    + ""CarEvent(0,95,1133.3333333333335,1424951984655)\n"""
82582,./TargetProjects/flink/flink-examples/flink-examples-streaming/src/main/java/org/apache/flink/streaming/examples/windowing/util/TopSpeedWindowingExampleData.java,349,,"                    + ""CarEvent(0,100,1358.3333333333335,1424951993659)\n"""
82583,./TargetProjects/flink/flink-examples/flink-examples-streaming/src/main/java/org/apache/flink/streaming/examples/windowing/util/TopSpeedWindowingExampleData.java,361,,"                    + ""CarEvent(1,95,1973.6111111111115,1424952007664)\n"""
82584,./TargetProjects/flink/flink-examples/flink-examples-streaming/src/test/java/org/apache/flink/streaming/test/StreamingExamplesITCase.java,51,,"        final String resultPath = getTempDirPath(""result"");"
82585,./TargetProjects/flink/flink-examples/flink-examples-streaming/src/test/java/org/apache/flink/streaming/test/StreamingExamplesITCase.java,59,,"                    ""--output"", resultPath"
82586,./TargetProjects/flink/flink-examples/flink-examples-table/src/main/java/org/apache/flink/table/examples/java/functions/AdvancedFunctionsExample.java,82,,"        env.createTemporaryView(""customers"", customers);"
82587,./TargetProjects/flink/flink-filesystems/flink-hadoop-fs/src/test/java/org/apache/flink/runtime/fs/hdfs/HadoopConfigLoadingTest.java,68,,"        final File file1 = tempFolder.newFile(""core-site.xml"");"
82588,./TargetProjects/flink/flink-filesystems/flink-hadoop-fs/src/test/java/org/apache/flink/runtime/fs/hdfs/HadoopConfigLoadingTest.java,69,,"        final File file2 = tempFolder.newFile(""hdfs-site.xml"");"
82589,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,589,,"            if (in(""ListBucketResult"")) {"
82590,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,590,,"                if (name.equals(""Contents"")) {"
82591,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,595,,"                if (name.equals(""Owner"")) {"
82592,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,637,,"                if (name.equals(""Name"")) {"
82593,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,643,,"                } else if (name.equals(""Prefix"")) {"
82594,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,660,,"                } else if (name.equals(""Delimiter"")) {"
82595,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,665,,"                } else if (name.equals(""EncodingType"")) {"
82596,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,668,,"                } else if (name.equals(""IsTruncated"")) {"
82597,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,673,,"                    } else if (isTruncatedStr.startsWith(""true"")) {"
82598,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,685,,"                if (name.equals(""Key"")) {"
82599,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,688,,"                } else if (name.equals(""LastModified"")) {"
82600,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,691,,"                } else if (name.equals(""ETag"")) {"
82601,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,694,,"                } else if (name.equals(""Size"")) {"
82602,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,697,,"                } else if (name.equals(""StorageClass"")) {"
82603,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,708,,"                } else if (name.equals(""DisplayName"")) {"
82604,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,711,,"            } else if (in(""ListBucketResult"", ""CommonPrefixes"")) {"
82605,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,796,,"                } else if (name.equals(""NextContinuationToken"")) {"
82606,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,799,,"                } else if (name.equals(""ContinuationToken"")) {"
82607,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,891,,"            if (in(""ListAllMyBucketsResult"")) {"
82608,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,896,,"                if (name.equals(""Bucket"")) {"
82609,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,948,,"            if (in(""AccessControlPolicy"")) {"
82610,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,952,,"            } else if (in(""AccessControlPolicy"", ""AccessControlList"", ""Grant"")) {"
82611,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,952,,"            } else if (in(""AccessControlPolicy"", ""AccessControlList"", ""Grant"")) {"
82612,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,1164,,"                } else if (name.equals(""Error"")) {"
82613,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,1237,,"            if (in(""ListVersionsResult"")) {"
82614,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,1238,,"                if (name.equals(""Version"")) {"
82615,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,1242,,"                } else if (name.equals(""DeleteMarker"")) {"
82616,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,1368,,"            if (in(""WebsiteConfiguration"")) {"
82617,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,1372,,"            } else if (in(""WebsiteConfiguration"", ""RoutingRules"")) {"
82618,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,1373,,"                if (name.equals(""RoutingRule"")) {"
82619,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,1456,,"                if (name.equals(""Status"")) {"
82620,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,1757,,"            if (in(""ListMultipartUploadsResult"")) {"
82621,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,1758,,"                if (name.equals(""Upload"")) {"
82622,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,1762,,"                if (name.equals(""Owner"") || name.equals(""Initiator"")) {"
82623,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,1882,,"            if (in(""ListPartsResult"")) {"
82624,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,1987,,"        private static final String RULE = ""Rule"";"
82625,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,1988,,"        private static final String DESTINATION = ""Destination"";"
82626,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2112,,"            if (in(""Tagging"")) {"
82627,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2113,,"                if (name.equals(""TagSet"")) {"
82628,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2127,,"                if (name.equals(""Tag"")) {"
82629,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2137,,"                } else if (name.equals(""Value"")) {"
82630,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2236,,"            if (in(""DeleteResult"")) {"
82631,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2329,,"            if (in(""LifecycleConfiguration"")) {"
82632,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2340,,"                } else if (name.equals(""Filter"")) {"
82633,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2344,,"                if (name.equals(""And"")) {"
82634,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2487,,"            if (in(""CORSConfiguration"")) {"
82635,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2488,,"                if (name.equals(""CORSRule"")) {"
82636,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2596,,"            if (in(""MetricsConfiguration"")) {"
82637,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2689,,"            if (in(""ListMetricsConfigurationsResult"")) {"
82638,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2831,,"            if (in(""AnalyticsConfiguration"")) {"
82639,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2834,,"                } else if (name.equals(""StorageClassAnalysis"")) {"
82640,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2844,,"                if (name.equals(""DataExport"")) {"
82641,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2858,,"                if (name.equals(""S3BucketDestination"")) {"
82642,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2931,,"                if (name.equals(""Format"")) {"
82643,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,2983,,"            if (in(""ListBucketAnalyticsConfigurationsResult"")) {"
82644,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,3211,,"            if (in(""InventoryConfiguration"")) {"
82645,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,3216,,"                } else if (name.equals(""Schedule"")) {"
82646,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,3218,,"                } else if (name.equals(""OptionalFields"")) {"
82647,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/main/java/com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser.java,3341,,"            if (in(""ListInventoryConfigurationsResult"")) {"
82648,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/test/java/org/apache/flink/fs/s3/common/utils/RefCountedBufferingFileStreamTest.java,47,,"        final byte[] contentToWrite = bytesOf(""hello"");"
82649,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/test/java/org/apache/flink/fs/s3/common/utils/RefCountedFileWithStreamTest.java,43,,"        byte[] content = bytesOf(""hello world"");"
82650,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/test/java/org/apache/flink/fs/s3/common/writer/S3RecoverableFsDataOutputStreamTest.java,92,,"        streamUnderTest.write(bytesOf(""hello world""));"
82651,./TargetProjects/flink/flink-filesystems/flink-s3-fs-base/src/test/java/org/apache/flink/fs/s3/common/writer/S3RecoverableFsDataOutputStreamTest.java,119,,"        streamUnderTest.write(bytesOf(""hello""));"
82652,./TargetProjects/flink/flink-filesystems/flink-s3-fs-hadoop/src/test/java/org/apache/flink/fs/s3hadoop/HadoopS3RecoverableWriterITCase.java,184,,"        final Path path = new Path(basePathForTest, ""part-0"");"
82653,./TargetProjects/flink/flink-filesystems/flink-s3-fs-presto/src/test/java/org/apache/flink/fs/s3presto/PrestoS3FileSystemITCase.java,87,,"            conf.setString(S3_USE_INSTANCE_CREDENTIALS, ""false"");"
82654,./TargetProjects/flink/flink-formats/flink-avro-confluent-registry/src/test/java/org/apache/flink/formats/avro/registry/confluent/RegistryAvroFormatFactoryTest.java,74,,"                ""schema.registry.ssl.keystore.location"", getAbsolutePath(""/test-keystore.jks""));"
82655,./TargetProjects/flink/flink-formats/flink-avro-confluent-registry/src/test/java/org/apache/flink/formats/avro/registry/confluent/RegistryAvroFormatFactoryTest.java,75,,"        EXPECTED_OPTIONAL_PROPERTIES.put(""schema.registry.ssl.keystore.password"", ""123456"");"
82656,./TargetProjects/flink/flink-formats/flink-avro-glue-schema-registry/src/test/java/org/apache/flink/formats/avro/glue/schema/registry/GlueSchemaRegistryInputStreamDeserializerTest.java,121,,"                compressionType.name().equals(""NONE"")"
82657,./TargetProjects/flink/flink-formats/flink-avro/src/main/java/org/apache/flink/formats/avro/typeutils/AvroSerializer.java,173,,"    @SuppressWarnings(""unchecked"")"
82658,./TargetProjects/flink/flink-formats/flink-avro/src/main/java/org/apache/flink/formats/avro/typeutils/AvroSerializerSnapshot.java,80,,"    @SuppressWarnings(""unchecked"")"
82659,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/AvroRecordInputFormatTest.java,226,,"        assertEquals(""name not equal"", TEST_NAME, name);"
82660,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/AvroRecordInputFormatTest.java,230,,"        assertEquals(""element 0 not equal"", TEST_ARRAY_STRING_1, sl.get(0).toString());"
82661,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/AvroRecordInputFormatTest.java,231,,"        assertEquals(""element 1 not equal"", TEST_ARRAY_STRING_2, sl.get(1).toString());"
82662,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/AvroRecordInputFormatTest.java,239,,"        assertEquals(""enum not equal"", TEST_ENUM_COLOR, enumValue);"
82663,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/AvroRecordInputFormatTest.java,252,,"        assertFalse(""expecting second element"", format.reachedEnd());"
82664,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/AvroRecordInputFormatTest.java,335,,"            assertEquals(""name not equal"", TEST_NAME, rec.get(""name"").toString());"
82665,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/AvroRecordInputFormatTest.java,337,,"                    ""enum not equal"", TEST_ENUM_COLOR.toString(), rec.get(""type_enum"").toString());"
82666,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/AvroStreamingFileSinkITCase.java,71,,"                        new Address(1, ""a"", ""b"", ""c"", ""12345""),"
82667,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java,79,,"                        .requiredLong(""category_id"")"
82668,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java,80,,"                        .optionalString(""name"")"
82669,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java,194,,"                        + ""    \""type\"" : [ \""null\"", {\n"""
82670,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java,195,,"                        + ""      \""type\"" : \""record\"",\n"""
82671,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java,197,,"                        + ""      \""fields\"" : [ {\n"""
82672,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java,200,,"                        + ""        \""default\"" : null\n"""
82673,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java,201,,"                        + ""      } ]\n"""
82674,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java,202,,"                        + ""    } ],\n"""
82675,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java,203,,"                        + ""    \""default\"" : null\n"""
82676,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java,204,,"                        + ""  }, {\n"""
82677,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java,371,,"                        + ""      \""type\"" : \""int\"",\n"""
82678,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java,461,,"                        + ""    \""type\"" : {\n"""
82679,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java,464,,"                        + ""    }\n"""
82680,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSerializerEmptyArrayTest.java,37,,"            Book b = new Book(123, ""This is a test book"", 26382648);"
82681,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSerializerSnapshotTest.java,56,,"            SchemaBuilder.record(""name"")"
82682,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSerializerSnapshotTest.java,57,,"                    .namespace(""org.apache.flink"")"
82683,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSerializerUpgradeTest.java,89,,"            record.put(""street"", ""Baker Street"");"
82684,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSerializerUpgradeTest.java,90,,"            record.put(""city"", ""London"");"
82685,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSerializerUpgradeTest.java,92,,"            record.put(""zip"", ""NW1 6XE"");"
82686,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroTypeExtractionTest.java,97,,"                        + ""\""type_date\"": 2014-03-01, \""type_time_millis\"": 12:12:12, \""type_time_micros\"": 00:00:00.123456, """
82687,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroTypeExtractionTest.java,98,,"                        + ""\""type_timestamp_millis\"": 2014-03-01T12:12:12.321Z, """
82688,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroTypeExtractionTest.java,99,,"                        + ""\""type_timestamp_micros\"": 1970-01-01T00:00:00.123456Z, \""type_decimal_bytes\"": \""\\u0007Ð\"", """
82689,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroTypeExtractionTest.java,100,,"                        + ""\""type_decimal_fixed\"": [7, -48]}\n"""
82690,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/utils/AvroTestUtils.java,61,,"                        .setStreet(""Main Street 42"")"
82691,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/utils/AvroTestUtils.java,62,,"                        .setCity(""Test City"")"
82692,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/utils/AvroTestUtils.java,63,,"                        .setState(""Test State"")"
82693,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/utils/AvroTestUtils.java,64,,"                        .setZip(""12345"")"
82694,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/utils/AvroTestUtils.java,76,,"                        .setName(""Charlie"")"
82695,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/utils/AvroTestUtils.java,78,,"                        .setFavoriteColor(""blue"")"
82696,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/utils/AvroTestUtils.java,83,,"                        .setTypeArrayString(Arrays.asList(""hello"", ""world""))"
82697,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/utils/AvroTestUtils.java,83,,"                        .setTypeArrayString(Arrays.asList(""hello"", ""world""))"
82698,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/utils/AvroTestUtils.java,87,,"                        .setTypeMap(Collections.singletonMap(""test"", 12L))"
82699,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/utils/AvroTestUtils.java,96,,"                        .setTypeDate(LocalDate.parse(""2014-03-01""))"
82700,./TargetProjects/flink/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/utils/AvroTestUtils.java,97,,"                        .setTypeTimeMillis(LocalTime.parse(""12:12:12""))"
82701,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvFormatFactoryTest.java,66,,"                        .setNullLiteral(""n/a"")"
82702,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvFormatFactoryTest.java,89,,"                            opts.put(""csv.disable-quote-character"", ""true"");"
82703,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvFormatFactoryTest.java,144,,"                getModifiedOptions(opts -> opts.put(""csv.quote-character"", ""abc""));"
82704,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvFormatFactoryTest.java,173,,"                getModifiedOptions(opts -> opts.put(""csv.field-delimiter"", ""\t""));"
82705,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvRowDataSerDeSchemaTest.java,75,,"        testNullableField(BIGINT(), ""null"", null);"
82706,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvRowDataSerDeSchemaTest.java,96,,"        testNullableField(TIME(0), ""12:12:12"", Time.valueOf(""12:12:12""));"
82707,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvRowDataSerDeSchemaTest.java,115,,"        testNullableField(TIME(3), ""12:12:12.232"", LocalTime.parse(""12:12:12.232""));"
82708,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvRowDataSerDeSchemaTest.java,116,,"        testNullableField(TIME(2), ""12:12:12.23"", LocalTime.parse(""12:12:12.23""));"
82709,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvRowDataSerDeSchemaTest.java,117,,"        testNullableField(TIME(1), ""12:12:12.2"", LocalTime.parse(""12:12:12.2""));"
82710,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvRowDataSerDeSchemaTest.java,221,,"                Row.of(""Test"", null, ""Test""), testDeserialization(true, false, ""Test,null,Test""));"
82711,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvRowDeSerializationSchemaTest.java,50,,"        testNullableField(Types.LONG, ""null"", null);"
82712,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvRowDeSerializationSchemaTest.java,71,,"        testNullableField(Types.SQL_DATE, ""2018-10-12"", Date.valueOf(""2018-10-12""));"
82713,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvRowDeSerializationSchemaTest.java,72,,"        testNullableField(Types.SQL_TIME, ""12:12:12"", Time.valueOf(""12:12:12""));"
82714,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvRowDeSerializationSchemaTest.java,174,,"                Row.of(""Test"", null, ""Test""), testDeserialization(true, false, ""Test,null,Test""));"
82715,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvRowDeSerializationSchemaTest.java,319,,"        final String expectedCsv = ""BEGIN"" + fieldDelimiter + csvValue + fieldDelimiter + ""END\n"";"
82716,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvRowFormatFactoryTest.java,67,,"                        .lineDelimiter(""\r\n"")"
82717,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvRowFormatFactoryTest.java,73,,"                        .nullLiteral(""n/a"")"
82718,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatSplitTest.java,45,,"                ""11$\n1,222\n"" + ""22$2,333\n"","
82719,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatSplitTest.java,49,,"                asList(Row.of(""11\n1"", ""222""), Row.of(""222"", ""333"")));"
82720,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatSplitTest.java,49,,"                asList(Row.of(""11\n1"", ""222""), Row.of(""222"", ""333"")));"
82721,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatSplitTest.java,49,,"                asList(Row.of(""11\n1"", ""222""), Row.of(""222"", ""333"")));"
82722,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatSplitTest.java,69,,"                asList(Row.of(""11\n1"", ""222""), Row.of(""22\n2"", ""333"")));"
82723,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatSplitTest.java,75,,"                ""11好\n1,222\n"" + ""22好\n2,333\n"","
82724,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatSplitTest.java,75,,"                ""11好\n1,222\n"" + ""22好\n2,333\n"","
82725,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatSplitTest.java,114,,"        test(""111,222\r"" + ""222,333\r"", 3, 18, '好', singletonList(Row.of(""222"", ""333"")));"
82726,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatSplitTest.java,120,,"                ""\""111\"",222\r"" + ""222,333\r"","
82727,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatSplitTest.java,137,,"                ""$11$1,222\r"" + ""222,333\r"","
82728,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatSplitTest.java,147,,"                ""123*'4**\r"" + ""123*'4**\n"","
82729,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatSplitTest.java,147,,"                ""123*'4**\r"" + ""123*'4**\n"","
82730,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatSplitTest.java,151,,"                asList(Row.of(""123'4*""), Row.of(""123'4*"")));"
82731,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatSplitTest.java,157,,"                ""'123''4**'\r"" + ""'123''4**'\n"","
82732,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatSplitTest.java,157,,"                ""'123''4**'\r"" + ""'123''4**'\n"","
82733,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatSplitTest.java,161,,"                asList(Row.of(""'123''4*'""), Row.of(""'123''4*'"")));"
82734,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatTest.java,238,,"        assertEquals(""abc"", result.getField(0));"
82735,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatTest.java,239,,"        assertEquals(""def"", result.getField(1));"
82736,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatTest.java,420,,"                "",,,,,,,,\n"""
82737,./TargetProjects/flink/flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/RowCsvInputFormatTest.java,585,,"        File tempFile = File.createTempFile(""CsvReaderQuotedString"", ""tmp"");"
82738,./TargetProjects/flink/flink-formats/flink-hadoop-bulk/src/test/java/org/apache/flink/formats/hadoop/bulk/AbstractFileCommitterTest.java,92,,"        Path targetFilePath = new Path(basePath, ""part-0-0.txt"");"
82739,./TargetProjects/flink/flink-formats/flink-hadoop-bulk/src/test/java/org/apache/flink/formats/hadoop/bulk/AbstractFileCommitterTest.java,165,,"        Path targetFilePath2 = new Path(basePath, ""part-1-1.txt"");"
82740,./TargetProjects/flink/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowSchemaConverter.java,282,,"                    ""Arrays must specify an '"" + ITEMS + ""' property in node: "" + location);"
82741,./TargetProjects/flink/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/debezium/DebeziumJsonDecodingFormat.java,170,,"                DataTypes.FIELD(""source"", DataTypes.MAP(DataTypes.STRING(), DataTypes.STRING())),"
82742,./TargetProjects/flink/flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDataSerDeSchemaTest.java,108,,"        map.put(""element"", 123L);"
82743,./TargetProjects/flink/flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDataSerDeSchemaTest.java,123,,"        root.put(""bool"", true);"
82744,./TargetProjects/flink/flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDataSerDeSchemaTest.java,126,,"        root.put(""int"", intValue);"
82745,./TargetProjects/flink/flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDataSerDeSchemaTest.java,127,,"        root.put(""bigint"", bigint);"
82746,./TargetProjects/flink/flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDataSerDeSchemaTest.java,129,,"        root.put(""name"", name);"
82747,./TargetProjects/flink/flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDataSerDeSchemaTest.java,135,,"        root.put(""timestamp3"", ""1990-10-14T12:12:43.123"");"
82748,./TargetProjects/flink/flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDataSerDeSchemaTest.java,136,,"        root.put(""timestamp9"", ""1990-10-14T12:12:43.123456789"");"
82749,./TargetProjects/flink/flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDataSerDeSchemaTest.java,201,,"                        ""null"","
82750,./TargetProjects/flink/flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDataSerDeSchemaTest.java,444,,"            fail(""expecting exception message: "" + errorMessage);"
82751,./TargetProjects/flink/flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDeserializationSchemaTest.java,65,,"        Date date = Date.valueOf(""1990-10-14"");"
82752,./TargetProjects/flink/flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDeserializationSchemaTest.java,81,,"        root.put(""name"", name);"
82753,./TargetProjects/flink/flink-formats/flink-json/src/test/java/org/apache/flink/table/descriptors/JsonTest.java,57,,"        addPropertyAndVerify(descriptors().get(0), ""format.fail-on-missing-field"", ""DDD"");"
82754,./TargetProjects/flink/flink-formats/flink-json/src/test/java/org/apache/flink/table/descriptors/JsonTest.java,103,,"        props1.put(""format.type"", ""json"");"
82755,./TargetProjects/flink/flink-formats/flink-json/src/test/java/org/apache/flink/table/descriptors/JsonTest.java,103,,"        props1.put(""format.type"", ""json"");"
82756,./TargetProjects/flink/flink-formats/flink-json/src/test/java/org/apache/flink/table/descriptors/JsonTest.java,104,,"        props1.put(""format.property-version"", ""1"");"
82757,./TargetProjects/flink/flink-formats/flink-json/src/test/java/org/apache/flink/table/descriptors/JsonTest.java,111,,"        props2.put(""format.fail-on-missing-field"", ""true"");"
82758,./TargetProjects/flink/flink-formats/flink-orc/src/main/java/org/apache/flink/orc/OrcFilters.java,134,,"                    ""Unsupported predicate [{}] cannot be pushed into OrcFileSystemFormatFactory."","
82759,./TargetProjects/flink/flink-formats/flink-orc/src/test/java/org/apache/flink/orc/OrcColumnarRowFileInputFormatTest.java,85,,"                        ""_col0"", ""_col1"", ""_col2"", ""_col3"", ""_col4"", ""_col5"", ""_col6"", ""_col7"","
82760,./TargetProjects/flink/flink-formats/flink-orc/src/test/java/org/apache/flink/orc/OrcFileSystemFilterTest.java,46,,"                new FieldReferenceExpression(""long1"", DataTypes.BIGINT(), 0, 0);"
82761,./TargetProjects/flink/flink-formats/flink-parquet/src/main/java/org/apache/flink/formats/parquet/vector/ParquetSplitReaderUtil.java,317,,"                        ""Unexpected type: %s"","
82762,./TargetProjects/flink/flink-formats/flink-parquet/src/test/java/org/apache/flink/formats/parquet/ParquetColumnarRowInputFormatTest.java,271,,"                        ""f26"", ""f27"");"
82763,./TargetProjects/flink/flink-formats/flink-parquet/src/test/java/org/apache/flink/formats/parquet/avro/ParquetAvroStreamingFileSinkITCase.java,75,,"                        new Address(1, ""a"", ""b"", ""c"", ""12345""),"
82764,./TargetProjects/flink/flink-fs-tests/src/test/java/org/apache/flink/hdfstests/ContinuousFileProcessingMigrationTest.java,125,,"                new TimestampedFileInputSplit(10, 2, new Path(""test/test2""), 101, 200, null);"
82765,./TargetProjects/flink/flink-fs-tests/src/test/java/org/apache/flink/hdfstests/ContinuousFileProcessingMigrationTest.java,161,,"                        + ""-snapshot"");"
82766,./TargetProjects/flink/flink-fs-tests/src/test/java/org/apache/flink/hdfstests/ContinuousFileProcessingTest.java,179,,"                    createFileAndFillWithData(testBasePath, ""file"", i, ""This is test line."");"
82767,./TargetProjects/flink/flink-fs-tests/src/test/java/org/apache/flink/hdfstests/ContinuousFileProcessingTest.java,179,,"                    createFileAndFillWithData(testBasePath, ""file"", i, ""This is test line."");"
82768,./TargetProjects/flink/flink-fs-tests/src/test/java/org/apache/flink/hdfstests/HDFSTest.java,262,,"        config.setString(HighAvailabilityOptions.HA_MODE, ""ZOOKEEPER"");"
82769,./TargetProjects/flink/flink-java/src/main/java/org/apache/flink/api/java/ExecutionEnvironment.java,469,,"        Preconditions.checkNotNull(filePath, ""The file path may not be null."");"
82770,./TargetProjects/flink/flink-java/src/main/java/org/apache/flink/api/java/functions/SemanticPropUtil.java,559,,"                        ""Invalid format of forwarded field annotation \"""" + s + ""\""."");"
82771,./TargetProjects/flink/flink-java/src/main/java/org/apache/flink/api/java/io/SplitDataProperties.java,209,,"            throw new InvalidProgramException(""DataSource may either be grouped or sorted."");"
82772,./TargetProjects/flink/flink-java/src/main/java/org/apache/flink/api/java/operators/CoGroupOperator.java,250,,"            @SuppressWarnings(""unchecked"")"
82773,./TargetProjects/flink/flink-java/src/main/java/org/apache/flink/api/java/operators/GroupReduceOperator.java,234,,"    @SuppressWarnings(""unchecked"")"
82774,./TargetProjects/flink/flink-java/src/main/java/org/apache/flink/api/java/operators/JoinOperator.java,419,,"                    @SuppressWarnings(""unchecked"")"
82775,./TargetProjects/flink/flink-java/src/main/java/org/apache/flink/api/java/operators/Operator.java,108,,"        @SuppressWarnings(""unchecked"")"
82776,./TargetProjects/flink/flink-java/src/main/java/org/apache/flink/api/java/operators/OperatorTranslation.java,85,,"                @SuppressWarnings(""unchecked"")"
82777,./TargetProjects/flink/flink-java/src/main/java/org/apache/flink/api/java/operators/SingleInputUdfOperator.java,89,,"        @SuppressWarnings(""unchecked"")"
82778,./TargetProjects/flink/flink-java/src/main/java/org/apache/flink/api/java/operators/SortedGrouping.java,65,,"            throw new InvalidProgramException(""Selected sort key is not a sortable type"");"
82779,./TargetProjects/flink/flink-java/src/main/java/org/apache/flink/api/java/operators/TwoInputUdfOperator.java,93,,"        @SuppressWarnings(""unchecked"")"
82780,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/common/operators/base/CoGroupOperatorCollectionTest.java,60,,"                                    .add(""foo"", 1)"
82781,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/common/operators/base/GroupReduceOperatorTest.java,96,,"                                    new Tuple2<>(""foo"", 1),"
82782,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/common/operators/base/GroupReduceOperatorTest.java,98,,"                                    new Tuple2<>(""bar"", 2),"
82783,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/common/operators/base/InnerJoinOperatorBaseTest.java,121,,"                                new Tuple3<>(""bar"", 1.0, 2),"
82784,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/common/operators/base/ReduceOperatorTest.java,76,,"                                    new Tuple2<>(""foo"", 1),"
82785,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/common/operators/base/ReduceOperatorTest.java,78,,"                                    new Tuple2<>(""bar"", 2),"
82786,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/functions/SelectByFunctionsTest.java,62,,"                    ""SelectByMax must return bigger tuple"","
82787,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/functions/SelectByFunctionsTest.java,70,,"            Assert.fail(""No exception should be thrown while comparing both tuples"");"
82788,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/functions/SelectByFunctionsTest.java,178,,"                    ""SelectByMin must return smaller tuple"","
82789,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/functions/SemanticPropUtilTest.java,879,,"        String[] nonForwardedFields = {""f1;f2""};"
82790,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/functions/SemanticPropUtilTest.java,1004,,"        String[] nonForwardedFields = {""f1; f2""};"
82791,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/functions/SemanticPropertiesTranslationTest.java,57,,"        @SuppressWarnings(""unchecked"")"
82792,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/functions/SemanticPropertiesTranslationTest.java,139,,"                .withForwardedFields(""0->1; 2"")"
82793,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/functions/SemanticPropertiesTranslationTest.java,549,,"                .withForwardedFieldsFirst(""0->1;"");"
82794,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/CSVReaderTest.java,172,,"            Assert.fail(""The reader accepted a fields configuration that excludes all fields."");"
82795,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/CsvInputFormatTest.java,85,,"                ""this is|1|2.0|\n"" + ""a test|3|4.0|\n"" + ""#next|5|6.0|\n"" + ""asdadas|5|30.0|\n"";"
82796,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/CsvInputFormatTest.java,85,,"                ""this is|1|2.0|\n"" + ""a test|3|4.0|\n"" + ""#next|5|6.0|\n"" + ""asdadas|5|30.0|\n"";"
82797,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/CsvInputFormatTest.java,154,,"                        assertEquals(""this is"", result.f0);"
82798,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/CsvInputFormatTest.java,160,,"                        assertEquals(""a test"", result.f0);"
82799,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/CsvInputFormatTest.java,263,,"            fail(""Test failed due to a "" + ex.getClass().getName() + "": "" + ex.getMessage());"
82800,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/CsvInputFormatTest.java,378,,"            assertEquals(""abc"", result.f0);"
82801,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/CsvInputFormatTest.java,937,,"        @SuppressWarnings(""unchecked"")"
82802,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/CsvInputFormatTest.java,971,,"        File tempFile = File.createTempFile(""test_contents"", ""tmp"");"
82803,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/CsvInputFormatTest.java,1065,,"        assertEquals(""AAA"", item.field2);"
82804,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/CsvInputFormatTest.java,1067,,"        assertEquals(""BBB"", item.field4);"
82805,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/CsvInputFormatTest.java,1079,,"        File tempFile = File.createTempFile(""CsvReaderPojoType"", ""tmp"");"
82806,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/CsvInputFormatTest.java,1189,,"                        new String[] {""field1"", ""field3"", ""field2"", ""field4""});"
82807,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/CsvInputFormatTest.java,1189,,"                        new String[] {""field1"", ""field3"", ""field2"", ""field4""});"
82808,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/PrimitiveInputFormatTest.java,70,,"            fail(""Test failed due to a "" + ex.getClass().getName() + "": "" + ex.getMessage());"
82809,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/PrintingOutputFormatTest.java,63,,"        printSink.writeRecord(""hello world!"");"
82810,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/PrintingOutputFormatTest.java,65,,"        assertEquals(""Print to System.out"", printSink.toString());"
82811,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/RowCsvInputFormatTest.java,102,,"        assertEquals(""this is"", result.getField(0));"
82812,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/RowCsvInputFormatTest.java,114,,"        assertEquals(""a test"", result.getField(0));"
82813,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/RowCsvInputFormatTest.java,263,,"        assertEquals(""abc"", result.getField(0));"
82814,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/RowCsvInputFormatTest.java,264,,"        assertEquals(""def"", result.getField(1));"
82815,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/RowCsvInputFormatTest.java,265,,"        assertEquals(""ghijk"", result.getField(2));"
82816,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/RowCsvInputFormatTest.java,486,,"                "",,,,,,,,\n"""
82817,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/RowCsvInputFormatTest.java,843,,"        File tempFile = File.createTempFile(""CsvReaderQuotedString"", ""tmp"");"
82818,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/TextInputFormatTest.java,63,,"                File.createTempFile(""TextInputFormatTest"", ""tmp"", temporaryFolder.getRoot());"
82819,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/io/TextInputFormatTest.java,83,,"            assertNotNull(""Expecting first record here"", result);"
82820,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/operator/CoGroupOperatorTest.java,158,,"            ds1.coGroup(ds2).where(""myInt"").equalTo(""myInt"");"
82821,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/operator/CoGroupOperatorTest.java,221,,"        ds1.coGroup(ds2).where(""*"", ""invalidKey"");"
82822,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/operator/CoGroupOperatorTest.java,278,,"            ds1.coGroup(ds2).where(""nested.myInt"").equalTo(""nested.myInt"");"
82823,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/operator/DataSinkTest.java,72,,"            tupleDs.writeAsText(""/tmp/willNotHappen"").sortLocalOutput(0, Order.ANY);"
82824,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/operator/GroupingTest.java,219,,"    @SuppressWarnings(""serial"")"
82825,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/operator/JoinOperatorTest.java,195,,"            ds1.join(ds2).where(""myInt"").equalTo(""myInt"");"
82826,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/operator/JoinOperatorTest.java,224,,"        ds1.join(ds2).where(""myInt"").equalTo(""myString"");"
82827,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/operator/JoinOperatorTest.java,357,,"            ds1.join(ds2).where(""nested.myInt"").equalTo(""intByString.f0"");"
82828,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/operator/JoinOperatorTest.java,645,,"        ds1.join(ds2).where(""*"", ""invalidKey"");"
82829,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/operator/PartitionOperatorTest.java,167,,"        ds.partitionByHash(""number"");"
82830,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/operator/PartitionOperatorTest.java,175,,"        ds.partitionByHash(""number"", ""name"");"
82831,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/operators/translation/DeltaIterationTranslationTest.java,73,,"                @SuppressWarnings(""unchecked"")"
82832,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/operators/translation/DeltaIterationTranslationTest.java,75,,"                        env.fromElements(new Tuple3<Double, Long, String>(3.44, 5L, ""abc""));"
82833,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/operators/translation/DeltaIterationTranslationTest.java,200,,"                fail(""Accepted invalid program."");"
82834,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/operators/translation/DistinctTranslationTest.java,86,,"            fail(""Test caused an error: "" + e.getMessage());"
82835,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/tuple/TupleGenerator.java,157,,"        sb.append(""\t\t/**\n"");"
82836,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/tuple/TupleGenerator.java,161,,"        sb.append(""\t\t * \n"");"
82837,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/tuple/TupleGenerator.java,162,,"        sb.append(""\t\t * @return The projected DataSet.\n"");"
82838,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/tuple/TupleGenerator.java,163,,"        sb.append(""\t\t */\n"");"
82839,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/tuple/TupleGenerator.java,185,,"        sb.append(""\t\t}\n"");"
82840,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/tuple/TupleGenerator.java,209,,"            sb.append("") {\n"");"
82841,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/tuple/TupleGenerator.java,233,,"        File projectOperatorClass = new File(dir, CROSS_OPERATOR_CLASSNAME + "".java"");"
82842,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,76,,"                        new String[] {""--a"", ""--b"", ""--c"", ""--d"", ""--e"", ""--f""});"
82843,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,121,,"                createParameterToolFromArgs(new String[] {""-boolean"", ""true""});"
82844,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,122,,"        Assert.assertEquals(createHashSet(""boolean""), parameter.getUnrequestedParameters());"
82845,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,161,,"        AbstractParameterTool parameter = createParameterToolFromArgs(new String[] {""-byte"", ""1""});"
82846,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,162,,"        Assert.assertEquals(createHashSet(""byte""), parameter.getUnrequestedParameters());"
82847,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,193,,"        exception.expectMessage(""For input string: \""__NO_VALUE_KEY\"""");"
82848,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,202,,"        AbstractParameterTool parameter = createParameterToolFromArgs(new String[] {""-short"", ""2""});"
82849,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,203,,"        Assert.assertEquals(createHashSet(""short""), parameter.getUnrequestedParameters());"
82850,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,243,,"        AbstractParameterTool parameter = createParameterToolFromArgs(new String[] {""-int"", ""4""});"
82851,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,244,,"        Assert.assertEquals(createHashSet(""int""), parameter.getUnrequestedParameters());"
82852,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,284,,"        AbstractParameterTool parameter = createParameterToolFromArgs(new String[] {""-long"", ""8""});"
82853,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,285,,"        Assert.assertEquals(createHashSet(""long""), parameter.getUnrequestedParameters());"
82854,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,325,,"        AbstractParameterTool parameter = createParameterToolFromArgs(new String[] {""-float"", ""4""});"
82855,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,326,,"        Assert.assertEquals(createHashSet(""float""), parameter.getUnrequestedParameters());"
82856,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,367,,"                createParameterToolFromArgs(new String[] {""-double"", ""8""});"
82857,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,368,,"        Assert.assertEquals(createHashSet(""double""), parameter.getUnrequestedParameters());"
82858,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,410,,"                createParameterToolFromArgs(new String[] {""-string"", ""∞""});"
82859,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/AbstractParameterToolTest.java,411,,"        Assert.assertEquals(createHashSet(""string""), parameter.getUnrequestedParameters());"
82860,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/MultipleParameterToolTest.java,40,,"                                    ""--multi"","
82861,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/OptionsTest.java,69,,"        Option option = new Option(""name"");"
82862,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/ParameterToolTest.java,57,,"                                    ""myInput"","
82863,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/ParameterToolTest.java,84,,"        props.setProperty(""expectedCount"", ""15"");"
82864,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/RequiredParametersTest.java,48,,"        required.add(new Option(""berlin""));"
82865,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/RequiredParametersTest.java,85,,"        ParameterTool parameter = ParameterTool.fromArgs(new String[] {""--berlin""});"
82866,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/RequiredParametersTest.java,117,,"                ParameterTool.fromArgs(new String[] {""--berlin"", ""value"", ""--b"", ""another""});"
82867,./TargetProjects/flink/flink-java/src/test/java/org/apache/flink/api/java/utils/RequiredParametersTest.java,135,,"            fail(""Exception thrown "" + e.getMessage());"
82868,./TargetProjects/flink/flink-kubernetes/src/main/java/org/apache/flink/kubernetes/configuration/KubernetesConfigOptions.java,65,,"                    .defaultValue(""default"")"
82869,./TargetProjects/flink/flink-kubernetes/src/main/java/org/apache/flink/kubernetes/configuration/KubernetesConfigOptions.java,72,,"                                    + ""' will be used."");"
82870,./TargetProjects/flink/flink-kubernetes/src/main/java/org/apache/flink/kubernetes/highavailability/KubernetesStateHandleStore.java,128,,"        checkNotNull(key, ""Key in ConfigMap."");"
82871,./TargetProjects/flink/flink-kubernetes/src/test/java/org/apache/flink/kubernetes/KubernetesClusterDescriptorTest.java,136,,"                PipelineOptions.JARS, Collections.singletonList(""local:///path/of/user.jar""));"
82872,./TargetProjects/flink/flink-kubernetes/src/test/java/org/apache/flink/kubernetes/highavailability/KubernetesStateHandleStoreTest.java,113,,"                                fail(""Exception should be thrown."");"
82873,./TargetProjects/flink/flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/decorators/FlinkConfMountDecoratorTest.java,88,,"        KubernetesTestUtils.createTemporyFile(""some data"", flinkConfDir, CONFIG_FILE_LOG4J_NAME);"
82874,./TargetProjects/flink/flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/decorators/MountSecretsDecoratorTest.java,61,,"                        baseFlinkPod.getPodWithoutMainContainer(), SECRET_NAME + ""-volume""));"
82875,./TargetProjects/flink/flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/factory/KubernetesJobManagerFactoryTest.java,121,,"        KubernetesTestUtils.createTemporyFile(""some data"", flinkConfDir, CONFIG_FILE_LOGBACK_NAME);"
82876,./TargetProjects/flink/flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/parameters/AbstractKubernetesParametersTest.java,169,,"            throw new UnsupportedOperationException(""NOT supported"");"
82877,./TargetProjects/flink/flink-kubernetes/src/test/java/org/apache/flink/kubernetes/utils/KubernetesUtilsTest.java,80,,"        testCheckAndUpdatePortConfigOption(""0"", ""6123"", ""6123"");"
82878,./TargetProjects/flink/flink-libraries/flink-cep/src/main/java/org/apache/flink/cep/nfa/compiler/NFACompiler.java,69,,"    @SuppressWarnings(""unchecked"")"
82879,./TargetProjects/flink/flink-libraries/flink-cep/src/main/java/org/apache/flink/cep/operator/CepRuntimeContext.java,186,,"        throw new UnsupportedOperationException(""State is not supported."");"
82880,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/CEPITCase.java,70,,"                        new Event(1, ""barfoo"", 1.0),"
82881,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/CEPITCase.java,71,,"                        new Event(2, ""start"", 2.0),"
82882,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/CEPITCase.java,72,,"                        new Event(3, ""foobar"", 3.0),"
82883,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/CEPITCase.java,73,,"                        new SubEvent(4, ""foo"", 4.0, 1.0),"
82884,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/CEPITCase.java,74,,"                        new Event(5, ""middle"", 5.0),"
82885,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/CEPITCase.java,76,,"                        new SubEvent(7, ""bar"", 3.0, 3.0),"
82886,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/CEPITCase.java,78,,"                        new Event(8, ""end"", 1.0));"
82887,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/NFASerializerUpgradeTest.java,249,,"                    new NodeId(new EventId(42, 42L), ""page""), new DeweyNumber(42));"
82888,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/AfterMatchSkipITCase.java,68,,"                Pattern.<Event>begin(""start"", AfterMatchSkipStrategy.noSkip())"
82889,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/AfterMatchSkipITCase.java,148,,"                            .followedByAny(""end"")"
82890,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/GreedyITCase.java,59,,"                Pattern.<Event>begin(""start"")"
82891,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/GreedyITCase.java,70,,"                        .followedBy(""middle"")"
82892,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/GreedyITCase.java,84,,"                        .followedBy(""end"")"
82893,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/GreedyITCase.java,116,,"        inputEvents.add(new StreamRecord<>(new Event(1, ""dummy"", 1111), 2));"
82894,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/GroupITCase.java,65,,"                Pattern.<Event>begin(""start"")"
82895,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/GroupITCase.java,77,,"                                Pattern.<Event>begin(""middle1"")"
82896,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/GroupITCase.java,89,,"                                        .followedBy(""middle2"")"
82897,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/GroupITCase.java,102,,"                        .followedBy(""end"")"
82898,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/IterativeConditionsITCase.java,46,,"    private final Event startEvent1 = new Event(40, ""start"", 1.0);"
82899,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/IterativeConditionsITCase.java,55,,"    private final Event endEvent = new Event(46, ""end"", 1.0);"
82900,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFAITCase.java,99,,"        Pattern<Event, ?> pattern = Pattern.<Event>begin(""start"").followedBy(""end"");"
82901,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFAITCase.java,99,,"        Pattern<Event, ?> pattern = Pattern.<Event>begin(""start"").followedBy(""end"");"
82902,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFAITCase.java,215,,"                        .followedBy(""middle"")"
82903,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFAITCase.java,508,,"        SubEvent nextOne1 = new SubEvent(44, ""next-one"", 1.0, 2.0);"
82904,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFAITCase.java,532,,"                        .followedByAny(""middle-first"")"
82905,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFAITCase.java,544,,"                        .followedByAny(""middle-second"")"
82906,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFAITCase.java,631,,"                        .followedByAny(""end1"")"
82907,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFAStateAccessTest.java,63,,"                Pattern.<Event>begin(""start"")"
82908,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFAStatusChangeITCase.java,68,,"                Pattern.<Event>begin(""start"")"
82909,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFAStatusChangeITCase.java,106,,"                        .followedBy(""end"")"
82910,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFATest.java,52,,"        streamEvents.add(new StreamRecord<>(new Event(1, ""start"", 1.0), 1L));"
82911,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFATest.java,55,,"        streamEvents.add(new StreamRecord<>(new Event(4, ""end"", 4.0), 4L));"
82912,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFATest.java,202,,"                        .followedByAny(""middle"")"
82913,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NotPatternITCase.java,60,,"                Pattern.<Event>begin(""start"")"
82914,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NotPatternITCase.java,71,,"                        .notNext(""notPattern"")"
82915,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NotPatternITCase.java,82,,"                        .followedByAny(""middle"")"
82916,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NotPatternITCase.java,93,,"                        .followedBy(""end"")"
82917,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NotPatternITCase.java,880,,"                        .notNext(""not c"")"
82918,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/SameElementITCase.java,70,,"                Pattern.<Event>begin(""start"")"
82919,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/SameElementITCase.java,81,,"                        .followedBy(""middle"")"
82920,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/TimesOrMoreITCase.java,58,,"                Pattern.<Event>begin(""start"")"
82921,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/TimesOrMoreITCase.java,69,,"                        .followedBy(""middle"")"
82922,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/TimesOrMoreITCase.java,82,,"                        .followedBy(""end1"")"
82923,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/TimesRangeITCase.java,59,,"                Pattern.<Event>begin(""start"")"
82924,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/TimesRangeITCase.java,70,,"                        .next(""middle"")"
82925,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/TimesRangeITCase.java,83,,"                        .followedBy(""end1"")"
82926,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/UntilConditionITCase.java,71,,"                Pattern.<Event>begin(""start"")"
82927,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/UntilConditionITCase.java,82,,"                        .followedBy(""middle"")"
82928,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/UntilConditionITCase.java,95,,"                        .followedBy(""end"")"
82929,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/compiler/NFACompilerTest.java,72,,"                    return value.getName().equals(""end"");"
82930,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/compiler/NFACompilerTest.java,86,,"                Pattern.<Event>begin(""start"")"
82931,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/compiler/NFACompilerTest.java,88,,"                        .followedBy(""middle"")"
82932,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/sharedbuffer/SharedBufferTest.java,60,,"        expectedPattern1.put(""a[]"", new ArrayList<>());"
82933,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/sharedbuffer/SharedBufferTest.java,99,,"                            ""a[]"", eventIds[1], a10, DeweyNumber.fromString(""1.0""));"
82934,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/sharedbuffer/SharedBufferTest.java,114,,"            DeweyNumber b0Version = DeweyNumber.fromString(""1.0.0"");"
82935,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/sharedbuffer/SharedBufferTest.java,118,,"                            ""a[]"", eventIds[5], aLoop3, DeweyNumber.fromString(""1.1""));"
82936,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/sharedbuffer/SharedBufferTest.java,181,,"                            ""branching"", eventIds[2], start, DeweyNumber.fromString(""1.0""));"
82937,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPMigrationTest.java,104,,"        final Event startEvent = new Event(42, ""start"", 1.0);"
82938,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPMigrationTest.java,105,,"        final SubEvent middleEvent1 = new SubEvent(42, ""foo1"", 1.0, 10.0);"
82939,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPMigrationTest.java,133,,"                            + ""-snapshot"");"
82940,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPMigrationTest.java,155,,"        final Event endEvent = new Event(42, ""end"", 1.0);"
82941,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPMigrationTest.java,192,,"            @SuppressWarnings(""unchecked"")"
82942,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPMigrationTest.java,197,,"            assertEquals(middleEvent1, patternMap1.get(""middle"").get(0));"
82943,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPOperatorTest.java,147,,"            Event startEvent = new Event(42, ""start"", 1.0);"
82944,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPOperatorTest.java,149,,"            Event endEvent = new Event(42, ""end"", 1.0);"
82945,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPOperatorTest.java,152,,"            harness.processElement(new StreamRecord<>(new Event(42, ""foobar"", 1.0), 2L));"
82946,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPOperatorTest.java,167,,"                    new StreamRecord<Event>(new SubEvent(42, ""barfoo"", 1.0, 5.0), 3L));"
82947,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPOperatorTest.java,494,,"                            Whitebox.<ValueState>getInternalState(operator, ""computationStates"");"
82948,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPOperatorTest.java,572,,"        SubEvent middleEvent1 = new SubEvent(42, ""foo1"", 1.0, 10.0);"
82949,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPOperatorTest.java,573,,"        SubEvent middleEvent2 = new SubEvent(42, ""foo2"", 1.0, 10.0);"
82950,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPOperatorTest.java,956,,"                        .followedBy(""middle"")"
82951,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPRescalingTest.java,70,,"        Event startEvent1 = new Event(7, ""start"", 1.0);"
82952,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPRescalingTest.java,71,,"        SubEvent middleEvent1 = new SubEvent(7, ""foo"", 1.0, 10.0);"
82953,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CEPRescalingTest.java,72,,"        Event endEvent1 = new Event(7, ""end"", 1.0);"
82954,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CepProcessFunctionContextTest.java,149,,"        OutputTag<String> timedOut = new OutputTag<String>(""timedOut"") {};"
82955,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CepRuntimeContextTest.java,145,,"            runtimeContext.getState(new ValueStateDescriptor<>(""foobar"", Integer.class, 42));"
82956,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/pattern/PatternTest.java,46,,"        Pattern<Object, ?> pattern = Pattern.begin(""start"").next(""next"").next(""end"");"
82957,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/pattern/PatternTest.java,46,,"        Pattern<Object, ?> pattern = Pattern.begin(""start"").next(""next"").next(""end"");"
82958,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/pattern/PatternTest.java,46,,"        Pattern<Object, ?> pattern = Pattern.begin(""start"").next(""next"").next(""end"");"
82959,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/pattern/PatternTest.java,126,,"                        .next(""subevent"")"
82960,./TargetProjects/flink/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/pattern/PatternTest.java,290,,"                .notNext(""not"")"
82961,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/main/java/org/apache/flink/graph/drivers/parameter/DoubleParameter.java,57,,"                        ""Default value ("""
82962,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/main/java/org/apache/flink/graph/drivers/parameter/DoubleParameter.java,109,,"                        ""Minimum value ("""
82963,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/main/java/org/apache/flink/graph/drivers/parameter/DoubleParameter.java,163,,"                        ""Maximum value ("""
82964,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/main/java/org/apache/flink/graph/drivers/transform/GraphKeyTypeTransform.java,358,,"                throw new IllegalArgumentException(""Cannot cast long value "" + value + "" to byte."");"
82965,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/main/java/org/apache/flink/graph/drivers/transform/LongValueWithProperHashCode.java,75,,"            @SuppressWarnings(""unchecked"")"
82966,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/main/java/org/apache/flink/graph/examples/GSAPageRank.java,83,,"    @SuppressWarnings(""serial"")"
82967,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/main/java/org/apache/flink/graph/examples/GSASingleSourceShortestPaths.java,95,,"    @SuppressWarnings(""serial"")"
82968,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/main/java/org/apache/flink/graph/examples/data/MusicProfilesData.java,38,,"        triplets.add(new Tuple3<>(""user_1"", ""song_1"", 100));"
82969,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/main/java/org/apache/flink/graph/examples/data/MusicProfilesData.java,46,,"        triplets.add(new Tuple3<>(""user_2"", ""song_8"", 3));"
82970,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/main/java/org/apache/flink/graph/examples/data/MusicProfilesData.java,48,,"        triplets.add(new Tuple3<>(""user_3"", ""song_1"", 100));"
82971,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/main/java/org/apache/flink/graph/examples/data/MusicProfilesData.java,59,,"        triplets.add(new Tuple3<>(""user_4"", ""song_1"", 100));"
82972,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/main/java/org/apache/flink/graph/examples/data/MusicProfilesData.java,66,,"        triplets.add(new Tuple3<>(""user_5"", ""song_3"", 300));"
82973,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/test/java/org/apache/flink/graph/RunnerITCase.java,57,,"        expectedOutput(new String[] {""--algorithm"", ""NotAnAlgorithm""}, expected);"
82974,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/test/java/org/apache/flink/graph/RunnerITCase.java,67,,"        expectedOutput(new String[] {""--algorithm"", ""EdgeList""}, expected);"
82975,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/test/java/org/apache/flink/graph/drivers/ClusteringCoefficientITCase.java,74,,"        expectedOutput(parameters(8, ""directed"", ""directed"", ""hash""), expected);"
82976,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/test/java/org/apache/flink/graph/drivers/ClusteringCoefficientITCase.java,85,,"                parameters(8, ""directed"", ""undirected"", ""hash""),"
82977,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/test/java/org/apache/flink/graph/drivers/EdgeListITCase.java,67,,"        return parameters(""CirculantGraph"", output, ""--vertex_count"", ""42"", ""--range0"", ""13:4"");"
82978,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/test/java/org/apache/flink/graph/drivers/EdgeListITCase.java,72,,"        expectedChecksum(getCirculantGraphParameters(""hash""), 168, 0x000000000001ae80);"
82979,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/test/java/org/apache/flink/graph/drivers/EdgeListITCase.java,78,,"        Assume.assumeFalse(idType.equals(""char"") || idType.equals(""nativeChar""));"
82980,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/test/java/org/apache/flink/graph/drivers/EdgeListITCase.java,78,,"        Assume.assumeFalse(idType.equals(""char"") || idType.equals(""nativeChar""));"
82981,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/test/java/org/apache/flink/graph/drivers/EdgeListITCase.java,81,,"                getCirculantGraphParameters(""print""), new Checksum(168, 0x0000004bdcc52cbcL));"
82982,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/test/java/org/apache/flink/graph/drivers/GraphMetricsITCase.java,88,,"        expectedOutput(parameters(7, ""directed"", ""print""), expected);"
82983,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/test/java/org/apache/flink/graph/drivers/TriangleListingITCase.java,123,,"                parameters(8, ""directed"", ""print""), new Checksum(61410, 0x000077d967722c8aL));"
82984,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/test/java/org/apache/flink/graph/drivers/parameter/DoubleParameterTest.java,147,,"        parameter.configure(ParameterTool.fromArgs(new String[] {""--test"", ""12.34""}));"
82985,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/test/java/org/apache/flink/graph/drivers/parameter/LongParameterTest.java,75,,"        parameter.configure(ParameterTool.fromArgs(new String[] {""--test"", ""54""}));"
82986,./TargetProjects/flink/flink-libraries/flink-gelly-examples/src/test/java/org/apache/flink/graph/drivers/parameter/StringParameterTest.java,48,,"        parameter.configure(ParameterTool.fromArgs(new String[] {""--test"", ""Gelly""}));"
82987,./TargetProjects/flink/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/Graph.java,225,,"        @SuppressWarnings({""unchecked"", ""rawtypes""})"
82988,./TargetProjects/flink/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/Graph.java,283,,"                vertices.map(new Tuple2ToVertexMap<>()).name(""Type conversion"");"
82989,./TargetProjects/flink/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/Graph.java,985,,"    @ForwardedFieldsFirst(""f0; f1; f2"")"
82990,./TargetProjects/flink/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/Graph.java,1031,,"                        ""The edge src/trg id could not be found within the vertexIds"");"
82991,./TargetProjects/flink/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/Graph.java,1115,,"                throw new IllegalArgumentException(""Illegal edge direction"");"
82992,./TargetProjects/flink/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/Graph.java,1222,,"                        .withForwardedFields(""f1->f0"")"
82993,./TargetProjects/flink/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/Graph.java,2093,,"                        .name(""Neighbors function"");"
82994,./TargetProjects/flink/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/GraphCsvReader.java,80,,"                new Path(Preconditions.checkNotNull(edgePath, ""The file path may not be null."")),"
82995,./TargetProjects/flink/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/GraphCsvReader.java,113,,"            throw new RuntimeException(""The edge input file cannot be null!"");"
82996,./TargetProjects/flink/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/asm/translate/Translate.java,70,,"    @SuppressWarnings(""unchecked"")"
82997,./TargetProjects/flink/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/gsa/GatherSumApplyIteration.java,160,,"                                    + "" | """
82998,./TargetProjects/flink/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/gsa/GatherSumApplyIteration.java,243,,"                        gatherMapOperator.withBroadcastSet(numberOfVertices, ""number of vertices"");"
82999,./TargetProjects/flink/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/gsa/GatherSumApplyIteration.java,313,,"    @SuppressWarnings(""serial"")"
