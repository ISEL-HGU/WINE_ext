138000,./TargetProjects/jackrabbit-filevault/vault-core/src/test/java/org/apache/jackrabbit/vault/util/DocViewPropertyTest.java,106,,"        assertEquals(p, true, PropertyType.UNDEFINED, ""[hello]"", ""[world]"");"
138001,./TargetProjects/jackrabbit-filevault/vault-core/src/test/java/org/apache/jackrabbit/vault/util/RCPIT.java,70,,"        a.setProperty(""jcr:title"", ""Hello"");"
138002,./TargetProjects/jackrabbit-filevault/vault-core/src/test/java/org/apache/jackrabbit/vault/util/RCPIT.java,74,,"        assertProperty(DST_TEST_NODE_PATH + ""/jcr:title"", ""Hello"");"
138003,./TargetProjects/jackrabbit-filevault/vault-core/src/test/java/org/apache/jackrabbit/vault/util/RCPIT.java,75,,"        assertProperty(DST_TEST_NODE_PATH + ""/jcr:mixinTypes"", new String[]{""mix:title""});"
138004,./TargetProjects/jackrabbit-filevault/vault-core/src/test/java/org/apache/jackrabbit/vault/util/RCPIT.java,75,,"        assertProperty(DST_TEST_NODE_PATH + ""/jcr:mixinTypes"", new String[]{""mix:title""});"
138005,./TargetProjects/jackrabbit-filevault/vault-core/src/test/java/org/apache/jackrabbit/vault/util/RCPIT.java,141,,"        assertProperty(SRC_TEST_NODE_PATH + ""/jcr:content/p0"", ""0"");"
138006,./TargetProjects/jackrabbit-filevault/vault-diff/src/test/java/org/apache/jackrabbit/vault/util/diff/Diff3Test.java,68,,"        String result = ""a,b,"" + conflict(""c,d,e,f,"", ""e,f,"", """") + ""g,"";"
138007,./TargetProjects/jackrabbit-filevault/vault-diff/src/test/java/org/apache/jackrabbit/vault/util/diff/DiffTest.java,32,,"        doTest(""base.txt"", ""left.txt"", 0, ""base-left-0.txt"");"
138008,./TargetProjects/jackrabbit-filevault/vault-diff/src/test/java/org/apache/jackrabbit/vault/util/diff/DiffTest.java,32,,"        doTest(""base.txt"", ""left.txt"", 0, ""base-left-0.txt"");"
138009,./TargetProjects/jackrabbit-filevault/vault-rcp/src/main/java/org/apache/jackrabbit/vault/rcp/impl/RcpServlet.java,185,,"                        throw new IllegalArgumentException(""Need task id."");"
138010,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/DocumentViewParserValidatorTest.java,77,,"        validator.setDocumentViewXmlValidators(Collections.singletonMap(""docviewid"", docViewXmlValidator));"
138011,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/DocumentViewParserValidatorTest.java,89,,"        Mockito.when(docViewXmlValidator.validate(Mockito.any(), Mockito.any(), Mockito.anyBoolean())).thenReturn(Collections.singleton(new ValidationMessage(ValidationMessageSeverity.ERROR, ""startDocView"")));"
138012,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/DocumentViewParserValidatorTest.java,91,,"            Collection<ValidationMessage> messages = validator.validateJcrData(input, Paths.get(""apps"", "".content.xml""), Paths.get(""""), nodePathsAndLineNumbers);"
138013,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/DocumentViewParserValidatorTest.java,91,,"            Collection<ValidationMessage> messages = validator.validateJcrData(input, Paths.get(""apps"", "".content.xml""), Paths.get(""""), nodePathsAndLineNumbers);"
138014,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/DocumentViewParserValidatorTest.java,94,,"                    new ValidationViolation(""docviewid"", ValidationMessageSeverity.ERROR, ""startDocView"", Paths.get(""apps/.content.xml""), Paths.get(""""), ""/apps"", 19, 35, null"
138015,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/DocumentViewParserValidatorTest.java,114,,"                    new DocViewProperty(NameConstants.JCR_PRIMARYTYPE.toString(), new String[] { ""sling:Folder"" }, false,"
138016,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/DocumentViewParserValidatorTest.java,123,,"            properties.put(""{}attribute1"", new DocViewProperty(""{}attribute1"", new String[] { ""value1"" }, false, PropertyType.UNDEFINED));"
138017,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/DocumentViewParserValidatorTest.java,124,,"            node = new DocViewNode(""{}somepath"", ""somepath"", null, properties, null, JcrConstants.NT_UNSTRUCTURED);"
138018,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/DocumentViewParserValidatorTest.java,183,,"            Collection<ValidationMessage> messages = validator.validateJcrData(input, Paths.get(""apps"", ""child1.xml""), Paths.get(""""), nodePathsAndLineNumbers);"
138019,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/DocumentViewParserValidatorTest.java,227,,"            Collection<ValidationMessage> messages = validator.validateJcrData(input, Paths.get(""apps"", ""child2"", "".content.xml""), Paths.get(""""), nodePathsAndLineNumbers);"
138020,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/ValidationExecutorFactoryTest.java,71,,"        Mockito.when(validatorFactory1.getId()).thenReturn(""id1"");"
138021,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/ValidationExecutorFactoryTest.java,75,,"        Mockito.when(validatorFactory2.getId()).thenReturn(""id2"");"
138022,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/ValidationExecutorFactoryTest.java,79,,"        Mockito.when(validatorFactory3.getId()).thenReturn(""id3"");"
138023,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/ValidationExecutorTest.java,127,,"        CapturingInputStreamFromArgumentAnswer<Collection<ValidationMessage>> answer2 = new CapturingInputStreamFromArgumentAnswer<>(StandardCharsets.US_ASCII, 0, Collections.singleton(new ValidationMessage(ValidationMessageSeverity.WARN, ""error1"")));"
138024,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/ValidationExecutorTest.java,129,,"        Mockito.when(metaInfPathValidator.validateMetaInfPath(Mockito.any(), Mockito.any(), Mockito.anyBoolean())).thenReturn(Collections.singleton(new ValidationMessage(ValidationMessageSeverity.ERROR, ""patherror"")));"
138025,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/ValidationExecutorTest.java,131,,"            Collection<ValidationViolation> messages = validate(input, executor, Paths.get(""""), ""vault/genericfile.txt"", true);"
138026,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/ValidationExecutorTest.java,135,,"            Assert.assertEquals(""Test"", answer.getValue());"
138027,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/ValidationExecutorTest.java,176,,"                    new ValidationViolation(""genericjcrdataid"", ValidationMessageSeverity.WARN, ""error1"", Paths.get(""apps"",""genericfile.xml""), Paths.get(""""), null, 0, 0, null),"
138028,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/ValidationViolationTest.java,43,,"        messages.add(new ValidationMessage(ValidationMessageSeverity.DEBUG, ""message1""));"
138029,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/ValidationViolationTest.java,45,,"        messages.add(new ValidationViolation(""myid"", ValidationMessageSeverity.ERROR, ""message3"", Paths.get(""child""), null, ""nodepath1"", 3, 4, myThrowable2));"
138030,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/ValidationViolationTest.java,45,,"        messages.add(new ValidationViolation(""myid"", ValidationMessageSeverity.ERROR, ""message3"", Paths.get(""child""), null, ""nodepath1"", 3, 4, myThrowable2));"
138031,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/ValidationViolationTest.java,45,,"        messages.add(new ValidationViolation(""myid"", ValidationMessageSeverity.ERROR, ""message3"", Paths.get(""child""), null, ""nodepath1"", 3, 4, myThrowable2));"
138032,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/ValidationViolationTest.java,61,,"        Collection<ValidationViolation> violations = ValidationViolation.wrapMessages(""myid2"", messages, Paths.get(""child1""), Paths.get(""base1""), ""nodepath2"", 10, 20);"
138033,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/ValidationViolationTest.java,61,,"        Collection<ValidationViolation> violations = ValidationViolation.wrapMessages(""myid2"", messages, Paths.get(""child1""), Paths.get(""base1""), ""nodepath2"", 10, 20);"
138034,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/ValidationViolationTest.java,61,,"        Collection<ValidationViolation> violations = ValidationViolation.wrapMessages(""myid2"", messages, Paths.get(""child1""), Paths.get(""base1""), ""nodepath2"", 10, 20);"
138035,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/ValidationViolationTest.java,61,,"        Collection<ValidationViolation> violations = ValidationViolation.wrapMessages(""myid2"", messages, Paths.get(""child1""), Paths.get(""base1""), ""nodepath2"", 10, 20);"
138036,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/AccessControlValidatorTest.java,46,,"        props.put(""prop1"", new DocViewProperty(""prop1"", new String[] { ""value1"" } , false, PropertyType.STRING));"
138037,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/AccessControlValidatorTest.java,46,,"        props.put(""prop1"", new DocViewProperty(""prop1"", new String[] { ""value1"" } , false, PropertyType.STRING));"
138038,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/AccessControlValidatorTest.java,48,,"        DocViewNode node = new DocViewNode(""somename"", ""somename"", null, props, null, ""rep:ACL"");"
138039,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/AccessControlValidatorTest.java,49,,"        Collection<ValidationMessage> messages = validator.validate(node,  new NodeContextImpl(""/apps/test/deep"", Paths.get("".content.xml""), Paths.get(""base"")), false);"
138040,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/AccessControlValidatorTest.java,49,,"        Collection<ValidationMessage> messages = validator.validate(node,  new NodeContextImpl(""/apps/test/deep"", Paths.get("".content.xml""), Paths.get(""base"")), false);"
138041,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/AccessControlValidatorTest.java,49,,"        Collection<ValidationMessage> messages = validator.validate(node,  new NodeContextImpl(""/apps/test/deep"", Paths.get("".content.xml""), Paths.get(""base"")), false);"
138042,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/AdvancedFilterValidatorTest.java,147,,"        try (InputStream input = this.getClass().getResourceAsStream(""/filter.xml"")) {"
138043,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/AdvancedFilterValidatorTest.java,162,,"        MatcherAssert.assertThat(validator.validateJcrPath(getStandardNodeContext(""/apps/test""), false, false),"
138044,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/AdvancedFilterValidatorTest.java,189,,"        MatcherAssert.assertThat(validator.validateJcrPath(getStandardNodeContext(""/apps""), true, false),"
138045,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/AdvancedFilterValidatorTest.java,239,,"        ValidationExecutorTest.assertViolation(validator.validateJcrPath(getStandardNodeContext(""/apps/test4""), false, false),"
138046,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/DependencyValidatorTest.java,67,,"        resolvedPackageInfos.add(getPackageInfo(""group1:package1:0.1"", ""/filter.xml"", null));"
138047,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/DocumentViewParserValidatorTest.java,31,,"        Path filePath = Paths.get(""test"", ""parent"", "".content.xml"");"
138048,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/EmptyElementsValidatorTest.java,58,,"        props.put(""prop1"", new DocViewProperty(""prop1"", new String[] { ""value1"" } , false, PropertyType.STRING));"
138049,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/EmptyElementsValidatorTest.java,61,,"        DocViewNode node = new DocViewNode(""jcr:root"", ""jcr:root"", null, Collections.emptyMap(), null, null);"
138050,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/EmptyElementsValidatorTest.java,62,,"        MatcherAssert.assertThat(validator.validate(node, new NodeContextImpl(""/apps/test/node1"", Paths.get(""node1""), Paths.get("""")), false), AnyValidationMessageMatcher.noValidationInCollection());"
138051,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/MergeLimitationsValidatorTest.java,57,,"        props.put(""prop1"", new DocViewProperty(""prop1"", new String[] { ""value1"" } , false, PropertyType.STRING));"
138052,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/MergeLimitationsValidatorTest.java,59,,"        DocViewNode node = new DocViewNode(""somename"", ""somename"", null, props, null, ""nt:unstructured"");"
138053,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/OakIndexDefinitionValidatorTest.java,73,,"        props.put(""includedPaths"", new DocViewProperty(""includedPaths"", new String[] { ""/home]"" }, true, PropertyType.STRING));"
138054,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/OakIndexDefinitionValidatorTest.java,77,,"                Paths.get(""_oak_index"", ""testindex"", "".content.xml""), Paths.get("""")), true);"
138055,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/OakIndexDefinitionValidatorTest.java,105,,"        props.put(""rep:policy"", new DocViewProperty(""rep:policy"", new String[] { ""/home]"" }, true, PropertyType.STRING));"
138056,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/PackageTypeValidatorTest.java,79,,"        MatcherAssert.assertThat(validator.validate(new NodeContextImpl(""/apps/some/node"", Paths.get(""""), Paths.get(""""))), AnyValidationMessageMatcher.noValidationInCollection());"
138057,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/PackageTypeValidatorTest.java,86,,"        MatcherAssert.assertThat(validator.validate(new NodeContextImpl(""/apps/config/someconfigpid"", Paths.get(""apps"", ""config"", ""someconfigpid.xml""), Paths.get(""""))), AnyValidationMessageMatcher.noValidationInCollection());"
138058,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/PackageTypeValidatorTest.java,86,,"        MatcherAssert.assertThat(validator.validate(new NodeContextImpl(""/apps/config/someconfigpid"", Paths.get(""apps"", ""config"", ""someconfigpid.xml""), Paths.get(""""))), AnyValidationMessageMatcher.noValidationInCollection());"
138059,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/PackageTypeValidatorTest.java,86,,"        MatcherAssert.assertThat(validator.validate(new NodeContextImpl(""/apps/config/someconfigpid"", Paths.get(""apps"", ""config"", ""someconfigpid.xml""), Paths.get(""""))), AnyValidationMessageMatcher.noValidationInCollection());"
138060,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/PackageTypeValidatorTest.java,86,,"        MatcherAssert.assertThat(validator.validate(new NodeContextImpl(""/apps/config/someconfigpid"", Paths.get(""apps"", ""config"", ""someconfigpid.xml""), Paths.get(""""))), AnyValidationMessageMatcher.noValidationInCollection());"
138061,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/PackageTypeValidatorTest.java,102,,"        ValidationExecutorTest.assertViolation(validator.validate(new NodeContextImpl(""/apps/some/node"", Paths.get(""""), Paths.get(""""))), new ValidationMessage(ValidationMessageSeverity.ERROR, String.format(PackageTypeValidator.MESSAGE_APP_CONTENT, PackageType.CONTENT, ""'apps' or 'libs'"")));"
138062,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/PackageTypeValidatorTest.java,107,,"        MatcherAssert.assertThat(validator.validate(new NodeContextImpl(""/etc/packages/some/sub/package.zip"", Paths.get(""etc"", ""packages"", ""some"", ""sub"", ""package.zip""), Paths.get(""""))), AnyValidationMessageMatcher.noValidationInCollection());"
138063,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/PackageTypeValidatorTest.java,109,,"        ValidationExecutorTest.assertViolation(validator.validate(new NodeContextImpl(""/apps/install/mybundle-123.jar"", Paths.get(""apps"", ""install"", ""mybundle-123.jar""), Paths.get(""""))), "
138064,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/PackageTypeValidatorTest.java,134,,"        MatcherAssert.assertThat(validator.validate(new NodeContextImpl(""/apps/some/node"", Paths.get(""some"", ""file1""), Paths.get(""base""))), AnyValidationMessageMatcher.noValidationInCollection());"
138065,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/JcrNodeTypeMetaDataImplTest.java,117,,"                createSimpleNodeContext(""myname""), ""my:nodeType1"");"
138066,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/JcrNodeTypeMetaDataImplTest.java,130,,"        try (InputStream input = this.getClass().getResourceAsStream(""/simple-restricted-nodetypes.cnd"");"
138067,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/JcrNodeTypeMetaDataImplTest.java,138,,"        NodeContext nodeContext = createSimpleNodeContext(""name"");"
138068,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/JcrNodeTypeMetaDataImplTest.java,196,,"                nodeContext, ""my:nodeType2"");"
138069,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/JcrNodeTypeMetaDataImplTest.java,198,,"        NodeContext nodeContext2 = createSimpleNodeContext(""name2"");"
138070,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/JcrNodeTypeMetaDataImplTest.java,273,,"                ntManagerProvider.getItemDefinitionProvider(),ValidationMessageSeverity.ERROR, ValidationMessageSeverity.ERROR,  ""property"", false,"
138071,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/JcrNodeTypeMetaDataImplTest.java,274,,"                ValueFactoryImpl.getInstance().createValue(""foo"")), AnyValidationMessageMatcher.noValidationInCollection());"
138072,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/JcrNodeTypeMetaDataImplTest.java,298,,"                String.format(JcrNodeTypeMetaDataImpl.MESSAGE_MANDATORY_PROPERTY_WITH_WRONG_TYPE, ""my:mandatoryProperty"", ""String"", ""Date"","
138073,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/JcrNodeTypeMetaDataImplTest.java,375,,"                                ""String"", ""types [my:nodeType3]"", JcrNodeTypeMetaDataImpl.CONSTRAINT_PROPERTY_NOT_ALLOWED),"
138074,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/JcrNodeTypeMetaDataImplTest.java,404,,"                ""my:constrainedStringProperty"", false, ValueFactoryImpl.getInstance().createValue(""prefix1foo"")),"
138075,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/NodeTypeValidatorTest.java,87,,"        NodeContext nodeContext = new NodeContextImpl(""/apps/test/node4"", Paths.get(""node4""), Paths.get(""""));"
138076,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/NodeTypeValidatorTest.java,87,,"        NodeContext nodeContext = new NodeContextImpl(""/apps/test/node4"", Paths.get(""node4""), Paths.get(""""));"
138077,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/NodeTypeValidatorTest.java,90,,"        DocViewProperty property = new DocViewProperty(""{}prop1"", new String[] { ""value1"" }, false, PropertyType.STRING);"
138078,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/NodeTypeValidatorTest.java,93,,"                new String[] { ""nt:unstructured"" }, false, PropertyType.STRING));"
138079,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/NodeTypeValidatorTest.java,96,,"        DocViewNode node = new DocViewNode(""jcr:root"", ""jcr:root"", null, props, null, ""nt:unstructured"");"
138080,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/NodeTypeValidatorTest.java,101,,"        node = new DocViewNode(""test"", ""test"", null, props, null, ""nt:folder"");"
138081,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/NodeTypeValidatorTest.java,128,,"        NodeContext nodeContext = new NodeContextImpl(""/apps"", Paths.get(""apps""), Paths.get(""""));"
138082,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/NodeTypeValidatorTest.java,130,,"        nodeContext = new NodeContextImpl(""/apps/test"", Paths.get(""apps"", ""test""), Paths.get(""""));"
138083,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/NodeTypeValidatorTest.java,149,,"        NodeContext nodeContext = new NodeContextImpl(""/apps/test"", Paths.get(""apps"",""test"", "".content.xml""), Paths.get(""""));"
138084,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/NodeTypeValidatorTest.java,158,,"        nodeContext = new NodeContextImpl(""/apps/test/child"", Paths.get(""apps"", ""test"", ""child""), Paths.get(""""));"
138085,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/NodeTypeValidatorTest.java,158,,"        nodeContext = new NodeContextImpl(""/apps/test/child"", Paths.get(""apps"", ""test"", ""child""), Paths.get(""""));"
138086,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/NodeTypeValidatorTest.java,164,,"                new String[] { ""rep:SystemUser"" }, false, PropertyType.STRING));"
138087,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/NodeTypeValidatorTest.java,212,,"        DocViewProperty prop = new DocViewProperty(""{}invalid-prop"", new String[] { ""some-value"" }, false, PropertyType.STRING);"
138088,./TargetProjects/jackrabbit-filevault/vault-validation/src/test/java/org/apache/jackrabbit/vault/validation/spi/impl/nodetype/NodeTypeValidatorTest.java,282,,"        MatcherAssert.assertThat(validator.validate(node, new NodeContextImpl(""/apps/test"", Paths.get(""/some/path""), Paths.get("""")), false),"
138089,./TargetProjects/jackrabbit-filevault/vault-vlt/src/main/java/org/apache/jackrabbit/vault/vlt/VltContext.java,337,,"                stdout.printf(""%s %s%n"", action.letter, path);"
138090,./TargetProjects/jackrabbit-filevault/vault-vlt/src/main/java/org/apache/jackrabbit/vault/vlt/VltFile.java,429,,"            throw exception(""Error while copying files."", e);"
138091,./TargetProjects/jackrabbit-filevault/vault-vlt/src/main/java/org/apache/jackrabbit/vault/vlt/meta/xml/XmlEntryInfo.java,221,,"            attrs.addAttribute("""", AN_NAME, """", ""CDATA"", name);"
138092,./TargetProjects/jackrabbit-filevault/vault-vlt/src/test/java/org/apache/jackrabbit/vault/vlt/meta/AbstractTestEntries.java,72,,"        assertFalse(entries.hasEntry(""foo.png""));"
138093,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/main/java/org/apache/jackrabbit/filevault/maven/packaging/ValidateFilesMojo.java,214,,"        getLog().info(""Scanning baseDir "" + getProjectRelativeFilePath(baseDir) + ""..."");"
138094,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/main/java/org/apache/jackrabbit/filevault/maven/packaging/VaultMojo.java,93,,"    @Parameter(property = ""vault.failOnUncoveredSourceFiles"", required = true, defaultValue = ""false"")"
138095,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/AbstractMetadataPackageMojoTest.java,37,,"        base = Paths.get(""my"", ""base"");"
138096,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/AbstractValidateMojoTest.java,66,,"        validatorsSettings.put(""id1"", new ValidatorSettings().addOption(""id1"", ""foo""));"
138097,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/AbstractValidateMojoTest.java,66,,"        validatorsSettings.put(""id1"", new ValidatorSettings().addOption(""id1"", ""foo""));"
138098,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/AbstractValidateMojoTest.java,68,,"        validatorsSettings.put(""id3:subpackage"", new ValidatorSettings().addOption(""id3"", ""foo""));"
138099,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/AbstractValidateMojoTest.java,91,,"        List<String> list = Arrays.asList(""someEntryA"", "".content.xml"", ""someEntryB"", "".content.xml"");"
138100,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/MavenBasedPackageDependencyTest.java,31,,"        Assert.assertEquals(new SimpleArtifact(""group1"", ""name1"", null, ""zip""), MavenBasedPackageDependency.uriToMavenCoordinates(new URI(""maven"", ""group1:name1"", null)));"
138101,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/SimpleEmbeddedTest.java,41,,"        artifacts.add(new SimpleArtifact(""mygroupid"", ""artifact1"", ""compile""));"
138102,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/SimpleEmbeddedTest.java,41,,"        artifacts.add(new SimpleArtifact(""mygroupid"", ""artifact1"", ""compile""));"
138103,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/SimpleEmbeddedTest.java,45,,"        artifacts.add(new SimpleArtifact(""mygroupid"", ""artifact1"", ""test"", ""bundle""));"
138104,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/ValidateFilesMojoTest.java,33,,"        expectedPaths.add(Paths.get(""apps""));"
138105,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/ValidateFilesMojoTest.java,34,,"        expectedPaths.add(Paths.get(""apps"", "".content.xml""));"
138106,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/ValidateFilesMojoTest.java,36,,"        expectedPaths.add(Paths.get(""apps"", ""huhu""));"
138107,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/ValidateFilesMojoTest.java,37,,"        expectedPaths.add(Paths.get(""apps"", ""test""));"
138108,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/impl/FilterTest.java,32,,"            ""com.day.cq"","
138109,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/impl/FilterTest.java,33,,"            ""foo-bar"","
138110,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/impl/FilterTest.java,34,,"            ""com.day.cq.impl"","
138111,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/impl/FilterTest.java,35,,"            ""artifact1-test"","
138112,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/impl/FilterTest.java,36,,"            ""artifact2-test"""
138113,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/it/FilteringIT.java,46,,"        verify(""simple-filter"", true, true, null)"
138114,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/it/FilteringIT.java,49,,"            .verifyExpectedFileChecksum(""jcr_root/apps/bar/test1.properties"", ""10791371"")"
138115,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/it/FilteringIT.java,50,,"            .verifyExpectedFileChecksum(""jcr_root/apps/foo/test2.properties"", ""7563f01d"")"
138116,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/it/FilteringIT.java,51,,"            .verifyExpectedFileChecksum(""jcr_root/apps/foo/child/.content.xml"", ""d9b1ad2"");"
138117,./TargetProjects/jackrabbit-filevault-package-maven-plugin/src/test/java/org/apache/jackrabbit/filevault/maven/packaging/it/PropertyConfigurationIT.java,43,,"                .verifyPackageProperty(""requiresRoot"", ""true"")"
138118,./TargetProjects/jackrabbit-oak/oak-auth-external/src/main/java/org/apache/jackrabbit/oak/spi/security/authentication/external/basic/DefaultSyncContext.java,247,,"                timer.mark(""sync"");"
138119,./TargetProjects/jackrabbit-oak/oak-auth-external/src/main/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/ExternalLoginModuleFactory.java,65,,"    @SuppressWarnings(""UnusedDeclaration"")"
138120,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/basic/DefaultSyncContextTest.java,361,,"        setExternalID(u, ""differentIDP"");"
138121,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/basic/DefaultSyncContextTest.java,984,,"        Value anyValue = valueFactory.createValue(""any"");"
138122,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/ExternalLoginModuleTest.java,156,,"        loginModule.initialize(new Subject(), cbh, Collections.emptyMap(), ImmutableMap.of(PARAM_IDP_NAME, ""idp"", PARAM_SYNC_HANDLER_NAME, ""syncHandler""));"
138123,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/ExternalLoginModuleTest.java,156,,"        loginModule.initialize(new Subject(), cbh, Collections.emptyMap(), ImmutableMap.of(PARAM_IDP_NAME, ""idp"", PARAM_SYNC_HANDLER_NAME, ""syncHandler""));"
138124,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/ExternalLoginModuleTest.java,262,,"        sharedState.put(SHARED_KEY_ATTRIBUTES, Collections.singletonMap(""att"", ""value""));"
138125,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/ExternalLoginModuleTest.java,262,,"        sharedState.put(SHARED_KEY_ATTRIBUTES, Collections.singletonMap(""att"", ""value""));"
138126,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/ExternalLoginModuleTest.java,484,,"        sharedState.put(SHARED_KEY_PRE_AUTH_LOGIN, new PreAuthenticatedLogin(""local""));"
138127,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/TokenExternalLoginModuleTest.java,94,,"        assertTrue(credentialsSupport.setAttributes(creds, ImmutableMap.<String, Object>of("".token"", """")));"
138128,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/jmx/DelegateeTest.java,136,,"                ID_TEST_USER, ""nsa"","
138129,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/jmx/DelegateeTest.java,155,,"                ID_TEST_USER, ""ERR"","
138130,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/jmx/DelegateeTest.java,174,,"        sync(new TestIdentityProvider.TestUser(""third"", idp.getName()), idp);"
138131,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/jmx/SyncMBeanImplTest.java,124,,"        SyncMBeanImpl syncMBean = createSyncMBeanImpl(""invalid"", idp.getName());"
138132,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/jmx/SyncMBeanImplTest.java,163,,"        assertResultMessages(result, ImmutableMap.of(TestIdentityProvider.ID_TEST_USER, ""nsa"", TestIdentityProvider.ID_SECOND_USER, ""nsa""));"
138133,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/jmx/SyncMBeanImplTest.java,175,,"        assertResultMessages(result, ImmutableMap.of(TestIdentityProvider.ID_TEST_USER, ""upd"", TestIdentityProvider.ID_SECOND_USER, ""nsa""));"
138134,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/jmx/SyncMBeanImplTest.java,206,,"        sync(new TestIdentityProvider.TestUser(""thirdUser"", idp.getName()), idp);"
138135,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/jmx/SyncMBeanImplTest.java,222,,"            assertResultMessages(result, a.getID(), ""del"");"
138136,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/jmx/SyncMBeanImplTest.java,236,,"        assertResultMessages(result, UserConstants.DEFAULT_ANONYMOUS_ID, ""for"");"
138137,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/jmx/SyncMBeanImplTest.java,293,,"        assertResultMessages(result, TestIdentityProvider.ID_EXCEPTION, ""ERR"");"
138138,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/jmx/SyncMBeanImplTest.java,310,,"        assertResultMessages(result, TestIdentityProvider.ID_TEST_USER, ""add"");"
138139,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/principal/ExternalIdentityConflictHandlerTest.java,95,,"        assertSame(ThreeWayConflictHandler.Resolution.IGNORED, handler.addExistingNode(mock(NodeBuilder.class), ""name"", mock(NodeState.class), mock(NodeState.class)));"
138140,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/principal/SyncConfigTrackerTest.java,168,,"        when(mappingRef.getProperty(PARAM_IDP_NAME)).thenReturn(""idp"");"
138141,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/principal/SyncConfigTrackerTest.java,248,,"        when(mappingRef2.getProperty(PARAM_IDP_NAME)).thenReturn(""idp2"");"
138142,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/principal/SyncHandlerMappingTrackerTest.java,50,,"        assertTrue(Iterables.isEmpty(tracker.getIdpNames(""testSH"")));"
138143,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/principal/SyncHandlerMappingTrackerTest.java,55,,"        when(ref.getProperty(PARAM_IDP_NAME)).thenReturn(""testIDP"");"
138144,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/principal/SyncHandlerMappingTrackerTest.java,77,,"        when(ref2.getProperty(PARAM_IDP_NAME)).thenReturn(""testIDP-2"");"
138145,./TargetProjects/jackrabbit-oak/oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/principal/SyncHandlerMappingTrackerTest.java,85,,"        when(ref3.getProperty(PARAM_IDP_NAME)).thenReturn(""testIDP-3"");"
138146,./TargetProjects/jackrabbit-oak/oak-auth-ldap/src/test/java/org/apache/jackrabbit/oak/security/authentication/ldap/LdapServerClassLoader.java,51,,"                serverClass.getResourceAsStream(""/"".concat(serverClass.getCanonicalName()).replace('.', '/').concat("".class"")));"
138147,./TargetProjects/jackrabbit-oak/oak-auth-ldap/src/test/java/org/apache/jackrabbit/oak/security/authentication/ldap/impl/LdapIdentityPropertiesTest.java,35,,"        properties.put(""a"", ""value"");"
138148,./TargetProjects/jackrabbit-oak/oak-auth-ldap/src/test/java/org/apache/jackrabbit/oak/security/authentication/ldap/impl/LdapIdentityProviderOsgiTest.java,47,,"        provider.fromExternalIdentityRef(new ExternalIdentityRef(""id"", ""anotherName""));"
138149,./TargetProjects/jackrabbit-oak/oak-auth-ldap/src/test/java/org/apache/jackrabbit/oak/security/authentication/ldap/impl/LdapIdentityProviderTest.java,103,,"        assertNotNull(""User 1 must exist"", user);"
138150,./TargetProjects/jackrabbit-oak/oak-auth-ldap/src/test/java/org/apache/jackrabbit/oak/security/authentication/ldap/impl/LdapProviderConfigTest.java,131,,"                PARAM_ADMIN_POOL_MIN_EVICTABLE_IDLE_TIME, ""invalid"","
138151,./TargetProjects/jackrabbit-oak/oak-auth-ldap/src/test/java/org/apache/jackrabbit/oak/security/authentication/ldap/impl/LdapProviderConfigTest.java,242,,"                config.getMemberOfSearchFilter(""cn=bar""));"
138152,./TargetProjects/jackrabbit-oak/oak-auth-ldap/src/test/java/org/apache/jackrabbit/oak/security/authentication/ldap/impl/LdapProviderConfigTest.java,325,,"        config.setEnabledProtocols(""TLSv1.3"", ""TLSv1.2"");"
138153,./TargetProjects/jackrabbit-oak/oak-auth-ldap/src/test/java/org/apache/jackrabbit/oak/security/authentication/ldap/impl/LdapProviderConfigTest.java,325,,"        config.setEnabledProtocols(""TLSv1.3"", ""TLSv1.2"");"
138154,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugAccessControlManagerTest.java,90,,"                SUPPORTED_PATH + ""/subtree"", readPrivs,"
138155,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugConfigurationOsgiTest.java,103,,"        context.registerInjectActivateService(cugExclude, ImmutableMap.of(""principalNames"", new String[] {EXCLUDED_PRINCIPAL_NAME}));"
138156,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugConfigurationTest.java,123,,"                CugConstants.PARAM_CUG_SUPPORTED_PATHS, ""/content"");"
138157,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugConfigurationTest.java,125,,"        PermissionProvider pp = cc.getPermissionProvider(root, ""default"", ImmutableSet.of(EveryonePrincipal.getInstance()));"
138158,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugConfigurationWithMountsTest.java,38,,"        MountInfoProvider mip = Mounts.newBuilder().mount(""mnt"", AbstractCugTest.SUPPORTED_PATH).build();"
138159,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugContextTest.java,45,,"            ""/content"","
138160,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugEvaluationTest.java,78,,"        content = root.getTree(""/content"");"
138161,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugEvaluationTest.java,80,,"        a = root.getTree(""/content/a"");"
138162,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugEvaluationTest.java,81,,"        c = root.getTree(""/content/a/b/c"");"
138163,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugExcludeDefaultTest.java,69,,"        Set<Principal> principals = ImmutableSet.of((SystemUserPrincipal) () -> ""test"");"
138164,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugExcludeImplTest.java,62,,"        Map<String, Object> m = ImmutableMap.of(""principalNames"", principalNames);"
138165,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugImportBaseTest.java,71,,"    static final String XML_CUG_POLICY = ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>"" +"
138166,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugImportBaseTest.java,72,,"            ""<sv:node sv:name=\""rep:cugPolicy\"" xmlns:mix=\""http://www.jcp.org/jcr/mix/1.0\"" xmlns:nt=\""http://www.jcp.org/jcr/nt/1.0\"" xmlns:fn_old=\""http://www.w3.org/2004/10/xpath-functions\"" xmlns:fn=\""http://www.w3.org/2005/xpath-functions\"" xmlns:xs=\""http://www.w3.org/2001/XMLSchema\"" xmlns:sv=\""http://www.jcp.org/jcr/sv/1.0\"" xmlns:rep=\""internal\"" xmlns:jcr=\""http://www.jcp.org/jcr/1.0\"">"" +"
138167,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugImportBaseTest.java,73,,"                ""<sv:property sv:name=\""jcr:primaryType\"" sv:type=\""Name\""><sv:value>rep:CugPolicy</sv:value></sv:property>"" +"
138168,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugImportBaseTest.java,74,,"                ""<sv:property sv:name=\""rep:principalNames\"" sv:type=\""String\"" sv:multiple=\""true\"">"" +"
138169,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugImportBaseTest.java,75,,"                    ""<sv:value>"" + TEST_GROUP_PRINCIPAL_NAME + ""</sv:value>"" +"
138170,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugImportBaseTest.java,75,,"                    ""<sv:value>"" + TEST_GROUP_PRINCIPAL_NAME + ""</sv:value>"" +"
138171,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugImportBaseTest.java,77,,"                ""</sv:property>"" +"
138172,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugImportBaseTest.java,78,,"            ""</sv:node>"";"
138173,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugImporterTest.java,65,,"        createCug(root, SUPPORTED_PATH, ""principalName"");"
138174,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugPermissionProviderTest.java,72,,"        PATH_INCUG_MAP.put(""/content/a"", true);"
138175,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugPermissionProviderTest.java,74,,"        PATH_INCUG_MAP.put(""/content/a/b"", true);"
138176,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugPermissionProviderTest.java,76,,"        PATH_INCUG_MAP.put(""/content/aa"", false);"
138177,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugPermissionProviderTest.java,93,,"            ""/content/a/b/c"", ""/content/a/b/c/jcr:primaryType"","
138178,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugPermissionProviderTest.java,128,,"        createCug(""/content/aa/bb"", testGroupPrincipal);"
138179,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugPolicyImplTest.java,149,,"                new PrincipalImpl(""unknown""));"
138180,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugTreePermissionTest.java,68,,"        NodeState ns = treeProvider.asNodeState(root.getTree(SUPPORTED_PATH + ""/subtree""));"
138181,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugUtilTest.java,70,,"        for (String path : new String[] {PathUtils.ROOT_PATH, INVALID_PATH, UNSUPPORTED_PATH, SUPPORTED_PATH + ""/subtree"", SUPPORTED_PATH2, SUPPORTED_PATH3}) {"
138182,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugUtilTest.java,148,,"        MountInfoProvider mip = Mounts.newBuilder().mount(""private"", ""/libs"", ""/apps"", ""/nonCugPath"").build();"
138183,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugUtilTest.java,148,,"        MountInfoProvider mip = Mounts.newBuilder().mount(""private"", ""/libs"", ""/apps"", ""/nonCugPath"").build();"
138184,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/HiddenTest.java,104,,"        assertFalse(pp.isGranted(readOnlyRoot.getTree(SUPPORTED_PATH + ""/:hidden""), null, Permissions.READ));"
138185,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/MoveRenameTest.java,91,,"        String destPath = SUPPORTED_PATH3 + ""/content"";"
138186,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/MoveRenameTest.java,224,,"        String destPath = ""/content/a2"";"
138187,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/NestedCugHookRootSupportedTest.java,43,,"        createCug(""/content"", getTestGroupPrincipal());"
138188,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/NestedCugHookRootSupportedTest.java,44,,"        createCug(""/content2"", EveryonePrincipal.getInstance());"
138189,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/NestedCugHookTest.java,74,,"        createCug(""/content"", getTestGroupPrincipal());"
138190,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/NestedCugHookTest.java,90,,"        assertNestedCugs(root, getRootProvider(), ROOT_PATH, false, ""/content/a"", ""/content/aa/bb"", ""/content2"");"
138191,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/NestedCugHookTest.java,90,,"        assertNestedCugs(root, getRootProvider(), ROOT_PATH, false, ""/content/a"", ""/content/aa/bb"", ""/content2"");"
138192,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/NestedCugHookTest.java,90,,"        assertNestedCugs(root, getRootProvider(), ROOT_PATH, false, ""/content/a"", ""/content/aa/bb"", ""/content2"");"
138193,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/NestedCugHookTest.java,91,,"        assertNestedCugs(root, getRootProvider(), ""/content/a"", true, ""/content/a/b/c"");"
138194,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/NestedCugHookTest.java,105,,"        Tree newTree = TreeUtil.addChild(root.getTree(SUPPORTED_PATH2), ""child"", NT_OAK_UNSTRUCTURED);"
138195,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/NestedCugHookTest.java,356,,"        Iterable newCnes = Collections.singleton(new MemoryChildNodeEntry("":hidden"", child));"
138196,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/NestedCugHookTest.java,361,,"        nch.processCommit(before, after, new CommitInfo(""sid"", null));"
138197,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/NestedCugHookTest.java,413,,"        createCug(""/content/subtree"", EveryonePrincipal.getInstance());"
138198,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/NestedCugHookTest.java,423,,"        NodeBuilder cugNode = before.getChildNode(""content"").getChildNode(""rep:cugPolicy"");"
138199,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/NestedCugHookTest.java,423,,"        NodeBuilder cugNode = before.getChildNode(""content"").getChildNode(""rep:cugPolicy"");"
138200,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/RestoreParentNestedCugTest.java,105,,"        createCug(""/content/a"", testGroupPrincipal3);"
138201,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/SupportedPathsTest.java,35,,"        SupportedPaths supportedPaths = new SupportedPaths(ImmutableSet.of(""/content""));"
138202,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/SupportedPathsTest.java,39,,"        pathMap.put(""/content/a"", true);"
138203,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/SupportedPathsTest.java,41,,"        pathMap.put(""/content/a/b"", true);"
138204,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/SupportedPathsTest.java,45,,"        pathMap.put(""/jcr:system"", false);"
138205,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/SupportedPathsTest.java,47,,"        pathMap.put(""/testRoot"", false);"
138206,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/SupportedPathsTest.java,48,,"        pathMap.put(""/some/other/path"", false);"
138207,./TargetProjects/jackrabbit-oak/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/VersionTest.java,273,,"        String path = PathUtils.concat(vh.getPath(), ""1.0"", JCR_FROZENNODE, ""b/c"");"
138208,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/AccessControlManagerLimitedUserTest.java,557,,"            Tree entry = TreeUtil.addChild(policyTree, ""entry"", NT_REP_PRINCIPAL_ENTRY);"
138209,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ContextImplTest.java,48,,"        assertTrue(CTX.definesTree(mockTree(""anyEntry"", NT_REP_PRINCIPAL_ENTRY, true)));"
138210,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ContextImplTest.java,56,,"        assertFalse(CTX.definesTree(mockTree(""anyName"", ""anyNt"", false)));"
138211,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ContextImplTest.java,110,,"        Tree t = mockTree(REP_RESTRICTIONS, NT_REP_RESTRICTIONS, false, ""anyResidualProperty"");"
138212,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/FilterImplTest.java,130,,"        Principal principal = new TestPrincipal(""name"", PathUtils.getParentPath(supportedPath));"
138213,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ImportBaseTest.java,159,,"        String xml = ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>"" +"
138214,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ImportBaseTest.java,160,,"                ""<sv:node sv:name=\""""+REP_PRINCIPAL_POLICY+""\"" xmlns:mix=\""http://www.jcp.org/jcr/mix/1.0\"" xmlns:nt=\""http://www.jcp.org/jcr/nt/1.0\"" xmlns:fn_old=\""http://www.w3.org/2004/10/xpath-functions\"" xmlns:fn=\""http://www.w3.org/2005/xpath-functions\"" xmlns:xs=\""http://www.w3.org/2001/XMLSchema\"" xmlns:sv=\""http://www.jcp.org/jcr/sv/1.0\"" xmlns:rep=\""internal\"" xmlns:jcr=\""http://www.jcp.org/jcr/1.0\"">"" +"
138215,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ImportBaseTest.java,160,,"                ""<sv:node sv:name=\""""+REP_PRINCIPAL_POLICY+""\"" xmlns:mix=\""http://www.jcp.org/jcr/mix/1.0\"" xmlns:nt=\""http://www.jcp.org/jcr/nt/1.0\"" xmlns:fn_old=\""http://www.w3.org/2004/10/xpath-functions\"" xmlns:fn=\""http://www.w3.org/2005/xpath-functions\"" xmlns:xs=\""http://www.w3.org/2001/XMLSchema\"" xmlns:sv=\""http://www.jcp.org/jcr/sv/1.0\"" xmlns:rep=\""internal\"" xmlns:jcr=\""http://www.jcp.org/jcr/1.0\"">"" +"
138216,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ImportBaseTest.java,161,,"                    ""<sv:property sv:name=\""""+JCR_PRIMARYTYPE+""\"" sv:type=\""Name\""><sv:value>""+NT_REP_PRINCIPAL_POLICY+""</sv:value></sv:property>"" +"
138217,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ImportBaseTest.java,161,,"                    ""<sv:property sv:name=\""""+JCR_PRIMARYTYPE+""\"" sv:type=\""Name\""><sv:value>""+NT_REP_PRINCIPAL_POLICY+""</sv:value></sv:property>"" +"
138218,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ImportBaseTest.java,161,,"                    ""<sv:property sv:name=\""""+JCR_PRIMARYTYPE+""\"" sv:type=\""Name\""><sv:value>""+NT_REP_PRINCIPAL_POLICY+""</sv:value></sv:property>"" +"
138219,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ImportBaseTest.java,162,,"                ""</sv:node>"";"
138220,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ImportBaseTest.java,175,,"                    ""<sv:property sv:name=\""""+REP_PRINCIPAL_NAME+""\"" sv:type=\""String\""><sv:value>"" + testPrincipalName + ""</sv:value></sv:property>"" +"
138221,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ImportBaseTest.java,269,,"                    ""<sv:node sv:name=\""entry0\"">"" +"
138222,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ImportBaseTest.java,271,,"                        ""<sv:property sv:name=\""""+REP_PRIVILEGES+""\"" sv:type=\""Name\"" sv:multiple=\""true\"">"" +"
138223,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ImportBaseTest.java,272,,"                            ""<sv:value>""+JCR_READ+""</sv:value>"" +"
138224,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ImportBaseTest.java,272,,"                            ""<sv:value>""+JCR_READ+""</sv:value>"" +"
138225,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ImportBaseTest.java,273,,"                        ""</sv:property>"" +"
138226,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/ImportBaseTest.java,321,,"                        ""<sv:property sv:name=\""""+REP_EFFECTIVE_PATH+""\"" sv:type=\""Path\""><sv:value>/content</sv:value></sv:property>"" +"
138227,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/PolicyValidatorLimitedUserTest.java,104,,"            fail(""CommitFailedException expected; type ACCESS; code 3"");"
138228,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/PolicyValidatorTest.java,145,,"        createRootValidator(mockNodeState).propertyAdded(PropertyStates.createProperty(""any"", NT_REP_PRINCIPAL_POLICY));"
138229,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/PrincipalBasedAuthorizationConfigurationOsgiTest.java,62,,"        context.registerInjectActivateService(new FilterProviderImpl(), ImmutableMap.of(""path"", SUPPORTED_PATH));"
138230,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/PrincipalBasedAuthorizationConfigurationOsgiTest.java,78,,"        context.registerInjectActivateService(mipService, ImmutableMap.of(""mountedPaths"", new String[] {SUPPORTED_PATH + ""/some/subtree"", ""/etc""}));"
138231,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/PrincipalBasedAuthorizationConfigurationTest.java,85,,"        assertTrue(new PrincipalBasedAuthorizationConfiguration().getCommitHooks(""wspName"").isEmpty());"
138232,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/PrincipalBasedPermissionProviderTest.java,74,,"        setupContentTrees(NT_FOLDER, childPath + ""/folder"", TEST_OAK_PATH + ""/folder"");"
138233,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/PrincipalPolicyImplTest.java,296,,"                ImmutableSet.of(new RestrictionDefinitionImpl(""oak:mandatory"", Type.LONG, true)));"
138234,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/PrincipalPolicyImporterTest.java,515,,"        importer.startChildInfo(mockNodeInfo(""entry"", getJcrName(NT_REP_PRINCIPAL_ENTRY)), mockPropInfos(""/anyPath"", PrivilegeConstants.JCR_READ_ACCESS_CONTROL));"
138235,./TargetProjects/jackrabbit-oak/oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/PrincipalPolicyImporterTest.java,526,,"        importer.startChildInfo(mockNodeInfo(""entry"", getJcrName(NT_REP_PRINCIPAL_ENTRY)), mockPropInfos(""/effective/path""));"
138236,./TargetProjects/jackrabbit-oak/oak-benchmarks-lucene/src/main/java/org/apache/jackrabbit/oak/benchmark/HybridIndexTest.java,201,,"                    oak.withAsyncIndexing(""async"", asyncInterval);"
138237,./TargetProjects/jackrabbit-oak/oak-benchmarks-lucene/src/main/java/org/apache/jackrabbit/oak/scalability/suites/ScalabilityNodeRelationshipSuite.java,177,,"                OakIndexUtils.propertyIndexDefinition(session, ""customIndexActivity"","
138238,./TargetProjects/jackrabbit-oak/oak-benchmarks/src/main/java/org/apache/jackrabbit/oak/benchmark/BundlingNodeTest.java,189,,"        Node content = asset.addNode(""jcr:content"", NT_OAK_UNSTRUCTURED);"
138239,./TargetProjects/jackrabbit-oak/oak-benchmarks/src/main/java/org/apache/jackrabbit/oak/benchmark/ConcurrentReadTest.java,94,,"                    session.getRootNode().getNode(ROOT_NODE_NAME + ""/node"" + a + ""/node"" + b);"
138240,./TargetProjects/jackrabbit-oak/oak-benchmarks/src/main/java/org/apache/jackrabbit/oak/benchmark/FacetSearchTest.java,246,,"                t.setProperty(""jcr:primaryType"", ""nt:unstructured"", NAME);"
138241,./TargetProjects/jackrabbit-oak/oak-benchmarks/src/main/java/org/apache/jackrabbit/oak/benchmark/FacetSearchTest.java,246,,"                t.setProperty(""jcr:primaryType"", ""nt:unstructured"", NAME);"
138242,./TargetProjects/jackrabbit-oak/oak-benchmarks/src/main/java/org/apache/jackrabbit/oak/benchmark/ManyUserReadTest.java,51,,"            User user = userManager.createUser(""user""+i, ""user""+i);"
138243,./TargetProjects/jackrabbit-oak/oak-benchmarks/src/main/java/org/apache/jackrabbit/oak/benchmark/PropertyFullTextTest.java,181,,"                t.setProperty(""jcr:primaryType"", ""nt:unstructured"", NAME);"
138244,./TargetProjects/jackrabbit-oak/oak-benchmarks/src/main/java/org/apache/jackrabbit/oak/benchmark/PropertyFullTextTest.java,181,,"                t.setProperty(""jcr:primaryType"", ""nt:unstructured"", NAME);"
138245,./TargetProjects/jackrabbit-oak/oak-benchmarks/src/main/java/org/apache/jackrabbit/oak/benchmark/ReadManyTest.java,92,,"                Node child = node.addNode(""node"" + i);"
138246,./TargetProjects/jackrabbit-oak/oak-benchmarks/src/main/java/org/apache/jackrabbit/oak/benchmark/ReplicaCrashResilienceTest.java,59,,"                    new SimpleCredentials(""admin"", ""admin"".toCharArray()));"
138247,./TargetProjects/jackrabbit-oak/oak-benchmarks/src/main/java/org/apache/jackrabbit/oak/benchmark/ReplicaCrashResilienceTest.java,169,,"                                System.out.println(""Reader: Closer than 100, waiting...level1=""+level1+"", level2=""+level2);"
138248,./TargetProjects/jackrabbit-oak/oak-blob-cloud-azure/src/main/java/org/apache/jackrabbit/oak/blob/cloud/azure/blobstorage/AzureBlobStoreBackend.java,234,,"        if (null == identifier) throw new NullPointerException(""identifier"");"
138249,./TargetProjects/jackrabbit-oak/oak-blob-cloud-azure/src/test/java/org/apache/jackrabbit/oak/blob/cloud/azure/blobstorage/AzureDataStoreTest.java,287,,"            assertEquals(""identifier"", e.getMessage());"
138250,./TargetProjects/jackrabbit-oak/oak-blob-cloud-azure/src/test/java/org/apache/jackrabbit/oak/blob/cloud/azure/blobstorage/AzureDataStoreTest.java,294,,"        DataIdentifier identifier = new DataIdentifier(""fake"");"
138251,./TargetProjects/jackrabbit-oak/oak-blob-cloud-azure/src/test/java/org/apache/jackrabbit/oak/blob/cloud/azure/blobstorage/AzureDataStoreTest.java,434,,"            backend.getRecord(new DataIdentifier(""invalid""));"
138252,./TargetProjects/jackrabbit-oak/oak-blob-cloud-azure/src/test/java/org/apache/jackrabbit/oak/blob/cloud/azure/blobstorage/AzureDataStoreTest.java,521,,"            backend.addMetadataRecord(testFile, ""name"");"
138253,./TargetProjects/jackrabbit-oak/oak-blob-cloud-azure/src/test/java/org/apache/jackrabbit/oak/blob/cloud/azure/blobstorage/UtilsTest.java,38,,"        properties.put(AzureConstants.AZURE_SAS, ""sas"");"
138254,./TargetProjects/jackrabbit-oak/oak-blob-cloud-azure/src/test/java/org/apache/jackrabbit/oak/blob/cloud/azure/blobstorage/UtilsTest.java,39,,"        properties.put(AzureConstants.AZURE_BLOB_ENDPOINT, ""endpoint"");"
138255,./TargetProjects/jackrabbit-oak/oak-blob-cloud/src/main/java/org/apache/jackrabbit/oak/blob/cloud/s3/S3Backend.java,503,,"        checkArgument(!Strings.isNullOrEmpty(name), ""name should not be empty"");"
138256,./TargetProjects/jackrabbit-oak/oak-blob-cloud/src/test/java/org/apache/jackrabbit/oak/blob/cloud/s3/TestS3DataStore.java,224,,"        s3ds.addMetadataRecord((InputStream)null, ""name"");"
138257,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/main/java/org/apache/jackrabbit/oak/plugins/blob/datastore/FSBackend.java,197,,"        checkArgument(!Strings.isNullOrEmpty(name), ""name should not be empty"");"
138258,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/main/java/org/apache/jackrabbit/oak/plugins/blob/datastore/OakFileDataStore.java,150,,"        checkArgument(!Strings.isNullOrEmpty(name), ""name should not be empty"");"
138259,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/BlobGCTest.java,621,,"            builder.child(""dbu"" + i).setProperty(""x"", blob);"
138260,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/BlobStoreStatsTest.java,57,,"        stats.uploadCompleted(""foo"");"
138261,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/ConsolidatedDataStoreStatsTest.java,318,,"        final String id2 = getIdForInputStream(getStream(""testContents2""));"
138262,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/ConsolidatedDataStoreStatsTest.java,393,,"        final String id3 = getIdForInputStream(getStream(""testContents3""));"
138263,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/DataStoreCacheUpgradeUtilsTest.java,56,,"        setupUploads(""1111110"", ""2222220"", ""3333330"");"
138264,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/DataStoreCacheUpgradeUtilsTest.java,56,,"        setupUploads(""1111110"", ""2222220"", ""3333330"");"
138265,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/DataStoreCacheUpgradeUtilsTest.java,56,,"        setupUploads(""1111110"", ""2222220"", ""3333330"");"
138266,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/DataStoreCacheUpgradeUtilsTest.java,77,,"        setupDownloads(""4444440"", ""5555550"", ""6666660"");"
138267,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/DataStoreCacheUpgradeUtilsTest.java,77,,"        setupDownloads(""4444440"", ""5555550"", ""6666660"");"
138268,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/DataStoreCacheUpgradeUtilsTest.java,77,,"        setupDownloads(""4444440"", ""5555550"", ""6666660"");"
138269,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/FileCacheTest.java,211,,"        LOG.info(""Async tasks finished"");"
138270,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/datastore/AbstractDataStoreTest.java,110,,"            LOG.info(""Testcase: "" + this.getClass().getName()"
138271,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/datastore/AbstractDataStoreTest.java,115,,"                + (System.currentTimeMillis() - start) + ""]ms"");"
138272,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/datastore/AbstractDataStoreTest.java,117,,"            LOG.error(""error:"", e);"
138273,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/datastore/ActiveDeletionTrackerStoreTest.java,154,,"        assertEquals(""Incorrect elements after reconciliation"", Sets.newHashSet(toReconcile), retrieved);"
138274,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/datastore/DataStoreBlobStoreStatsTest.java,611,,"        dsbs.addMetadataRecord(getTestInputStream(), ""meta-1"");"
138275,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/datastore/DataStoreBlobStoreTest.java,198,,"        BlobId blobId = new BlobId(""abc""+BlobId.SEP+""123"");"
138276,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/datastore/DataStoreBlobStoreTest.java,198,,"        BlobId blobId = new BlobId(""abc""+BlobId.SEP+""123"");"
138277,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/datastore/FSBackendIT.java,108,,"            LOG.info(""Testcase: "" + this.getClass().getName() + ""#testSingleThread, testDir="" + dataStoreDir);"
138278,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/datastore/FSBackendIT.java,111,,"                System.currentTimeMillis() - start) + ""]ms"");"
138279,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/datastore/FSBackendIT.java,113,,"            LOG.error(""error"", e);"
138280,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/datastore/SharedDataStoreTest.java,209,,"            fds.addMetadataRecord(testFile, ""name"");"
138281,./TargetProjects/jackrabbit-oak/oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/migration/AbstractMigratorTest.java,104,,"            assertPropertyOnTheNewStore(root.getChildNode(""node"" + i).getProperty(""prop""));"
138282,./TargetProjects/jackrabbit-oak/oak-commons/src/main/java/org/apache/jackrabbit/oak/commons/GuavaDeprecation.java,62,,"                    LOG.error(String.format(message, ticket), new Exception(""call stack""));"
138283,./TargetProjects/jackrabbit-oak/oak-commons/src/main/java/org/apache/jackrabbit/oak/commons/PathUtils.java,57,,"        assert isValid(path) : ""Invalid path [""+path+""]"";"
138284,./TargetProjects/jackrabbit-oak/oak-commons/src/main/java/org/apache/jackrabbit/oak/commons/PathUtils.java,280,,"        assert isValid(parentPath) : ""Invalid parent path [""+parentPath+""]"";"
138285,./TargetProjects/jackrabbit-oak/oak-commons/src/main/java/org/apache/jackrabbit/oak/commons/PropertiesUtil.java,324,,"                                + "") of property "" + name + "" of class """
138286,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/BufferTest.java,39,,"        String testString = ""Test string"";"
138287,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/FileLineDifferenceIteratorTest.java,75,,"        assertDiff(""a,b,c"", ""a,b,c"", Collections.<String> emptyList());"
138288,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/FileLineDifferenceIteratorTest.java,91,,"        assertDiff(""a,b,d,e"", ""a,b,c"", asList(""c""));"
138289,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/FileLineDifferenceIteratorTest.java,92,,"        assertDiff(""a,b,d,e,f"", ""a,b,c,f"", asList(""c""));"
138290,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/FileLineDifferenceIteratorTest.java,176,,"        assertThat(""marked: "" + marked + "" all: "" + all, ImmutableList.copyOf(itr), is(diff));"
138291,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/FileLineDifferenceIteratorTest.java,176,,"        assertThat(""marked: "" + marked + "" all: "" + all, ImmutableList.copyOf(itr), is(diff));"
138292,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/PathUtilsTest.java,74,,"        assertEquals(2, PathUtils.getDepth(""/a/b""));"
138293,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/PathUtilsTest.java,83,,"        assertEquals(""a/b/c"", PathUtils.concatRelativePaths(""a"", ""b"", ""c""));"
138294,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/PerfLoggerIT.java,58,,"        perfLogger.end(start, 100, ""message"", ""argument"");"
138295,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/PerfLoggerIT.java,58,,"        perfLogger.end(start, 100, ""message"", ""argument"");"
138296,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/PerfLoggerTest.java,54,,"        perfLogger.end(start, -1, ""message"", ""argument"");"
138297,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/PerfLoggerTest.java,54,,"        perfLogger.end(start, -1, ""message"", ""argument"");"
138298,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/PerfLoggerTest.java,65,,"        long start = perfLogger.start(""Start message"");"
138299,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/PropertiesUtilTest.java,45,,"        assertEquals(2.0, PropertiesUtil.toDouble(""abc"", 2.0), 0);"
138300,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/PropertiesUtilTest.java,81,,"        assertEquals(""hallo"", PropertiesUtil.toObject(""hallo""));"
138301,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/json/JsopTest.java,45,,"                key(""string"").value(""/Date(0)/"")."
138302,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/json/JsopTest.java,73,,"        assertEquals(""true"", t.read(JsopReader.TRUE));"
138303,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/json/JsopTest.java,75,,"        assertEquals(""false"", t.read(JsopReader.FALSE));"
138304,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/json/JsopTest.java,136,,"        assertEquals(""null"", t.readRawValue());"
138305,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/json/JsopTest.java,157,,"        assertEquals(""test"", JsopTokenizer.decode(""test""));"
138306,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/junit/LogCustomizerTest.java,47,,"                        ""org.apache.jackrabbit.oak.commons.junit.LogCustomizerTest"")"
138307,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/junit/LogCustomizerTest.java,52,,"            LOG.debug(""test message"");"
138308,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/junit/LogCustomizerTest.java,85,,"                .exactlyMatches(""Test Message"")"
138309,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/properties/SystemPropertySupplierTest.java,33,,"        assertEquals(Boolean.TRUE, SystemPropertySupplier.create(""foo"", Boolean.TRUE).usingSystemPropertyReader((n) -> null).get());"
138310,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/sort/EscapeUtilsTest.java,35,,"        assertEquals(""abc"", EscapeUtils.escapeLineBreak(""abc""));"
138311,./TargetProjects/jackrabbit-oak/oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/sort/EscapeUtilsTest.java,37,,"        assertEquals(""some text with multi byte 田中 characters."","
138312,./TargetProjects/jackrabbit-oak/oak-core-spi/src/main/java/org/apache/jackrabbit/oak/cache/CacheLIRS.java,179,,"    @SuppressWarnings(""unchecked"")"
138313,./TargetProjects/jackrabbit-oak/oak-core-spi/src/main/java/org/apache/jackrabbit/oak/namepath/JcrPathParser.java,128,,"                        listener.error('\'' + jcrPath + ""' is not a valid path. '"" + c +"
138314,./TargetProjects/jackrabbit-oak/oak-core-spi/src/main/java/org/apache/jackrabbit/oak/spi/GuavaDeprecation.java,67,,"                    Exception ex = new Exception(""call stack"");"
138315,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/cache/CacheTest.java,623,,"        assertNull(map.putIfAbsent(1, ""Hello""));"
138316,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/cache/CacheTest.java,626,,"        assertEquals(""Hello"", map.putIfAbsent(1, ""Hallo""));"
138317,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/commons/jmx/ManagementOperationTest.java,65,,"        ManagementOperation<Integer> op = ManagementOperation.done(""test"", 42);"
138318,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/osgi/OsgiUtilTest.java,46,,"        lookup((ComponentContext) null, ""name"");"
138319,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/osgi/OsgiUtilTest.java,106,,"        assertEquals(""value"", lookup(context, ""name""));"
138320,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/osgi/OsgiUtilTest.java,154,,"        doReturn(null).when(dictionary).get(""cname"");"
138321,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/osgi/OsgiUtilTest.java,157,,"        doReturn(null).when(bundleContext).getProperty(""fname"");"
138322,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/osgi/OsgiUtilTest.java,222,,"        assertEquals(""(foo=bar)"", appendLdapFilterAttribute(b, ""foo"", ""bar"").toString());"
138323,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/descriptors/AggregatingDescriptorsTest.java,114,,"        assertFalse(aggregator.isSingleValueDescriptor(""foo""));"
138324,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/mount/FragmentMatcherTest.java,32,,"        assertResult(PARTIAL_MATCH, ""/content"", ""/"");"
138325,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/mount/FragmentMatcherTest.java,34,,"        assertResult(FULL_MATCH, ""/content"", ""/content/acme"");"
138326,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/mount/FragmentMatcherTest.java,37,,"        assertResult(PARTIAL_MATCH, ""/content/*"", ""/"");"
138327,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/mount/FragmentMatcherTest.java,46,,"        assertResult(PARTIAL_MATCH, ""/content/*$"", ""/"");"
138328,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/mount/FragmentMatcherTest.java,51,,"        assertResult(PARTIAL_MATCH, ""/content/*/site"", ""/"");"
138329,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/mount/FragmentMatcherTest.java,57,,"        assertResult(PARTIAL_MATCH, ""/content/*/site/"", ""/"");"
138330,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/mount/MountInfoTest.java,35,,"        MountInfo md = new MountInfo(""foo"", false, of(""/x/y""), of(""/a"", ""/b""));"
138331,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/mount/MountInfoTest.java,48,,"        MountInfo md = new MountInfo(""foo"", false, Collections.<String>emptyList(), of(""/apps"", ""/etc/config"", ""/content/my/site"", ""/var""));"
138332,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/mount/MountInfoTest.java,48,,"        MountInfo md = new MountInfo(""foo"", false, Collections.<String>emptyList(), of(""/apps"", ""/etc/config"", ""/content/my/site"", ""/var""));"
138333,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/mount/MountInfoTest.java,53,,"        assertFalse(md.isUnder(""/libs""));"
138334,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/mount/SimpleMountInfoProviderTest.java,50,,"                .mount(""foo"", ""/a"", ""/b"")"
138335,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/mount/SimpleMountInfoProviderTest.java,51,,"                .mount(""bar"", ""/x"", ""/y"")"
138336,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/observation/ChangeSetBuilderTest.java,41,,"        assertThat(cs.getAllNodeTypes(), containsInAnyOrder(""nt-1"", ""nt-2""));"
138337,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/observation/ChangeSetBuilderTest.java,41,,"        assertThat(cs.getAllNodeTypes(), containsInAnyOrder(""nt-1"", ""nt-2""));"
138338,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/observation/ChangeSetBuilderTest.java,42,,"        assertThat(cs.getParentPaths(), containsInAnyOrder(""p-1"", ""p-2""));"
138339,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/observation/ChangeSetBuilderTest.java,42,,"        assertThat(cs.getParentPaths(), containsInAnyOrder(""p-1"", ""p-2""));"
138340,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/observation/ChangeSetBuilderTest.java,43,,"        assertThat(cs.getParentNodeNames(), containsInAnyOrder(""nn-1"", ""nn-2""));"
138341,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/observation/ChangeSetBuilderTest.java,43,,"        assertThat(cs.getParentNodeNames(), containsInAnyOrder(""nn-1"", ""nn-2""));"
138342,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/observation/ChangeSetBuilderTest.java,44,,"        assertThat(cs.getParentNodeTypes(), containsInAnyOrder(""pnt-1"", ""pnt-2""));"
138343,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/observation/ChangeSetBuilderTest.java,44,,"        assertThat(cs.getParentNodeTypes(), containsInAnyOrder(""pnt-1"", ""pnt-2""));"
138344,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/observation/ChangeSetBuilderTest.java,45,,"        assertThat(cs.getPropertyNames(), containsInAnyOrder(""pn-1"", ""pn-2""));"
138345,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/observation/ChangeSetBuilderTest.java,45,,"        assertThat(cs.getPropertyNames(), containsInAnyOrder(""pn-1"", ""pn-2""));"
138346,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/observation/ChangeSetBuilderTest.java,141,,"        cb.addParentPath(""/p/q/r"");"
138347,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/observation/ChangeSetBuilderTest.java,144,,"        assertThat(cs.getParentPaths(), containsInAnyOrder(""/a/b"", ""/x"", ""/p/q""));"
138348,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/observation/ChangeSetBuilderTest.java,151,,"        cb1.addParentPath(""/x/y"");"
138349,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/toggle/FeatureToggleTest.java,48,,"        try (Feature feature = newFeature(""my.toggle"", whiteboard)) {"
138350,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/whiteboard/DefaultWhiteboardTest.java,43,,"        whiteboard.register(Service2.class, new Service2(""s2""), ImmutableMap.of(""role"", ""myrole""));"
138351,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/whiteboard/DefaultWhiteboardTest.java,43,,"        whiteboard.register(Service2.class, new Service2(""s2""), ImmutableMap.of(""role"", ""myrole""));"
138352,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/whiteboard/DefaultWhiteboardTest.java,44,,"        whiteboard.register(Service3.class, new Service3(""s3_1""), ImmutableMap.of());"
138353,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/whiteboard/DefaultWhiteboardTest.java,45,,"        whiteboard.register(Service3.class, new Service3(""s3_2""), ImmutableMap.of(""role"", ""myrole""));"
138354,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/whiteboard/DefaultWhiteboardTest.java,46,,"        whiteboard.register(Service3.class, new Service3(""s3_3""), ImmutableMap.of(""role"", ""myotherrole"", ""id"", 1024));"
138355,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/spi/whiteboard/DefaultWhiteboardTest.java,46,,"        whiteboard.register(Service3.class, new Service3(""s3_3""), ImmutableMap.of(""role"", ""myotherrole"", ""id"", 1024));"
138356,./TargetProjects/jackrabbit-oak/oak-core-spi/src/test/java/org/apache/jackrabbit/oak/stats/DefaultStatisticsProviderTest.java,56,,"        MeterStats meterStats = statsProvider.getMeter(""test"", StatsOptions.DEFAULT);"
138357,./TargetProjects/jackrabbit-oak/oak-core/src/main/java/org/apache/jackrabbit/oak/core/GuavaDeprecation.java,61,,"                    LOG.error(String.format(message, ticket), new Exception(""call stack""));"
138358,./TargetProjects/jackrabbit-oak/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdate.java,246,,"        checkArgument(asyncName.endsWith(""async""), ""async name [%s] does not confirm to "" +"
138359,./TargetProjects/jackrabbit-oak/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/Cursors.java,313,,"                throw new IllegalStateException(""This cursor is closed"");"
138360,./TargetProjects/jackrabbit-oak/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/property/jmx/PropertyIndexStats.java,99,,"                ""Property Index Stats"", getType(), new String[]{""path""});"
138361,./TargetProjects/jackrabbit-oak/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/property/jmx/PropertyIndexStats.java,125,,"        result.put(""values"", new String[0]);"
138362,./TargetProjects/jackrabbit-oak/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/property/jmx/PropertyIndexStats.java,126,,"        result.put(""paths"", new String[0]);"
138363,./TargetProjects/jackrabbit-oak/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/property/jmx/PropertyIndexStats.java,127,,"        result.put(""valueCount"", -1L);"
138364,./TargetProjects/jackrabbit-oak/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/property/jmx/PropertyIndexStats.java,128,,"        result.put(""pathCount"", -1);"
138365,./TargetProjects/jackrabbit-oak/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/property/jmx/PropertyIndexStatsMBean.java,41,,"                                   ""break out after this limit"")"
138366,./TargetProjects/jackrabbit-oak/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/property/strategy/ContentMirrorStoreStrategy.java,144,,"                builder.removeProperty(""match"");"
138367,./TargetProjects/jackrabbit-oak/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/property/strategy/UniqueEntryStoreStrategy.java,91,,"            PropertyState s = builder.getProperty(""entry"");"
138368,./TargetProjects/jackrabbit-oak/oak-core/src/main/java/org/apache/jackrabbit/oak/query/xpath/XPathToSQL2Converter.java,232,,"                    } else if (""rep:excerpt"".equals(identifier)) {"
138369,./TargetProjects/jackrabbit-oak/oak-core/src/main/java/org/apache/jackrabbit/oak/security/SecurityProviderImpl.java,195,,"    @SuppressWarnings(""UnusedDeclaration"")"
138370,./TargetProjects/jackrabbit-oak/oak-core/src/main/java/org/apache/jackrabbit/oak/security/authentication/token/TokenConfigurationImpl.java,107,,"    @SuppressWarnings(""UnusedDeclaration"")"
138371,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/ReferenceableFrozenNodeTest.java,50,,"        System.clearProperty(""oak.referenceableFrozenNode"");"
138372,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/ReferenceableFrozenNodeTest.java,68,,"        NodeState frozenNode = root.getChildNode(""jcr:system"").getChildNode(""jcr:nodeTypes"").getChildNode(""nt:frozenNode"");"
138373,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/ReferenceableFrozenNodeTest.java,68,,"        NodeState frozenNode = root.getChildNode(""jcr:system"").getChildNode(""jcr:nodeTypes"").getChildNode(""nt:frozenNode"");"
138374,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/ReferenceableFrozenNodeTest.java,68,,"        NodeState frozenNode = root.getChildNode(""jcr:system"").getChildNode(""jcr:nodeTypes"").getChildNode(""nt:frozenNode"");"
138375,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/ReferenceableFrozenNodeTest.java,69,,"        PropertyState superTypes = frozenNode.getProperty(""jcr:supertypes"");"
138376,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/ReferenceableFrozenNodeTest.java,72,,"        assertEquals(""nt:base"", superTypes.getValue(Type.NAME, 0));"
138377,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/core/SecureNodeBuilderTest.java,54,,"        rootBuilder.setProperty(""prop"", ""value"").setProperty(NAME_NON_ACCESSIBLE, ""value"");"
138378,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/core/SecureNodeBuilderTest.java,54,,"        rootBuilder.setProperty(""prop"", ""value"").setProperty(NAME_NON_ACCESSIBLE, ""value"");"
138379,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/core/SecureNodeBuilderTest.java,269,,"        secureNodeBuilder.setProperty(PropertyStates.createProperty(""another"", ImmutableList.of(""v"", ""v2""), Type.STRINGS));"
138380,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/core/SecureNodeBuilderTest.java,326,,"        secureNodeBuilder.setProperty(""names"", ImmutableList.of(""a"", ""b""), Type.NAMES);"
138381,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/core/SecureNodeBuilderTest.java,332,,"        secureNodeBuilder.setProperty(""name"", ""value"", Type.NAME);"
138382,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/namepath/impl/NamePathMapperImplTest.java,86,,"        assertEquals(""/oak-foo:bar"", npMapper.getOakPath(""/foo:bar""));"
138383,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/namepath/impl/NamePathMapperImplTest.java,87,,"        assertEquals(""/oak-foo:bar/oak-quu:qux"", npMapper.getOakPath(""/foo:bar/quu:qux""));"
138384,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/namepath/impl/NamePathMapperImplTest.java,88,,"        assertEquals(""oak-foo:bar"", npMapper.getOakPath(""foo:bar""));"
138385,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/namepath/impl/NamePathMapperImplTest.java,90,,"        assertEquals(""foobar/oak-jcr:content"", npMapper.getOakPath(""foobar/{http://www.jcp.org/jcr/1.0}content""));"
138386,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/atomic/AtomicCounterEditorTest.java,464,,"            throw new UnsupportedOperationException(""Not implemented"");"
138387,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/commit/JcrLastModifiedConflictHandlerTest.java,65,,"        PropertyState ours = mockProperty(propertyName, ""invalidDateValue"");"
138388,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/commit/ThreeWayConflictHandlerTest.java,55,,"                assertEquals(""ours"", ours.getValue(STRING));"
138389,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/commit/ThreeWayConflictHandlerTest.java,56,,"                assertEquals(""theirs"", theirs.getValue(STRING));"
138390,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/commit/ThreeWayConflictHandlerTest.java,87,,"                assertEquals(""base"", base.getValue(STRING));"
138391,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/commit/ThreeWayConflictHandlerTest.java,347,,"            Assert.fail(""method should not be called"");"
138392,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/cow/COWNodeStoreTest.java,53,,"        builder.child(""abc"");"
138393,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/cow/COWNodeStoreTest.java,60,,"        builder.child(""foo"");"
138394,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/cow/COWNodeStoreTest.java,65,,"        builder.child(""bar"");"
138395,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexInfoServiceImplTest.java,49,,"        AsyncIndexUpdate async = new AsyncIndexUpdate(""async"", store, provider);"
138396,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexInfoServiceImplTest.java,52,,"        AsyncIndexUpdate async2 = new AsyncIndexUpdate(""foo-async"", store, provider);"
138397,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,152,,"                ""rootIndex"", true, false, ImmutableSet.of(""foo""), null)"
138398,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,152,,"                ""rootIndex"", true, false, ImmutableSet.of(""foo""), null)"
138399,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,153,,"                .setProperty(ASYNC_PROPERTY_NAME, ""async"");"
138400,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,154,,"        builder.child(""testRoot"").setProperty(""foo"", ""abc"");"
138401,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,154,,"        builder.child(""testRoot"").setProperty(""foo"", ""abc"");"
138402,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,192,,"                ""rootIndexSecond"", true, false, ImmutableSet.of(""bar""), null)"
138403,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,196,,"                .setProperty(""bar"", ""def"");"
138404,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,197,,"        builder.child(""testSecond"").setProperty(""bar"", ""ghi"");"
138405,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,242,,"                builder.child(""newchild"").child(""other"")"
138406,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,242,,"                builder.child(""newchild"").child(""other"")"
138407,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,249,,"                .setProperty(""foo"", ""xyz"");"
138408,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,369,,"        builder.child(""test"").setProperty(""foo"", ""a"");"
138409,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,370,,"        builder.child(""child"");"
138410,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,637,,"        assertTrue(""Expecting no checkpoints"","
138411,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,670,,"        assertTrue(""Expecting one checkpoint"","
138412,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,811,,"                                .getStrings(""async-temp"")).size() == 1);"
138413,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,1009,,"        builder.child(""subNodeIndex"").child(""testRoot2"").setProperty(""foo"", ""abc"");"
138414,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,1137,,"        splitter.registerSplit(newHashSet(""/oak:index/changedIndex""), ""async-slow"");"
138415,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,1268,,"        builder.child(""testRoot3"").setProperty(""foo"", ""abc"");"
138416,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,1853,,"        provider.enableFailureMode(""/oak:index/barIndex"");"
138417,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,2035,,"        assertEquals(""Index disabled too early"", ""property"", supersededIndex.getString(""type""));"
138418,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateTest.java,2036,,"        assertFalse(""Don't set :disableIndexesOnNextCycle on superseded index"","
138419,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexerServiceTest.java,66,,"                ""asyncConfigs"", new String[] {""async:5""}"
138420,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexerServiceTest.java,66,,"                ""asyncConfigs"", new String[] {""async:5""}"
138421,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexerServiceTest.java,70,,"        assertEquals(TimeUnit.MINUTES.toMillis(15), getIndexUpdate(""async"").getLeaseTimeOut());"
138422,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexInfoServiceImplTest.java,66,,"        builder.child(""oak:index"").child(""fooIndex"").setProperty(""type"", ""foo"");"
138423,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexInfoServiceImplTest.java,66,,"        builder.child(""oak:index"").child(""fooIndex"").setProperty(""type"", ""foo"");"
138424,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexInfoServiceImplTest.java,98,,"        builder.child(""oak:index"").child(""d"").setProperty(""type"", ""type-d""); //Info provider returns result"
138425,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,112,,"                ""rootIndex"", true, false, ImmutableSet.of(""foo""), null);"
138426,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,112,,"                ""rootIndex"", true, false, ImmutableSet.of(""foo""), null);"
138427,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,114,,"                builder.child(""newchild"").child(""other"")"
138428,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,114,,"                builder.child(""newchild"").child(""other"")"
138429,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,121,,"        builder.child(""testRoot"").setProperty(""foo"", ""abc"");"
138430,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,121,,"        builder.child(""testRoot"").setProperty(""foo"", ""abc"");"
138431,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,123,,"                .setProperty(""foo"", ""xyz"");"
138432,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,305,,"        NodeBuilder other = builder.child(""test"").child(""other"");"
138433,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,330,,"        nb.child(""prop1"").setProperty(""foo"", ""bar"");"
138434,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,362,,"        nb.child("":hidden-node-2"").setProperty(IndexConstants.REINDEX_RETAIN, true);"
138435,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,363,,"        nb.child(""visible-node"");"
138436,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,548,,"                new IndexUpdate(emptyProvider(), ""async-run"", after, builder, NOOP)"
138437,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,567,,"                .setProperty(ASYNC_PROPERTY_NAME, ImmutableList.of(""async-run"", ""sync""), Type.STRINGS)"
138438,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,631,,"        assertEquals(""/oak:index/rootIndex"", context.getIndexPath());"
138439,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,650,,"        idx.setProperty(""async"", asList(""sync"", ""async""), Type.STRINGS);"
138440,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,748,,"        assertFalse(IndexUpdate.isIncluded(""async-other"", base));"
138441,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,948,,"                ""fooIndex"", true, false, ImmutableSet.of(""foo""), null);"
138442,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,966,,"        assertEquals(""property"", indexed.getChildNode(""oak:index"").getChildNode(""fooIndex"").getString(TYPE_PROPERTY_NAME));"
138443,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/IndexUpdateTest.java,1035,,"                 ""rootIndex2"", true, false, ImmutableSet.of(""foo2""), null);"
138444,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/TrackingCorruptIndexHandlerTest.java,39,,"        handler.indexUpdateFailed(""async"", ""/oak:index/foo"", new Exception());"
138445,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/TrackingCorruptIndexHandlerTest.java,39,,"        handler.indexUpdateFailed(""async"", ""/oak:index/foo"", new Exception());"
138446,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/aggregate/SimpleNodeAggregatorTest.java,45,,"        NodeBuilder file = builder.child(""file"");"
138447,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/aggregate/SimpleNodeAggregatorTest.java,52,,"        String path = ""/file/jcr:content"";"
138448,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/counter/MountsNodeCounterTest.java,77,,"        Tree libs = rootTree.addChild(""libs"");"
138449,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/datastore/DataStoreTextWriterTest.java,87,,"        assertEquals(ExtractionResult.EMPTY, w2.getText(""/a"", new IdBlob(""foo"", ""a"")).getExtractionResult());"
138450,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/diffindex/DiffCollectorTest.java,41,,"        builder.child(""a"").setProperty(""jcr:uuid"", ""abc"");"
138451,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/AbortingIndexerLockTest.java,44,,"        AsyncIndexInfo info = new AsyncIndexInfo(""async"", -1,-1, false, statsMBean);"
138452,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/AsyncLaneSwitcherTest.java,42,,"        AsyncLaneSwitcher.switchLane(builder, ""foo"");"
138453,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/AsyncLaneSwitcherTest.java,51,,"        builder.setProperty(ASYNC_PROPERTY_NAME, ""async"");"
138454,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexDefinitionUpdaterTest.java,66,,"        builder.child(""oak:index"").child(""fooIndex"").setProperty(""foo"", ""bar"");"
138455,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexDefinitionUpdaterTest.java,66,,"        builder.child(""oak:index"").child(""fooIndex"").setProperty(""foo"", ""bar"");"
138456,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexDefinitionUpdaterTest.java,66,,"        builder.child(""oak:index"").child(""fooIndex"").setProperty(""foo"", ""bar"");"
138457,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexDefinitionUpdaterTest.java,66,,"        builder.child(""oak:index"").child(""fooIndex"").setProperty(""foo"", ""bar"");"
138458,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexDefinitionUpdaterTest.java,80,,"        assertTrue(NodeStateUtils.getNode(root,""/oak:index/barIndex"").exists());"
138459,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexDefinitionUpdaterTest.java,91,,"        builder2.child(""a"").child(""oak:index"").child(""barIndex"").setProperty(""foo"", ""bar"");"
138460,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexImporterTest.java,108,,"        builder.child(""idx-a"").setProperty(""type"", ""property"");"
138461,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexImporterTest.java,108,,"        builder.child(""idx-a"").setProperty(""type"", ""property"");"
138462,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexImporterTest.java,108,,"        builder.child(""idx-a"").setProperty(""type"", ""property"");"
138463,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexImporterTest.java,111,,"        builder.child(""idx-b"").setProperty(""async"", ""async"");"
138464,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexImporterTest.java,115,,"        createIndexDirs(""/idx-a"", ""/idx-b"");"
138465,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexImporterTest.java,145,,"        builder.child(""idx-a"").setProperty(""foo"", ""bar"");"
138466,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexImporterTest.java,145,,"        builder.child(""idx-a"").setProperty(""foo"", ""bar"");"
138467,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexImporterTest.java,211,,"                ""fooIndex"", true, false, ImmutableSet.of(""foo""), null)"
138468,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexImporterTest.java,213,,"        builder.child(""a"").setProperty(""foo"", ""abc"");"
138469,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexImporterTest.java,219,,"        String checkpoint = createIndexDirs(""/oak:index/fooIndex"");"
138470,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/IndexImporterTest.java,260,,"        NodeState idx = store.getRoot().getChildNode(""oak:index"").getChildNode(""fooIndex"");"
138471,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/importer/JsonDeserializationTest.java,99,,"        valid.setProperty(""name"", ""valid"");"
138472,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/inventory/IndexDefinitionPrinterTest.java,53,,"        builder.child(""a"").setProperty(""foo"", ""bar"");"
138473,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/inventory/IndexDefinitionPrinterTest.java,53,,"        builder.child(""a"").setProperty(""foo"", ""bar"");"
138474,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/inventory/IndexPrinterTest.java,48,,"        when(asyncInfo.getAsyncLanes()).thenReturn(asList(""foo-async"", ""bar-async""));"
138475,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/progress/NodeCounterMBeanEstimatorTest.java,54,,"        builder.child(""idx-b"").setProperty(PROP_INCLUDED_PATHS, asList(""/content""), Type.STRINGS);"
138476,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/AsyncPropertyIndexTest.java,75,,"                builder.child(INDEX_DEFINITIONS_NAME), ""foo"", true, false,"
138477,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/MultipleIndicesTest.java,48,,"                                getOrCreateOakIndex(builder), ""pid"","
138478,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/MultipleIndicesTest.java,66,,"        t.setProperty(""pid"", ""foo"");"
138479,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/OptionIndexTagTests.java,59,,"        assertTrue(result, result.indexOf(""/* property uuid"") >= 0);"
138480,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexDeprecatedTest.java,80,,"                ""foo"", true, false, ImmutableSet.of(""foo""), null);"
138481,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexDisabledTest.java,69,,"                ""foo"", true, false, ImmutableSet.of(""foo""), null);"
138482,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexLookupTest.java,51,,"    private static final List<String> DECL_NODE_TYPES = Lists.newArrayList(""nt:unstructured"", ""mix:versionable"");"
138483,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexTest.java,108,,"        NodeBuilder index = createIndexDefinition(builder.child(INDEX_DEFINITIONS_NAME), ""foo"","
138484,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexTest.java,111,,"        index.setProperty(""entryCount"", -1);        "
138485,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexTest.java,129,,"        assertTrue(""cost: "" + cost, cost >= 6.5 && cost <= 7.5);"
138486,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexTest.java,268,,"        builder.child(""a"").setProperty(""foo"", ""abc"");"
138487,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexTest.java,269,,"        builder.child(""b"").setProperty(""foo"", Arrays.asList(""abc"", ""def""),"
138488,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexTest.java,273,,"            builder.child(""n"" + i).setProperty(""foo"", ""xyz"");"
138489,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexTest.java,285,,"        assertEquals(ImmutableSet.of(), find(lookup, ""foo"", ""ghi"", f));"
138490,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexTest.java,335,,"                ""fooIndex"", true, false, ImmutableSet.of(""foo"", ""extrafoo""),"
138491,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexTest.java,335,,"                ""fooIndex"", true, false, ImmutableSet.of(""foo"", ""extrafoo""),"
138492,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexTest.java,341,,"                .setProperty(""extrafoo"", ""pqr"");"
138493,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexTest.java,539,,"        indexDef.setProperty(IndexConstants.VALUE_EXCLUDED_PREFIXES, ""test"");"
138494,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexTest.java,672,,"                ImmutableSet.of(""typeFoo""));"
138495,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexTest.java,749,,"        index.setProperty(createProperty(PROP_INCLUDED_PATHS, of(""/test/a""), Type.STRINGS));"
138496,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexTest.java,792,,"        PropertyIndexPlan plan = new PropertyIndexPlan(""plan"", root, index.getNodeState(), f);"
138497,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexTest.java,815,,"        index.setProperty(createProperty(PROP_EXCLUDED_PATHS, of(""/test/a/b""), Type.STRINGS));"
138498,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/PropertyIndexTest.java,956,,"        assertTrue(getNode(indexed, pathInIndex(fooMount, ""/oak:index/foo"", ""/a"", ""abc"")).exists());"
138499,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/RelativePathTest.java,51,,"                        IndexUtils.createIndexDefinition(index, ""myProp"", true,"
138500,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/ValuePatternTest.java,57,,"                Arrays.asList(""hello""),"
138501,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/ValuePatternTest.java,146,,"        ValuePattern vp = new ValuePattern(null, Lists.newArrayList(""abc"", ""bcd""), null);"
138502,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/ValuePatternTest.java,146,,"        ValuePattern vp = new ValuePattern(null, Lists.newArrayList(""abc"", ""bcd""), null);"
138503,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/ValuePatternTest.java,148,,"        assertTrue(vp.matches(""abc1""));"
138504,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/jmx/PropertyIndexStatsTest.java,77,,"        createIndexDefinition(builder.child(INDEX_DEFINITIONS_NAME), ""foo"","
138505,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/jmx/PropertyIndexStatsTest.java,80,,"        setProperty(builder, ""/a/b/c"", ""foo"", ""x"");"
138506,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/jmx/PropertyIndexStatsTest.java,85,,"        CompositeData cd = mbean.getStatsForSpecificIndex(""/oak:index/foo"", 5, 2, 100);"
138507,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/jmx/PropertyIndexStatsTest.java,88,,"        assertArray(cd, ""paths"", asList(""/a/b"", ""/a/e""));"
138508,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/strategy/ContentMirrorStoreStrategyTest.java,54,,"    private static final Set<String> KEY = newHashSet(""key"");"
138509,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/strategy/ContentMirrorStoreStrategyTest.java,78,,"        for (String path : asList(""/"", ""a/b/c"", ""a/b/d"", ""b"", ""d/e"", ""d/e/f"")) {"
138510,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/strategy/ContentMirrorStoreStrategyTest.java,78,,"        for (String path : asList(""/"", ""a/b/c"", ""a/b/d"", ""b"", ""d/e"", ""d/e/f"")) {"
138511,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/strategy/UniqueEntryStoreStrategyTest.java,57,,"        store.update(index, ""/some/node1"", null, null, EMPTY, newHashSet(""key1""));"
138512,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/property/strategy/UniqueEntryStoreStrategyTest.java,57,,"        store.update(index, ""/some/node1"", null, null, EMPTY, newHashSet(""key1""));"
138513,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/reference/ReferenceIndexTest.java,72,,"        builder.child(""a"").setProperty(createProperty(""foo"", ""u1"", Type.REFERENCE));"
138514,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/upgrade/IndexDisablerTest.java,51,,"        List<String> disabledIndexes = disabler.disableOldIndexes(""/oak:index/foo"", builder);"
138515,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/upgrade/IndexDisablerTest.java,57,,"        rootBuilder.child(""oak:index"").child(""fooIndex"");"
138516,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/upgrade/IndexDisablerTest.java,57,,"        rootBuilder.child(""oak:index"").child(""fooIndex"");"
138517,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/upgrade/IndexDisablerTest.java,61,,"                asList(""/oak:index/fooIndex"", ""/oak:index/barIndex""), Type.STRINGS);"
138518,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/upgrade/IndexDisablerTest.java,61,,"                asList(""/oak:index/fooIndex"", ""/oak:index/barIndex""), Type.STRINGS);"
138519,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/upgrade/IndexDisablerTest.java,103,,"                asList(""/oak:index/fooIndex/@bar""), Type.STRINGS);"
138520,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/upgrade/IndexDisablerTest.java,127,,"                ""fooIndex"", true, false, ImmutableSet.of(""foo""), asList(""oak:TestNode""));"
138521,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/index/upgrade/IndexDisablerTest.java,127,,"                ""fooIndex"", true, false, ImmutableSet.of(""foo""), asList(""oak:TestNode""));"
138522,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/metric/CompositeStatsTest.java,46,,"        Counter counter = registry.counter(""test"");"
138523,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/metric/MetricImplTest.java,41,,"        Counter counter = registry.counter(""test"");"
138524,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/metric/MetricStatisticsProviderTest.java,80,,"        MeterStats meterStats = statsProvider.getMeter(""test"", StatsOptions.DEFAULT);"
138525,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/FilteringNodeStateTest.java,68,,"                ""/content/foo/de"","
138526,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/FilteringNodeStateTest.java,75,,"        final PropertyState childOrder = createProperty(OAK_CHILD_ORDER, asList(""foo"", ""football""), Type.NAMES);"
138527,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/FilteringNodeStateTest.java,75,,"        final PropertyState childOrder = createProperty(OAK_CHILD_ORDER, asList(""foo"", ""football""), Type.NAMES);"
138528,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/FilteringNodeStateTest.java,77,,"        create(builder, ""/content"", childOrder);"
138529,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/FilteringNodeStateTest.java,89,,"        assertSame(""root should be identical to decorated"", rootNodeState, decorated);"
138530,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/FilteringNodeStateTest.java,119,,"        final NodeState foo = getNodeState(rootNodeState, ""/content/foo"");"
138531,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/FilteringNodeStateTest.java,142,,"        final NodeState content = rootNodeState.getChildNode(""content"");"
138532,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/FilteringNodeStateTest.java,178,,"        final NodeState decorated = wrap(""/content"", content, of(""/apps""), null, null, null, true);"
138533,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/FilteringNodeStateTest.java,186,,"        assertMissing(decorated, ""apps"");"
138534,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/FilteringNodeStateTest.java,199,,"        assertMissingHasChildNode(decorated, ""libs"");"
138535,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/NodeStateCopierTest.java,54,,"                .include(""/a/b/c"")"
138536,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/NodeStateCopierTest.java,58,,"                .childNodeChanged(""/a"", ""/a/b"")"
138537,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/NodeStateCopierTest.java,131,,"                ""/content/foo/en"", ""/content/foo/de"");"
138538,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/NodeStateCopierTest.java,131,,"                ""/content/foo/en"", ""/content/foo/de"");"
138539,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/NodeStateCopierTest.java,138,,"                .include(""/content/foo"")"
138540,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/NodeStateCopierTest.java,141,,"                .include(""/content/bar"")"
138541,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/NodeStateCopierTest.java,149,,"                        ""/content"","
138542,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/NodeStateCopierTest.java,178,,"        final NodeStore source = createNodeStoreWithContent(""/content/foo/en"", ""/jcr:system"");"
138543,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/NodeStateCopierTest.java,179,,"        final NodeStore target = createNodeStoreWithContent(""/jcr:system/jcr:versionStorage"");"
138544,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/NodeStateCopierTest.java,293,,"        create(builder, ""/jcr:system/jcr:versionStorage/frozen"", ntFrozenNode, uuid);"
138545,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/report/ReportingNodeStateTest.java,95,,"        assertThat(reporter, not(hasReportedProperty(0, ""/meaningOfLife"")));"
138546,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/migration/version/VersionCopierTest.java,62,,"        String path = ""/foo"";"
138547,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/name/NameValidatorTest.java,35,,"    private final Validator validator = new NameValidator(newNamespaceNode(""valid""), false);"
138548,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/nodetype/TypeEditorTest.java,78,,"        expect(effective.isMandatoryProperty(""mandatory"")).andReturn(false);"
138549,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/nodetype/TypeEditorTest.java,243,,"        builder.child(""testcontent"").setProperty(JCR_PRIMARYTYPE, ""nt:unstructured"", Type.NAME);"
138550,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/nodetype/TypeEditorTest.java,243,,"        builder.child(""testcontent"").setProperty(JCR_PRIMARYTYPE, ""nt:unstructured"", Type.NAME);"
138551,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/nodetype/write/NodeTypeRegistryTest.java,155,,"        Tree test1 = TreeUtil.addChild(root.getTree(""/""), ""test1"", NT_FILE, typeRoot, ""admin"");"
138552,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,108,,"            fail(""assertion failed for '"" + msg + ""': expected length "" + expected.length + "" != actual 0."""
138553,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,154,,"        Tree rootTree = root.getTree(""/"").addChild(""test"");"
138554,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,155,,"        rootTree.setProperty(JcrConstants.JCR_PRIMARYTYPE, ""test:parentType"", Type.NAME);"
138555,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,156,,"        Tree child1 = rootTree.addChild(""child1"");"
138556,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,158,,"        child1.setProperty(JcrConstants.JCR_PRIMARYTYPE, ""test:childType"", Type.NAME);"
138557,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,159,,"        Tree grandChild1 = child1.addChild(""grandChild1"");"
138558,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,160,,"        grandChild1.setProperty(""grandChild1Prop"", 1);"
138559,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,161,,"        grandChild1.setProperty(JcrConstants.JCR_PRIMARYTYPE, ""test:grandChildType"", Type.NAME);"
138560,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,162,,"        Tree greatGrandChild1 = grandChild1.addChild(""greatGrandChild1"");"
138561,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,163,,"        greatGrandChild1.setProperty(""greatGrandChild1Prop"", 1);"
138562,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,164,,"        greatGrandChild1.setProperty(JcrConstants.JCR_PRIMARYTYPE, ""test:greatGrandChildType"", Type.NAME);"
138563,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,165,,"        Tree child2 = rootTree.addChild(""child2"");"
138564,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,175,,"        assertMatches(""parentPaths"", changeSet.getParentPaths(), ""/test/child2"", ""/test/child1"","
138565,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,175,,"        assertMatches(""parentPaths"", changeSet.getParentPaths(), ""/test/child2"", ""/test/child1"","
138566,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,176,,"                ""/test/child1/grandChild1/greatGrandChild1"", ""/"", ""/test"", ""/test/child1/grandChild1"","
138567,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,176,,"                ""/test/child1/grandChild1/greatGrandChild1"", ""/"", ""/test"", ""/test/child1/grandChild1"","
138568,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,176,,"                ""/test/child1/grandChild1/greatGrandChild1"", ""/"", ""/test"", ""/test/child1/grandChild1"","
138569,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,178,,"        assertMatches(""parentNodeNames"", changeSet.getParentNodeNames(), ""child2"", ""child1"", ""greatGrandChild1"", ""test"","
138570,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,180,,"        assertMatches(""parentNodeTypes"", changeSet.getParentNodeTypes(), ""test:parentType"", ""test:childType"","
138571,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,182,,"        assertMatches(""allNodeTypes"", changeSet.getAllNodeTypes(), ""test:parentType"", ""test:childType"","
138572,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,184,,"        assertMatches(""propertyNames"", changeSet.getPropertyNames(), JcrConstants.JCR_PRIMARYTYPE, ""child1Prop"","
138573,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,293,,"        rootTree.addChild(""child"");"
138574,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,309,,"        child.addChild(""grandChild"");"
138575,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,313,,"        assertMatches(""parentPaths"", changeSet.getParentPaths(), ""/test"", ""/test/child"");"
138576,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,345,,"            child.setProperty(""foo"" + i, ""bar"");"
138577,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,401,,"                next.setProperty(""nextProp"" + i, i);"
138578,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,402,,"                next.setProperty(JcrConstants.JCR_PRIMARYTYPE, i % 2 == 0 ? ""test:even"" : ""test:odd"", Type.NAME);"
138579,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,402,,"                next.setProperty(JcrConstants.JCR_PRIMARYTYPE, i % 2 == 0 ? ""test:even"" : ""test:odd"", Type.NAME);"
138580,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/ChangeCollectorProviderTest.java,483,,"            aChild.setProperty(""aProperty"", ""foo"");"
138581,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/ChangeSetFilterImplTest.java,85,,"            builder.addNodeType(""foo"" + i++);"
138582,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/ChangeSetFilterImplTest.java,124,,"        ChangeSetFilterImpl prefilter = new ChangeSetFilterImpl(s(""/""), false, null, s(""/excluded""), s(), s(), s());"
138583,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/ChangeSetFilterImplTest.java,134,,"        assertTrue(prefilter.excludes(newChangeSet(5, s(""/excluded/foo"", ""/excluded/bar""), s(""foo"", ""bar""), s(), s())));"
138584,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/ChangeSetFilterImplTest.java,138,,"        assertFalse(prefilter.excludes(newChangeSet(5, s(""/included/a"", ""/included/b""), s(), s(), s())));"
138585,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/ChangeSetFilterImplTest.java,149,,"        prefilter = new ChangeSetFilterImpl(s(""/main/**/included""), true, null, s(""/main/excluded""), s(), s(), s());"
138586,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/ChangeSetFilterImplTest.java,201,,"        builder.addNodeType(""nt:file"");"
138587,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/ChangeSetFilterImplTest.java,213,,"        ChangeSetFilterImpl prefilter = new ChangeSetFilterImpl(s(""/""), true, null, s(""/excluded""), s(""foo"", ""bars""), s(""nt:file""), s());"
138588,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/ChangeSetFilterImplTest.java,297,,"        doTestDeepPath(""/a/b/c/d/e/f/g/h/i/j/k/l"", ""/a"", 5, false);"
138589,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/FilterBuilderTest.java,34,,"                builder.path(""path""),"
138590,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/GlobbingPathHelperTest.java,31,,"        assertMatches(""foo"", ""foo"");"
138591,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/GlobbingPathHelperTest.java,34,,"        assertMatches(""**/bar"", ""foo/bar"");"
138592,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/GlobbingPathHelperTest.java,36,,"        assertMatches(""**/bar/**"", ""bar"");"
138593,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/GlobbingPathHelperTest.java,40,,"        assertMatches(""**/bar/**"", ""foo/bar/zoo"");"
138594,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/GlobbingPathHelperTest.java,47,,"        assertMatches(""**/bar/**/foo"", ""bar/foo"");"
138595,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/GlobbingPathHelperTest.java,59,,"        assertMatches(""/a/b/**/foo/*"", ""/a/b/foo/xy"");"
138596,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/GlobbingPathHelperTest.java,73,,"        assertMatches(""*.html"", ""foo.html"");"
138597,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/GlobbingPathHelperTest.java,76,,"        assertDoesntMatch(""*.html"", ""/foo.html"");"
138598,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/GlobbingPathHelperTest.java,78,,"        assertMatches(""**/*.html"", ""foo.html"");"
138599,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/GlobbingPathHelperTest.java,79,,"        assertMatches(""**/*.*"", ""foo.html"");"
138600,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/GlobbingPathHelperTest.java,115,,"        assertDoesntMatch(""/**"", ""foo"");"
138601,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/GlobbingPathHelperTest.java,130,,"        assertDoesntMatch(""/**/*.html"", ""foo.html"");"
138602,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/observation/filter/GlobbingPathHelperTest.java,145,,"        assertMatches(""/foo/bar/**"", ""/foo/bar"");"
138603,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/tree/impl/ImmutableTreeTest.java,61,,"        Tree orderable = node.addChild(""orderable"", JcrConstants.NT_UNSTRUCTURED).getTree();"
138604,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/tree/impl/ImmutableTreeTest.java,133,,"        assertEquals(""nonExisting"", immutable.getChild(""nonExisting"").getName());"
138605,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/tree/impl/ImmutableTreeTest.java,237,,"        n.addChild(""node1"", JcrConstants.NT_UNSTRUCTURED);"
138606,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/tree/impl/ImmutableTreeTest.java,238,,"        n.addChild(""node2"", JcrConstants.NT_UNSTRUCTURED);"
138607,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/tree/impl/ImmutableTreeTest.java,239,,"        n.addChild(""node3"", JcrConstants.NT_UNSTRUCTURED);"
138608,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/tree/impl/TreeUtilTest.java,45,,"        Tree tree = TreeUtil.addChild(root.getTree(""/""), ""test"", JcrConstants.NT_FOLDER, root.getTree(NodeTypeConstants.NODE_TYPES_PATH), ""userId"");"
138609,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/tree/impl/TreeUtilTest.java,45,,"        Tree tree = TreeUtil.addChild(root.getTree(""/""), ""test"", JcrConstants.NT_FOLDER, root.getTree(NodeTypeConstants.NODE_TYPES_PATH), ""userId"");"
138610,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/tree/impl/TreeUtilTest.java,154,,"        TreeUtil.addMixin(testTree, ""mix:title"", root.getTree(NodeTypeConstants.NODE_TYPES_PATH), ""uid"");"
138611,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/ExplainResultTest.java,79,,"                Arrays.asList(explainResult.getColumnNames()).contains(""statement""));"
138612,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/FilterTest.java,52,,"        assertEquals(""Filter(query=select [jcr:path] from [nt:base] "" + "
138613,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/FilterTest.java,54,,"                ""path=*, property=["" + "
138614,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/IteratorsTest.java,55,,"        assertEquals(""1, 2"", toString(FilterIterators.newDistinct(it(1, 2), settings)));"
138615,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/IteratorsTest.java,56,,"        assertEquals(""1, 2, 3"", toString(FilterIterators.newDistinct(it(1, 2, 1, 3, 3, 1), settings)));"
138616,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/LargeQueryTest.java,39,,"                buff.append("" or "");"
138617,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/PropertyInexistenceTest.java,47,,"        initVal = System.getProperty(""oak.useOldInexistenceCheck"");"
138618,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/PropertyInexistenceTest.java,67,,"        List<String> expected1 = ImmutableList.of(""/a/x"", ""/a/x/y"");"
138619,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/PropertyInexistenceTest.java,67,,"        List<String> expected1 = ImmutableList.of(""/a/x"", ""/a/x/y"");"
138620,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/PropertyInexistenceTest.java,76,,"        System.setProperty(""oak.useOldInexistenceCheck"", ""true"");"
138621,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/QueryValidatorTest.java,57,,"        assertEquals(""[\n"" +"
138622,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/QueryValidatorTest.java,58,,"                ""{\n"" +"
138623,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/SQL2OptimiseQueryTest.java,99,,"        expected = of(""/test/a"", ""/test/b"", ""/test2/a"");"
138624,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/SQL2OptimiseQueryTest.java,99,,"        expected = of(""/test/a"", ""/test/b"", ""/test2/a"");"
138625,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/SQL2OptimiseQueryTest.java,239,,"                ""select * from [nt:unstructured] as [c] "" + "
138626,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/SQL2ParserTest.java,131,,"        assertTrue(""Converted xpath "" + xpath + ""doesn't end with 'order by [foo]'"", c.convert(xpath).endsWith(""order by [foo]""));"
138627,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/SQL2ParserTest.java,131,,"        assertTrue(""Converted xpath "" + xpath + ""doesn't end with 'order by [foo]'"", c.convert(xpath).endsWith(""order by [foo]""));"
138628,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/SQL2ParserTest.java,131,,"        assertTrue(""Converted xpath "" + xpath + ""doesn't end with 'order by [foo]'"", c.convert(xpath).endsWith(""order by [foo]""));"
138629,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/SimpleExcerptProviderTest.java,43,,"                highlight(sb(""fox is jumping""), of(""jUmP*"")));"
138630,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/TraversalAvoidanceTest.java,115,,"        assertPlanSelection(QUERY, ""traverse"", ""Traversal must be used if nothing else participates"");"
138631,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/TraversalAvoidanceTest.java,124,,"        testIndexProvider.addPlan(""plan1"", 10000, false);"
138632,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/TraversalAvoidanceTest.java,150,,"        testIndexProvider.addPlan(""plan2"", 100, true);"
138633,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/TraversalAvoidanceTest.java,152,,"        assertPlanSelection(QUERY, ""plan2"", ""Low cost must win"");"
138634,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/UnionQueryTest.java,118,,"                ""/UnionQueryTest/a/b/c"","
138635,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/UnionQueryTest.java,119,,"                ""/UnionQueryTest/a/b/c/d"","
138636,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/UnionQueryTest.java,120,,"                ""/UnionQueryTest/a/b/c/d/e"","
138637,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/UnionQueryTest.java,170,,"        PropertyValueImpl propValImpl = new PropertyValueImpl(""a"", ""jcr:path"");"
138638,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/UnionQueryTest.java,212,,"        String left = ""SELECT [jcr:path] FROM [nt:base] AS a WHERE ISDESCENDANTNODE(a, '/UnionQueryTest')"";"
138639,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/UnionQueryTest.java,263,,"                Arrays.asList(explainResult.getColumnNames()).contains(""statement""));"
138640,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/XPathTest.java,71,,"                ""select [jcr:path], [jcr:score], * "" +"
138641,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/XPathTest.java,72,,"                ""from [nt:base] as a "" +"
138642,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/XPathTest.java,75,,"                ""order by @jcr:score */ "" +"
138643,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/XPathTest.java,76,,"                ""union select [jcr:path], [jcr:score], * "" +"
138644,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/XPathTest.java,120,,"                ""where [a] is not null "" +"
138645,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/XPathTest.java,121,,"                ""and isdescendantnode(a, '/content') "" +"
138646,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/ast/FullTextTest.java,48,,"        assertEquals(""\""hello\"" \""world\"""", convertPattern(""hello world""));"
138647,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/ast/FullTextTest.java,48,,"        assertEquals(""\""hello\"" \""world\"""", convertPattern(""hello world""));"
138648,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/ast/FullTextTest.java,53,,"        assertFalse(test(""hello world"", ""hello""));"
138649,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/ast/FullTextTest.java,57,,"        assertEquals(""\""hello\"""", convertPattern(""hello hello""));"
138650,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/ast/FullTextTest.java,62,,"        assertEquals(""\""hello\"" OR \""world\"""", convertPattern(""hello OR world""));"
138651,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/ast/FullTextTest.java,74,,"        assertEquals(""\""hello\"" \""-\"" \""world\"""", convertPattern(""hello - world""));"
138652,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/ast/FullTextTest.java,76,,"        assertEquals(""\""hello\"" \""-\"""", convertPattern(""hello -""));"
138653,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/ast/FullTextTest.java,91,,"        assertEquals(""\""hello\"" -\""wonderful world\"""", convertPattern(""hello -\""wonderful world\""""));"
138654,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/ast/FullTextTest.java,105,,"        assertEquals(""\""hello world\"""", convertPattern(""\""hello world\""""));"
138655,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/FilterTest.java,205,,"        f.restrictPath(""/test"", Filter.PathRestriction.ALL_CHILDREN);"
138656,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/FilterTest.java,214,,"        f.restrictPath(""/test/x"", Filter.PathRestriction.DIRECT_CHILDREN);"
138657,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/FilterTest.java,218,,"        f.restrictPath(""/test/x/y"", Filter.PathRestriction.PARENT);"
138658,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/FilterTest.java,227,,"        f.restrictPath(""/test/y"", Filter.PathRestriction.DIRECT_CHILDREN);"
138659,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,70,,"        Tree node = root.getTree(""/"").addChild(""content"");"
138660,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,73,,"        assertQuery(""//*[jcr:contains(., 'text/plain')]"", ""xpath"","
138661,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,74,,"                ImmutableList.of(""/content""));"
138662,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,96,,"        c.addChild(""one"").setProperty(""prop"", ""value"");"
138663,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,96,,"        c.addChild(""one"").setProperty(""prop"", ""value"");"
138664,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,97,,"        c.addChild(""two"").setProperty(""prop"","
138665,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,98,,"                ImmutableList.of(""aaa"", ""value"", ""bbb""), Type.STRINGS);"
138666,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,98,,"                ImmutableList.of(""aaa"", ""value"", ""bbb""), Type.STRINGS);"
138667,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,99,,"        c.addChild(""three"").setProperty(""prop"","
138668,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,104,,"                ImmutableList.of(""/content/two"", ""/content/three""));"
138669,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,126,,"        c.addChild(""one"").setProperty(""prop"", ""aaaBoom"");"
138670,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,128,,"                ImmutableList.of(""aaaBoom"", ""bbbBoom"", ""cccBoom""), Type.STRINGS);"
138671,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,141,,"        c.addChild(""one"").addChild(""child"").setProperty(""prop"", ""aaa"");"
138672,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,181,,"        t1.setProperty(""jcr:primaryType"", ""rep:User"");"
138673,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,194,,"        sg.setProperty(""jcr:primaryType"", ""nt:unstructured"");"
138674,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,227,,"        root.getTree(""/"").addChild(""content"").addChild(""node1"")"
138675,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,232,,"                ImmutableList.of(""/content/node1""));"
138676,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,274,,"                ImmutableList.of(""/content/nodes/a""));"
138677,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,380,,"            of(""/content/nodes/a9"", ""/content/nodes/a10"", ""/content/nodes/a20"","
138678,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,380,,"            of(""/content/nodes/a9"", ""/content/nodes/a10"", ""/content/nodes/a20"","
138679,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,380,,"            of(""/content/nodes/a9"", ""/content/nodes/a10"", ""/content/nodes/a20"","
138680,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,381,,"                ""/content/nodes/a30""));"
138681,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,463,,"        content.addChild(""node2"").setProperty(""a"", ""abc"");"
138682,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/query/index/TraversingIndexQueryTest.java,464,,"        content.addChild(""node3"").setProperty(""a"", ""1280"");"
138683,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authentication/CallbackHandlerImplTest.java,69,,"        PasswordCallback cb = new PasswordCallback(""prompt"", false);"
138684,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authentication/Jackrabbit2ConfigurationTest.java,105,,"            sc.setAttribute("".token"", """");"
138685,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authentication/Jackrabbit2ConfigurationTest.java,241,,"            sc.setAttribute("".token.mandatory"", ""something"");"
138686,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authentication/Jackrabbit2ConfigurationTest.java,242,,"            sc.setAttribute(""attr"", ""val"");"
138687,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authentication/PreAuthTest.java,93,,"        Set<SimpleCredentials> publicCreds = Collections.singleton(new SimpleCredentials(""testUserId"", new char[0]));"
138688,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authentication/token/TokenAuthenticationTest.java,97,,"            fail(""LoginException expected"");"
138689,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authentication/token/TokenAuthenticationTest.java,203,,"        assertTrue(ta.authenticate(new TokenCredentials(""token"")));"
138690,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authentication/token/TokenInfoTest.java,92,,"        attributes.put(""something"", ""value"");"
138691,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authentication/token/TokenLoginModuleTest.java,139,,"            sc.setAttribute("".token"", """");"
138692,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authentication/token/TokenProviderImplExceptionTest.java,72,,"        assertNull(tp.createToken(new SimpleCredentials(""uid"", new char[0])));"
138693,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authentication/token/TokenProviderImplExceptionTest.java,79,,"        when(u.getPath()).thenReturn(""/testuser"");"
138694,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authentication/token/TokenProviderImplTest.java,93,,"        sc.setAttribute(""any_attribute"", ""value"");"
138695,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authentication/token/TokenValidatorTest.java,71,,"        Tree tree = TreeUtil.addChild(root.getTree(""/""), ""testNode"", JcrConstants.NT_UNSTRUCTURED);"
138696,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authentication/token/TokenValidatorTest.java,73,,"            tree.setProperty(TOKEN_ATTRIBUTE_KEY, ""anyValue"");"
138697,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authentication/user/LoginModuleImplTest.java,284,,"        sc.setAttribute(""attr"", ""value"");"
138698,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authentication/user/LoginModuleImplTest.java,284,,"        sc.setAttribute(""attr"", ""value"");"
138699,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/ACLTest.java,670,,"        Map<String, Value> restrictions = Collections.singletonMap(REP_GLOB, getValueFactory().createValue(""/.*""));"
138700,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/ACLTest.java,797,,"        RestrictionProvider rp = new TestRestrictionProvider(""mandatory"", Type.NAME, true);"
138701,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/ACLTest.java,808,,"        assertTrue(acl.addEntry(testPrincipal, testPrivileges, false, Collections.singletonMap(""mandatory"", getValueFactory(root).createValue(""name"", PropertyType.NAME)), Collections.emptyMap()));"
138702,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/AccessControlManagerImplTest.java,270,,"        acMgr.getSupportedPrivileges(""/jcr:primaryType"");"
138703,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/AccessControlManagerImplTest.java,382,,"        String nonExistingPath = ""/not/existing"";"
138704,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/AccessControlManagerImplTest.java,398,,"            fail(""AccessControlManager#hasPrivileges for node that doesn't exist should fail."");"
138705,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/AccessControlManagerImplTest.java,491,,"            fail(""AccessControlManager#getPrivileges  for node that doesn't exist should fail."");"
138706,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/AccessControlManagerImplTest.java,879,,"        TreeUtil.addChild(policyTree, ""child"", NT_OAK_UNSTRUCTURED);"
138707,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/AccessControlManagerImplTest.java,1118,,"        acl.addEntry(EveryonePrincipal.getInstance(), testPrivileges, false, TestUtility.getGlobRestriction(""*/something"", valueFactory));"
138708,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/AccessControlManagerImplTest.java,1226,,"            fail(""Setting invalid policy must fail"");"
138709,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/AccessControlManagerLimitedPermissionsTest.java,175,,"                fail(""AccessControlManager#hasPrivileges for node that is not accessible should fail."");"
138710,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/AccessControlValidatorTest.java,448,,"        NodeBuilder test = builder.child(""test"");"
138711,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/AccessControlValidatorTest.java,449,,"        NodeBuilder hidden = test.child("":hidden"");"
138712,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/AccessControlWithUnknownPrincipalTest.java,89,,"        Principal unknown = getPrincipalManager(root).getPrincipal(""unknown"");"
138713,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/AccessControlWithUnknownPrincipalTest.java,121,,"            assertImportBehavior(""Getting applicable policies for unknown principal with importBehavior ""+importBehaviorName+"" must not throw AccessControlException"");"
138714,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/PolicyComparatorTest.java,59,,"        JackrabbitAccessControlPolicy policy2 = when(mock(JackrabbitAccessControlPolicy.class).getPath()).thenReturn(""/some/path"").getMock();"
138715,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/composite/AbstractCompositeProviderTest.java,75,,"    static final PropertyState PROPERTY_STATE = PropertyStates.createProperty(""propName"", ""val"");"
138716,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/composite/AbstractCompositeProviderTest.java,75,,"    static final PropertyState PROPERTY_STATE = PropertyStates.createProperty(""propName"", ""val"");"
138717,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/composite/CompositeProviderAllTest.java,299,,"                put(""/nonexisting"", new String[] {Session.ACTION_READ, Session.ACTION_ADD_NODE})."
138718,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/composite/CompositeProviderCustomMixTest.java,75,,"                        String err = ""Checking "" + ps + "" in {supported: "" + supp1 + "", granted: "" + granted1 + ""} """
138719,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/composite/CompositeProviderCustomMixTest.java,75,,"                        String err = ""Checking "" + ps + "" in {supported: "" + supp1 + "", granted: "" + granted1 + ""} """
138720,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/composite/CompositeProviderCustomMixTest.java,76,,"                                + type + "" {supported: "" + supp2 + "", granted: "" + granted2 + ""}"";"
138721,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/composite/CompositeProviderCustomMixTest.java,331,,"            Assert.fail(""method should not be called"");"
138722,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/composite/CompositeProviderNoScopeTest.java,292,,"            assertTrue(p + "" : "" + actions, cppTestUser.isGranted(p, actions));"
138723,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/composite/CompositeProviderNoScopeTest.java,389,,"            assertEquals(nodePath + ""(default)"", expectedResult, tp2.canRead());"
138724,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/composite/CompositeTreePermissionTest.java,64,,"        TreeUtil.addChild(rootNode, ""test"", NodeTypeConstants.NT_OAK_UNSTRUCTURED);"
138725,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/composite/NoScopeProvider.java,64,,"        throw new UnsupportedOperationException(""should never get here"");"
138726,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/evaluation/IndexedQueryMixinTest.java,36,,"        node.setProperty(""jcr:title"", ""title"");"
138727,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/evaluation/IndexedQueryTest.java,33,,"        node.setProperty(""title"", ""a"");"
138728,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/evaluation/Jr2CompatibilityTest.java,117,,"        setupPermission(""/a/b"", testPrincipal, false, PrivilegeConstants.JCR_REMOVE_NODE);"
138729,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/evaluation/MultipleSessionsACLStabilityTest.java,65,,"        assertFalse(rootTree1.hasChild(""a/bb""));"
138730,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/evaluation/RootTest.java,43,,"        setupPermission(""/a/bb"", testPrincipal, false, PrivilegeConstants.JCR_READ);"
138731,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/evaluation/RootTest.java,47,,"        List<String> accessible = ImmutableList.of(""/"", ""/a"", ""/a/b"", ""/a/b/c"");"
138732,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/evaluation/RootTest.java,47,,"        List<String> accessible = ImmutableList.of(""/"", ""/a"", ""/a/b"", ""/a/b/c"");"
138733,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/evaluation/ShadowInvisibleContentTest.java,71,,"        assertNull(a.getProperty(""aProp""));"
138734,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/AbstractPermissionRandomTestIT.java,188,,"                assertEquals(""Unexpected #hasPrivileges on ["" + path + ""] expecting "" + hasPrivileges1 + "" got """
138735,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/AbstractPermissionRandomTestIT.java,188,,"                assertEquals(""Unexpected #hasPrivileges on ["" + path + ""] expecting "" + hasPrivileges1 + "" got """
138736,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/AbstractPermissionRandomTestIT.java,189,,"                        + hasPrivileges0 + "", seed "" + seed, hasPrivileges1, hasPrivileges0);"
138737,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/AbstractPermissionRandomTestIT.java,190,,"                assertEquals(""Unexpected #isGranted on ["" + path + ""] expecting "" + isGrantedA1 + "" got "" + isGrantedA0"
138738,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/MoveAwarePermissionValidatorTest.java,84,,"        TreeUtil.addChild(rootTree, ""src"", NodeTypeConstants.NT_OAK_UNSTRUCTURED);"
138739,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/MoveAwarePermissionValidatorTest.java,85,,"        TreeUtil.addChild(rootTree, ""dest"", NodeTypeConstants.NT_OAK_UNSTRUCTURED);"
138740,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/MoveAwarePermissionValidatorTest.java,97,,"            Tree src = root.getTree(""/src"");"
138741,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/MoveAwarePermissionValidatorTest.java,101,,"            Tree dest = root.getTree(""/dest"");"
138742,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/MoveAwarePermissionValidatorTest.java,142,,"        Validator validator = maValidator.childNodeAdded(""name"", mock(NodeState.class));"
138743,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionCacheBuilderTest.java,80,,"        PrincipalPermissionEntries ppeA = generatedPermissionEntries(""/path"", false, 0, REP_READ_NODES);"
138744,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionCacheBuilderTest.java,100,,"        when(store.load(""a"")).thenReturn(generatedPermissionEntries(""/path1"", false, 0, REP_READ_NODES));"
138745,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionCacheDefaultTest.java,54,,"        when(store.load(""a"", ""/path1"")).thenReturn(createPermissionEntryCollection(""/path1"", false, REP_READ_NODES));"
138746,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionCacheDefaultTest.java,55,,"        when(store.load(""b"", ""/path2"")).thenReturn(createPermissionEntryCollection(""/path2"", true, JCR_MODIFY_ACCESS_CONTROL));"
138747,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionCacheDefaultTest.java,88,,"        verify(store, never()).load(""a"", ""/any/other/path"");"
138748,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionEntryCacheTest.java,49,,"        permissionEntry = new PermissionEntry(""/path"", true, 0, PrivilegeBits.BUILT_IN.get(PrivilegeBits.JCR_READ), RestrictionPattern.EMPTY);"
138749,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionEntryProviderImplTest.java,66,,"        assertFalse(getBooleanField(provider, ""noExistingNames""));"
138750,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionEntryProviderImplTest.java,125,,"        assertFalse(getBooleanField(provider, ""initialized""));"
138751,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionHookTest.java,227,,"        Tree testAce = root.getTree(testPath + ""/rep:policy"").getChildren().iterator().next();"
138752,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionHookTest.java,539,,"        String aaPath = testPath + ""/Aa"";"
138753,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionHookTest.java,540,,"        String bbPath = testPath + ""/BB"";"
138754,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionHookTest.java,818,,"        Iterable newCnes = Collections.singleton(new MemoryChildNodeEntry("":hidden"", child));"
138755,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionStoreEditorTest.java,212,,"        when(parent.getChildNodeNames()).thenReturn(ImmutableSet.of(""collision""));"
138756,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionStoreImplTest.java,205,,"            Tree aa = TreeUtil.addChild(everyoneTree, ""/Aa"".hashCode() +"""", NT_REP_PERMISSION_STORE);"
138757,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionStoreImplTest.java,211,,"            Tree collision = TreeUtil.addChild(aa, ""c_""+""/BB"".hashCode(), NT_REP_PERMISSION_STORE);"
138758,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionUtilTest.java,69,,"        String path = ""/path"";"
138759,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PermissionValidatorTest.java,170,,"            validator.childNodeAdded(""any"", mock(NodeState.class));"
138760,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PrincipalPermissionEntriesTest.java,38,,"    private final PermissionEntry permissionEntry = new PermissionEntry(""/path"", true, 0, PrivilegeBits.BUILT_IN.get(PrivilegeBits.JCR_READ), RestrictionPattern.EMPTY);"
138761,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PrincipalPermissionEntriesTest.java,126,,"        ppe.putEntriesByPath(""/path2"", collection);"
138762,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/VersionTreePermissionTest.java,75,,"        AccessControlList acl = AccessControlUtils.getAccessControlList(acMgr, ""/test"");"
138763,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/VersionTreePermissionTest.java,147,,"        Tree vTree = versionHistory.getChild(""1.0"");"
138764,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/VersionTreePermissionTest.java,229,,"        root.getTree(""/test/a/b/c"").remove();"
138765,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/AbstractRestrictionProviderTest.java,78,,"        RestrictionDefinition mand = new RestrictionDefinitionImpl(""mandatory"", Type.BOOLEAN, true);"
138766,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/CompositeRestrictionProviderTest.java,61,,"            ""boolean"", new RestrictionDefinitionImpl(""boolean"", Type.BOOLEAN, true),"
138767,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/CompositeRestrictionProviderTest.java,62,,"            ""longs"", new RestrictionDefinitionImpl(""longs"", Type.LONGS, false)"
138768,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/CompositeRestrictionProviderTest.java,94,,"        Tree aceNode = TreeUtil.addChild(root.getTree(""/""), ""test"", NT_REP_GRANT_ACE);"
138769,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/CompositeRestrictionProviderTest.java,102,,"        Set<Restriction> restrictions = provider.readRestrictions(""/test"", aceNode);"
138770,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/GlobPatternTest.java,44,,"        GlobPattern gp = GlobPattern.create(""/a/b/c"", ""*"");"
138771,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/GlobPatternTest.java,47,,"        tests.put(""/a/b/c/d"", true);      // child of foo"
138772,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/GlobPatternTest.java,48,,"        tests.put(""/a/b/c/d/e"", true);    // child of foo"
138773,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/GlobPatternTest.java,49,,"        tests.put(""/a/b/c/d/e/f"", true);  // child of foo"
138774,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/GlobPatternTest.java,50,,"        tests.put(""/a/b/cde"", true);      // sibling"
138775,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/GlobPatternTest.java,65,,"        tests.put(""/a/b/c/e"", true);      // descendant with name segment 'e'"
138776,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/GlobPatternTest.java,71,,"        tests.put(""/a/b/cd/e"", true);     // descendant of sibling named 'e'"
138777,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/GlobPatternTest.java,82,,"        tests.put(""/a/b/c/d/f/e/f"", false);"
138778,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/GlobPatternTest.java,84,,"        tests.put(""/a/b/c/d/f/f"", false);"
138779,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/GlobPatternTest.java,86,,"        tests.put(""/a/b/ce/"", false);"
138780,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/GlobPatternTest.java,131,,"        tests.put(""/a/b/ce/f/g/h"", false);"
138781,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/GlobPatternTest.java,132,,"        tests.put(""/a/b/ce/d/e/f"", false);"
138782,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/GlobPatternTest.java,339,,"            assertEquals(gp + "" : "" + toTest, tests.get(toTest), gp.matches(toTest));"
138783,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/ItemNameRestrictionTest.java,125,,"        List<String> visible = ImmutableList.of(""/a"", ""/a/d/b"", ""/a/d/b/e/c"");"
138784,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/ItemNameRestrictionTest.java,125,,"        List<String> visible = ImmutableList.of(""/a"", ""/a/d/b"", ""/a/d/b/e/c"");"
138785,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/PrincipalRestrictionProviderTest.java,63,,"        Set<RestrictionDefinition> defs = provider.getSupportedRestrictions(""/testPath"");"
138786,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/RestrictionProviderImplTest.java,73,,"        Set<RestrictionDefinition> defs = provider.getSupportedRestrictions(""/testPath"");"
138787,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/RestrictionProviderImplTest.java,99,,"        map.put(PropertyStates.createProperty(REP_GLOB, ""/*/jcr:content""), GlobPattern.create(""/testPath"", ""/*/jcr:content""));"
138788,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/WhiteboardRestrictionProviderTest.java,70,,"        restrictionProvider.createRestriction(""/testPath"", ""name"", value);"
138789,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/restriction/WhiteboardRestrictionProviderTest.java,70,,"        restrictionProvider.createRestriction(""/testPath"", ""name"", value);"
138790,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/internal/ConfigurationInitializerTest.java,38,,"    private final ConfigurationParameters params = ConfigurationParameters.of(""key"", ""value"");"
138791,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/internal/ConfigurationInitializerTest.java,90,,"        assertTrue(parameters.containsKey(""key2""));"
138792,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/internal/ConfigurationInitializerTest.java,91,,"        assertEquals(""initialValue"", parameters.get(""key""));"
138793,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/internal/SecurityProviderRegistrationTest.java,166,,"        registration.activate(context.bundleContext(), configWithRequiredServiceIds(""serviceId""));"
138794,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/internal/SecurityProviderRegistrationTest.java,180,,"        registration.activate(context.bundleContext(), configWithRequiredServiceIds(""serviceA"", ""serviceB""));"
138795,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/internal/SecurityProviderRegistrationTest.java,200,,"        Field f = registration.getClass().getDeclaredField(""preconditions"");"
138796,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/internal/SecurityProviderRegistrationTest.java,232,,"        registration.activate(context.bundleContext(), configWithRequiredServiceIds(""rpId"", ""authorizationId""));"
138797,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/internal/SecurityProviderRegistrationTest.java,232,,"        registration.activate(context.bundleContext(), configWithRequiredServiceIds(""rpId"", ""authorizationId""));"
138798,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/internal/SecurityProviderRegistrationTest.java,270,,"        registration.activate(context.bundleContext(), configWithRequiredServiceIds(""nodeName""));"
138799,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/internal/SecurityProviderRegistrationTest.java,1010,,"        registration.activate(context.bundleContext(), configWithRequiredServiceIds(""f1"", ""f2"", ""ac1"", ""ac2""));"
138800,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/internal/SecurityProviderRegistrationTest.java,1010,,"        registration.activate(context.bundleContext(), configWithRequiredServiceIds(""f1"", ""f2"", ""ac1"", ""ac2""));"
138801,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/principal/AbstractPrincipalProviderTest.java,81,,"        groupId = ""testGroup"" + UUID.randomUUID();"
138802,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/principal/AbstractPrincipalProviderTest.java,300,,"            testUser = userMgr.createUser(""TestUser"", ""pw"");"
138803,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/privilege/PrivilegeBitsProviderTest.java,120,,"        pMgr.registerPrivilege(""test1"", true, null);"
138804,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/privilege/PrivilegeContextTest.java,60,,"                assertTrue(ctx.definesProperty(mockTree(""anyName"", ntName), property));"
138805,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/privilege/PrivilegeDefinitionWriterTest.java,75,,"                ""tmp"", true, asList(JCR_READ_ACCESS_CONTROL, JCR_MODIFY_ACCESS_CONTROL)));"
138806,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/privilege/PrivilegeImplTest.java,174,,"        Tree privDef = TreeUtil.addChild(privilegeDefs, ""test"", NT_REP_PRIVILEGE);"
138807,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/privilege/PrivilegeManagerImplTest.java,111,,"        NamePathMapper mapper = new NamePathMapperImpl(new LocalNameMapper(root, ImmutableMap.of(""prefix"", NamespaceRegistry.NAMESPACE_JCR)));"
138808,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/privilege/PrivilegeManagerImplTest.java,112,,"        Privilege p = create(root, mapper).getPrivilege(""prefix:read"");"
138809,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/privilege/PrivilegeManagerImplTest.java,155,,"        privilegeManager.registerPrivilege("""", true, new String[]{""jcr:read"", ""jcr:write""});"
138810,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/privilege/PrivilegeManagerImplTest.java,155,,"        privilegeManager.registerPrivilege("""", true, new String[]{""jcr:read"", ""jcr:write""});"
138811,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/privilege/PrivilegeValidatorTest.java,108,,"            createPrivilegeTree(""test"");"
138812,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/AbstractGroupPrincipalTest.java,91,,"                new PrincipalImpl(""name""),"
138813,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/AuthorizablePropertiesImplTest.java,84,,"        user2.setProperty(""prop"", v);"
138814,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/AuthorizablePropertiesImplTest.java,85,,"        user2.setProperty(""mvProp"", vArr);"
138815,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/AuthorizablePropertiesImplTest.java,87,,"        user2.setProperty(""relPath/prop"", v);"
138816,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/AuthorizablePropertiesImplTest.java,257,,"        Value v = vf.createValue(""newValue"");"
138817,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/CacheValidatorProviderTest.java,106,,"                fail(""Creating rep:cache node below a user or group must fail."");"
138818,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/CacheValidatorProviderTest.java,266,,"        TreeUtil.addChild(authorizableTree, ""child"", NodeTypeConstants.NT_OAK_UNSTRUCTURED);"
138819,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/CachedGroupPrincipalTest.java,128,,"            assertEquals(""org.apache.jackrabbit.oak.security.user.UserPrincipalProvider$CachedGroupPrincipal"", className);"
138820,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/ImpersonationImplEmptyTest.java,58,,"            return ""name"";"
138821,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/IntermediatePathTest.java,94,,"        assertTrue(authorizable.getPath().startsWith(UserConstants.DEFAULT_USER_PATH + ""/a/b/c""));"
138822,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/PasswordHistoryTest.java,51,,"            ""abc"", ""def"", ""ghi"", ""jkl"", ""mno"", ""pqr"", ""stu"", ""vwx"", ""yz0"", ""123"", ""456"", ""789"""
138823,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/RandomAuthorizableNodeNameTest.java,110,,"        User user = getUserManager(root).createUser(id, ""pw"", new PrincipalImpl(id), ""a/b"");"
138824,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/RepMembersConflictHandlerTest.java,94,,"        User u1 = um.createUser(""u1"", ""pass"");"
138825,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/RepMembersConflictHandlerTest.java,403,,"        PropertyState ours = PropertyStates.createProperty(""any"", ""value"");"
138826,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/RepMembersConflictHandlerTest.java,403,,"        PropertyState ours = PropertyStates.createProperty(""any"", ""value"");"
138827,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/RepMembersConflictHandlerTest.java,452,,"        assertSame(ThreeWayConflictHandler.Resolution.IGNORED, handler.addExistingNode(mock(NodeBuilder.class), ""name"", mock(NodeState.class), mock(NodeState.class)));"
138828,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserContextTest.java,67,,"            PropertyState property = PropertyStates.createProperty(propName, ""value"");"
138829,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserContextTest.java,69,,"            assertTrue(ctx.definesProperty(mockTree(""nodeName"", NT_REP_USER), property));"
138830,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserContextTest.java,138,,"        for (String propName : new String[] {""anyName"", JcrConstants.JCR_PRIMARYTYPE}) {"
138831,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserImplTest.java,122,,"        user.changePassword(""different"");"
138832,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserImporterImpersonationBestEffortTest.java,39,,"        assertTrue(importer.handlePropInfo(userTree, createPropInfo(REP_IMPERSONATORS, ""impersonator1"", ""impersonator2""), mockPropertyDefinition(NT_REP_USER, true)));"
138833,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserImporterImpersonationIgnoreTest.java,59,,"        assertTrue(importer.handlePropInfo(userTree, createPropInfo(REP_IMPERSONATORS, ""impersonator1"", ""impersonator2""), mockPropertyDefinition(NT_REP_USER, true)));"
138834,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserImporterMembershipIgnoreTest.java,70,,"        importer.startChildInfo(createNodeInfo(""memberRef"", NT_REP_MEMBER_REFERENCES), ImmutableList.of(createPropInfo(REP_MEMBERS, ""memberId"")));"
138835,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserImporterPasswordTreeTest.java,68,,"        PropInfo propInfo = createPropInfo(null, ""value"");"
138836,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserImporterPasswordTreeTest.java,112,,"        PropInfo propInfo = createPropInfo(""any"", ""value"");"
138837,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserImporterTest.java,195,,"        assertTrue(importer.handlePropInfo(userTree, createPropInfo(REP_PRINCIPAL_NAME, ""principalName""), mockPropertyDefinition(NT_REP_AUTHORIZABLE, false)));"
138838,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserImporterTest.java,303,,"        assertTrue(importer.handlePropInfo(userTree, createPropInfo(REP_IMPERSONATORS, ""impersonator1"", ""impersonator2""), mockPropertyDefinition(NT_REP_USER, true)));"
138839,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserImporterTest.java,336,,"        assertTrue(importer.handlePropInfo(groupTree, createPropInfo(REP_MEMBERS, ""member1"", ""member2""), mockPropertyDefinition(NT_REP_MEMBER_REFERENCES, true)));"
138840,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserImporterTest.java,368,,"        assertTrue(importer.handlePropInfo(userTree, createPropInfo(REP_DISABLED, ""disabled""), mockPropertyDefinition(NT_REP_USER, false)));"
138841,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserImporterTest.java,572,,"        Tree repMembers = groupTree.addChild(""memberTree"");"
138842,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserImporterTest.java,626,,"        importer.startChildInfo(createNodeInfo(""memberRef"", NT_REP_MEMBER_REFERENCES), ImmutableList.of(createPropInfo(REP_MEMBERS, ""member1"")));"
138843,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserManagerImplActionsTest.java,165,,"        gr1.addMembers(""memberId1"", ""memberId2"", gr1.getID());"
138844,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserProviderTest.java,173,,"        up.createUser(""uid"", null);"
138845,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserValidatorTest.java,386,,"        Tree nested = TreeUtil.addChild(profile, ""nested"", UserConstants.NT_REP_USER);"
138846,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserValidatorTest.java,427,,"        NodeBuilder test = builder.child(""test"");"
138847,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserValidatorTest.java,428,,"        NodeBuilder hidden = test.child("":hidden"");"
138848,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/action/PasswordValidationActionTest.java,76,,"        user.changePassword(""pW12345678"");"
138849,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/action/UserActionTest.java,117,,"        assertFalse(t.hasChild(""profiles""));"
138850,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/autosave/AuthorizableImplTest.java,142,,"        assertEquals(dlg.hasProperty(""propName""), a.hasProperty(""propName""));"
138851,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/autosave/AutoSaveEnabledManagerTest.java,157,,"        autosaveMgr.createUser(""u"", ""u"", new PrincipalImpl(""u""), ""rel/path"");"
138852,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/autosave/AutoSaveEnabledManagerTest.java,230,,"        u.setProperty(""prop"", getValueFactory().createValue(""value""));"
138853,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/autosave/UserImplTest.java,85,,"        user.changePassword(""newPw"");"
138854,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/query/QueryUtilTest.java,112,,"                UserConstants.PARAM_USER_PATH, ""/users"","
138855,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/query/ResultIteratorTest.java,40,,"        Iterator<String> it = ImmutableList.of(""str"").iterator();"
138856,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/query/UserQueryManagerTest.java,156,,"        Value vs = valueFactory.createValue(""value \\, containing backslash"");"
138857,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/query/UserQueryManagerTest.java,176,,"        Value vs = valueFactory.createValue(""value ' with apostrophe"");"
138858,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/query/UserQueryManagerTest.java,217,,"        Iterator<Authorizable> result = queryMgr.findAuthorizables(""rel/path/to/"" + propertyName, v.getString(), AuthorizableType.USER, false);"
138859,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/query/UserQueryManagerTest.java,524,,"        Group g = createGroup(""group_with_underscore"", null);"
138860,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/query/UserQueryManagerTest.java,567,,"        user.setProperty(""subtree/""+REP_DISABLED, valueFactory.createValue(""disabled""));"
138861,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/query/XPathConditionVisitorTest.java,149,,"        assertFalse(s.contains(""@rcj:primaryType='"" + UserConstants.NT_REP_USER + ""'""));"
138862,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/query/XPathQueryBuilderTest.java,75,,"        builder.setSortOrder(""propName"", QueryBuilder.Direction.DESCENDING);"
138863,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/query/XPathQueryBuilderTest.java,185,,"        Condition c = builder.nameMatches(""pattern"");"
138864,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/whiteboard/WhiteboardUserAuthenticationFactoryTest.java,66,,"        WhiteboardUserAuthenticationFactory factory = createFactory(null, ""test"");"
138865,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/whiteboard/WhiteboardUserAuthenticationFactoryTest.java,69,,"        assertNull(factory.getAuthentication(getUserConfiguration(), root, ""another""));"
138866,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/whiteboard/WhiteboardUserAuthenticationFactoryTest.java,74,,"        WhiteboardUserAuthenticationFactory factory = createFactory(null, ""test"", ""test2"");"
138867,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/whiteboard/WhiteboardUserAuthenticationFactoryTest.java,83,,"        WhiteboardUserAuthenticationFactory factory = createFactory(new TestUserAuthenticationFactory(""abc""));"
138868,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/spi/commit/PrefilteringBackgroundObserverTest.java,97,,"            throw new IllegalStateException(""nyi"");"
138869,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/spi/commit/PrefilteringBackgroundObserverTest.java,338,,"                assertEquals(""loopCnt=""+loopCnt+"", queue size mis-match at start"", "
138870,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/spi/whiteboard/WhiteboardUtilsTest.java,60,,"        regs.add(WhiteboardUtils.registerMBean(wb, HelloMBean.class, hello, ""test"", ""hello""));"
138871,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/spi/whiteboard/WhiteboardUtilsTest.java,60,,"        regs.add(WhiteboardUtils.registerMBean(wb, HelloMBean.class, hello, ""test"", ""hello""));"
138872,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/spi/whiteboard/WhiteboardUtilsTest.java,114,,"        assertEquals(""SINGLE"", props.get().get(""scheduler.runOn""));"
138873,./TargetProjects/jackrabbit-oak/oak-core/src/test/java/org/apache/jackrabbit/oak/spi/whiteboard/WhiteboardUtilsTest.java,114,,"        assertEquals(""SINGLE"", props.get().get(""scheduler.runOn""));"
138874,./TargetProjects/jackrabbit-oak/oak-doc-railroad-macro/src/main/java/org/apache/jackrabbit/oak/doc/doxia/jcr/BnfRailroad.java,139,,"            buff.append(""<table class=\""railroad\"">"");"
138875,./TargetProjects/jackrabbit-oak/oak-examples/webapp/src/test/java/org/apache/jackrabbit/j2ee/TomcatIT.java,58,,"        for (File f : new File(""target"").listFiles()) {"
138876,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/accesscontrol/L8_GlobRestrictionTest.java,76,,"        RestrictionPattern globPattern = buildGlobPattern(""/a/b/c"",""*"");"
138877,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/accesscontrol/L8_GlobRestrictionTest.java,83,,"        tests.put(""/a/b/c/d/e/f"", true|true|false);"
138878,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/accesscontrol/L8_GlobRestrictionTest.java,84,,"        tests.put(""/a/b/cde"", true|true|false);"
138879,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/accesscontrol/L8_GlobRestrictionTest.java,102,,"        tests.put(""/a/b/c/e"", true|false);"
138880,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/accesscontrol/L8_GlobRestrictionTest.java,103,,"        tests.put(""/a/b/c/d/e"", true|false);"
138881,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/accesscontrol/L8_GlobRestrictionTest.java,107,,"        tests.put(""/a/b/ce/"", true|false);"
138882,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/accesscontrol/L8_GlobRestrictionTest.java,110,,"        tests.put(""/a/b/cd/e"", true|false);"
138883,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/accesscontrol/L8_GlobRestrictionTest.java,114,,"        tests.put(""/a/b/c/d"", true|false);"
138884,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/accesscontrol/L8_GlobRestrictionTest.java,116,,"        tests.put(""/a/b/c/d/f/e/f"", true|false);"
138885,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/accesscontrol/L8_GlobRestrictionTest.java,118,,"        tests.put(""/a/b/c/d/f/f"", true|false);"
138886,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/advanced/L3_UnderstandAggregationTest.java,159,,"            root.getTree(""/content"").remove();"
138887,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/advanced/L3_UnderstandAggregationTest.java,160,,"            root.getTree(""/var"").remove();"
138888,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/advanced/L3_UnderstandAggregationTest.java,194,,"            t = r.getTree(""/content/c2"");"
138889,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/advanced/L3_UnderstandAggregationTest.java,198,,"            t = r.getTree(""/content/c1"");"
138890,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/advanced/L4_CustomAccessControlManagementTest.java,224,,"        threeRolesAuthorizationConfiguration.setParameters(ConfigurationParameters.of(""supportedPath"", ""/test""));"
138891,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/advanced/L4_CustomAccessControlManagementTest.java,296,,"        AccessControlPolicy[] policies = getAcManager(root).getPolicies(""/test/a"");"
138892,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/advanced/L4_CustomAccessControlManagementTest.java,483,,"                        ""</sv:node>"" +"
138893,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/advanced/L4_CustomAccessControlManagementTest.java,488,,"            Node n = adminSession.getNode(""/test/another"");"
138894,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/permission/L2_PermissionDiscoveryTest.java,179,,"                childPath + ""/new"", existsAndHasPermission(null, null)"
138895,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/authorization/principalbased/L3_PermissionEvaluationTest.java,108,,"        testTree.setProperty(""prop"", ""value"");"
138896,./TargetProjects/jackrabbit-oak/oak-exercise/src/test/java/org/apache/jackrabbit/oak/exercise/security/privilege/L7_PrivilegeDiscoveryTest.java,195,,"                testRoot, new String[] {null, null, null, null, null, ""...""}, // EXERCISE"
138897,./TargetProjects/jackrabbit-oak/oak-http/src/main/java/org/apache/jackrabbit/oak/http/OakServlet.java,103,,"                request.setAttribute(""tree"", tree);"
138898,./TargetProjects/jackrabbit-oak/oak-http/src/main/java/org/apache/jackrabbit/oak/http/OakServlet.java,104,,"                request.setAttribute(""path"", tail);"
138899,./TargetProjects/jackrabbit-oak/oak-it-osgi/src/test/java/org/apache/jackrabbit/oak/osgi/OSGiIT.java,62,,"                mavenBundle(""org.apache.felix"", ""org.apache.felix.scr"", ""2.0.12""),"
138900,./TargetProjects/jackrabbit-oak/oak-it-osgi/src/test/java/org/apache/jackrabbit/oak/osgi/TikaExtractionOsgiIT.java,116,,"                        , wrappedBundle(mavenBundle(""org.apache.poi"", ""poi"", versions.get(POI_VERSION)))"
138901,./TargetProjects/jackrabbit-oak/oak-it-osgi/src/test/java/org/apache/jackrabbit/oak/osgi/TikaExtractionOsgiIT.java,124,,"                        , mavenBundle(""org.apache.commons"", ""commons-collections4"", versions.get(COLLECTIONS4_VERSION))"
138902,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/api/TreeTest.java,93,,"            t.addChild(""node1"");"
138903,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/api/TreeTest.java,94,,"            t.addChild(""node2"");"
138904,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/api/TreeTest.java,95,,"            t.addChild(""node3"");"
138905,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/api/TreeTest.java,182,,"                t1.addChild(""node4"");"
138906,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreBuilderTest.java,43,,"                .mount(""temp"", ""/tmp"")"
138907,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreBuilderTest.java,43,,"                .mount(""temp"", ""/tmp"")"
138908,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreBuilderTest.java,55,,"                .readOnlyMount(""readOnly"", ""/readOnly"")"
138909,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreClusterObservationTest.java,70,,"        observer = new TestNodeObserver(""/test"");"
138910,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreClusterObservationTest.java,78,,"        builder.child(""test"").setProperty(""foo"", ""bar"");"
138911,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreClusterObservationTest.java,78,,"        builder.child(""test"").setProperty(""foo"", ""bar"");"
138912,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreClusterObservationTest.java,78,,"        builder.child(""test"").setProperty(""foo"", ""bar"");"
138913,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,127,,"                .readOnlyMount(""readOnly"", ""/readOnly"")"
138914,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,138,,"        builder.setProperty(""prop"", ""val"");"
138915,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,138,,"        builder.setProperty(""prop"", ""val"");"
138916,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,145,,"        NodeBuilder libsBuilder = builder.child(""libs"");"
138917,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,150,,"        builder.child(""apps"").setProperty(""prop"", ""val"");"
138918,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,158,,"        NodeBuilder tmpBuilder = builder.child(""tmp"");"
138919,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,160,,"        tmpBuilder.child(""child1"").setProperty(""prop1"", ""val1"");"
138920,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,272,,"        globalBuilder.child(""new"");"
138921,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,356,,"        builder.child(""newNode"");"
138922,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,399,,"        builder.child(""newChild"");"
138923,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,459,,"        assertFalse(""builder.isNew"", builder.isNew());"
138924,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,460,,"        assertFalse(""builder.isModified"", builder.isModified());"
138925,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,461,,"        assertFalse(""builder.isReplaced"", builder.isReplaced());"
138926,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,541,,"        NodeBuilder src = builder.child(""src"");"
138927,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,612,,"        rootBuilder.setProperty(""newProperty"", true, Type.BOOLEAN);"
138928,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,648,,"        globalBuilder.child(""new"").setProperty(""store"", ""global"", Type.STRING);"
138929,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,674,,"        createIndexDefinition(globalBuilder.child(INDEX_DEFINITIONS_NAME), ""foo"","
138930,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreTest.java,682,,"        builder.child(""content"").setProperty(""foo"", ""bar"");"
138931,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/PrivateStoreValidatorProviderTest.java,82,,"        t.addChild(""node1"").setProperty(""jcr:primaryType"", ""nt:base"");"
138932,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/PrivateStoreValidatorProviderTest.java,82,,"        t.addChild(""node1"").setProperty(""jcr:primaryType"", ""nt:base"");"
138933,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/composite/PrivateStoreValidatorProviderTest.java,82,,"        t.addChild(""node1"").setProperty(""jcr:primaryType"", ""nt:base"");"
138934,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/core/MutableTreeTest.java,90,,"        Tree child = tree.getChild(""any"");"
138935,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/core/MutableTreeTest.java,150,,"        assertFalse(tree.hasChild(""new""));"
138936,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/core/MutableTreeTest.java,366,,"        tree.addChild(""one"").addChild(""two"");"
138937,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/core/RootTest.java,151,,"        Tree t = tree.addChild(""new"");"
138938,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/core/RootTest.java,243,,"        root2.getTree(""/"").addChild(""one"").addChild(""two"").addChild(""three"")"
138939,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/core/RootTest.java,243,,"        root2.getTree(""/"").addChild(""one"").addChild(""two"").addChild(""three"")"
138940,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/core/RootTest.java,243,,"        root2.getTree(""/"").addChild(""one"").addChild(""two"").addChild(""three"")"
138941,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/core/RootTest.java,265,,"        Tree added = x.addChild(""added"");"
138942,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/plugins/blob/datastore/DataStoreTrackerGCTest.java,131,,"        Cluster cluster = new Cluster(""cluster1"");"
138943,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdateLeaseTest.java,65,,"                ""rootIndex"", true, false, ImmutableSet.of(""foo""), null)"
138944,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/plugins/name/ReadWriteNamespaceRegistryTest.java,68,,"        assertEquals(""http://www.w3.org/XML/1998/namespace"", r.getURI(""xml""));"
138945,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/ClusterPermissionsTest.java,161,,"        userManager1.createUser(""testUser"", ""testUser"");"
138946,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/ClusterPermissionsTest.java,173,,"        JackrabbitAccessControlList acl1 = AccessControlUtils.getAccessControlList(aclMgr1, ""/testNode"");"
138947,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/ClusterPermissionsTest.java,192,,"        User user1 = userManager1.createUser(""testUser1"", ""testUser1"");"
138948,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/ClusterPermissionsTest.java,193,,"        User user2 = userManager1.createUser(""testUser2"", ""testUser2"");"
138949,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/spi/commit/CommitContextTest.java,84,,"        root.commit(ImmutableMap.<String, Object>of(""foo"", ""bar""));"
138950,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/spi/state/NodeBuilderTest.java,68,,"        NodeBuilder added = root.setChildNode(""added"");"
138951,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/spi/state/NodeStoreTest.java,76,,"        NodeBuilder test = builder.child(""test"");"
138952,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/spi/state/NodeStoreTest.java,97,,"        assertEquals(root.getChildNode(""test"").getChildNode(""any""),"
138953,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/spi/state/NodeStoreTest.java,128,,"        b1.setChildNode(""conflict"");"
138954,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/spi/state/NodeStoreTest.java,152,,"        b1.setChildNode(""addExistingNodeJCRLastModified"").setProperty(JCR_LASTMODIFIED, calendar);"
138955,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/spi/state/NodeStoreTest.java,194,,"        NodeBuilder newNodeBuilder = testBuilder.child(""newNode"");"
138956,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/spi/state/NodeStoreTest.java,293,,"        NodeBuilder parent = root.child(""parent"");"
138957,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/spi/state/NodeStoreTest.java,302,,"        parent.child(""child-new"");"
138958,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/spi/state/NodeStoreTest.java,315,,"        parent.getChildNode(""child-new"").moveTo(parent, ""child-moved"");"
138959,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/spi/state/NodeStoreTest.java,329,,"        parent.child(""child-moved"").setProperty(""foo"", ""value"");"
138960,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/spi/state/NodeStoreTest.java,329,,"        parent.child(""child-moved"").setProperty(""foo"", ""value"");"
138961,./TargetProjects/jackrabbit-oak/oak-it/src/test/java/org/apache/jackrabbit/oak/spi/state/NodeStoreTest.java,331,,"                new MultiStringPropertyState(""bar"", Arrays.asList(""value"")));"
138962,./TargetProjects/jackrabbit-oak/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/delegate/NodeDelegate.java,804,,"            throw new ItemNotFoundException(""Node "" + path + "" does not exist"");"
138963,./TargetProjects/jackrabbit-oak/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/delegate/UserManagerDelegator.java,208,,"        return sessionDelegate.perform(new UserManagerOperation<Group>(sessionDelegate, ""createGroup"", true) {"
138964,./TargetProjects/jackrabbit-oak/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/observation/ConsolidatedListenerMBeanImpl.java,117,,"                    ""Consolidated Listener Stats"", ListenerStatsData.TYPE, new String[]{""index""});"
138965,./TargetProjects/jackrabbit-oak/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/observation/ConsolidatedListenerMBeanImpl.java,253,,"    @SuppressWarnings(""unused"")"
138966,./TargetProjects/jackrabbit-oak/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/version/VersionManagerImpl.java,70,,"        throw new UnsupportedRepositoryOperationException(""OAK-827: Activities not implemented."");"
138967,./TargetProjects/jackrabbit-oak/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/version/VersionManagerImpl.java,231,,"        throw new UnsupportedRepositoryOperationException(""OAK-1402: Merge not implemented."");"
138968,./TargetProjects/jackrabbit-oak/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/xml/BufferedStringValue.java,138,,"            value = new String(out.toByteArray(), ""UTF-8"");"
138969,./TargetProjects/jackrabbit-oak/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/xml/BufferedStringValue.java,171,,"            throw new IOException(""this instance has already been disposed"");"
138970,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/CRUDTest.java,55,,"        Node mixinTest = session.getRootNode().addNode(nodename, ""nt:folder"");"
138971,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/CRUDTest.java,126,,"            root.setProperty(""test"", ""abc"");"
138972,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/CompatibilityIssuesTest.java,132,,"                    session1.getNode(""/testNode"").setProperty(""p1"", -1);"
138973,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/CompatibilityIssuesTest.java,268,,"        s2.getNode(testNodePath).setProperty(""foo"", ""bar"");"
138974,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ConcurrentAddNodesClusterIT.java,226,,"        Session s1 = r1.login(new SimpleCredentials(""admin"", ""admin"".toCharArray()));"
138975,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ConcurrentAddNodesClusterIT.java,276,,"        Node root2 = s2.getRootNode().addNode(""testroot-Worker-2"", ""nt:unstructured"");"
138976,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ConcurrentFileOperationsTest.java,70,,"                ""test-node"", ""nt:unstructured"");"
138977,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/CopyTest.java,75,,"        session.getWorkspace().copy(TEST_PATH + ""/source/node"", TEST_PATH + ""/target/copied"");"
138978,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/CopyTest.java,75,,"        session.getWorkspace().copy(TEST_PATH + ""/source/node"", TEST_PATH + ""/target/copied"");"
138979,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/CopyTest.java,77,,"        assertTrue(testNode.hasNode(""source/node""));"
138980,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/CopyTest.java,78,,"        assertTrue(testNode.hasNode(""target/copied""));"
138981,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ItemSaveTest.java,89,,"            fail(""Expected UnsupportedRepositoryOperationException"");"
138982,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ItemSaveTest.java,109,,"        prop0.setValue(""changed"");"
138983,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/JackrabbitNodeTest.java,188,,"        Node n = testRootNode.addNode(""foo"", ""nt:folder"");"
138984,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/JackrabbitNodeTest.java,188,,"        Node n = testRootNode.addNode(""foo"", ""nt:folder"");"
138985,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/JackrabbitNodeTest.java,189,,"        ((JackrabbitNode) n).setMixins(new String[]{""test:AA"", ""test:A""});"
138986,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/JackrabbitNodeTest.java,189,,"        ((JackrabbitNode) n).setMixins(new String[]{""test:AA"", ""test:A""});"
138987,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/JackrabbitNodeTest.java,277,,"        n.setProperty(""test:propAA"", ""AA"");"
138988,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/JackrabbitNodeTest.java,278,,"        n.setProperty(""test:propA"", ""A"");"
138989,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/LargeOperationIT.java,241,,"        final Node n = session.getRootNode().addNode(""large-commit"", ""oak:Unstructured"");"
138990,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/MoveRemoveTest.java,39,,"        session.getRootNode().addNode(""new"");"
138991,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/MoveRemoveTest.java,42,,"        Node n = session.getNode(""/new"");"
138992,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/MoveRemoveTest.java,102,,"        session.getRootNode().addNode(""parent"").addNode(""new"");"
138993,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/MoveRemoveTest.java,105,,"        Node n = session.getNode(""/parent/new"");"
138994,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/MoveRemoveTest.java,169,,"        session.move(""/new"", ""/moved"");"
138995,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/MoveRemoveTest.java,219,,"        Node p = session.getNode(""/parent"");"
138996,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/NameAndPathPropertyTest.java,38,,"        Node testRootNode = session.getRootNode().addNode(""testRoot"");"
138997,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/NameAndPathPropertyTest.java,53,,"            testRootNode.setProperty(""testPathProperty"", new String[]{"
138998,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ObservationQueueTest.java,220,,"                    node = node.getNode(""node-"" + r.nextInt(NUM_CHILDREN));"
138999,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/OrderableNodesTest.java,56,,"        Node n = session.getRootNode().addNode(""test"", ""nt:unstructured"");"
