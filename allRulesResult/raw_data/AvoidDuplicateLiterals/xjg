240000,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/MultiplicationTest.java,67,,"		config.addVariable(""doubleintop1"", doubleIntValue1);"
240001,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/MultiplicationTest.java,68,,"		config.addVariable(""doubleintop2"", doubleIntValue2);"
240002,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/MultiplicationTest.java,81,,"		writeExpectedHelperMatrix(""double_int"", computedDoubleIntValue);"
240003,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,35,,"		addTestConfiguration(""ConstConstTest"", new TestConfiguration(TEST_CLASS_DIR, ""PowerTest"","
240004,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,36,,"				new String[] { ""int_int"", ""int_double"", ""double_double"", ""double_double""}));"
240005,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,36,,"				new String[] { ""int_int"", ""int_double"", ""double_double"", ""double_double""}));"
240006,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,36,,"				new String[] { ""int_int"", ""int_double"", ""double_double"", ""double_double""}));"
240007,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,57,,"		config.addVariable(""intintvardeclaration"", """");"
240008,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,58,,"		config.addVariable(""intintop1"", intIntValue1);"
240009,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,59,,"		config.addVariable(""intintop2"", intIntValue2);"
240010,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,60,,"		config.addVariable(""intdoublevardeclaration"", """");"
240011,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,61,,"		config.addVariable(""intdoubleop1"", intDoubleValue1);"
240012,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,62,,"		config.addVariable(""intdoubleop2"", intDoubleValue2);"
240013,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,63,,"		config.addVariable(""doubledoublevardeclaration"", """");"
240014,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,64,,"		config.addVariable(""doubledoubleop1"", doubleDoubleValue1);"
240015,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,65,,"		config.addVariable(""doubledoubleop2"", doubleDoubleValue2);"
240016,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,66,,"		config.addVariable(""doubleintvardeclaration"", """");"
240017,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,67,,"		config.addVariable(""doubleintop1"", doubleIntValue1);"
240018,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,68,,"		config.addVariable(""doubleintop2"", doubleIntValue2);"
240019,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/PowerTest.java,81,,"		writeExpectedHelperMatrix(""double_int"", computedDoubleIntValue);"
240020,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,35,,"		addTestConfiguration(""ConstConstTest"", new TestConfiguration(TEST_CLASS_DIR, ""SubtractionTest"", new String[] {"
240021,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,35,,"		addTestConfiguration(""ConstConstTest"", new TestConfiguration(TEST_CLASS_DIR, ""SubtractionTest"", new String[] {"
240022,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,36,,"				""int_int"", ""int_double"", ""double_double"", ""double_double"" }));"
240023,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,36,,"				""int_int"", ""int_double"", ""double_double"", ""double_double"" }));"
240024,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,36,,"				""int_int"", ""int_double"", ""double_double"", ""double_double"" }));"
240025,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,67,,"		config.addVariable(""intintvardeclaration"", """");"
240026,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,68,,"		config.addVariable(""intintop1"", intIntValue1);"
240027,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,69,,"		config.addVariable(""intintop2"", intIntValue2);"
240028,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,70,,"		config.addVariable(""intdoublevardeclaration"", """");"
240029,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,71,,"		config.addVariable(""intdoubleop1"", intDoubleValue1);"
240030,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,72,,"		config.addVariable(""intdoubleop2"", intDoubleValue2);"
240031,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,73,,"		config.addVariable(""doubledoublevardeclaration"", """");"
240032,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,74,,"		config.addVariable(""doubledoubleop1"", doubleDoubleValue1);"
240033,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,75,,"		config.addVariable(""doubledoubleop2"", doubleDoubleValue2);"
240034,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,76,,"		config.addVariable(""doubleintvardeclaration"", """");"
240035,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,77,,"		config.addVariable(""doubleintop1"", doubleIntValue1);"
240036,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,78,,"		config.addVariable(""doubleintop2"", doubleIntValue2);"
240037,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,91,,"		writeExpectedHelperMatrix(""double_int"", computedDoubleIntValue);"
240038,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,153,,"		config.addVariable(""intintvardeclaration"", ""IntIntVar = "" + intIntValue1 + "";"");"
240039,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,154,,"		config.addVariable(""intintop1"", ""IntIntVar"");"
240040,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,156,,"		config.addVariable(""intdoublevardeclaration"", ""IntDoubleVar = "" + intDoubleValue1 + "";"");"
240041,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,157,,"		config.addVariable(""intdoubleop1"", ""IntDoubleVar"");"
240042,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,159,,"		config.addVariable(""doubledoublevardeclaration"", ""DoubleDoubleVar = "" + doubleDoubleValue1 + "";"");"
240043,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,160,,"		config.addVariable(""doubledoubleop1"", ""DoubleDoubleVar"");"
240044,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,162,,"		config.addVariable(""doubleintvardeclaration"", ""DoubleIntVar = "" + doubleIntValue1 + "";"");"
240045,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/SubtractionTest.java,163,,"		config.addVariable(""doubleintop1"", ""DoubleIntVar"");"
240046,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/XorTest.java,49,,"		runXor(""TRUE"", ""FALSE"", true);"
240047,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/scalar/XorTest.java,49,,"		runXor(""TRUE"", ""FALSE"", true);"
240048,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/tensor/ElementwiseAdditionTest.java,58,,"				{new int[]{2000, 2000}, new int[]{2000, 2000}, ""3.0"", ""-2.0""},"
240049,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/binary/tensor/ElementwiseMultiplicationTest.java,58,,"				{new int[]{2000, 2000}, new int[]{2000, 2000}, ""3.0"", ""-2.0""},"
240050,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinArimaTest.java,96,,"					""model="" + output(""learnt.model""),};"
240051,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinCorrectTyposTest.java,69,,"		 runCorrectTyposTest(""TRUE"", 0.1, 3,"
240052,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinCorrectTyposTest.java,70,,"			 ""FALSE"", ""FALSE"", 41, false, ExecType.CP);"
240053,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinCsplineTest.java,74,,"		proArgs.add(output(""pred_y""));"
240054,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinDMVTest.java,66,,"		String[] disguised_values = new String[]{""?"", ""9999"", ""?"", ""9999""};"
240055,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinGMMTest.java,51,,"	public void testGMMMDefault() { runGMMTest(10, ""VVV"", ""kmeans"", 100,"
240056,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinGMMTest.java,51,,"	public void testGMMMDefault() { runGMMTest(10, ""VVV"", ""kmeans"", 100,"
240057,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinGMMTest.java,55,,"	public void testGMMM1() { runGMMTest(3, ""VVV"", ""random"", 100,"
240058,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinGMMTest.java,60,,"		runGMMTest(3, ""EEE"", ""random"", 150,"
240059,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinGMMTest.java,66,,"		runGMMTest(3, ""VVI"", ""random"", 10,"
240060,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinGMMTest.java,72,,"		runGMMTest(3, ""VII"", ""random"", 50,"
240061,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinGarchTest.java,89,,"					""model="" + output(""learnt.model""),};"
240062,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinImputeFDTest.java,111,,"				s1 = new String[] {""TU-Graz"", ""TU-Graz"", ""TU-Graz"", ""IIT"", ""IIT"", ""IIT"", ""IIT"", ""SIBA"", ""SIBA"", ""SIBA"", ""TU-Wien""};"
240063,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinImputeFDTest.java,111,,"				s1 = new String[] {""TU-Graz"", ""TU-Graz"", ""TU-Graz"", ""IIT"", ""IIT"", ""IIT"", ""IIT"", ""SIBA"", ""SIBA"", ""SIBA"", ""TU-Wien""};"
240064,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinImputeFDTest.java,111,,"				s1 = new String[] {""TU-Graz"", ""TU-Graz"", ""TU-Graz"", ""IIT"", ""IIT"", ""IIT"", ""IIT"", ""SIBA"", ""SIBA"", ""SIBA"", ""TU-Wien""};"
240065,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinImputeFDTest.java,112,,"				s2 = new String[] {""Austria"", ""Austria"", ""Austria"", ""India"", ""IIT"", ""India"", ""India"", ""Pakistan"", ""Pakistan"", ""Austria"", ""Austria""};"
240066,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinImputeFDTest.java,112,,"				s2 = new String[] {""Austria"", ""Austria"", ""Austria"", ""India"", ""IIT"", ""India"", ""India"", ""Pakistan"", ""Pakistan"", ""Austria"", ""Austria""};"
240067,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinImputeFDTest.java,112,,"				s2 = new String[] {""Austria"", ""Austria"", ""Austria"", ""India"", ""IIT"", ""India"", ""India"", ""Pakistan"", ""Pakistan"", ""Austria"", ""Austria""};"
240068,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinKmTest.java,44,,"			1, 10, 0.05,""greenwood"", ""log"", ""none"");"
240069,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinMulticlassSVMPredictTest.java,42,,"		addTestConfiguration(TEST_NAME, new TestConfiguration(TEST_CLASS_DIR, TEST_NAME, new String[] {""YRaw"", ""Y""}));"
240070,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinNaLocfTest.java,50,,"		runLocfTest(false, ""locf"", ExecType.CP);"
240071,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinNaLocfTest.java,70,,"		runLocfTest(false, ""nocb"", ExecType.CP);"
240072,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinNaiveBayesPredictTest.java,43,,"		addTestConfiguration(TEST_NAME, new TestConfiguration(TEST_CLASS_DIR, TEST_NAME, new String[] {""YRaw"", ""Y""}));"
240073,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinOutlierByArima.java,87,,"				""outputfilename="" + output(""result""),};"
240074,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinXgBoostTest_classification.java,95,,"			TestUtils.compareScalars(String.valueOf(actual_M.get(new MatrixValue.CellIndex(6, 2))), ""null"");"
240075,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/builtin/BuiltinXgBoostTest_regression.java,95,,"			TestUtils.compareScalars(String.valueOf(actual_M.get(new MatrixValue.CellIndex(3, 8))), ""null"");"
240076,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/codegen/OuterProdTmplTest.java,238,,"				Assert.assertTrue(!(heavyHittersContainsSubString(""spoofOP"")"
240077,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/codegen/OuterProdTmplTest.java,239,,"						|| heavyHittersContainsSubString(""sp_spoofOP"")));"
240078,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/codegen/RowAggTmplTest.java,822,,"			Assert.assertTrue(heavyHittersContainsSubString(""spoofRA"") "
240079,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/codegenalg/partone/AlgorithmAutoEncoder.java,237,,"			TestUtils.compareMatrices(dmlW1, rW1, eps, ""Stat-DML"", ""Stat-R"");"
240080,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/codegenalg/partone/AlgorithmAutoEncoder.java,237,,"			TestUtils.compareMatrices(dmlW1, rW1, eps, ""Stat-DML"", ""Stat-R"");"
240081,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/data/misc/NoRenameTest.java,62,,"		runRenameTest(""text"", false, ExecMode.SINGLE_NODE);"
240082,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/data/misc/NoRenameTest.java,72,,"		runRenameTest(""csv"", false, ExecMode.SINGLE_NODE);"
240083,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/data/misc/NoRenameTest.java,92,,"		runRenameTest(""libsvm"", false, ExecMode.SINGLE_NODE);"
240084,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/data/misc/NoRenameTest.java,102,,"		runRenameTest(""binary"", false, ExecMode.SINGLE_NODE);"
240085,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/data/misc/ReadMMTest.java,74,,"			new TestConfiguration(TEST_CLASS_DIR, ""ReadMMTest"", new String[] { ""a"" }));"
240086,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/data/misc/ReadMMTest.java,109,,"		config.addVariable(""rows"", rows);"
240087,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/data/misc/ReadMMTest.java,110,,"		config.addVariable(""cols"", cols);"
240088,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/data/misc/ReadMMTest.java,111,,"		config.addVariable(""format"", ""text"");"
240089,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/data/misc/ReadMMTest.java,111,,"		config.addVariable(""format"", ""text"");"
240090,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/data/misc/ReadMMTest.java,235,,"		config.addVariable(""format"", ""binary"");"
240091,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/data/misc/WriteReadZeroDimsTest.java,55,,"		runZeroDimsTest(Type.Zero_Rows, ""text"", ExecType.CP);"
240092,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/data/misc/WriteReadZeroDimsTest.java,75,,"		runZeroDimsTest(Type.Zero_Rows, ""csv"", ExecType.CP);"
240093,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/data/misc/WriteReadZeroDimsTest.java,85,,"		runZeroDimsTest(Type.Zero_Rows, ""binary"", ExecType.CP);"
240094,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/data/rand/RandRuntimePlatformBase.java,135,,"					output(""A_CP"") };"
240095,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/data/rand/SampleTest.java,128,,"			fullDMLScriptName = HOME + TEST_NAME + ""2"" + "".dml"";"
240096,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/data/rand/SampleTest.java,129,,"			programArgs = new String[] { ""-args"", Long.toString(_range),"
240097,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/dnn/Conv1DTest.java,45,,"		addTestConfiguration(TEST_NAME_1, new TestConfiguration(TEST_CLASS_DIR, TEST_NAME_1, new String[] {""output""}));"
240098,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/dnn/PoolBackwardTest.java,48,,"		runPoolTest(ExecType.CP, imgSize, numImg, numChannels, stride, pad, poolSize1, poolSize2, ""max"", false, false);"
240099,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/dnn/PoolTest.java,50,,"		runPoolTest(ExecType.CP, imgSize, numImg, numChannels, stride, pad, poolSize1, poolSize2, ""max"", false);"
240100,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/federated/paramserv/FederatedParamservTest.java,69,,"			{""TwoNN"",	2, 4, 1, 4, 0.01, 		""BSP"", ""BATCH"", ""KEEP_DATA_ON_WORKER"", 	""BASELINE"",		""true"",	""IMBALANCED"",	200},"
240101,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/federated/paramserv/FederatedParamservTest.java,69,,"			{""TwoNN"",	2, 4, 1, 4, 0.01, 		""BSP"", ""BATCH"", ""KEEP_DATA_ON_WORKER"", 	""BASELINE"",		""true"",	""IMBALANCED"",	200},"
240102,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/federated/primitives/FederatedCovarianceTest.java,134,,"			programArgs = new String[] {""-stats"", ""100"", ""-args"", input(""X1""), input(""X2""), input(""X3""), input(""X4""),"
240103,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/federated/primitives/FederatedCovarianceTest.java,134,,"			programArgs = new String[] {""-stats"", ""100"", ""-args"", input(""X1""), input(""X2""), input(""X3""), input(""X4""),"
240104,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/federated/primitives/FederatedCtableTest.java,142,,"		programArgs = new String[] {""-stats"", ""100"", ""-args"", input(""X1""), input(""X2""), input(""X3""), input(""X4""),"
240105,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/federated/primitives/FederatedCtableTest.java,142,,"		programArgs = new String[] {""-stats"", ""100"", ""-args"", input(""X1""), input(""X2""), input(""X3""), input(""X4""),"
240106,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/federated/primitives/FederatedFullAggregateTest.java,79,,"		addTestConfiguration(TEST_NAME1, new TestConfiguration(TEST_CLASS_DIR, TEST_NAME1, new String[] {""S.scalar""}));"
240107,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/federated/primitives/FederatedIfelseTest.java,172,,"		programArgs = new String[] {""-stats"", ""100"", ""-args"", input(""X1""), input(""X2""), input(""X3""), input(""X4""),"
240108,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/federated/primitives/FederatedIfelseTest.java,172,,"		programArgs = new String[] {""-stats"", ""100"", ""-args"", input(""X1""), input(""X2""), input(""X3""), input(""X4""),"
240109,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/federated/transform/TransformFederatedEncodeDecodeTest.java,166,,"				""in_AU="" + TestUtils.federatedAddress(""localhost"", port1, input(""AU"")),"
240110,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/frame/FrameConstructorTest.java,72,,"		FrameBlock exp = createExpectedFrame(schemaStrings1, rows,""mixed"");"
240111,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/frame/FrameConstructorTest.java,108,,"		FrameBlock exp = createExpectedFrame(schemaStrings1, rows,""constant"");"
240112,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/frame/FrameMatrixReblockTest.java,60,,"		runFrameReblockTest(TEST_NAME1, false, false, ""binary"", ExecType.CP);"
240113,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/frame/FrameMatrixReblockTest.java,65,,"		runFrameReblockTest(TEST_NAME1, false, false, ""text"", ExecType.CP);"
240114,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/frame/FrameMatrixReblockTest.java,70,,"		runFrameReblockTest(TEST_NAME1, false, false, ""csv"", ExecType.CP);"
240115,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/frame/FrameMatrixWriteTest.java,59,,"		runFrameWriteTest(TEST_NAME1, false, ""binary"", ExecType.CP);"
240116,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/frame/FrameMatrixWriteTest.java,64,,"		runFrameWriteTest(TEST_NAME1, false, ""text"", ExecType.CP);"
240117,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/frame/FrameMatrixWriteTest.java,69,,"		runFrameWriteTest(TEST_NAME1, false, ""csv"", ExecType.CP);"
240118,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/indexing/LeftIndexingTest.java,49,,"		addTestConfiguration(""LeftIndexingTest"", new TestConfiguration(TEST_CLASS_DIR, ""LeftIndexingTest"", "
240119,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/io/ScalarIOTest.java,36,,"	private final static String OUT_FILE = ""a.scalar"";"
240120,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/io/ScalarIOTest.java,53,,"		fullDMLScriptName = HOME + ""ScalarWrite.dml"";"
240121,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/io/ScalarIOTest.java,54,,"		programArgs = new String[]{	""-args"", String.valueOf(int_scalar), output(""a.scalar"") };"
240122,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/io/ScalarIOTest.java,58,,"		Assert.assertEquals(""Values not equal: "" + int_scalar + ""!="" + int_out_scalar, int_scalar, int_out_scalar);"
240123,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/io/ScalarIOTest.java,130,,"		fullDMLScriptName = HOME + ""ScalarRead.dml"";"
240124,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/io/csv/FormatChangeTest.java,43,,"		config.addVariable(""format1"", ""text"");"
240125,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/io/csv/FormatChangeTest.java,44,,"		config.addVariable(""format2"", ""binary"");"
240126,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/io/csv/FormatChangeTest.java,94,,"		programArgs[4] = ""csv"";"
240127,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/io/matrixmarket/FormatChangeTest.java,76,,"		programArgs[2] = ""text"";"
240128,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/io/matrixmarket/FormatChangeTest.java,78,,"		programArgs[4] = ""binary"";"
240129,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/jmlc/JMLCInputOutputTest.java,49,,"	@SuppressWarnings(""resource"")"
240130,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/jmlc/JMLCInputOutputTest.java,53,,"		String str = conn.readScript(baseDirectory + File.separator + ""scalar-input.dml"");"
240131,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/jmlc/JMLCInputOutputTest.java,54,,"		PreparedScript script = conn.prepareScript(str, new String[] { ""inScalar1"", ""inScalar2"" }, new String[] {});"
240132,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/jmlc/JMLCInputOutputTest.java,54,,"		PreparedScript script = conn.prepareScript(str, new String[] { ""inScalar1"", ""inScalar2"" }, new String[] {});"
240133,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/jmlc/JMLCInputOutputTest.java,155,,"		PreparedScript script = conn.prepareScript(str, new String[] {}, new String[] { ""outDouble"" });"
240134,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/jmlc/MulticlassSVMScoreTest.java,58,,"		addTestConfiguration(TEST_NAME, new TestConfiguration(TEST_CLASS_DIR, TEST_NAME, new String[] { ""predicted_y"" }) ); "
240135,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/jmlc/ReuseModelVariablesTest.java,54,,"		addTestConfiguration(TEST_NAME1, new TestConfiguration(TEST_CLASS_DIR, TEST_NAME1, new String[] { ""predicted_y"" }) ); "
240136,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/lineage/LineageMLContextTest.java,59,,"		assertTrue(out.contains(""sum: 30.0""));"
240137,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/lineage/LineageRewriteTest.java,121,,"			proArgs.add(output(""Res""));"
240138,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/lineage/LineageTraceSparkTest.java,54,,"		addTestConfiguration(TEST_NAME1, new TestConfiguration(TEST_CLASS_DIR, TEST_NAME1, new String[]{""X"", ""X.lineage"", ""Y"", ""Y.lineage""}));"
240139,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/lineage/LineageTraceSparkTest.java,54,,"		addTestConfiguration(TEST_NAME1, new TestConfiguration(TEST_CLASS_DIR, TEST_NAME1, new String[]{""X"", ""X.lineage"", ""Y"", ""Y.lineage""}));"
240140,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/lineage/UnmarkLoopDepVarsTest.java,64,,"			proArgs.add(output(""Res""));"
240141,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/misc/FunctionInliningTest.java,45,,"		addTestConfiguration( TEST_NAME1, new TestConfiguration(TEST_CLASS_DIR, TEST_NAME1, new String[] { ""Rout"" }) );"
240142,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/misc/ToStringTest.java,132,,"				sb.append(k).append("".000"").append(SEP);"
240143,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/FrameTest.java,235,,"				format = ""text"";"
240144,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextFrameTest.java,307,,"			Assert.assertEquals(""Mismatch with expected value"", Long.valueOf(1), row1.get(0));"
240145,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextFrameTest.java,430,,"				.out(""tA"").out(""tAM"");"
240146,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextLinregTest.java,84,,"		rCmd = getRCmd(inputDir(), ""0"", ""0.000001"", ""0"", ""0.001"", expectedDir());"
240147,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextLinregTest.java,93,,"					.out(""beta_out"");"
240148,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,149,,"		assertTrue(out.contains(""hello world""));"
240149,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,217,,"		list.add(""1,2,3"");"
240150,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,218,,"		list.add(""4,5,6"");"
240151,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,219,,"		list.add(""7,8,9"");"
240152,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,222,,"		Script script = dml(""print('sum: ' + sum(M));"").in(""M"", javaRDD);"
240153,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,224,,"		assertTrue(out.contains(""sum: 45.0""));"
240154,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,329,,"		assertTrue(out.contains(""sum: 10.0""));"
240155,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,636,,"		String s = ""M = matrix('1 2 3 4', rows=2, cols=2);"";"
240156,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,696,,"		Assert.assertEquals(""1 1 1.0"", lines.get(0));"
240157,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,697,,"		Assert.assertEquals(""1 2 2.0"", lines.get(1));"
240158,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,698,,"		Assert.assertEquals(""2 1 3.0"", lines.get(2));"
240159,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,699,,"		Assert.assertEquals(""2 2 4.0"", lines.get(3));"
240160,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,706,,"		String s = ""M = matrix('1 2 3 4', rows=2, cols=2); print(toString(M));"";"
240161,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,711,,"		Assert.assertEquals(""1.0,2.0"", lines.get(0));"
240162,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,712,,"		Assert.assertEquals(""3.0,4.0"", lines.get(1));"
240163,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,723,,"		String s = ""M = matrix(0, rows=10, cols=10); M[1,1]=1; M[1,2]=2; M[2,1]=3; M[2,2]=4; print(toString(M));"";"
240164,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,875,,"		double sum1 = executeAndCaptureStdOut(dml(s1).in(""m1"", m1).out(""sum1"")).getLeft().getDouble(""sum1"");"
240165,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,880,,"		double sum2 = executeAndCaptureStdOut(dml(s2).in(""m2"", m2).out(""sum2"")).getLeft().getDouble(""sum2"");"
240166,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextTest.java,1678,,"		String s = ""M = matrix('1 2 3 4', rows=1, cols=4);"";"
240167,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/mlcontext/MLContextUnivariateStatisticsTest.java,41,,"		univarStats.in(""A"", random10x3).in(""K"", types).in(""$CONSOLE_OUTPUT"", true).out(""baseStats"");"
240168,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/nary/NaryListTestAdvanced.java,54,,"                ""1.000 1.000"","
240169,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/parfor/misc/ParForRulebasedOptimizerTest.java,54,,"			new TestConfiguration(TEST_CLASS_DIR, TEST_NAME1, new String[] { ""Rout"" }) );"
240170,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/parfor/partition/ParForBlockwiseDataPartitioningTest.java,58,,"		addTestConfiguration(TEST_NAME1, new TestConfiguration(TEST_CLASS_DIR, TEST_NAME1, new String[] { ""Rout"" }) ); "
240171,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/privacy/FederatedWorkerHandlerTest.java,117,,"			fullDMLScriptName = SCRIPT_DIR + TEST_DIR_SCALAR + dmlFile + "".dml"";"
240172,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/privacy/FederatedWorkerHandlerTest.java,118,,"			programArgs = new String[]{""-checkPrivacy"", ""-nvargs"","
240173,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/privacy/FederatedWorkerHandlerTest.java,118,,"			programArgs = new String[]{""-checkPrivacy"", ""-nvargs"","
240174,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/privacy/FederatedWorkerHandlerTest.java,131,,"			assertTrue(""The privacy level "" + privacyLevel.toString() + "" should have been checked during execution"","
240175,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/privacy/MatrixMultiplicationPropagationTest.java,45,,"		addTestConfiguration(""MatrixMultiplicationPropagationTest"","
240176,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/privacy/ReadWriteTest.java,53,,"		addTestConfiguration(""ReadWriteTest"","
240177,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/privacy/ReadWriteTest.java,69,,"		MetaDataAll metadata = getMetaData(""a"", ""in/"");"
240178,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/privacy/ScalarPropagationTest.java,48,,"		addTestConfiguration(TEST_NAME, new TestConfiguration(TEST_CLASS_DIR, TEST_NAME, new String[] { ""scalar"" }));"
240179,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/privacy/propagation/AppendPropagatorTest.java,561,,"		fullDMLScriptName = SCRIPT_DIR + TEST_DIR + config.getTestScript() + "".dml"";"
240180,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/privacy/propagation/AppendPropagatorTest.java,571,,"		programArgs = new String[]{""-nvargs"", ""A="" + input(""A""), ""B="" + input(""B""), ""C="" + output(""C"")};"
240181,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/privacy/propagation/AppendPropagatorTest.java,852,,"			constraint -> Assert.assertTrue(""Merged constraint should contain same privacy levels as input 1"","
240182,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/privacy/propagation/MatrixMultiplicationPropagatorTest.java,392,,"		assertTrue(""Privacy should be set to Private"", mergedConstraint.hasPrivateElements());"
240183,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/privacy/propagation/MatrixMultiplicationPropagatorTest.java,393,,"		assertFalse(""Fine grained constraint should not be propagated"", mergedConstraint.hasFineGrainedConstraints());"
240184,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/privacy/propagation/MatrixMultiplicationPropagatorTest.java,496,,"		assertEquals(""All values except two should be OperatorType.Aggregate"", expected, actualArray[nonAggRow]);"
240185,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/recompile/CSVReadInFunctionTest.java,98,,"				HDFSTool.writeMetaDataFile(input(""A"")+"".mtd"", ValueType.FP64,"
240186,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/recompile/PredicateRecompileTest.java,48,,"		addTestConfiguration(new TestConfiguration(TEST_CLASS_DIR, TEST_NAME1, new String[] { ""Rout"" }) );"
240187,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/recompile/ReblockRecompileTest.java,52,,"		addTestConfiguration(TEST_NAME1, new TestConfiguration(TEST_CLASS_DIR, TEST_NAME1, new String[] { ""Rout"" }) );"
240188,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/recompile/RecursiveFunctionRecompileTest.java,61,,"			new TestConfiguration(TEST_CLASS_DIR, TEST_NAME1, new String[] { ""Rout"" }) );"
240189,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/recompile/SparsityFunctionRecompileTest.java,59,,"			new TestConfiguration(TEST_CLASS_DIR, TEST_NAME1, new String[] { ""Rout"" }) );"
240190,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/recompile/SparsityRecompileTest.java,59,,"			new TestConfiguration(TEST_CLASS_DIR, TEST_NAME1, new String[] { ""Rout"" }) );"
240191,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/rewrite/RewriteFusedRandTest.java,55,,"		testRewriteFusedRand( TEST_NAME1, ""uniform"", false );"
240192,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/transform/FrameCSVReadWriteTest.java,53,,"		runCSVQuotesReadWriteTest(ExecMode.SINGLE_NODE, ""csv"");"
240193,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/transform/TransformCSVFrameEncodeDecodeTest.java,55,,"		runTransformTest(ExecMode.SINGLE_NODE, ""csv"");"
240194,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/transform/TransformCSVFrameEncodeReadTest.java,55,,"		runTransformTest(ExecMode.SINGLE_NODE, ""csv"", false, false);"
240195,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/transform/TransformFrameEncodeApplySubsetTest.java,55,,"		runTransformTest(TEST_NAME1, ExecMode.SINGLE_NODE, ""csv"", true);"
240196,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/transform/TransformFrameEncodeApplyTest.java,87,,"		runTransformTest(ExecMode.SINGLE_NODE, ""csv"", TransformType.RECODE, false);"
240197,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/transform/TransformFrameEncodeColmapTest.java,57,,"		runTransformTest(TEST_NAME1, ExecMode.SINGLE_NODE, ""csv"", false);"
240198,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/transform/TransformFrameEncodeDecodeTest.java,67,,"		runTransformTest(ExecMode.SINGLE_NODE, ""csv"", TransformType.RECODE, false);"
240199,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/transform/TransformFrameEncodeDecodeTokenTest.java,60,,"		runTransformTest(ExecMode.SINGLE_NODE, ""csv"");"
240200,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/transform/mt/TransformFrameBuildMultithreadedTest.java,75,,"		runTransformTest(Types.ExecMode.SINGLE_NODE, ""csv"", TransformType.RECODE, false);"
240201,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/transform/mt/TransformFrameEncodeMultithreadedTest.java,86,,"		runTransformTest(ExecMode.SINGLE_NODE, ""csv"", TransformType.RECODE, false);"
240202,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/ACosTest.java,40,,"				new TestConfiguration(TEST_CLASS_DIR, ""ACosTest"", new String[] { ""vector"", ""matrix"" }));"
240203,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/ACosTest.java,40,,"				new TestConfiguration(TEST_CLASS_DIR, ""ACosTest"", new String[] { ""vector"", ""matrix"" }));"
240204,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/ASinTest.java,38,,"				new TestConfiguration(TEST_CLASS_DIR, ""ASinTest"", new String[] { ""vector"", ""matrix"" }));"
240205,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/ASinTest.java,38,,"				new TestConfiguration(TEST_CLASS_DIR, ""ASinTest"", new String[] { ""vector"", ""matrix"" }));"
240206,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/ATanTest.java,40,,"				new TestConfiguration(TEST_CLASS_DIR, ""ATanTest"", new String[] { ""vector"", ""matrix"" }));"
240207,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/ATanTest.java,40,,"				new TestConfiguration(TEST_CLASS_DIR, ""ATanTest"", new String[] { ""vector"", ""matrix"" }));"
240208,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/AbsTest.java,38,,"				new TestConfiguration(TEST_CLASS_DIR, ""AbsTest"", new String[] { ""vector"", ""matrix"" }));"
240209,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/AbsTest.java,38,,"				new TestConfiguration(TEST_CLASS_DIR, ""AbsTest"", new String[] { ""vector"", ""matrix"" }));"
240210,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/CosTest.java,38,,"				new TestConfiguration(TEST_CLASS_DIR, ""CosTest"", new String[] { ""vector"", ""matrix"" }));"
240211,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/CosTest.java,38,,"				new TestConfiguration(TEST_CLASS_DIR, ""CosTest"", new String[] { ""vector"", ""matrix"" }));"
240212,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/NegationTest.java,37,,"				new TestConfiguration(TEST_CLASS_DIR, ""NegationTest"", new String[] { ""vector"", ""matrix"" }));"
240213,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/NegationTest.java,37,,"				new TestConfiguration(TEST_CLASS_DIR, ""NegationTest"", new String[] { ""vector"", ""matrix"" }));"
240214,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/RemoveEmptySelTest.java,51,,"		runTestRemoveEmptySel( ""rows"", ExecType.CP, false );"
240215,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/RemoveEmptySelTest.java,61,,"		runTestRemoveEmptySel( ""cols"", ExecType.CP, false );"
240216,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/RemoveEmptyTest.java,62,,"		runTestRemoveEmpty( TEST_NAME1, ""rows"", ExecType.CP, false );"
240217,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/RemoveEmptyTest.java,74,,"		runTestRemoveEmpty( TEST_NAME1, ""cols"", ExecType.CP, false );"
240218,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/SinTest.java,38,,"				new TestConfiguration(TEST_CLASS_DIR, ""SinTest"", new String[] { ""vector"", ""matrix"" }));"
240219,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/SinTest.java,38,,"				new TestConfiguration(TEST_CLASS_DIR, ""SinTest"", new String[] { ""vector"", ""matrix"" }));"
240220,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/TanTest.java,38,,"				new TestConfiguration(TEST_CLASS_DIR, ""TanTest"", new String[] { ""vector"", ""matrix"" }));"
240221,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/matrix/TanTest.java,38,,"				new TestConfiguration(TEST_CLASS_DIR, ""TanTest"", new String[] { ""vector"", ""matrix"" }));"
240222,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/ACosTest.java,50,,"		addTestConfiguration(""PositiveTest"", new TestConfiguration(TEST_CLASS_DIR, ""ACosTest"","
240223,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/ACosTest.java,51,,"				new String[] { ""int"", ""double"" }));"
240224,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/ACosTest.java,51,,"				new String[] { ""int"", ""double"" }));"
240225,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/ASinTest.java,49,,"				new TestConfiguration(TEST_CLASS_DIR, ""ASinTest"", new String[] { ""int"", ""double"" }));"
240226,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/ASinTest.java,49,,"				new TestConfiguration(TEST_CLASS_DIR, ""ASinTest"", new String[] { ""int"", ""double"" }));"
240227,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/ATanTest.java,50,,"				new TestConfiguration(TEST_CLASS_DIR, ""ATanTest"", new String[] { ""int"", ""double"" }));"
240228,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/ATanTest.java,50,,"				new TestConfiguration(TEST_CLASS_DIR, ""ATanTest"", new String[] { ""int"", ""double"" }));"
240229,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/AbsTest.java,49,,"		addTestConfiguration(""PositiveTest"", new TestConfiguration(TEST_CLASS_DIR, ""AbsTest"","
240230,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/AbsTest.java,50,,"				new String[] { ""int"", ""double"" }));"
240231,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/AbsTest.java,50,,"				new String[] { ""int"", ""double"" }));"
240232,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/CosTest.java,51,,"		addTestConfiguration(""PositiveTest"", new TestConfiguration(TEST_CLASS_DIR, ""CosTest"","
240233,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/CosTest.java,52,,"				new String[] { ""int"", ""double"" }));"
240234,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/CosTest.java,52,,"				new String[] { ""int"", ""double"" }));"
240235,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/ExponentTest.java,54,,"		addTestConfiguration(""ConstTest"", new TestConfiguration(TEST_CLASS_DIR, ""ExponentTest"","
240236,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/ExponentTest.java,55,,"				new String[] { ""int"", ""double"" }));"
240237,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/ExponentTest.java,55,,"				new String[] { ""int"", ""double"" }));"
240238,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/ExponentTest.java,76,,"		config.addVariable(""intvardeclaration"", """");"
240239,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/ExponentTest.java,77,,"		config.addVariable(""intop"", intValue);"
240240,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/ExponentTest.java,79,,"		config.addVariable(""doubleop"", doubleValue);"
240241,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/FullDistributionTest.java,54,,"		addTestConfiguration(TEST_NAME, new TestConfiguration(TEST_CLASS_DIR, TEST_NAME, new String[] { ""dfout"" }));"
240242,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/PrintTest.java,42,,"		addTestConfiguration(""PrintTest"", new TestConfiguration(TEST_CLASS_DIR, ""PrintTest"", new String[] {}));"
240243,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/PrintTest.java,52,,"		config.addVariable(""value"", value);"
240244,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/PrintTest.java,56,,"		assertTrue(bufferContainsString(runTest(), ""X= "" + value));"
240245,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/RoundTest.java,40,,"		addTestConfiguration(""RoundTest"", new TestConfiguration(TEST_CLASS_DIR, ""RoundTest"", new String[] { ""scalar"" }));"
240246,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/SinTest.java,51,,"				new TestConfiguration(TEST_CLASS_DIR, ""SinTest"", new String[] { ""int"", ""double"" }));"
240247,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/SinTest.java,51,,"				new TestConfiguration(TEST_CLASS_DIR, ""SinTest"", new String[] { ""int"", ""double"" }));"
240248,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/SqrtTest.java,60,,"				new TestConfiguration(TEST_CLASS_DIR, ""SqrtSingleTest"", new String[] { ""computed"" }));"
240249,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/SqrtTest.java,60,,"				new TestConfiguration(TEST_CLASS_DIR, ""SqrtSingleTest"", new String[] { ""computed"" }));"
240250,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/SqrtTest.java,99,,"		config.addVariable(""value"", intValue);"
240251,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/TanTest.java,51,,"				new TestConfiguration(TEST_CLASS_DIR, ""TanTest"", new String[] { ""int"", ""double"" }));"
240252,./TargetProjects/systemds/src/test/java/org/apache/sysds/test/functions/unary/scalar/TanTest.java,51,,"				new TestConfiguration(TEST_CLASS_DIR, ""TanTest"", new String[] { ""int"", ""double"" }));"
240253,./TargetProjects/tajo/tajo-algebra/src/main/java/org/apache/tajo/algebra/CreateTable.java,304,,"    @Expose @SerializedName(""Columns"")"
240254,./TargetProjects/tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestFunctionDesc.java,58,,"    FunctionDesc desc = new FunctionDesc(""sum"", TestSum.class, FunctionType.GENERAL,"
240255,./TargetProjects/tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestIndexDesc.java,47,,"    desc1 = new IndexDesc(DEFAULT_DATABASE_NAME, ""indexed"","
240256,./TargetProjects/tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestIndexDesc.java,48,,"        ""idx_test"", new URI(""idx_test""), colSpecs1,"
240257,./TargetProjects/tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestIndexDesc.java,54,,"        ""idx_test2"", new URI(""idx_test2""), colSpecs2,"
240258,./TargetProjects/tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestKeyValueSet.java,88,,"		opts.set(""name"", ""abc"");"
240259,./TargetProjects/tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestKeyValueSet.java,88,,"		opts.set(""name"", ""abc"");"
240260,./TargetProjects/tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestSchema.java,125,,"		col1 = new Column(""name"", Type.TEXT);"
240261,./TargetProjects/tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestSchema.java,127,,"		col2 = new Column(""age"", Type.INT4);"
240262,./TargetProjects/tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestSchema.java,129,,"		col3 = new Column(""addr"", Type.TEXT);"
240263,./TargetProjects/tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestSchema.java,237,,"        .add(""col2"", Type.INT4)"
240264,./TargetProjects/tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestSchema.java,241,,"    assertEquals(""col1"", schema3.getColumn(0).getSimpleName());"
240265,./TargetProjects/tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestTableDesc.java,52,,"    path = new Path(CommonTestingUtil.getTestDir(), ""table1"");"
240266,./TargetProjects/tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/statistics/TestColumnStat.java,34,,"    ColumnStats stat = new ColumnStats(new Column(""test"", Type.INT8));"
240267,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,142,,"        .put(""key1"", ""value1"")"
240268,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,142,,"        .put(""key1"", ""value1"")"
240269,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,143,,"        .put(""key2"", ""value2"")"
240270,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,143,,"        .put(""key2"", ""value2"")"
240271,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,153,,"    Set<String> toUnset = Sets.newHashSet(""key2"", ""key3"");"
240272,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,173,,"        .add(""r_regionkey"", TajoDataTypes.Type.INT4)"
240273,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,174,,"        .add(""r_name"", TajoDataTypes.Type.TEXT)"
240274,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,175,,"        .add(""r_comment"", TajoDataTypes.Type.TEXT)"
240275,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,445,,"      ""    \""LeftExpr\"": {\n"" +"
240276,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,446,,"      ""      \""Qualifier\"": \"""" + qfTableName + ""\"",\n"" +"
240277,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,446,,"      ""      \""Qualifier\"": \"""" + qfTableName + ""\"",\n"" +"
240278,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,448,,"      ""      \""OpType\"": \""Column\""\n"" +"
240279,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,449,,"      ""    },\n"" +"
240280,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,450,,"      ""    \""RightExpr\"": {\n"" +"
240281,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,453,,"      ""      \""OpType\"": \""Literal\""\n"" +"
240282,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,455,,"      ""    \""OpType\"": \""Equals\""\n"" +"
240283,./TargetProjects/tajo/tajo-catalog/tajo-catalog-drivers/tajo-hive/src/test/java/org/apache/tajo/catalog/store/TestHiveCatalogStore.java,456,,"      ""  },\n"" +"
240284,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/CatalogServer.java,480,,"        return errInsufficientPrivilege(""drop a table in database '"" + databaseName + ""'"");"
240285,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,67,,"  protected final String insertPartitionSql = ""INSERT INTO "" + TB_PARTTIONS"
240286,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,75,,"    + "" SELECT "" + COL_PARTITIONS_PK + "" FROM "" + TB_PARTTIONS"
240287,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,76,,"    + "" WHERE "" + COL_TABLES_PK + "" = ? AND PARTITION_NAME = ? ) """
240288,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,79,,"  protected final String deletePartitionSql = ""DELETE FROM "" + TB_PARTTIONS"
240289,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,80,,"    + "" WHERE "" + COL_PARTITIONS_PK + "" = ? "";"
240290,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,521,,"          String sql = ""UPDATE "" + TB_SPACES + "" SET SPACE_URI=? WHERE SPACE_NAME=?"";"
240291,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,805,,"          ""SELECT TID from "" + TB_TABLES + "" WHERE "" + COL_DATABASES_PK + ""=? AND "" + COL_TABLES_NAME + ""=?"";"
240292,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,815,,"      int tableId = res.getInt(""TID"");"
240293,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,1200,,"            "" WHERE "" + COL_TABLES_PK + "" = ?"" + "" AND COLUMN_NAME = ?"" ;"
240294,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,1769,,"    String sql = ""SELECT "" + COL_TABLES_NAME + "" FROM TABLES WHERE DB_ID = ?"";"
240295,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,1815,,"          builder.setPath(resultSet.getString(""PATH""));"
240296,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/object/StoreObject.java,33,,"  @XmlElement(name=""base"",namespace=""http://tajo.apache.org/catalogstore"")"
240297,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/CatalogTestingUtil.java,178,,"    catalog.createDatabase(""TestDatabase1"", ""space1"");"
240298,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,82,,"    assertFalse(catalog.existTablespace(""space1""));"
240299,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,86,,"    assertFalse(catalog.existTablespace(""space2""));"
240300,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,149,,"    assertFalse(catalog.existDatabase(""testCreateAndDropDatabases""));"
240301,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,195,,"        new TableMeta(""TEXT"", new KeyValueSet()),"
240302,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,202,,"    catalog.createDatabase(""tmpdb1"", TajoConstants.DEFAULT_TABLESPACE_NAME);"
240303,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,204,,"    catalog.createDatabase(""tmpdb2"", TajoConstants.DEFAULT_TABLESPACE_NAME);"
240304,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,207,,"    TableDesc table1 = createMockupTable(""tmpdb1"", ""table1"");"
240305,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,210,,"    TableDesc table2 = createMockupTable(""tmpdb2"", ""table2"");"
240306,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,312,,"        IdentifierUtil.buildFQName(DEFAULT_DATABASE_NAME, ""getTable""),"
240307,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,436,,"    String tableName = ""indexed"";"
240308,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,448,,"        ""idx_test"", new URI(""idx_test""), colSpecs1,"
240309,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,466,,"    catalog.createDatabase(""tmpdb3"", TajoConstants.DEFAULT_TABLESPACE_NAME);"
240310,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,468,,"    catalog.createDatabase(""tmpdb4"", TajoConstants.DEFAULT_TABLESPACE_NAME);"
240311,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,510,,"	  assertFalse(catalog.existIndexByColumnNames(DEFAULT_DATABASE_NAME, ""indexed"", new String[]{""score""}));"
240312,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,536,,"							new Column(""name"", TajoDataTypes.Type.INT4)"
240313,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,562,,"    assertFalse(catalog.containFunction(""test10"", FunctionType.GENERAL));"
240314,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,581,,"		assertFalse(catalog.containFunction(""test2"", FunctionType.UDF));"
240315,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,610,,"    assertFalse(catalog.containFunction(""test3"", CatalogUtil.newSimpleDataTypeArray(Type.INT4)));"
240316,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,632,,"        .add(""age"", Type.INT4)"
240317,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,636,,"    String tableName = IdentifierUtil.buildFQName(DEFAULT_DATABASE_NAME, ""addedtable"");"
240318,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,638,,"    opts.set(""file.delimiter"", "","");"
240319,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,856,,"      ""    \""LeftExpr\"": {\n"" +"
240320,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,857,,"      ""      \""Qualifier\"": \"""" + qfTableName + ""\"",\n"" +"
240321,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,857,,"      ""      \""Qualifier\"": \"""" + qfTableName + ""\"",\n"" +"
240322,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,859,,"      ""      \""OpType\"": \""Column\""\n"" +"
240323,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,860,,"      ""    },\n"" +"
240324,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,861,,"      ""    \""RightExpr\"": {\n"" +"
240325,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,867,,"      ""  },\n"" +"
240326,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,976,,"    TableDesc tableRenameTestDesc = createMockupTable(""default"", ""mycooltable"") ;"
240327,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,981,,"    assertTrue(catalog.existsTable(""default"", ""mynewcooltable""));"
240328,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,996,,"    options.set(""timezone"", ""GMT+9"");   // Seoul, Korea"
240329,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,1022,,"    alterTableDesc.setTableName(""default.mynewcooltable"");"
240330,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,1096,,"    assertFalse(catalog.containFunction(""testint"", FunctionType.GENERAL));"
240331,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,1124,,"    assertFalse(catalog.containFunction(""testfloat"", FunctionType.GENERAL));"
240332,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,1153,,"    assertFalse(catalog.containFunction(""testany"", FunctionType.GENERAL));"
240333,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalogAgainstCaseSensitivity.java,95,,"    assertTrue(catalog.existDatabase(""TestDatabase1""));"
240334,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalogAgainstCaseSensitivity.java,108,,"    assertTrue(catalog.existsTable(""TestDatabase1"", ""testTable1""));"
240335,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalogAgainstCaseSensitivity.java,174,,"    assertTrue(catalog.existsTable(""TestDatabase1"", ""TestPartition1""));"
240336,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalogAgainstCaseSensitivity.java,177,,"    String partitionName = ""DaTe=bBb/dAtE=AaA"";"
240337,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalogAgainstCaseSensitivity.java,195,,"    partitionName = ""DaTe=BbB/dAtE=aAa"";"
240338,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalogAgainstCaseSensitivity.java,286,,"    alterTableDesc.setAddColumn(new Column(IdentifierUtil.buildFQName(databaseName, tableName, ""AddedCol1""),"
240339,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalogAgainstCaseSensitivity.java,340,,"        .add(""CoL1"", CatalogUtil.newSimpleDataType(Type.INT4))"
240340,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalogAgainstCaseSensitivity.java,341,,"        .add(""CoL2"", CatalogUtil.newSimpleDataType(Type.FLOAT4))"
240341,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalogAgainstCaseSensitivity.java,342,,"        .add(""CoL3"", CatalogUtil.newSimpleDataType(Type.TEXT)).build();"
240342,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalogAgainstCaseSensitivity.java,345,,"    .add(""RecoRd1"", new TypeDesc(schema))"
240343,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalogExceptions.java,72,,"    catalog.dropTablespace(""undefined"");"
240344,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalogExceptions.java,102,,"    catalog.createDatabase(""TestDatabase1"", ""space1"");"
240345,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalogExceptions.java,135,,"    catalog.createTable(CatalogTestingUtil.buildTableDesc(""TestDatabase1"", ""TestTable1"","
240346,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalogExceptions.java,169,,"    alterTableDesc.setTableName(IdentifierUtil.buildFQName(""TestDatabase1"", ""TestPartition1""));"
240347,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalogExceptions.java,279,,"    TableDesc tableDesc = catalog.getTableDesc(""TestDatabase1"", ""testTable1"");"
240348,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestLinkedMetadataManager.java,44,,"      ""table1"","
240349,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestLinkedMetadataManager.java,46,,"      ""TEXT"", new KeyValueSet(), URI.create(""http://space1/x/table1"")"
240350,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestLinkedMetadataManager.java,50,,"      ""table2"","
240351,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestLinkedMetadataManager.java,56,,"      ""table3"","
240352,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestLinkedMetadataManager.java,62,,"      ""table4"","
240353,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestLinkedMetadataManager.java,71,,"      return ""space1"";"
240354,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestLinkedMetadataManager.java,110,,"      return ""space2"";"
240355,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestLinkedMetadataManager.java,163,,"    assertEquals(Sets.newHashSet(""space1"", ""space2"", ""default""), Sets.newHashSet(catalog.getAllTablespaceNames()));"
240356,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/store/TestXMLCatalogSchemaManager.java,288,,"    stmt.addBatch(""create schema "" + manager.getCatalogStore().getSchema().getSchemaName());"
240357,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/store/TestXMLCatalogSchemaManager.java,289,,"    stmt.addBatch(""set current schema "" + manager.getCatalogStore().getSchema().getSchemaName());"
240358,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/store/TestXMLCatalogSchemaManager.java,299,,"    assertEquals(CatalogConstants.TB_PARTITION_METHODS, tables.getString(""TABLE_NAME""));"
240359,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/store/TestXMLCatalogSchemaManager.java,313,,"    manager = new XMLCatalogSchemaManager(""schemas/derbytest/querytest"");"
240360,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/store/TestXMLCatalogSchemaManager.java,319,,"    stmt.executeUpdate(""CREATE TABLE TESTTABLE1 (COL1 INT, COL2 VARCHAR(10))"");"
240361,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/store/TestXMLCatalogSchemaManager.java,324,,"    stmt.addBatch(""CREATE INDEX TESTINDEX1 ON TESTTABLE1 (COL1)"");"
240362,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/store/TestXMLCatalogSchemaManager.java,371,,"        allOf(hasItemInResultSet(""TESTTABLE1"", ""TABLE_NAME""),"
240363,./TargetProjects/tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/store/TestXMLCatalogSchemaManager.java,372,,"            hasItemInResultSet(""TESTTABLE2"", ""TABLE_NAME"")));"
240364,./TargetProjects/tajo/tajo-cli/src/main/java/org/apache/tajo/cli/tools/TajoDump.java,152,,"    writer.write(""--\n"");"
240365,./TargetProjects/tajo/tajo-cli/src/main/java/org/apache/tajo/cli/tools/TajoDump.java,172,,"    writer.write(""\n\n"");"
240366,./TargetProjects/tajo/tajo-cli/src/main/java/org/apache/tajo/cli/tsql/TajoCli.java,118,,"    options.addOption(""conf"", ""conf"", true, ""configuration value"");"
240367,./TargetProjects/tajo/tajo-cli/src/main/java/org/apache/tajo/cli/tsql/TajoCli.java,121,,"    options.addOption(""help"", ""help"", false, ""help"");"
240368,./TargetProjects/tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,565,,"    throw new SQLFeatureNotSupportedException(""getBigDecimal not supported"");"
240369,./TargetProjects/tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,686,,"    throw new SQLFeatureNotSupportedException(""getObject not supported"");"
240370,./TargetProjects/tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,897,,"    throw new SQLFeatureNotSupportedException(""updateAsciiStream not supported"");"
240371,./TargetProjects/tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,944,,"    throw new SQLFeatureNotSupportedException(""updateBinaryStream not supported"");"
240372,./TargetProjects/tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,979,,"    throw new SQLFeatureNotSupportedException(""updateBlob not supported"");"
240373,./TargetProjects/tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,1021,,"    throw new SQLFeatureNotSupportedException(""updateByte not supported"");"
240374,./TargetProjects/tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,1041,,"    throw new SQLFeatureNotSupportedException(""updateCharacterStream not supported"");"
240375,./TargetProjects/tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,1076,,"    throw new SQLFeatureNotSupportedException(""updateClob not supported"");"
240376,./TargetProjects/tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,1157,,"    throw new SQLFeatureNotSupportedException(""updateNCharacterStream not supported"");"
240377,./TargetProjects/tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,1180,,"    throw new SQLFeatureNotSupportedException(""updateNClob not supported"");"
240378,./TargetProjects/tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,1231,,"    throw new SQLFeatureNotSupportedException(""updateObject not supported"");"
240379,./TargetProjects/tajo/tajo-cluster-tests/src/test/java/org/apache/tajo/LocalTajoTestingUtility.java,99,,"    LOG.info(""==================================================="");"
240380,./TargetProjects/tajo/tajo-cluster-tests/src/test/java/org/apache/tajo/QueryTestCaseBase.java,639,,"        String fileName = methodName + (fromFile ? """" : ""."" + (i + 1)) + "".result"";"
240381,./TargetProjects/tajo/tajo-cluster-tests/src/test/java/org/apache/tajo/QueryTestCaseBase.java,902,,"      throw new IOException(""Cannot find "" + positiveQueryDir);"
240382,./TargetProjects/tajo/tajo-cluster-tests/src/test/java/org/apache/tajo/QueryTestCaseBase.java,937,,"          throw new IOException(""Cannot find "" + fileName + "" at "" + currentQueryPath + "" and "" + namedQueryPath);"
240383,./TargetProjects/tajo/tajo-cluster-tests/src/test/java/org/apache/tajo/QueryTestCaseBase.java,1041,,"        assertTrue(""table '"" + createdTableName + ""' creation check"", client.existTable(createdTableName));"
240384,./TargetProjects/tajo/tajo-cluster-tests/src/test/java/org/apache/tajo/TajoTestingCluster.java,313,,"    conf.setVar(ConfVars.CATALOG_ADDRESS, ""localhost:0"");"
240385,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/OverridableConf.java,96,,"        throw new IllegalStateException(""key does not belong to Session and System config sets"");"
240386,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/datum/Datum.java,234,,"        throw new ArithmeticException(""/ by zero"");"
240387,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/datum/IntervalDatum.java,113,,"                throw new InvalidOperationException(""invalid input syntax for type interval: "" + intervalStr);"
240388,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/datum/IntervalDatum.java,252,,"        throw new InvalidOperationException(""operator does not exist: "" + type() + "" + "" + datum.type());"
240389,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/datum/protobuf/ProtobufJsonFormat.java,466,,"        throw parseException(""Expected \"""" + token + ""\""."");"
240390,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/datum/protobuf/ProtobufJsonFormat.java,867,,"      if (""null"".equals(tokenizer.currentToken())) {"
240391,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/exception/SQLExceptionUtil.java,82,,"    SQLSTATES.put(ResultCode.DUPLICATE_FUNCTION,                    ""42723"");"
240392,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/json/DatumAdapter.java,38,,"      return new DateDatum(CommonGsonHelper.getOrDie(jsonObject, ""value"").getAsInt());"
240393,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/type/TypeStringEncoder.java,123,,"        Assert.assertCondition(stack.pop() == '<', ""Bad signature: '%s'"", signature);"
240394,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/type/TypeStringEncoder.java,250,,"      Assert.assertCondition(false, ""Bad field signature: '%s'"", str);"
240395,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/util/Bytes.java,605,,"          + "" offset "" + offset + "" in a "" + bytes.length + "" byte array"");"
240396,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/util/Bytes.java,605,,"          + "" offset "" + offset + "" in a "" + bytes.length + "" byte array"");"
240397,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/util/Bytes.java,605,,"          + "" offset "" + offset + "" in a "" + bytes.length + "" byte array"");"
240398,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/util/Bytes.java,1973,,"    checkArgument(length > 0, ""length must be greater than 0"");"
240399,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/util/KeyValueSet.java,162,,"      throw new IllegalArgumentException(""No such a config key: ""  + key);"
240400,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/util/NumberUtil.java,172,,"      throw new NumberFormatException(""String is null"");"
240401,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/util/NumberUtil.java,368,,"      throw new NumberFormatException(""Invalid radix: "" + radix);"
240402,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/util/NumberUtil.java,1263,,"          + "" offset "" + offset + "" in a "" + bytes.length + "" byte array"");"
240403,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/util/NumberUtil.java,1263,,"          + "" offset "" + offset + "" in a "" + bytes.length + "" byte array"");"
240404,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/util/NumberUtil.java,1263,,"          + "" offset "" + offset + "" in a "" + bytes.length + "" byte array"");"
240405,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/util/VersionInfo.java,58,,"    return info.getProperty(""version"", ""Unknown"");"
240406,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/util/datetime/DateTimeUtil.java,659,,"        throw new IllegalArgumentException(""BAD Format: "" + str);"
240407,./TargetProjects/tajo/tajo-common/src/main/java/org/apache/tajo/util/datetime/DateTimeUtil.java,2103,,"        sb.append(String.format(""%02d"", Math.abs(sec)));"
240408,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/datum/TestArithmeticOperator.java,65,,"    runAndAssert(""plus"", new Int2Datum((short)10), new Int2Datum((short)5), new Int2Datum((short)15));"
240409,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/datum/TestArithmeticOperator.java,72,,"    runAndAssert(""minus"", new Int2Datum((short)10), new Int2Datum((short)5), new Int2Datum((short)5));"
240410,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/datum/TestArithmeticOperator.java,85,,"    runAndAssert(""multiply"", new Int2Datum((short)10), new Int2Datum((short)5), new Int4Datum(50));"
240411,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/datum/TestArithmeticOperator.java,92,,"    runAndAssert(""divide"", new Int2Datum((short)10), new Int2Datum((short)5), new Int2Datum((short)2));"
240412,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/datum/TestArithmeticOperator.java,105,,"    runAndAssert(""modular"", new Int2Datum((short)10), new Int2Datum((short)3), new Int2Datum((short)1));"
240413,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/datum/TestBytesDatum.java,33,,"    Datum d = DatumFactory.createBlob(""12345"".getBytes());"
240414,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/datum/TestCharDatum.java,66,,"		Datum d = DatumFactory.createChar(""1234567890"");"
240415,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/datum/TestIntervalDatum.java,34,,"    assertEquals(""3 years 5 months 10 days 23:50:40.200"", datum.asChars());"
240416,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/datum/TestTextDatum.java,33,,"		Datum d = DatumFactory.createText(""12345"");"
240417,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/rule/TestRuleSession.java,81,,"  @SelfDiagnosisRuleDefinition(category=""test1"",name = ""TestRule1"")"
240418,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/rule/TestRuleSession.java,81,,"  @SelfDiagnosisRuleDefinition(category=""test1"",name = ""TestRule1"")"
240419,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/rule/TestRuleSession.java,172,,"      Method closeMethod = URLClassLoader.class.getMethod(""close"");"
240420,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/rule/TestRuleSession.java,227,,"  @SelfDiagnosisRuleDefinition(category=""test2"",name = ""TestPriorityRule1"")"
240421,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/rule/TestRuleSession.java,269,,"  @SelfDiagnosisRuleDefinition(category=""test2"",name = ""TestPriorityRule4"",priority=10)"
240422,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/rule/TestRuleSession.java,332,,"  @SelfDiagnosisRuleDefinition(category=""test3"",name=""TestExecRule1"",priority=0)"
240423,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/schema/TestANSISQLIdentifierPolicy.java,33,,"    assertIdentifier(ANSISQLPolicy(), _(""xyz""), ""XYZ"");"
240424,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/schema/TestANSISQLIdentifierPolicy.java,33,,"    assertIdentifier(ANSISQLPolicy(), _(""xyz""), ""XYZ"");"
240425,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/schema/TestANSISQLIdentifierPolicy.java,42,,"    assertQualifiedIdentifier(ANSISQLPolicy(), $(_(""xyz""), _(""opq"")), ""XYZ.OPQ"");"
240426,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/schema/TestTajoIdentifierPolicy.java,31,,"    assertIdentifier(DefaultPolicy(), _(""xyz""), ""xyz"");"
240427,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/schema/TestTajoIdentifierPolicy.java,40,,"    assertQualifiedIdentifier(DefaultPolicy(), $(_(""xyz""), _(""opq"")), ""xyz.opq"");"
240428,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/tuple/memory/TestMemoryRowBlock.java,69,,"        + (endTime - startTime) + "" msec"");"
240429,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/tuple/memory/TestMemoryRowBlock.java,110,,"    LOG.info(""reading takes "" + (readEnd - readStart) + "" msec"");"
240430,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/tuple/memory/TestMemoryRowBlock.java,410,,"    builder.putTimestamp(DatumFactory.createTimestamp(""2014-04-16 08:48:00"").asInt8() + i); // 7"
240431,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/tuple/memory/TestMemoryRowBlock.java,411,,"    builder.putDate(DatumFactory.createDate(""2014-04-16"").asInt4() + i); // 8"
240432,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/tuple/memory/TestMemoryRowBlock.java,412,,"    builder.putTime(DatumFactory.createTime(""08:48:00"").asInt8() + i); // 9"
240433,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/tuple/memory/TestMemoryRowBlock.java,413,,"    builder.putInterval(DatumFactory.createInterval((i + 1) + "" hours"")); // 10"
240434,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/util/TestDateTimeFormat.java,32,,"    evalToTimestampAndAssert(""1997-12-30 11:40:50.345"", ""YYYY-MM-DD HH24:MI:SS.MS"", 1997, 12, 30, 11, 40, 50, 345);"
240435,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/util/TestDateTimeFormat.java,40,,"    evalToTimestampAndAssert(""97/Feb/16"", ""YY/Mon/DD"", 1997, 2, 16, 0, 0, 0, 0);"
240436,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/util/TestDateTimeFormat.java,41,,"    evalToTimestampAndAssert(""19971116"", ""YYYYMMDD"", 1997, 11, 16, 0, 0, 0, 0);"
240437,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/util/TestDateTimeFormat.java,48,,"    evalToTimestampAndAssert(""2005527"", ""IYYYIWID"", 2006, 1, 1, 0, 0, 0, 0);"
240438,./TargetProjects/tajo/tajo-common/src/test/java/org/apache/tajo/util/TestStringUtil.java,137,,"        StringUtils.convertBytesToChars(testStringArray, Charset.forName(""UTF-8"")));"
240439,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/cli/tools/TestDDLBuilder.java,70,,"    TableDesc desc = new TableDesc(""db1.table1"", schema1, meta1, new Path(""/table1"").toUri());"
240440,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/cli/tools/TestTajoDump.java,54,,"        assertOutputResult(""testDump1.result"", new String(bos.toByteArray()), new String[]{""${table.timezone}""},"
240441,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/cli/tools/TestTajoDump.java,58,,"        executeString(""DROP TABLE \"""" + getCurrentDatabase() + ""\"".\""TableName1\"""");"
240442,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/cli/tsql/TestSimpleParser.java,47,,"    List<ParsedResult> res1 = SimpleParser.parseScript(""\\d"");"
240443,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/cli/tsql/TestSimpleParser.java,80,,"    assertEquals(""select * from test"", res1.get(0).getStatement());"
240444,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/cli/tsql/TestSimpleParser.java,92,,"    assertEquals(""select * from test1"", res3.get(0).getStatement());"
240445,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/cli/tsql/TestSimpleParser.java,95,,"    assertEquals(""select * from test2"", res3.get(1).getStatement());"
240446,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/cli/tsql/TestSimpleParser.java,125,,"    assertEquals(""select * from test3"", res6.get(0).getHistoryStatement());"
240447,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/cli/tsql/TestTajoCli.java,230,,"    assertEquals(""default"", tajoCli.getContext().getCurrentDatabase());"
240448,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/cli/tsql/TestTajoCli.java,300,,"    setVar(tajoCli, SessionVars.CLI_NULL_CHAR, ""testnull"");"
240449,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/cli/tsql/TestTajoCli.java,303,,"        ""  c_custkey,\n"" +"
240450,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/cli/tsql/TestTajoCli.java,459,,"    tajoCli.executeMetaCommand(""\\set"");"
240451,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/cli/tsql/TestTajoCli.java,492,,"    tajoCli.executeScript(""create table "" + tableName + "" (col1 TIMESTAMP)"");"
240452,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/cli/tsql/TestTajoCli.java,557,,"    tajoCli.executeScript(""alter table "" + tableName + "" add partition (key2 = 0.1)"");"
240453,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/client/TestTajoClient.java,235,,"      ""create external table "" + tableName + "" (deptname text, score integer) """
240454,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/client/TestTajoClient.java,293,,"    client.updateQuery(""drop table "" + tableName);"
240455,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/client/TestTajoClient.java,313,,"    client.updateQuery(""drop table "" + tableName + "" purge"");"
240456,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/client/TestTajoClient.java,326,,"    String sql = ""create table "" + tableName + "" (deptname text, score int4)"";"
240457,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/client/TestTajoClient.java,326,,"    String sql = ""create table "" + tableName + "" (deptname text, score int4)"";"
240458,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/client/TestTajoClient.java,733,,"        ""||\\T\n"" +"
240459,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/codegen/TestEvalCodeGenerator.java,37,,"        .add(""col1"", TajoDataTypes.Type.INT2)"
240460,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/codegen/TestEvalCodeGenerator.java,38,,"        .add(""col2"", TajoDataTypes.Type.INT4)"
240461,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/codegen/TestEvalCodeGenerator.java,51,,"    testEval(schema, ""table1"", ""0,1,2,3,4.5,6.5"", ""select 1+1;"", new String [] {""2""});"
240462,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/codegen/TestEvalCodeGenerator.java,51,,"    testEval(schema, ""table1"", ""0,1,2,3,4.5,6.5"", ""select 1+1;"", new String [] {""2""});"
240463,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/codegen/TestEvalCodeGenerator.java,52,,"    testEval(schema, ""table1"", ""0,1,2,3,4.5,5.5"", ""select col1 + col2 from table1;"", new String [] {""3""});"
240464,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/codegen/TestEvalCodeGenerator.java,60,,"    testEval(schema, ""table1"", ""0,1,2,3,4.5,5.5,F6"", ""select col1 from table1;"", new String [] {""1""});"
240465,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/codegen/TestEvalCodeGenerator.java,165,,"    testEval(schema, ""table1"", ""0,"", ""select col1 between 1 and 3 from table1"", new String[]{""f""});"
240466,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/codegen/TestEvalCodeGenerator.java,172,,"    testEval(schema, ""table1"", ""0,"", ""select col1 between 3 and 1 from table1"", new String[]{""f""});"
240467,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/codegen/TestEvalCodeGenerator.java,179,,"    testEval(schema, ""table1"", ""0,"", ""select col1 not between 1 and 3 from table1"", new String[]{""t""});"
240468,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/codegen/TestEvalCodeGenerator.java,186,,"    testEval(schema, ""table1"", ""0,"", ""select col1 not between 3 and 1 from table1"", new String[]{""t""});"
240469,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/codegen/TestEvalCodeGenerator.java,200,,"    testEval(schema, ""table1"", ""0,"", ""select col1 between symmetric 1 and 3 from table1"", new String[]{""f""});"
240470,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/codegen/TestEvalCodeGenerator.java,207,,"    testEval(schema, ""table1"", ""0,"", ""select col1 not between symmetric 1 and 3 from table1"", new String[]{""t""});"
240471,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/codegen/TestEvalCodeGenerator.java,214,,"    testEval(schema, ""table1"", ""0,"", ""select col1 between symmetric 3 and 1 from table1"", new String[]{""f""});"
240472,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/codegen/TestEvalCodeGenerator.java,221,,"    testEval(schema, ""table1"", ""0,"", ""select col1 not between symmetric 3 and 1 from table1"", new String[]{""t""});"
240473,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/codegen/TestEvalCodeGenerator.java,245,,"    testEval(schema, ""table1"", ""0,1,2,3,4.1,5.1,6,7,t"", ""select +col1 from table1;"", new String [] {""1""});"
240474,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestEvalTree.java,348,,"      fail(""EvalNode is not binded"");"
240475,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestEvalTreeUtil.java,168,,"    EvalTreeUtil.changeColumnRef(copy, ""default.people.score"", ""newscore"");"
240476,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestEvalTreeUtil.java,174,,"    EvalTreeUtil.changeColumnRef(copy, ""default.people.age"", ""sum_age"");"
240477,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestEvalTreeUtil.java,174,,"    EvalTreeUtil.changeColumnRef(copy, ""default.people.age"", ""sum_age"");"
240478,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,36,,"        .add(""col1"", INT4)"
240479,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,37,,"        .add(""col2"", INT4)"
240480,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,38,,"        .add(""col3"", INT4)"
240481,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,106,,"        ""table1"", ""123,123,456,-123"","
240482,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,106,,"        ""table1"", ""123,123,456,-123"","
240483,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,173,,"        ""table1"", ""123,456,,"","
240484,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,233,,"    testEval(schema2, ""table1"", ""b,a,c"", ""select col1 between 'a' and 'c' from table1"", new String[]{""t""});"
240485,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,239,,"    testEval(schema2, ""table1"", ""a,a,c"", ""select col1 between col2 and col3 from table1"", new String[]{""t""});"
240486,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,264,,"    testEval(schema3, ""table1"", ""20130715,20100102,20120525,20130716"", query, new String [] {""1""});"
240487,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,47,,"    testEval(schema, ""테이블1"", ""123,234"", ""select \""컬럼1\""::float, cast (\""컬럼2\"" as float4) as a from \""테이블1\"""","
240488,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,48,,"        new String[]{""123.0"", ""234.0""});"
240489,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,48,,"        new String[]{""123.0"", ""234.0""});"
240490,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,74,,"    testSimpleEval(""select cast (1 as float)"", new String[] {""1.0""});"
240491,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,78,,"    testSimpleEval(""select cast ('123' as int2)"", new String[] {""123""});"
240492,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,101,,"        .add(""col1"", INT2)"
240493,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,102,,"        .add(""col2"", INT4)"
240494,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,118,,"    testEval(schema, ""table1"", ""0,1,2,3,4.1,5.1,6,7"", ""select col0::int1 from table1;"", new String [] {""0""});"
240495,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,118,,"    testEval(schema, ""table1"", ""0,1,2,3,4.1,5.1,6,7"", ""select col0::int1 from table1;"", new String [] {""0""});"
240496,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,154,,"    testEval(schema, ""table1"", ""0,1,2,3,4.1,5.1,6,7"", ""select col0::float4 from table1;"", new String [] {""0.0""});"
240497,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,156,,"    testEval(schema, ""table1"", ""0,1,2,3,4.1,5.1,6,7"", ""select col2::float4 from table1;"", new String [] {""2.0""});"
240498,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,157,,"    testEval(schema, ""table1"", ""0,1,2,3,4.1,5.1,6,7"", ""select col3::float4 from table1;"", new String [] {""3.0""});"
240499,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,158,,"    testEval(schema, ""table1"", ""0,1,2,3,4.1,5.1,6,7"", ""select col4::float4 from table1;"", new String [] {""4.1""});"
240500,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,159,,"    testEval(schema, ""table1"", ""0,1,2,3,4.1,5.1,6,7"", ""select col5::float4 from table1;"", new String [] {""5.1""});"
240501,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,286,,"    testEval(schema, ""table1"", ""0,1,2,3,4.1,5.1,6,7"", ""select col1 + col5 from table1;"", new String [] {""6.1""});"
240502,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,793,,"    testEval(schema, ""table1"", ""0,1,2,3,4.1,5.1,6,7,t"", ""select +col1 from table1;"", new String [] {""1""});"
240503,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,975,,"    testEval(schema, ""table1"", ""01:00:00,1980-09-04,1980-09-04 01:00:00"","
240504,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,53,,"        .add(""value"", TajoDataTypes.Type.INT8)"
240505,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,55,,"    String[] data = new String[]{ ""1|-111"", ""2|\\N"", ""3|-333"" };"
240506,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,56,,"    TajoTestingCluster.createTable(conf, ""testbuiltin11"", schema, data, 1);"
240507,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,61,,"              ""-------------------------------\n"" +"
240508,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,67,,"      executeString(""DROP TABLE testbuiltin11 PURGE"");"
240509,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,81,,"      ResultSet res = executeString(""select min(value) as min_value, max(value) as max_value from testbuiltin11"");"
240510,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,82,,"      String ascExpected = ""min_value,max_value\n"" +"
240511,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,98,,"    String[] data = new String[]{ ""2014-01-02"", ""2014-12-01"", ""\\N"", ""\\N"", ""2000-03-01"" };"
240512,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,327,,"        .add(""value_int"", TajoDataTypes.Type.INT4)"
240513,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,328,,"        .add(""value_long"", TajoDataTypes.Type.INT8)"
240514,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,329,,"        .add(""value_float"", TajoDataTypes.Type.FLOAT4)"
240515,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,330,,"        .add(""value_double"", TajoDataTypes.Type.FLOAT8)"
240516,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,332,,"    String[] data = new String[]{ ""1|\\N|-111|1.2|-50.5"", ""2|1|\\N|\\N|52.5"", ""3|2|-333|2.8|\\N"" };"
240517,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,332,,"    String[] data = new String[]{ ""1|\\N|-111|1.2|-50.5"", ""2|1|\\N|\\N|52.5"", ""3|2|-333|2.8|\\N"" };"
240518,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,332,,"    String[] data = new String[]{ ""1|\\N|-111|1.2|-50.5"", ""2|1|\\N|\\N|52.5"", ""3|2|-333|2.8|\\N"" };"
240519,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,358,,"    String[] data = new String[]{ ""1|\\N|\\N|\\N|\\N"", ""2|\\N|\\N|\\N|\\N"", ""3|\\N|\\N|\\N|\\N"" };"
240520,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,365,,"          ""null,null,null,null\n"";"
240521,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,466,,"        ""1|\\N|\\N|\\N|-50.5"","
240522,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestBuiltinFunctions.java,467,,"        ""2|1|\\N|\\N|\\N"","
240523,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestConditionalExpressions.java,37,,"        .add(""col1"", TajoDataTypes.Type.INT1)"
240524,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestConditionalExpressions.java,38,,"        .add(""col2"", TajoDataTypes.Type.INT2)"
240525,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestConditionalExpressions.java,48,,"    testEval(schema, ""table1"", ""1,2,3,4,5.0,6.0,text,abc,"","
240526,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestConditionalExpressions.java,48,,"    testEval(schema, ""table1"", ""1,2,3,4,5.0,6.0,text,abc,"","
240527,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestConditionalExpressions.java,85,,"    testEval(schema, ""table1"", ""1,2,3"","
240528,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestConditionalExpressions.java,185,,"    testSimpleEval(""select coalesce(1.0, 2.0);"", new String[]{""1.0""});"
240529,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestConditionalExpressions.java,220,,"        new String[]{""2014-01-01 00:00:00""});"
240530,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestConditionalExpressions.java,232,,"        new String[]{""12:00:00""});"
240531,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestConditionalExpressions.java,243,,"    testSimpleEval(""select coalesce(null, date '2014-01-01');"", new String[]{""2014-01-01""});"
240532,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,81,,"        new String[]{""2006-01-01 00:00:00""});"
240533,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,91,,"        new String[]{""2005-03-02 00:00:00""});"
240534,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,122,,"        .add(""col1"", TIMESTAMP)"
240535,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,124,,"    testEval(schema2, ""table1"","
240536,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,126,,"        ""select extract(year from col1), extract(month from col1), extract(day from col1) from table1;"","
240537,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,127,,"        new String[]{""1970.0"", ""1.0"", ""17.0""});"
240538,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,127,,"        new String[]{""1970.0"", ""1.0"", ""17.0""});"
240539,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,127,,"        new String[]{""1970.0"", ""1.0"", ""17.0""});"
240540,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,142,,"        ""10:09:37.5"","
240541,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,144,,"        new String[]{""10.0"", ""9.0"", ""37.5""});"
240542,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,144,,"        new String[]{""10.0"", ""9.0"", ""37.5""});"
240543,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,144,,"        new String[]{""10.0"", ""9.0"", ""37.5""});"
240544,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,162,,"    testSimpleEval(""select extract(century from TIMESTAMP '1970-01-17 10:09:37');"", new String[]{""20.0""});"
240545,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,166,,"    testSimpleEval(""select extract(decade from TIMESTAMP '1970-01-17 10:09:37');"", new String[]{""197.0""});"
240546,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,170,,"    testSimpleEval(""select extract(millennium from TIMESTAMP '2001-02-16 10:09:37');"", new String[]{""3.0""});"
240547,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,171,,"    testSimpleEval(""select extract(millennium from TIMESTAMP '2000-02-16 10:09:37');"", new String[]{""2.0""});"
240548,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,182,,"    testSimpleEval(""select extract(second from TIMESTAMP '1970-01-17 10:09:37');"", new String[]{""37.0""});"
240549,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,200,,"    testSimpleEval(""select extract(dow from TIMESTAMP '1970-01-17 10:09:37');"", new String[]{""6.0""});"
240550,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,201,,"    testSimpleEval(""select extract(dow from TIMESTAMP '1970-01-18 10:09:37');"", new String[]{""0.0""});"
240551,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,203,,"    testSimpleEval(""select extract(isodow from TIMESTAMP '1970-01-18 10:09:37');"", new String[]{""7.0""});"
240552,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,205,,"    testSimpleEval(""select extract(year from TIMESTAMP '2006-01-02 10:09:37');"", new String[]{""2006.0""});"
240553,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,208,,"    testSimpleEval(""select extract(isoyear from TIMESTAMP '2006-01-01 10:09:37');"", new String[]{""2005.0""});"
240554,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,213,,"    testSimpleEval(""select extract(quarter from TIMESTAMP '2006-12-01 10:09:37');"", new String[]{""4.0""});"
240555,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,242,,"        ""select date_part('year', col1), date_part('month', col1), date_part('day', col1) from table1;"","
240556,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,435,,"        new String[]{dateFormat(zonedDateTime, ""yyyy-MM-dd"")});"
240557,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestJsonFunctions.java,41,,"    testSimpleEval(""select json_array_get('"" + JSON_ARRAY + ""', 0)"", new String[]{""100""});"
240558,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestJsonFunctions.java,52,,"    testSimpleEval(""select json_array_contains('"" + JSON_COMPLEX_ARRAY + ""', 100)"", new String[]{""t""});"
240559,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestMathFunctions.java,42,,"        .add(""col1"", FLOAT8)"
240560,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestMathFunctions.java,43,,"        .add(""col2"", FLOAT8)"
240561,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestMathFunctions.java,44,,"        .add(""col3"", FLOAT8)"
240562,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestMathFunctions.java,47,,"    testEval(schema, ""table1"", ""1.0, 0.2, 0.4"", ""select round(col1 + col2 + col3) from table1"","
240563,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestMathFunctions.java,97,,"    testEval(schema, ""table1"", ""1.0, 0.2, 0.1"", ""select ceil(col1 + col2 + col3) from table1"","
240564,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestMathFunctions.java,123,,"    testSimpleEval(""select sin(0.0) as col1 "", new String[]{""0.0""});"
240565,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestMathFunctions.java,141,,"    testSimpleEval(""select cos(0.0) as col1 "", new String[]{""1.0""});"
240566,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestPatternMatchingPredicates.java,39,,"    testEval(schema, ""table1"", ""\\NULL,"", ""select col1 like 'a%' from table1"", new String[]{NullDatum.get().toString()});"
240567,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestPatternMatchingPredicates.java,42,,"    testEval(schema, ""table1"", ""abc"", ""select col1 like '%c' from table1"", new String[]{""t""});"
240568,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,36,,"    testSimpleEval(""select ('abc' || 'def') col1 "", new String[]{""abcdef""});"
240569,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,45,,"        .add(""col1"", TEXT)"
240570,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,46,,"        .add(""col2"", INT4)"
240571,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,47,,"        .add(""col3"", FLOAT8)"
240572,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,52,,"    testEval(schema, ""table1"", ""abc,2,3.14"", ""select col1 || col2 || col3 from table1"", new String[]{""abc23.14""});"
240573,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,58,,"    testSimpleEval(""select ltrim(' trim') "", new String[]{""trim""});"
240574,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,160,,"    testSimpleEval(""select left('abcdef',3) as col1 "", new String[]{""abc""});"
240575,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,226,,"    testEval(schema, ""table1"", ""abc,efg,3.14"", ""select reverse(col1) || reverse(col2) from table1"","
240576,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,269,,"    testEval(schema, ""table1"", ""ABC,DEF,3.14"", ""select lower(col1), lower(col2) from table1"","
240577,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,340,,"    testEval(schema, ""table1"", "",abcdef,3.14"", ""select to_hex(10) from table1"","
240578,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestEvalNodeToExprConverter.java,138,,"    assertEquals(""default.lineitem"", column.getQualifier());"
240579,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestEvalNodeToExprConverter.java,198,,"    assertEquals(""l_discount"", greaterThanOrEqualsLeft.getName());"
240580,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestJoinOrderAlgorithm.java,79,,"        .add(""deptname"", Type.TEXT)"
240581,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,87,,"        .add(""name"", Type.TEXT)"
240582,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,89,,"        .add(""deptname"", Type.TEXT)"
240583,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,99,,"        .add(""score"", Type.INT4)"
240584,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,104,,"        IdentifierUtil.buildFQName(TajoConstants.DEFAULT_DATABASE_NAME, ""employee""), schema, meta,"
240585,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,109,,"        IdentifierUtil.buildFQName(DEFAULT_DATABASE_NAME, ""dept""), schema2, ""TEXT"", new KeyValueSet(),"
240586,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,109,,"        IdentifierUtil.buildFQName(DEFAULT_DATABASE_NAME, ""dept""), schema2, ""TEXT"", new KeyValueSet(),"
240587,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,319,,"    assertEquals(""default.score"", scan.getTableName());"
240588,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,329,,"    assertEquals(""default.dept"", inner.getTableName());"
240589,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,993,,"    testGenerateCuboids[0] = new Column(""col1"", Type.INT4);"
240590,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,994,,"    testGenerateCuboids[1] = new Column(""col2"", Type.INT8);"
240591,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,1335,,"    TableDesc tableDesc = new TableDesc(""default.self_desc_table1"", null,"
240592,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,1365,,"    assertEquals(""default.self_desc_table1.dept"", targets.get(0).getCanonicalName());"
240593,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,1366,,"    assertEquals(""default.self_desc_table1.id"", targets.get(1).getCanonicalName());"
240594,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,1367,,"    assertEquals(""default.self_desc_table1.name"", targets.get(2).getCanonicalName());"
240595,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestPlannerUtil.java,194,,"        .add(""employee.id1"", CatalogUtil.newSimpleDataType(Type.INT4))"
240596,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestPlannerUtil.java,195,,"        .add(""employee.id2"", CatalogUtil.newSimpleDataType(Type.INT4)).build();"
240597,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestPlannerUtil.java,197,,"        .add(""people.fid1"", CatalogUtil.newSimpleDataType(Type.INT4))"
240598,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestPlannerUtil.java,198,,"        .add(""people.fid2"", CatalogUtil.newSimpleDataType(Type.INT4)).build();"
240599,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestUniformRangePartition.java,43,,"        .add(""col1"", Type.INT2)"
240600,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestUniformRangePartition.java,356,,"        .add(""l_returnflag"", Type.TEXT)"
240601,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestUniformRangePartition.java,357,,"        .add(""l_linestatus"", Type.TEXT)"
240602,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestUniformRangePartition.java,490,,"    s.put(0, DatumFactory.createText(""가가가""));"
240603,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestUniformRangePartition.java,492,,"    e.put(0, DatumFactory.createText(""하하하""));"
240604,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/TestUniformRangePartition.java,926,,"        .add(""KEY1"", Type.TEXT).build();"
240605,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/physical/TestHashJoinExec.java,156,,"    FileFragment[] empFrags = FileTablespace.splitNG(conf, ""default.e"", employee.getMeta(),"
240606,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/physical/TestHashJoinExec.java,158,,"    FileFragment[] peopleFrags = FileTablespace.splitNG(conf, ""default.p"", people.getMeta(),"
240607,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/physical/TestPhysicalPlanner.java,242,,"    FileFragment[] frags = FileTablespace.splitNG(conf, ""default.employee"", employee.getMeta(),"
240608,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/physical/TestPhysicalPlanner.java,302,,"    FileFragment[] frags = FileTablespace.splitNG(conf, ""default.score"", score.getMeta(), new Path(score.getUri()),"
240609,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/physical/TestPhysicalPlanner.java,428,,"    Path workDir = CommonTestingUtil.getTestDir(TajoTestingCluster.DEFAULT_TEST_DIRECTORY + ""/testStorePlan"");"
240610,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/planner/physical/TestSortIntersectExec.java,107,,"          DatumFactory.createText(""dept_"" + i) });"
240611,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestAlterTable.java,190,,"      ""-------------------------------\n"" +"
240612,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestAlterTable.java,196,,"      ""null,null,null,null\n"" +"
240613,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestAlterTable.java,214,,"    executeString(""ALTER TABLE "" + simpleTableName + "" DROP PARTITION (col1 = 1 , col2 = 1)"").close();"
240614,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestAlterTable.java,230,,"    executeString(""ALTER TABLE "" + simpleTableName + "" REPAIR PARTITION"").close();"
240615,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestAlterTable.java,260,,"    executeString(""create table "" + canonicalTableName + ""(col1 int4, col2 int4) partition by column(key float8) """
240616,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestAlterTable.java,268,,"    ResultSet res = executeString(""SELECT * FROM "" + canonicalTableName + "" ORDER BY col1, col2 desc, key desc;"");"
240617,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestAlterTable.java,268,,"    ResultSet res = executeString(""SELECT * FROM "" + canonicalTableName + "" ORDER BY col1, col2 desc, key desc;"");"
240618,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestAlterTable.java,270,,"    String expectedResult = ""col1,col2,key\n"" +"
240619,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestAlterTable.java,277,,"      ""null,null,null\n"" +"
240620,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestAlterTable.java,297,,"    executeString(""DROP TABLE "" + canonicalTableName + "" PURGE"").close();"
240621,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestAlterTable.java,297,,"    executeString(""DROP TABLE "" + canonicalTableName + "" PURGE"").close();"
240622,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestAlterTablespace.java,39,,"      assertFalse(catalog.existTablespace(""space1""));"
240623,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestCaseByCases.java,86,,"        ""null\n"" +"
240624,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestCreateIndex.java,53,,"    assertTrue(catalog.existIndexByName(getCurrentDatabase(), ""l_orderkey_idx""));"
240625,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestCreateIndex.java,54,,"    assertTrue(catalog.existIndexByColumnNames(getCurrentDatabase(), ""lineitem"", new String[]{""l_orderkey""}));"
240626,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestCreateIndex.java,54,,"    assertTrue(catalog.existIndexByColumnNames(getCurrentDatabase(), ""lineitem"", new String[]{""l_orderkey""}));"
240627,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestCreateTable.java,63,,"    List<String> createdNames = executeDDL(""table1_ddl.sql"", ""table1"", ""table1"");"
240628,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestCreateTable.java,63,,"    List<String> createdNames = executeDDL(""table1_ddl.sql"", ""table1"", ""table1"");"
240629,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestCreateTable.java,65,,"    executeString(""DROP TABLE table1"");"
240630,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestCreateTable.java,175,,"    assertTableNotExists(""d7.table1"");"
240631,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestCreateTable.java,231,,"        tableNames = executeDDL(""quoted_identifier_mixed_chars_ddl_1.sql"", ""table2"", ""\""tablE1\"""");"
240632,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestCreateTable.java,477,,"      executeString(""CREATE TABLE table2 LIKE table1"");"
240633,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestCreateTable.java,481,,"      executeString(""DROP TABLE table2"");"
240634,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestCreateTable.java,527,,"      executeString(""DROP TABLE table3"");"
240635,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestGroupByQuery.java,502,,"        ""a|\\N|"","
240636,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,81,,"    HBaseTablespace hBaseTablespace = new HBaseTablespace(""cluster1"", URI.create(tableSpaceUri), null);"
240637,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,123,,"    HTableDescriptor hTableDesc = testingCluster.getHBaseUtil().getTableDescriptor(""hbase_table"");"
240638,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,130,,"    assertEquals(""col2"", hColumns[0].getNameAsString());"
240639,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,131,,"    assertEquals(""col3"", hColumns[1].getNameAsString());"
240640,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,149,,"              ""LOCATION '%s/external_hbase_table'"", tableSpaceUri);"
240641,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,166,,"          ""'hbase.rowkey.delimiter'='_')"").close();"
240642,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,179,,"      HTableDescriptor hTableDesc = new HTableDescriptor(TableName.valueOf(""external_hbase_table_not_purge""));"
240643,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,180,,"      hTableDesc.addFamily(new HColumnDescriptor(""col1""));"
240644,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,191,,"      assertTableExists(""external_hbase_mapped_table"");"
240645,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,211,,"      put.add(""col2"".getBytes(), ""k1"".getBytes(), (""k1-"" + i).getBytes());"
240646,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,212,,"      put.add(""col2"".getBytes(), ""k2"".getBytes(), (""k2-"" + i).getBytes());"
240647,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,220,,"    final String tableName = ""external_hbase_table"";"
240648,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,255,,"      executeString(""DROP TABLE external_hbase_mapped_table PURGE"").close();"
240649,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,340,,"            ""-------------------------------\n"" +"
240650,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,450,,"    assertTableExists(""hbase_mapped_table"");"
240651,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,459,,"      DecimalFormat df = new DecimalFormat(""000"");"
240652,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,483,,"      executeString(""DROP TABLE hbase_mapped_table PURGE"").close();"
240653,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,518,,"      scan.setStartRow(""021"".getBytes());"
240654,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,563,,"        new ConstEval(new TextDatum(""020"")));"
240655,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,565,,"        new ConstEval(new TextDatum(""055"")));"
240656,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,573,,"    assertEquals(""040"", fragment1.getEndKey().toString());"
240657,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,646,,"        ""'hbase.split.rowkeys'='010,040,060,080')"").close();"
240658,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,651,,"      hAdmin.tableExists(""hbase_table1"");"
240659,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,727,,"    executeString(""insert into hbase_mapped_table "" +"
240660,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,803,,"    executeString(""CREATE TABLE hbase_mapped_table (rk text, col1 text) TABLESPACE cluster1 "" +"
240661,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,804,,"        ""USING hbase WITH ('table'='hbase_table', 'columns'=':key,col1:a', "" +"
240662,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,813,,"        .add(""name"", Type.TEXT)"
240663,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,818,,"      datas.add(df.format(i) + ""|value"" + i);"
240664,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,820,,"    TajoTestingCluster.createTable(conf, getCurrentDatabase() + "".base_table"","
240665,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,824,,"        ""select id, name from base_table "").close();"
240666,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestHBaseTable.java,841,,"      executeString(""DROP TABLE base_table PURGE"").close();"
240667,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,48,,"    ResultSet res = executeFile(""table1_ddl.sql"");"
240668,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,52,,"    assertTrue(catalog.existsTable(getCurrentDatabase(), ""table1""));"
240669,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,62,,"    executeString(""DROP TABLE table1 PURGE"");"
240670,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,90,,"      assertTrue(name.matches(""part-[0-9]*-[0-9]*-[0-9]*""));"
240671,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,98,,"    String expected = ""1|1|17.0\n"" +"
240672,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,99,,"        ""1|1|36.0\n"" +"
240673,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,100,,"        ""2|2|38.0\n"" +"
240674,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,101,,"        ""3|2|45.0\n"" +"
240675,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,102,,"        ""3|3|49.0\n"" +"
240676,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,103,,"        ""||\n"" +"
240677,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,193,,"    executeString(""create table "" + tableName + "" (n_name TEXT, n_regionkey INT4)"" +"
240678,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,199,,"      ResultSet res = executeString(""select * from "" + tableName);"
240679,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,202,,"          ""-------------------------------\n"" +"
240680,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,228,,"          ""null,null,null\n"" +"
240681,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,318,,"      executeString(""DROP TABLE "" + tableName + "" PURGE"");"
240682,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,318,,"      executeString(""DROP TABLE "" + tableName + "" PURGE"");"
240683,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,467,,"    res = executeString(""insert overwrite into "" + tableName + "" select l_orderkey from default.lineitem where l_orderkey = 3"");"
240684,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,585,,"      assertTrue(catalog.existsTable(getCurrentDatabase(), ""parquet_table""));"
240685,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,806,,"        ""1|3|173665.47\n"" +"
240686,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,807,,"        ""2|4|46929.18\n"" +"
240687,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,808,,"        ""3|2|193846.25\n"" +"
240688,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,930,,"    assertTrue(catalog.existsTable(getCurrentDatabase(), ""test1""));"
240689,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestJoinOnPartitionedTables.java,162,,"        ""create table "" + tableName + "" (l_partkey int4, l_suppkey int4, l_linenumber int4, \n"" +"
240690,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestJoinOnPartitionedTables.java,169,,"      executeString(""insert overwrite into "" + tableName +"
240691,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestJoinOnPartitionedTables.java,194,,"      executeString(""drop table "" + tableName + "" purge"");"
240692,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestJoinOnPartitionedTables.java,194,,"      executeString(""drop table "" + tableName + "" purge"");"
240693,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestJoinQuery.java,148,,"        .add(""name"", TajoDataTypes.Type.TEXT)"
240694,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestJsonWithTimezone.java,36,,"      executeDDL(""datetime_table_ddl.sql"", ""timezoned"", new String[]{""timezoned1""});"
240695,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestNullValues.java,61,,"        .add(""col1"", Type.INT4)"
240696,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestNullValues.java,62,,"        .add(""col2"", Type.TEXT)"
240697,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestNullValues.java,63,,"        .add(""col3"", Type.FLOAT4)"
240698,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestOuterJoinQuery.java,224,,"      @QuerySpec(""select t1.id, t1.name, t2.id, t3.id\n"" +"
240699,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestOuterJoinQuery.java,225,,"          ""from jointable11 t1\n"" +"
240700,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestOuterJoinQuery.java,226,,"          ""left outer join jointable12 t2\n"" +"
240701,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestOuterJoinQuery.java,227,,"          ""on t1.id = t2.id\n"" +"
240702,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestOuterJoinQuery.java,228,,"          ""left outer join jointable13 t3\n"" +"
240703,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestQueryOnSelfDescTable.java,85,,"          ""select\n"" +"
240704,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestQueryOnSelfDescTable.java,91,,"          ""from\n"" +"
240705,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestQueryOnSelfDescTable.java,205,,"        ""select "" +"
240706,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestQueryOnSelfDescTable.java,209,,"        ""from "" +"
240707,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestQueryOnSelfDescTable.java,215,,"        ""where "" +"
240708,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestQueryOnSelfDescTable.java,252,,"          ""where\n"" +"
240709,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestSelectNestedRecord.java,34,,"    List<String> tables = executeDDL(""sample1_ddl.sql"", ""sample1"", ""sample1"");"
240710,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestSelectNestedRecord.java,34,,"    List<String> tables = executeDDL(""sample1_ddl.sql"", ""sample1"", ""sample1"");"
240711,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestSelectNestedRecord.java,54,,"    List<String> tables = executeDDL(""tweets_ddl.sql"", ""tweets"", ""tweets"");"
240712,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestSelectNestedRecord.java,54,,"    List<String> tables = executeDDL(""tweets_ddl.sql"", ""tweets"", ""tweets"");"
240713,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestSelectQuery.java,584,,"      executeDDL(""datetime_table_ddl.sql"", ""timezoned"", new String[]{""timezoned1""});"
240714,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestSelectQuery.java,598,,"      executeDDL(""datetime_table_timezoned_ddl.sql"", ""timezoned"", new String[]{""timezoned2""});"
240715,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestSimpleQuery.java,100,,"    String query = ""select * from "" + testTable;"
240716,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestSortQuery.java,237,,"          .add(""name"", Type.TEXT)"
240717,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestSortQuery.java,262,,"    String[] data = new String[]{ ""1|111"", ""2|\\N"", ""3|333"" };"
240718,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestSortQuery.java,262,,"    String[] data = new String[]{ ""1|111"", ""2|\\N"", ""3|333"" };"
240719,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestSortQuery.java,262,,"    String[] data = new String[]{ ""1|111"", ""2|\\N"", ""3|333"" };"
240720,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestSortQuery.java,267,,"      String ascExpected = ""id,name\n"" +"
240721,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestSortQuery.java,268,,"          ""-------------------------------\n"" +"
240722,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestSortQuery.java,269,,"          ""1,111\n"" +"
240723,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestSortQuery.java,270,,"          ""3,333\n"" +"
240724,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestSortQuery.java,271,,"          ""2,null\n"";"
240725,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,84,,"        ""create table "" + tableName + "" (col1 int4, col2 int4) partition by column(key float8) "");"
240726,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,84,,"        ""create table "" + tableName + "" (col1 int4, col2 int4) partition by column(key float8) "");"
240727,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,92,,"          ""insert overwrite into "" + tableName + "" select l_orderkey, l_partkey, "" +"
240728,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,92,,"          ""insert overwrite into "" + tableName + "" select l_orderkey, l_partkey, "" +"
240729,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,93,,"              ""l_quantity from lineitem"");"
240730,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,127,,"    verifyPartitionDirectoryFromCatalog(DEFAULT_DATABASE_NAME, tableName, new String[]{""key""},"
240731,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,130,,"    executeString(""DROP TABLE "" + tableName + "" PURGE"").close();"
240732,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,130,,"    executeString(""DROP TABLE "" + tableName + "" PURGE"").close();"
240733,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,195,,"        ""create table "" + tableName + "" (col1 int4, col2 int4, null_col int4) partition by column(key float8) "");"
240734,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,382,,"        + "" select l_returnflag, l_orderkey, l_partkey, l_quantity from lineitem"");"
240735,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,395,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=1"")));"
240736,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,396,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=1/col2=1"")));"
240737,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,397,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=1/col2=1/col3=17.0"")));"
240738,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,398,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=2"")));"
240739,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,399,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=2/col2=2"")));"
240740,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,400,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=2/col2=2/col3=38.0"")));"
240741,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,401,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=3"")));"
240742,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,402,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=3/col2=2"")));"
240743,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,403,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=3/col2=3"")));"
240744,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,404,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=3/col2=2/col3=45.0"")));"
240745,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,405,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=3/col2=3/col3=49.0"")));"
240746,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,410,,"    res = executeString(""select * from "" + tableName + "" where col2 = 2"");"
240747,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,410,,"    res = executeString(""select * from "" + tableName + "" where col2 = 2"");"
240748,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,429,,"    res = executeString(""select * from "" + tableName + "" where (col1 = 2 or col1 = 3) and col2 >= 2"");"
240749,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,439,,"    String expectedResult = ""col4,col1,col2,col3\n"" +"
240750,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,440,,"      ""-------------------------------\n"" +"
240751,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,441,,"      ""N,1,1,36.0\n"";"
240752,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,448,,"    verifyPartitionDirectoryFromCatalog(DEFAULT_DATABASE_NAME, tableName, new String[]{""col1"", ""col2"", ""col3""},"
240753,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,448,,"    verifyPartitionDirectoryFromCatalog(DEFAULT_DATABASE_NAME, tableName, new String[]{""col1"", ""col2"", ""col3""},"
240754,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,448,,"    verifyPartitionDirectoryFromCatalog(DEFAULT_DATABASE_NAME, tableName, new String[]{""col1"", ""col2"", ""col3""},"
240755,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,535,,"    String expected = ""N\n"" +"
240756,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,541,,"        ""R\n"" +"
240757,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,545,,"        ""\\N\n"" +"
240758,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,560,,"        ""N,2,2,38.0\n"" +"
240759,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,562,,"        ""R,3,2,45.0\n"" +"
240760,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,611,,"      ""N,1,1,17.0\n"" +"
240761,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,650,,"          ""WITH ('text.delimiter'='|','compression.codec'='org.apache.hadoop.io.compress.DeflateCodec') "" +"
240762,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,759,,"        ""create table "" + tableName + "" (col4 text) USING text "" +"
240763,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,997,,"      assertTrue(catalog.existsTable(""testinsertquery1"", ""table1""));"
240764,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,1041,,"        ""create table "" + tableName + "" (col1 text) partition by column(col2 text) "");"
240765,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,1375,,"    res = executeString(""SELECT * FROM "" + tableName"
240766,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,1378,,"    expectedResult = ""col1,col2,l_shipdate,l_returnflag\n"" +"
240767,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,1392,,"      ""3,3,1993-11-09,R\n"" +"
240768,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,1474,,"    expectedResult = ""col1,col2,key\n"" +"
240769,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,1476,,"      ""3,2,1994-02-02\n"" +"
240770,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,1477,,"      ""3,3,1993-11-09\n"";"
240771,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,1511,,"      + "" WHERE key > '1993-01-01'::date "" +"
240772,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,1745,,"        ""null,null,null\n"" +"
240773,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTimezone.java,48,,"    executeString(String.format(""SET TIME ZONE TO '%s'"", timezone)).close();"
240774,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestTimezone.java,53,,"      assertEquals(""2015-08-12 14:00:00"", res.getString(1));"
240775,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestWindowQuery.java,265,,"        .add(""time"", TajoDataTypes.Type.TIME)"
240776,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestWindowQuery.java,267,,"    String[] data = new String[]{ ""1|12:11:12"", ""2|10:11:13"", ""2|05:42:41"" };"
240777,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestWindowQuery.java,267,,"    String[] data = new String[]{ ""1|12:11:12"", ""2|10:11:13"", ""2|05:42:41"" };"
240778,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestWindowQuery.java,267,,"    String[] data = new String[]{ ""1|12:11:12"", ""2|10:11:13"", ""2|05:42:41"" };"
240779,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/engine/query/TestWindowQuery.java,274,,"          ""-------------------------------\n"" +"
240780,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/ha/TestHAServiceHDFSImpl.java,100,,"        ""localhost:"" + NetUtils.getFreeSocketPort());"
240781,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/master/TestRepartitioner.java,198,,"    List<List<FetchProto>> fetches = Repartitioner.splitOrMergeIntermediates(""name"", ebId, intermediateEntries,"
240782,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/parser/sql/TestSQLAnalyzer.java,153,,"            JavaResourceUtil.readTextFromResource(""results/TestSQLAnalyzer/errors/"" + fileName + "".result"");"
240783,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/storage/TestFileFragment.java,50,,"    FileFragment fragment1 = new FileFragment(""table1_1"", new Path(path, ""table0""), 0, 500);"
240784,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/storage/TestFileFragment.java,50,,"    FileFragment fragment1 = new FileFragment(""table1_1"", new Path(path, ""table0""), 0, 500);"
240785,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/util/TestIPconvertUtil.java,29,,"    assertEquals(16909060, IPconvertUtil.ipstr2int(""1.2.3.4""));"
240786,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/util/TestIPconvertUtil.java,30,,"    assertEquals(-1062731699, IPconvertUtil.ipstr2int(""192.168.0.77""));"
240787,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/util/history/TestHistoryWriterReader.java,65,,"    HistoryWriter writer = new HistoryWriter(""127.0.0.1:28090"", true);"
240788,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/util/metrics/TestJMXTajoObjectNameFactory.java,39,,"    ObjectName objectName = jmxObjectNameFactory.createName(""timers"", ""Tajo"", ""ACTIVE_NODES"");"
240789,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/util/metrics/TestJMXTajoObjectNameFactory.java,39,,"    ObjectName objectName = jmxObjectNameFactory.createName(""timers"", ""Tajo"", ""ACTIVE_NODES"");"
240790,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/worker/TestFetcherWithTajoPullServer.java,150,,"    final Path dataPath = StorageUtil.concatPath(queryBaseDir, ""hash-shuffle"", String.valueOf(partParentId), partId);"
240791,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/worker/TestFetcherWithTajoPullServer.java,152,,"    PullServerRequestURIBuilder builder = new PullServerRequestURIBuilder(""127.0.0.1"", pullserverPort,"
240792,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/worker/TestFetcherWithTajoPullServer.java,170,,"    File data = new File(OUTPUT_DIR + ""data"");"
240793,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/worker/TestFetcherWithTajoPullServer.java,275,,"    String ta = ""1_0"";"
240794,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/ws/rs/resources/TestDatabasesResource.java,84,,"    assertNotNull(databaseNames.get(""databases""));"
240795,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/ws/rs/resources/TestDatabasesResource.java,130,,"        restClient.target(databasesURI).path(""/{databaseName}"")"
240796,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/ws/rs/resources/TestDatabasesResource.java,131,,"        .resolveTemplate(""databaseName"", TajoConstants.DEFAULT_DATABASE_NAME)"
240797,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/ws/rs/resources/TestQueryResultResource.java,136,,"    URI queryIdURI = sendNewQueryResquest(sessionId, ""select * from lineitem"");"
240798,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/ws/rs/resources/TestQueryResultResource.java,137,,"    URI queryResultURI = new URI(queryIdURI + ""/result"");"
240799,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/ws/rs/resources/TestQueryResultResource.java,232,,"      assertTrue(tupleList.get(i).getInt4(response.getSchema().getColumnId(""l_orderkey"")) > 0);"
240800,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/ws/rs/resources/TestSessionsResource.java,104,,"    request.setUserName(""tajo-user"");"
240801,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/ws/rs/resources/TestSessionsResource.java,139,,"        .path(""/{session-id}"").resolveTemplate(""session-id"", response.getId())"
240802,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/ws/rs/resources/TestSessionsResource.java,170,,"        .path(""/{session-id}/variables"").resolveTemplate(""session-id"", response.getId())"
240803,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/ws/rs/resources/TestSessionsResource.java,174,,"    assertTrue(variablesMap.containsKey(""variables""));"
240804,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/ws/rs/resources/TestSessionsResource.java,201,,"    variablesMap.put(""variableA"", ""valueA"");"
240805,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/ws/rs/resources/TestSessionsResource.java,201,,"    variablesMap.put(""variableA"", ""valueA"");"
240806,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/ws/rs/resources/TestTablesResource.java,157,,"        .path(""/{tableName}"").resolveTemplate(""tableName"", tableName)"
240807,./TargetProjects/tajo/tajo-core-tests/src/test/java/org/apache/tajo/ws/rs/resources/TestTablesResource.java,157,,"        .path(""/{tableName}"").resolveTemplate(""tableName"", tableName)"
240808,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/engine/codegen/EvalCodeGenContext.java,100,,"    MethodVisitor initMethod = classWriter.visitMethod(Opcodes.ACC_PUBLIC, ""<init>"", ""()V"", null, null);"
240809,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/engine/codegen/EvalCodeGenContext.java,100,,"    MethodVisitor initMethod = classWriter.visitMethod(Opcodes.ACC_PUBLIC, ""<init>"", ""()V"", null, null);"
240810,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/engine/codegen/EvalCodeGenerator.java,48,,"  @SuppressWarnings(""unused"")"
240811,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/engine/codegen/TajoGeneratorAdapter.java,750,,"        ""valueOf"", ""(C)L"" + Type.getInternalName(String.class) + "";"");"
240812,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/engine/planner/PhysicalPlannerImpl.java,350,,"      LOG.info(""Join ("" + plan.getPID() +"") chooses [In-memory Hash Join]"");"
240813,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/engine/planner/PhysicalPlannerImpl.java,378,,"          LOG.error(""Choose a fallback inner join algorithm: "" + JoinAlgorithm.MERGE_JOIN.name());"
240814,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/engine/planner/PhysicalPlannerImpl.java,471,,"          LOG.info(""Left Outer Join ("" + plan.getPID() +"") chooses [Hash Join]."");"
240815,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/engine/planner/PhysicalPlannerImpl.java,471,,"          LOG.info(""Left Outer Join ("" + plan.getPID() +"") chooses [Hash Join]."");"
240816,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/engine/planner/PhysicalPlannerImpl.java,663,,"          LOG.info(""Left Semi Join ("" + plan.getPID() +"") chooses [In Memory Hash Join]."");"
240817,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/engine/planner/PhysicalPlannerImpl.java,663,,"          LOG.info(""Left Semi Join ("" + plan.getPID() +"") chooses [In Memory Hash Join]."");"
240818,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/engine/planner/PhysicalPlannerImpl.java,668,,"          LOG.error(""Invalid Left Semi Join Algorithm Enforcer: "" + algorithm.name());"
240819,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/engine/planner/physical/RadixSort.java,104,,"      LOG.info(""- msdRadixSortTime: "" + msdRadixSortTime + "" ms"");"
240820,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/master/GlobalEngine.java,277,,"      LOG.debug(""============================================="");"
240821,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/master/TajoMaster.java,92,,"  @SuppressWarnings(""OctalInteger"")"
240822,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/master/TajoMaster.java,297,,"      LOG.info(""System dir '"" + systemPath + ""' is created"");"
240823,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/master/exec/NonForwardQueryResultSystemScanner.java,235,,"        if (""tid"".equalsIgnoreCase(column.getSimpleName())) {"
240824,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/querymaster/DefaultTaskScheduler.java,928,,"              info(LOG, ""Canceled requests: "" + responseProto.getCancellationTaskCount() + "" from "" +  addr);"
240825,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/querymaster/Stage.java,1024,,"      LOG.info(currentStage.getId() + "", Bigger Table's volume is approximately "" + mb + "" MB"");"
240826,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/util/JSPUtil.java,196,,"        } else if(""host"".equals(sortField)) {"
240827,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/util/JSPUtil.java,200,,"        } else if(""runTime"".equals(sortField)) {"
240828,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/util/JSPUtil.java,202,,"        } else if(""startTime"".equals(sortField)) {"
240829,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/util/JSPUtil.java,330,,"      sb.append(prefix).append(""<a href='"").append(url)"
240830,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/util/JSPUtil.java,331,,"          .append(""&page="").append(prevPage).append(""'>"")"
240831,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/util/JSPUtil.java,333,,"      prefix = ""&nbsp;&nbsp;"";"
240832,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/util/metrics/reporter/TajoMetricsReporter.java,100,,"      sb.append(key).append("".mean="").append(String.format(""%2.2f"","
240833,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/worker/LocalFetcher.java,103,,"    String scheme = uri.getScheme() == null ? ""http"" : uri.getScheme();"
240834,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/worker/TaskImpl.java,263,,"      int index = strUri.lastIndexOf(""&ta"");"
240835,./TargetProjects/tajo/tajo-core/src/main/java/org/apache/tajo/ws/rs/resources/QueryResource.java,69,,"  private static final String queryIdKeyName = ""queryId"";"
240836,./TargetProjects/tajo/tajo-jdbc/src/main/java/org/apache/tajo/jdbc/TajoDatabaseMetaData.java,300,,"        ""PROCEDURE_NAME"", ""NUM_INPUT_PARAMS"", ""NUM_OUTPUT_PARAMS"", ""NUM_RESULT_SETS"", ""REMARKS"","
240837,./TargetProjects/tajo/tajo-jdbc/src/main/java/org/apache/tajo/jdbc/TajoDatabaseMetaData.java,312,,"        ""PROCEDURE_CAT"", ""PROCEDURE_SCHEM"", ""PROCEDURE_NAME"", ""COLUMN_NAME"", ""COLUMN_TYPE"","
240838,./TargetProjects/tajo/tajo-jdbc/src/main/java/org/apache/tajo/jdbc/TajoDatabaseMetaData.java,313,,"        ""DATA_TYPE"", ""TYPE_NAME"", ""PRECISION"", ""LENGTH"", ""SCALE"","
240839,./TargetProjects/tajo/tajo-jdbc/src/main/java/org/apache/tajo/jdbc/TajoDatabaseMetaData.java,313,,"        ""DATA_TYPE"", ""TYPE_NAME"", ""PRECISION"", ""LENGTH"", ""SCALE"","
240840,./TargetProjects/tajo/tajo-jdbc/src/main/java/org/apache/tajo/jdbc/TajoDatabaseMetaData.java,415,,"        Arrays.asList(""TABLE_CAT"", ""TABLE_SCHEM"", ""TABLE_NAME"", ""TABLE_TYPE"", ""REMARKS""),"
240841,./TargetProjects/tajo/tajo-jdbc/src/main/java/org/apache/tajo/jdbc/TajoDatabaseMetaData.java,415,,"        Arrays.asList(""TABLE_CAT"", ""TABLE_SCHEM"", ""TABLE_NAME"", ""TABLE_TYPE"", ""REMARKS""),"
240842,./TargetProjects/tajo/tajo-jdbc/src/main/java/org/apache/tajo/jdbc/TajoDatabaseMetaData.java,415,,"        Arrays.asList(""TABLE_CAT"", ""TABLE_SCHEM"", ""TABLE_NAME"", ""TABLE_TYPE"", ""REMARKS""),"
240843,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestResultSet.java,72,,"        .add(""score"", Type.INT4)"
240844,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestResultSet.java,90,,"      String key = ""test"" + (i % deptSize);"
240845,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestTajoDatabaseMetaData.java,59,,"    assertDatabaseNotExists(""jdbc_test1"");"
240846,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestTajoDatabaseMetaData.java,66,,"      assertDatabaseNotExists(""Jdbc_Test2"");"
240847,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestTajoDatabaseMetaData.java,117,,"    assertDatabaseNotExists(""jdbc_test3"");"
240848,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestTajoDatabaseMetaData.java,131,,"      assertDatabaseNotExists(""Jdbc_Test4"");"
240849,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestTajoDatabaseMetaData.java,206,,"    assertDatabaseNotExists(""db_1"");"
240850,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestTajoDatabaseMetaData.java,212,,"      executeString(""CREATE TABLE db_1."" + tableName + "" (age int)"");"
240851,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestTajoDatabaseMetaData.java,220,,"    assertDatabaseNotExists(""db_2"");"
240852,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestTajoDatabaseMetaData.java,236,,"        Sets.newHashSet(getListFromResultSet(conn.getMetaData().getTables(""db_2"", null, ""%"", null), ""TABLE_NAME""));"
240853,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestTajoDatabaseMetaData.java,320,,"          Sets.newHashSet(getListFromResultSet(conn.getMetaData().getColumns(""db2"", null, ""tb3"", ""%""),"
240854,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestTajoDatabaseMetaData.java,320,,"          Sets.newHashSet(getListFromResultSet(conn.getMetaData().getColumns(""db2"", null, ""tb3"", ""%""),"
240855,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestTajoDatabaseMetaData.java,321,,"              ""COLUMN_NAME""));"
240856,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestTajoDatabaseMetaData.java,322,,"      assertEquals(Sets.newHashSet(""db2_tb3_col"", ""db2_tb3_COL""), columnList);"
240857,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestTajoDatabaseMetaData.java,322,,"      assertEquals(Sets.newHashSet(""db2_tb3_col"", ""db2_tb3_COL""), columnList);"
240858,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestTajoJdbc.java,98,,"        assertEquals(""l_returnflag"", rsmd.getColumnName(1));"
240859,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestTajoJdbc.java,148,,"      assertEquals(""l_orderkey"", rsmd.getColumnName(1));"
240860,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/TestTajoJdbc.java,149,,"      assertEquals(""l_quantity"", rsmd.getColumnName(2));"
240861,./TargetProjects/tajo/tajo-jdbc/src/test/java/org/apache/tajo/jdbc/util/TestQueryStringDecoder.java,66,,"    assertThat(decoder.getParameters().get(""tid"").get(0), is(""2345""));"
240862,./TargetProjects/tajo/tajo-maven-plugins/src/main/java/org/apache/tajo/maven/plugin/versioninfo/VersionInfoMojo.java,152,,"    String[] res = new String[]{""Unknown"", ""Unknown""};"
240863,./TargetProjects/tajo/tajo-plan/src/main/java/org/apache/tajo/plan/function/python/PythonScriptEngine.java,516,,"      throwException(stderr, new RuntimeException(""Failed adding input to inputQueue"", e));"
240864,./TargetProjects/tajo/tajo-plan/src/main/java/org/apache/tajo/plan/function/python/PythonScriptEngine.java,528,,"      throwException(stderr, new RuntimeException(""Problem getting output: "" + e.getMessage(), e));"
240865,./TargetProjects/tajo/tajo-plan/src/main/java/org/apache/tajo/plan/rewrite/rules/FilterPushDownRule.java,455,,"                    ""(PID="" + node.getPID() + "", Child="" + childNode.getPID() + "")"");"
240866,./TargetProjects/tajo/tajo-pullserver/src/main/java/org/apache/tajo/pullserver/PullServerUtil.java,538,,"        LOG.error(""State Dump (the requested range: """
240867,./TargetProjects/tajo/tajo-pullserver/src/main/java/org/apache/tajo/pullserver/PullServerUtil.java,539,,"            + ""["" + start + "", "" + end + "")"" + "", idx min: """
240868,./TargetProjects/tajo/tajo-pullserver/src/main/java/org/apache/tajo/pullserver/PullServerUtil.java,540,,"            + idxReader.getFirstKey() + "", idx max: """
240869,./TargetProjects/tajo/tajo-pullserver/src/main/java/org/apache/tajo/pullserver/retriever/AdvancedDataRetriever.java,74,,"    if (!params.containsKey(""qid"")) {"
240870,./TargetProjects/tajo/tajo-storage/tajo-storage-common/src/test/java/org/apache/tajo/storage/TestFrameTuple.java,45,,"        DatumFactory.createText(""hyunsik""),"
240871,./TargetProjects/tajo/tajo-storage/tajo-storage-common/src/test/java/org/apache/tajo/storage/TestLazyTuple.java,61,,"    sb.append(DatumFactory.createChar(""str"")).append('|');"
240872,./TargetProjects/tajo/tajo-storage/tajo-storage-hbase/src/test/java/org/apache/tajo/storage/hbase/TestHBaseTableSpace.java,71,,"    EvalNode evalNode1 = new BinaryEval(EvalType.GEQ, new FieldEval(rowkeyColumn), new ConstEval(new TextDatum(""020"")));"
240873,./TargetProjects/tajo/tajo-storage/tajo-storage-hbase/src/test/java/org/apache/tajo/storage/hbase/TestHBaseTableSpace.java,72,,"    EvalNode evalNode2 = new BinaryEval(EvalType.LEQ, new FieldEval(rowkeyColumn), new ConstEval(new TextDatum(""055"")));"
240874,./TargetProjects/tajo/tajo-storage/tajo-storage-hbase/src/test/java/org/apache/tajo/storage/hbase/TestHBaseTableSpace.java,101,,"    EvalNode evalNode5 = new BinaryEval(EvalType.LEQ, new FieldEval(rowkeyColumn), new ConstEval(new TextDatum(""078"")));"
240875,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/main/java/org/apache/tajo/storage/thirdparty/orc/TreeReaderFactory.java,125,,"        throw new IOException(""Unknown encoding "" + encoding + "" in column "" +"
240876,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/main/java/org/apache/tajo/storage/thirdparty/orc/TreeReaderFactory.java,125,,"        throw new IOException(""Unknown encoding "" + encoding + "" in column "" +"
240877,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/main/java/org/apache/tajo/storage/thirdparty/orc/TreeReaderFactory.java,925,,"            throw new IllegalArgumentException(""Unsupported encoding "" +"
240878,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestFileTablespace.java,72,,"    String namenodeDir = new File(testDataPath, ""name"").getAbsolutePath();"
240879,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestFileTablespace.java,87,,"        .add(""age"", Type.INT4)"
240880,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestFileTablespace.java,159,,"      splits.addAll(space.getSplits(""data"", meta, schema, false, partitions.toArray(new Path[partitions.size()])));"
240881,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestLineReader.java,65,,"        .add(""age"", Type.INT8)"
240882,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestLineReader.java,66,,"        .add(""comment"", Type.TEXT)"
240883,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestLineReader.java,67,,"        .add(""comment2"", Type.TEXT)"
240884,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestLineReader.java,83,,"      vTuple.put(2, DatumFactory.createText(""emiya muljomdao""));"
240885,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,70,,"      ""{\n"" +"
240886,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,71,,"      ""  \""type\"": \""record\"",\n"" +"
240887,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,72,,"      ""  \""namespace\"": \""org.apache.tajo\"",\n"" +"
240888,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,74,,"      ""  \""fields\"": [\n"" +"
240889,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,78,,"      ""  ]\n"" +"
240890,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,79,,"      ""}\n"";"
240891,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,202,,"          .add(""age"", Type.INT8)"
240892,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,229,,"      tablets[0] = new FileFragment(""Splitable"", tablePath, 0, randomNum);"
240893,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,258,,"        .add(""score"", Type.FLOAT4)"
240894,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,419,,"        .add(""col1"", Type.BOOLEAN)"
240895,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,420,,"        .add(""col2"", CatalogUtil.newDataTypeWithLen(Type.CHAR, 7))"
240896,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,421,,"        .add(""col3"", Type.INT2)"
240897,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,422,,"        .add(""col4"", Type.INT4)"
240898,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,423,,"        .add(""col5"", Type.INT8)"
240899,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,424,,"        .add(""col6"", Type.FLOAT4)"
240900,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,425,,"        .add(""col7"", Type.FLOAT8)"
240901,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,426,,"        .add(""col8"", Type.TEXT)"
240902,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,427,,"        .add(""col9"", Type.BLOB);"
240903,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,429,,"      schemaBld.add(""col10"", Type.DATE);"
240904,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,448,,"    QueryId queryid = new QueryId(""12345"", 5);"
240905,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,453,,"        DatumFactory.createChar(""hyunsik""),"
240906,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,479,,"    FileFragment fragment = new FileFragment(""table"", tablePath, 0, status.getLen());"
240907,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,557,,"    meta.putProperty(StorageConstants.TEXT_NULL, ""\\\\N"");"
240908,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,764,,"        DatumFactory.createChar(""jinho""),"
240909,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/TestStorages.java,771,,"        DatumFactory.createBlob(""hyunsik babo"".getBytes()),"
240910,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,66,,"        .add(new Column(""int"", Type.INT4))"
240911,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,67,,"        .add(new Column(""long"", Type.INT8))"
240912,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,68,,"        .add(new Column(""double"", Type.FLOAT8))"
240913,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,93,,"    Path tablePath = new Path(testDir, ""testFindValue_"" + dataFormat);"
240914,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,104,,"      tuple.put(4, DatumFactory.createText(""field_"" + i));"
240915,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,111,,"    FileFragment tablet = new FileFragment(""table1_1"", status.getPath(), 0, fileLen);"
240916,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,125,,"    BSTIndexWriter creater = bst.getIndexWriter(new Path(testDir, ""testFindValue_"" + dataFormat + "".idx""),"
240917,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,165,,"      assertTrue(""seek check ["" + (i) + "" ,"" + (tuple.getInt8(1)) + ""]"", (i) == (tuple.getInt8(1)));"
240918,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,174,,"      assertTrue(""[seek check "" + (i + 1) + "" ]"", (i + 1) == (tuple.getInt4(0)));"
240919,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/index/TestSingleCSVFileBSTIndex.java,61,,"        .add(new Column(""long"", Type.INT8))"
240920,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/index/TestSingleCSVFileBSTIndex.java,159,,"      assertTrue(""[seek check "" + (i + 1) + "" ]"","
240921,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/raw/TestDirectRawFile.java,291,,"    builder.putTimestamp(DatumFactory.createTimestamp(""2014-04-16 08:48:00"").asInt8() + i); // 7"
240922,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/raw/TestDirectRawFile.java,292,,"    builder.putDate(DatumFactory.createDate(""2014-04-16"").asInt4() + i); // 8"
240923,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/raw/TestDirectRawFile.java,293,,"    builder.putTime(DatumFactory.createTime(""08:48:00"").asInt8() + i); // 9"
240924,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/raw/TestDirectRawFile.java,294,,"    builder.putInterval(DatumFactory.createInterval((i + 1) + "" hours"")); // 10"
240925,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/regex/TestRegexSerDe.java,80,,"        DatumFactory.createText(""[10/Oct/2000:13:55:36 -0700]""),"
240926,./TargetProjects/tajo/tajo-storage/tajo-storage-hdfs/src/test/java/org/apache/tajo/storage/regex/TestRegexSerDe.java,82,,"        DatumFactory.createText(""200""),"
240927,./TargetProjects/tajo/tajo-storage/tajo-storage-pgsql/src/test/java/org/apache/tajo/storage/pgsql/TestPgSQLJdbcTableSpace.java,50,,"    assertTrue((TablespaceManager.getByName(""pgsql_cluster"")) instanceof PgSQLTablespace);"
240928,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/commons/GeneratorAdapter.java,452,,"                        ""TYPE"", CLDESC);"
240929,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/optimizer/JarOptimizer.java,157,,"            if (owner.startsWith(""java/"")) {"
240930,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/optimizer/MethodOptimizer.java,116,,"                | ACC_SYNTHETIC, fieldName, ""Ljava/lang/Class;"");"
240931,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/tree/analysis/SimpleVerifier.java,173,,"                && (""Lnull;"".equals(t.getDescriptor()) || t.getSort() == Type.ARRAY);"
240932,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/util/ASMifier.java,228,,"        buf.append("");\n\n"");"
240933,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/util/ASMifier.java,288,,"        buf.append(""{\n"");"
240934,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/util/ASMifier.java,299,,"        buf.append("");\n"");"
240935,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/util/ASMifier.java,303,,"        text.add(""}\n"");"
240936,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/util/ASMifier.java,838,,"                buf.append("" + "");"
240937,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/util/ASMifier.java,988,,"            buf.append(""\"")"");"
240938,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/util/Textifier.java,194,,"        if (args[i].endsWith("".class"") || args[i].indexOf('\\') > -1"
240939,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/util/Textifier.java,219,,"        buf.append(""// access flags 0x"")"
240940,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/util/Textifier.java,227,,"            buf.append(""// declaration: "").append(name)"
240941,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/util/TraceSignatureVisitor.java,97,,"        separator = "" extends "";"
240942,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/ASMContentHandler.java,678,,"            vals.put(""access"", attrs.getValue(""access""));"
240943,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/ASMContentHandler.java,679,,"            vals.put(""name"", attrs.getValue(""name""));"
240944,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/ASMContentHandler.java,682,,"            vals.put(""signature"", attrs.getValue(""signature""));"
240945,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/ASMContentHandler.java,740,,"            String desc = attrs.getValue(""desc"");"
240946,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/ASMContentHandler.java,772,,"            Object value = getValue(desc, attrs.getValue(""value""));"
240947,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/ASMContentHandler.java,848,,"            vals.put(""dflt"", attrs.getValue(""dflt""));"
240948,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/ASMContentHandler.java,849,,"            vals.put(""labels"", new ArrayList<String>());"
240949,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/Processor.java,200,,"            inDocHandler.startElement("""", ""classes"", ""classes"","
240950,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/SAXAnnotationAdapter.java,67,,"            att.addAttribute("""", ""name"", ""name"", """", name);"
240951,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/SAXAnnotationAdapter.java,78,,"            att.addAttribute("""", ""desc"", ""desc"", """", desc);"
240952,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/SAXClassAdapter.java,110,,"            att.addAttribute("""", ""name"", ""name"", """", name);"
240953,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/SAXClassAdapter.java,113,,"            att.addAttribute("""", ""desc"", ""desc"", """", desc);"
240954,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/SAXClassAdapter.java,134,,"        att.addAttribute("""", ""access"", ""access"", """", sb.toString());"
240955,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/SAXClassAdapter.java,139,,"            att.addAttribute("""", ""signature"", ""signature"", """","
240956,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/SAXCodeAdapter.java,90,,"                attrs.addAttribute("""", ""type"", ""type"", """", ""NEW"");"
240957,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/SAXCodeAdapter.java,94,,"            sa.addStart(""frame"", attrs);"
240958,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/SAXCodeAdapter.java,134,,"                attrs.addAttribute("""", ""label"", ""label"", """","
240959,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/SAXCodeAdapter.java,156,,"        attrs.addAttribute("""", ""var"", ""var"", """", Integer.toString(var));"
240960,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/SAXCodeAdapter.java,163,,"        attrs.addAttribute("""", ""desc"", ""desc"", """", type);"
240961,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/SAXCodeAdapter.java,171,,"        attrs.addAttribute("""", ""owner"", ""owner"", """", owner);"
240962,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/SAXCodeAdapter.java,172,,"        attrs.addAttribute("""", ""name"", ""name"", """", name);"
240963,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/SAXCodeAdapter.java,244,,"        attrs.addAttribute("""", ""dflt"", ""dflt"", """", getLabel(dflt));"
240964,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/SAXCodeAdapter.java,283,,"        attrs.addAttribute("""", ""start"", ""start"", """", getLabel(start));"
240965,./TargetProjects/tajo/tajo-thirdparty/asm/src/main/java/org/apache/tajo/org/objectweb/asm/xml/SAXCodeAdapter.java,284,,"        attrs.addAttribute("""", ""end"", ""end"", """", getLabel(end));"
240966,./TargetProjects/tapestry-5/beanmodel/src/main/java/org/apache/tapestry5/beanmodel/BeanModelSourceBuilder.java,191,,"            throw new RuntimeException(""Not implemented"");"
240967,./TargetProjects/tapestry-5/genericsresolver-guava/src/test/java/org/apache/tapestry5/genericsresolverguava/internal/AbstractBeanModelSourceImplTest.java,67,,"     assertEquals(model.getPropertyNames(), Arrays.asList(""firstName"", ""lastName"", ""age""));"
240968,./TargetProjects/tapestry-5/genericsresolver-guava/src/test/java/org/apache/tapestry5/genericsresolverguava/internal/AbstractBeanModelSourceImplTest.java,67,,"     assertEquals(model.getPropertyNames(), Arrays.asList(""firstName"", ""lastName"", ""age""));"
240969,./TargetProjects/tapestry-5/genericsresolver-guava/src/test/java/org/apache/tapestry5/genericsresolverguava/internal/AbstractBeanModelSourceImplTest.java,67,,"     assertEquals(model.getPropertyNames(), Arrays.asList(""firstName"", ""lastName"", ""age""));"
240970,./TargetProjects/tapestry-5/genericsresolver-guava/src/test/java/org/apache/tapestry5/genericsresolverguava/internal/AbstractBeanModelSourceImplTest.java,120,,"     model.include(""lastname"", ""firstname"");"
240971,./TargetProjects/tapestry-5/genericsresolver-guava/src/test/java/org/apache/tapestry5/genericsresolverguava/internal/AbstractBeanModelSourceImplTest.java,150,,"     PropertyModel property = model.add(RelativePosition.BEFORE, ""lastname"", ""middleInitial"", conduit);"
240972,./TargetProjects/tapestry-5/genericsresolver-guava/src/test/java/org/apache/tapestry5/genericsresolverguava/internal/AbstractBeanModelSourceImplTest.java,426,,"     BeanModel model = source.create(SimpleBean.class, true, messages).get(""age"").label(""Decrepitude"").model();"
240973,./TargetProjects/tapestry-5/plastic/src/external/java/org/apache/tapestry5/internal/plastic/asm/commons/GeneratorAdapter.java,401,,"          mv.visitFieldInsn(Opcodes.GETSTATIC, ""java/lang/Boolean"", ""TYPE"", CLASS_DESCRIPTOR);"
240974,./TargetProjects/tapestry-5/plastic/src/external/java/org/apache/tapestry5/internal/plastic/asm/util/ASMifier.java,275,,"    text.add(""}\n"");"
240975,./TargetProjects/tapestry-5/plastic/src/external/java/org/apache/tapestry5/internal/plastic/asm/util/ASMifier.java,362,,"    stringBuilder.append(""{\n"");"
240976,./TargetProjects/tapestry-5/plastic/src/external/java/org/apache/tapestry5/internal/plastic/asm/util/ASMifier.java,369,,"    stringBuilder.append("");\n"");"
240977,./TargetProjects/tapestry-5/plastic/src/external/java/org/apache/tapestry5/internal/plastic/asm/util/ASMifier.java,1288,,"        stringBuilder.append("" | "");"
240978,./TargetProjects/tapestry-5/plastic/src/external/java/org/apache/tapestry5/internal/plastic/asm/util/CheckMethodAdapter.java,484,,"      checkUnqualifiedName(version, name, ""name"");"
240979,./TargetProjects/tapestry-5/tapestry-beanvalidator/src/main/java/org/apache/tapestry5/beanvalidator/modules/BeanValidatorModule.java,97,,"        configuration.add(new BaseCCD(Max.class, ""value"")"
240980,./TargetProjects/tapestry-5/tapestry-beanvalidator/src/main/java/org/apache/tapestry5/beanvalidator/modules/BeanValidatorModule.java,102,,"                javaScriptSupport.require(""t5/core/validation"");"
240981,./TargetProjects/tapestry-5/tapestry-beanvalidator/src/test/java/org/apache/tapestry5/beanvalidator/integration/TapestryBeanValidationIntegrationTests.java,37,,"        assertTextPresent(""Login Name may not be null"");"
240982,./TargetProjects/tapestry-5/tapestry-beanvalidator/src/test/java/org/apache/tapestry5/beanvalidator/integration/TapestryBeanValidationIntegrationTests.java,38,,"        assertTextPresent(""Secret Password may not be null"");"
240983,./TargetProjects/tapestry-5/tapestry-beanvalidator/src/test/java/org/apache/tapestry5/beanvalidator/integration/TapestryBeanValidationIntegrationTests.java,43,,"        assertTextPresent(""Accepted Terms And Conditions must be true"");"
240984,./TargetProjects/tapestry-5/tapestry-beanvalidator/src/test/java/org/apache/tapestry5/beanvalidator/integration/TapestryBeanValidationIntegrationTests.java,44,,"        assertTextPresent(""Subscribed must be false"");"
240985,./TargetProjects/tapestry-5/tapestry-beanvalidator/src/test/java/org/apache/tapestry5/beanvalidator/integration/TapestryBeanValidationIntegrationTests.java,47,,"        type(""secretPassword"", ""igor"");"
240986,./TargetProjects/tapestry-5/tapestry-beanvalidator/src/test/java/org/apache/tapestry5/beanvalidator/integration/TapestryBeanValidationIntegrationTests.java,70,,"        type(""loginName"", ""igor"");"
240987,./TargetProjects/tapestry-5/tapestry-beanvalidator/src/test/java/org/apache/tapestry5/beanvalidator/integration/TapestryBeanValidationIntegrationTests.java,147,,"        type(""minValue"", ""3"");"
240988,./TargetProjects/tapestry-5/tapestry-beanvalidator/src/test/java/org/apache/tapestry5/beanvalidator/integration/TapestryBeanValidationIntegrationTests.java,152,,"        assertTextPresent(""Min Value must be greater than or equal to 6"");"
240989,./TargetProjects/tapestry-5/tapestry-cdi/src/main/java/org/apache/tapestry5/cdi/CDIInjectionProvider.java,77,,"			logger.debug(""Field ""+field.getName()+"" of type ""+field.getTypeName()+"" is managed by Tapestry"");"
240990,./TargetProjects/tapestry-5/tapestry-cdi/src/test/java/org/apache/tapestry5/cdi/test/InjectTest.java,342,,"                        ""services/"" + Extension.class.getName());"
240991,./TargetProjects/tapestry-5/tapestry-core/src/main/java/org/apache/tapestry5/corelib/base/AbstractTextField.java,103,,"        return defaultProvider.defaultTranslatorBinding(""value"", resources);"
240992,./TargetProjects/tapestry-5/tapestry-core/src/main/java/org/apache/tapestry5/corelib/components/DateField.java,170,,"        return defaultProvider.defaultValidatorBinding(""value"", resources);"
240993,./TargetProjects/tapestry-5/tapestry-core/src/main/java/org/apache/tapestry5/corelib/components/DateField.java,244,,"            writer.attributes(""class"", ""input-group"");"
240994,./TargetProjects/tapestry-5/tapestry-core/src/main/java/org/apache/tapestry5/corelib/components/Html5DateField.java,74,,"        return defaultProvider.defaultValidatorBinding(""value"", resources);"
240995,./TargetProjects/tapestry-5/tapestry-core/src/main/java/org/apache/tapestry5/corelib/components/Select.java,222,,"        putPropertyNameIntoBeanValidationContext(""value"");"
240996,./TargetProjects/tapestry-5/tapestry-core/src/main/java/org/apache/tapestry5/corelib/components/Tree.java,65,,"    @Parameter(name = ""class"", defaultPrefix = BindingConstants.LITERAL)"
240997,./TargetProjects/tapestry-5/tapestry-core/src/main/java/org/apache/tapestry5/corelib/pages/PropertyEditBlocks.java,56,,"            parameters = {""value=context.propertyValue"", ""label=prop:context.label"","
240998,./TargetProjects/tapestry-5/tapestry-core/src/main/java/org/apache/tapestry5/corelib/pages/PropertyEditBlocks.java,56,,"            parameters = {""value=context.propertyValue"", ""label=prop:context.label"","
240999,./TargetProjects/tapestry-5/tapestry-core/src/main/java/org/apache/tapestry5/corelib/pages/PropertyEditBlocks.java,58,,"                    ""clientId=prop:context.propertyId"", ""annotationProvider=context"","
