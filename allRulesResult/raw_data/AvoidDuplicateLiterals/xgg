162000,./TargetProjects/maven-doxia-sitetools/doxia-integration-tools/src/test/java/org/apache/maven/doxia/tools/SiteToolTest.java,184,,"        assertEquals( "".."" + File.separator + ""project-module-1"" + File.separator + ""src"" + File.separator + ""site"","
162001,./TargetProjects/maven-doxia-sitetools/doxia-integration-tools/src/test/java/org/apache/maven/doxia/tools/SiteToolTest.java,204,,"        assertEquals( tool.getSiteDescriptor( new File( project.getBasedir(), ""src/site"" ), null ).toString(),"
162002,./TargetProjects/maven-doxia-sitetools/doxia-site-renderer/src/test/java/org/apache/maven/doxia/siterenderer/AptVerifier.java,70,,"        assertEquals( ""Links"", a.getAttribute( ""name"" ) );"
162003,./TargetProjects/maven-doxia-sitetools/doxia-site-renderer/src/test/java/org/apache/maven/doxia/siterenderer/AptVerifier.java,82,,"        assertEquals( ""#Anchor"", a.getAttribute( ""href"" ) );"
162004,./TargetProjects/maven-doxia-sitetools/doxia-site-renderer/src/test/java/org/apache/maven/doxia/siterenderer/AttributesVerifier.java,80,,"        assertEquals( ""section"", a.getAttribute( ""name"" ) );"
162005,./TargetProjects/maven-doxia-sitetools/doxia-site-renderer/src/test/java/org/apache/maven/doxia/siterenderer/AttributesVerifier.java,86,,"        assertEquals( ""CLASS"", p.getAttribute( ""class"" ) );"
162006,./TargetProjects/maven-doxia-sitetools/doxia-site-renderer/src/test/java/org/apache/maven/doxia/siterenderer/AttributesVerifier.java,166,,"        assertEquals( ""#Anchor"", a.getAttribute( ""href"" ) );"
162007,./TargetProjects/maven-doxia-sitetools/doxia-site-renderer/src/test/java/org/apache/maven/doxia/siterenderer/DefaultSiteRendererTest.java,132,,"            os.write( append.getBytes( ""ISO-8859-1"" ) );"
162008,./TargetProjects/maven-doxia-sitetools/doxia-site-renderer/src/test/java/org/apache/maven/doxia/siterenderer/EntitiesVerifier.java,51,,"        HtmlMeta author = (HtmlMeta) page.getElementsByName( ""author"" ).get( 0 );"
162009,./TargetProjects/maven-doxia-sitetools/doxia-site-renderer/src/test/java/org/apache/maven/doxia/siterenderer/FaqVerifier.java,69,,"        assertEquals( a.getAttribute( ""name"" ), ""Oft_Asked_Questions"" );"
162010,./TargetProjects/maven-doxia-sitetools/doxia-site-renderer/src/test/java/org/apache/maven/doxia/siterenderer/FaqVerifier.java,86,,"        assertEquals( ""#stupid-question"", a.getAttribute( ""href"" ) );"
162011,./TargetProjects/maven-doxia-sitetools/doxia-site-renderer/src/test/java/org/apache/maven/doxia/siterenderer/HeadVerifier.java,71,,"        assertEquals( ""Unexpected meta entry found generated resource "" + file, ""generator"", meta.getAttribute( ""name"" ) );"
162012,./TargetProjects/maven-doxia-sitetools/doxia-site-renderer/src/test/java/org/apache/maven/doxia/siterenderer/HeadVerifier.java,72,,"        String generator = meta.getAttribute(""content"");"
162013,./TargetProjects/maven-doxia-sitetools/doxia-site-renderer/src/test/java/org/apache/maven/doxia/siterenderer/NestedItemsVerifier.java,73,,"        assertEquals( ""List_Section"", a.getAttribute( ""name"" ) );"
162014,./TargetProjects/maven-doxia-sitetools/doxia-site-renderer/src/test/java/org/apache/maven/doxia/siterenderer/RenderingContextTest.java,43,,"        File baseDir = new File( getBasedir() + File.separatorChar + ""test"" + File.separatorChar + ""resources"" );"
162015,./TargetProjects/maven-doxia-sitetools/doxia-site-renderer/src/test/java/org/apache/maven/doxia/siterenderer/SkinResourceLoaderTest.java,44,,"        assertEquals( ""Hello "" + EOL + "" world"", normalizeNewline( ""Hello "" + EOL_MACOS9 + "" world"" ) );"
162016,./TargetProjects/maven-doxia-sitetools/doxia-site-renderer/src/test/java/org/apache/maven/doxia/siterenderer/SkinResourceLoaderTest.java,44,,"        assertEquals( ""Hello "" + EOL + "" world"", normalizeNewline( ""Hello "" + EOL_MACOS9 + "" world"" ) );"
162017,./TargetProjects/maven-doxia-sitetools/doxia-site-renderer/src/test/java/org/apache/maven/doxia/siterenderer/SkinResourceLoaderTest.java,48,,"        assertEquals( ""Hello world"" + EOL, normalizeNewline( ""Hello world"" + EOL_MACOS9 ) );"
162018,./TargetProjects/maven-doxia-tools/doxia-book-renderer/src/main/java/org/apache/maven/doxia/book/services/renderer/xdoc/ChapterXdocBookSink.java,117,,"                write( ""</a>"" );"
162019,./TargetProjects/maven-doxia-tools/doxia-book-renderer/src/main/java/org/apache/maven/doxia/book/services/renderer/xdoc/SectionXdocBookSink.java,113,,"            write( getString( ""previous"" ) + "": <a href=\"""" + prevEntry.getId() + "".html\"">"" );"
162020,./TargetProjects/maven-doxia-tools/doxia-book-renderer/src/main/java/org/apache/maven/doxia/book/services/renderer/xdoc/SectionXdocBookSink.java,113,,"            write( getString( ""previous"" ) + "": <a href=\"""" + prevEntry.getId() + "".html\"">"" );"
162021,./TargetProjects/maven-doxia-tools/doxia-book-renderer/src/main/java/org/apache/maven/doxia/book/services/renderer/xdoc/SectionXdocBookSink.java,115,,"            write( ""</a>"" );"
162022,./TargetProjects/maven-doxia-tools/doxia-book-renderer/src/test/java/org/apache/maven/doxia/book/services/renderer/docbook/DocBookBookSinkTest.java,332,,"        return ""<section><title>"" + title + ""</title></section>"";"
162023,./TargetProjects/maven-doxia-tools/doxia-book-renderer/src/test/java/org/apache/maven/doxia/book/services/renderer/docbook/DocBookBookSinkTest.java,332,,"        return ""<section><title>"" + title + ""</title></section>"";"
162024,./TargetProjects/maven-doxia-tools/doxia-converter/src/main/java/org/apache/maven/doxia/DefaultConverter.java,207,,"                    throw new ConverterException( ""IOException: "" + e.getMessage(), e );"
162025,./TargetProjects/maven-doxia-tools/doxia-converter/src/main/java/org/apache/maven/doxia/DefaultConverter.java,258,,"                throw new ConverterException( ""ComponentLookupException: "" + e.getMessage(), e );"
162026,./TargetProjects/maven-doxia-tools/doxia-converter/src/test/java/org/apache/maven/doxia/ConverterTest.java,101,,"        String from = ""xhtml"";"
162027,./TargetProjects/maven-doxia-tools/doxia-converter/src/test/java/org/apache/maven/doxia/ConverterTest.java,103,,"        String to = ""apt"";"
162028,./TargetProjects/maven-doxia-tools/doxia-converter/src/test/java/org/apache/maven/doxia/ConverterTest.java,193,,"        String from = ""confluence"";"
162029,./TargetProjects/maven-doxia-tools/doxia-converter/src/test/java/org/apache/maven/doxia/ConverterTest.java,451,,"            OutputStreamWrapper output = OutputStreamWrapper.valueOf( outputStream, to, ""UTF-8"", converter.getOutputFormats() );"
162030,./TargetProjects/maven-doxia-tools/doxia-converter/src/test/java/org/apache/maven/doxia/ConverterTest.java,641,,"        assertEquals( autoDetectEncoding( ""apt/test.apt"" ), ""ISO-8859-1"" );"
162031,./TargetProjects/maven-doxia-tools/doxia-linkcheck/src/main/java/org/apache/maven/doxia/linkcheck/validation/OnlineHTTPLinkValidator.java,174,,"                        LOG.warn( ""Cannot check link ["" + link + ""] in page ["" + lvi.getSource()"
162032,./TargetProjects/maven-doxia-tools/doxia-linkcheck/src/test/java/org/apache/maven/doxia/linkcheck/validation/AnchorsTest.java,27,,"        assertAnchorMatches( ""hello  <h1 id='foo'>Foo</h1> there"", ""foo"", true );"
162033,./TargetProjects/maven-doxia-tools/doxia-linkcheck/src/test/java/org/apache/maven/doxia/linkcheck/validation/LinkValidatorManagerTest.java,34,,"        String link = ""http://maven.apache.org"";"
162034,./TargetProjects/maven-ear-plugin/src/main/java/org/apache/maven/plugins/ear/ApplicationXmlWriter.java,218,,"        writer.addAttribute( ""xmlns"", ""http://java.sun.com/xml/ns/j2ee"" );"
162035,./TargetProjects/maven-ear-plugin/src/main/java/org/apache/maven/plugins/ear/ApplicationXmlWriter.java,219,,"        writer.addAttribute( ""xmlns:xsi"", ""http://www.w3.org/2001/XMLSchema-instance"" );"
162036,./TargetProjects/maven-ear-plugin/src/main/java/org/apache/maven/plugins/ear/ApplicationXmlWriter.java,219,,"        writer.addAttribute( ""xmlns:xsi"", ""http://www.w3.org/2001/XMLSchema-instance"" );"
162037,./TargetProjects/maven-ear-plugin/src/main/java/org/apache/maven/plugins/ear/ApplicationXmlWriter.java,220,,"        writer.addAttribute( ""xsi:schemaLocation"","
162038,./TargetProjects/maven-ear-plugin/src/main/java/org/apache/maven/plugins/ear/ApplicationXmlWriter.java,222,,"        writer.addAttribute( ""version"", ""1.4"" );"
162039,./TargetProjects/maven-ear-plugin/src/main/java/org/apache/maven/plugins/ear/EarMojo.java,122,,"    @Parameter( defaultValue = ""false"" )"
162040,./TargetProjects/maven-ear-plugin/src/main/java/org/apache/maven/plugins/ear/JbossAppXmlWriter.java,38,,"    public static final String DOCTYPE_3_2 = ""jboss-app PUBLIC\n"" + ""\t\""-//JBoss//DTD J2EE Application 1.3//EN\""\n"""
162041,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/EarModuleTest.java,38,,"        assertEquals( ""APP-INF/lib/"", AbstractEarModule.cleanArchivePath( ""APP-INF/lib"" ) );"
162042,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/AbstractEarPluginIT.java,312,,"            assertTrue( ""Artifact ["" + artifactName + ""] should exist in EAR"", module.exists() );"
162043,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/AbstractEarPluginIT.java,344,,"                            ""Entry ["" + includedEntry + ""] should exist in artifact ["" + artifactName + ""] of EAR"","
162044,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/AbstractEarPluginIT.java,344,,"                            ""Entry ["" + includedEntry + ""] should exist in artifact ["" + artifactName + ""] of EAR"","
162045,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,45,,"        doTestProject( ""project-001"", new String[] { ""eartest-ejb-sample-one-1.0.jar"" } );"
162046,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,74,,"        doTestProject( ""project-004"", new String[] { ""eartest-ejb-sample-one-1.0.jar"", ""eartest-jar-sample-one-1.0.jar"","
162047,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,94,,"                       new String[] { ""eartest-ejb-sample-one-1.0.jar"", ""eartest-jar-sample-two-1.0.jar"" } );"
162048,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,103,,"        doTestProject( ""project-007"", new String[] { ""eartest-ejb-sample-one-1.0-classified.jar"" } );"
162049,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,148,,"        doTestProject( ""project-012"", new String[] { ""README.txt"", ""LICENSE.txt"", ""eartest-ejb-sample-one-1.0.jar"" } );"
162050,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,229,,"        doTestProject( ""project-019"", new String[] { ""eartest-ejb-sample-one-1.0.jar"", ""eartest-sar-sample-one-1.0.sar"","
162051,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,250,,"                       new String[] { ""eartest-ejb-sample-one-1.0.jar"", ""eartest-ejb-sample-two-1.0.jar"","
162052,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,348,,"                       new String[] { ""eartest-ejb-sample-one-1.0.jar"", ""eartest-ejb-sample-two-1.0-client.jar"" } );"
162053,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,493,,"        doTestProject( ""project-044"", new String[] { ""eartest-ejb-sample-one-1.0.jar"", ""myLibs/eartest-jar-sample-one-1.0.jar"" } );"
162054,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,913,,"        final String jarSampleTwoLibrary = ""lib/eartest-jar-sample-two-1.0.jar"";"
162055,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,922,,"        doTestProject( ""project-088"", ""ear"", expectedArtifacts, artifactsDirectory,"
162056,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,939,,"        final String warModule = ""eartest-war-sample-three-1.0.war"";"
162057,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,940,,"        final String ejbModule = ""eartest-ejb-sample-three-1.0.jar"";"
162058,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,995,,"            new String[][] { { ""jar-sample-two-1.0.jar"" }, { jarSampleThreeLibrary, jarSampleTwoLibrary } },"
162059,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,1018,,"        final String jarSampleOneLibrary = ""jar-sample-one-1.0.jar"";"
162060,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,1020,,"        final String jarSampleThreeLibrary = ""jar-sample-three-with-deps-1.0.jar"";"
162061,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,1025,,"        final String sarModuleTwo = ""eartest-sar-sample-two-1.0.sar"";"
162062,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,1028,,"        final String harModule = ""eartest-har-sample-two-1.0.har"";"
162063,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,1032,,"        final String warModuleLibDir = ""WEB-INF/lib/"";"
162064,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,1035,,"        final String sarModuleFourLibDir = ""lib/"";"
162065,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/it/EarMojoIT.java,1087,,"        final String jarSampleTwoEarLibrary = ""lib/eartest-"" + jarSampleTwoLibrary;"
162066,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/stub/ArtifactHandlerTestStub.java,45,,"        throw new UnsupportedOperationException( ""not implemented ; fake artifact stub"" );"
162067,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/util/ArtifactRepositoryTest.java,48,,"        assertNull( repo.getUniqueArtifact( ""ear"", ""ar"", ""jar"" ) );"
162068,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/util/ArtifactRepositoryTest.java,57,,"            new ArtifactRepository( createArtifacts( new String[] { ""myartifact"" } ), MAIN_ARTIFACT_ID,"
162069,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/util/ArtifactRepositoryTest.java,80,,"                                                     new String[] { ""class1"", ""class2"", ""class3"" } ),"
162070,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/util/ArtifactRepositoryTest.java,80,,"                                                     new String[] { ""class1"", ""class2"", ""class3"" } ),"
162071,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/util/ArtifactTypeMappingServiceTest.java,51,,"        assertFalse( service.isMappedToType( ""rar"", ""MyKoolCustomType"" ) );"
162072,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/util/ArtifactTypeMappingServiceTest.java,91,,"            XmlPlexusConfiguration rootConfig = new XmlPlexusConfiguration( ""dummy"" );"
162073,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/util/ArtifactTypeMappingServiceTest.java,94,,"            childConfig.setAttribute( ""type"", ""generic"" );"
162074,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/util/ArtifactTypeMappingServiceTest.java,94,,"            childConfig.setAttribute( ""type"", ""generic"" );"
162075,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/util/ArtifactTypeMappingServiceTest.java,95,,"            childConfig.setAttribute( ""mapping"", ""rar"" );"
162076,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/util/ArtifactTypeMappingServiceTest.java,105,,"            fail( ""Should have failed"" );"
162077,./TargetProjects/maven-ear-plugin/src/test/java/org/apache/maven/plugins/ear/util/ArtifactTypeMappingServiceTest.java,114,,"            fail( ""Unexpected "" + e.getMessage() );"
162078,./TargetProjects/maven-ejb-plugin/src/test/java/org/apache/maven/plugins/ejb/EjbMojoTest.java,70,,"        setVariableValueToObject( mojo, ""generateClient"", Boolean.FALSE );"
162079,./TargetProjects/maven-ejb-plugin/src/test/java/org/apache/maven/plugins/ejb/EjbMojoTest.java,71,,"        setVariableValueToObject( mojo, ""ejbVersion"", ""2.1"" );"
162080,./TargetProjects/maven-ejb-plugin/src/test/java/org/apache/maven/plugins/ejb/EjbMojoTest.java,71,,"        setVariableValueToObject( mojo, ""ejbVersion"", ""2.1"" );"
162081,./TargetProjects/maven-ejb-plugin/src/test/java/org/apache/maven/plugins/ejb/EjbMojoTest.java,93,,"        setVariableValueToObject( mojo, ""classifier"", ""classified"" );"
162082,./TargetProjects/maven-ejb-plugin/src/test/java/org/apache/maven/plugins/ejb/EjbMojoTest.java,157,,"        project.addFile( ""META-INF/ejb-jar.xml"", MavenProjectResourcesStub.OUTPUT_FILE );"
162083,./TargetProjects/maven-ejb-plugin/src/test/java/org/apache/maven/plugins/ejb/EjbMojoTest.java,158,,"        project.addFile( ""org/sample/ejb/AppBean.class"", MavenProjectResourcesStub.OUTPUT_FILE );"
162084,./TargetProjects/maven-ejb-plugin/src/test/java/org/apache/maven/plugins/ejb/EjbMojoTest.java,159,,"        project.addFile( ""org/sample/ejb/AppCMP.class"", MavenProjectResourcesStub.OUTPUT_FILE );"
162085,./TargetProjects/maven-ejb-plugin/src/test/java/org/apache/maven/plugins/ejb/EjbMojoTest.java,160,,"        project.addFile( ""org/sample/ejb/AppSession.class"", MavenProjectResourcesStub.OUTPUT_FILE );"
162086,./TargetProjects/maven-ejb-plugin/src/test/java/org/apache/maven/plugins/ejb/EjbMojoTest.java,163,,"        project.addFile( ""pom.xml"", MavenProjectResourcesStub.ROOT_FILE );"
162087,./TargetProjects/maven-ejb-plugin/src/test/java/org/apache/maven/plugins/ejb/EjbMojoTest.java,175,,"                          new String[] { ""META-INF/MANIFEST.MF"", ""META-INF/ejb-jar.xml"","
162088,./TargetProjects/maven-ejb-plugin/src/test/java/org/apache/maven/plugins/ejb/EjbMojoTest.java,176,,"                              ""META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.xml"","
162089,./TargetProjects/maven-ejb-plugin/src/test/java/org/apache/maven/plugins/ejb/EjbMojoTest.java,177,,"                              ""META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.properties"","
162090,./TargetProjects/maven-ejb-plugin/src/test/java/org/apache/maven/plugins/ejb/EjbMojoTest.java,239,,"        project.addFile( ""org/sample/ejb/AppInclude.class"", MavenProjectResourcesStub.OUTPUT_FILE );"
162091,./TargetProjects/maven-ejb-plugin/src/test/java/org/apache/maven/plugins/ejb/EjbMojoTest.java,240,,"        project.addFile( ""org/sample/ejb/AppExclude.class"", MavenProjectResourcesStub.OUTPUT_FILE );"
162092,./TargetProjects/maven-ejb-plugin/src/test/java/org/apache/maven/plugins/ejb/IncludesExcludesTest.java,66,,"                                                    Arrays.asList( ""**/package.html"" ) );"
162093,./TargetProjects/maven-enforcer/enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/ReactorModuleConvergence.java,221,,"            logger.debug( ""Project: "" + mavenProject.getId() );"
162094,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/ReactorModuleConvergenceTest.java,118,,"        when( wrongParentVerison.getGroupId() ).thenReturn( ""org.apache.enforcer"" );"
162095,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/ReactorModuleConvergenceTest.java,174,,"        when( wrongParentVerison.getVersion() ).thenReturn( ""1.0-SNAPSHOT"" );"
162096,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/RequireActiveProfileTest.java,74,,"            Collections.<String, List<String>>singletonMap( ""pom"", Arrays.asList( ""profile-2"" ) );"
162097,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/RequireActiveProfileTest.java,74,,"            Collections.<String, List<String>>singletonMap( ""pom"", Arrays.asList( ""profile-2"" ) );"
162098,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/RequirePrerequisiteTest.java,48,,"        when( project.getPackaging() ).thenReturn( ""maven-plugin"" );"
162099,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestAbstractVersionEnforcer.java,52,,"        ArtifactVersion version = new DefaultArtifactVersion( ""2.0.5"" );"
162100,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestAbstractVersionEnforcer.java,136,,"            rule.enforceVersion( log, ""test"", ""[2.0.5,)"", version );"
162101,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestBannedRepositories.java,64,,"        ArtifactRepository repo1 = new MavenArtifactRepository( ""repo1"", ""http://repo1/"", null, null, null );"
162102,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestBannedRepositories.java,64,,"        ArtifactRepository repo1 = new MavenArtifactRepository( ""repo1"", ""http://repo1/"", null, null, null );"
162103,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestEvaluateBeanshell.java,63,,"        rule.setMessage( ""We have a variable : ${env}"" );"
162104,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestEvaluateBeanshell.java,82,,"            fail( ""Expected an exception."" );"
162105,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestEvaluateBeanshell.java,163,,"                multiProject.setProperty(""property1"", ""prop"" + threadNumber);"
162106,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFileChecksum.java,53,,"        FileUtils.fileWrite( f, ""message"" );"
162107,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFileChecksum.java,56,,"        rule.setChecksum( ""78e731027d8fd50ed642340b7c9a63b3"" );"
162108,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFileChecksum.java,57,,"        rule.setType( ""md5"" );"
162109,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFilesSize.java,72,,"            fail( ""Should get exception"" );"
162110,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireJavaVersion.java,46,,"        assertThat( RequireJavaVersion.normalizeJDKVersion( ""1.5.0_11"" ) ).isEqualTo( ""1.5.0-11"" );"
162111,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireNoRepositories.java,201,,"        addRepository( baseProject, createRepository( ""repo"", ""http://example.com/repo"" ) );"
162112,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireNoRepositories.java,201,,"        addRepository( baseProject, createRepository( ""repo"", ""http://example.com/repo"" ) );"
162113,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequirePluginVersions.java,56,,"        source.setArtifactId( ""foo"" );"
162114,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequirePluginVersions.java,57,,"        source.setGroupId( ""group"" );"
162115,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequirePluginVersions.java,66,,"        plugins.add( EnforcerTestUtils.newPlugin( ""group"", ""a-artifact"", ""1.0"" ) );"
162116,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequirePluginVersions.java,66,,"        plugins.add( EnforcerTestUtils.newPlugin( ""group"", ""a-artifact"", ""1.0"" ) );"
162117,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequirePluginVersions.java,69,,"        plugins.add( EnforcerTestUtils.newPlugin( ""group"", ""b-artifact"", ""1.0"" ) );"
162118,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequirePluginVersions.java,71,,"        plugins.add( EnforcerTestUtils.newPlugin( ""group"", ""c-artifact"", ""LATEST"" ) );"
162119,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequirePluginVersions.java,73,,"        plugins.add( EnforcerTestUtils.newPlugin( ""group"", ""d-artifact"", ""RELEASE"" ) );"
162120,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequirePluginVersions.java,75,,"        plugins.add( EnforcerTestUtils.newPlugin( ""group"", ""e-artifact"", ""1.0"" ) );"
162121,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequirePluginVersions.java,77,,"        plugins.add( EnforcerTestUtils.newPlugin( ""group"", ""f-artifact"", ""1.0"" ) );"
162122,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequirePluginVersions.java,258,,"        plugins.add( EnforcerTestUtils.newPlugin( ""group"", ""foo2"", """" ) );"
162123,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequirePluginVersions.java,261,,"        additional.add( ""group:a-artifact"" );"
162124,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequirePluginVersions.java,345,,"        plugins.add( ""group:foo"" );"
162125,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequirePluginVersions.java,346,,"        plugins.add( ""group:foo2"" );"
162126,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireProperty.java,46,,"        project.setProperty( ""testProp"", ""This is a test."" );"
162127,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireTextFileChecksum.java,56,,"        rule.setType( ""md5"" );"
162128,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/utils/TestArtifactMatcher.java,75,,"		executePatternMatch(""groupId:artifactId:1.0:jar:compile"", ""groupId"", ""artifactId"", ""1.0"", ""compile"", ""jar"", true);"
162129,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/utils/TestArtifactMatcher.java,75,,"		executePatternMatch(""groupId:artifactId:1.0:jar:compile"", ""groupId"", ""artifactId"", ""1.0"", ""compile"", ""jar"", true);"
162130,./TargetProjects/maven-enforcer/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/utils/TestArtifactMatcher.java,75,,"		executePatternMatch(""groupId:artifactId:1.0:jar:compile"", ""groupId"", ""artifactId"", ""1.0"", ""compile"", ""jar"", true);"
162131,./TargetProjects/maven-enforcer/maven-enforcer-plugin/src/main/java/org/apache/maven/plugins/enforcer/EnforceMojo.java,230,,"                            log.warn( ""Rule "" + i + "": "" + currentRule + "" failed without a message"", e );"
162132,./TargetProjects/maven-enforcer/maven-enforcer-plugin/src/test/java/org/apache/maven/plugins/enforcer/TestEnforceMojo.java,118,,"        assertTrue( ""Expected this rule to be executed."", rules[0].executed );"
162133,./TargetProjects/maven-enforcer/maven-enforcer-plugin/src/test/java/org/apache/maven/plugins/enforcer/TestEnforceMojo.java,119,,"        assertFalse( ""Expected this rule not to be executed."", rules[1].executed );"
162134,./TargetProjects/maven-file-management/src/test/java/org/apache/maven/shared/model/fileset/mappers/MapperUtilTest.java,49,,"        assertEquals( ""/var/some-file.text"", fileNameMapper.mapFileName( ""/var/some-file.text"" ) );"
162135,./TargetProjects/maven-file-management/src/test/java/org/apache/maven/shared/model/fileset/util/FileSetUtilsTest.java,76,,"        set.addInclude( ""**/included.txt"" );"
162136,./TargetProjects/maven-file-management/src/test/java/org/apache/maven/shared/model/fileset/util/FileSetUtilsTest.java,210,,"        set.addExclude( ""*excluded*"" );"
162137,./TargetProjects/maven-file-management/src/test/java/org/apache/maven/shared/model/fileset/util/FileSetUtilsTest.java,217,,"        assertTrue( ""excluded file has been deleted"", new File( directory, ""excluded.txt"" ).exists() );"
162138,./TargetProjects/maven-file-management/src/test/java/org/apache/maven/shared/model/fileset/util/FileSetUtilsTest.java,217,,"        assertTrue( ""excluded file has been deleted"", new File( directory, ""excluded.txt"" ).exists() );"
162139,./TargetProjects/maven-file-management/src/test/java/org/apache/maven/shared/model/fileset/util/FileSetUtilsTest.java,238,,"        assertTrue( ""excluded directory has been deleted"", new File( directory, ""excluded"" ).exists() );"
162140,./TargetProjects/maven-file-management/src/test/java/org/apache/maven/shared/model/fileset/util/FileSetUtilsTest.java,238,,"        assertTrue( ""excluded directory has been deleted"", new File( directory, ""excluded"" ).exists() );"
162141,./TargetProjects/maven-filtering/src/main/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFiltering.java,143,,"            getLogger().info( ""Using '"" + mavenResourcesExecution.getEncoding()"
162142,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/AbstractInterpolatorFilterReaderLineEndingTest.java,99,,"        when( interpolator.interpolate( eq( ""aaaFILTER.a.MEaaa"" ), eq( """" ), isA( RecursionInterceptor.class ) ) ).thenReturn( ""DONE"" );"
162143,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/AbstractMavenFilteringRequestTest.java,43,,"        assertThat( request.getDelimiters(), Matchers.contains( ""${*}"", ""@"" ) );"
162144,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/AbstractMavenFilteringRequestTest.java,56,,"        delimiters.add( ""test"" );"
162145,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/AbstractMavenFilteringRequestTest.java,66,,"        delimiters.add( ""second"" );"
162146,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,76,,"        projectProperties.put( ""foo"", ""bar"" );"
162147,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,76,,"        projectProperties.put( ""foo"", ""bar"" );"
162148,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,77,,"        projectProperties.put( ""java.version"", ""zloug"" );"
162149,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,77,,"        projectProperties.put( ""java.version"", ""zloug"" );"
162150,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,80,,"        String unitFilesDir = getBasedir() + ""/src/test/units-files/maven-resources-filtering"";"
162151,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,81,,"        File initialImageFile = new File( unitFilesDir, ""happy_duke.gif"" );"
162152,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,91,,"            + ""/src/test/units-files/maven-resources-filtering/empty-maven-resources-filtering.txt"" );"
162153,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,93,,"        List<String> nonFilteredFileExtensions = Collections.singletonList( ""gif"" );"
162154,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,96,,"            new MavenResourcesExecution( resources, outputDirectory, mavenProject, ""UTF-8"", filtersFile,"
162155,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,393,,"        resource.addInclude( ""includ*"" );"
162156,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,406,,"        assertEquals( ""includefile.txt"", files[0].getName() );"
162157,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,532,,"        resource.setTargetPath( ""testTargetPath"" );"
162158,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,549,,"    @SuppressWarnings( ""serial"" )"
162159,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,575,,"            if ( file.getName().endsWith( ""dir1"" ) || file.getName().endsWith( ""empty-directory"" )"
162160,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,575,,"            if ( file.getName().endsWith( ""dir1"" ) || file.getName().endsWith( ""empty-directory"" )"
162161,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,576,,"                || file.getName().endsWith( ""empty-directory-child"" ) )"
162162,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,644,,"                    assertTrue( file.listFiles()[0].getName().endsWith( "".gitignore"" ) );"
162163,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,741,,"            PropertyUtils.loadPropertyFile( new File( output, ""unfiltered.properties"" ), null );"
162164,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/DefaultMavenResourcesFilteringTest.java,891,,"        mavenResourcesExecution.setPropertiesEncoding( ""ISO-8859-1"" );"
162165,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/IncrementalResourceFilteringTest.java,63,,"        filter( ""time"" );"
162166,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/IncrementalResourceFilteringTest.java,65,,"        assertTime( ""time"", ""file01.txt"" );"
162167,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/IncrementalResourceFilteringTest.java,66,,"        assertTime( ""time"", ""file02.txt"" );"
162168,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/IncrementalResourceFilteringTest.java,76,,"        filter( ""notime"" );"
162169,./TargetProjects/maven-filtering/src/test/java/org/apache/maven/shared/filtering/TestReflectionProperties.java,45,,"        userProperties.setProperty( ""foo"", ""bar"" );"
162170,./TargetProjects/maven-gpg-plugin/src/main/java/org/apache/maven/plugins/gpg/GpgSigner.java,89,,"        if ( gpgVersion.isBefore( GpgVersion.parse( ""2.1"" ) ) )"
162171,./TargetProjects/maven-gpg-plugin/src/test/java/org/apache/maven/plugins/gpg/GpgVersionTest.java,37,,"        assertTrue( GpgVersion.parse( ""gpg (GnuPG) 2.2.1"" ).isAtLeast( GpgVersion.parse( ""gpg (GnuPG) 2.2.1"" ) ) );"
162172,./TargetProjects/maven-gpg-plugin/src/test/java/org/apache/maven/plugins/gpg/GpgVersionTest.java,39,,"        assertTrue( GpgVersion.parse( ""gpg (GnuPG/MacGPG2) 2.2.10"" ).isAtLeast( GpgVersion.parse( ""2.2.10"" ) ) );"
162173,./TargetProjects/maven-gpg-plugin/src/test/java/org/apache/maven/plugins/gpg/GpgVersionTest.java,39,,"        assertTrue( GpgVersion.parse( ""gpg (GnuPG/MacGPG2) 2.2.10"" ).isAtLeast( GpgVersion.parse( ""2.2.10"" ) ) );"
162174,./TargetProjects/maven-gpg-plugin/src/test/java/org/apache/maven/plugins/gpg/GpgVersionTest.java,40,,"        assertTrue( GpgVersion.parse( ""gpg (GnuPG) 2.0.26 (Gpg4win 2.2.3)"" )"
162175,./TargetProjects/maven-gpg-plugin/src/test/java/org/apache/maven/plugins/gpg/GpgVersionTest.java,41,,"                .isAtLeast( GpgVersion.parse( ""2.0.26"" ) ) );"
162176,./TargetProjects/maven-help-plugin/src/test/java/org/apache/maven/plugins/help/AllProfilesMojoTest.java,66,,"        File testPom = new File( getBasedir(), ""target/test-classes/unit/all-profiles/plugin-config.xml"" );"
162177,./TargetProjects/maven-help-plugin/src/test/java/org/apache/maven/plugins/help/AllProfilesMojoTest.java,68,,"        AllProfilesMojo mojo = (AllProfilesMojo) lookupMojo( ""all-profiles"", testPom );"
162178,./TargetProjects/maven-help-plugin/src/test/java/org/apache/maven/plugins/help/AllProfilesMojoTest.java,91,,"        project.getModel().setProfiles( Arrays.asList( newPomProfile( ""pro-1"", ""pom"" ), newPomProfile( ""pro-2"", ""pom"" ) ) );"
162179,./TargetProjects/maven-help-plugin/src/test/java/org/apache/maven/plugins/help/AllProfilesMojoTest.java,91,,"        project.getModel().setProfiles( Arrays.asList( newPomProfile( ""pro-1"", ""pom"" ), newPomProfile( ""pro-2"", ""pom"" ) ) );"
162180,./TargetProjects/maven-help-plugin/src/test/java/org/apache/maven/plugins/help/DescribeMojoTest.java,130,,"        writeDeclaredField( mojo, ""groupId"", ""org.test"", true );"
162181,./TargetProjects/maven-help-plugin/src/test/java/org/apache/maven/plugins/help/DescribeMojoTest.java,131,,"        writeDeclaredField( mojo, ""artifactId"", ""test"", true );"
162182,./TargetProjects/maven-help-plugin/src/test/java/org/apache/maven/plugins/help/DescribeMojoTest.java,132,,"        writeDeclaredField( mojo, ""version"", ""1.0"", true );"
162183,./TargetProjects/maven-help-plugin/src/test/java/org/apache/maven/plugins/help/DescribeMojoTest.java,134,,"        PluginInfo pi = (PluginInfo) invokeMethod( mojo, true, ""parsePluginLookupInfo"" );"
162184,./TargetProjects/maven-help-plugin/src/test/java/org/apache/maven/plugins/help/DescribeMojoTest.java,147,,"        writeDeclaredField( mojo, ""plugin"", ""help"", true );"
162185,./TargetProjects/maven-help-plugin/src/test/java/org/apache/maven/plugins/help/DescribeMojoTest.java,147,,"        writeDeclaredField( mojo, ""plugin"", ""help"", true );"
162186,./TargetProjects/maven-help-plugin/src/test/java/org/apache/maven/plugins/help/DescribeMojoTest.java,237,,"        PluginDescriptor returned = (PluginDescriptor) invokeMethod( mojo, true, ""lookupPluginDescriptor"", pi );"
162187,./TargetProjects/maven-help-plugin/src/test/java/org/apache/maven/plugins/help/EvaluateMojoTest.java,78,,"        when( expressionEvaluator.evaluate( anyString() ) ).thenReturn( ""My result"" );"
162188,./TargetProjects/maven-indexer/indexer-cli/src/test/java/org/apache/maven/index/cli/AbstractNexusIndexerCliTest.java,128,,"        int code = execute( ""--repository"", TEST_REPO, ""--index"", INDEX_DIR, ""-d"", DEST_DIR );"
162189,./TargetProjects/maven-indexer/indexer-cli/src/test/java/org/apache/maven/index/cli/AbstractNexusIndexerCliTest.java,128,,"        int code = execute( ""--repository"", TEST_REPO, ""--index"", INDEX_DIR, ""-d"", DEST_DIR );"
162190,./TargetProjects/maven-indexer/indexer-core/src/main/java/org/apache/maven/index/DefaultQueryCreator.java,229,,"                        return new TermQuery( new Term( indexerField.getKey(), query.toLowerCase().replaceAll( ""\\."","
162191,./TargetProjects/maven-indexer/indexer-core/src/main/java/org/apache/maven/index/DefaultScanner.java,131,,"            if ( o1.getName().endsWith( "".pom"" ) && !o2.getName().endsWith( "".pom"" ) )"
162192,./TargetProjects/maven-indexer/indexer-core/src/main/java/org/apache/maven/index/artifact/DefaultArtifactPackagingMapper.java,65,,"        DEFAULTS.put( ""ejb-client"", ""jar"" );"
162193,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/AbstractRepoNexusIndexerTest.java,52,,"        assertGroup( 2, ""qdox"", context );"
162194,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/AbstractRepoNexusIndexerTest.java,118,,"            assertEquals( ""1.5"", ai.getVersion() );"
162195,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/AbstractRepoNexusIndexerTest.java,175,,"            assertEquals( ""commons-logging : commons-logging"", ig.getGroupKey() );"
162196,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/DefaultIndexNexusIndexerTest.java,55,,"            nexusIndexer.addIndexingContext( ""test-default"", ""test"", repo, indexDir, null, null, DEFAULT_CREATORS );"
162197,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/FullIndexNexusIndexerTest.java,61,,"        context = nexusIndexer.addIndexingContext( ""test-default"", ""test"", repo, indexDir, null, null, FULL_CREATORS );"
162198,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/FullIndexNexusIndexerTest.java,81,,"            assertTrue( r.containsKey( ""qdox : qdox"" ) );"
162199,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/FullIndexNexusIndexerTest.java,82,,"            assertTrue( r.containsKey( ""org.testng : testng"" ) );"
162200,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/FullIndexNexusIndexerTest.java,124,,"            assertEquals( r.toString(), ""org.slf4j"", ig1.getGroupKey() );"
162201,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/FullIndexNexusIndexerTest.java,127,,"            assertEquals( r.toString(), ""org.testng"", ig2.getGroupKey() );"
162202,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Mindexer14HitLimitTest.java,46,,"            nexusIndexer.addIndexingContext( ""mindexer14"", ""mindexer14"", repo, indexDir, null, null, MIN_CREATORS );"
162203,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Mindexer14HitLimitTest.java,70,,"        createDummyAis( ""org.test"", ""mindexer14"", 1010 );"
162204,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Nexus1179NexusIndexerTest.java,43,,"            nexusIndexer.addIndexingContext( ""nexus-1179"", ""nexus-1179"", repo, indexDir, null, null, DEFAULT_CREATORS );"
162205,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Nexus1179NexusIndexerTest.java,68,,"        assertEquals( ""ant"", ai.getGroupId() );"
162206,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Nexus1179NexusIndexerTest.java,74,,"        assertEquals( ""jar"", ai.getFileExtension() );"
162207,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Nexus13NexusIndexerTest.java,54,,"        context = nexusIndexer.addIndexingContext( ""nexus-13"", ""nexus-13"", repo, indexDir, null, null, FULL_CREATORS );"
162208,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Nexus13NexusIndexerTest.java,69,,"            assertTrue( r.containsKey( ""cisco.infra.dft : dma.plugin.utils"" ) );"
162209,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Nexus13NexusIndexerTest.java,100,,"        assertEquals( ""1.0-SNAPSHOT"", ai.getVersion() );"
162210,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Nexus1911IncrementalTest.java,108,,"        Assert.assertTrue( filenames.contains( IndexingContext.INDEX_FILE_PREFIX + "".gz"" ) );"
162211,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Nexus1911IncrementalTest.java,109,,"        Assert.assertTrue( filenames.contains( IndexingContext.INDEX_FILE_PREFIX + "".properties"" ) );"
162212,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Nexus1911IncrementalTest.java,140,,"        copyRepoContentsAndReindex( new File( getBasedir(), ""src/test/nexus-1911/repo-inc-1"" ), IndexPackingRequest.MAX_CHUNKS );"
162213,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Nexus3177HitLimitChecks.java,75,,"        WildcardQuery q = new WildcardQuery( new Term( ArtifactInfo.UINFO, ""*testng*"" ) );"
162214,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Nexus645NexusIndexerTest.java,40,,"            nexusIndexer.addIndexingContext( ""nexus-645"", ""nexus-645"", repo, indexDir, null, null, DEFAULT_CREATORS );"
162215,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Nexus645NexusIndexerTest.java,47,,"        Query q = nexusIndexer.constructQuery( MAVEN.GROUP_ID, ""org.codehaus.tycho"", SearchType.SCORED );"
162216,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Nexus658NexusIndexerTest.java,40,,"            nexusIndexer.addIndexingContext( ""nexus-658"", ""nexus-658"", repo, indexDir, null, null, DEFAULT_CREATORS );"
162217,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Nexus658NexusIndexerTest.java,47,,"        Query q = nexusIndexer.constructQuery( MAVEN.GROUP_ID, ""org.sonatype.nexus"", SearchType.SCORED );"
162218,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Nexus658NexusIndexerTest.java,57,,"        assertEquals( ""nexus-webapp"", ai1.getArtifactId() );"
162219,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/Nexus658NexusIndexerTest.java,58,,"        assertEquals( ""1.0.0-SNAPSHOT"", ai1.getVersion() );"
162220,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/NexusIndexerTest.java,76,,"        context = indexer.addIndexingContext( ""test"", ""test"", repo, indexDir, null, null, DEFAULT_CREATORS );"
162221,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/NexusIndexerTest.java,107,,"        q = indexer.constructQuery( MAVEN.GROUP_ID, ""commons-logging"", SearchType.EXACT );"
162222,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/NexusIndexerTest.java,356,,"        Query q = indexer.constructQuery( MAVEN.GROUP_ID, ""qdox"", SearchType.SCORED );"
162223,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/NexusIndexerTest.java,380,,"            return !StringUtils.equals( ai.getVersion(), ""1.5"" );"
162224,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M1GavCalculatorTest.java,64,,"        assertEquals( ""org.jruby"", gav.getGroupId() );"
162225,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M1GavCalculatorTest.java,65,,"        assertEquals( ""jruby"", gav.getArtifactId() );"
162226,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M1GavCalculatorTest.java,66,,"        assertEquals( ""1.0RC1-SNAPSHOT"", gav.getVersion() );"
162227,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M1GavCalculatorTest.java,69,,"        assertEquals( ""jar"", gav.getExtension() );"
162228,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M1GavCalculatorTest.java,120,,"        assertEquals( ""1.0"", gav.getVersion() );"
162229,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M1GavCalculatorTest.java,208,,"        assertEquals( ""castor"", gav.getGroupId() );"
162230,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M1GavCalculatorTest.java,269,,"        assertEquals( ""castor-ejb"", gav.getArtifactId() );"
162231,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M1GavCalculatorTest.java,270,,"        assertEquals( ""1.0.7-SNAPSHOT"", gav.getVersion() );"
162232,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M1GavCalculatorTest.java,288,,"        assertEquals( ""1.0.7"", gav.getVersion() );"
162233,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,67,,"        assertEquals( ""org.jruby"", gav.getGroupId() );"
162234,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,68,,"        assertEquals( ""jruby"", gav.getArtifactId() );"
162235,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,70,,"        assertEquals( ""1.0RC1-SNAPSHOT"", gav.getBaseVersion() );"
162236,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,71,,"        assertEquals( ""javadoc"", gav.getClassifier() );"
162237,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,72,,"        assertEquals( ""jar"", gav.getExtension() );"
162238,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,74,,"        assertEquals( parseTimestamp( ""20070504.160758"" ), gav.getSnapshotTimeStamp() );"
162239,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,91,,"        assertEquals( ""pom"", gav.getExtension() );"
162240,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,102,,"        gav = gavCalculator.pathToGav( ""/org/jruby/jruby/1.0RC1-SNAPSHOT/jruby-1.0RC1-20070504.160758-2.jar"" );"
162241,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,106,,"        assertEquals( ""1.0RC1-20070504.160758-2"", gav.getVersion() );"
162242,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,179,,"        assertEquals( ""2.4.2-64-SNAPSHOT"", gav.getVersion() );"
162243,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,241,,"        assertEquals( ""1.0"", gav.getVersion() );"
162244,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,330,,"        assertEquals( ""foo1"", gav.getGroupId() );"
162245,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,332,,"        assertEquals( ""0.0.1-SNAPSHOT"", gav.getVersion() );"
162246,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,487,,"        assertEquals( ""bin"", gav.getClassifier() );"
162247,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,508,,"        assertEquals( ""tar.gz"", gav.getExtension() );"
162248,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,522,,"        assertEquals( ""bundle"", gav.getClassifier() );"
162249,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/artifact/M2GavCalculatorTest.java,538,,"        assertEquals( ""SNAPSHOT"", gav.getVersion() );"
162250,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/context/TrackingLockFactoryTest.java,43,,"        final Lock foo = ram.obtainLock(""foo"");"
162251,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/creator/JarFileContentsIndexCreatorTest.java,51,,"        File pom = new File( getBasedir(), ""src/test/nexus-2318/aopalliance/aopalliance/1.0/aopalliance-1.0.pom"" );"
162252,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/creator/JarFileContentsIndexCreatorTest.java,53,,"        ArtifactInfo artifactInfo = new ArtifactInfo( ""test"", ""aopalliance"", ""aopalliance"", ""1.0"", null, ""jar"" );"
162253,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/creator/JarFileContentsIndexCreatorTest.java,53,,"        ArtifactInfo artifactInfo = new ArtifactInfo( ""test"", ""aopalliance"", ""aopalliance"", ""1.0"", null, ""jar"" );"
162254,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/creator/JarFileContentsIndexCreatorTest.java,53,,"        ArtifactInfo artifactInfo = new ArtifactInfo( ""test"", ""aopalliance"", ""aopalliance"", ""1.0"", null, ""jar"" );"
162255,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/creator/OsgiArtifactIndexCreatorTest.java,82,,"            new ArtifactInfo( ""test"", ""org.apache.karaf.features"", ""org.apache.karaf.features.command"", ""2.2.2"", null, ""jar"" );"
162256,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/creator/OsgiArtifactIndexCreatorTest.java,82,,"            new ArtifactInfo( ""test"", ""org.apache.karaf.features"", ""org.apache.karaf.features.command"", ""2.2.2"", null, ""jar"" );"
162257,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/creator/OsgiArtifactIndexCreatorTest.java,137,,"                new ArtifactInfo(""test"", ""org.apache.karaf.features"", ""org.apache.karaf.features.core"", ""4.1.0"", null,""jar"");"
162258,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/packer/NEXUS4149TransferFormatTest.java,62,,"            nexusIndexer.addIndexingContext( ""repo1"", ""repo1"", new File( reposBase, ""repo1"" ), new File( idxsBase,"
162259,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/packer/NEXUS4149TransferFormatTest.java,67,,"            nexusIndexer.addIndexingContext( ""repo2"", ""repo2"", new File( reposBase, ""repo2"" ), new File( idxsBase,"
162260,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/packer/NEXUS4149TransferFormatTest.java,72,,"            nexusIndexer.addIndexingContext( ""repo3"", ""repo3"", new File( reposBase, ""repo3"" ), new File( idxsBase,"
162261,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/packer/NEXUS4149TransferFormatTest.java,77,,"            nexusIndexer.addIndexingContext( ""repo4"", ""repo4"", new File( reposBase, ""repo4"" ), new File( idxsBase,"
162262,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/treeview/IndexTreeViewTest.java,93,,"        assertEquals( ""The group name should be here"", ""/"", root.getNodeName() );"
162263,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/DefaultIndexUpdaterEmbeddingIT.java,94,,"        File basedir = Files.createTempDirectory( ""nexus-indexer."" ).toFile();"
162264,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/DefaultIndexUpdaterEmbeddingIT.java,178,,"                            setUserName( ""user"" );"
162265,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/DefaultIndexUpdaterEmbeddingIT.java,179,,"                            setPassword( ""password"" );"
162266,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/DefaultIndexUpdaterTest.java,65,,"        indexer.addArtifactToIndex( createArtifactContext( repositoryId, ""commons-lang"", ""commons-lang"", ""2.2"", null ),"
162267,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/DefaultIndexUpdaterTest.java,65,,"        indexer.addArtifactToIndex( createArtifactContext( repositoryId, ""commons-lang"", ""commons-lang"", ""2.2"", null ),"
162268,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/DefaultIndexUpdaterTest.java,80,,"            indexer.addIndexingContext( repositoryId + ""temp"", repositoryId, null, tempIndexDirectory, repositoryUrl,"
162269,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/DefaultIndexUpdaterTest.java,86,,"        indexer.addArtifactToIndex( createArtifactContext( repositoryId, ""commons-lang"", ""commons-lang"", ""2.4"", null ),"
162270,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/DefaultIndexUpdaterTest.java,302,,"        final String indexUrl = repositoryUrl + "".index"";"
162271,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/DefaultIndexUpdaterTest.java,303,,"        final Date contextTimestamp = df.parse( ""20081125010000.000 -0600"" );"
162272,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/DefaultIndexUpdaterTest.java,311,,"        localProps.setProperty( IndexingContext.INDEX_CHAIN_ID, ""someid"" );"
162273,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/DefaultIndexUpdaterTest.java,344,,"                        properties.setProperty( IndexingContext.INDEX_ID, ""central"" );"
162274,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/DefaultIndexUpdaterTest.java,419,,"                    with( IndexingContext.INDEX_FILE_PREFIX + "".gz"" ) );"
162275,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/DefaultIndexUpdaterTest.java,420,,"                will( returnValue( newInputStream( ""/index-updater/server-root/nexus-maven-repository-index.gz"" ) ) );"
162276,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/DefaultIndexUpdaterTest.java,444,,"        final Date contextTimestamp = df.parse( ""20081128000000.000 -0600"" );"
162277,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/DefaultIndexUpdaterTest.java,482,,"                        properties.setProperty( IndexingContext.INDEX_TIMESTAMP, ""20081129174241.859 -0600"" );"
162278,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/DefaultIndexUpdaterTest.java,496,,"                    with( IndexingContext.INDEX_FILE_PREFIX + "".2.gz"" ) );"
162279,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/LocalIndexCacheTest.java,104,,"        indexer.addArtifactToIndex( createArtifactContext( repositoryId, ""commons-lang"", ""commons-lang"", ""2.2"", null ),"
162280,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/LocalIndexCacheTest.java,104,,"        indexer.addArtifactToIndex( createArtifactContext( repositoryId, ""commons-lang"", ""commons-lang"", ""2.2"", null ),"
162281,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/LocalIndexCacheTest.java,120,,"        assertTrue( new File( localCacheDir, ""nexus-maven-repository-index.gz"" ).exists() );"
162282,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/updater/LocalIndexCacheTest.java,121,,"        assertTrue( new File( localCacheDir, ""nexus-maven-repository-index.properties"" ).exists() );"
162283,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/util/IndexCreatorSorterTest.java,48,,"        Assert.assertTrue( ""min should be present"", sortedCreatorIds.contains( ""min"" ) );"
162284,./TargetProjects/maven-indexer/indexer-core/src/test/java/org/apache/maven/index/util/IndexCreatorSorterTest.java,67,,"            new SpoofIndexCreator( ""depend-on-all"", new ArrayList<>("
162285,./TargetProjects/maven-indexer/indexer-examples/indexer-examples-spring/src/test/java/org/apache/maven/indexer/examples/SpringUsageExampleTest.java,70,,"            generateArtifactAndAddToIndex( new File( REPOSITORIES_BASEDIR, ""releases"" ).getAbsolutePath(),"
162286,./TargetProjects/maven-indexer/indexer-examples/indexer-examples-spring/src/test/java/org/apache/maven/indexer/examples/SpringUsageExampleTest.java,72,,"                                           ""org.apache.maven.indexer.examples"","
162287,./TargetProjects/maven-indexer/indexer-examples/indexer-examples-spring/src/test/java/org/apache/maven/indexer/examples/SpringUsageExampleTest.java,73,,"                                           ""indexer-examples-spring"","
162288,./TargetProjects/maven-indexer/indexer-examples/indexer-examples-spring/src/test/java/org/apache/maven/indexer/examples/SpringUsageExampleTest.java,75,,"                                           ""jar"","
162289,./TargetProjects/maven-indexer/indexer-reader/src/main/java/org/apache/maven/index/reader/IndexReader.java,83,,"                    String remoteIndexId = remoteIndexProperties.getProperty( ""nexus.index.id"" );"
162290,./TargetProjects/maven-indexer/indexer-reader/src/test/java/org/apache/maven/index/reader/IndexReaderTest.java,56,,"      assertThat( indexReader.getChunkNames(), equalTo( Arrays.asList( ""nexus-maven-repository-index.gz"" ) ) );"
162291,./TargetProjects/maven-install-plugin/src/test/java/org/apache/maven/plugins/install/InstallFileMojoTest.java,73,,"        InstallFileMojo mojo = (InstallFileMojo) lookupMojo( ""install-file"", testPom );"
162292,./TargetProjects/maven-install-plugin/src/test/java/org/apache/maven/plugins/install/InstallFileMojoTest.java,75,,"        setVariableValueToObject( mojo, ""session"", createMavenSession() );"
162293,./TargetProjects/maven-install-plugin/src/test/java/org/apache/maven/plugins/install/InstallFileMojoTest.java,159,,"            artifactId + ""-"" + version + ""."" + ""pom"" );"
162294,./TargetProjects/maven-install-plugin/src/test/java/org/apache/maven/plugins/install/InstallMojoTest.java,67,,"        File testPom = new File( getBasedir(), ""target/test-classes/unit/basic-install-test/plugin-config.xml"" );"
162295,./TargetProjects/maven-install-plugin/src/test/java/org/apache/maven/plugins/install/InstallMojoTest.java,69,,"        AbstractInstallMojo mojo = (AbstractInstallMojo) lookupMojo( ""install"", testPom );"
162296,./TargetProjects/maven-install-plugin/src/test/java/org/apache/maven/plugins/install/InstallMojoTest.java,86,,"        MavenProject project = (MavenProject) getVariableValueFromObject( mojo, ""project"" );"
162297,./TargetProjects/maven-install-plugin/src/test/java/org/apache/maven/plugins/install/InstallMojoTest.java,89,,"        setVariableValueToObject( mojo, ""reactorProjects"", Collections.singletonList( project ) );"
162298,./TargetProjects/maven-install-plugin/src/test/java/org/apache/maven/plugins/install/InstallMojoTest.java,90,,"        setVariableValueToObject( mojo, ""session"", createMavenSession() );"
162299,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0010DependencyClosureResolutionTest.java,49,,"        verifier.deleteArtifacts( ""org.apache.maven.its.it0010"" );"
162300,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0030DepPomDepMngtInheritanceTest.java,44,,"        verifier.deleteArtifact( ""org.apache.maven.it"", ""maven-it-it0030"", ""1.0-SNAPSHOT"", ""jar"" );"
162301,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0030DepPomDepMngtInheritanceTest.java,44,,"        verifier.deleteArtifact( ""org.apache.maven.it"", ""maven-it-it0030"", ""1.0-SNAPSHOT"", ""jar"" );"
162302,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0030DepPomDepMngtInheritanceTest.java,44,,"        verifier.deleteArtifact( ""org.apache.maven.it"", ""maven-it-it0030"", ""1.0-SNAPSHOT"", ""jar"" );"
162303,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0108SnapshotUpdateTest.java,71,,"        FileUtils.fileWrite( artifact.getAbsolutePath(), ""originalArtifact"" );"
162304,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0108SnapshotUpdateTest.java,73,,"        verifier.assertArtifactNotPresent( ""org.apache.maven"", ""maven-core-it-support"", ""1.0-SNAPSHOT"", ""jar"" );"
162305,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0108SnapshotUpdateTest.java,73,,"        verifier.assertArtifactNotPresent( ""org.apache.maven"", ""maven-core-it-support"", ""1.0-SNAPSHOT"", ""jar"" );"
162306,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0108SnapshotUpdateTest.java,73,,"        verifier.assertArtifactNotPresent( ""org.apache.maven"", ""maven-core-it-support"", ""1.0-SNAPSHOT"", ""jar"" );"
162307,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0108SnapshotUpdateTest.java,73,,"        verifier.assertArtifactNotPresent( ""org.apache.maven"", ""maven-core-it-support"", ""1.0-SNAPSHOT"", ""jar"" );"
162308,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0108SnapshotUpdateTest.java,79,,"        verifier.executeGoal( ""package"" );"
162309,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0108SnapshotUpdateTest.java,89,,"        FileUtils.fileWrite( artifact.getAbsolutePath(), ""updatedArtifact"" );"
162310,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0108SnapshotUpdateTest.java,103,,"            new File( repository, ""org/apache/maven/maven-core-it-support/1.0-SNAPSHOT/maven-metadata.xml"" );"
162311,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0142DirectDependencyScopesTest.java,60,,"        verifier.filterFile( ""pom-template.xml"", ""pom.xml"", ""UTF-8"", filterProps );"
162312,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0143TransitiveDependencyScopesTest.java,62,,"        List<String> compileArtifacts = verifier.loadLines( targetDir + ""/compile-artifacts.txt"", ""UTF-8"" );"
162313,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0143TransitiveDependencyScopesTest.java,62,,"        List<String> compileArtifacts = verifier.loadLines( targetDir + ""/compile-artifacts.txt"", ""UTF-8"" );"
162314,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0143TransitiveDependencyScopesTest.java,63,,"        assertTrue( compileArtifacts.toString(), compileArtifacts.contains( ""org.apache.maven.its.it0143:direct:jar:0.1"" ) );"
162315,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0143TransitiveDependencyScopesTest.java,64,,"        assertTrue( compileArtifacts.toString(), compileArtifacts.contains( ""org.apache.maven.its.it0143:compile:jar:0.1"" ) );"
162316,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0143TransitiveDependencyScopesTest.java,67,,"        List<String> compileClassPath = verifier.loadLines( targetDir + ""/compile-cp.txt"", ""UTF-8"" );"
162317,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0143TransitiveDependencyScopesTest.java,68,,"        assertTrue( compileClassPath.toString(), compileClassPath.contains( ""classes"" ) );"
162318,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0143TransitiveDependencyScopesTest.java,69,,"        assertTrue( compileClassPath.toString(), compileClassPath.contains( ""direct-0.1.jar"" ) );"
162319,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0143TransitiveDependencyScopesTest.java,70,,"        assertTrue( compileClassPath.toString(), compileClassPath.contains( ""compile-0.1.jar"" ) );"
162320,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0143TransitiveDependencyScopesTest.java,73,,"        List<String> runtimeArtifacts = verifier.loadLines( targetDir + ""/runtime-artifacts.txt"", ""UTF-8"" );"
162321,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0143TransitiveDependencyScopesTest.java,76,,"        assertTrue( runtimeArtifacts.toString(), runtimeArtifacts.contains( ""org.apache.maven.its.it0143:runtime:jar:0.1"" ) );"
162322,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0143TransitiveDependencyScopesTest.java,79,,"        List<String> runtimeClassPath = verifier.loadLines( targetDir + ""/runtime-cp.txt"", ""UTF-8"" );"
162323,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0143TransitiveDependencyScopesTest.java,83,,"        assertTrue( runtimeClassPath.toString(), runtimeClassPath.contains( ""runtime-0.1.jar"" ) );"
162324,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0143TransitiveDependencyScopesTest.java,86,,"        List<String> testArtifacts = verifier.loadLines( targetDir + ""/test-artifacts.txt"", ""UTF-8"" );"
162325,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0143TransitiveDependencyScopesTest.java,92,,"        List<String> testClassPath = verifier.loadLines( targetDir + ""/test-cp.txt"", ""UTF-8"" );"
162326,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0143TransitiveDependencyScopesTest.java,94,,"        assertTrue( testClassPath.toString(), testClassPath.contains( ""test-classes"" ) );"
162327,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenIT0146InstallerSnapshotNaming.java,92,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", properties );"
162328,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0449PluginVersionResolutionTest.java,64,,"        verifier.addCliOption( ""settings.xml"" );"
162329,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0449PluginVersionResolutionTest.java,73,,"            verifier.assertFileNotPresent( ""target/touch-release.txt"" );"
162330,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0449PluginVersionResolutionTest.java,74,,"            verifier.assertFilePresent( ""target/touch-snapshot.txt"" );"
162331,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0479OverrideCentralRepoTest.java,54,,"        verifier.deleteDirectory( ""target"" );"
162332,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0479OverrideCentralRepoTest.java,66,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162333,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0479OverrideCentralRepoTest.java,66,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162334,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0479OverrideCentralRepoTest.java,66,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162335,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0479OverrideCentralRepoTest.java,67,,"        verifier.addCliOption( ""--settings"" );"
162336,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0479OverrideCentralRepoTest.java,127,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng0479"" );"
162337,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0479OverrideCentralRepoTest.java,136,,"        verifier.assertArtifactPresent( ""org.apache.maven.its.mng0479"", ""parent"", ""0.1-SNAPSHOT"", ""pom"" );"
162338,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0479OverrideCentralRepoTest.java,136,,"        verifier.assertArtifactPresent( ""org.apache.maven.its.mng0479"", ""parent"", ""0.1-SNAPSHOT"", ""pom"" );"
162339,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0479OverrideCentralRepoTest.java,137,,"        verifier.assertArtifactPresent( ""org.apache.maven.its.mng0479"", ""a"", ""0.1-SNAPSHOT"", ""jar"" );"
162340,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0479OverrideCentralRepoTest.java,161,,"        verifier.assertArtifactNotPresent( ""org.apache.maven.its.mng0479"", ""parent"", ""0.1"", ""pom"" );"
162341,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0507ArtifactRelocationTest.java,53,,"        verifier.deleteArtifacts( ""org.apache.maven"", ""maven-core-it-support"", ""1.1"" );"
162342,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0507ArtifactRelocationTest.java,53,,"        verifier.deleteArtifacts( ""org.apache.maven"", ""maven-core-it-support"", ""1.1"" );"
162343,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0553SettingsAuthzEncryptionTest.java,130,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng0553"" );"
162344,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0553SettingsAuthzEncryptionTest.java,131,,"        verifier.assertArtifactNotPresent( ""org.apache.maven.its.mng0553"", ""a"", ""0.1-SNAPSHOT"", ""jar"" );"
162345,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0553SettingsAuthzEncryptionTest.java,131,,"        verifier.assertArtifactNotPresent( ""org.apache.maven.its.mng0553"", ""a"", ""0.1-SNAPSHOT"", ""jar"" );"
162346,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0553SettingsAuthzEncryptionTest.java,132,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", filterProps );"
162347,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0768OfflineModeTest.java,122,,"                verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", props );"
162348,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng0947OptionalDependencyTest.java,57,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162349,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng1021EqualAttachmentBuildNumberTest.java,69,,"        verifier.assertFilePresent( dir + ""1-SNAPSHOT/test-"" + snapshot + "".pom"" );"
162350,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng1323AntrunDependenciesTest.java,69,,"        assertNull( pclProps.getProperty( ""org.apache.maven.its.mng1323.ClassA"" ) );"
162351,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng1323AntrunDependenciesTest.java,70,,"        assertNull( pclProps.getProperty( ""org.apache.maven.its.mng1323.ClassB"" ) );"
162352,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng1349ChecksumFormatsTest.java,52,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng1349"" );"
162353,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng1349ChecksumFormatsTest.java,60,,"        verifier.assertArtifactPresent( ""org.apache.maven.its.mng1349"", ""md5-a"", ""0.1"", ""jar"" );"
162354,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng1349ChecksumFormatsTest.java,60,,"        verifier.assertArtifactPresent( ""org.apache.maven.its.mng1349"", ""md5-a"", ""0.1"", ""jar"" );"
162355,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng1349ChecksumFormatsTest.java,61,,"        verifier.assertArtifactPresent( ""org.apache.maven.its.mng1349"", ""md5-a"", ""0.1"", ""pom"" );"
162356,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng1412DependenciesOrderTest.java,53,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162357,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng1895ScopeConflictResolutionTest.java,57,,"        verifier.addCliOption( ""settings.xml"" );"
162358,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng1895ScopeConflictResolutionTest.java,58,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162359,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng1895ScopeConflictResolutionTest.java,63,,"        List<String> compile = verifier.loadLines( ""target/compile.txt"", ""UTF-8"" );"
162360,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng1895ScopeConflictResolutionTest.java,64,,"        assertTrue( compile.toString(), compile.contains( ""a-0.1.jar"" ) );"
162361,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng1895ScopeConflictResolutionTest.java,69,,"        List<String> runtime = verifier.loadLines( ""target/runtime.txt"", ""UTF-8"" );"
162362,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng1895ScopeConflictResolutionTest.java,75,,"        List<String> test = verifier.loadLines( ""target/test.txt"", ""UTF-8"" );"
162363,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng1895ScopeConflictResolutionTest.java,91,,"        assertTrue( compile.toString(), compile.contains( ""x-0.1.jar"" ) );"
162364,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng1957JdkActivationWithVersionRangeTest.java,59,,"        assertEquals( ""PASSED"", props.getProperty( ""project.properties.jdkProperty1"" ) );"
162365,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2199ParentVersionRangeTest.java,43,,"            verifier = newVerifier( testDir.getAbsolutePath(), ""remote"" );"
162366,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2199ParentVersionRangeTest.java,47,,"            verifier.executeGoal( ""verify"" );"
162367,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2199ParentVersionRangeTest.java,53,,"            final List<String> lines = verifier.loadFile( new File( testDir, ""log.txt"" ), false );"
162368,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2199ParentVersionRangeTest.java,54,,"            assertFalse( ""Unxpected error message found."","
162369,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2199ParentVersionRangeTest.java,55,,"                         indexOf( lines, "".*Failed to build parent project.*"" ) >= 0 );"
162370,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2199ParentVersionRangeTest.java,113,,"            fail( ""Expected 'VerificationException' not thrown."" );"
162371,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2199ParentVersionRangeTest.java,119,,"            assertTrue( ""Expected error message not found."","
162372,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2201PluginConfigInterpolationTest.java,51,,"        verifier.deleteDirectory( ""target"" );"
162373,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2486TimestampedDependencyVersionInterpolationTest.java,56,,"        verifier.deleteDirectory( ""target"" );"
162374,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2486TimestampedDependencyVersionInterpolationTest.java,58,,"        verifier.executeGoal( ""validate"" );"
162375,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2562Timestamp322Test.java,85,,"        String timestamp1 = props.getProperty( ""project.properties.timestamp"", """" );"
162376,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2562TimestampTest.java,85,,"        String timestamp1 = props.getProperty( ""project.properties.timestamp"", """" );"
162377,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2576MakeLikeReactorTest.java,57,,"        File testDir = ResourceExtractor.simpleExtractResources( getClass(), ""/mng-2576"" );"
162378,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2576MakeLikeReactorTest.java,62,,"        verifier.addCliOption( ""-pl"" );"
162379,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2576MakeLikeReactorTest.java,63,,"        verifier.addCliOption( ""sub-b"" );"
162380,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2576MakeLikeReactorTest.java,65,,"        verifier.executeGoal( ""validate"" );"
162381,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2576MakeLikeReactorTest.java,69,,"        verifier.assertFileNotPresent( ""target/touch.txt"" );"
162382,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2576MakeLikeReactorTest.java,70,,"        verifier.assertFileNotPresent( ""sub-a/target/touch.txt"" );"
162383,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2576MakeLikeReactorTest.java,71,,"        verifier.assertFilePresent( ""sub-b/target/touch.txt"" );"
162384,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2576MakeLikeReactorTest.java,72,,"        verifier.assertFileNotPresent( ""sub-c/target/touch.txt"" );"
162385,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2576MakeLikeReactorTest.java,73,,"        verifier.assertFileNotPresent( ""sub-d/target/touch.txt"" );"
162386,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2690MojoLoadingErrorsTest.java,59,,"            verifier.executeGoal( ""validate"" );"
162387,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2690MojoLoadingErrorsTest.java,61,,"            fail( ""should throw an error during execution."" );"
162388,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2690MojoLoadingErrorsTest.java,72,,"        List<String> lines = verifier.loadFile( new File( testDir, ""log.txt"" ), false );"
162389,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2690MojoLoadingErrorsTest.java,75,,"        assertTrue( ""User-friendly message was not found in output."", msg >= 0 );"
162390,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2720SiblingClasspathArtifactsTest.java,64,,"        classPath = verifier.loadLines( ""child2/target/compile.txt"", ""UTF-8"" );"
162391,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2744checksumVerificationTest.java,52,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng2744"" );"
162392,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2883LegacyRepoOfflineTest.java,54,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng2883"" );"
162393,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2883LegacyRepoOfflineTest.java,68,,"            verifier.executeGoal( ""validate"" );"
162394,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2926PluginPrefixOrderTest.java,55,,"        verifier.deleteArtifacts( ""org.apache.maven.plugins"", ""mng-2926"", ""0.1"" );"
162395,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2926PluginPrefixOrderTest.java,55,,"        verifier.deleteArtifacts( ""org.apache.maven.plugins"", ""mng-2926"", ""0.1"" );"
162396,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2926PluginPrefixOrderTest.java,55,,"        verifier.deleteArtifacts( ""org.apache.maven.plugins"", ""mng-2926"", ""0.1"" );"
162397,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2926PluginPrefixOrderTest.java,59,,"        verifier.deleteArtifacts( ""org.codehaus.mojo"", ""mng-2926"", ""0.1"" );"
162398,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng2972OverridePluginDependencyTest.java,54,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162399,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3004ReactorFailureBehaviorMultithreadedTest.java,48,,"        File testDir = ResourceExtractor.simpleExtractResources( getClass(), ""/mng-0095"" );"
162400,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3004ReactorFailureBehaviorMultithreadedTest.java,52,,"        verifier.deleteDirectory( ""target"" );"
162401,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3004ReactorFailureBehaviorMultithreadedTest.java,53,,"        verifier.deleteDirectory( ""subproject1/target"" );"
162402,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3004ReactorFailureBehaviorMultithreadedTest.java,54,,"        verifier.deleteDirectory( ""subproject2/target"" );"
162403,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3004ReactorFailureBehaviorMultithreadedTest.java,55,,"        verifier.deleteDirectory( ""subproject3/target"" );"
162404,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3004ReactorFailureBehaviorMultithreadedTest.java,58,,"        verifier.setSystemProperty( ""maven.threads.experimental"", ""1"" );"
162405,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3004ReactorFailureBehaviorMultithreadedTest.java,62,,"            verifier.executeGoal( ""org.apache.maven.its.plugins:maven-it-plugin-touch:touch"" );"
162406,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3004ReactorFailureBehaviorMultithreadedTest.java,71,,"        verifier.assertFilePresent( ""target/touch.txt"" );"
162407,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3004ReactorFailureBehaviorMultithreadedTest.java,72,,"        verifier.assertFileNotPresent( ""subproject1/target/touch.txt"" );"
162408,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3004ReactorFailureBehaviorMultithreadedTest.java,73,,"        verifier.assertFileNotPresent( ""subproject2/target/touch.txt"" );"
162409,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3004ReactorFailureBehaviorMultithreadedTest.java,74,,"        verifier.assertFileNotPresent( ""subproject3/target/touch.txt"" );"
162410,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3038TransitiveDepManVersionTest.java,48,,"        compileDDep( testDirBase, ""D1"", ""1.0"" );"
162411,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3038TransitiveDepManVersionTest.java,54,,"        verifier.deleteArtifact( ""org.apache.maven.its.it0121"", ""A"", ""1.0"", ""pom"" );"
162412,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3038TransitiveDepManVersionTest.java,54,,"        verifier.deleteArtifact( ""org.apache.maven.its.it0121"", ""A"", ""1.0"", ""pom"" );"
162413,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3038TransitiveDepManVersionTest.java,55,,"        verifier.deleteArtifact( ""org.apache.maven.its.it0121"", ""A"", ""1.0"", ""jar"" );"
162414,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3043BestEffortReactorResolutionTest.java,65,,"        classpath = verifier.loadLines( ""consumer-a/target/compile.txt"", ""UTF-8"" );"
162415,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3043BestEffortReactorResolutionTest.java,66,,"        assertContains( classpath, new String[] { ""classes-test"" } );"
162416,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3043BestEffortReactorResolutionTest.java,67,,"        assertNotContains( classpath, new String[] { ""classes-main"" } );"
162417,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3043BestEffortReactorResolutionTest.java,120,,"        assertContains( classpath, new String[] { ""tests.jar"" } );"
162418,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3043BestEffortReactorResolutionTest.java,121,,"        assertNotContains( classpath, new String[] { ""client.jar"" } );"
162419,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3057VersionExprTransformationsTest.java,64,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng3057"" );"
162420,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3139UseCachedMetadataOfBlacklistedRepoTest.java,57,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162421,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3220ImportScopeTest.java,51,,"        verifier.filterFile( ""../settings-template.xml"", ""settings.xml"", ""UTF-8"","
162422,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3221InfiniteForkingTest.java,52,,"            verifier = newVerifier( reportDir.getAbsolutePath(), ""remote"" );"
162423,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3379ParallelArtifactDownloadsTest.java,65,,"        assertArtifact( verifier, gid + ""a"", ""x"", ""0.2-SNAPSHOT"", """", ""jar"","
162424,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3379ParallelArtifactDownloadsTest.java,65,,"        assertArtifact( verifier, gid + ""a"", ""x"", ""0.2-SNAPSHOT"", """", ""jar"","
162425,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3379ParallelArtifactDownloadsTest.java,67,,"        assertArtifact( verifier, gid + ""a"", ""x"", ""0.2-SNAPSHOT"", """", ""pom"","
162426,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3379ParallelArtifactDownloadsTest.java,69,,"        assertArtifact( verifier, gid + ""a"", ""x"", ""0.2-SNAPSHOT"", ""tests"", ""jar"","
162427,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3379ParallelArtifactDownloadsTest.java,71,,"        assertArtifact( verifier, gid + ""a"", ""x"", ""0.2-SNAPSHOT"", ""sources"", ""jar"","
162428,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3379ParallelArtifactDownloadsTest.java,73,,"        assertArtifact( verifier, gid + ""a"", ""x"", ""0.2-SNAPSHOT"", ""javadoc"", ""jar"","
162429,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3396DependencyManagementForOverConstrainedRangesTest.java,49,,"        verifier.deleteArtifact( GROUP_ID, ""A"", ""1.0"", ""pom"" );"
162430,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3396DependencyManagementForOverConstrainedRangesTest.java,49,,"        verifier.deleteArtifact( GROUP_ID, ""A"", ""1.0"", ""pom"" );"
162431,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3396DependencyManagementForOverConstrainedRangesTest.java,50,,"        verifier.deleteArtifact( GROUP_ID, ""A"", ""1.0"", ""jar"" );"
162432,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3415JunkRepositoryMetadataTest.java,90,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng3415"" );"
162433,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3415JunkRepositoryMetadataTest.java,103,,"        verifier.setLogFileName( ""log-"" + methodName + ""-firstBuild.txt"" );"
162434,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3415JunkRepositoryMetadataTest.java,104,,"        verifier.executeGoal( ""validate"" );"
162435,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3461MirrorMatchingTest.java,61,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng3461"" );"
162436,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3461MirrorMatchingTest.java,63,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", filterProps );"
162437,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3461MirrorMatchingTest.java,70,,"        verifier.assertArtifactPresent( ""org.apache.maven.its.mng3461"", ""a"", ""0.1"", ""jar"" );"
162438,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3461MirrorMatchingTest.java,70,,"        verifier.assertArtifactPresent( ""org.apache.maven.its.mng3461"", ""a"", ""0.1"", ""jar"" );"
162439,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3506ArtifactHandlersFromPluginsTest.java,68,,"        assertTrue( path + "" should have been installed."", new File( path ).exists() );"
162440,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3530DynamicPOMInterpolationTest.java,57,,"        Verifier verifier = newVerifier( pluginDir.getAbsolutePath(), ""remote"" );"
162441,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3545ProfileDeactivationTest.java,48,,"        File testDir = ResourceExtractor.simpleExtractResources( getClass(), ""/mng-3545"" );"
162442,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3545ProfileDeactivationTest.java,52,,"        verifier.deleteDirectory( ""target"" );"
162443,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3545ProfileDeactivationTest.java,55,,"        verifier.executeGoal( ""validate"" );"
162444,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3545ProfileDeactivationTest.java,59,,"        verifier.assertFilePresent( ""target/profile1/touch.txt"" );"
162445,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3545ProfileDeactivationTest.java,60,,"        verifier.assertFilePresent( ""target/profile2/touch.txt"" );"
162446,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3545ProfileDeactivationTest.java,61,,"        verifier.assertFileNotPresent( ""target/profile3/touch.txt"" );"
162447,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3545ProfileDeactivationTest.java,62,,"        verifier.assertFileNotPresent( ""target/profile4/touch.txt"" );"
162448,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3545ProfileDeactivationTest.java,63,,"        verifier.assertFileNotPresent( ""target/profile5/touch.txt"" );"
162449,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3599useHttpProxyForWebDAVMk2Test.java,171,,"        FileUtils.fileWrite( new File( testDir, ""settings.xml"" ).getAbsolutePath(), newSettings );"
162450,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3599useHttpProxyForWebDAVMk2Test.java,179,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng3599"" );"
162451,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3599useHttpProxyForWebDAVMk2Test.java,186,,"        verifier.assertArtifactPresent( ""org.apache.maven.its.mng3599"", ""test-dependency"", ""1.0"", ""jar"" );"
162452,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3599useHttpProxyForWebDAVMk2Test.java,186,,"        verifier.assertArtifactPresent( ""org.apache.maven.its.mng3599"", ""test-dependency"", ""1.0"", ""jar"" );"
162453,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3599useHttpProxyForWebDAVMk2Test.java,186,,"        verifier.assertArtifactPresent( ""org.apache.maven.its.mng3599"", ""test-dependency"", ""1.0"", ""jar"" );"
162454,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3599useHttpProxyForWebDAVTest.java,158,,"        FileUtils.fileWrite( new File( testDir, ""settings.xml"" ).getAbsolutePath(), newSettings );"
162455,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3599useHttpProxyForWebDAVTest.java,166,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng3599"" );"
162456,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3599useHttpProxyForWebDAVTest.java,173,,"        verifier.assertArtifactPresent( ""org.apache.maven.its.mng3599"", ""test-dependency"", ""1.0"", ""jar"" );"
162457,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3599useHttpProxyForWebDAVTest.java,173,,"        verifier.assertArtifactPresent( ""org.apache.maven.its.mng3599"", ""test-dependency"", ""1.0"", ""jar"" );"
162458,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3599useHttpProxyForWebDAVTest.java,173,,"        verifier.assertArtifactPresent( ""org.apache.maven.its.mng3599"", ""test-dependency"", ""1.0"", ""jar"" );"
162459,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3600DeploymentModeDefaultsTest.java,49,,"        new File( testDir, ""wagon.properties"" ).delete();"
162460,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3641ProfileActivationWarningTest.java,56,,"        verifier.executeGoal( ""validate"" );"
162461,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3652UserAgentHeaderTest.java,112,,"        File testDir = ResourceExtractor.simpleExtractResources( getClass(), ""/mng-3652"" );"
162462,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3652UserAgentHeaderTest.java,113,,"        File pluginDir = new File( testDir, ""test-plugin"" );"
162463,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3652UserAgentHeaderTest.java,114,,"        File projectDir = new File( testDir, ""test-project"" );"
162464,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3652UserAgentHeaderTest.java,116,,"        Verifier verifier = newVerifier( pluginDir.getAbsolutePath(), ""remote"" );"
162465,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3652UserAgentHeaderTest.java,117,,"        verifier.executeGoal( ""install"" );"
162466,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3652UserAgentHeaderTest.java,123,,"        verifier.addCliOption( ""-DtestPort="" + port );"
162467,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3652UserAgentHeaderTest.java,127,,"        verifier.executeGoal( ""validate"" );"
162468,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3652UserAgentHeaderTest.java,147,,"        if ( matchesVersionRange( ""(,3.0-beta-3)"" ) )"
162469,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3652UserAgentHeaderTest.java,149,,"            assertEquals( ""Comparing User-Agent '"" + userAgent + ""'"", ""Apache-Maven/"" + mavenVersion + "" (Java """
162470,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3652UserAgentHeaderTest.java,149,,"            assertEquals( ""Comparing User-Agent '"" + userAgent + ""'"", ""Apache-Maven/"" + mavenVersion + "" (Java """
162471,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3652UserAgentHeaderTest.java,149,,"            assertEquals( ""Comparing User-Agent '"" + userAgent + ""'"", ""Apache-Maven/"" + mavenVersion + "" (Java """
162472,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3775ConflictResolutionBacktrackingTest.java,101,,"        assertTrue( project + "" > "" + test.toString(), test.contains( ""a-0.1.jar"" ) );"
162473,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3843PomInheritanceTest.java,100,,"            assertEquals( ""2"", props.getProperty( ""project.build.resources"" ) );"
162474,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3843PomInheritanceTest.java,101,,"            assertEquals( ""2"", props.getProperty( ""project.build.testResources"" ) );"
162475,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3845LimitedPomInheritanceTest.java,67,,"        assertEquals( ""true"", props.getProperty( ""project.distributionManagement.repository.uniqueVersion"", ""true"" ) );"
162476,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3845LimitedPomInheritanceTest.java,68,,"        assertEquals( ""default"", props.getProperty( ""project.distributionManagement.repository.layout"", ""default"" ) );"
162477,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3885UniqueVersionFromParentProfileTest.java,50,,"        File testDir = ResourceExtractor.simpleExtractResources( getClass(), ""/mng-3885"" );"
162478,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3885UniqueVersionFromParentProfileTest.java,56,,"        verifier.filterFile( ""pom-template.xml"", ""pom.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162479,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3885UniqueVersionFromParentProfileTest.java,58,,"        verifier.executeGoal( ""validate"" );"
162480,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3948ParentResolutionFromProfileReposTest.java,55,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng3948"" );"
162481,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3970DepResolutionFromProfileReposTest.java,55,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng3970"" );"
162482,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng3983PluginResolutionFromProfileReposTest.java,56,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng3983"" );"
162483,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4000MultiPluginExecutionsTest.java,61,,"        List<String> expected = Arrays.asList( new String[] { ""exec"", ""exec"" } );"
162484,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4036ParentResolutionFromSettingsRepoTest.java,51,,"        verifier.filterFile( ""settings.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162485,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4036ParentResolutionFromSettingsRepoTest.java,52,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng4036"" );"
162486,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4086ExplicitPluginMetaversionTest.java,55,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162487,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4107InterpolationUsesDominantProfileSourceTest.java,65,,"        assertEquals( ""settings"", props.getProperty( ""project.properties.pomVsSettings"" ) );"
162488,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4166HideCoreCommonsCliTest.java,55,,"        verifier.deleteArtifact( ""commons-cli"", ""commons-cli"", ""0.1.4166"", ""jar"" );"
162489,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4199CompileMeetsRuntimeScopeTest.java,63,,"        verifier.filterFile( ""pom-template.xml"", ""pom.xml"", ""UTF-8"", filterProps );"
162490,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4231SnapshotUpdatePolicyTest.java,54,,"        verifier.addCliOption( ""settings.xml"" );"
162491,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4231SnapshotUpdatePolicyTest.java,59,,"        filterProps.setProperty( ""@repo@"", ""repo-1"" );"
162492,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4231SnapshotUpdatePolicyTest.java,60,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", filterProps );"
162493,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4231SnapshotUpdatePolicyTest.java,60,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", filterProps );"
162494,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4231SnapshotUpdatePolicyTest.java,62,,"        verifier.executeGoal( ""validate"" );"
162495,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4254SelectableWagonProvidersTest.java,47,,"        File testDir = ResourceExtractor.simpleExtractResources( getClass(), ""/mng-4254"" );"
162496,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4254SelectableWagonProvidersTest.java,51,,"        verifier.deleteDirectory( ""target"" );"
162497,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4254SelectableWagonProvidersTest.java,57,,"        verifier.executeGoal( ""validate"" );"
162498,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4254SelectableWagonProvidersTest.java,62,,"        Properties props = verifier.loadProperties( ""target/wagon-impl.properties"" );"
162499,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4254SelectableWagonProvidersTest.java,63,,"        assertEquals( ""org.apache.maven.wagon.providers.coreit.CoreItHttpWagon"", props.getProperty( ""wagon.class"" ) );"
162500,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4293RequiresCompilePlusRuntimeScopeTest.java,60,,"        verifier.filterFile( ""pom-template.xml"", ""pom.xml"", ""UTF-8"", filterProps );"
162501,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4318ProjectExecutionRootTest.java,64,,"        assertEquals( ""true"", props.getProperty( ""project.executionRoot"" ) );"
162502,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4318ProjectExecutionRootTest.java,64,,"        assertEquals( ""true"", props.getProperty( ""project.executionRoot"" ) );"
162503,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4318ProjectExecutionRootTest.java,67,,"        assertEquals( ""false"", props.getProperty( ""project.executionRoot"" ) );"
162504,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4320AggregatorAndDependenciesTest.java,57,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162505,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4331DependencyCollectionTest.java,61,,"        List<String> artifacts = verifier.loadLines( ""sub-2/target/compile.txt"", ""UTF-8"" );"
162506,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4343MissingReleaseUpdatePolicyTest.java,151,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng4343"" );"
162507,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4343MissingReleaseUpdatePolicyTest.java,153,,"        verifier.addCliOption( ""settings.xml"" );"
162508,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4343MissingReleaseUpdatePolicyTest.java,165,,"            verifier.executeGoal( ""validate"" );"
162509,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4343MissingReleaseUpdatePolicyTest.java,175,,"            requestedUris.contains( ""/dep/0.1/dep-0.1.jar"" ) || requestedUris.contains( ""/dep/0.1/dep-0.1.pom"" ) );"
162510,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4343MissingReleaseUpdatePolicyTest.java,175,,"            requestedUris.contains( ""/dep/0.1/dep-0.1.jar"" ) || requestedUris.contains( ""/dep/0.1/dep-0.1.pom"" ) );"
162511,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4343MissingReleaseUpdatePolicyTest.java,186,,"        verifier.assertArtifactPresent( ""org.apache.maven.its.mng4343"", ""dep"", ""0.1"", ""jar"" );"
162512,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4343MissingReleaseUpdatePolicyTest.java,186,,"        verifier.assertArtifactPresent( ""org.apache.maven.its.mng4343"", ""dep"", ""0.1"", ""jar"" );"
162513,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4367LayoutAwareMirrorSelectionTest.java,53,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng4367"" );"
162514,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4367LayoutAwareMirrorSelectionTest.java,56,,"        filterProps.setProperty( ""@repourl@"", filterProps.getProperty( ""@baseurl@"" ) + ""/void"" );"
162515,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4368TimestampAwareArtifactInstallerTest.java,60,,"        verifier.deleteDirectory( ""target"" );"
162516,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4368TimestampAwareArtifactInstallerTest.java,61,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng4368"" );"
162517,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4368TimestampAwareArtifactInstallerTest.java,62,,"        verifier.executeGoal( ""initialize"" );"
162518,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4368TimestampAwareArtifactInstallerTest.java,69,,"        String pom = FileUtils.fileRead( installedPom, ""UTF-8"" );"
162519,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4368TimestampAwareArtifactInstallerTest.java,70,,"        assertTrue( pom.indexOf( ""Branch-A"" ) > 0 );"
162520,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4368TimestampAwareArtifactInstallerTest.java,71,,"        assertTrue( !pom.contains( ""Branch-B"" ) );"
162521,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4412OfflineModeInPluginTest.java,54,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162522,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4452ResolutionOfSnapshotWithClassifierTest.java,60,,"        verifier.executeGoal( ""validate"" );"
162523,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4465PluginPrefixFromLocalCacheOfDownRepoTest.java,56,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162524,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4526MavenProjectArtifactsScopeTest.java,55,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162525,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4554PluginPrefixMappingUpdateTest.java,101,,"                verifier.deleteArtifacts( ""org.apache.maven.its.mng4554"" );"
162526,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4554PluginPrefixMappingUpdateTest.java,112,,"            verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", filterProps );"
162527,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4554PluginPrefixMappingUpdateTest.java,117,,"            verifier.executeGoal( ""a:touch"" );"
162528,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4615ValidateRequiredPluginParameterTest.java,53,,"        verifier.deleteDirectory( ""target"" );"
162529,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4615ValidateRequiredPluginParameterTest.java,54,,"        verifier.executeGoal( ""validate"" );"
162530,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4660OutdatedPackagedArtifact.java,62,,"        verifier1.deleteDirectory( ""target"" );"
162531,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4660OutdatedPackagedArtifact.java,82,,"        final Path resourcesDirectory = Files.createDirectories( Paths.get( testDir.toString(), ""module-a"", ""src"", ""main"", ""resources"" ) );"
162532,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4666CoreRealmImportTest.java,56,,"        verifier.deleteArtifacts( ""org.apache.maven"", ""maven-model"", ""0.1-stub"" );"
162533,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4666CoreRealmImportTest.java,56,,"        verifier.deleteArtifacts( ""org.apache.maven"", ""maven-model"", ""0.1-stub"" );"
162534,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4666CoreRealmImportTest.java,64,,"        verifier.deleteArtifacts( ""org.codehaus.plexus"", ""plexus-container-default"", ""0.1-stub"" );"
162535,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4690InterdependentConflictResolutionTest.java,104,,"        assertTrue( test + "" > "" + classpath.toString(), classpath.contains( ""a-1.jar"" ) );"
162536,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4745PluginVersionUpdateTest.java,55,,"        verifier.addCliOption( ""settings.xml"" );"
162537,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4745PluginVersionUpdateTest.java,58,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", filterProps );"
162538,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4745PluginVersionUpdateTest.java,60,,"        writeMetadata( testDir, ""1.0"", ""20100729123455"" );"
162539,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4745PluginVersionUpdateTest.java,62,,"        verifier.executeGoal( ""org.apache.maven.its.mng4745:maven-it-plugin:touch"" );"
162540,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4745PluginVersionUpdateTest.java,64,,"        writeMetadata( testDir, ""1.1"", ""20100730123456"" );"
162541,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4768NearestMatchConflictResolutionTest.java,105,,"        assertTrue( test + "" > "" + classpath.toString(), classpath.contains( ""a-2.0.jar"" ) );"
162542,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4789ScopeInheritanceMeetsConflictTest.java,57,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162543,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4800NearestWinsVsScopeWideningTest.java,77,,"        assertTrue( test + "" > "" + compile.toString(), compile.contains( ""b-0.1.jar"" ) );"
162544,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4840MavenPrerequisiteTest.java,54,,"        verifier.addCliOption( ""settings.xml"" );"
162545,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4842ParentResolutionOfDependencyPomTest.java,55,,"        verifier.deleteArtifacts( ""org.apache.maven.its.mng4842"" );"
162546,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng4842ParentResolutionOfDependencyPomTest.java,57,,"        verifier.addCliOption( ""settings.xml"" );"
162547,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5230MakeReactorWithExcludesTest.java,56,,"        File testDir = ResourceExtractor.simpleExtractResources( getClass(), ""/mng-5230-make-reactor-with-excludes"" );"
162548,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5230MakeReactorWithExcludesTest.java,62,,"        verifier.addCliOption( ""-pl"" );"
162549,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5230MakeReactorWithExcludesTest.java,65,,"        verifier.executeGoal( ""validate"" );"
162550,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5230MakeReactorWithExcludesTest.java,69,,"        verifier.assertFilePresent( ""target/touch.txt"" );"
162551,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5230MakeReactorWithExcludesTest.java,70,,"        verifier.assertFilePresent( ""mod-a/target/touch.txt"" );"
162552,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5230MakeReactorWithExcludesTest.java,71,,"        verifier.assertFileNotPresent( ""mod-b/target/touch.txt"" );"
162553,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5230MakeReactorWithExcludesTest.java,72,,"        verifier.assertFilePresent( ""mod-c/target/touch.txt"" );"
162554,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5230MakeReactorWithExcludesTest.java,73,,"        verifier.assertFilePresent( ""mod-d/target/touch.txt"" );"
162555,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5280SettingsProfilesRepositoriesOrderTest.java,97,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", filterProps );"
162556,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5280SettingsProfilesRepositoriesOrderTest.java,169,,"                else if ( uri.endsWith( "".jar"" ) )"
162557,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5530MojoExecutionScopeTest.java,44,,"        verifier = newVerifier( pluginDir.getAbsolutePath(), ""remote"" );"
162558,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5530MojoExecutionScopeTest.java,45,,"        verifier.executeGoal( ""install"" );"
162559,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5578SessionScopeTest.java,37,,"        File testDir = ResourceExtractor.simpleExtractResources( getClass(), ""/mng-5578-session-scope"" );"
162560,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5578SessionScopeTest.java,44,,"        verifier = newVerifier( pluginDir.getAbsolutePath(), ""remote"" );"
162561,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5578SessionScopeTest.java,45,,"        verifier.executeGoal( ""install"" );"
162562,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5578SessionScopeTest.java,52,,"        verifier.executeGoal( ""package"" );"
162563,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5640LifecycleParticipantAfterSessionEnd.java,45,,"            ResourceExtractor.simpleExtractResources( getClass(), ""/mng-5640-lifecycleParticipant-afterSession"" );"
162564,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5640LifecycleParticipantAfterSessionEnd.java,46,,"        File extensionDir = new File( testDir, ""extension"" );"
162565,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5640LifecycleParticipantAfterSessionEnd.java,52,,"        verifier = newVerifier( extensionDir.getAbsolutePath(), ""remote"" );"
162566,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5640LifecycleParticipantAfterSessionEnd.java,53,,"        verifier.executeGoal( ""install"" );"
162567,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5640LifecycleParticipantAfterSessionEnd.java,61,,"            verifier.executeGoal( ""package"" );"
162568,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5640LifecycleParticipantAfterSessionEnd.java,62,,"            fail( ""The build should fail"" );"
162569,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5640LifecycleParticipantAfterSessionEnd.java,71,,"        verifier.assertFilePresent( ""target/afterProjectsRead.txt"" );"
162570,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5640LifecycleParticipantAfterSessionEnd.java,74,,"        verifier.assertFilePresent( ""target/afterSessionEnd.txt"" );"
162571,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5669ReadPomsOnce.java,57,,"        verifier.filterFile( "".mvn/jvm.config"", "".mvn/jvm.config"", null, filterProperties );"
162572,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5760ResumeFeatureTest.java,66,,"        verifier.addCliOption( ""-Dmodule-b.fail=true"" );"
162573,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5760ResumeFeatureTest.java,70,,"            verifier.executeGoal( ""test"" );"
162574,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5760ResumeFeatureTest.java,71,,"            fail( ""Expected this invocation to fail"" );"
162575,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5760ResumeFeatureTest.java,96,,"        verifier.addCliOption( ""-Dmodule-a.fail=true"" );"
162576,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5760ResumeFeatureTest.java,194,,"        verifier.addCliOption( ""-T2"" );"
162577,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5760ResumeFeatureTest.java,200,,"            verifier.executeGoal( ""verify"" );"
162578,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5771CoreExtensionsTest.java,27,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162579,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5774ConfigurationProcessorsTest.java,22,,"        verifier.filterFile( ""settings-template.xml"", ""settings.xml"", ""UTF-8"", verifier.newDefaultFilterProperties() );"
162580,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5840ParentVersionRanges.java,20,,"        Verifier verifier = newVerifier( new File( testDir, ""parent-1"" ).getAbsolutePath(), ""remote"" );"
162581,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5937MavenWrapper.java,97,,"        distInstaller.setSystemProperty( ""classifier"", ""bin"" );"
162582,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5937MavenWrapper.java,119,,"        verifier.executeGoal( ""validate"", envVars );"
162583,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6090CIFriendlyTest.java,62,,"        verifier.addCliOption( ""-Drevision=1.2"" );"
162584,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6118SubmoduleInvocation.java,61,,"        verifier.executeGoal( ""compile"", envVars );"
162585,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6352PrintVersionTest.java,63,,"        verifier.setLogFileName( ""version-log.txt"" );"
162586,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6391PrintVersionTest.java,63,,"        verifier.setLogFileName( ""version-log.txt"" );"
162587,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6511OptionalProjectSelectionTest.java,47,,"        newVerifier( testDir.getAbsolutePath() ).executeGoal( ""clean"" );"
162588,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6511OptionalProjectSelectionTest.java,52,,"        verifier.executeGoal( ""validate"" );"
162589,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6511OptionalProjectSelectionTest.java,54,,"        verifier.assertFilePresent( ""existing-module/target/touch.txt"" ); // existing-module should have been built."
162590,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6562WarnDefaultBindings.java,39,,"        File testDir = ResourceExtractor.simpleExtractResources( getClass(), ""/mng-6562-default-bindings"" );"
162591,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6562WarnDefaultBindings.java,44,,"        verifier.setLogFileName( phase + "".txt"" );"
162592,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6562WarnDefaultBindings.java,84,,"                + "", you should define versions in pluginManagement section of your pom.xml or parent"" );"
162593,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6656BuildConsumer.java,79,,"        verifier.assertArtifactContents( ""org.sonatype.mavenbook.multi"", ""parent"", ""0.9-MNG6656-SNAPSHOT"", ""pom"", content );"
162594,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6656BuildConsumer.java,79,,"        verifier.assertArtifactContents( ""org.sonatype.mavenbook.multi"", ""parent"", ""0.9-MNG6656-SNAPSHOT"", ""pom"", content );"
162595,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6656BuildConsumer.java,79,,"        verifier.assertArtifactContents( ""org.sonatype.mavenbook.multi"", ""parent"", ""0.9-MNG6656-SNAPSHOT"", ""pom"", content );"
162596,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6754TimestampInMultimoduleProject.java,66,,"        final Metadata parentMetadataLocal = getMetadata( getLocalMetadataPath( localRepoDir, ""parent"", null ) );"
162597,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6754TimestampInMultimoduleProject.java,67,,"        final Metadata aMetadataLocal = getMetadata( getLocalMetadataPath( localRepoDir, ""child-a"", null ) );"
162598,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6754TimestampInMultimoduleProject.java,68,,"        final Metadata bMetadataLocal = getMetadata( getLocalMetadataPath( localRepoDir, ""child-b"", null ) );"
162599,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6754TimestampInMultimoduleProject.java,74,,"        assertEquals ( ""parent"", ""local"", ""lastUpdated"", mavenBuildTimestamp, parentLastUpdatedLocal );"
162600,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6754TimestampInMultimoduleProject.java,74,,"        assertEquals ( ""parent"", ""local"", ""lastUpdated"", mavenBuildTimestamp, parentLastUpdatedLocal );"
162601,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6754TimestampInMultimoduleProject.java,92,,"        assertEquals ( ""parent"", ""local"", ""snapshotVersion[0]/updated"", mavenBuildTimestamp, parentVersionedSnapshotVersionUpdatedLocal );"
162602,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6754TimestampInMultimoduleProject.java,95,,"        assertEquals ( ""child-a"", ""local"", ""snapshotVersion[1]/updated"", mavenBuildTimestamp, aVersionedSnapshotVersionUpdated2Local );"
162603,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6754TimestampInMultimoduleProject.java,108,,"        assertEquals ( ""parent"", ""remote"", ""lastUpdated"", mavenBuildTimestamp, parentLastUpdatedRemote );"
162604,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6957BuildConsumer.java,79,,"        verifier.assertArtifactContents( ""org.sonatype.mavenbook.multi"", ""parent"", ""0.9-MNG6957-SNAPSHOT"", ""pom"", content );"
162605,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6957BuildConsumer.java,79,,"        verifier.assertArtifactContents( ""org.sonatype.mavenbook.multi"", ""parent"", ""0.9-MNG6957-SNAPSHOT"", ""pom"", content );"
162606,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng6957BuildConsumer.java,79,,"        verifier.assertArtifactContents( ""org.sonatype.mavenbook.multi"", ""parent"", ""0.9-MNG6957-SNAPSHOT"", ""pom"", content );"
162607,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng7051OptionalProfileActivationTest.java,51,,"            verifier.executeGoal( ""validate"" );"
162608,./TargetProjects/maven-integration-testing/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng7051OptionalProfileActivationTest.java,75,,"        verifier.verifyTextInLog( ""[INFO] The requested optional profiles [non-existing-profile] could not be activated or deactivated because they do not exist."" );"
162609,./TargetProjects/maven-integration-testing/core-it-support/core-it-plugins/maven-it-plugin-expression/src/test/java/org/apache/maven/plugin/coreit/ExpressionUtilTest.java,63,,"        assertEquals( 3, ExpressionUtil.evaluate( ""array/*"", contexts ).size() );"
162610,./TargetProjects/maven-integration-testing/core-it-support/core-it-plugins/maven-it-plugin-expression/src/test/java/org/apache/maven/plugin/coreit/ExpressionUtilTest.java,73,,"        assertEquals( 3, ExpressionUtil.evaluate( ""list/*"", contexts ).size() );"
162611,./TargetProjects/maven-integration-testing/core-it-support/core-it-plugins/maven-it-plugin-expression/src/test/java/org/apache/maven/plugin/coreit/PropertyUtilTest.java,57,,"        PropertyUtil.store( props, ""arr"", new String[]{ ""one"", ""two"" } );"
162612,./TargetProjects/maven-integration-testing/core-it-support/core-it-plugins/maven-it-plugin-expression/src/test/java/org/apache/maven/plugin/coreit/PropertyUtilTest.java,57,,"        PropertyUtil.store( props, ""arr"", new String[]{ ""one"", ""two"" } );"
162613,./TargetProjects/maven-integration-testing/core-it-support/core-it-plugins/maven-it-plugin-expression/src/test/java/org/apache/maven/plugin/coreit/PropertyUtilTest.java,57,,"        PropertyUtil.store( props, ""arr"", new String[]{ ""one"", ""two"" } );"
162614,./TargetProjects/maven-integration-testing/core-it-support/core-it-plugins/maven-it-plugin-singleton-component/src/main/java/org/apache/maven/plugin/coreit/ItMojo.java,90,,"        getLog().info( ""[MAVEN-CORE-IT-LOG] Using component: "" + componentWithoutRoleHint );"
162615,./TargetProjects/maven-integration-testing/core-it-support/maven-it-helper/src/main/java/org/apache/maven/it/AbstractMavenIntegrationTestCase.java,97,,"            throw (RuntimeException) new IllegalArgumentException( ""Invalid version range: "" + versionRangeStr, e );"
162616,./TargetProjects/maven-integration-testing/core-it-support/maven-it-helper/src/main/java/org/apache/maven/it/AbstractMavenIntegrationTestCase.java,107,,"            out.println( ""WARNING: "" + getITName() + "": version range '"" + versionRange"
162617,./TargetProjects/maven-integration-testing/core-it-support/maven-it-helper/src/main/java/org/apache/maven/it/AbstractMavenIntegrationTestCase.java,107,,"            out.println( ""WARNING: "" + getITName() + "": version range '"" + versionRange"
162618,./TargetProjects/maven-integration-testing/core-it-support/maven-it-helper/src/main/java/org/apache/maven/it/AbstractMavenIntegrationTestCase.java,251,,"            out.println( AnsiSupport.warning( ""SKIPPED"" ) + "" - Maven version "" + getMavenVersion() + "" not in range """
162619,./TargetProjects/maven-integration-testing/core-it-support/maven-it-helper/src/main/java/org/apache/maven/it/AbstractMavenIntegrationTestCase.java,408,,"        @SuppressWarnings( ""checkstyle:visibilitymodifier"" )"
162620,./TargetProjects/maven-integration-testing/core-it-support/maven-it-helper/src/test/java/org/apache/maven/it/MavenIntegrationTestCaseTest.java,37,,"        assertVersionEquals( ""2.1.0-M1"", ""2.1.0-M1"", test );"
162621,./TargetProjects/maven-integration-testing/core-it-support/maven-it-helper/src/test/java/org/apache/maven/it/MavenIntegrationTestCaseTest.java,41,,"        assertVersionEquals( ""2.0.10"", ""2.0.10"", test );"
162622,./TargetProjects/maven-invoker/src/main/java/org/apache/maven/shared/invoker/MavenCommandLineBuilder.java,137,,"            if ( !getSystemEnvVars().containsKey( ""M2_HOME"" ) )"
162623,./TargetProjects/maven-invoker/src/main/java/org/apache/maven/shared/invoker/MavenCommandLineBuilder.java,165,,"                    + "". Using as-is."", e );"
162624,./TargetProjects/maven-invoker/src/test/java/org/apache/maven/shared/invoker/DefaultInvokerTest.java,51,,"        request.setGoals( Arrays.asList( ""clean"", ""package"" ) );"
162625,./TargetProjects/maven-invoker/src/test/java/org/apache/maven/shared/invoker/MavenCommandLineBuilderTest.java,111,,"        File lrd = temporaryFolder.newFolder( ""workdir"" ).getCanonicalFile();"
162626,./TargetProjects/maven-invoker/src/test/java/org/apache/maven/shared/invoker/MavenCommandLineBuilderTest.java,198,,"        String mavenHome = System.getProperty( ""maven.home"" );"
162627,./TargetProjects/maven-invoker/src/test/java/org/apache/maven/shared/invoker/MavenCommandLineBuilderTest.java,204,,"            appDir = temporaryFolder.newFolder( ""invoker-tests"", ""maven-home"" );"
162628,./TargetProjects/maven-invoker/src/test/java/org/apache/maven/shared/invoker/MavenCommandLineBuilderTest.java,348,,"        tcb.setReactorBehavior( newRequest().setProjects( Collections.singletonList( ""proj1"" ) ).setAlsoMake( true ),"
162629,./TargetProjects/maven-invoker/src/test/java/org/apache/maven/shared/invoker/MavenCommandLineBuilderTest.java,451,,"        File pomFile = createDummyFile( projectDir, ""non-standard-pom.xml"" ).getCanonicalFile();"
162630,./TargetProjects/maven-invoker/src/test/java/org/apache/maven/shared/invoker/MavenCommandLineBuilderTest.java,497,,"        File pomFile = createDummyFile( projectDir, ""pom.xml"" ).getCanonicalFile();"
162631,./TargetProjects/maven-invoker-plugin/src/main/java/org/apache/maven/plugins/invoker/AbstractInvokerMojo.java,135,,"    @Parameter( property = ""invoker.skip"", defaultValue = ""false"" )"
162632,./TargetProjects/maven-invoker-plugin/src/main/java/org/apache/maven/plugins/invoker/AbstractInvokerMojo.java,1017,,"            pomFile = new File( pomFile, ""pom.xml"" );"
162633,./TargetProjects/maven-invoker-plugin/src/main/java/org/apache/maven/plugins/invoker/VerifyMojo.java,52,,"    @Parameter( property = ""invoker.skip"", defaultValue = ""false"" )"
162634,./TargetProjects/maven-invoker-plugin/src/test/java/org/apache/maven/plugins/invoker/InterpolationTest.java,48,,"        project.setArtifactId( ""foo"" );"
162635,./TargetProjects/maven-invoker-plugin/src/test/java/org/apache/maven/plugins/invoker/InterpolationTest.java,49,,"        project.setGroupId( ""bar"" );"
162636,./TargetProjects/maven-invoker-plugin/src/test/java/org/apache/maven/plugins/invoker/InvokerMojoTest.java,92,,"        assertFalse( AbstractInvokerMojo.alreadyCloned( ""dir"", Collections.<String>emptyList() ) );"
162637,./TargetProjects/maven-invoker-plugin/src/test/java/org/apache/maven/plugins/invoker/InvokerPropertiesTest.java,74,,"        props.setProperty( ""key"", ""value"" );"
162638,./TargetProjects/maven-invoker-plugin/src/test/java/org/apache/maven/plugins/invoker/InvokerPropertiesTest.java,127,,"        props.setProperty( ""invoker.goals"", ""verify"" );"
162639,./TargetProjects/maven-invoker-plugin/src/test/java/org/apache/maven/plugins/invoker/InvokerPropertiesTest.java,127,,"        props.setProperty( ""invoker.goals"", ""verify"" );"
162640,./TargetProjects/maven-invoker-plugin/src/test/java/org/apache/maven/plugins/invoker/InvokerPropertiesTest.java,157,,"        props.setProperty( ""invoker.profiles"", ""verify"" );"
162641,./TargetProjects/maven-invoker-plugin/src/test/java/org/apache/maven/plugins/invoker/InvokerPropertiesTest.java,322,,"        props.setProperty( ""invoker.environmentVariables.KEY3"", ""value3"" );"
162642,./TargetProjects/maven-invoker-plugin/src/test/java/org/apache/maven/plugins/invoker/SelectorTest.java,38,,"        props.setProperty( ""invoker.maven.version"", ""3.0+"" );"
162643,./TargetProjects/maven-invoker-plugin/src/test/java/org/apache/maven/plugins/invoker/SelectorTest.java,38,,"        props.setProperty( ""invoker.maven.version"", ""3.0+"" );"
162644,./TargetProjects/maven-invoker-plugin/src/test/java/org/apache/maven/plugins/invoker/SelectorUtilsTest.java,56,,"        assertEquals( Arrays.asList( ""1.5"", ""1.6+"" ), includes );"
162645,./TargetProjects/maven-invoker-plugin/src/test/java/org/apache/maven/plugins/invoker/SelectorUtilsTest.java,90,,"        assertFalse( SelectorUtils.isJreVersion( Arrays.asList( 1, 4, 2, 8 ), ""1.5+"" ) );"
162646,./TargetProjects/maven-invoker-plugin/src/test/java/org/apache/maven/plugins/invoker/SelectorUtilsTest.java,95,,"        assertTrue( SelectorUtils.isJreVersion( Arrays.asList( 1, 4, 2, 8 ), ""1.5-"" ) );"
162647,./TargetProjects/maven-invoker-plugin/src/test/java/org/apache/maven/plugins/invoker/SelectorUtilsTest.java,107,,"        InvokerToolchain openJdk9 = new InvokerToolchain( ""jdk"" );"
162648,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractFixJavadocMojo.java,302,,"    @Parameter ( property = ""fixClassComment"", defaultValue = ""true"" )"
162649,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractFixJavadocMojo.java,2373,,"        sb.append( indent ).append( "" * @"" ).append( AUTHOR_TAG ).append( "" "" );"
162650,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractFixJavadocMojo.java,2990,,"        sb.append( ""<p>"" );"
162651,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,450,,"    @Parameter( property = ""debug"", defaultValue = ""false"" )"
162652,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,488,,"    @Parameter( property = ""maven.javadoc.failOnError"", defaultValue = ""true"" )"
162653,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,1416,,"    @Parameter( property = ""stylesheet"", defaultValue = ""java"" )"
162654,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,1911,,"        if ( ""pom"".equals( p.getPackaging().toLowerCase() ) )"
162655,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,2117,,"            throw new MavenReportException( ""IOException: "" + getOutputDirectory() + "" is not a directory."" );"
162656,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,2342,,"                if ( autoExclude && files.remove( ""module-info.java"" ) )"
162657,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,2726,,"                    ""Failed to resolve javadoc bundles from dependencies: "" + e.getMessage(), e );"
162658,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,3849,,"                     && ( !activeProxies.containsKey( ""http"" )"
162659,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,3904,,"                javadocExecutable = tc.findTool( ""javadoc"" );"
162660,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,3982,,"            javadocExe = new File( SystemUtils.getJavaHome() + File.separator + ""bin"", javadocCommand );"
162661,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,4617,,"                if ( currentFile.contains( ""doc-files"" ) )"
162662,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,4844,,"                ""Unable to write '"" + optionsFile.getName() + ""' temporary file for command execution"", e );"
162663,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,6746,,"                                    + link + "" with /"" + PACKAGE_LIST + "" or / "" + ELEMENT_LIST + "". Ignored it."" );"
162664,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/JavadocUtil.java,1161,,"                    log.debug( ""IOException: "" + e.getMessage() );"
162665,./TargetProjects/maven-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/StaleHelper.java,82,,"                        state.add( p + "" = "" + lastmod( p ) );"
162666,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/AbstractFixJavadocMojoTest.java,43,,"        String source = ""import java.net.ConnectException;\n"""
162667,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojoTest.java,62,,"        assertThat( mojo.isValidJavadocLink( new File( ""pom.xml"" ).getPath(), true ) ).isFalse();"
162668,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java,251,,"                ""     *"" + EOL +"
162669,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java,252,,"                ""     * Dummy"" + EOL +"
162670,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java,254,,"                ""     *      Method."" + EOL +"
162671,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java,256,,"                ""     * @param args not"" + EOL +"
162672,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java,258,,"                ""     * null"" + EOL +"
162673,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java,259,,"                ""     * @param i non negative"" + EOL +"
162674,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java,260,,"                ""     * @param object could"" + EOL +"
162675,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java,261,,"                ""     * be"" + EOL +"
162676,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java,262,,"                ""     *      null"" + EOL +"
162677,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java,263,,"                ""     * @return a"" + EOL +"
162678,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java,264,,"                ""     * String"" + EOL +"
162679,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java,266,,"                ""     * @throws Exception if"" + EOL +"
162680,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java,267,,"                ""     * any"" + EOL +"
162681,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java,345,,"        setVariableValueToObject( mojoInstance, ""fixTagsSplitted"", new String[] { ""all"" } );"
162682,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocReportTest.java,117,,"        setVariableValueToObject( mojo, ""session"", newMavenSession( currentProject ) );"
162683,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocReportTest.java,301,,"        assertThat( apidocs.resolve( ""index-all.html"" )).exists();"
162684,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocReportTest.java,302,,"        assertThat( apidocs.resolve( ""index.html"" )).exists();"
162685,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocReportTest.java,303,,"        assertThat( apidocs.resolve( ""overview-tree.html"" )).exists();"
162686,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocReportTest.java,304,,"        assertThat( apidocs.resolve( ""stylesheet.css"" )).exists();"
162687,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocReportTest.java,456,,"        assertThat( apidocs.resolve( ""options"" ) ).isRegularFile();"
162688,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocReportTest.java,763,,"        assertThat( content ).contains( ""<img src=\""doc-files/maven-feather.png\"" alt=\""Maven\"">"" );"
162689,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocReportTest.java,1246,,"        setVariableValueToObject( mojo, ""stylesheet"", ""javamaven"" );"
162690,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocReportTest.java,1281,,"        assertFalse( optionsContent.contains( ""-stylesheetfile"" ) );"
162691,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocReportTest.java,1293,,"        assertTrue( optionsContent.contains( ""'"" + stylesheetfile.toFile().getAbsolutePath().replaceAll( ""\\\\"", ""/"" ) + ""'"" ) );"
162692,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocReportTest.java,1374,,"        assertFalse( optionsContent.contains( ""-helpfile"" ) );"
162693,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocUtilTest.java,84,,"        version = ""java full version \""1.5.0_07-164\"""";"
162694,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocUtilTest.java,85,,"        assertEquals(  ""1.5.0"", JavadocUtil.extractJavadocVersion( version ) );"
162695,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocUtilTest.java,108,,"        version = ""java full version \""1.5.0_07-164\"""" + System.getProperty( ""line.separator"" );"
162696,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocUtilTest.java,188,,"        assertEquals( JavadocUtil.parseJavadocMemory( memory ), ""128m"" );"
162697,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocUtilTest.java,339,,"        authentications.put( ""foo"", ""bar"" );"
162698,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocUtilTest.java,339,,"        authentications.put( ""foo"", ""bar"" );"
162699,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocUtilTest.java,352,,"            proxy.setProtocol( ""http"" );"
162700,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocUtilTest.java,499,,"            handler.setNewContextURL( ""http://localhost:"" + redirectPort );"
162701,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocUtilTest.java,618,,"                    Paths.get( ""test"", ""doc-files"", ""excluded-dir1"", ""sample-excluded1.gif"" ).toFile(),"
162702,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocUtilTest.java,618,,"                    Paths.get( ""test"", ""doc-files"", ""excluded-dir1"", ""sample-excluded1.gif"" ).toFile(),"
162703,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocUtilTest.java,620,,"                    Paths.get( ""test"", ""doc-files"", ""included-dir1"", ""sample-included1.gif"" ).toFile(),"
162704,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocUtilTest.java,621,,"                    Paths.get( ""test"", ""doc-files"", ""included-dir2"", ""sample-included2.gif"" ).toFile()"
162705,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocVersionTest.java,38,,"        assertThat( JavadocVersion.parse( ""1.4"" ) )"
162706,./TargetProjects/maven-javadoc-plugin/src/test/java/org/apache/maven/plugins/javadoc/JavadocVersionTest.java,39,,"                .isLessThan( JavadocVersion.parse( ""1.4.2"" ) )"
162707,./TargetProjects/maven-javadoc-plugin/src/test/resources/unit/fix-test/expected/src/main/java/fix/test/ClassWithJavadoc.java,28,,"@SuppressWarnings(""SameReturnValue"")"
162708,./TargetProjects/maven-javadoc-plugin/src/test/resources/unit/fix-test/expected/src/main/java/fix/test/ClassWithNoJavadoc.java,30,,"@SuppressWarnings(""SameReturnValue"")"
162709,./TargetProjects/maven-javadoc-plugin/src/test/resources/unit/fix-test/src/main/java/fix/test/ClassWithJavadoc.java,25,,"@SuppressWarnings(""SameReturnValue"")"
162710,./TargetProjects/maven-javadoc-plugin/src/test/resources/unit/fix-test/src/main/java/fix/test/ClassWithNoJavadoc.java,24,,"@SuppressWarnings(""SameReturnValue"")"
162711,./TargetProjects/maven-jdeps-plugin/src/test/java/org/apache/maven/plugins/jdeps/consumers/JDepsConsumerTest.java,42,,"        assertEquals( ""JDK internal API (java.base)"", consumer.getOffendingPackages().get( ""sun.misc"" ) );"
162712,./TargetProjects/maven-jlink-plugin/src/main/java/org/apache/maven/plugins/jlink/JLinkMojo.java,87,,"    @Parameter( defaultValue = ""false"" )"
162713,./TargetProjects/maven-jxr/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/AbstractJxrReport.java,382,,"            File destStylesheetFile = new File( dir, ""stylesheet.css"" );"
162714,./TargetProjects/maven-jxr/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrReport.java,91,,"        if ( !""pom"".equals( getProject().getPackaging().toLowerCase( Locale.US ) ) )"
162715,./TargetProjects/maven-jxr/maven-jxr-plugin/src/test/java/org/apache/maven/plugin/jxr/JxrReportTest.java,46,,"        File resourcesDir = new File( getBasedir(), ""src/test/resources/unit/default-configuration"" );"
162716,./TargetProjects/maven-jxr/maven-jxr-plugin/src/test/java/org/apache/maven/plugin/jxr/JxrReportTest.java,49,,"        File xrefDir = new File( outputDir, ""xref"" );"
162717,./TargetProjects/maven-jxr/maven-jxr-plugin/src/test/java/org/apache/maven/plugin/jxr/JxrReportTest.java,51,,"        FileUtils.copyDirectory( new File( resourcesDir, ""javadoc-files"" ), outputDir );"
162718,./TargetProjects/maven-jxr/maven-jxr-plugin/src/test/java/org/apache/maven/plugin/jxr/JxrReportTest.java,54,,"        JxrReport mojo = (JxrReport) lookupMojo( ""jxr"", testPom );"
162719,./TargetProjects/maven-jxr/maven-jxr-plugin/src/test/java/org/apache/maven/plugin/jxr/JxrReportTest.java,58,,"        assertTrue( new File( xrefDir, ""allclasses-frame.html"" ).exists() );"
162720,./TargetProjects/maven-jxr/maven-jxr-plugin/src/test/java/org/apache/maven/plugin/jxr/JxrReportTest.java,59,,"        assertTrue( new File( xrefDir, ""index.html"" ).exists() );"
162721,./TargetProjects/maven-jxr/maven-jxr-plugin/src/test/java/org/apache/maven/plugin/jxr/JxrReportTest.java,60,,"        assertTrue( new File( xrefDir, ""overview-frame.html"" ).exists() );"
162722,./TargetProjects/maven-jxr/maven-jxr-plugin/src/test/java/org/apache/maven/plugin/jxr/JxrReportTest.java,61,,"        assertTrue( new File( xrefDir, ""overview-summary.html"" ).exists() );"
162723,./TargetProjects/maven-jxr/maven-jxr-plugin/src/test/java/org/apache/maven/plugin/jxr/JxrReportTest.java,62,,"        assertTrue( new File( xrefDir, ""stylesheet.css"" ).exists() );"
162724,./TargetProjects/maven-jxr/maven-jxr-plugin/src/test/java/org/apache/maven/plugin/jxr/JxrReportTest.java,63,,"        assertTrue( new File( xrefDir, ""def/configuration/App.html"" ).exists() );"
162725,./TargetProjects/maven-jxr/maven-jxr-plugin/src/test/java/org/apache/maven/plugin/jxr/JxrReportTest.java,64,,"        assertTrue( new File( xrefDir, ""def/configuration/AppSample.html"" ).exists() );"
162726,./TargetProjects/maven-jxr/maven-jxr-plugin/src/test/java/org/apache/maven/plugin/jxr/JxrReportTest.java,65,,"        assertTrue( new File( xrefDir, ""def/configuration/package-frame.html"" ).exists() );"
162727,./TargetProjects/maven-jxr/maven-jxr-plugin/src/test/java/org/apache/maven/plugin/jxr/JxrReportTest.java,66,,"        assertTrue( new File( xrefDir, ""def/configuration/package-summary.html"" ).exists() );"
162728,./TargetProjects/maven-jxr/maven-jxr-plugin/src/test/java/org/apache/maven/plugin/jxr/JxrReportTest.java,70,,"        assertTrue( str.toLowerCase().contains( ""/apidocs/def/configuration/appsample.html\"""" ) );"
162729,./TargetProjects/maven-jxr/maven-jxr-plugin/src/test/java/org/apache/maven/plugin/jxr/JxrReportTest.java,73,,"        assertTrue( str.toLowerCase().contains( ""/apidocs/def/configuration/app.html\"""".toLowerCase() ) );"
162730,./TargetProjects/maven-jxr/maven-jxr-plugin/src/test/java/org/apache/maven/plugin/jxr/JxrReportTest.java,76,,"        assertTrue( str.contains( ""text/html; charset=UTF-8"" ) );"
162731,./TargetProjects/maven-jxr/maven-jxr/src/main/java/org/apache/maven/jxr/JavaCodeTransform.java,317,,"        out.println( ""\"">"" );"
162732,./TargetProjects/maven-jxr/maven-jxr/src/main/java/org/apache/maven/jxr/JavaCodeTransform.java,415,,"                    + ""\"">"" + linenumber + ""</a>"" + getLineWidth( linenumber ) );"
162733,./TargetProjects/maven-jxr/maven-jxr/src/main/java/org/apache/maven/jxr/JavaCodeTransform.java,582,,"                        StringUtils.replace( line, uri, ""<a href=\"""" + uri + ""\"" target=\""alexandria_uri\"">"" + uri"
162734,./TargetProjects/maven-jxr/maven-jxr/src/test/java/org/apache/maven/jxr/JavaCodeTransformTest.java,67,,"           , Locale.ENGLISH, ""ISO-8859-1"", ""ISO-8859-1"", Paths.get( ""."" ), """", """" );"
162735,./TargetProjects/maven-jxr/maven-jxr/src/test/java/org/apache/maven/jxr/util/SimpleWordTokenizerTest.java,36,,"        assertEquals( ""public"", entries.get(0).toString() );"
162736,./TargetProjects/maven-jxr/maven-jxr/src/test/java/org/apache/maven/jxr/util/SimpleWordTokenizerTest.java,39,,"        assertEquals( ""void"", entries.get(1).toString() );"
162737,./TargetProjects/maven-jxr/maven-jxr/src/test/java/org/apache/maven/jxr/util/SimpleWordTokenizerTest.java,45,,"        assertEquals( ""App"", entries.get(3).toString() );"
162738,./TargetProjects/maven-jxr/maven-jxr/src/test/java/org/apache/maven/jxr/util/SimpleWordTokenizerTest.java,48,,"        assertEquals( ""app"", entries.get(4).toString() );"
162739,./TargetProjects/maven-linkcheck-plugin/src/main/java/org/apache/maven/plugins/linkcheck/LinkcheckReportGenerator.java,131,,"        String name = i18n.getString( ""linkcheck-report"", locale, ""report.linkcheck.name"" );"
162740,./TargetProjects/maven-linkcheck-plugin/src/main/java/org/apache/maven/plugins/linkcheck/LinkcheckReportGenerator.java,246,,"            sink.text( i18n.getString( ""linkcheck-report"", locale, ""report.linkcheck.summary.table.none"" ) );"
162741,./TargetProjects/maven-linkcheck-plugin/src/main/java/org/apache/maven/plugins/linkcheck/SiteInvoker.java,220,,"            getLog().error( ""IOException: "" + e.getMessage() );"
162742,./TargetProjects/maven-mapping/src/test/java/org/apache/maven/shared/mapping/MappingUtilsTest.java,42,,"        jar.setGroupId( ""org.apache.sample"" );"
162743,./TargetProjects/maven-mapping/src/test/java/org/apache/maven/shared/mapping/MappingUtilsTest.java,43,,"        jar.setArtifactId( ""maven-test-lib"" );"
162744,./TargetProjects/maven-mapping/src/test/java/org/apache/maven/shared/mapping/MappingUtilsTest.java,44,,"        jar.setVersion( ""1.0"" );"
162745,./TargetProjects/maven-mercury/mercury-ant-tasks/src/test/java/org/apache/maven/mercury/ant/tasks/MercuryAntTest.java,61,,"    static final String _remoteRepoUrlSufix = ""/maven2"";"
162746,./TargetProjects/maven-mercury/mercury-ant-tasks/src/test/java/org/apache/maven/mercury/ant/tasks/MercuryAntTest.java,135,,"        System.out.println( ""========> start "" + title );"
162747,./TargetProjects/maven-mercury/mercury-ant-tasks/src/test/java/org/apache/maven/mercury/ant/tasks/MercuryAntTest.java,138,,"        File af = new File( _compileDirFile, ""T.class"" );"
162748,./TargetProjects/maven-mercury/mercury-ant-tasks/src/test/java/org/apache/maven/mercury/ant/tasks/MercuryBootstrapTest.java,135,,"        System.out.println( ""========> start "" + title );"
162749,./TargetProjects/maven-mercury/mercury-ant-tasks/src/test/java/org/apache/maven/mercury/ant/tasks/MercuryBootstrapTest.java,138,,"        File a0 = new File( _localRepoDirFile, ""g0/a0/v0/a0-v0.jar"" );"
162750,./TargetProjects/maven-mercury/mercury-ant-tasks/src/test/java/org/apache/maven/mercury/ant/tasks/MercuryBootstrapTest.java,139,,"        File a1 = new File( _localRepoDirFile, ""g1/a1/v1/a1-v1.jar"" );"
162751,./TargetProjects/maven-mercury/mercury-ant-tasks/src/test/java/org/apache/maven/mercury/ant/tasks/MercuryBootstrapTest.java,140,,"        File a2 = new File( _localRepoDirFile, ""g2/a2/v2/a2-v2.jar"" );"
162752,./TargetProjects/maven-mercury/mercury-core/src/main/java/org/apache/maven/mercury/util/FileUtil.java,719,,"                                                                                                                                                       ""keyring"" );"
162753,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/DependencyFilterTest.java,61,,"        exc.add( new ArtifactMetadata( ""b:b:2.0.1"" ) );"
162754,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/DependencyFilterTest.java,74,,"        assertTrue( a1.allowDependency( new ArtifactMetadata( ""a:a:2.0.0"" ) ) );"
162755,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/DependencyFilterTest.java,75,,"        assertTrue( a1.allowDependency( new ArtifactMetadata( ""b:b:1.0.0"" ) ) );"
162756,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/DependencyFilterTest.java,76,,"        assertTrue( a1.allowDependency( new ArtifactMetadata( ""c:c:1.0.0"" ) ) );"
162757,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/version/ComparableVersionTest.java,64,,"                assertTrue( ""expected "" + low + "" < "" + high, low.compareTo( high ) < 0 );"
162758,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/version/ComparableVersionTest.java,102,,"        checkVersionsEqual( ""1"", ""1.0"" );"
162759,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/version/ComparableVersionTest.java,103,,"        checkVersionsEqual( ""1"", ""1.0.0"" );"
162760,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/version/ComparableVersionTest.java,130,,"        checkVersionsEqual( ""1m3"", ""1milestone3"" );"
162761,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/version/ComparableVersionTest.java,154,,"        checkVersionsOrder( ""1.0"", ""1.1"" );"
162762,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/version/ComparableVersionTest.java,160,,"        checkVersionsOrder( ""1.0-alpha-1"", ""1.0"" );"
162763,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/version/DefaultArtifactVersionTest.java,43,,"            ""'"" + version + ""' parsed as ('"" + artifactVersion.getMajorVersion() + ""', '"""
162764,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/version/DefaultArtifactVersionTest.java,64,,"        checkVersionParsing( ""2.0-1"", 2, 0, 0, 1, null );"
162765,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/version/DefaultArtifactVersionTest.java,95,,"        assertVersionEqual( ""1"", ""1.0"" );"
162766,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/version/DefaultArtifactVersionTest.java,97,,"        assertVersionOlder( ""1.0"", ""1.1"" );"
162767,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/version/DefaultArtifactVersionTest.java,102,,"        assertVersionOlder( ""1.0-alpha-1"", ""1.0"" );"
162768,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/version/DefaultArtifactVersionTest.java,107,,"        assertVersionOlder( ""1.0-beta-1"", ""1.0-SNAPSHOT"" );"
162769,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/version/DefaultArtifactVersionTest.java,109,,"        assertVersionOlder( ""1.0-alpha-1-SNAPSHOT"", ""1.0-alpha-1"" );"
162770,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/version/DefaultArtifactVersionTest.java,133,,"        assertVersionEqual( ""1-SNAPSHOT"", ""1-SNAPSHOT"" );"
162771,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/artifact/version/DefaultArtifactVersionTest.java,139,,"        assertVersionOlder( ""1.0-SNAPSHOT"", ""1.1-SNAPSHOT"" );"
162772,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/crypto/pgp/PgpStreamVerifierTest.java,92,,"        InputStream in = getClass().getResourceAsStream( ""/file.gif"" );"
162773,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/metadata/DependencyTreeBuilderTest.java,114,,"        ArtifactMetadata md = new ArtifactMetadata( ""a:a:2"" );"
162774,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/metadata/DependencyTreeBuilderTest.java,117,,"        assertNotNull( ""null tree built"", root );"
162775,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/metadata/DependencyTreeBuilderTest.java,118,,"        assertEquals( ""wrong tree size"", 4, root.countNodes() );"
162776,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/metadata/DependencyTreeBuilderTest.java,132,,"        assertNotNull( ""null resolution"", res );"
162777,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/metadata/DependencyTreeBuilderTest.java,135,,"        assertTrue( ""no a:a:2 in the result"", assertHasArtifact( res, ""a:a:2"" ) );"
162778,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/metadata/DependencyTreeBuilderTest.java,136,,"        assertTrue( ""no b:b:2 in the result"", assertHasArtifact( res, ""b:b:2"" ) );"
162779,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/metadata/DependencyTreeBuilderTest.java,136,,"        assertTrue( ""no b:b:2 in the result"", assertHasArtifact( res, ""b:b:2"" ) );"
162780,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/metadata/DependencyTreeBuilderTest.java,137,,"        assertTrue( ""no c:c:2 in the result"", assertHasArtifact( res, ""c:c:2"" ) );"
162781,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/metadata/DependencyTreeBuilderTest.java,137,,"        assertTrue( ""no c:c:2 in the result"", assertHasArtifact( res, ""c:c:2"" ) );"
162782,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/metadata/DependencyTreeBuilderTest.java,146,,"        ArtifactMetadata md = new ArtifactMetadata( ""a:a:4"" );"
162783,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/metadata/sat/DefaultSatSolverTest.java,73,,"        list.add( new MetadataTreeNode( new ArtifactMetadata( ""a:a:1"" ), null, null ) );"
162784,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/metadata/sat/DefaultSatSolverTest.java,103,,"        System.out.println( ""\n\n==========================\n"" + title + ""\n"" );"
162785,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/metadata/sat/DefaultSatSolverTest.java,107,,"        ArtifactMetadata c2q = new ArtifactMetadata( ""t:c:[2,4)"" );"
162786,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/metadata/sat/DefaultSatSolverTest.java,229,,"        System.out.print( ""model: "" );"
162787,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/metadata/sat/DefaultSatSolverTest.java,236,,"        System.out.print( ""Result:"" );"
162788,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/repository/local/flat/LocalRepositoryFlatTest.java,100,,"        System.out.println( test + "": test repo is in "" + _repo.getDirectory() );"
162789,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/repository/metadata/MetadataBuilderTest.java,53,,"        File temp = new File( testBase, ""group-maven-metadata-write.xml"" );"
162790,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/repository/metadata/MetadataBuilderTest.java,86,,"        File groupMd = new File( testBase, ""group-maven-metadata.xml"" );"
162791,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/repository/metadata/MetadataBuilderTest.java,109,,"        md.setVersion( ""1.0.0"" );"
162792,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyDeployerTest.java,213,,"        _file0 = new File( _baseDir, ""file0.txt"" );"
162793,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyDeployerTest.java,214,,"        _file1 = new File( _baseDir, ""file1.txt"" );"
162794,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyDeployerTest.java,215,,"        _file2 = new File( _baseDir, ""file2.txt"" );"
162795,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyDeployerTest.java,216,,"        _file3 = new File( _baseDir, ""file3.jar"" );"
162796,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyDeployerTest.java,217,,"        _file4 = new File( _baseDir, ""file4.so"" );"
162797,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyDeployerTest.java,218,,"        _file5 = new File( _baseDir, ""file5.jpg"" );"
162798,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyDeployerTest.java,219,,"        _file6 = new File( _baseDir, ""file6.gif"" );"
162799,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyDeployerTest.java,241,,"        File f0cs = new File( _putServer.getPutDir(), ""file0.txt.sha1"" );"
162800,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyDeployerTest.java,256,,"        File f5cs = new File( _putServer.getPutDir(), ""file5.jpg.sha1"" );"
162801,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyDeployerTest.java,380,,"        File file6 = new File( _baseDir, ""file6.txt"" );// doesn't exist"
162802,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyDeployerTest.java,381,,"        File file7 = new File( _baseDir, ""file7.txt"" );// doesn't exist"
162803,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyRetrieverTest.java,187,,"        file0 = new File( dir, ""file0.txt"" );"
162804,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyRetrieverTest.java,188,,"        file1 = new File( dir, ""file1.txt"" );"
162805,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyRetrieverTest.java,189,,"        file2 = new File( dir, ""file2.txt"" );"
162806,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyRetrieverTest.java,190,,"        file3 = new File( dir, ""file3.jar"" );"
162807,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyRetrieverTest.java,191,,"        file4 = new File( dir, ""file4.so"" );"
162808,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/client/JettyRetrieverTest.java,192,,"        file5 = new File( dir, ""file5.jpg"" );"
162809,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/server/BatchFilterTest.java,98,,"        request.setMethod( ""PUT"" );"
162810,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/server/BatchFilterTest.java,99,,"        request.setVersion( ""HTTP/1.1"" );"
162811,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/server/BatchFilterTest.java,100,,"        request.setHeader( ""Host"", ""tester"" );"
162812,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/server/BatchFilterTest.java,100,,"        request.setHeader( ""Host"", ""tester"" );"
162813,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/server/BatchFilterTest.java,102,,"        request.setHeader( ""Content-Type"", ""text/plain"" );"
162814,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/server/BatchFilterTest.java,102,,"        request.setHeader( ""Content-Type"", ""text/plain"" );"
162815,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/server/BatchFilterTest.java,126,,"        request.setHeader( ""Jetty-Batch-Id"", ""999999"" );"
162816,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/server/BatchFilterTest.java,126,,"        request.setHeader( ""Jetty-Batch-Id"", ""999999"" );"
162817,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/server/BatchFilterTest.java,134,,"        File stagedFile = new File( batchDir, ""file1.txt"" );"
162818,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/spi/http/server/BatchFilterTest.java,151,,"        stagedFile = new File( batchDir, ""file2.txt"" );"
162819,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/util/FileUtilTest.java,218,,"                    say( ""Thread1: lock "" + dir + "" obtained"" );"
162820,./TargetProjects/maven-mercury/mercury-core/src/test/java/org/apache/maven/mercury/util/FileUtilTest.java,230,,"                    say( ""Thread1: lock "" + dir + "" released"" );"
162821,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/dependency/tests/DependencyTreeBuilderTest.java,62,,"    String repoUrl = ""http://repo1.maven.org/maven2"";"
162822,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/dependency/tests/DependencyTreeBuilderTest.java,156,,"        assertNotNull( ""null tree built"", root );"
162823,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/plexus/DefaultPlexusMercuryTest.java,324,,"        Server central = new Server( ""central"", new URL( ""http://repo1.maven.org/maven2"" ) );"
162824,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/plexus/DefaultPlexusMercuryTest.java,324,,"        Server central = new Server( ""central"", new URL( ""http://repo1.maven.org/maven2"" ) );"
162825,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/plexus/DefaultPlexusMercuryTest.java,329,,"        String artifactId = ""asm:asm-xml:3.0"";"
162826,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/plexus/DefaultPlexusMercuryTest.java,339,,"        assertTrue( assertHasArtifact( res, ""asm:asm-util:3.0"" ) );"
162827,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/plexus/DefaultPlexusMercuryTest.java,340,,"        assertTrue( assertHasArtifact( res, ""asm:asm-tree:3.0"" ) );"
162828,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/plexus/DefaultPlexusMercuryTest.java,341,,"        assertTrue( assertHasArtifact( res, ""asm:asm:3.0"" ) );"
162829,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/AbstractRepositoryReaderM2Test.java,158,,"        ArtifactMetadata a3 = new ArtifactMetadata( ""a:a:3"" );"
162830,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/AbstractRepositoryWriterM2Test.java,142,,"        FileUtil.writeRawData( getClass().getResourceAsStream( ""/maven-core-2.0.9.jar"" ), artifactBinary );"
162831,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/AbstractRepositoryWriterM2Test.java,177,,"        assertFalse( new File( targetDirectory, ""/org/apache/maven/maven-core/"" + repo.getMetadataName() ).exists() );"
162832,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/AbstractRepositoryWriterM2Test.java,181,,"        assertFalse( new File( targetDirectory, ""/org/apache/maven/maven-core/2.0.9/"" + repo.getMetadataName() ).exists() );"
162833,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/AbstractRepositoryWriterM2Test.java,340,,"            assertTrue( fn + "" does not exist"", af.exists() );"
162834,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/AbstractRepositoryWriterM2Test.java,389,,"                new DefaultArtifact( new ArtifactMetadata( ""org.apache.maven:maven-core:2.0."" + si + ""-SNAPSHOT"" ) );"
162835,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/AbstractRepositoryWriterM2Test.java,420,,"                targetDirectory.getAbsolutePath() + ""/org/apache/maven/maven-core/2.0."" + si"
162836,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/AbstractRepositoryWriterM2Test.java,421,,"                    + ""-SNAPSHOT/maven-core-2.0."" + si + ""-SNAPSHOT.jar"";"
162837,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/AbstractRepositoryWriterM2Test.java,421,,"                    + ""-SNAPSHOT/maven-core-2.0."" + si + ""-SNAPSHOT.jar"";"
162838,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/AbstractRepositoryWriterM2Test.java,430,,"                    + ""-SNAPSHOT/maven-core-2.0."" + si + ""-SNAPSHOT.pom"";"
162839,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/AbstractRepositoryWriterM2Test.java,438,,"                targetDirectory.getAbsolutePath() + ""/org/apache/maven/maven-mercury/2.0."" + si"
162840,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/AbstractRepositoryWriterM2Test.java,439,,"                    + ""-SNAPSHOT/maven-mercury-2.0."" + i + ""-SNAPSHOT.jar"";"
162841,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/ComprehensiveRepositoryTest.java,297,,"        String name = ""org.apache.maven:maven-core:2.0.9"";"
162842,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/ComprehensiveRepositoryTest.java,299,,"        File af = new File( _resourceBase, ""maven-core-2.0.9.jar"" );"
162843,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/ComprehensiveRepositoryTest.java,300,,"        File ap = new File( _resourceBase, ""maven-core-2.0.9.pom"" );"
162844,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/ComprehensiveRepositoryTest.java,302,,"        File aJar1 = new File( _base1, ""org/apache/maven/maven-core/2.0.9/maven-core-2.0.9.jar"" );"
162845,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/ComprehensiveRepositoryTest.java,337,,"        File aJar1 = new File( _base1, ""org/apache/maven/maven-core/2.0.9/maven-core-2.0.9.pom"" );"
162846,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/ComprehensiveRepositoryTest.java,367,,"        String name = ""org.apache.maven:maven-core:2.0.9-20090204.232323-23"";"
162847,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/ComprehensiveRepositoryTest.java,373,,"            new File( _base1, ""org/apache/maven/maven-core/2.0.9-SNAPSHOT/maven-core-2.0.9-20090204.232323-23.jar"" );"
162848,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/ComprehensiveRepositoryTest.java,441,,"        String name = ""org.apache.maven:maven-core:2.0.9-SNAPSHOT"";"
162849,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/ComprehensiveRepositoryTest.java,446,,"        File aJar1 = new File( _base1, ""org/apache/maven/maven-core/2.0.9-SNAPSHOT/maven-core-2.0.9-SNAPSHOT.jar"" );"
162850,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/ComprehensiveRepositoryTest.java,504,,"        String nameTS2 = ""org.apache.maven:maven-core:2.0.9-20090204.232324-24"";"
162851,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/ComprehensiveRepositoryTest.java,515,,"        aJar = new File( _base2, ""org/apache/maven/maven-core/2.0.9-SNAPSHOT/maven-core-2.0.9-20090204.232324-24.jar"" );"
162852,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/ComprehensiveRepositoryTest.java,532,,"        assertEquals( ""2.0.9-20090204.232324-24"", aSN.getVersion() );"
162853,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/ComprehensiveRepositoryTest.java,713,,"        String nameRL = ""org.apache.maven:maven-core:2.0.8"";"
162854,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/ComprehensiveRepositoryTest.java,726,,"        aJar = new File( _base2, ""org/apache/maven/maven-core/2.0.8/maven-core-2.0.8.jar"" );"
162855,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/DavServerTest.java,157,,"        FileUtil.writeRawData( pom, ""test-pom"" );"
162856,./TargetProjects/maven-mercury/mercury-it/src/test/java/org/apache/maven/mercury/repository/tests/DavServerTest.java,159,,"        DefaultArtifact da = new DefaultArtifact( new ArtifactMetadata( ""a:test:1.0"" ) );"
162857,./TargetProjects/maven-mercury/mercury-wagon/src/main/java/org/apache/maven/wagon/mercury/MercuryWagon.java,89,,"      {""http:"",      ""http:""}"
162858,./TargetProjects/maven-mercury/mercury-wagon/src/main/java/org/apache/maven/wagon/mercury/MercuryWagon.java,90,,"    , {""https:"",     ""https:""}"
162859,./TargetProjects/maven-patch-plugin/src/main/java/org/apache/maven/plugin/patch/ApplyMojo.java,91,,"    @Parameter( defaultValue = ""true"" )"
162860,./TargetProjects/maven-patch-plugin/src/main/java/org/apache/maven/plugin/patch/ApplyMojo.java,105,,"    @Parameter( alias = ""patch.apply.skip"", defaultValue = ""false"" )"
162861,./TargetProjects/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/PdfMojo.java,626,,"                siteDirectory.exists() ? FileUtils.getFileNames( siteDirectory, ""**/*"", excludes, false )"
162862,./TargetProjects/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/PdfMojo.java,699,,"        model.getCover().setCoverType( i18n.getString( ""pdf-plugin"", getDefaultLocale(), ""toc.type"" ) );"
162863,./TargetProjects/maven-pdf-plugin/src/test/java/org/apache/maven/plugins/pdf/DocumentModelBuilderTest.java,74,,"        assertEquals( ""Test Name"", cover.getProjectName() );"
162864,./TargetProjects/maven-plugin-testing/maven-plugin-testing-harness/src/main/java/org/apache/maven/plugin/testing/AbstractMojoTestCase.java,471,,"            configuration = new Xpp3Dom( ""configuration"" );"
162865,./TargetProjects/maven-plugin-testing/maven-plugin-testing-harness/src/main/java/org/apache/maven/plugin/testing/ArtifactStubFactory.java,107,,"        return createArtifact( groupId, artifactId, version, Artifact.SCOPE_COMPILE, ""jar"", """" );"
162866,./TargetProjects/maven-plugin-testing/maven-plugin-testing-harness/src/main/java/org/apache/maven/plugin/testing/ArtifactStubFactory.java,331,,"        return createArtifact( ""testGroupId"", ""release"", ""1.0"" );"
162867,./TargetProjects/maven-plugin-testing/maven-plugin-testing-harness/src/test/java/org/apache/maven/plugin/testing/MojoRuleTest.java,91,,"        assertEquals( ""valueOne"", pluginConfiguration.getChild( ""keyOne"" ).getValue() );"
162868,./TargetProjects/maven-plugin-testing/maven-plugin-testing-harness/src/test/java/org/apache/maven/plugin/testing/MojoRuleTest.java,91,,"        assertEquals( ""valueOne"", pluginConfiguration.getChild( ""keyOne"" ).getValue() );"
162869,./TargetProjects/maven-plugin-testing/maven-plugin-testing-harness/src/test/java/org/apache/maven/plugin/testing/MojoRuleTest.java,93,,"        assertEquals( ""valueTwo"", pluginConfiguration.getChild( ""keyTwo"" ).getValue() );"
162870,./TargetProjects/maven-plugin-testing/maven-plugin-testing-harness/src/test/java/org/apache/maven/plugin/testing/MojoTestCaseTest.java,74,,"        assertEquals( ""valueOne"", pluginConfiguration.getChild( ""keyOne"" ).getValue() );"
162871,./TargetProjects/maven-plugin-testing/maven-plugin-testing-harness/src/test/java/org/apache/maven/plugin/testing/MojoTestCaseTest.java,74,,"        assertEquals( ""valueOne"", pluginConfiguration.getChild( ""keyOne"" ).getValue() );"
162872,./TargetProjects/maven-plugin-testing/maven-plugin-testing-harness/src/test/java/org/apache/maven/plugin/testing/MojoTestCaseTest.java,76,,"        assertEquals( ""valueTwo"", pluginConfiguration.getChild( ""keyTwo"" ).getValue() );"
162873,./TargetProjects/maven-plugin-testing/maven-plugin-testing-harness/src/test/java/org/apache/maven/plugin/testing/ParametersMojoTest.java,42,,"        ParametersMojo mojo = (ParametersMojo) lookupConfiguredMojo( project, ""parameters"" );"
162874,./TargetProjects/maven-plugin-testing/maven-plugin-testing-harness/src/test/java/org/apache/maven/plugin/testing/ParametersMojoTest.java,70,,"        session.getUserProperties().put( ""property"", ""propertyValue"" );"
162875,./TargetProjects/maven-plugin-tools/maven-plugin-plugin/src/main/java/org/apache/maven/plugin/plugin/PluginReport.java,592,,"                : getBundle( locale ).getString( ""report.plugin.systemrequirements.nominimum"" ) ) );"
162876,./TargetProjects/maven-plugin-tools/maven-plugin-tools-api/src/test/java/org/apache/maven/tools/plugin/scanner/DefaultMojoScannerTest.java,67,,"        extractors.put( ""one"", new ScannerTestExtractor( ""one"" ) );"
162877,./TargetProjects/maven-plugin-tools/maven-plugin-tools-api/src/test/java/org/apache/maven/tools/plugin/scanner/DefaultMojoScannerTest.java,69,,"        extractors.put( ""three"", new ScannerTestExtractor( ""three"" ) );"
162878,./TargetProjects/maven-plugin-tools/maven-plugin-tools-api/src/test/java/org/apache/maven/tools/plugin/util/PluginUtilsTest.java,33,,"        assertEquals( ""artifactId"", PluginDescriptor.getGoalPrefixFromArtifactId( ""maven-artifactId-plugin"" ) );"
162879,./TargetProjects/maven-plugin-tools/maven-plugin-tools-generators/src/main/java/org/apache/maven/tools/plugin/generator/PluginHelpGenerator.java,191,,"            properties.put( ""helpPackageName"", this.helpPackageName );"
162880,./TargetProjects/maven-plugin-tools/maven-plugin-tools-generators/src/main/java/org/apache/maven/tools/plugin/generator/PluginXdocGenerator.java,187,,"        w.addAttribute( ""name"", mojoDescriptor.getFullGoalName() );"
162881,./TargetProjects/maven-plugin-tools/maven-plugin-tools-generators/src/main/java/org/apache/maven/tools/plugin/generator/PluginXdocGenerator.java,205,,"            w.startElement( ""div"" );"
162882,./TargetProjects/maven-plugin-tools/maven-script/maven-plugin-tools-ant/src/test/java/org/apache/maven/tools/plugin/extractor/ant/AntMojoDescriptorExtractorTest.java,85,,"            assertNotNull( ""Mojo descriptor: "" + desc.getGoal() + "" is missing 'basedir' parameter."", paramMap.get( ""basedir"" ) );"
162883,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,150,,"        addProperty( properties, ""maven.build.dir"","
162884,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,157,,"                     ""${maven.build.dir}/"""
162885,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,161,,"        addProperty( properties, ""project.build.outputDirectory"", ""${maven.build.outputDir}"" );"
162886,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,285,,"        writer.addAttribute( ""name"", project.getArtifactId() + ""-from-maven"" );"
162887,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,286,,"        writer.addAttribute( ""default"", ""package"" );"
162888,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,287,,"        writer.addAttribute( ""basedir"", ""."" );"
162889,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,398,,"        writer.addAttribute( ""file"", DEFAULT_MAVEN_BUILD_FILENAME );"
162890,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,405,,"        writer.startElement( ""target"" );"
162891,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,408,,"        writer.startElement( ""echo"" );"
162892,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,443,,"        writer.startElement( ""property"" );"
162893,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,459,,"        writer.addAttribute( ""value"", project.getBuild().getFinalName() );"
162894,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,620,,"        writeBuildPathDefinition( writer, ""build.test.classpath"", project.getTestArtifacts() );"
162895,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,634,,"            writer.startElement( ""pathelement"" );"
162896,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,643,,"                path = ""${maven.repo.local}/"" + artifactResolverWrapper.getLocalArtifactPath( artifact );"
162897,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,645,,"            writer.addAttribute( ""location"", path );"
162898,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,717,,"        writer.addAttribute( ""description"", ""Clean the output directory"" );"
162899,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,733,,"            writer.addAttribute( ""dir"", ""${maven.build.dir}"" );"
162900,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,757,,"            writer.addAttribute( ""name"", ""compile"" );"
162901,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,773,,"            writer.addAttribute( ""depends"", ""get-deps"" );"
162902,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,818,,"            AntBuildWriterUtil.addWrapAttribute( writer, ""target"", ""unless"", ""maven.test.skip"", 2 );"
162903,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,847,,"            writer.addAttribute( ""name"", ""test"" );"
162904,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,854,,"                writer.startElement( ""mkdir"" );"
162905,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,860,,"                writer.addAttribute( ""haltonerror"", ""true"" );"
162906,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,876,,"                writer.addAttribute( ""usefile"", ""false"" );"
162907,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,881,,"                writer.addAttribute( ""refid"", ""build.test.classpath"" );"
162908,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,1186,,"            writer.startElement( ""javac"" );"
162909,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,1321,,"                writer.startElement( ""copy"" );"
162910,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriter.java,1429,,"                        writer.startElement( ""get"" );"
162911,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java,94,,"                writer.addAttribute( ""name"", include );"
162912,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java,161,,"        writer.addAttribute( ""dir"", toRelative( project.getBasedir(), moduleSubPath ) );"
162913,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java,194,,"        writer.startElement( ""javadoc"" );"
162914,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java,227,,"        addWrapAttribute( writer, ""javadoc"", ""old"", getMavenJavadocPluginBasicOption( project, ""old"", ""false"" ), 3 );"
162915,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java,233,,"        addWrapAttribute( writer, ""javadoc"", ""version"", getMavenJavadocPluginBasicOption( project, ""version"", ""true"" ),"
162916,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java,233,,"        addWrapAttribute( writer, ""javadoc"", ""version"", getMavenJavadocPluginBasicOption( project, ""version"", ""true"" ),"
162917,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java,284,,"            writer.writeText( ""<![CDATA["" + doctitle + ""]]>"" );"
162918,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java,284,,"            writer.writeText( ""<![CDATA["" + doctitle + ""]]>"" );"
162919,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java,354,,"                addWrapAttribute( writer, ""javadoc"", ""path"", docletpath, 4 );"
162920,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java,426,,"        writer.startElement( ""jar"" );"
162921,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java,434,,"            addWrapAttribute( writer, ""jar"", ""manifest"","
162922,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java,438,,"        addWrapAttribute( writer, ""jar"", ""excludes"", ""**/package.html"", 3 );"
162923,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java,466,,"        writer.startElement( ""ear"" );"
162924,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java,483,,"        if ( getMavenEarPluginBasicOption( project, ""manifestFile"", null ) != null )"
162925,./TargetProjects/maven-plugins/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java,512,,"        writer.startElement( ""war"" );"
162926,./TargetProjects/maven-plugins/maven-ant-plugin/src/test/java/org/apache/maven/plugin/ant/AntBuildWriterUtilTest.java,158,,"        assertEquals( ""relative"", AntBuildWriterUtil.toRelative( new File( ""/home"" ), ""relative"" ) );"
162927,./TargetProjects/maven-plugins/maven-ant-plugin/src/test/java/org/apache/maven/plugin/ant/stubs/AbstractAntTestMavenProjectStub.java,156,,"            new DefaultArtifact( ""junit"", ""junit"", VersionRange.createFromVersion( ""3.8.2"" ), Artifact.SCOPE_TEST,"
162928,./TargetProjects/maven-plugins/maven-ant-plugin/src/test/java/org/apache/maven/plugin/ant/stubs/AbstractAntTestMavenProjectStub.java,157,,"                                 ""jar"", null, new DefaultArtifactHandler( ""jar"" ), false );"
162929,./TargetProjects/maven-plugins/maven-assembly-plugin/src/functional-tests/java/org/apache/maven/plugin/assembly/stubs/ArchiverManagerWithExceptionStub.java,34,,"        throw new NoSuchArchiverException( ""Expected exception"" );"
162930,./TargetProjects/maven-plugins/maven-assembly-plugin/src/main/java/org/apache/maven/plugins/assembly/archive/archiver/AssemblyProxyArchiver.java,157,,"            debug( ""Adding archived file-set in: "" + archiveFile + "" to archive location: "" + fs.getPrefix() );"
162931,./TargetProjects/maven-plugins/maven-assembly-plugin/src/main/java/org/apache/maven/plugins/assembly/archive/archiver/AssemblyProxyArchiver.java,157,,"            debug( ""Adding archived file-set in: "" + archiveFile + "" to archive location: "" + fs.getPrefix() );"
162932,./TargetProjects/maven-plugins/maven-assembly-plugin/src/main/java/org/apache/maven/plugins/assembly/archive/archiver/AssemblyProxyArchiver.java,267,,"            debug( ""Adding directory file-set in: "" + directory + "" to archive location: "" + fs.getPrefix() );"
162933,./TargetProjects/maven-plugins/maven-assembly-plugin/src/main/java/org/apache/maven/plugins/assembly/filter/SimpleAggregatingDescriptorHandler.java,237,,"    @SuppressWarnings( ""UnusedDeclaration"" )"
162934,./TargetProjects/maven-plugins/maven-assembly-plugin/src/main/java/org/apache/maven/plugins/assembly/mojos/AbstractAssemblyMojo.java,79,,"    @Parameter( property = ""assembly.appendAssemblyId"", defaultValue = ""true"" )"
162935,./TargetProjects/maven-plugins/maven-assembly-plugin/src/main/java/org/apache/maven/plugins/assembly/mojos/AbstractAssemblyMojo.java,101,,"    @Parameter( property = ""assembly.skipAssembly"", defaultValue = ""false"" )"
162936,./TargetProjects/maven-plugins/maven-assembly-plugin/src/main/java/org/apache/maven/plugins/assembly/utils/AssemblyFormatUtils.java,99,,"                new PrefixedObjectValueSource( ""module."", moduleProject ),"
162937,./TargetProjects/maven-plugins/maven-assembly-plugin/src/main/java/org/apache/maven/plugins/assembly/utils/AssemblyFormatUtils.java,141,,"                vs = new PrefixedObjectValueSource( ""artifact."", artifactProject.getArtifact() );"
162938,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/DefaultAssemblyArchiverTest.java,130,,"        archiver.createArchive( new Assembly(), ""full-name"", ""zip"", configSource, false, null );"
162939,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/DefaultAssemblyArchiverTest.java,269,,"        macArchiverManager.expectGetArchiver( ""tar"", ttArchiver );"
162940,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/DependencySetAssemblyPhaseTest.java,56,,"        final MavenProject project = newMavenProject( ""group"", ""project"", ""0"" );"
162941,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/DependencySetAssemblyPhaseTest.java,72,,"        assembly.setId( ""test"" );"
162942,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/FileItemAssemblyPhaseTest.java,76,,"        assembly.setId( ""test"" );"
162943,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/FileItemAssemblyPhaseTest.java,94,,"        final File file = fileManager.createFile( basedir, ""file.txt"", ""This is a test file."" );"
162944,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/FileItemAssemblyPhaseTest.java,100,,"        macCS.expectGetFinalName( ""final-name"" );"
162945,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/FileItemAssemblyPhaseTest.java,113,,"        fi.setLineEnding( ""keep"" );"
162946,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/FileItemAssemblyPhaseTest.java,114,,"        fi.setFileMode( ""777"" );"
162947,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/FileItemAssemblyPhaseTest.java,180,,"        final File readmeFile = fileManager.createFile( basedir, ""README.txt"", ""This is a test file for README.txt."" );"
162948,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/FileItemAssemblyPhaseTest.java,182,,"            fileManager.createFile( basedir, ""LICENSE.txt"", ""This is a test file for LICENSE.txt."" );"
162949,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/FileItemAssemblyPhaseTest.java,184,,"            fileManager.createFile( basedir, ""config/config.txt"", ""This is a test file for config/config.txt"" );"
162950,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/FileItemAssemblyPhaseTest.java,294,,"        readmeFileItem.setDestName( ""README_renamed.txt"" );"
162951,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/FileItemAssemblyPhaseTest.java,302,,"        licenseFileItem.setDestName( ""LICENSE_renamed.txt"" );"
162952,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/FileSetAssemblyPhaseTest.java,84,,"        fs.setFileMode( ""777"" );"
162953,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/ModuleSetAssemblyPhaseTest.java,67,,"    private final Logger logger = new ConsoleLogger( Logger.LEVEL_INFO, ""test"" );"
162954,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/ModuleSetAssemblyPhaseTest.java,109,,"        sources.setFileMode( ""777"" );"
162955,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/ModuleSetAssemblyPhaseTest.java,132,,"        model.setArtifactId( ""artifact"" );"
162956,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/ModuleSetAssemblyPhaseTest.java,149,,"        artifactProject.setFile( new File( basedir, ""pom.xml"" ) );"
162957,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/ModuleSetAssemblyPhaseTest.java,151,,"        final ArtifactMock artifactMock = new ArtifactMock( mm, ""group"", ""artifact"", ""version"", ""jar"", false );"
162958,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/ModuleSetAssemblyPhaseTest.java,151,,"        final ArtifactMock artifactMock = new ArtifactMock( mm, ""group"", ""artifact"", ""version"", ""jar"", false );"
162959,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/ModuleSetAssemblyPhaseTest.java,151,,"        final ArtifactMock artifactMock = new ArtifactMock( mm, ""group"", ""artifact"", ""version"", ""jar"", false );"
162960,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/ModuleSetAssemblyPhaseTest.java,184,,"        fs.setOutputDirectory( ""out"" );"
162961,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/ModuleSetAssemblyPhaseTest.java,285,,"        macTask.expectGetFinalName( ""final-name"" );"
162962,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/ModuleSetAssemblyPhaseTest.java,286,,"        macTask.expectGetDestFile( new File( ""junk"" ) );"
162963,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/ModuleSetAssemblyPhaseTest.java,291,,"        macTask.expectAddFile( moduleArtifactFile, ""out/artifact"", mode );"
162964,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/ModuleSetAssemblyPhaseTest.java,649,,"        final MavenProject project2 = createProject( ""group"", ""artifact2"", ""version"", null );"
162965,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/phase/RepositoryAssemblyPhaseTest.java,82,,"        assembly.setId( ""test"" );"
162966,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/task/AddArtifactTaskTest.java,60,,"        model.setGroupId( ""group"" );"
162967,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/task/AddArtifactTaskTest.java,73,,"        String outputLocation = ""artifact"";"
162968,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/task/AddArtifactTaskTest.java,75,,"        ArtifactMock artifactMock = new ArtifactMock( mockManager, ""group"", ""artifact"", ""version"", ""jar"", false );"
162969,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/task/AddArtifactTaskTest.java,75,,"        ArtifactMock artifactMock = new ArtifactMock( mockManager, ""group"", ""artifact"", ""version"", ""jar"", false );"
162970,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/task/AddArtifactTaskTest.java,79,,"        mac.expectGetDestFile( new File( ""junk"" ) );"
162971,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/task/AddArtifactTaskTest.java,113,,"            new AddArtifactTask( mock.getArtifact(), new ConsoleLogger( Logger.LEVEL_DEBUG, ""test"" ), null );"
162972,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/task/AddDependencySetsTaskTest.java,75,,"        final ArtifactMock mainArtifactMock = new ArtifactMock( mockManager, mainGid, mainAid, mainVer, ""jar"", false );"
162973,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/task/AddDependencySetsTaskTest.java,111,,"        final Logger logger = new ConsoleLogger( Logger.LEVEL_DEBUG, ""test"" );"
162974,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/task/AddDependencySetsTaskTest.java,218,,"        ds.setOutputFileNameMapping( ""artifact"" );"
162975,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/task/AddDependencySetsTaskTest.java,228,,"        final ArtifactMock artifactMock = new ArtifactMock( mockManager, ""group"", ""artifact"", ""version"", ""jar"", false );"
162976,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/task/AddDependencySetsTaskTest.java,304,,"        final ArtifactMock am = new ArtifactMock( mockManager, ""group"", ""artifact"", ""1.0"", ""jar"", false );"
162977,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/archive/task/testutils/MockAndControlForAddDependencySetsTask.java,125,,"            Assert.fail( ""Should never happen."" );"
162978,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/artifact/DefaultDependencyResolverTest.java,114,,"        final MavenProject project = createMavenProject( ""main-group"", ""main-artifact"", ""1"", null );"
162979,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/artifact/ResolutionManagementInfoTest.java,47,,"        Artifact a1 = new DefaultArtifact( ""groupid"", ""1"", VersionRange.createFromVersion( ""1.0"" ), ""test"", ""jar"", null,"
162980,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/artifact/ResolutionManagementInfoTest.java,47,,"        Artifact a1 = new DefaultArtifact( ""groupid"", ""1"", VersionRange.createFromVersion( ""1.0"" ), ""test"", ""jar"", null,"
162981,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/artifact/ResolutionManagementInfoTest.java,47,,"        Artifact a1 = new DefaultArtifact( ""groupid"", ""1"", VersionRange.createFromVersion( ""1.0"" ), ""test"", ""jar"", null,"
162982,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/artifact/ResolutionManagementInfoTest.java,47,,"        Artifact a1 = new DefaultArtifact( ""groupid"", ""1"", VersionRange.createFromVersion( ""1.0"" ), ""test"", ""jar"", null,"
162983,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/artifact/ResolutionManagementInfoTest.java,51,,"            new DefaultArtifact( ""groupid"", ""1"", VersionRange.createFromVersion( ""1.0"" ), ""compile"", ""jar"", null,"
162984,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/filter/ComponentsXmlArchiverFileFilterTest.java,87,,"            Collections.singletonList( new ComponentDef( ""role"", null, ""org.apache.maven.Impl"" ) ) );"
162985,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/filter/ComponentsXmlArchiverFileFilterTest.java,87,,"            Collections.singletonList( new ComponentDef( ""role"", null, ""org.apache.maven.Impl"" ) ) );"
162986,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/filter/ComponentsXmlArchiverFileFilterTest.java,96,,"        assertNull( componentDom.getChild( ""role-hint"" ) );"
162987,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/filter/ComponentsXmlArchiverFileFilterTest.java,97,,"        assertEquals( ""org.apache.maven.Impl"", componentDom.getChild( ""implementation"" ).getValue() );"
162988,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/filter/ComponentsXmlArchiverFileFilterTest.java,104,,"            Collections.singletonList( new ComponentDef( ""role"", ""hint"", ""org.apache.maven.Impl"" ) ) );"
162989,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/filter/ComponentsXmlArchiverFileFilterTest.java,110,,"        final Xpp3Dom componentDom = filter.components.get( ""rolehint"" );"
162990,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/filter/ComponentsXmlArchiverFileFilterTest.java,123,,"        defs.add( new ComponentDef( ""role"", ""hint2"", ""org.apache.maven.Impl2"" ) );"
162991,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/filter/ComponentsXmlArchiverFileFilterTest.java,147,,"        final Xpp3Dom dom = createComponentDom( new ComponentDef( ""role"", null, ""impl"" ) );"
162992,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/filter/ComponentsXmlArchiverFileFilterTest.java,162,,"        final XPath role = XPath.newInstance( ""//component[position()=1]/role/text()"" );"
162993,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/filter/ComponentsXmlArchiverFileFilterTest.java,163,,"        final XPath hint = XPath.newInstance( ""//component[position()=1]/role-hint/text()"" );"
162994,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/filter/ComponentsXmlArchiverFileFilterTest.java,164,,"        final XPath implementation = XPath.newInstance( ""//component[position()=1]/implementation/text()"" );"
162995,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/filter/ComponentsXmlArchiverFileFilterTest.java,411,,"            throw new UnsupportedOperationException( ""not supported"" );"
162996,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/interpolation/AssemblyExpressionEvaluatorTest.java,50,,"        model.setArtifactId( ""artifact-id"" );"
162997,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/interpolation/AssemblyExpressionEvaluatorTest.java,51,,"        model.setGroupId( ""group.id"" );"
162998,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/interpolation/AssemblyExpressionEvaluatorTest.java,53,,"        model.setPackaging( ""jar"" );"
162999,./TargetProjects/maven-plugins/maven-assembly-plugin/src/test/java/org/apache/maven/plugins/assembly/interpolation/AssemblyInterpolatorTest.java,56,,"        model.setArtifactId( ""artifact-id"" );"
