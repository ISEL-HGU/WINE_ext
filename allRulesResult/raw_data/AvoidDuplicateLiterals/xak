10000,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/output/OutputManagerImpl.java,73,,"  @SuppressWarnings(""unchecked"")"
10001,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/util/LogFeederUtil.java,150,,"        if (jsonObj.get(""path"") == null && ((InputFile)inputMarker.getInput()).getFilePath() != null) {"
10002,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/common/IdGeneratorHelperTest.java,49,,"    fieldKeyMap1.put(""one-field"", ""1"");"
10003,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/common/IdGeneratorHelperTest.java,66,,"    fieldKeyMap1.put(""two-field"", ""2"");"
10004,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/common/LogFeederSolrClientFactoryTest.java,47,,"    assertEquals(""localhost:2181"", result.getZkHosts().get(0));"
10005,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/filter/FilterGrokTest.java,61,,"    filterGrokDescriptor.setMultilinePattern(""^(%{TIMESTAMP_ISO8601:logtime})"");"
10006,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/filter/FilterKeyValueTest.java,57,,"    filterKeyValueDescriptor.setSourceField(""keyValueField"");"
10007,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/input/InputManagerTest.java,47,,"    manager.add(""serviceName"", input1);"
10008,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/input/cache/LRUCacheTest.java,42,,"    underTest.put(""mymessage1"", 1000L);"
10009,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/input/cache/LRUCacheTest.java,43,,"    underTest.put(""mymessage2"", 1000L);"
10010,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/input/cache/LRUCacheTest.java,46,,"    underTest.put(""mymessage5"", 1000L);"
10011,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/mapper/MapperAnonymizeTest.java,40,,"    assertTrue(""Could not initialize!"", mapperAnonymize.init(null, null, ""someField"", null, mapAnonymizeDescriptorImpl));"
10012,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/mapper/MapperDateTest.java,45,,"    assertTrue(""Could not initialize!"", mapperDate.init(null, null, ""someField"", null, mapDateDescriptor));"
10013,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/mapper/MapperDateTest.java,45,,"    assertTrue(""Could not initialize!"", mapperDate.init(null, null, ""someField"", null, mapDateDescriptor));"
10014,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/mapper/MapperDateTest.java,53,,"    assertEquals(""Value wasn't put into jsonObj"", d, jsonObj.remove(""someField""));"
10015,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/mapper/MapperDateTest.java,55,,"    assertTrue(""jsonObj is not empty"", jsonObj.isEmpty());"
10016,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/mapper/MapperFieldCopyTest.java,40,,"    assertTrue(""Could not initialize!"", mapperFieldCopy.init(null, null, ""someField"", null, mapFieldCopyDescriptor));"
10017,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/mapper/MapperFieldCopyTest.java,43,,"    jsonObj.put(""someField"", ""someValue"");"
10018,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/mapper/MapperFieldNameTest.java,40,,"    assertTrue(""Could not initialize!"", mapperFieldName.init(null, null, ""someField"", null, mapFieldNameDescriptor));"
10019,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/mapper/MapperFieldValueTest.java,38,,"    mapFieldValueDescriptor.setPostValue(""someOtherValue"");"
10020,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/mapper/MapperFieldValueTest.java,41,,"    assertTrue(""Could not initialize!"", mapperFieldValue.init(null,null, ""someField"", null, mapFieldValueDescriptor));"
10021,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/metrics/MetricsManagerTest.java,66,,"    MetricData metricCount1 = new MetricData(""metric1"", true);"
10022,./TargetProjects/ambari-logsearch/ambari-logsearch-logfeeder/src/test/java/org/apache/ambari/logfeeder/output/cloud/CloudStorageUploaderTest.java,48,,"    String output = underTest.generateOutputPath(basePath, CLUSTER_NAME, HOSTNAME, new File(""/my/path""));"
10023,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/conf/AuthPropsConfig.java,37,,"    examples = {""true"", ""false""},"
10024,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/conf/AuthPropsConfig.java,37,,"    examples = {""true"", ""false""},"
10025,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/conf/LogSearchSpnegoConfig.java,53,,"    examples = {""c6401.ambari.apache.org"", ""localhost""},"
10026,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/conf/SolrAuditLogPropsConfig.java,55,,"    examples = {""audit_logs""},"
10027,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/conf/SolrMetadataPropsConfig.java,34,,"    examples = {""logsearch_metadata""},"
10028,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/conf/SolrServiceLogPropsConfig.java,34,,"    examples = {""hadoop_logs""},"
10029,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/conf/UIMappingConfig.java,56,,"  @Value(""#{propertiesSplitter.parseMap('${logsearch.web.service_logs.group.labels:"" + SERVICE_GROUP_LABELS_DEFAULTS + ""}')}"")"
10030,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/configurer/SslConfigurer.java,328,,"      String certLocation = String.format(""%s/%s"", LOGSEARCH_CERT_DEFAULT_FOLDER, LOGSEARCH_CERT_FILENAME);"
10031,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/manager/ServiceLogsManager.java,174,,"    solrQuery.setQuery(""*:*"");"
10032,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/rest/MetadataResource.java,60,,"  @Produces({""application/json""})"
10033,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/rest/ShipperConfigResource.java,65,,"  @Produces({""application/json""})"
10034,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/rest/ShipperConfigResource.java,67,,"  public List<String> getServices(@PathParam(""clusterName"") String clusterName) {"
10035,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/rest/StatusResource.java,61,,"  @Produces({""application/json""})"
10036,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/util/SolrUtil.java,126,,"    String fieldTypeClassName = (String) fieldTypeInfoMap.get(""class"");"
10037,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/test/java/org/apache/ambari/logsearch/common/LogSearchLdapAuthorityMapperTest.java,38,,"    roleGroupMapping.put(""apache1"", ""ROLE_USER"");"
10038,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/test/java/org/apache/ambari/logsearch/common/LogSearchLdapAuthorityMapperTest.java,38,,"    roleGroupMapping.put(""apache1"", ""ROLE_USER"");"
10039,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/test/java/org/apache/ambari/logsearch/web/filters/GlobalStateTest.java,54,,"    assertThat(globalState.getStatusMessage(""/api/v1/test""), is(nullValue()));"
10040,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/test/java/org/apache/ambari/logsearch/web/security/LogsearchAuthenticationProviderTest.java,39,,"  private static final Authentication SUCCESSFUL_AUTHENTICATION = new TestingAuthenticationToken(""principal"", ""credentials"");"
10041,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/test/java/org/apache/ambari/logsearch/web/security/LogsearchAuthenticationProviderTest.java,39,,"  private static final Authentication SUCCESSFUL_AUTHENTICATION = new TestingAuthenticationToken(""principal"", ""credentials"");"
10042,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/test/java/org/apache/ambari/logsearch/web/security/LogsearchAuthenticationProviderTest.java,73,,"  @Ignore(""Until EasyMock 3.7 upgrade - waiting for release"")"
10043,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/test/java/org/apache/ambari/logsearch/web/security/LogsearchAuthenticationProviderTest.java,153,,"    expect(mockExternalServerProvider.authenticate(authentication)).andThrow(new AuthenticationException(""msg1"") {});"
10044,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/test/java/org/apache/ambari/logsearch/web/security/LogsearchExternalServerAuthenticationProviderTest.java,68,,"    Authentication authentication = new TestingAuthenticationToken(""principal"", ""credentials"");"
10045,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/test/java/org/apache/ambari/logsearch/web/security/LogsearchExternalServerAuthenticationProviderTest.java,68,,"    Authentication authentication = new TestingAuthenticationToken(""principal"", ""credentials"");"
10046,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/test/java/org/apache/ambari/logsearch/web/security/LogsearchExternalServerAuthenticationProviderTest.java,84,,"      assertTrue(""Should have thrown BadCredentialsException"", false);"
10047,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/test/java/org/apache/ambari/logsearch/web/security/LogsearchFileAuthenticationProviderTest.java,77,,"    Authentication authentication = new TestingAuthenticationToken(""principal"", ""credentials"");"
10048,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/test/java/org/apache/ambari/logsearch/web/security/LogsearchFileAuthenticationProviderTest.java,77,,"    Authentication authentication = new TestingAuthenticationToken(""principal"", ""credentials"");"
10049,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/test/java/org/apache/ambari/logsearch/web/security/LogsearchFileAuthenticationProviderTest.java,93,,"      fail(""Should have thrown BadCredentialsException"");"
10050,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/test/java/org/apache/ambari/logsearch/web/security/LogsearchFileAuthenticationProviderTest.java,176,,"    List<GrantedAuthority> grantedAuths = Collections.singletonList(new SimpleGrantedAuthority(""ROLE_USER""));"
10051,./TargetProjects/ambari-logsearch/ambari-logsearch-server/src/test/java/org/apache/ambari/logsearch/web/security/LogsearchSimpleAuthenticationProviderTest.java,60,,"    Authentication authentication = new TestingAuthenticationToken(""principal"", ""credentials"");"
10052,./TargetProjects/ambari-metrics/ambari-metrics-common/src/main/java/org/apache/hadoop/metrics2/sink/timeline/AbstractTimelineMetricsSink.java,173,,"      connection = connectUrl.startsWith(""https"") ?"
10053,./TargetProjects/ambari-metrics/ambari-metrics-common/src/test/java/org/apache/hadoop/metrics2/sink/timeline/AbstractTimelineMetricSinkTest.java,51,,"    hosts = sink.parseHostsStringIntoCollection(""test1.123.abc.def.local"");"
10054,./TargetProjects/ambari-metrics/ambari-metrics-common/src/test/java/org/apache/hadoop/metrics2/sink/timeline/AbstractTimelineMetricSinkTest.java,102,,"    TimelineMetric timelineMetric = new TimelineMetric(""metric1"", ""host1"", ""app1"", ""instance1"");"
10055,./TargetProjects/ambari-metrics/ambari-metrics-common/src/test/java/org/apache/hadoop/metrics2/sink/timeline/AbstractTimelineMetricSinkTest.java,102,,"    TimelineMetric timelineMetric = new TimelineMetric(""metric1"", ""host1"", ""app1"", ""instance1"");"
10056,./TargetProjects/ambari-metrics/ambari-metrics-common/src/test/java/org/apache/hadoop/metrics2/sink/timeline/AbstractTimelineMetricSinkTest.java,102,,"    TimelineMetric timelineMetric = new TimelineMetric(""metric1"", ""host1"", ""app1"", ""instance1"");"
10057,./TargetProjects/ambari-metrics/ambari-metrics-common/src/test/java/org/apache/hadoop/metrics2/sink/timeline/AbstractTimelineMetricSinkTest.java,102,,"    TimelineMetric timelineMetric = new TimelineMetric(""metric1"", ""host1"", ""app1"", ""instance1"");"
10058,./TargetProjects/ambari-metrics/ambari-metrics-common/src/test/java/org/apache/hadoop/metrics2/sink/timeline/cache/HandleConnectExceptionTest.java,110,,"      return ""http"";"
10059,./TargetProjects/ambari-metrics/ambari-metrics-common/src/test/java/org/apache/hadoop/metrics2/sink/timeline/cache/HandleConnectExceptionTest.java,130,,"      return Arrays.asList(""localhost"");"
10060,./TargetProjects/ambari-metrics/ambari-metrics-hadoop-sink/src/test/java/org/apache/hadoop/metrics2/sink/timeline/HadoopTimelineMetricsSinkTest.java,95,,"    InputStream is = IOUtils.toInputStream(gson.toJson(Collections.singletonList(""localhost"")));"
10061,./TargetProjects/ambari-metrics/ambari-metrics-hadoop-sink/src/test/java/org/apache/hadoop/metrics2/sink/timeline/HadoopTimelineMetricsSinkTest.java,113,,"    expect(conf.getString(eq(COLLECTOR_PROTOCOL), eq(""http""))).andReturn(""http"").anyTimes();"
10062,./TargetProjects/ambari-metrics/ambari-metrics-hadoop-sink/src/test/java/org/apache/hadoop/metrics2/sink/timeline/HadoopTimelineMetricsSinkTest.java,114,,"    expect(conf.getString(eq(COLLECTOR_PORT), eq(""6188""))).andReturn(""6188"").anyTimes();"
10063,./TargetProjects/ambari-metrics/ambari-metrics-hadoop-sink/src/test/java/org/apache/hadoop/metrics2/sink/timeline/HadoopTimelineMetricsSinkTest.java,189,,"    expect(conf.getStringArray(eq(COLLECTOR_HOSTS_PROPERTY))).andReturn(new String[]{""localhost"", ""localhost2""}).anyTimes();"
10064,./TargetProjects/ambari-metrics/ambari-metrics-host-aggregator/src/test/java/org/apache/hadoop/metrics2/host/aggregator/AggregatorWebServiceTest.java,85,,"        TimelineMetrics timelineMetrics = TimelineMetricsHolderTest.getTimelineMetricsWithAppID(""appid"");"
10065,./TargetProjects/ambari-metrics/ambari-metrics-storm-sink/src/test/java/org/apache/hadoop/metrics2/sink/storm/StormTimelineMetricsSinkTest.java,52,,"    stormTimelineMetricsSink.setTopologyName(""topology1"");"
10066,./TargetProjects/ambari-metrics/ambari-metrics-storm-sink/src/test/java/org/apache/hadoop/metrics2/sink/storm/StormTimelineMetricsSinkTest.java,57,,"        new IMetricsConsumer.TaskInfo(""localhost"", 1234, ""testComponent"", 42, 20000L, 60),"
10067,./TargetProjects/ambari-metrics/ambari-metrics-storm-sink/src/test/java/org/apache/hadoop/metrics2/sink/storm/StormTimelineMetricsSinkTest.java,57,,"        new IMetricsConsumer.TaskInfo(""localhost"", 1234, ""testComponent"", 42, 20000L, 60),"
10068,./TargetProjects/ambari-metrics/ambari-metrics-storm-sink/src/test/java/org/apache/hadoop/metrics2/sink/storm/StormTimelineMetricsSinkTest.java,58,,"        Collections.singleton(new IMetricsConsumer.DataPoint(""key1"", ""value1"")));"
10069,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/loadsimulator/MetricsLoadSimulator.java,42,,"      mapArgs.get(""hostName""),"
10070,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/loadsimulator/MetricsLoadSimulator.java,43,,"      Integer.valueOf(mapArgs.get(""numberOfHosts"")),"
10071,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/loadsimulator/MetricsLoadSimulator.java,44,,"      mapArgs.get(""metricsHostName""),"
10072,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/loadsimulator/MetricsLoadSimulator.java,45,,"      mapArgs.get(""minHostIndex"") == null ? 0 : Integer.valueOf(mapArgs.get(""minHostIndex"")),"
10073,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/loadsimulator/MetricsLoadSimulator.java,46,,"      Integer.valueOf(mapArgs.get(""collectInterval"")),"
10074,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/loadsimulator/MetricsLoadSimulator.java,47,,"      Integer.valueOf(mapArgs.get(""sendInterval"")),"
10075,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/loadsimulator/MetricsLoadSimulator.java,48,,"      Boolean.valueOf(mapArgs.get(""master""))"
10076,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/PhoenixHBaseAccessor.java,720,,"    String tableDurability = metricsConf.get(""timeline.metrics."" + tableName + "".durability"", """");"
10077,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/PhoenixHBaseAccessor.java,1069,,"    byte[] uuid = rs.getBytes(""UUID"");"
10078,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/TimelineMetricConfiguration.java,478,,"      return Boolean.parseBoolean(metricsConf.get(WATCHER_DISABLED, ""false""));"
10079,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/aggregators/TimelineMetricReadHelper.java,68,,"    byte[] uuid = rs.getBytes(""UUID"");"
10080,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/aggregators/TimelineMetricReadHelper.java,76,,"      rs.getLong(""SERVER_TIME"")"
10081,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/aggregators/TimelineMetricReadHelper.java,84,,"        value = rs.getDouble(""METRIC_SUM"") / rs.getInt(""METRIC_COUNT"");"
10082,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/aggregators/TimelineMetricReadHelper.java,84,,"        value = rs.getDouble(""METRIC_SUM"") / rs.getInt(""METRIC_COUNT"");"
10083,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/aggregators/TimelineMetricReadHelper.java,87,,"        value = rs.getDouble(""METRIC_MIN"");"
10084,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/aggregators/TimelineMetricReadHelper.java,90,,"        value = rs.getDouble(""METRIC_MAX"");"
10085,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,52,,"    ""SERVER_TIME BIGINT NOT NULL, "" +"
10086,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,53,,"    ""METRIC_SUM DOUBLE, "" +"
10087,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,54,,"    ""METRIC_COUNT UNSIGNED_INT, "" +"
10088,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,55,,"    ""METRIC_MAX DOUBLE, "" +"
10089,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,59,,"    ""TTL=%s, COMPRESSION='%s'"";"
10090,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,184,,"    ""SERVER_TIME, "" +"
10091,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,185,,"    ""METRIC_SUM, "" +"
10092,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,186,,"    ""METRIC_MAX, "" +"
10093,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,187,,"    ""METRIC_MIN, "" +"
10094,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,188,,"    ""METRIC_COUNT, "" +"
10095,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,276,,"    ""FROM %s"";"
10096,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,308,,"  public static final String GET_CLUSTER_AGGREGATE_SQL = ""SELECT "" +"
10097,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,553,,"      sb.append("" WHERE "");"
10098,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,564,,"      sb.append("" LIMIT "").append(condition.getLimit());"
10099,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,568,,"      LOG.debug(""SQL: "" + sb.toString() + "", condition: "" + condition);"
10100,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,568,,"      LOG.debug(""SQL: "" + sb.toString() + "", condition: "" + condition);"
10101,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,1080,,"          LOG.debug(""Setting pos: "" + pos + "", value = "" + condition.getUuids().get(pos2 - 1));"
10102,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/query/PhoenixTransactSQL.java,1105,,"          LOG.debug(""Setting pos: "" + pos + "", value: "" + hostname);"
10103,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/webapp/TimelineWebServices.java,245,,"    @QueryParam(""appId"") String appId,"
10104,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/webapp/TimelineWebServices.java,246,,"    @QueryParam(""instanceId"") String instanceId,"
10105,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/loadsimulator/data/TestMetric.java,75,,"      entry(""0"", ""5.35""),"
10106,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/ITPhoenixHBaseAccessor.java,82,,"    hdb.insertMetricRecords(MetricTestHelper.prepareSingleTimelineMetric(ctime, ""local1"","
10107,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/ITPhoenixHBaseAccessor.java,83,,"      ""disk_free"", 1), true);"
10108,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/ITPhoenixHBaseAccessor.java,84,,"    hdb.insertMetricRecords(MetricTestHelper.prepareSingleTimelineMetric(ctime, ""local2"","
10109,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/ITPhoenixHBaseAccessor.java,96,,"      ""host"", null);"
10110,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/ITPhoenixHBaseAccessor.java,124,,"    TimelineMetrics metrics1 = MetricTestHelper.prepareSingleTimelineMetric(ctime, ""local3"","
10111,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/ITPhoenixHBaseAccessor.java,194,,"    List<byte[]> uuids = metadataManager.getUuidsForGetMetricQuery(new ArrayList<String>() {{ add(""disk_used""); }},"
10112,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/ITPhoenixHBaseAccessor.java,196,,"      ""test_app"", ""test_instance"");"
10113,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/ITPhoenixHBaseAccessor.java,371,,"      MetricTestHelper.createTimelineMetric(ctime, ""valid_metric"", ""h1"", ""test_app"","
10114,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/ITPhoenixHBaseAccessor.java,374,,"      MetricTestHelper.createTimelineMetric(ctime, ""invalid_metric"", ""h1"", ""test_app"","
10115,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/PhoenixHBaseAccessorTest.java,112,,"    Condition condition = new DefaultCondition(Collections.singletonList(new byte[20]), metricNames, hostnames, ""appid"", ""instanceid"", 123L, 234L, Precision.SECONDS, 10, true);"
10116,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/PhoenixHBaseAccessorTest.java,112,,"    Condition condition = new DefaultCondition(Collections.singletonList(new byte[20]), metricNames, hostnames, ""appid"", ""instanceid"", 123L, 234L, Precision.SECONDS, 10, true);"
10117,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/TestPhoenixTransactSQL.java,52,,"      new ArrayList<>(Arrays.asList(""cpu_user"", ""mem_free"")), Collections.singletonList(""h1""),"
10118,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/TestPhoenixTransactSQL.java,52,,"      new ArrayList<>(Arrays.asList(""cpu_user"", ""mem_free"")), Collections.singletonList(""h1""),"
10119,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/TestPhoenixTransactSQL.java,88,,"        ""APP_ID = ? AND INSTANCE_ID = ? AND SERVER_TIME >= ? AND SERVER_TIME < ?"";"
10120,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/TestPhoenixTransactSQL.java,194,,"      new ArrayList<>(Arrays.asList(""cpu_user"", ""mem_free"", ""mem_used"")), Collections.emptyList(),"
10121,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/TestPhoenixTransactSQL.java,308,,"    Assert.assertTrue(stmt.contains(""FROM METRIC_RECORD_UUID""));"
10122,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/TestPhoenixTransactSQL.java,469,,"      metrics.add(""TestMetric""+i);"
10123,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/TimelineMetricsFilterTest.java,48,,"    timelineMetric.setAppId(""hbase"");"
10124,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/TimelineMetricsFilterTest.java,72,,"    timelineMetric.setMetricName(""cpu_system"");"
10125,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/TimelineMetricsFilterTest.java,146,,"    whitelist.add(""regionserver.Server.Delete_max"");"
10126,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/TimelineMetricsFilterTest.java,157,,"    timelineMetric.setAppId(""ams-hbase"");"
10127,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/TimelineMetricsIgniteCacheTest.java,66,,"    conf.getMetricsConf().set(CLUSTER_AGGREGATOR_APP_IDS, ""appIdForHostsAggr"");"
10128,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/TimelineMetricsIgniteCacheTest.java,101,,"    TimelineMetric timelineMetric = new TimelineMetric(""metric1"", ""host1"", ""app1"", ""instance1"");"
10129,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/TimelineMetricsIgniteCacheTest.java,101,,"    TimelineMetric timelineMetric = new TimelineMetric(""metric1"", ""host1"", ""app1"", ""instance1"");"
10130,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/TimelineMetricsIgniteCacheTest.java,192,,"    timelineMetric = new TimelineMetric(""host_metric"", ""host1"", HOST_APP_ID, ""instance1"");"
10131,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/DownSamplerTest.java,35,,"    configuration.setIfUnset(""timeline.metrics.downsampler.topn.metric.patterns"", ""pattern1,pattern2"");"
10132,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/DownSamplerTest.java,35,,"    configuration.setIfUnset(""timeline.metrics.downsampler.topn.metric.patterns"", ""pattern1,pattern2"");"
10133,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,77,,"    hdb.insertMetricRecords(MetricTestHelper.prepareSingleTimelineMetric(ctime, ""local1"","
10134,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,78,,"      ""disk_free"", 1), true);"
10135,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,79,,"    hdb.insertMetricRecords(MetricTestHelper.prepareSingleTimelineMetric(ctime, ""local2"","
10136,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,115,,"        fail(""Unexpected entry"");"
10137,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,219,,"      ""disk_used"", 1), true);"
10138,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,305,,"      null, ""test_app"", null);"
10139,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,318,,"      TimelineMetric metric = metadataManager.getMetricFromUuid(rs.getBytes(""UUID""));"
10140,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,320,,"      assertEquals(""APP_ID"", ""test_app"", metric.getAppId());"
10141,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,321,,"      assertEquals(""METRIC_SUM"", 4.0, rs.getDouble(""METRIC_SUM""));"
10142,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,322,,"      assertEquals(""METRIC_COUNT"", 2, rs.getLong(""METRIC_COUNT""));"
10143,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,323,,"      assertEquals(""METRIC_MAX"", 4.0, rs.getDouble(""METRIC_MAX""));"
10144,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,324,,"      assertEquals(""METRIC_MIN"", 0.0, rs.getDouble(""METRIC_MIN""));"
10145,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,421,,"    records.put(MetricTestHelper.createEmptyTimelineClusterMetric(""disk_used_h"", ctime),"
10146,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,480,,"    records.put(MetricTestHelper.createEmptyTimelineClusterMetric(""disk_used_h2"", ctime),"
10147,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,482,,"    records.put(MetricTestHelper.createEmptyTimelineClusterMetric(""disk_free_h2"", ctime),"
10148,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,544,,"    conf.set(CLUSTER_AGGREGATOR_APP_IDS, ""app1"");"
10149,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,561,,"      ""cpu_user"", 1), true);"
10150,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,615,,"    metric1.setMetricName(""yarn.ClusterMetrics.NumActiveNMs"");"
10151,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,616,,"    metric1.setAppId(""resourcemanager"");"
10152,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,705,,"    records.put(MetricTestHelper.createEmptyTimelineClusterMetric(""disk_used_gb"", ctime += minute),"
10153,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITClusterAggregator.java,707,,"    records.put(MetricTestHelper.createEmptyTimelineClusterMetric(""disk_free_gb"", ctime),"
10154,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITMetricAggregator.java,63,,"    TimelineMetrics metricsSent = prepareTimelineMetrics(startTime, ""local"");"
10155,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITMetricAggregator.java,66,,"    List<byte[]> uuids = metadataManager.getUuidsForGetMetricQuery(new ArrayList<String>() {{ add(""disk_free""); add(""mem_free"");}},"
10156,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITMetricAggregator.java,66,,"    List<byte[]> uuids = metadataManager.getUuidsForGetMetricQuery(new ArrayList<String>() {{ add(""disk_free""); add(""mem_free"");}},"
10157,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITMetricAggregator.java,68,,"      ""host"", null);"
10158,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/ITMetricAggregator.java,233,,"    List<byte[]> uuids = metadataManager.getUuidsForGetMetricQuery(new ArrayList<String>() {{ add(""disk_used_daily"");}},"
10159,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/TimelineMetricClusterAggregatorSecondTest.java,82,,"    counterMetric.setType(""COUNTER"");"
10160,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/aggregators/TimelineMetricClusterAggregatorSecondTest.java,144,,"    timelineMetric.setType(""GUAGE"");"
10161,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/discovery/TestMetadataManager.java,60,,"    metric1.setMetricName(""dummy_metric1"");"
10162,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/discovery/TestMetadataManager.java,61,,"    metric1.setHostName(""dummy_host1"");"
10163,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/discovery/TestMetadataManager.java,63,,"    metric1.setAppId(""dummy_app1"");"
10164,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/discovery/TestMetadataManager.java,64,,"    metric1.setType(""Integer"");"
10165,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/discovery/TestMetadataManager.java,72,,"    metric2.setMetricName(""dummy_metric2"");"
10166,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/discovery/TestMetadataManager.java,73,,"    metric2.setHostName(""dummy_host2"");"
10167,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/discovery/TestMetadataManager.java,75,,"    metric2.setAppId(""dummy_app2"");"
10168,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/discovery/TestMetadataManager.java,77,,"    metric2.setInstanceId(""instance2"");"
10169,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/discovery/TestMetadataManager.java,193,,"    metric1.setMetricName(""dummy_m1"");"
10170,./TargetProjects/ambari-metrics/ambari-metrics-timelineservice/src/test/java/org/apache/ambari/metrics/core/timeline/discovery/TestMetadataManager.java,239,,"    List<byte[]> uuids = metadataManager.getUuidsForGetMetricQuery(Collections.singletonList(""dummy_m%""),"
10171,./TargetProjects/ant/src/main/org/apache/tools/ant/AntClassLoader.java,731,,"                + "" loaded from parent loader"", Project.MSG_DEBUG);"
10172,./TargetProjects/ant/src/main/org/apache/tools/ant/AntClassLoader.java,1117,,"                log(""Class "" + classname + "" loaded from parent loader "" + ""(parentFirst)"","
10173,./TargetProjects/ant/src/main/org/apache/tools/ant/AntTypeDefinition.java,268,,"                ""Could not create type "" + name + "" due to "" + t, t);"
10174,./TargetProjects/ant/src/main/org/apache/tools/ant/DirectoryScanner.java,1523,,"                throw new IllegalStateException(""Must call scan() first"");"
10175,./TargetProjects/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java,190,,"                    && (""add"".equals(name) || ""addConfigured"".equals(name))) {"
10176,./TargetProjects/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java,818,,"            throw new UnsupportedElementException(""Class """
10177,./TargetProjects/ant/src/main/org/apache/tools/ant/PropertyHelper.java,653,,"                project.log(""Setting project property: "" + name + "" -> """
10178,./TargetProjects/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java,869,,"        private static final AddAsisRemove ASIS = newInstance(""asis"");"
10179,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/AntStructure.java,193,,"                Collectors.joining("" | "", ""<!ENTITY % tasks \"""", ""\"">"")));"
10180,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/AntStructure.java,326,,"                            sb.append(""CDATA "");"
10181,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java,457,,"                    log(""Warning: "" + getMessage(e), Project.MSG_ERR);"
10182,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java,858,,"            log(""Copying "" + fileCopyMap.size()"
10183,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java,860,,"                + "" to "" + destDir.getAbsolutePath());"
10184,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/Delete.java,612,,"                        handle(""Unable to delete file "" + file.getAbsolutePath());"
10185,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/Delete.java,751,,"                        log(""Deleting "" + f, verbosity);"
10186,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/Execute.java,109,,"        if (!Os.isFamily(""openvms"")) {"
10187,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/FixCRLF.java,194,,"        } else if (""asis"".equals(option)) {"
10188,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/GenerateKey.java,329,,"        sb.append(""\"" "");"
10189,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/Get.java,157,,"                log(""Error getting "" + source + "" to "" + dest);"
10190,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/Jar.java,389,,"            && !""skip"".equals(filesetManifestConfig.getValue())) {"
10191,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/Javadoc.java,2001,,"            classpath = classpath.concatSystemClasspath(""ignore"");"
10192,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/MacroDef.java,184,,"        UnknownElement ret = new UnknownElement(""sequential"");"
10193,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/Move.java,115,,"                    log(""Attempting to rename dir: "" + fromDir + "" to "" + toDir, verbosity);"
10194,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/PreSetDef.java,136,,"            throw new BuildException(""Not supported"");"
10195,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/Rmic.java,634,,"                    + "".class"";"
10196,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/SQLExec.java,171,,"    private String onError = ""abort"";"
10197,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/SubAnt.java,227,,"                    log(""Leaving directory: "" + subdirPath + ""\n"", Project.MSG_INFO);"
10198,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java,111,,"    protected String archiveType = ""zip"";"
10199,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java,113,,"    protected String emptyBehavior = ""skip"";"
10200,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java,388,,"            return new String[] {""fail"", ""skip"", ""create""};"
10201,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java,1182,,"            log(""Note: creating empty "" + archiveType + "" archive "" + zipFile,"
10202,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java,676,,"                 + "" to "" + destDir);"
10203,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java,478,,"                ""Parser """
10204,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java,682,,"            if (f.endsWith("".java"")) {"
10205,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java,1022,,"                    ""A home interface was not found for the "" + name + "" EJB."");"
10206,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java,1113,,"                System.out.println(""The class "" + remote.getQualifiedClassName()"
10207,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java,1163,,"            pathToFile = pathToFile.replace('.', File.separatorChar) + "".class"";"
10208,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java,1265,,"            classnames[index++] = ""org.omg.stub."" + remotePkg + ""_"""
10209,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java,511,,"                    jonasroot + File.separator + ""xml"" + File.separator + EJB_JAR_1_1_DTD);"
10210,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/optional/jlink/jlink.java,277,,"        if (!name.endsWith("".class"")) {"
10211,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/optional/jsp/JspC.java,501,,"                log(""Compiling "" + compileList.size() + "" source file"""
10212,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java,375,,"            return new String[] {""true"", ""yes"", ""false"", ""no"", ""on"", ""off"", ""withOutAndErr""};"
10213,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java,175,,"        ""files"","
10214,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTask.java,134,,"        ""files"","
10215,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java,141,,"            String msg = ""Failed executing: "" + cmd.toString()"
10216,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java,335,,"                    log(""Caught exception: "" + e.getMessage(), Project.MSG_ERR);"
10217,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/optional/unix/Symlink.java,454,,"                    throw new BuildException(""Failed to create symlink "" + link + "" to target "" + resource, e);"
10218,./TargetProjects/ant/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,404,,"                || !name.endsWith("".class"")"
10219,./TargetProjects/ant/src/main/org/apache/tools/ant/types/CommandlineJava.java,534,,"            listIterator.add(classpath.concatSystemClasspath(""ignore"").toString());"
10220,./TargetProjects/ant/src/main/org/apache/tools/ant/types/Path.java,622,,"                    + File.separator + ""lib"" + File.separator + ""rt.jar""));"
10221,./TargetProjects/ant/src/main/org/apache/tools/ant/types/Permissions.java,128,,"        granted.add(new PropertyPermission(""java.version"", ""read""));"
10222,./TargetProjects/ant/src/main/org/apache/tools/ant/types/XMLCatalog.java,817,,"                    + matchingEntry.getPublicId() + ""' location: '"""
10223,./TargetProjects/ant/src/main/org/apache/tools/ant/util/ReflectUtil.java,71,,"    @SuppressWarnings(""unchecked"")"
10224,./TargetProjects/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java,426,,"                        + "" to "" + destFile + "" using NIO Channels"""
10225,./TargetProjects/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java,648,,"            log(project, ""Skipping (self) copy of "" + source +  "" to "" + dest);"
10226,./TargetProjects/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java,424,,"                    throw new IOException(""unexpected end of stream"");"
10227,./TargetProjects/ant/src/main/org/apache/tools/tar/TarBuffer.java,187,,"                               + "" blkIdx = "" + currBlkIdx);"
10228,./TargetProjects/ant/src/main/org/apache/tools/tar/TarBuffer.java,339,,"            throw new IOException(""writing to an input buffer"");"
10229,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java,78,,"        buildRule.getProject().setUserProperty(MagicNames.BUILD_SYSCLASSPATH, ""ignore"");"
10230,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java,220,,"        assertNull(acl.getResource(""META-INF/MANIFEST.MF""));"
10231,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/DefaultLoggerTest.java,39,,"        BuildException be = new BuildException(""oops"", new Location(""build.xml"", 1, 0));"
10232,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java,67,,"        ds.setBasedir(new File(buildRule.getProject().getProperty(""output"")));"
10233,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java,68,,"        ds.setIncludes(new String[] {""alpha""});"
10234,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java,76,,"        ds.setIncludes(new String[] {""alpha/""});"
10235,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java,78,,"        compareFiles(ds, new String[] {""alpha/beta/beta.xml"","
10236,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java,79,,"                                       ""alpha/beta/gamma/gamma.xml""},"
10237,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java,80,,"                     new String[] {""alpha"", ""alpha/beta"", ""alpha/beta/gamma""});"
10238,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java,80,,"                     new String[] {""alpha"", ""alpha/beta"", ""alpha/beta/gamma""});"
10239,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java,96,,"        ds.setIncludes(new String[] {""alpha/beta/gamma/GAMMA.XML""});"
10240,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java,127,,"        ds.setIncludes(new String[] {""alpha/beta/gamma/""});"
10241,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java,312,,"        ds.setIncludes(new String[] {""alpha/**""});"
10242,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/ExecutorTest.java,98,,"            p.setNewProperty(""failfoo"", ""foo"");"
10243,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/ImmutableTest.java,44,,"        assertEquals(""override"", buildRule.getProject().getProperty(""test""));"
10244,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/ImmutableTest.java,59,,"        assertEquals(""original"", buildRule.getProject().getProperty(""DSTAMP""));"
10245,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IncludeTest.java,47,,"        buildRule.executeTarget(""test1"");"
10246,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IncludeTest.java,48,,"        assertEquals(""from included entity"", buildRule.getLog());"
10247,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IncludeTest.java,82,,"        thrown.expect(hasProperty(""location"", hasProperty(""fileName"","
10248,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IncludeTest.java,82,,"        thrown.expect(hasProperty(""location"", hasProperty(""fileName"","
10249,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,83,,"        thrown.expect(hasProperty(""cause"", instanceOf(ComparisonFailure.class)));"
10250,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,84,,"        ih.addText(p, this, ""test"");"
10251,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,160,,"        assertEquals(String.class, ih.getElementType(""six""));"
10252,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,169,,"        ih.getElementType(""seven"");"
10253,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,178,,"        ih.getElementType(""eight"");"
10254,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,187,,"        ih.getElementType(""nine"");"
10255,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,196,,"        ih.getElementType(""ten"");"
10256,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,205,,"        ih.getElementType(""eleven"");"
10257,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,214,,"        ih.getElementType(""twelve"");"
10258,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,220,,"        assertEquals(StringBuffer.class, ih.getElementType(""thirteen""));"
10259,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,231,,"        ih.createElement(p, this, ""fourteen"");"
10260,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,241,,"        ih.createElement(p, this, ""fifteen"");"
10261,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,258,,"            assertNotNull(""Support for "" + name + "" in IntrospectionHelperTest?"","
10262,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,258,,"            assertNotNull(""Support for "" + name + "" in IntrospectionHelperTest?"","
10263,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,263,,"        assertTrue(""Found all"", elemMap.isEmpty());"
10264,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,526,,"        ih.setAttribute(p, this, ""sixteen"", ""abcd"");"
10265,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,537,,"        ih.setAttribute(p, this, ""seventeen"", ""17"");"
10266,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,548,,"        ih.setAttribute(p, this, ""eightteen"", ""18"");"
10267,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,559,,"        ih.setAttribute(p, this, ""nineteen"", ""19"");"
10268,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java,156,,"        assertEquals(localize(""/1/2/3/4""),"
10269,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java,157,,"                     p.resolveFile(""4"", new File(localize(""/1/2/3""))).getPath());"
10270,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/PropertyHelperTest.java,32,,"        p.setNewProperty(""foo"", ""bar"");"
10271,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/PropertyHelperTest.java,43,,"        localProperties.addLocal(""baz"");"
10272,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/filters/ReplaceTokensTest.java,42,,"                {""replaceTokens"", ""replacetokens""},"
10273,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java,74,,"        assertThat(getFileString(buildRule.getProject().getProperty(""output"") + ""/unixlineoutput""),"
10274,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java,116,,"        buildRule.executeTarget(""hasregex"");"
10275,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java,117,,"        assumeThat(""Regex not present"","
10276,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java,118,,"                getFileString(buildRule.getProject().getProperty(""output"") + ""/replaceregexp""),"
10277,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java,119,,"                containsString(""bye world""));"
10278,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java,171,,"        buildRule.getProject().addReference(""path"", p);"
10279,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java,172,,"        buildRule.getProject().addReference(""no-override"", p);"
10280,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java,173,,"        testReference(""testInherit"", new String[] {""path"", ""path""},"
10281,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AvailableTest.java,76,,"        assertNull(buildRule.getProject().getProperty(""test""));"
10282,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AvailableTest.java,85,,"        assertEquals(""true"", buildRule.getProject().getProperty(""test""));"
10283,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/BasenameTest.java,69,,"        String checkprop = buildRule.getProject().getProperty(""file.wo.suf"");"
10284,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java,59,,"       assertEquals(""true"", buildRule.getProject().getProperty(""basic""));"
10285,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java,68,,"        File f = new File(buildRule.getProject().getProperty(""output""), ""copytest1.tmp"");"
10286,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java,192,,"        final String toDir = buildRule.getProject().getProperty(""to.dir"");"
10287,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java,244,,"    @Ignore(""Previously ignored due to naming convention"")"
10288,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ExecuteJavaTest.java,83,,"        assertTrue(""elapse time of "" + elapsed"
10289,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ExecuteJavaTest.java,84,,"                   + "" ms is less than timeout value of "" + TIME_OUT_TEST + "" ms"","
10290,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/FailTest.java,95,,"        buildRule.executeTarget(""testIfAndUnless"");"
10291,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JarTest.java,101,,"        buildRule.executeTarget(""test4"");"
10292,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JarTest.java,142,,"        testRecreate(""testRecreateNewerFileSetup"", ""testRecreateWithoutUpdateNewerFile"");"
10293,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JarTest.java,244,,"                    .filter(ze -> ze.getName().equals(""META-INF/INDEX.LIST"")).count());"
10294,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JarTest.java,420,,"        thrown.expectMessage(""No Implementation-Title set."");"
10295,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JarTest.java,428,,"        assertThat(buildRule.getFullLog(), containsString(""No Implementation-Version set.""));"
10296,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JarTest.java,429,,"        assertThat(buildRule.getFullLog(), containsString(""No Implementation-Vendor set.""));"
10297,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java,112,,"        thrown.expectMessage(""Cannot use combination of "");"
10298,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java,219,,"        thrown.expectMessage(""Java returned:"");"
10299,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java,259,,"        assertEquals(""0"", buildRule.getProject().getProperty(""exitcode""));"
10300,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavacTest.java,68,,"        project.setProperty(""build.compiler"", ""modern"");"
10301,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavacTest.java,107,,"        arg.setCompiler(""jikes"");"
10302,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavacTest.java,113,,"        project.setProperty(""build.compiler"", ""jvc"");"
10303,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavacTest.java,220,,"        project.setNewProperty(MagicNames.BUILD_JAVAC_SOURCE, ""1.4"");"
10304,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavacTest.java,227,,"        javac.setSource(""1.5"");"
10305,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavacTest.java,258,,"        p.setPath(""src"");"
10306,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ManifestClassPathTest.java,64,,"            assertNull(buildRule.getProject().getProperty(""jar.classpath""));"
10307,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ManifestTest.java,285,,"        assertTrue(""Manifest file should have contained string "","
10308,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ManifestTest.java,306,,"        assertEquals(""First section name unexpected"", ""Test1"", section1);"
10309,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/MoveTest.java,52,,"        File tmp  = new File(buildRule.getProject().getProperty(""output""), ""move.filterset.tmp"");"
10310,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ProtectedJarMethodsTest.java,62,,"            ""foo"","
10311,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ProtectedJarMethodsTest.java,90,,"        assertEquals(""lib/foo"","
10312,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ReplaceTest.java,125,,"        File testFile = new File(buildRule.getOutputDir(), ""test.txt"");"
10313,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/RmicAdvancedTest.java,232,,"        assumeFalse(""Current system is Java 15 or newer"","
10314,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/RmicAdvancedTest.java,330,,"        assumeFalse(""Current system is Java 9 or newer"","
10315,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/RmicAdvancedTest.java,340,,"        assumeTrue(""Current system is Java 8 or older"","
10316,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/RmicAdvancedTest.java,345,,"        thrown.expectMessage(""JDK9 has removed support for -Xnew"");"
10317,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/RmicAdvancedTest.java,426,,"        assumeFalse(""Current system is Java 11 or newer"", JavaEnvUtils.isAtLeastJavaVersion(""11""));"
10318,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/RmicAdvancedTest.java,435,,"        assumeTrue(""Current system is Java 10 or older"", JavaEnvUtils.isAtLeastJavaVersion(""11""));"
10319,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/RmicTest.java,65,,"        arg.setCompiler(""weblogic"");"
10320,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SQLExecTest.java,199,,"                props = getProperties(""oracle.jdbc.driver.OracleDriver"", ""test"", ""test"", ""jdbc:oracle:thin:@127.0.0.1:1521:orcl"");"
10321,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SQLExecTest.java,283,,"                     s.lastDelimiterPosition(new StringBuffer(""GO ""), null));"
10322,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/StyleTest.java,70,,"                           buildRule.getOutputDir().getAbsoluteFile() + ""/out.xml"",               // file"
10323,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/StyleTest.java,71,,"                           ""set='myvalue'"");            // expected string"
10324,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/StyleTest.java,175,,"        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + ""/one.txt"","
10325,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/StyleTest.java,181,,"        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + ""/dir/four.txt"","
10326,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/StyleTest.java,191,,"                ""filename='-not-set-'"");"
10327,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SyncTest.java,46,,"        String d = buildRule.getProject().getProperty(""dest"") + ""/a/b/c/d"";"
10328,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SyncTest.java,46,,"        String d = buildRule.getProject().getProperty(""dest"") + ""/a/b/c/d"";"
10329,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SyncTest.java,90,,"        String f = buildRule.getProject().getProperty(""dest"") + ""/e/f"";"
10330,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SyncTest.java,92,,"        assertThat(buildRule.getFullLog(), containsString((""Removing orphan file:"")));"
10331,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/TStampTest.java,55,,"        format.setPattern(""HH:mm:ss z"");"
10332,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/TStampTest.java,56,,"        format.setTimezone(""GMT"");"
10333,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/TarTest.java,84,,"        File f = new File(buildRule.getProject().getProperty(""output""), ""test5.tar"");"
10334,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/UntarTest.java,83,,"        String filename = buildRule.getProject().getProperty(""output"") + ""/untartestout/foo"";"
10335,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/UnzipTest.java,84,,"                FileUtilities.getFileContents(new File(buildRule.getProject().getProperty(""output""), ""asf-logo.gif"")));"
10336,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/UnzipTest.java,107,,"        assertFileMissing(""1/foo is excluded"", output + ""/unziptestout/1/foo"");"
10337,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/UnzipTest.java,108,,"        assertFileExists(""2/bar is not excluded"", output + ""/unziptestout/2/bar"");"
10338,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/UnzipTest.java,118,,"        assertFileMissing(""1/foo is not included"", output + ""/unziptestout/1/foo"");"
10339,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/UpToDateTest.java,57,,"        assertEquals(""true"", buildRule.getProject().getProperty(""foo""));"
10340,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/XmlnsTest.java,48,,"        assertEquals(""MyTask called"", buildRule.getLog());"
10341,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ZipTest.java,132,,"        ZipFile zipFile = new ZipFile(new File(buildRule.getProject().getProperty(""output""),"
10342,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ZipTest.java,161,,"        File archive = new File(buildRule.getProject().getProperty(""output""), ""test3.zip"");"
10343,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,98,,"        testSource(null, ""javac1.3"", """", null, ""1.1"");"
10344,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,98,,"        testSource(null, ""javac1.3"", """", null, ""1.1"");"
10345,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,99,,"        testSource(null, ""javac1.3"", """", null, ""1.2"");"
10346,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,100,,"        testSource(null, ""javac1.3"", """", null, ""1.3"");"
10347,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,107,,"        testSource(""1.3"", ""javac1.5"", """", null, ""1.1"");"
10348,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,108,,"        testSource(""1.3"", ""javac1.6"", """", null, ""1.1"");"
10349,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,109,,"        testSource(""1.3"", ""javac1.7"", """", null, ""1.1"");"
10350,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,110,,"        testSource(""1.3"", ""javac1.8"", """", null, ""1.1"");"
10351,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,125,,"        testSource(null, ""javac1.5"", """", ""1.5"");"
10352,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,134,,"        testSource(null, ""javac1.6"", """", ""1.6"");"
10353,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,142,,"                   ""If you specify -target 1.5 you now must also specify"""
10354,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,143,,"                   + "" -source 1.5"", ""1.5"");"
10355,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,145,,"                   ""If you specify -target 1.6 you now must also specify"""
10356,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,146,,"                   + "" -source 1.6"", ""1.6"");"
10357,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,148,,"                   ""If you specify -target 5 you now must also specify"""
10358,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,149,,"                   + "" -source 5"", ""5"");"
10359,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,151,,"                   ""If you specify -target 6 you now must also specify"""
10360,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,152,,"                   + "" -source 6"", ""6"");"
10361,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,153,,"        testSource(null, ""javac1.7"", """", ""1.7"");"
10362,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,178,,"        testSource(null, ""javac1.8"", """", ""1.8"");"
10363,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,184,,"        commonSourceDowngrades(""javac1.9"");"
10364,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,215,,"        commonSourceDowngrades(""javac9"");"
10365,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/JavacExternalTest.java,81,,"            javac.setExecutable(""javacExecutable"");"
10366,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/condition/IsReferenceTest.java,50,,"        assertEquals(""true"", buildRule.getProject().getProperty(""global-path""));"
10367,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/condition/TypeFoundTest.java,49,,"        assertEquals(""true"", buildRule.getProject().getProperty(""testTask""));"
10368,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/email/EmailAddressTest.java,73,,"        expectNameAddress3(new EmailAddress(""address""));"
10369,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/modules/JmodTest.java,69,,"        File jmod = new File(buildRule.getProject().getProperty(""jmod""));"
10370,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/modules/JmodTest.java,70,,"        Assert.assertTrue(""Checking that jmod was successfully created."","
10371,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/modules/JmodTest.java,188,,"        String output = runJmod(""list"", jmod.toString());"
10372,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/modules/JmodTest.java,229,,"            + ""from both attribute and child element."","
10373,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/modules/JmodTest.java,524,,"        String output = runJmod(""describe"", jmod.toString());"
10374,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/modules/LinkTest.java,180,,"            buildRule.getProject().getProperty(""hello.main-class""));"
10375,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/modules/LinkTest.java,282,,"        Assert.assertNotNull(""Checking that main-class property exists"","
10376,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/modules/LinkTest.java,347,,"                ""resource1.txt"", ""resource2.txt"");"
10377,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/modules/LinkTest.java,347,,"                ""resource1.txt"", ""resource2.txt"");"
10378,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/modules/LinkTest.java,362,,"                l -> l.endsWith(""resource1.txt absent"")));"
10379,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/modules/LinkTest.java,697,,"        File release = new File(image.root, ""release"");"
10380,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/ANTLRTest.java,124,,"        buildRule.executeTarget(""test9"");"
10381,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/ANTLRTest.java,169,,"        assertThat(buildRule.getFullLog(), not(containsString(""Skipped grammar file."")));"
10382,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/PropertyFileTest.java,102,,"        assertEquals(""Property '"" + FNAME_KEY + ""' should exist before deleting"","
10383,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/PropertyFileTest.java,146,,"        entry.setKey(""date"");"
10384,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/depend/DependTest.java,69,,"        buildRule.executeTarget(""compile"");"
10385,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/depend/DependTest.java,71,,"        FileUtilities.rollbackTimestamps(new File(buildRule.getProject().getProperty(""tempsrc.dir"")), 5);"
10386,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/depend/DependTest.java,72,,"        FileUtilities.rollbackTimestamps(new File(buildRule.getProject().getProperty(""classes.dir"")), 5);"
10387,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/depend/DependTest.java,76,,"        assertEquals(""Depend did not leave correct number of files"", 3, files.size());"
10388,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/image/ImageIOTest.java,62,,"        assertThat(buildRule.getLog(), containsString(""Processing File""));"
10389,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/image/ImageIOTest.java,67,,"        buildRule.executeTarget(""testSimpleScale"");"
10390,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/image/ImageTest.java,67,,"        assumeNotNull(""JPEG codec is unavailable in classpath"","
10391,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/image/ImageTest.java,68,,"                buildRule.getProject().getProperty(""jpeg.codec.available""));"
10392,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/image/ImageTest.java,69,,"        assertThat(buildRule.getLog(), containsString(""Processing File""));"
10393,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/BatchTestTest.java,73,,"                    {""abc"", new String[]{""abc""}}, {""abc "", new String[]{""abc""}},"
10394,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/BatchTestTest.java,82,,"                    {""abc,def"", new String[]{""abc"", ""def""}},"
10395,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java,150,,"        File testDir = new File(buildRule.getOutputDir(), ""out"");"
10396,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java,158,,"        assertFalse(""The collector file '"""
10397,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java,177,,"        buildRule.executeTarget(""failureRecorder.runtest"");"
10398,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java,199,,"        buildRule.executeTarget(""B.test04"");"
10399,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java,201,,"        buildRule.executeTarget(""D.test10"");"
10400,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java,439,,"        p.setPath(""modules"");"
10401,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java,441,,"        task.addTest(new JUnitTest(""org.apache.tools.ant.taskdefs.optional.junit.TestTest""));"
10402,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestListenerTest.java,50,,"        buildRule.getProject().setProperty(""enableEvents"", ""true"");"
10403,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestListenerTest.java,50,,"        buildRule.getProject().setProperty(""enableEvents"", ""true"");"
10404,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunnerTest.java,85,,"        assertThat(error, error, containsString(""thrown on purpose""));"
10405,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junitlauncher/JUnitLauncherTaskTest.java,79,,"                    ""testWillFail"")) {"
10406,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junitlauncher/JUnitLauncherTaskTest.java,113,,"                JUnit4SampleTest.class.getName(), ""testFoo""));"
10407,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junitlauncher/JUnitLauncherTaskTest.java,343,,"        Assert.assertTrue(""testMethodIncludeTagisExecuted was expected to be run"", wasTestRun(tracker2, JupiterSampleTest.class.getName(),"
10408,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junitlauncher/JUnitLauncherTaskTest.java,344,,"                ""testMethodIncludeTagisExecuted""));"
10409,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junitlauncher/JUnitLauncherTaskTest.java,345,,"        Assert.assertFalse(""testMethodIncludeTagisNotExecuted was expected NOT to be run"", wasTestRun(tracker2, JupiterSampleTest.class.getName(),"
10410,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junitlauncher/JUnitLauncherTaskTest.java,346,,"                ""testMethodIncludeTagisNotExecuted""));"
10411,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java,128,,"        assumeTrue(""Could not change remote directory"", changeRemoteDir(remoteTmpDir));"
10412,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java,131,,"        ds.setBasedir(new File(buildRule.getProject().getBaseDir(), ""tmp""));"
10413,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java,132,,"        ds.setIncludes(new String[] {""alpha""});"
10414,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java,143,,"        ds.setIncludes(new String[] {""alpha/""});"
10415,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java,145,,"        compareFiles(ds, new String[] {""alpha/beta/beta.xml"", ""alpha/beta/gamma/gamma.xml""},"
10416,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java,145,,"        compareFiles(ds, new String[] {""alpha/beta/beta.xml"", ""alpha/beta/gamma/gamma.xml""},"
10417,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java,146,,"            new String[] {""alpha"", ""alpha/beta"", ""alpha/beta/gamma""});"
10418,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java,146,,"            new String[] {""alpha"", ""alpha/beta"", ""alpha/beta/gamma""});"
10419,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java,166,,"        ds.setIncludes(new String[] {""alpha/beta/gamma/GAMMA.XML""});"
10420,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java,234,,"        assumeTrue(""System does not support Symlinks"", supportsSymlinks);"
10421,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java,265,,"        ds.setIncludes(new String[] {""alpha/beta/gamma/""});"
10422,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java,417,,"        ds.setIncludes(new String[] {""alpha/**""});"
10423,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java,753,,"        buildRule.getProject().addTaskDefinition(""ftp"", oneFailureFTP.class);"
10424,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java,754,,"        buildRule.getProject().executeTarget(""ftp-get-with-selector-retryable"");"
10425,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java,83,,"        String[] sTestCmdLine = {""soscmd"", ""-command"", ""GetFile"", ""-file"","
10426,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java,83,,"        String[] sTestCmdLine = {""soscmd"", ""-command"", ""GetFile"", ""-file"","
10427,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java,84,,"                SRC_FILE, ""-revision"", ""007"", ""-server"", SOS_SERVER_PATH, ""-name"","
10428,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java,84,,"                SRC_FILE, ""-revision"", ""007"", ""-server"", SOS_SERVER_PATH, ""-name"","
10429,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java,85,,"                SOS_USERNAME, ""-password"", SOS_PASSWORD, ""-database"", VSS_SERVER_PATH,"
10430,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java,85,,"                SOS_USERNAME, ""-password"", SOS_PASSWORD, ""-database"", VSS_SERVER_PATH,"
10431,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java,86,,"                ""-project"", DS_VSS_PROJECT_PATH, ""-verbose"", ""-nocompress"","
10432,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java,86,,"                ""-project"", DS_VSS_PROJECT_PATH, ""-verbose"", ""-nocompress"","
10433,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java,87,,"                ""-nocache"", ""-workdir"", project.getBaseDir().getAbsolutePath()"
10434,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java,142,,"        buildRule.configureProject(""src/etc/testcases/taskdefs/optional/sos/sos.xml"");"
10435,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java,143,,"        expectSpecificBuildException(""sosget.1"", ""sosserverpath attribute must be set!"");"
10436,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java,144,,"        expectSpecificBuildException(""sosget.2"", ""username attribute must be set!"");"
10437,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java,145,,"        expectSpecificBuildException(""sosget.3"", ""vssserverpath attribute must be set!"");"
10438,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java,146,,"        expectSpecificBuildException(""sosget.4"", ""projectpath attribute must be set!"");"
10439,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/vss/MSVSSTest.java,122,,"        buildRule.configureProject(""src/etc/testcases/taskdefs/optional/vss/vss.xml"");"
10440,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/vss/MSVSSTest.java,123,,"        expectSpecificBuildException(""vssget.1"", ""vsspath attribute must be set!"");"
10441,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/AbstractFileSetTest.java,64,,"        thrown.expectMessage(""You must not specify more than one attribute when using refid"");"
10442,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/AbstractFileSetTest.java,66,,"        f.setRefid(new Reference(getProject(), ""dummyref""));"
10443,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/AbstractFileSetTest.java,72,,"        thrown.expectMessage(""You must not specify nested elements when using refid"");"
10444,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/AbstractFileSetTest.java,168,,"        thrown.expectMessage(""This data type contains a circular reference."");"
10445,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/AbstractFileSetTest.java,169,,"        project.addReference(""dummy"", f);"
10446,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/AbstractFileSetTest.java,188,,"        project.addReference(""dummy1"", f);"
10447,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/AbstractFileSetTest.java,189,,"        f.setRefid(new Reference(getProject(), ""dummy2""));"
10448,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/AbstractFileSetTest.java,192,,"        fa.setRefid(new Reference(getProject(), ""dummy3""));"
10449,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/CommandlineJavaTest.java,79,,"        c.createArgument().setValue(""org.apache.tools.ant.CommandlineJavaTest"");"
10450,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/CommandlineJavaTest.java,80,,"        c.setClassname(""junit.textui.TestRunner"");"
10451,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/CommandlineJavaTest.java,81,,"        c.createVmArgument().setValue(""-Djava.compiler=NONE"");"
10452,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/CommandlineJavaTest.java,83,,"        assertEquals(""no classpath"", 4, s.length);"
10453,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/CommandlineJavaTest.java,101,,"        assertEquals(""with classpath"", 6, s.length);"
10454,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/CommandlineJavaTest.java,130,,"        assertNull(System.getProperty(""key""));"
10455,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/CommandlineJavaTest.java,136,,"        project.setProperty(""key2"", ""value2"");"
10456,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/DirSetTest.java,56,,"        getProject().addReference(""dummy"", fs);"
10457,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/FileListTest.java,58,,"        thrown.expectMessage(""You must not specify more than one attribute when using refid"");"
10458,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/FileListTest.java,60,,"        f.setRefid(new Reference(buildRule.getProject(), ""dummyref""));"
10459,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/FileListTest.java,90,,"        thrown.expectMessage(""This data type contains a circular reference."");"
10460,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/FileListTest.java,91,,"        buildRule.getProject().addReference(""dummy"", f);"
10461,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/FileListTest.java,111,,"        f.setRefid(new Reference(buildRule.getProject(), ""dummyA""));"
10462,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/FileListTest.java,114,,"        fa.setRefid(new Reference(buildRule.getProject(), ""dummyB""));"
10463,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/FilterSetTest.java,59,,"        buildRule.executeTarget(""test1"");"
10464,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/FilterSetTest.java,65,,"        buildRule.executeTarget(""test2"");"
10465,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/MapperTest.java,71,,"        thrown.expectMessage(""You must not specify more than one attribute when using refid"");"
10466,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/MapperTest.java,72,,"        m.setFrom(""*.java"");"
10467,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/MapperTest.java,73,,"        m.setRefid(new Reference(project, ""dummy""));"
10468,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/MapperTest.java,117,,"        m.setRefid(new Reference(project, ""dummy2""));"
10469,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/MapperTest.java,120,,"        m2.setRefid(new Reference(project, ""dummy3""));"
10470,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/ModuleVersionTest.java,36,,"        moduleVersion.setNumber(""1.1.3"");"
10471,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/ModuleVersionTest.java,42,,"        Assert.assertNotNull(""Checking for non-null module version string."","
10472,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/ModuleVersionTest.java,44,,"        Assert.assertTrue(""Checking for correct module version string."","
10473,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,74,,"            assertEquals(""\\a"", l[0]);"
10474,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,90,,"           assertThat(""test resolved relative to src/etc"","
10475,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,127,,"        p = new Path(project, ""c:\\test"");"
10476,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,130,,"            assertEquals(""no drives on Unix"", 2, l.length);"
10477,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,131,,"            assertThat(""c resolved relative to project's basedir"","
10478,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,133,,"            assertEquals(""/test"", l[1]);"
10479,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,135,,"            assertEquals(""volumes on NetWare"", 1, l.length);"
10480,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,138,,"            assertEquals(""drives on DOS"", 1, l.length);"
10481,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,158,,"            assertEquals(""d:\\programs"", l[1].toLowerCase(Locale.US));"
10482,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,210,,"        p = new Path(project, ""sys:\\test"");"
10483,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,214,,"            assertThat(""sys resolved relative to project's basedir"","
10484,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,215,,"                   l[0], endsWith(""/sys""));"
10485,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,221,,"            assertEquals(""no multiple character-length volumes on Windows"", 2, l.length);"
10486,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,223,,"                   l[0], endsWith(""\\sys""));"
10487,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,224,,"            assertThat(""test resolved relative to project's basedir"","
10488,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,225,,"                   l[1], endsWith(""\\test""));"
10489,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,239,,"            assertThat(""dev resolved relative to project's basedir"","
10490,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,434,,"        thrown.expectMessage(""You must not specify more than one attribute when using refid"");"
10491,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,436,,"        p.setRefid(new Reference(project, ""dummyref""));"
10492,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,468,,"        thrown.expectMessage(""You must not specify nested elements when using refid"");"
10493,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PathTest.java,554,,"        f.setFiles(""build.xml"");"
10494,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PatternSetTest.java,68,,"        thrown.expectMessage(""You must not specify more than one attribute when using refid"");"
10495,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PatternSetTest.java,69,,"        p.setIncludes(""**/*.java"");"
10496,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PatternSetTest.java,70,,"        p.setRefid(new Reference(project, ""dummyref""));"
10497,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PatternSetTest.java,108,,"        thrown.expectMessage(""You must not specify nested elements when using refid"");"
10498,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PatternSetTest.java,140,,"        thrown.expectMessage(""This data type contains a circular reference."");"
10499,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PatternSetTest.java,141,,"        project.addReference(""dummy"", p);"
10500,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PatternSetTest.java,161,,"        p.setRefid(new Reference(project, ""dummyA""));"
10501,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PatternSetTest.java,164,,"        pa.setRefid(new Reference(project, ""dummyB""));"
10502,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PermissionsTest.java,49,,"        perm.setClass(""java.util.PropertyPermission"");"
10503,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/PermissionsTest.java,53,,"        perm.setActions(""read"");"
10504,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/ResourceOutputTest.java,64,,"        testoutputbe(new Resource(""foo""));"
10505,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/ResourceOutputTest.java,81,,"        StringResource r = new StringResource(""bar"");"
10506,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/TarFileSetTest.java,56,,"        tfs.setSrc(new File(""example.tar""));"
10507,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java,89,,"        InputSource result = catalog.resolveEntity(""PUBLIC ID ONE"", ""i/dont/exist.dtd"");"
10508,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java,89,,"        InputSource result = catalog.resolveEntity(""PUBLIC ID ONE"", ""i/dont/exist.dtd"");"
10509,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java,145,,"        project.addReference(""catalog"", catalog);"
10510,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java,175,,"        project.addReference(""catalogA"", catalogA);"
10511,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java,192,,"        dtd.setPublicId(""-//stevo//DTD doc 1.0//EN"");"
10512,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java,194,,"        String sysid = project.resolveFile(""src/etc/testcases/taskdefs/optional/xml/doc.dtd"")"
10513,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java,200,,"                                                   ""nap:chemical+brothers"");"
10514,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java,234,,"        String uri = ""http://foo.com/bar/blah.xml"";"
10515,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/ZipFileSetTest.java,55,,"        zfs.setSrc(new File(""example.zip""));"
10516,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java,60,,"        assertEquals(""Classfileset did not pick up expected number of class files"","
10517,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java,64,,"        assertThat(""Result did not contain C.class"", files, hasKey(""C.class""));"
10518,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java,64,,"        assertThat(""Result did not contain C.class"", files, hasKey(""C.class""));"
10519,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java,126,,"        assertThat(""Result did not contain test"" + File.separator + ""Outer$Inner.class"","
10520,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java,127,,"            files, hasKey(""test"" + File.separator + ""Outer$Inner.class""));"
10521,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/resources/FileResourceTest.java,49,,"        f.setName(""foo"");"
10522,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/resources/FileResourceTest.java,59,,"        f.setName(""foo/bar"");"
10523,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/resources/FileResourceTest.java,110,,"        FileResource f = new FileResource(new File(root, ""foo/a""));"
10524,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/resources/MultiRootFileSetTest.java,70,,"        thrown.expectMessage(""You must not specify more than one attribute when using refid"");"
10525,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/resources/MultiRootFileSetTest.java,73,,"        multiRootFileSet.setRefid(new Reference(getProject(), ""dummyref""));"
10526,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/resources/ResourceListTest.java,55,,"        rl.setEncoding(""foo"");"
10527,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/resources/ResourceListTest.java,56,,"        rl.setRefid(new Reference(buildRule.getProject(), ""dummyref""));"
10528,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/resources/ResourceListTest.java,70,,"        thrown.expectMessage(""You must not specify nested elements when using refid"");"
10529,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/selectors/ContainsSelectorTest.java,85,,"        assertEquals(""TFFFTFFFFFFT"", selectorRule.selectionString(s));"
10530,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java,152,,"        assertNotNull(""Ant home not set"","
10531,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java,173,,"            bft.doTarget(""modifiedselectortest-scenario-clean"");"
10532,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java,474,,"            assertNotNull(""Hashvalue was null for "" + file.getAbsolutePath(), hash1);"
10533,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java,479,,"            assertEquals(""getHashvalue() returned different value for "" + file.getAbsolutePath(), hash1, hash2);"
10534,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java,507,,"            performTests(s, ""TTTTTTTTTTTT"");"
10535,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/selectors/SizeSelectorTest.java,120,,"        param2.setName(""units"");"
10536,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/types/selectors/TokenizedPatternTest.java,30,,"        SelectorUtils.DEEP_TREE_MATCH + File.separator + "".svn"""
10537,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java,45,,"        v1.addElement(""foo"");"
10538,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java,49,,"        v1.addElement(""bar"");"
10539,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java,55,,"        s2.push(""baz"");"
10540,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,42,,"        assertTrue(""&#20;"", w.isReference(""&#20;""));"
10541,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,43,,"        assertTrue(""&#x20;"", w.isReference(""&#x20;""));"
10542,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,44,,"        assertTrue(""&#xA0;"", w.isReference(""&#xA0;""));"
10543,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,45,,"        assertFalse(""&#A0;"", w.isReference(""&#A0;""));"
10544,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,46,,"        assertFalse(""20;"", w.isReference(""20;""));"
10545,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,47,,"        assertFalse(""&#20"", w.isReference(""&#20""));"
10546,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,48,,"        assertTrue(""&quot;"", w.isReference(""&quot;""));"
10547,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,49,,"        assertTrue(""&apos;"", w.isReference(""&apos;""));"
10548,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,50,,"        assertTrue(""&gt;"", w.isReference(""&gt;""));"
10549,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,51,,"        assertTrue(""&lt;"", w.isReference(""&lt;""));"
10550,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,52,,"        assertTrue(""&amp;"", w.isReference(""&amp;""));"
10551,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,98,,"        Element root = d.createElement(""root"");"
10552,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,181,,"        Element root = d.createElementNS(""urn:foo"", ""root"");"
10553,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,182,,"        root.setAttributeNS(""urn:foo2"", ""bar"", ""baz"");"
10554,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,182,,"        root.setAttributeNS(""urn:foo2"", ""bar"", ""baz"");"
10555,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,182,,"        root.setAttributeNS(""urn:foo2"", ""bar"", ""baz"");"
10556,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java,235,,"        Element child = d.createElementNS(""urn:foo"", ""child"");"
10557,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DeweyDecimalTest.java,32,,"        assertEquals(""1.2.3"", new DeweyDecimal(""1.2.3"").toString());"
10558,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DeweyDecimalTest.java,61,,"        assertEquals(new DeweyDecimal(""1.2.0""), new DeweyDecimal(""1.2""));"
10559,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/DeweyDecimalTest.java,61,,"        assertEquals(new DeweyDecimal(""1.2.0""), new DeweyDecimal(""1.2""));"
10560,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,124,,"        assumeTrue(""DOS or NetWare"", !Os.isFamily(""dos"") && !Os.isFamily(""netware""));"
10561,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,124,,"        assumeTrue(""DOS or NetWare"", !Os.isFamily(""dos"") && !Os.isFamily(""netware""));"
10562,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,134,,"        assumeTrue(""Not DOS or Netware"", Os.isFamily(""dos"") || Os.isFamily(""netware""));"
10563,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,156,,"                getFileUtils().resolveFile(null, driveSpec + ""/////"").getPath());"
10564,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,158,,"                getFileUtils().resolveFile(null, driveSpec + ""\\\\\\\\\\\\"").getPath());"
10565,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,207,,"        assertEquals(localize(""/1/2/3/4""),"
10566,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,208,,"                     getFileUtils().resolveFile(new File(localize(""/1/2/3"")), ""4"").getPath());"
10567,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,345,,"        getFileUtils().normalize(""foo"");"
10568,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,373,,"        File tmp1 = getFileUtils().createTempFile(null, ""pre"", "".suf"", null, false, true);"
10569,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,373,,"        File tmp1 = getFileUtils().createTempFile(null, ""pre"", "".suf"", null, false, true);"
10570,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,375,,"        assertThat(""starts with pre"", name, startsWith(""pre""));"
10571,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,376,,"        assertThat(""ends with .suf"", name, endsWith("".suf""));"
10572,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,377,,"        assertTrue(""File was created"", tmp1.exists());"
10573,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,461,,"        assertTrue(tmpFile + "" must be child of "" + projectTmpDir,"
10574,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,477,,"        assumeFalse(""Test doesn't run on DOS"", Os.isFamily(""dos""));"
10575,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,480,,"        final String autoTempDir = project.getProperty(""ant.auto.tmpdir"");"
10576,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,524,,"                        new File(ROOT, ""bar"")));"
10577,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,527,,"                        new File(ROOT, ""build.xml"")));"
10578,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,556,,"        assertEquals(""bar"", getFileUtils().removeLeadingPath(new File(""/foo""),"
10579,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,557,,"                                                 new File(""/foo/bar"")));"
10580,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,558,,"        assertEquals(""bar"", getFileUtils().removeLeadingPath(new File(""/foo/""),"
10581,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,568,,"        assertEquals(""bar"", getFileUtils().removeLeadingPath(new File(""c:\\foo""),"
10582,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,569,,"                                                 new File(""c:\\foo\\bar"")));"
10583,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,570,,"        assertEquals(""bar"", getFileUtils().removeLeadingPath(new File(""c:\\foo\\""),"
10584,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,582,,"                                              new File(""/foo/bar/"")));"
10585,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,618,,"            assertThat(""file: URIs must name absolute paths"", getFileUtils().toURI(""./foo""), startsWith(""file:/""));"
10586,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,670,,"            assertEqualsIgnoreDriveCase(""C:\\foo"", getFileUtils().fromURI(""file:///c:/foo""));"
10587,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/JavaEnvUtilsTest.java,45,,"        assertEquals(""java"", JavaEnvUtils.getJreExecutable(""java""));"
10588,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/JavaEnvUtilsTest.java,46,,"        assertEquals(""javac"", JavaEnvUtils.getJdkExecutable(""javac""));"
10589,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/JavaEnvUtilsTest.java,47,,"        assertEquals(""foo"", JavaEnvUtils.getJreExecutable(""foo""));"
10590,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/JavaEnvUtilsTest.java,59,,"        assertTrue(j + "" is absolute"", (new File(j)).isAbsolute());"
10591,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/JavaEnvUtilsTest.java,130,,"    @SuppressWarnings(""deprecation"")"
10592,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java,63,,"        File simple = new File(ROOT, ""src/etc/testcases/util/simple.properties"");"
10593,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java,81,,"        assertThat(""missing comment"", s, containsString((""! more comment"")));"
10594,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java,173,,"        assertThat(""should have had no properties "", s, not(containsString((""prop.beta""))));"
10595,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/PermissionUtilsTest.java,74,,"                     PermissionUtils.FileType.of(folder.newFile(""ant.tst"").toPath()));"
10596,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/PermissionUtilsTest.java,113,,"            ZipEntry e = new ZipEntry(""foo"");"
10597,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/ReaderInputStreamTest.java,46,,"        compareBytes(""abc"", ""utf-8"");"
10598,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/ReaderInputStreamTest.java,194,,"        testWithSingleByteRead(TEST_STRING, ""UTF-8"");"
10599,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/facade/FacadeTaskHelperTest.java,34,,"        FacadeTaskHelper fth = new FacadeTaskHelper(""foo"");"
10600,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/facade/FacadeTaskHelperTest.java,37,,"        fth.setMagicValue(""bar"");"
10601,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/regexp/RegexpMatcherTest.java,53,,"        reg.setPattern(""aaaa"");"
10602,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/regexp/RegexpMatcherTest.java,55,,"        assertTrue(""aaaa should match xaaaa"", reg.matches(""xaaaa""));"
10603,./TargetProjects/ant/src/tests/junit/org/apache/tools/ant/util/regexp/RegexpMatcherTest.java,126,,"        reg.setPattern(""end of text$"");"
10604,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,67,,"            testMailClient.from(""Mail Message <EmailTaskTest@ant.apache.org>"");"
10605,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,68,,"            testMailClient.to(""to@you.com"");"
10606,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,72,,"            testMailClient.setSubject(""Test subject"");"
10607,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,73,,"            testMailClient.setMessage(""test line 1\n"""
10608,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,74,,"                    + ""test line 2"");"
10609,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,84,,"        String expectedResult = ""220 test SMTP EmailTaskTest\r\n"""
10610,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,85,,"                + ""HELO "" + local + ""\r\n"""
10611,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,85,,"                + ""HELO "" + local + ""\r\n"""
10612,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,86,,"                + ""250 "" + local + "" Hello "" + local + "" [127.0.0.1], pleased to meet you\r\n"""
10613,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,86,,"                + ""250 "" + local + "" Hello "" + local + "" [127.0.0.1], pleased to meet you\r\n"""
10614,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,86,,"                + ""250 "" + local + "" Hello "" + local + "" [127.0.0.1], pleased to meet you\r\n"""
10615,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,87,,"                + ""MAIL FROM: <EmailTaskTest@ant.apache.org>\r\n"""
10616,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,88,,"                + ""250\r\n"""
10617,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,89,,"                + ""RCPT TO: <to@you.com>\r\n"""
10618,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,97,,"                + ""DATA\r\n"""
10619,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,98,,"                + ""354\r\n"""
10620,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,99,,"                + ""Subject: Test subject\r\n"" + ""From: Mail Message <EmailTaskTest@ant.apache.org>\r\n"""
10621,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,99,,"                + ""Subject: Test subject\r\n"" + ""From: Mail Message <EmailTaskTest@ant.apache.org>\r\n"""
10622,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,100,,"                + ""To: to@you.com\r\n"""
10623,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,102,,"                + ""X-Mailer: org.apache.tools.mail.MailMessage (ant.apache.org)\r\n"""
10624,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,104,,"                + ""test line 1\r\n"""
10625,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,105,,"                + ""test line 2\r\n"""
10626,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,107,,"                + "".\r\n"""
10627,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,109,,"                + ""QUIT\r\n"""
10628,./TargetProjects/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java,110,,"                + ""221\r\n"";"
10629,./TargetProjects/ant/src/tests/junit/org/apache/tools/zip/ExtraFieldUtilsTest.java,88,,"        assertEquals(""number of fields"", 2, ze.length);"
10630,./TargetProjects/ant/src/tests/junit/org/apache/tools/zip/ExtraFieldUtilsTest.java,89,,"        assertThat(""type field 1"", ze[0], instanceOf(AsiExtraField.class));"
10631,./TargetProjects/ant/src/tests/junit/org/apache/tools/zip/ExtraFieldUtilsTest.java,90,,"        assertEquals(""mode field 1"", 040755,"
10632,./TargetProjects/ant/src/tests/junit/org/apache/tools/zip/ExtraFieldUtilsTest.java,92,,"        assertThat(""type field 2"", ze[1], instanceOf(UnrecognizedExtraField.class));"
10633,./TargetProjects/ant/src/tests/junit/org/apache/tools/zip/ExtraFieldUtilsTest.java,93,,"        assertEquals(""data length field 2"", 1,"
10634,./TargetProjects/ant-antlibs-antunit/src/tests/junit/org/apache/ant/antunit/SetUpAndTearDownTest.java,125,,"        assertTrue(""summary"", index > -1);"
10635,./TargetProjects/ant-antlibs-antunit/src/tests/junit/org/apache/ant/antunit/SetUpAndTearDownTest.java,172,,"        assertTrue(""testname"", index > -1);"
10636,./TargetProjects/ant-antlibs-antunit/src/tests/junit/org/apache/ant/antunit/junit4/AntUnitSuiteRunnerTest.java,112,,"            fail(""InitializationError expected"");"
10637,./TargetProjects/ant-antlibs-antunit/src/tests/junit/org/apache/ant/antunit/junit4/AntUnitSuiteRunnerTest.java,115,,"            assertTrue(""Unexpected error : "" + msg, msg.contains(""suite""));"
10638,./TargetProjects/ant-antlibs-antunit/src/tests/junit/org/apache/ant/antunit/junit4/AntUnitSuiteRunnerTest.java,115,,"            assertTrue(""Unexpected error : "" + msg, msg.contains(""suite""));"
10639,./TargetProjects/ant-antlibs-antunit/src/tests/junit/org/apache/ant/antunit/listener/PlainListenerTest.java,34,,"        executeTarget(""showinfo"");"
10640,./TargetProjects/ant-antlibs-antunit/src/tests/junit/org/apache/ant/antunit/listener/PlainListenerTest.java,42,,"        int indexTest1 = log.indexOf(""infomessage"", index);"
10641,./TargetProjects/ant-antlibs-antunit/src/tests/junit/org/apache/ant/antunit/listener/PlainListenerTest.java,54,,"        assertTrue(""Should not have shown error message"", -1 == log.indexOf(""errormessage""));"
10642,./TargetProjects/ant-antlibs-antunit/src/tests/junit/org/apache/ant/antunit/listener/PlainListenerTest.java,55,,"        assertTrue(""Should not have shown warning message"", -1 == log.indexOf(""warningmessage""));"
10643,./TargetProjects/ant-antlibs-antunit/src/tests/junit/org/apache/ant/antunit/listener/PlainListenerTest.java,56,,"        assertTrue(""Should not have shown info message"", -1 == log.indexOf(""infomessage""));"
10644,./TargetProjects/ant-antlibs-antunit/src/tests/junit/org/apache/ant/antunit/listener/PlainListenerTest.java,57,,"        assertTrue(""Should not have shown verbose message"", -1 == log.indexOf(""verbosemessage""));"
10645,./TargetProjects/ant-antlibs-antunit/src/tests/junit/org/apache/ant/antunit/listener/PlainListenerTest.java,57,,"        assertTrue(""Should not have shown verbose message"", -1 == log.indexOf(""verbosemessage""));"
10646,./TargetProjects/ant-antlibs-antunit/src/tests/junit/org/apache/ant/antunit/listener/PlainListenerTest.java,58,,"        assertTrue(""Should not have shown debug message"", -1 == log.indexOf(""debugmessage""));"
10647,./TargetProjects/ant-antlibs-antunit/src/tests/junit/org/apache/ant/antunit/listener/PlainListenerTest.java,58,,"        assertTrue(""Should not have shown debug message"", -1 == log.indexOf(""debugmessage""));"
10648,./TargetProjects/ant-antlibs-antunit/src/tests/junit/org/apache/ant/antunit/listener/PlainListenerTest.java,64,,"        assertTrue(""Should have shown error message"", -1 != log.indexOf(""errormessage""));"
10649,./TargetProjects/ant-antlibs-antunit/src/tests/junit/org/apache/ant/antunit/listener/PlainListenerTest.java,75,,"        assertTrue(""Should have shown warning message"", -1 != log.indexOf(""warningmessage""));"
10650,./TargetProjects/ant-antlibs-props/src/main/org/apache/ant/props/LogicalOperationEvaluator.java,38,,"    private static final String EXPR = ""(?:"" + BOOL + ""|"" + NEGATED_BOOL + "")"";"
10651,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/EasyAntMain.java,306,,"        if (line.hasOption(""find"")) {"
10652,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/EasyAntMain.java,585,,"        Option logfile = OptionBuilder.withArgName(""file"").hasArg().withDescription(""use given file for log"")"
10653,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/EasyAntMain.java,588,,"        Option logger = OptionBuilder.withArgName(""classname"").hasArg()"
10654,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/configuration/EasyAntConfigParser.java,162,,"                if (attributes.getValue(""url"") != null && !attributes.getValue(""url"").equals("""")) {"
10655,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/configuration/EasyAntConfigParser.java,165,,"                if (attributes.getValue(""file"") != null && !attributes.getValue(""file"").equals("""")) {"
10656,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/parser/DefaultEasyAntXmlModuleDescriptorParser.java,81,,"    static final String[] PLUGIN_REGULAR_ATTRIBUTES = new String[] { ""organisation"", ""org"", ""module"", ""revision"","
10657,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/parser/DefaultEasyAntXmlModuleDescriptorParser.java,81,,"    static final String[] PLUGIN_REGULAR_ATTRIBUTES = new String[] { ""organisation"", ""org"", ""module"", ""revision"","
10658,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/parser/DefaultEasyAntXmlModuleDescriptorParser.java,81,,"    static final String[] PLUGIN_REGULAR_ATTRIBUTES = new String[] { ""organisation"", ""org"", ""module"", ""revision"","
10659,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/parser/DefaultEasyAntXmlModuleDescriptorParser.java,82,,"            ""rev"", ""mrid"", ""conf"", ""mode"", ""as"", ""inheritable"", ""inherit-scope"" };"
10660,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/parser/DefaultEasyAntXmlModuleDescriptorParser.java,82,,"            ""rev"", ""mrid"", ""conf"", ""mode"", ""as"", ""inheritable"", ""inherit-scope"" };"
10661,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/parser/DefaultEasyAntXmlModuleDescriptorParser.java,299,,"                        Message.debug(""No organisation specified for buildtype "" + mrid + "" using the default one"");"
10662,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/parser/DefaultEasyAntXmlModuleDescriptorParser.java,347,,"            ivyDependency.setName(getSettings().substitute(attributes.getValue(""name"")));"
10663,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/parser/DefaultEasyAntXmlModuleDescriptorParser.java,360,,"            ivyDependencyExclude.setExt(getSettings().substitute(attributes.getValue(""ext"")));"
10664,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/parser/DefaultEasyAntXmlModuleDescriptorParser.java,361,,"            ivyDependencyExclude.setType(getSettings().substitute(attributes.getValue(""type"")));"
10665,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/parser/DefaultEasyAntXmlModuleDescriptorParser.java,362,,"            ivyDependencyExclude.setMatcher(getSettings().substitute(attributes.getValue(""matcher"")));"
10666,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/parser/DefaultEasyAntXmlModuleDescriptorParser.java,639,,"                        sb.append("" from "").append(plugin.getSourceModule().toString());"
10667,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/report/XMLEasyAntReportWriter.java,77,,"            out.println(""\t\textra-"" + entry.getKey() + ""=\"""" + XMLHelper.escape(entry.getValue().toString()) + ""\"""");"
10668,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/report/XMLEasyAntReportWriter.java,80,,"        out.println(""\t\tdate=\"""" + DateUtil.format(report.getDate()) + ""\""/>"");"
10669,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/core/report/XMLEasyAntReportWriter.java,338,,"                param.append("" description=\"""");"
10670,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/man/Describe.java,57,,"                    ""\t\tDescription: """
10671,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/tasks/ImportAntscripts.java,117,,"                xmlreport = getResolveReport(ivy, md.getModuleRevisionId().getModuleId(), ""default"", ivyfile);"
10672,./TargetProjects/ant-easyant-core/src/main/java/org/apache/easyant/tasks/SubModule.java,91,,"                    log(""Leaving directory: "" + subdirPath + ""\n"", Project.MSG_INFO);"
10673,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/core/BuildConfigurationHelperTest.java,38,,"        List<String> buildList = BuildConfigurationHelper.buildList(""a-conf,another-conf"");"
10674,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/core/BuildConfigurationHelperTest.java,44,,"        assertThat(BuildConfigurationHelper.contains(""a-conf"", null), is(false));"
10675,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/core/BuildConfigurationHelperTest.java,72,,"        assertThat(BuildConfigurationHelper.getFirstBuildConfigurationMatching(""aconf"", ""aconf""), is(""aconf""));"
10676,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/core/BuildConfigurationHelperTest.java,85,,"        boolean buildConfigurationActive = BuildConfigurationHelper.isBuildConfigurationActive(null, p, ""a-message"");"
10677,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/core/EasyAntBaseTest.java,377,,"        conf.getDefinedProps().put(EasyAntMagicNames.SKIP_CORE_REVISION_CHECKER, ""true"");"
10678,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/core/EasyAntEngineTest.java,72,,"                ""/repositories/easyant-ivysettings-test.xml""));"
10679,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/core/PropertiesAsAttributesTest.java,36,,"        assertPropertyEquals(""my.property.inbuildtype"", ""true"");"
10680,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/CheckResolverTest.java,75,,"        checkResolver.getProject().setProperty(""resolver.to.check"", ""unknown"");"
10681,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/ImportDeferredTest.java,71,,"        simplePluginDependency.setOrg(""mycompany"");"
10682,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/ImportDeferredTest.java,72,,"        simplePluginDependency.setName(""simpleplugin"");"
10683,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/ImportDeferredTest.java,76,,"        simplePluginWithPropertiesDependency.setName(""simplepluginwithproperties"");"
10684,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/ImportTest.java,82,,"        importTask.setOrg(""mycompany"");"
10685,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/ImportTest.java,83,,"        importTask.setModule(""simpleplugin"");"
10686,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/ImportTest.java,84,,"        importTask.setRev(""0.1"");"
10687,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/ImportTest.java,119,,"        importTask.setModule(""simplepluginwithproperties"");"
10688,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/LoadModuleTest.java,161,,"        assertLogNotContaining(""Loading build module :"");"
10689,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/LoadModuleTest.java,162,,"        assertLogContaining(""Loading build file : "" + moduleAntFile.getAbsolutePath());"
10690,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/ParameterTaskTest.java,48,,"        parameterTask.setProperty(""a-property"");"
10691,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/ParameterTaskTest.java,116,,"        parameterTask.setPath(""a-path-id"");"
10692,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/PathTaskTest.java,58,,"        String classpathName = ""myclasspath"";"
10693,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/PathTaskTest.java,71,,"        File file1 = new File(""afile"");"
10694,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/PathTaskTest.java,80,,"        File file2 = new File(""anotherfile"");"
10695,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/PropertyTaskTest.java,44,,"        propertyTask.setName(""a-property"");"
10696,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/PropertyTaskTest.java,45,,"        propertyTask.setValue(""a-value"");"
10697,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/RegisterArtifactTest.java,82,,"        registerArtifact.setName(""my-artifact-name"");"
10698,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/RegisterArtifactTest.java,117,,"        registerArtifact.setExt(""jar"");"
10699,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/SearchModuleTest.java,83,,"        searchModule.setOrganisation(""foo"");"
10700,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/SearchModuleTest.java,113,,"        searchModule.setPropertyPrefix(""mysearch"");"
10701,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/SearchModuleTest.java,119,,"        searchModule.setOrganisation(""mycompany"");"
10702,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/SearchModuleTest.java,120,,"        searchModule.setModule(""simpleplugin"");"
10703,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/SearchModuleTest.java,121,,"        searchModule.setRevision(""0.1"");"
10704,./TargetProjects/ant-easyant-core/src/test/java/org/apache/easyant/tasks/SubModuleTest.java,105,,"        File multimodule = new File(this.getClass().getResource(""multimodule"").toURI());"
10705,./TargetProjects/ant-easyant-tasks/command-line-debugger/src/main/java/org/apache/tools/ant/PropertyDebugHelper.java,32,,"		project.log(""Auditing change to property: "" + name, Project.MSG_DEBUG);"
10706,./TargetProjects/ant-easyant-tasks/mavenivy-adapters/src/main/java/org/apache/easyant/tasks/adapters/ScopeMappings.java,83,,"            mappings.add(new Mapping(""default"", ""compile""));"
10707,./TargetProjects/ant-easyant-tasks/mavenivy-adapters/src/main/java/org/apache/easyant/tasks/adapters/TypeMappings.java,62,,"            mappings.add(new Mapping(""jar""));"
10708,./TargetProjects/ant-easyant-tasks/mavenivy-adapters/src/main/java/org/apache/easyant/tasks/adapters/TypeMappings.java,65,,"            mappings.add(new Mapping(""javadoc"",""zip"",""zip"",""javadoc""));"
10709,./TargetProjects/ant-ivy/src/example/configurations/multi-projects/filter-framework/test/filter/AbstractTestFilter.java,38,,"        getIFilter().filter(null, ""test"");"
10710,./TargetProjects/ant-ivy/src/java/org/apache/ivy/Main.java,108,,"                    new OptionBuilder(""ivy"").arg(""ivyfile"")"
10711,./TargetProjects/ant-ivy/src/java/org/apache/ivy/Main.java,117,,"                            .arg(""revision"")"
10712,./TargetProjects/ant-ivy/src/java/org/apache/ivy/Main.java,125,,"                    new OptionBuilder(""types"").arg(""types"").countArgs(false)"
10713,./TargetProjects/ant-ivy/src/java/org/apache/ivy/Main.java,201,,"                    new OptionBuilder(""main"").arg(""main"")"
10714,./TargetProjects/ant-ivy/src/java/org/apache/ivy/ant/IvyAntSettings.java,103,,"    private String id = ""ivy.instance"";"
10715,./TargetProjects/ant-ivy/src/java/org/apache/ivy/ant/IvyArtifactReport.java,133,,"                saxHandler.startElement(null, ""modules"", ""modules"", new AttributesImpl());"
10716,./TargetProjects/ant-ivy/src/java/org/apache/ivy/ant/IvyArtifactReport.java,159,,"                            saxHandler.endElement(null, ""artifact"", ""artifact"");"
10717,./TargetProjects/ant-ivy/src/java/org/apache/ivy/ant/IvyArtifactReport.java,162,,"                    saxHandler.endElement(null, ""module"", ""module"");"
10718,./TargetProjects/ant-ivy/src/java/org/apache/ivy/ant/IvyArtifactReport.java,185,,"        moduleAttrs.addAttribute(null, ""organisation"", ""organisation"", ""CDATA"", dependency"
10719,./TargetProjects/ant-ivy/src/java/org/apache/ivy/ant/IvyArtifactReport.java,187,,"        moduleAttrs.addAttribute(null, ""name"", ""name"", ""CDATA"", dependency.getModuleId().getName());"
10720,./TargetProjects/ant-ivy/src/java/org/apache/ivy/ant/IvyArtifactReport.java,214,,"                originLocationAttrs.addAttribute(null, ""is-local"", ""is-local"", ""CDATA"", ""true"");"
10721,./TargetProjects/ant-ivy/src/java/org/apache/ivy/ant/IvyArtifactReport.java,221,,"                    .startElement(null, ""origin-location"", ""origin-location"", originLocationAttrs);"
10722,./TargetProjects/ant-ivy/src/java/org/apache/ivy/ant/IvyArtifactReport.java,233,,"            saxHandler.startElement(null, ""cache-location"", ""cache-location"", new AttributesImpl());"
10723,./TargetProjects/ant-ivy/src/java/org/apache/ivy/ant/IvyArtifactReport.java,245,,"        saxHandler.startElement(null, ""retrieve-location"", ""retrieve-location"","
10724,./TargetProjects/ant-ivy/src/java/org/apache/ivy/ant/IvyDeliver.java,67,,"                    + "".delivered"";"
10725,./TargetProjects/ant-ivy/src/java/org/apache/ivy/ant/IvyDeliver.java,75,,"                if (""true"".equals(delivered)) {"
10726,./TargetProjects/ant-ivy/src/java/org/apache/ivy/ant/IvyInfo.java,192,,"            getProject().setProperty(property + "".artifact."" + id + "".name"", artifact.getName());"
10727,./TargetProjects/ant-ivy/src/java/org/apache/ivy/ant/IvyPostResolveTask.java,144,,"            String[] toResolve = getConfsToResolve(getOrganisation(), getModule() + ""-caller"","
10728,./TargetProjects/ant-ivy/src/java/org/apache/ivy/ant/IvyResolve.java,362,,"                    getProject().setProperty(""ivy.parent["" + i + ""].organisation"", parentOrg);"
10729,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/IvyContext.java,223,,"    @SuppressWarnings(""unchecked"")"
10730,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/IvyPatternHelper.java,256,,"                                ""invalid start of optional part at position "" + i + "" in pattern """
10731,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManager.java,423,,"            return IvyPatternHelper.substitute(getIvyPattern() + "".original"", artifact, origin);"
10732,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManager.java,440,,"        cdf.setProperty(""resolver"", name);"
10733,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManager.java,459,,"            Message.error(""impossible to acquire lock for "" + mrid);"
10734,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/cache/DefaultResolutionCacheManager.java,121,,"            mrid.getName(), mrid.getRevision(), ""ivy"", ""ivy"", ""xml"");"
10735,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/install/InstallEngine.java,91,,"            md.addConfiguration(new Configuration(""default""));"
10736,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/module/descriptor/DefaultModuleDescriptor.java,118,,"                new MDArtifact(moduleDescriptor, mrid.getName(), ""jar"", ""jar""));"
10737,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/module/id/ModuleRevisionId.java,278,,"            throw new IllegalArgumentException(""badly encoded module revision id: '"" + encoded"
10738,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/pack/PackagingManager.java,51,,"                throw new IllegalStateException(""Unknown packing type '"" + packings[i]"
10739,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/pack/PackagingManager.java,52,,"                        + ""' in the packing chain: "" + packaging);"
10740,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/resolve/IvyNode.java,204,,"                            Message.info(""\tfound "" + module.getId() + "" in """
10741,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/resolve/ResolveEngine.java,933,,"                Message.debug(""impossible to resolve conflicts for "" + node + "" in "" + ancestor"
10742,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/settings/IvySettings.java,384,,"        if (getVariable(""ivy.default.ivy.user.dir"") != null) {"
10743,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/settings/IvySettings.java,478,,"            setVariable(""ivy.settings.dir"", new File(settingsFile.getAbsolutePath()).getParent());"
10744,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/settings/IvySettings.java,482,,"            setVariable(""ivy.settings.url"", settingsFile.toURI().toURL().toExternalForm());"
10745,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/settings/IvySettings.java,821,,"            if (getVariable(""ivy.home"") != null) {"
10746,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/settings/IvySettings.java,1012,,"        if (""default"".equals(name)) {"
10747,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/settings/XmlSettingsParser.java,235,,"        attributes.put(IvyPatternHelper.MODULE_KEY, attributes.remove(""name""));"
10748,./TargetProjects/ant-ivy/src/java/org/apache/ivy/core/settings/XmlSettingsParser.java,382,,"            String propFilePath = attributes.get(""file"");"
10749,./TargetProjects/ant-ivy/src/java/org/apache/ivy/osgi/core/ManifestParser.java,137,,"            throw new ParseException(""The "" + BUNDLE_VERSION + "" has an incorrect version: """
10750,./TargetProjects/ant-ivy/src/java/org/apache/ivy/osgi/core/ManifestParser.java,137,,"            throw new ParseException(""The "" + BUNDLE_VERSION + "" has an incorrect version: """
10751,./TargetProjects/ant-ivy/src/java/org/apache/ivy/osgi/obr/OBRResolver.java,67,,"            throw new RuntimeException(""The OBR repository resolver "" + getName()"
10752,./TargetProjects/ant-ivy/src/java/org/apache/ivy/osgi/obr/xml/RequirementAdapter.java,147,,"                                    ""Multiple version matching is not supported"");"
10753,./TargetProjects/ant-ivy/src/java/org/apache/ivy/osgi/p2/P2MetadataParser.java,123,,"        private static final String SIZE = ""size"";"
10754,./TargetProjects/ant-ivy/src/java/org/apache/ivy/osgi/p2/P2MetadataParser.java,334,,"                                    ""The Manifest of the source bundle """
10755,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/latest/LatestRevisionStrategy.java,39,,"            rev1 = rev1.replaceAll(""([a-zA-Z])(\\d)"", ""$1.$2"");"
10756,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/m2/MavenVersionRangeParser.java,222,,"        @SuppressWarnings(""unused"")"
10757,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorBuilder.java,77,,"                    new String[] {""runtime"", ""master""}, true, null),"
10758,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorBuilder.java,77,,"                    new String[] {""runtime"", ""master""}, true, null),"
10759,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorBuilder.java,81,,"            new Configuration(""compile"", PUBLIC,"
10760,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorBuilder.java,85,,"            new Configuration(""provided"", PUBLIC,"
10761,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorBuilder.java,95,,"            new Configuration(""test"", PUBLIC,"
10762,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorBuilder.java,103,,"            new Configuration(""sources"", PUBLIC,"
10763,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorBuilder.java,106,,"            new Configuration(""javadoc"", PUBLIC,"
10764,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorBuilder.java,109,,"            new Configuration(""optional"", PUBLIC, ""contains all optional dependencies"","
10765,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorBuilder.java,132,,"                    dd.addDependencyConfiguration(""optional"", ""compile(*)"");"
10766,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorBuilder.java,134,,"                    dd.addDependencyConfiguration(""optional"", ""master(*)"");"
10767,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorBuilder.java,140,,"                    dd.addDependencyConfiguration(""runtime"", ""runtime(*)"");"
10768,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorBuilder.java,252,,"                DefaultArtifact artifact = new DefaultArtifact(mrid, new Date(), artifactId, ""jar"","
10769,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorBuilder.java,328,,"                extraAtt.put(""m:classifier"", ""tests"");"
10770,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java,94,,"    static final List<String> DEPENDENCY_REGULAR_ATTRIBUTES = Arrays.asList(""org"", ""name"", ""branch"","
10771,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java,94,,"    static final List<String> DEPENDENCY_REGULAR_ATTRIBUTES = Arrays.asList(""org"", ""name"", ""branch"","
10772,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java,94,,"    static final List<String> DEPENDENCY_REGULAR_ATTRIBUTES = Arrays.asList(""org"", ""name"", ""branch"","
10773,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java,95,,"            ""branchConstraint"", ""rev"", ""revConstraint"", ""force"", ""transitive"", ""changing"", ""conf"");"
10774,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java,95,,"            ""branchConstraint"", ""rev"", ""revConstraint"", ""force"", ""transitive"", ""changing"", ""conf"");"
10775,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java,95,,"            ""branchConstraint"", ""rev"", ""revConstraint"", ""force"", ""transitive"", ""changing"", ""conf"");"
10776,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java,284,,"                                getMd().getModuleRevisionId().getName(), ""jar"", ""jar""));"
10777,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java,323,,"                                .substitute(attributes.getValue(""url""))));"
10778,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java,324,,"                } else if (state == State.INFO && ""description"".equals(qName)) {"
10779,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java,357,,"                } else if (""artifact"".equals(qName)) {"
10780,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java,361,,"                } else if (""exclude"".equals(qName) && state == State.DEP) {"
10781,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java,416,,"            String parentModule = settings.substitute(attributes.getValue(""module""));"
10782,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java,417,,"            String parentRevision = (attributes.getValue(""revision"") == null) ? Ivy.getWorkingRevision()"
10783,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java,770,,"            String matcherName = settings.substitute(attributes.getValue(""matcher""));"
10784,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java,959,,"                String type = settings.substitute(attributes.getValue(""type""));"
10785,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java,963,,"                String ext = settings.substitute(attributes.getValue(""ext""));"
10786,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorUpdater.java,112,,"                Message.warn(""failed to close a stream : "" + e.toString());"
10787,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorUpdater.java,169,,"        private static final Collection<String> STD_ATTS = Arrays.asList(""organisation"","
10788,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorUpdater.java,170,,"                ""module"", ""branch"", ""revision"", ""status"", ""publication"", ""namespace"");"
10789,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorUpdater.java,170,,"                ""module"", ""branch"", ""revision"", ""status"", ""publication"", ""namespace"");"
10790,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorUpdater.java,170,,"                ""module"", ""branch"", ""revision"", ""status"", ""publication"", ""namespace"");"
10791,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorUpdater.java,170,,"                ""module"", ""branch"", ""revision"", ""status"", ""publication"", ""namespace"");"
10792,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorUpdater.java,170,,"                ""module"", ""branch"", ""revision"", ""status"", ""publication"", ""namespace"");"
10793,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorUpdater.java,174,,"                ""configurations"", ""publications"", ""dependencies"", ""conflicts"");"
10794,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorUpdater.java,174,,"                ""configurations"", ""publications"", ""dependencies"", ""conflicts"");"
10795,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorUpdater.java,343,,"                String confName = substitute(settings, attributes.getValue(""name""));"
10796,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorUpdater.java,349,,"                        write("" "" + attributes.getQName(i) + ""=\"""""
10797,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorUpdater.java,358,,"                buffer.setDefaultPrint(attributes.getValue(""conf"") == null"
10798,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorUpdater.java,497,,"                if (""defaultconf"".equals(attName) || ""defaultconfmapping"".equals(attName)) {"
10799,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorUpdater.java,617,,"                            write("" branch=\"""" + newBranch + ""\"""");"
10800,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorWriter.java,103,,"                out.print(""\t\t"");"
10801,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorWriter.java,151,,"        out.print("" conf=\"""" + sb + ""\"""");"
10802,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/report/LogReportOutputter.java,136,,"            Message.warn(""\t::::::::::::::::::::::::::::::::::::::::::::::"");"
10803,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/report/XmlReportParser.java,134,,"                            if (attributes.getValue(""location"") != null) {"
10804,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/report/XmlReportParser.java,141,,"                            if (attributes.getValue(""origin-location"") != null) {"
10805,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/repository/ssh/Scp.java,192,,"            throw new RemoteScpException(""Malformed C line sent by remote SCP binary."");"
10806,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/repository/url/ChainedRepository.java,90,,"        Message.debug(""Mirrored repository "" + getName() + "": trying "" + repository.getName());"
10807,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/resolver/AbstractPatternsBasedResolver.java,149,,"        tokenValues.put(IvyPatternHelper.TYPE_KEY, ""jar"");"
10808,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/resolver/BasicResolver.java,457,,"                || resolvedMrid.getRevision().startsWith(""working@"")) {"
10809,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/resolver/BasicResolver.java,592,,"                    .append(""' found='"").append(md.getModuleRevisionId().getOrganisation()).append(""'; "");"
10810,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/resolver/BasicResolver.java,592,,"                    .append(""' found='"").append(md.getModuleRevisionId().getOrganisation()).append(""'; "");"
10811,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/resolver/util/ResolverHelper.java,62,,"            Message.debug(""\tusing "" + rep + "" to list all in "" + root);"
10812,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/resolver/util/ResolverHelper.java,62,,"            Message.debug(""\tusing "" + rep + "" to list all in "" + root);"
10813,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/resolver/util/ResolverHelper.java,67,,"            Message.debug(""\t\tfound "" + all.length + "" urls"");"
10814,./TargetProjects/ant-ivy/src/java/org/apache/ivy/plugins/version/ChainVersionMatcher.java,94,,"        Checks.checkNotNull(askedMrid, ""askedMrid"");"
10815,./TargetProjects/ant-ivy/src/java/org/apache/ivy/util/Configurator.java,522,,"                    + "" for adding "" + name + "" on "" + parent.getClass());"
10816,./TargetProjects/ant-ivy/src/java/org/apache/ivy/util/url/BasicURLHandler.java,53,,"    @SuppressWarnings(""deprecation"")"
10817,./TargetProjects/ant-ivy/src/java/org/apache/ivy/util/url/BasicURLHandler.java,87,,"        if (""http"".equals(url.getProtocol()) || ""https"".equals(url.getProtocol())) {"
10818,./TargetProjects/ant-ivy/src/java/org/apache/ivy/util/url/BasicURLHandler.java,87,,"        if (""http"".equals(url.getProtocol()) || ""https"".equals(url.getProtocol())) {"
10819,./TargetProjects/ant-ivy/src/java/org/apache/ivy/util/url/BasicURLHandler.java,98,,"            con.setRequestProperty(""User-Agent"", getUserAgent());"
10820,./TargetProjects/ant-ivy/src/java/org/apache/ivy/util/url/HttpClientHandler.java,194,,"    @SuppressWarnings(""deprecation"")"
10821,./TargetProjects/ant-ivy/src/java/org/apache/ivy/util/url/HttpClientHandler.java,248,,"            Message.error(""HttpClientHandler: "" + e.getMessage() + "" url="" + url);"
10822,./TargetProjects/ant-ivy/src/java/org/apache/ivy/util/url/URLHandlerDispatcher.java,36,,"    @SuppressWarnings(""deprecation"")"
10823,./TargetProjects/ant-ivy/test/java/org/apache/ivy/IvyTest.java,65,,"        assertNotSame(""IvyContext should be cleared and return a default Ivy instance"","
10824,./TargetProjects/ant-ivy/test/java/org/apache/ivy/MainTest.java,84,,"        run(new String[] {""-ivy""});"
10825,./TargetProjects/ant-ivy/test/java/org/apache/ivy/MainTest.java,89,,"        run(new String[] {""-settings"", ""test/repositories/ivysettings.xml"", ""-ivy"","
10826,./TargetProjects/ant-ivy/test/java/org/apache/ivy/MainTest.java,89,,"        run(new String[] {""-settings"", ""test/repositories/ivysettings.xml"", ""-ivy"","
10827,./TargetProjects/ant-ivy/test/java/org/apache/ivy/MainTest.java,90,,"                ""test/repositories/1/org1/mod1.1/ivys/ivy-1.0.xml""});"
10828,./TargetProjects/ant-ivy/test/java/org/apache/ivy/MainTest.java,91,,"        assertTrue(new File(""build/cache/org1/mod1.2/ivy-2.0.xml"").exists());"
10829,./TargetProjects/ant-ivy/test/java/org/apache/ivy/MainTest.java,97,,"                ""test/repositories/1/org1/mod1.1/ivys/ivy-1.0.xml"", ""-confs"", ""default""});"
10830,./TargetProjects/ant-ivy/test/java/org/apache/ivy/MainTest.java,97,,"                ""test/repositories/1/org1/mod1.1/ivys/ivy-1.0.xml"", ""-confs"", ""default""});"
10831,./TargetProjects/ant-ivy/test/java/org/apache/ivy/MainTest.java,111,,"                ""default"", ""-ivy"", ""test/repositories/1/org1/mod1.1/ivys/ivy-1.0.xml"", ""foo1"","
10832,./TargetProjects/ant-ivy/test/java/org/apache/ivy/MainTest.java,112,,"                ""foo2""};"
10833,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/AntBuildResolverTest.java,88,,"        ResolveReport report = project.getReference(""ivy.resolved.report"");"
10834,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/AntBuildResolverTest.java,97,,"        resolve.setFile(new File(""test/workspace/project2/ivy.xml""));"
10835,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/AntBuildResolverTest.java,108,,"        assertEquals(new File(""test/workspace/project1/target/dist/jars/project1.jar"").toURI()"
10836,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/AntBuildResolverTest.java,170,,"        cachePath.setPathid(""test.cachepath.id"");"
10837,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/FileUtilTest.java,89,,"            assertEquals(""Unexpected normalization of "" + pathOne, fileSystemRoot.getPath(), FileUtil.normalize(pathOne).getPath());"
10838,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/FixDepsTaskTest.java,65,,"        project.setProperty(""ivy.dep.file"", ""test/java/org/apache/ivy/ant/ivy-simple.xml"");"
10839,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/FixDepsTaskTest.java,80,,"        assertEquals(""default"", md.getConfigurations()[0].getName());"
10840,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/FixDepsTaskTest.java,84,,"        assertEquals(""org1"", md.getDependencies()[0].getDependencyId().getOrganisation());"
10841,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/FixDepsTaskTest.java,85,,"        assertEquals(""mod1.2"", md.getDependencies()[0].getDependencyId().getName());"
10842,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/FixDepsTaskTest.java,89,,"        assertEquals(""2.0"", md.getDependencies()[0].getDependencyRevisionId().getRevision());"
10843,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/FixDepsTaskTest.java,111,,"        assertEquals(""compile"", md.getConfigurations()[1].getName());"
10844,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyAntSettingsBuildFileTest.java,46,,"        ResolveReport report = buildRule.getProject().getReference(""ivy.resolved.report"");"
10845,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildListTest.java,108,,"        fs.setDir(new File(""test/buildlist""));"
10846,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildListTest.java,109,,"        fs.setIncludes(""**/build.xml"");"
10847,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildListTest.java,110,,"        fs.setExcludes(""E2/build.xml,F/build.xml,G/build.xml"");"
10848,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildListTest.java,113,,"        buildlist.setOnMissingDescriptor(""skip"");"
10849,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildListTest.java,119,,"        assertListOfFiles(""test/buildlist/"", new String[] {""B"", ""C"", ""A"", ""D"", ""E""}, files);"
10850,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildListTest.java,145,,"        fs.setExcludes(""E2/**"");"
10851,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildListTest.java,411,,"        assertListOfFiles(""test/buildlists/testNoParents/"", new String[] {""bootstrap-parent"","
10852,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildListTest.java,412,,"                ""ireland"", ""germany"", ""master-parent"", ""croatia""}, files);"
10853,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildListTest.java,412,,"                ""ireland"", ""germany"", ""master-parent"", ""croatia""}, files);"
10854,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildListTest.java,412,,"                ""ireland"", ""germany"", ""master-parent"", ""croatia""}, files);"
10855,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildListTest.java,412,,"                ""ireland"", ""germany"", ""master-parent"", ""croatia""}, files);"
10856,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildNumberTest.java,52,,"        buildNumber.setOrganisation(""org1"");"
10857,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildNumberTest.java,55,,"        assertNull(buildNumber.getProject().getProperty(""ivy.revision""));"
10858,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildNumberTest.java,56,,"        assertEquals(""0"", buildNumber.getProject().getProperty(""ivy.new.revision""));"
10859,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildNumberTest.java,57,,"        assertNull(buildNumber.getProject().getProperty(""ivy.build.number""));"
10860,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildNumberTest.java,58,,"        assertEquals(""0"", buildNumber.getProject().getProperty(""ivy.new.build.number""));"
10861,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildNumberTest.java,88,,"        buildNumber.setModule(""mod1.1"");"
10862,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyBuildNumberTest.java,125,,"        assertEquals(""1.1"", buildNumber.getProject().getProperty(""ivy.revision""));"
10863,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyCacheFilesetTest.java,70,,"        project.setProperty(""ivy.dep.file"", ""test/java/org/apache/ivy/ant/ivy-simple.xml"");"
10864,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyCacheFilesetTest.java,71,,"        fileset.setSetid(""simple-setid"");"
10865,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyCacheFilesetTest.java,79,,"        assertEquals(getArchiveFileInCache(""org1"", ""mod1.2"", ""2.0"", ""mod1.2"", ""jar"", ""jar"")"
10866,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyCacheFilesetTest.java,79,,"        assertEquals(getArchiveFileInCache(""org1"", ""mod1.2"", ""2.0"", ""mod1.2"", ""jar"", ""jar"")"
10867,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyCachePathTest.java,62,,"        project.setProperty(""ivy.dep.file"", ""test/java/org/apache/ivy/ant/ivy-simple.xml"");"
10868,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyCachePathTest.java,62,,"        project.setProperty(""ivy.dep.file"", ""test/java/org/apache/ivy/ant/ivy-simple.xml"");"
10869,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyCachePathTest.java,63,,"        path.setPathid(""simple-pathid"");"
10870,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyCachePathTest.java,70,,"        assertEquals(getArchiveFileInCache(""org1"", ""mod1.2"", ""2.0"", ""mod1.2"", ""jar"", ""jar"")"
10871,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyCachePathTest.java,70,,"        assertEquals(getArchiveFileInCache(""org1"", ""mod1.2"", ""2.0"", ""mod1.2"", ""jar"", ""jar"")"
10872,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyCachePathTest.java,70,,"        assertEquals(getArchiveFileInCache(""org1"", ""mod1.2"", ""2.0"", ""mod1.2"", ""jar"", ""jar"")"
10873,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyCachePathTest.java,70,,"        assertEquals(getArchiveFileInCache(""org1"", ""mod1.2"", ""2.0"", ""mod1.2"", ""jar"", ""jar"")"
10874,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyCachePathTest.java,79,,"        resolve.setFile(new File(""test/java/org/apache/ivy/ant/ivy-latest.xml""));"
10875,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyCachePathTest.java,162,,"        resolve.setResolveId(""withResolveId"");"
10876,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyCachePathTest.java,172,,"        path.setPathid(""withresolveid-pathid"");"
10877,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyCachePathTest.java,260,,"        path.setPathid(""testOSGi"");"
10878,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyConfigureTest.java,55,,"        project.setProperty(""myproperty"", ""myvalue"");"
10879,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyConfigureTest.java,55,,"        project.setProperty(""myproperty"", ""myvalue"");"
10880,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyConfigureTest.java,142,,"        configure.setFile(new File(""test/repositories/ivysettings.xml""));"
10881,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyDeliverTest.java,103,,"        project.setProperty(""ivy.dep.file"", ""test/java/org/apache/ivy/ant/ivy-multiconf.xml"");"
10882,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyDeliverTest.java,123,,"        deliver.setPubrevision(""1.2"");"
10883,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyDeliverTest.java,157,,"        project.setProperty(""ivy.dep.file"", ""test/java/org/apache/ivy/ant/ivy-latest.xml"");"
10884,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyDeliverTest.java,163,,"        deliver.setDeliverpattern(""build/test/deliver/ivy-[revision].xml"");"
10885,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyDeliverTest.java,167,,"        File deliveredIvyFile = new File(""build/test/deliver/ivy-1.2.xml"");"
10886,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyDeliverTest.java,171,,"        assertEquals(ModuleRevisionId.newInstance(""apache"", ""resolve-latest"", ""1.2""),"
10887,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyDeliverTest.java,171,,"        assertEquals(ModuleRevisionId.newInstance(""apache"", ""resolve-latest"", ""1.2""),"
10888,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyDeliverTest.java,175,,"        assertEquals(ModuleRevisionId.newInstance(""org1"", ""mod1.2"", ""2.2""),"
10889,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyDeliverTest.java,175,,"        assertEquals(ModuleRevisionId.newInstance(""org1"", ""mod1.2"", ""2.2""),"
10890,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyDeliverTest.java,175,,"        assertEquals(ModuleRevisionId.newInstance(""org1"", ""mod1.2"", ""2.2""),"
10891,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyDeliverTest.java,213,,"        resolve.setResolveId(""withResolveId"");"
10892,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyDeliverTest.java,286,,"        deliver.setPubbranch(""BRANCH1"");"
10893,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyDependencyUpdateCheckerTest.java,76,,"        assertLogContaining(""Dependencies updates available :"");"
10894,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyDependencyUpdateCheckerTest.java,100,,"        dependencyUpdateChecker.setFile(new File(""test/java/org/apache/ivy/ant/ivy-simple.xml""));"
10895,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyDependencyUpdateCheckerTest.java,106,,"        assertLogContaining(""org1#mod1.2\t2.0 -> 2.2"");"
10896,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyInfoRepositoryTest.java,51,,"        info.setOrganisation(""org1"");"
10897,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyInfoRepositoryTest.java,52,,"        info.setModule(""mod1.1"");"
10898,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyInfoTest.java,101,,"        assertEquals(""jar"", info.getProject().getProperty(""ivy.artifact.1.type""));"
10899,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyInstallTest.java,76,,"        project.setProperty(""ivy.settings.file"","
10900,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyInstallTest.java,77,,"            ""test/repositories/ivysettings-dummydefaultresolver.xml"");"
10901,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyInstallTest.java,78,,"        install.setOrganisation(""org1"");"
10902,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyInstallTest.java,81,,"        install.setFrom(""test"");"
10903,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyInstallTest.java,82,,"        install.setTo(""install"");"
10904,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyInstallTest.java,136,,"        install.setRevision(""1.0"");"
10905,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyListModulesTest.java,66,,"        findModules.setValue(""true"");"
10906,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPostResolveTaskTest.java,76,,"        resolve.setFile(new File(""test/java/org/apache/ivy/ant/ivy-multiconf.xml""));"
10907,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPostResolveTaskTest.java,80,,"        ResolveReport reportBefore = project.getReference(""ivy.resolved.report"");"
10908,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPostResolveTaskTest.java,82,,"        task.setConf(""default"");"
10909,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPostResolveTaskTest.java,87,,"        assertSame(""IvyPostResolveTask has performed a resolve where it shouldn't"", reportBefore,"
10910,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPostResolveTaskTest.java,157,,"        assertTrue(getArchiveFileInCache(""org1"", ""mod1.1"", ""2.0"", ""mod1.1"", ""jar"", ""jar"").exists());"
10911,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPostResolveTaskTest.java,157,,"        assertTrue(getArchiveFileInCache(""org1"", ""mod1.1"", ""2.0"", ""mod1.1"", ""jar"", ""jar"").exists());"
10912,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPostResolveTaskTest.java,157,,"        assertTrue(getArchiveFileInCache(""org1"", ""mod1.1"", ""2.0"", ""mod1.1"", ""jar"", ""jar"").exists());"
10913,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPostResolveTaskTest.java,157,,"        assertTrue(getArchiveFileInCache(""org1"", ""mod1.1"", ""2.0"", ""mod1.1"", ""jar"", ""jar"").exists());"
10914,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPostResolveTaskTest.java,158,,"        assertFalse(getArchiveFileInCache(""org1"", ""mod1.2"", ""2.0"", ""mod1.2"", ""jar"", ""jar"").exists());"
10915,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPostResolveTaskTest.java,232,,"        resolve.setResolveId(""testResolveId"");"
10916,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPostResolveTaskTest.java,235,,"        ResolveReport report1 = project.getReference(""ivy.resolved.report.testResolveId"");"
10917,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPostResolveTaskTest.java,240,,"        resolve.setFile(new File(""test/java/org/apache/ivy/ant/ivy-simple.xml""));"
10918,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,109,,"        project.setProperty(""ivy.dep.file"", ""test/java/org/apache/ivy/ant/ivy-multiconf.xml"");"
10919,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,109,,"        project.setProperty(""ivy.dep.file"", ""test/java/org/apache/ivy/ant/ivy-multiconf.xml"");"
10920,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,117,,"        pubParent.setPubrevision(""1.0"");"
10921,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,118,,"        File art = new File(""build/test/publish/resolve-simple-1.0.jar"");"
10922,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,119,,"        FileUtil.copy(new File(""test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar""), art, null);"
10923,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,124,,"            ""test/java/org/apache/ivy/ant/ivy-extends-multiconf.xml"");"
10924,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,127,,"        publish.setOrganisation(""apache"");"
10925,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,128,,"        publish.setModule(""resolve-extends"");"
10926,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,130,,"        publish.setPubrevision(""1.2"");"
10927,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,131,,"        publish.setStatus(""release"");"
10928,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,383,,"        File art = new File(""build/test/publish/resolve-simple-1.2.jar"");"
10929,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,388,,"        assertTrue(new File(""build/test/publish/ivy-1.2.xml"").exists());"
10930,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,391,,"        assertTrue(new File(""test/repositories/1/apache/resolve-simple/ivys/ivy-1.2.xml"").exists());"
10931,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,392,,"        assertTrue(new File(""test/repositories/1/apache/resolve-simple/jars/resolve-simple-1.2.jar"")"
10932,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,628,,"        project.setProperty(""ivy.dep.file"", ""test/java/org/apache/ivy/ant/ivy-latest.xml"");"
10933,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,633,,"        publish.setPubrevision(""1.3"");"
10934,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,635,,"        publish.setSrcivypattern(""build/test/publish/ivy-1.3.xml"");"
10935,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,640,,"        File art = new File(""build/test/publish/resolve-latest-1.3.jar"");"
10936,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,645,,"        assertTrue(new File(""test/repositories/1/apache/resolve-latest/ivys/ivy-1.3.xml"").exists());"
10937,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,770,,"        echo.setMessage(""new version"");"
10938,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyPublishTest.java,780,,"        echo.setMessage(""old version"");"
10939,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyReportTest.java,49,,"        report.setTaskName(""report"");"
10940,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,57,,"        project.setProperty(""ivy.settings.file"", ""test/repositories/ivysettings.xml"");"
10941,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,87,,"        project.setProperty(""ivy.log.locking"", ""true"");"
10942,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,88,,"        resolve.setFile(new File(""test/java/org/apache/ivy/ant/ivy-simple.xml""));"
10943,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,118,,"        ResolveReport report = project.getReference(""ivy.resolved.report"");"
10944,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,131,,"            ModuleRevisionId.newInstance(""apache"", ""resolve-simple"", ""1.0"")).exists());"
10945,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,131,,"            ModuleRevisionId.newInstance(""apache"", ""resolve-simple"", ""1.0"")).exists());"
10946,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,131,,"            ModuleRevisionId.newInstance(""apache"", ""resolve-simple"", ""1.0"")).exists());"
10947,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,134,,"        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(""org1"", ""mod1.2"", ""2.0""))"
10948,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,134,,"        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(""org1"", ""mod1.2"", ""2.0""))"
10949,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,134,,"        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(""org1"", ""mod1.2"", ""2.0""))"
10950,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,136,,"        assertTrue(getArchiveFileInCache(""org1"", ""mod1.2"", ""2.0"", ""mod1.2"", ""jar"", ""jar"").exists());"
10951,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,150,,"        resolve.setConf(""default"");"
10952,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,154,,"        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(""junit"", ""junit"", ""4.1""))"
10953,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,245,,"        assertEquals(""true"", getIvy().getVariable(""ivy.deps.changed""));"
10954,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,299,,"        assertEquals(""resolve-simple"", getIvy().getVariable(""ivy.module""));"
10955,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,300,,"        assertEquals(""1.0"", getIvy().getVariable(""ivy.revision""));"
10956,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,306,,"        assertEquals(""1.1"", getIvy().getVariable(""ivy.revision""));"
10957,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,357,,"        resolve.setResolveId(""testWithResolveId"");"
10958,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,380,,"        assertEquals(""default"", project.getProperty(""ivy.resolved.configurations""));"
10959,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,468,,"        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(""org1"", ""mod1.1"", ""2.0""))"
10960,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,532,,"        dependency.setOrg(""org2"");"
10961,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,534,,"        dependency.setRev(""0.7"");"
10962,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,540,,"        assertTrue(getArchiveFileInCache(""org2"", ""mod2.1"", ""0.3"", ""art21A"", ""jar"", ""jar"").exists());"
10963,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,554,,"        dependency.setName(""mod2.2"");"
10964,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResolveTest.java,555,,"        dependency.setRev(""0.10"");"
10965,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResourcesTest.java,78,,"        dependency.setOrg(""org1"");"
10966,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResourcesTest.java,79,,"        dependency.setName(""mod1.2"");"
10967,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResourcesTest.java,80,,"        dependency.setRev(""2.0"");"
10968,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResourcesTest.java,84,,"        assertEquals(getArchiveFileInCache(""org1"", ""mod1.2"", ""2.0"", ""mod1.2"", ""jar"", ""jar""),"
10969,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResourcesTest.java,96,,"        dependency.setOrg(""org2"");"
10970,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResourcesTest.java,98,,"        dependency.setRev(""0.7"");"
10971,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResourcesTest.java,106,,"        assertTrue(files.contains(getArchiveFileInCache(""org2"", ""mod2.1"", ""0.3"", ""art21A"", ""jar"","
10972,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResourcesTest.java,110,,"        assertTrue(files.contains(getArchiveFileInCache(""org1"", ""mod1.1"", ""1.0"", ""mod1.1"", ""jar"","
10973,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResourcesTest.java,123,,"        dependency.setName(""mod2.2"");"
10974,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyResourcesTest.java,124,,"        dependency.setRev(""0.10"");"
10975,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,53,,"        project.setProperty(""ivy.settings.file"", ""test/repositories/ivysettings.xml"");"
10976,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,53,,"        project.setProperty(""ivy.settings.file"", ""test/repositories/ivysettings.xml"");"
10977,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,74,,"        project.setProperty(""ivy.dep.file"", ""test/java/org/apache/ivy/ant/ivy-simple.xml"");"
10978,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,74,,"        project.setProperty(""ivy.dep.file"", ""test/java/org/apache/ivy/ant/ivy-simple.xml"");"
10979,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,76,,"        assertTrue(new File(IvyPatternHelper.substitute(RETRIEVE_PATTERN, ""org1"", ""mod1.2"", ""2.0"","
10980,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,76,,"        assertTrue(new File(IvyPatternHelper.substitute(RETRIEVE_PATTERN, ""org1"", ""mod1.2"", ""2.0"","
10981,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,76,,"        assertTrue(new File(IvyPatternHelper.substitute(RETRIEVE_PATTERN, ""org1"", ""mod1.2"", ""2.0"","
10982,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,77,,"            ""mod1.2"", ""jar"", ""jar"")).exists());"
10983,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,103,,"            ""mod1.2"", ""jar"", ""jar"", ""default"")).exists());"
10984,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,128,,"        project.setProperty(""ivy.dep.file"", ""test/repositories/1/org6/mod6.2/ivys/ivy-0.4.xml"");"
10985,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,131,,"        assertTrue(new File(IvyPatternHelper.substitute(RETRIEVE_PATTERN, ""org6"", ""mod6.1"", ""0.4"","
10986,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,131,,"        assertTrue(new File(IvyPatternHelper.substitute(RETRIEVE_PATTERN, ""org6"", ""mod6.1"", ""0.4"","
10987,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,131,,"        assertTrue(new File(IvyPatternHelper.substitute(RETRIEVE_PATTERN, ""org6"", ""mod6.1"", ""0.4"","
10988,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,134,,"            ""mod6.1"", ""jar"", ""jar"", ""extension"")).exists());"
10989,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,135,,"        assertTrue(new File(IvyPatternHelper.substitute(RETRIEVE_PATTERN, ""org1"", ""mod1.2"", ""2.1"","
10990,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,146,,"                    ""mod6.1"", ""jar"", ""jar"", ""unknown"")), // unknown configuration"
10991,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,197,,"        retrieve.setOrganisation(""apache"");"
10992,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,198,,"        retrieve.setModule(""resolve-simple"");"
10993,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,268,,"        assertTrue(new File(IvyPatternHelper.substitute(ivyPattern, ""org2"", ""mod2.3"", ""0.4.1"","
10994,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,269,,"            ""ivy"", ""ivy"", ""xml"")).exists());"
10995,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyRetrieveTest.java,269,,"            ""ivy"", ""ivy"", ""xml"")).exists());"
10996,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyTaskTest.java,41,,"        p.setBasedir(""test/repositories"");"
10997,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyTaskTest.java,42,,"        p.setProperty(""myproperty"", ""myvalue"");"
10998,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyTaskTest.java,42,,"        p.setProperty(""myproperty"", ""myvalue"");"
10999,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyTaskTest.java,57,,"        assertEquals(new File(""test/repositories/ivysettings.xml"").getAbsolutePath().toUpperCase(),"
