145000,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/LoadBalancerApiExpectTest.java,54,,"                                             ""&SignatureVersion=2"" +"
145001,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/LoadBalancerApiExpectTest.java,55,,"                                             ""&Timestamp=2009-11-08T15%3A54%3A08.897Z"" +"
145002,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/LoadBalancerApiExpectTest.java,56,,"                                             ""&Version=2012-06-01"" +"
145003,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/LoadBalancerApiExpectTest.java,57,,"                                             ""&AWSAccessKeyId=identity"","
145004,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/LoadBalancerApiExpectTest.java,58,,"                                       ""application/x-www-form-urlencoded""))"
145005,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/LoadBalancerApiExpectTest.java,65,,"            .payload(payloadFromResourceWithContentType(""/describe_loadbalancers.xml"", ""text/xml"")).build();"
145006,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/LoadBalancerApiExpectTest.java,65,,"            .payload(payloadFromResourceWithContentType(""/describe_loadbalancers.xml"", ""text/xml"")).build();"
145007,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/LoadBalancerApiExpectTest.java,70,,"      assertEquals(apiWhenExist.getLoadBalancerApi().get(""name"").toString(), new GetLoadBalancerResponseTest().expected().toString());"
145008,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/PolicyApiExpectTest.java,45,,"                                .method(""POST"")"
145009,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/PolicyApiExpectTest.java,46,,"                                .endpoint(""https://elasticloadbalancing.us-east-1.amazonaws.com/"")"
145010,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/PolicyApiExpectTest.java,47,,"                                .addHeader(""Host"", ""elasticloadbalancing.us-east-1.amazonaws.com"")"
145011,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/PolicyApiExpectTest.java,47,,"                                .addHeader(""Host"", ""elasticloadbalancing.us-east-1.amazonaws.com"")"
145012,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/PolicyApiExpectTest.java,53,,"                                                ""&SignatureMethod=HmacSHA256"" +"
145013,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/PolicyApiExpectTest.java,54,,"                                                ""&SignatureVersion=2"" +"
145014,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/PolicyApiExpectTest.java,55,,"                                                ""&Timestamp=2009-11-08T15%3A54%3A08.897Z"" +"
145015,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/PolicyApiExpectTest.java,56,,"                                                ""&Version=2012-06-01"" +"
145016,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/PolicyApiExpectTest.java,57,,"                                                ""&AWSAccessKeyId=identity"","
145017,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/PolicyApiExpectTest.java,58,,"                                          ""application/x-www-form-urlencoded""))"
145018,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/PolicyApiExpectTest.java,65,,"            .payload(payloadFromResourceWithContentType(""/describe_policy.xml"", ""text/xml"")).build();"
145019,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/PolicyApiExpectTest.java,70,,"      assertEquals(apiWhenExist.getPolicyApi().get(""name"").toString(), new GetPolicyResponseTest().expected().toString());"
145020,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/features/SubnetApiMockTest.java,44,,"        assertSent(server, ""POST"", ""/"");"
145021,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/options/ListLoadBalancersOptionsTest.java,34,,"      ListLoadBalancersOptions options = new ListLoadBalancersOptions().afterMarker(""FFFFF"");"
145022,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/options/ListLoadBalancersOptionsTest.java,44,,"      ListLoadBalancersOptions options = new ListLoadBalancersOptions().name(""my-load-balancer"");"
145023,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/options/ListPoliciesOptionsTest.java,34,,"      ListPoliciesOptions options = new ListPoliciesOptions().loadBalancerName(""FFFFF"");"
145024,./TargetProjects/jclouds-labs-aws/elb/src/test/java/org/jclouds/elb/options/ListPoliciesOptionsTest.java,44,,"      ListPoliciesOptions options = new ListPoliciesOptions().name(""my-load-balancer"");"
145025,./TargetProjects/jclouds-labs-aws/glacier/src/main/java/org/jclouds/glacier/GlacierClient.java,99,,"   URI createVault(@ParamValidators(VaultNameValidator.class) @PathParam(""vault"") String vaultName);"
145026,./TargetProjects/jclouds-labs-aws/glacier/src/main/java/org/jclouds/glacier/GlacierClient.java,221,,"   @Path(""/-/vaults/{vault}/multipart-uploads"")"
145027,./TargetProjects/jclouds-labs-aws/glacier/src/main/java/org/jclouds/glacier/GlacierClient.java,258,,"   @Path(""/-/vaults/{vault}/multipart-uploads/{uploadId}"")"
145028,./TargetProjects/jclouds-labs-aws/glacier/src/main/java/org/jclouds/glacier/GlacierClient.java,262,,"         @PathParam(""uploadId"") String uploadId,"
145029,./TargetProjects/jclouds-labs-aws/glacier/src/main/java/org/jclouds/glacier/GlacierClient.java,401,,"         @PathParam(""job"") String jobId);"
145030,./TargetProjects/jclouds-labs-aws/glacier/src/main/java/org/jclouds/glacier/blobstore/GlacierBlobStore.java,377,,"      throw new UnsupportedOperationException(""not yet implemented"");"
145031,./TargetProjects/jclouds-labs-aws/glacier/src/test/java/org/jclouds/glacier/GlacierClientLongLiveTest.java,59,,"   @Test(groups = {""live"", ""livelong"", ""setup""})"
145032,./TargetProjects/jclouds-labs-aws/glacier/src/test/java/org/jclouds/glacier/GlacierClientLongLiveTest.java,59,,"   @Test(groups = {""live"", ""livelong"", ""setup""})"
145033,./TargetProjects/jclouds-labs-aws/glacier/src/test/java/org/jclouds/glacier/GlacierClientLongLiveTest.java,65,,"   @Test(groups = {""live"", ""livelong"", ""longtest""})"
145034,./TargetProjects/jclouds-labs-aws/glacier/src/test/java/org/jclouds/glacier/GlacierClientMockTest.java,94,,"   private static final String MULTIPART_UPLOAD_LOCATION = VAULT_LOCATION + ""/multipart-uploads/"" + ARCHIVE_ID;"
145035,./TargetProjects/jclouds-labs-aws/glacier/src/test/java/org/jclouds/glacier/GlacierClientMockTest.java,179,,"      assertEquals(server.takeRequest().getRequestLine(), ""GET /-/vaults/"" + VAULT_NAME + "" "" + HTTP);"
145036,./TargetProjects/jclouds-labs-aws/glacier/src/test/java/org/jclouds/glacier/GlacierClientMockTest.java,233,,"      assertEquals(request.getRequestLine(), ""POST /-/vaults/"" + VAULT_NAME + ""/archives "" + HTTP);"
145037,./TargetProjects/jclouds-labs-aws/glacier/src/test/java/org/jclouds/glacier/GlacierClientMockTest.java,396,,"      mr.addHeader(HttpHeaders.LOCATION, VAULT_LOCATION + ""/jobs/"" + JOB_ID);"
145038,./TargetProjects/jclouds-labs-aws/glacier/src/test/java/org/jclouds/glacier/GlacierClientMockTest.java,489,,"      mr.setBody(getResponseBody(""/json/getJobOutputResponseBody.json""));"
145039,./TargetProjects/jclouds-labs-aws/glacier/src/test/java/org/jclouds/glacier/util/TreeHashTest.java,39,,"              .isEqualTo(HashCode.fromString(""9bc1b2a288b26af7257a36277ae3816a7d4f16e89c1e7e77d0a5c48bad62b360""));"
145040,./TargetProjects/jclouds-labs-aws/iam/src/main/java/org/jclouds/iam/features/InstanceProfileApi.java,58,,"   @Named(""CreateInstanceProfile"")"
145041,./TargetProjects/jclouds-labs-aws/iam/src/main/java/org/jclouds/iam/features/InstanceProfileApi.java,61,,"   @FormParams(keys = ""Action"", values = ""CreateInstanceProfile"")"
145042,./TargetProjects/jclouds-labs-aws/iam/src/main/java/org/jclouds/iam/features/InstanceProfileApi.java,63,,"   InstanceProfile create(@FormParam(""InstanceProfileName"") String name);"
145043,./TargetProjects/jclouds-labs-aws/iam/src/main/java/org/jclouds/iam/features/InstanceProfileApi.java,79,,"   @Named(""ListInstanceProfiles"")"
145044,./TargetProjects/jclouds-labs-aws/iam/src/main/java/org/jclouds/iam/features/RoleApi.java,62,,"   @Named(""CreateRole"")"
145045,./TargetProjects/jclouds-labs-aws/iam/src/main/java/org/jclouds/iam/features/RoleApi.java,65,,"   @FormParams(keys = ""Action"", values = ""CreateRole"")"
145046,./TargetProjects/jclouds-labs-aws/iam/src/main/java/org/jclouds/iam/features/RoleApi.java,67,,"   Role createWithPolicy(@FormParam(""RoleName"") String name,"
145047,./TargetProjects/jclouds-labs-aws/iam/src/main/java/org/jclouds/iam/features/RoleApi.java,84,,"   @Named(""ListRoles"")"
145048,./TargetProjects/jclouds-labs-aws/iam/src/main/java/org/jclouds/iam/features/RoleApi.java,180,,"   @Named(""ListInstanceProfilesForRole"")"
145049,./TargetProjects/jclouds-labs-aws/iam/src/main/java/org/jclouds/iam/features/RolePolicyApi.java,56,,"   @FormParams(keys = ""Action"", values = ""PutRolePolicy"")"
145050,./TargetProjects/jclouds-labs-aws/iam/src/main/java/org/jclouds/iam/features/RolePolicyApi.java,63,,"   @Named(""ListRolePolicies"")"
145051,./TargetProjects/jclouds-labs-aws/iam/src/main/java/org/jclouds/iam/features/UserApi.java,53,,"   @Named(""ListUsers"")"
145052,./TargetProjects/jclouds-labs-aws/iam/src/main/java/org/jclouds/iam/features/UserApi.java,56,,"   @FormParams(keys = ""Action"", values = ""ListUsers"")"
145053,./TargetProjects/jclouds-labs-aws/iam/src/main/java/org/jclouds/iam/features/UserApi.java,130,,"   @Named(""GetUser"")"
145054,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,37,,"                                   .method(""POST"")"
145055,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,38,,"                                   .endpoint(""https://iam.amazonaws.com/"")"
145056,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,39,,"                                   .addHeader(""Host"", ""iam.amazonaws.com"")"
145057,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,39,,"                                   .addHeader(""Host"", ""iam.amazonaws.com"")"
145058,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,40,,"                                   .addFormParam(""Action"", ""CreateInstanceProfile"")"
145059,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,41,,"                                   .addFormParam(""InstanceProfileName"", ""name"")"
145060,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,41,,"                                   .addFormParam(""InstanceProfileName"", ""name"")"
145061,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,42,,"                                   .addFormParam(""Signature"", ""UIosTnnvBVHY7m7rqz1489RQ90Mf81/aOXgh8x2mLWU="")"
145062,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,43,,"                                   .addFormParam(""SignatureMethod"", ""HmacSHA256"")"
145063,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,43,,"                                   .addFormParam(""SignatureMethod"", ""HmacSHA256"")"
145064,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,44,,"                                   .addFormParam(""SignatureVersion"", ""2"")"
145065,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,45,,"                                   .addFormParam(""Timestamp"", ""2009-11-08T15:54:08.897Z"")"
145066,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,45,,"                                   .addFormParam(""Timestamp"", ""2009-11-08T15:54:08.897Z"")"
145067,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,46,,"                                   .addFormParam(""Version"", ""2010-05-08"")"
145068,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,46,,"                                   .addFormParam(""Version"", ""2010-05-08"")"
145069,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,47,,"                                   .addFormParam(""AWSAccessKeyId"", ""identity"").build();"
145070,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,47,,"                                   .addFormParam(""AWSAccessKeyId"", ""identity"").build();"
145071,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,52,,"            .payload(payloadFromResourceWithContentType(""/get_instance_profile.xml"", ""text/xml"")).build();"
145072,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,128,,"                                 .addFormParam(""Action"", ""ListInstanceProfiles"")"
145073,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,139,,"            .payload(payloadFromResourceWithContentType(""/list_instance_profiles.xml"", ""text/xml"")).build();"
145074,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,156,,"                                    .addFormParam(""Marker"", ""MARKER"")"
145075,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,178,,"                                           .addFormParam(""PathPrefix"", ""/subdivision"")"
145076,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/InstanceProfileApiExpectTest.java,269,,"                                   .addFormParam(""RoleName"", ""WebServer"")"
145077,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,40,,"                                   .method(""POST"")"
145078,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,41,,"                                   .endpoint(""https://iam.amazonaws.com/"")"
145079,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,42,,"                                   .addHeader(""Host"", ""iam.amazonaws.com"")"
145080,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,42,,"                                   .addHeader(""Host"", ""iam.amazonaws.com"")"
145081,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,43,,"                                   .addFormParam(""Action"", ""CreateRole"")"
145082,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,45,,"                                   .addFormParam(""RoleName"", ""name"")"
145083,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,45,,"                                   .addFormParam(""RoleName"", ""name"")"
145084,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,46,,"                                   .addFormParam(""Signature"", ""zl7UtZElpvnkjo81NmA+CvYu0xFEeXQlSRtqTgok2OU="")"
145085,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,47,,"                                   .addFormParam(""SignatureMethod"", ""HmacSHA256"")"
145086,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,47,,"                                   .addFormParam(""SignatureMethod"", ""HmacSHA256"")"
145087,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,48,,"                                   .addFormParam(""SignatureVersion"", ""2"")"
145088,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,49,,"                                   .addFormParam(""Timestamp"", ""2009-11-08T15:54:08.897Z"")"
145089,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,49,,"                                   .addFormParam(""Timestamp"", ""2009-11-08T15:54:08.897Z"")"
145090,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,50,,"                                   .addFormParam(""Version"", ""2010-05-08"")"
145091,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,50,,"                                   .addFormParam(""Version"", ""2010-05-08"")"
145092,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,51,,"                                   .addFormParam(""AWSAccessKeyId"", ""identity"").build();"
145093,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,51,,"                                   .addFormParam(""AWSAccessKeyId"", ""identity"").build();"
145094,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,56,,"            .payload(payloadFromResourceWithContentType(""/get_role.xml"", ""text/xml"")).build();"
145095,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,133,,"                                 .addFormParam(""Action"", ""ListRoles"")"
145096,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,144,,"            .payload(payloadFromResourceWithContentType(""/list_roles.xml"", ""text/xml"")).build();"
145097,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,162,,"                                    .addFormParam(""Marker"", ""MARKER"")"
145098,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,162,,"                                    .addFormParam(""Marker"", ""MARKER"")"
145099,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,184,,"                                           .addFormParam(""PathPrefix"", ""/subdivision"")"
145100,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RoleApiExpectTest.java,275,,"                                                 .addFormParam(""RoleName"", ""WebServer"")"
145101,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,39,,"                                   .method(""POST"")"
145102,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,40,,"                                   .endpoint(""https://iam.amazonaws.com/"")"
145103,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,41,,"                                   .addHeader(""Host"", ""iam.amazonaws.com"")"
145104,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,41,,"                                   .addHeader(""Host"", ""iam.amazonaws.com"")"
145105,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,42,,"                                   .addFormParam(""Action"", ""PutRolePolicy"")"
145106,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,44,,"                                   .addFormParam(""PolicyName"", ""S3AccessPolicy"")"
145107,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,45,,"                                   .addFormParam(""RoleName"", ""S3Access"")"
145108,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,45,,"                                   .addFormParam(""RoleName"", ""S3Access"")"
145109,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,46,,"                                   .addFormParam(""Signature"", ""CEf5SvDv+LBRwlZI/3nBghWXFHC1nMfOFccfAITNjOk="")"
145110,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,47,,"                                   .addFormParam(""SignatureMethod"", ""HmacSHA256"")"
145111,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,47,,"                                   .addFormParam(""SignatureMethod"", ""HmacSHA256"")"
145112,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,48,,"                                   .addFormParam(""SignatureVersion"", ""2"")"
145113,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,49,,"                                   .addFormParam(""Timestamp"", ""2009-11-08T15:54:08.897Z"")"
145114,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,49,,"                                   .addFormParam(""Timestamp"", ""2009-11-08T15:54:08.897Z"")"
145115,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,50,,"                                   .addFormParam(""Version"", ""2010-05-08"")"
145116,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,50,,"                                   .addFormParam(""Version"", ""2010-05-08"")"
145117,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,51,,"                                   .addFormParam(""AWSAccessKeyId"", ""identity"").build();"
145118,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,51,,"                                   .addFormParam(""AWSAccessKeyId"", ""identity"").build();"
145119,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiExpectTest.java,56,,"            .payload(payloadFromResourceWithContentType(""/put_role_policy.xml"", ""text/xml"")).build();"
145120,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/RolePolicyApiLiveTest.java,56,,"         api(roleName).create(""S3Access"", s3Policy);"
145121,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,39,,"                                   .method(""POST"")"
145122,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,40,,"                                   .endpoint(""https://iam.amazonaws.com/"")"
145123,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,41,,"                                   .addHeader(""Host"", ""iam.amazonaws.com"")"
145124,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,41,,"                                   .addHeader(""Host"", ""iam.amazonaws.com"")"
145125,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,42,,"                                   .addFormParam(""Action"", ""GetUser"")"
145126,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,43,,"                                   .addFormParam(""Signature"", ""2UamWqKKgoSbaZpvixX0LKqGW/IIP9L319DLEUtYu3A="")"
145127,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,44,,"                                   .addFormParam(""SignatureMethod"", ""HmacSHA256"")"
145128,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,44,,"                                   .addFormParam(""SignatureMethod"", ""HmacSHA256"")"
145129,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,45,,"                                   .addFormParam(""SignatureVersion"", ""2"")"
145130,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,46,,"                                   .addFormParam(""Timestamp"", ""2009-11-08T15:54:08.897Z"")"
145131,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,46,,"                                   .addFormParam(""Timestamp"", ""2009-11-08T15:54:08.897Z"")"
145132,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,47,,"                                   .addFormParam(""Version"", ""2010-05-08"")"
145133,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,47,,"                                   .addFormParam(""Version"", ""2010-05-08"")"
145134,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,48,,"                                   .addFormParam(""AWSAccessKeyId"", ""identity"").build();"
145135,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,48,,"                                   .addFormParam(""AWSAccessKeyId"", ""identity"").build();"
145136,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,51,,"            .payload(payloadFromResourceWithContentType(""/get_user.xml"", ""text/xml"")).build();"
145137,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,98,,"                                 .addFormParam(""Action"", ""ListUsers"")"
145138,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,109,,"            .payload(payloadFromResourceWithContentType(""/list_users.xml"", ""text/xml"")).build();"
145139,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,127,,"                                    .addFormParam(""Marker"", ""MARKER"")"
145140,./TargetProjects/jclouds-labs-aws/iam/src/test/java/org/jclouds/iam/features/UserApiExpectTest.java,149,,"                                           .addFormParam(""PathPrefix"", ""/subdivision"")"
145141,./TargetProjects/jclouds-labs-aws/rds/src/main/java/org/jclouds/rds/features/InstanceApi.java,66,,"   @Named(""CreateDBInstance"")"
145142,./TargetProjects/jclouds-labs-aws/rds/src/main/java/org/jclouds/rds/features/InstanceApi.java,71,,"   Instance create(@FormParam(""DBInstanceIdentifier"") String id,"
145143,./TargetProjects/jclouds-labs-aws/rds/src/main/java/org/jclouds/rds/features/InstanceApi.java,120,,"   @Named(""DescribeDBInstances"")"
145144,./TargetProjects/jclouds-labs-aws/rds/src/main/java/org/jclouds/rds/features/InstanceApi.java,175,,"   @Named(""DeleteDBInstance"")"
145145,./TargetProjects/jclouds-labs-aws/rds/src/main/java/org/jclouds/rds/features/SecurityGroupApi.java,66,,"   @Named(""CreateDBSecurityGroup"")"
145146,./TargetProjects/jclouds-labs-aws/rds/src/main/java/org/jclouds/rds/features/SecurityGroupApi.java,71,,"   SecurityGroup createWithNameAndDescription(@FormParam(""DBSecurityGroupName"") String name,"
145147,./TargetProjects/jclouds-labs-aws/rds/src/main/java/org/jclouds/rds/features/SecurityGroupApi.java,105,,"   @Named(""DescribeDBSecurityGroups"")"
145148,./TargetProjects/jclouds-labs-aws/rds/src/main/java/org/jclouds/rds/features/SecurityGroupApi.java,155,,"   @Named(""AuthorizeDBSecurityGroupIngress"")"
145149,./TargetProjects/jclouds-labs-aws/rds/src/main/java/org/jclouds/rds/features/SecurityGroupApi.java,223,,"   @Named(""RevokeDBSecurityGroupIngress"")"
145150,./TargetProjects/jclouds-labs-aws/rds/src/main/java/org/jclouds/rds/features/SubnetGroupApi.java,63,,"   @Named(""DescribeDBSubnetGroups"")"
145151,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/InstanceApiExpectTest.java,46,,"                                .method(""POST"")"
145152,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/InstanceApiExpectTest.java,47,,"                                .endpoint(""https://rds.us-east-1.amazonaws.com/"")"
145153,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/InstanceApiExpectTest.java,48,,"                                .addHeader(""Host"", ""rds.us-east-1.amazonaws.com"")"
145154,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/InstanceApiExpectTest.java,48,,"                                .addHeader(""Host"", ""rds.us-east-1.amazonaws.com"")"
145155,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/InstanceApiExpectTest.java,51,,"                                         ""Action=DescribeDBInstances"" +"
145156,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/InstanceApiExpectTest.java,54,,"                                               ""&SignatureMethod=HmacSHA256"" +"
145157,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/InstanceApiExpectTest.java,55,,"                                               ""&SignatureVersion=2"" +"
145158,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/InstanceApiExpectTest.java,56,,"                                               ""&Timestamp=2009-11-08T15%3A54%3A08.897Z"" +"
145159,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/InstanceApiExpectTest.java,57,,"                                               ""&Version=2012-04-23"" +"
145160,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/InstanceApiExpectTest.java,58,,"                                               ""&AWSAccessKeyId=identity"","
145161,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/InstanceApiExpectTest.java,59,,"                                         ""application/x-www-form-urlencoded""))"
145162,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/InstanceApiExpectTest.java,66,,"            .payload(payloadFromResourceWithContentType(""/get_instance.xml"", ""text/xml"")).build();"
145163,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SecurityGroupApiExpectTest.java,46,,"               .method(""POST"")"
145164,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SecurityGroupApiExpectTest.java,47,,"               .endpoint(""https://rds.us-east-1.amazonaws.com/"")"
145165,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SecurityGroupApiExpectTest.java,48,,"               .addHeader(""Host"", ""rds.us-east-1.amazonaws.com"")"
145166,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SecurityGroupApiExpectTest.java,48,,"               .addHeader(""Host"", ""rds.us-east-1.amazonaws.com"")"
145167,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SecurityGroupApiExpectTest.java,53,,"                           ""&DBSecurityGroupName=mydbsecuritygroup"" +"
145168,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SecurityGroupApiExpectTest.java,55,,"                           ""&SignatureMethod=HmacSHA256"" +"
145169,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SecurityGroupApiExpectTest.java,56,,"                           ""&SignatureVersion=2"" +"
145170,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SecurityGroupApiExpectTest.java,57,,"                           ""&Timestamp=2009-11-08T15%3A54%3A08.897Z"" +"
145171,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SecurityGroupApiExpectTest.java,58,,"                           ""&Version=2012-04-23"" +"
145172,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SecurityGroupApiExpectTest.java,59,,"                           ""&AWSAccessKeyId=identity"","
145173,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SecurityGroupApiExpectTest.java,60,,"                        ""application/x-www-form-urlencoded""))"
145174,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SecurityGroupApiExpectTest.java,64,,"               .payload(payloadFromResourceWithContentType(""/create_securitygroup.xml"", ""text/xml"")).build();"
145175,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SecurityGroupApiExpectTest.java,68,,"      apiWhenExist.getSecurityGroupApi().createWithNameAndDescription(""mydbsecuritygroup"", ""My new DBSecurityGroup"");"
145176,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SecurityGroupApiExpectTest.java,105,,"                                                ""Action=DescribeDBSecurityGroups"" +"
145177,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SecurityGroupApiExpectTest.java,125,,"      assertEquals(apiWhenExist.getSecurityGroupApi().get(""name"").toString(), new GetSecurityGroupResponseTest().expected().toString());"
145178,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SubnetGroupApiExpectTest.java,45,,"                                       .method(""POST"")"
145179,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SubnetGroupApiExpectTest.java,46,,"                                       .endpoint(""https://rds.us-east-1.amazonaws.com/"")"
145180,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SubnetGroupApiExpectTest.java,47,,"                                       .addHeader(""Host"", ""rds.us-east-1.amazonaws.com"")"
145181,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SubnetGroupApiExpectTest.java,47,,"                                       .addHeader(""Host"", ""rds.us-east-1.amazonaws.com"")"
145182,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SubnetGroupApiExpectTest.java,50,,"                                                ""Action=DescribeDBSubnetGroups"" +"
145183,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SubnetGroupApiExpectTest.java,53,,"                                                      ""&SignatureMethod=HmacSHA256"" +"
145184,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SubnetGroupApiExpectTest.java,54,,"                                                      ""&SignatureVersion=2"" +"
145185,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SubnetGroupApiExpectTest.java,55,,"                                                      ""&Timestamp=2009-11-08T15%3A54%3A08.897Z"" +"
145186,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SubnetGroupApiExpectTest.java,56,,"                                                      ""&Version=2012-04-23"" +"
145187,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SubnetGroupApiExpectTest.java,57,,"                                                      ""&AWSAccessKeyId=identity"","
145188,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SubnetGroupApiExpectTest.java,58,,"                                                ""application/x-www-form-urlencoded""))"
145189,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SubnetGroupApiExpectTest.java,65,,"            .payload(payloadFromResourceWithContentType(""/get_subnetgroup.xml"", ""text/xml"")).build();"
145190,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/features/SubnetGroupApiExpectTest.java,70,,"      assertEquals(apiWhenExist.getSubnetGroupApi().get(""name"").toString(), new GetSubnetGroupResponseTest().expected().toString());"
145191,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/options/ListInstancesOptionsTest.java,34,,"      ListInstancesOptions options = new ListInstancesOptions().afterMarker(""FFFFF"");"
145192,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/options/ListInstancesOptionsTest.java,44,,"      ListInstancesOptions options = new ListInstancesOptions().name(""my-load-balancer"");"
145193,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/options/ListSecurityGroupsOptionsTest.java,33,,"      ListSecurityGroupsOptions options = new ListSecurityGroupsOptions().afterMarker(""FFFFF"");"
145194,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/options/ListSubnetGroupsOptionsTest.java,33,,"      ListSubnetGroupsOptions options = new ListSubnetGroupsOptions().afterMarker(""FFFFF"");"
145195,./TargetProjects/jclouds-labs-aws/rds/src/test/java/org/jclouds/rds/parse/DescribeDBSubnetGroupsResponseTest.java,58,,"                                          .status(""Active"")"
145196,./TargetProjects/jclouds-labs-openstack/openstack-glance/src/main/java/org/jclouds/openstack/glance/v1_0/domain/ImageDetails.java,141,,"         this.properties = ImmutableMap.copyOf(checkNotNull(properties, ""properties""));"
145197,./TargetProjects/jclouds-labs-openstack/openstack-glance/src/main/java/org/jclouds/openstack/glance/v1_0/features/ImageApi.java,110,,"   @Path(""/{id}"")"
145198,./TargetProjects/jclouds-labs-openstack/openstack-glance/src/main/java/org/jclouds/openstack/glance/v1_0/features/ImageApi.java,134,,"   @SelectJson(""image"")"
145199,./TargetProjects/jclouds-labs-openstack/openstack-glance/src/test/java/org/jclouds/openstack/glance/v1_0/features/GlanceVersionNegotiationExpectTest.java,41,,"            payloadFromResourceWithContentType(""/glanceVersionResponseSchemeMismatch.json"", ""application/json"")).build();"
145200,./TargetProjects/jclouds-labs-openstack/openstack-glance/src/test/java/org/jclouds/openstack/glance/v1_0/features/ImageApiExpectTest.java,47,,"            .endpoint(""https://glance.jclouds.org:9292/v1.0/images"")"
145201,./TargetProjects/jclouds-labs-openstack/openstack-glance/src/test/java/org/jclouds/openstack/glance/v1_0/features/ImageApiExpectTest.java,48,,"            .addHeader(""Accept"", ""application/json"")"
145202,./TargetProjects/jclouds-labs-openstack/openstack-glance/src/test/java/org/jclouds/openstack/glance/v1_0/features/ImageApiExpectTest.java,49,,"            .addHeader(""X-Auth-Token"", authToken).build();"
145203,./TargetProjects/jclouds-labs-openstack/openstack-glance/src/test/java/org/jclouds/openstack/glance/v1_0/features/ImageApiExpectTest.java,58,,"      assertEquals(apiWhenExist.getConfiguredRegions(), ImmutableSet.of(""az-1.region-a.geo-1""));"
145204,./TargetProjects/jclouds-labs-openstack/openstack-glance/src/test/java/org/jclouds/openstack/glance/v1_0/features/ImageApiExpectTest.java,85,,"            .endpoint(""https://glance.jclouds.org:9292/v1.0/images/fcc451d0-f6e4-4824-ad8f-70ec12326d07"")"
145205,./TargetProjects/jclouds-labs-openstack/openstack-glance/src/test/java/org/jclouds/openstack/glance/v1_0/features/ImageApiExpectTest.java,97,,"      assertEquals(apiWhenExist.getImageApi(""az-1.region-a.geo-1"").get(""fcc451d0-f6e4-4824-ad8f-70ec12326d07"").toString(),"
145206,./TargetProjects/jclouds-labs-openstack/openstack-glance/src/test/java/org/jclouds/openstack/glance/v1_0/features/ImageApiExpectTest.java,122,,"            .addHeader(""x-image-meta-name"", ""test"")"
145207,./TargetProjects/jclouds-labs-openstack/openstack-glance/src/test/java/org/jclouds/openstack/glance/v1_0/features/ImageApiExpectTest.java,128,,"            .payload(payloadFromResource(""/image.json"")).build();"
145208,./TargetProjects/jclouds-labs-openstack/openstack-glance/src/test/java/org/jclouds/openstack/glance/v1_0/features/ImageApiExpectTest.java,223,,"            .payload(payloadFromStringWithContentType(""somenewdata"", MediaType.APPLICATION_OCTET_STREAM))"
145209,./TargetProjects/jclouds-labs-openstack/openstack-glance/src/test/java/org/jclouds/openstack/glance/v1_0/functions/ParseImageDetailsFromHeadersTest.java,42,,"                                                .put(""X-Image-Meta-Deleted"", ""False"")"
145210,./TargetProjects/jclouds-labs-openstack/openstack-glance/src/test/java/org/jclouds/openstack/glance/v1_0/functions/ParseImageDetailsFromHeadersTest.java,44,,"                                                .put(""X-Image-Meta-Checksum"", ""233afa7b8809d840679b5f0d36d7350a"")"
145211,./TargetProjects/jclouds-labs-openstack/openstack-heat/src/main/java/org/jclouds/openstack/heat/v1/features/StackApi.java,77,,"   Stack get(@PathParam(""stack_name"") String name, @PathParam(""stack_id"") String id);"
145212,./TargetProjects/jclouds-labs-openstack/openstack-heat/src/main/java/org/jclouds/openstack/heat/v1/features/StackApi.java,77,,"   Stack get(@PathParam(""stack_name"") String name, @PathParam(""stack_id"") String id);"
145213,./TargetProjects/jclouds-labs-openstack/openstack-heat/src/test/java/org/jclouds/openstack/heat/v1/features/StackApiLiveTest.java,145,,"         CreateStack createStack = CreateStack.builder().name(getName()).template(String.valueOf(jsonObject.get(""template""))).build();"
145214,./TargetProjects/jclouds-labs-openstack/openstack-heat/src/test/java/org/jclouds/openstack/heat/v1/features/StackApiMockTest.java,53,,"      server.enqueue(addCommonHeaders(new MockResponse().setBody(stringFromResource(""/access.json""))));"
145215,./TargetProjects/jclouds-labs-openstack/openstack-heat/src/test/java/org/jclouds/openstack/heat/v1/features/StackApiMockTest.java,58,,"         HeatApi heatApi = api(server.url(""/"").toString(), ""openstack-heat"", overrides);"
145216,./TargetProjects/jclouds-labs-openstack/openstack-heat/src/test/java/org/jclouds/openstack/heat/v1/features/StackApiMockTest.java,59,,"         StackApi api = heatApi.getStackApi(""RegionOne"");"
145217,./TargetProjects/jclouds-labs-openstack/openstack-heat/src/test/java/org/jclouds/openstack/heat/v1/features/StackApiMockTest.java,65,,"         assertRequest(server.takeRequest(), ""GET"", BASE_URI + ""/stacks/simple_stack/3095aefc-09fb-4bc7-b1f0-f21a304e864c"");"
145218,./TargetProjects/jclouds-labs-openstack/openstack-heat/src/test/java/org/jclouds/openstack/heat/v1/features/StackApiMockTest.java,176,,"         assertRequest(server.takeRequest(), ""GET"", BASE_URI + ""/stacks/"" + TEST_STACK_NAME + ""/"" + TEST_STACK_ID + ""/resources"");"
145219,./TargetProjects/jclouds-labs-openstack/openstack-heat/src/test/java/org/jclouds/openstack/heat/v1/options/ListStackOptionsTest.java,52,,"      ListStackOptions options = new ListStackOptions().marker(""deploy"");"
145220,./TargetProjects/jclouds-labs-openstack/openstack-heat/src/test/java/org/jclouds/openstack/heat/v1/options/ListStackOptionsTest.java,74,,"      ListStackOptions options = new ListStackOptions().name(""deployment"");"
145221,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/main/java/org/jclouds/openstack/marconi/v1/MarconiApi.java,60,,"         @HeaderParam(""Client-ID"") UUID clientId);"
145222,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/main/java/org/jclouds/openstack/marconi/v1/MarconiApi.java,74,,"   @Path(""/queues/{name}"")"
145223,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/main/java/org/jclouds/openstack/marconi/v1/MarconiApi.java,76,,"         @HeaderParam(""Client-ID"") UUID clientId, @PathParam(""name"") String name);"
145224,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/main/java/org/jclouds/openstack/marconi/v1/features/QueueApi.java,69,,"   void create(@PathParam(""name"") String name);"
145225,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/ClaimApiLiveTest.java,46,,"         queueApi.create(""jclouds-test"");"
145226,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/ClaimApiMockTest.java,43,,"         MarconiApi api = api(server.url(""/"").toString(), ""openstack-marconi"");"
145227,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/ClaimApiMockTest.java,44,,"         ClaimApi claimApi = api.getClaimApi(""DFW"", CLIENT_ID, ""jclouds-test"");"
145228,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/ClaimApiMockTest.java,44,,"         ClaimApi claimApi = api.getClaimApi(""DFW"", CLIENT_ID, ""jclouds-test"");"
145229,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/ClaimApiMockTest.java,57,,"         assertEquals(server.takeRequest().getRequestLine(), ""POST /tokens HTTP/1.1"");"
145230,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/ClaimApiMockTest.java,74,,"         Claim claim = claimApi.get(""52a8d23eb04a584f1bbd4f47"");"
145231,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/MessageApiLiveTest.java,51,,"         queueApi.create(""jclouds-test"");"
145232,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/MessageApiMockTest.java,50,,"         MarconiApi api = api(server.url(""/"").toString(), ""openstack-marconi"");"
145233,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/MessageApiMockTest.java,51,,"         MessageApi messageApi = api.getMessageApi(""DFW"", CLIENT_ID, ""jclouds-test"");"
145234,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/MessageApiMockTest.java,51,,"         MessageApi messageApi = api.getMessageApi(""DFW"", CLIENT_ID, ""jclouds-test"");"
145235,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/MessageApiMockTest.java,64,,"         assertEquals(server.takeRequest().getRequestLine(), ""POST /tokens HTTP/1.1"");"
145236,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/MessageApiMockTest.java,232,,"         Message message = messageApi.get(""5292b30cef913e6d026f4dec"");"
145237,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/QueueApiLiveTest.java,127,,"         boolean success = queueApi.exists(""jclouds-test-1"");"
145238,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/QueueApiMockTest.java,53,,"         MarconiApi api = api(server.url(""/"").toString(), ""openstack-marconi"");"
145239,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/QueueApiMockTest.java,54,,"         QueueApi queueApi = api.getQueueApi(""DFW"", CLIENT_ID);"
145240,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/QueueApiMockTest.java,55,,"         queueApi.create(""jclouds-test"");"
145241,./TargetProjects/jclouds-labs-openstack/openstack-marconi/src/test/java/org/jclouds/openstack/marconi/v1/features/QueueApiMockTest.java,58,,"         assertEquals(server.takeRequest().getRequestLine(), ""POST /tokens HTTP/1.1"");"
145242,./TargetProjects/jclouds-labs-openstack/openstack-poppy/src/test/java/org/jclouds/openstack/poppy/v1/features/ServiceApiMockTest.java,58,,"      server.enqueue(addCommonHeaders(new MockResponse().setBody(stringFromResource(""/access.json""))));"
145243,./TargetProjects/jclouds-labs-openstack/openstack-poppy/src/test/java/org/jclouds/openstack/poppy/v1/features/ServiceApiMockTest.java,60,,"                        .setHeader(HttpHeaders.LOCATION, ""https://poppycdn.org/v1.0/services/123123""));"
145244,./TargetProjects/jclouds-labs-openstack/openstack-poppy/src/test/java/org/jclouds/openstack/poppy/v1/features/ServiceApiMockTest.java,63,,"         PoppyApi poppyApi = api(server.url(""/"").toString(), ""openstack-poppy"", overrides);"
145245,./TargetProjects/jclouds-labs-openstack/openstack-poppy/src/test/java/org/jclouds/openstack/poppy/v1/features/ServiceApiMockTest.java,110,,"         Service oneService = api.get(""96737ae3-cfc1-4c72-be88-5d0e7cc9a3f0"");"
145246,./TargetProjects/jclouds-labs-openstack/openstack-poppy/src/test/java/org/jclouds/openstack/poppy/v1/features/ServiceApiMockTest.java,114,,"         assertRequest(server.takeRequest(), ""GET"", BASE_URI + ""/services/96737ae3-cfc1-4c72-be88-5d0e7cc9a3f0"");"
145247,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/main/java/org/jclouds/rackspace/autoscale/v1/AutoscaleApi.java,64,,"         @PathParam(""groupId"") String groupId);"
145248,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/main/java/org/jclouds/rackspace/autoscale/v1/binders/BindWebhookToJson.java,47,,"      ImmutableMap<String, Object> metadata = postParams.get(""metadata"") != null ?"
145249,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/main/java/org/jclouds/rackspace/autoscale/v1/features/GroupApi.java,96,,"   boolean pause(@PathParam(""groupId"") String groupId);"
145250,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/main/java/org/jclouds/rackspace/autoscale/v1/features/PolicyApi.java,98,,"   ScalingPolicy get(@PathParam(""scalingPolicyId"") String scalingPolicyId);"
145251,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/main/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApi.java,72,,"   @SelectJson(""webhooks"")"
145252,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiLiveTest.java,75,,"               .serverName(""autoscale_server"")"
145253,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,58,,"      server.enqueue(addCommonHeaders(new MockResponse().setBody(stringFromResource(""/access.json""))));"
145254,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,62,,"         AutoscaleApi autoscaleApi = api(server.url(""/"").toString(), ""rackspace-autoscale"", overrides);"
145255,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,63,,"         GroupApi api = autoscaleApi.getGroupApi(""DFW"");"
145256,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,75,,"               .serverName(""autoscale_server"")"
145257,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,76,,"               .serverImageRef(""0d589460-f177-4b0f-81c1-8ab8903ac7d8"")"
145258,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,78,,"               .serverDiskConfig(""AUTO"")"
145259,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,79,,"               .serverMetadata(ImmutableMap.of(""build_config"", ""core"", ""meta_key_1"", ""meta_value_1"", ""meta_key_2"", ""meta_value_2""))"
145260,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,79,,"               .serverMetadata(ImmutableMap.of(""build_config"", ""core"", ""meta_key_1"", ""meta_value_1"", ""meta_key_2"", ""meta_value_2""))"
145261,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,79,,"               .serverMetadata(ImmutableMap.of(""build_config"", ""core"", ""meta_key_1"", ""meta_value_1"", ""meta_key_2"", ""meta_value_2""))"
145262,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,79,,"               .serverMetadata(ImmutableMap.of(""build_config"", ""core"", ""meta_key_1"", ""meta_value_1"", ""meta_key_2"", ""meta_value_2""))"
145263,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,79,,"               .serverMetadata(ImmutableMap.of(""build_config"", ""core"", ""meta_key_1"", ""meta_value_1"", ""meta_key_2"", ""meta_value_2""))"
145264,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,79,,"               .serverMetadata(ImmutableMap.of(""build_config"", ""core"", ""meta_key_1"", ""meta_value_1"", ""meta_key_2"", ""meta_value_2""))"
145265,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,80,,"               .networks(ImmutableList.of(""11111111-1111-1111-1111-111111111111"", ""00000000-0000-0000-0000-000000000000""))"
145266,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,80,,"               .networks(ImmutableList.of(""11111111-1111-1111-1111-111111111111"", ""00000000-0000-0000-0000-000000000000""))"
145267,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,81,,"               .personalities(ImmutableList.of(Personality.builder().path(""/root/.csivh"").contents(""VGhpcyBpcyBhIHRlc3QgZmlsZS4="").build()))"
145268,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,81,,"               .personalities(ImmutableList.of(Personality.builder().path(""/root/.csivh"").contents(""VGhpcyBpcyBhIHRlc3QgZmlsZS4="").build()))"
145269,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,102,,"         assertRequest(server.takeRequest(), ""POST"", ""/v1.0/888888/groups"", ""/autoscale_groups_create_request.json"");"
145270,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,102,,"         assertRequest(server.takeRequest(), ""POST"", ""/v1.0/888888/groups"", ""/autoscale_groups_create_request.json"");"
145271,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,222,,"         assertRequest(server.takeRequest(), ""GET"", ""/v1.0/888888/groups"");"
145272,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,279,,"         Group g = api.get(""1234567890"");"
145273,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,285,,"         assertRequest(server.takeRequest(), ""GET"", ""/v1.0/888888/groups/1234567890"");"
145274,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,548,,"         assertRequest(server.takeRequest(), ""GET"", ""/v1.0/888888/groups/1234567890/config"");"
145275,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,601,,"         assertRequest(server.takeRequest(), ""GET"", ""/v1.0/888888/groups/1234567890/launch"");"
145276,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/GroupApiMockTest.java,662,,"         assertRequest(server.takeRequest(), ""PUT"", ""/v1.0/888888/groups/1234567890/config"", ""/autoscale_groups_update_configuration_request.json"");"
145277,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/ScalingPolicyApiLiveTest.java,158,,"               .name(""scale up by one server"")"
145278,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/ScalingPolicyApiMockTest.java,50,,"      server.enqueue(addCommonHeaders(new MockResponse().setBody(stringFromResource(""/access.json""))));"
145279,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/ScalingPolicyApiMockTest.java,54,,"         AutoscaleApi autoscaleApi = api(server.url(""/"").toString(), ""rackspace-autoscale"", overrides);"
145280,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/ScalingPolicyApiMockTest.java,55,,"         PolicyApi api = autoscaleApi.getPolicyApi(""DFW"", ""groupId1"");"
145281,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/ScalingPolicyApiMockTest.java,55,,"         PolicyApi api = autoscaleApi.getPolicyApi(""DFW"", ""groupId1"");"
145282,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/ScalingPolicyApiMockTest.java,62,,"               .name(""scale up by one server"")"
145283,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/ScalingPolicyApiMockTest.java,74,,"         assertRequest(server.takeRequest(), ""POST"", ""/v1.0/888888/groups/groupId1/policies"", ""/autoscale_policy_create_request.json"");"
145284,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/ScalingPolicyApiMockTest.java,74,,"         assertRequest(server.takeRequest(), ""POST"", ""/v1.0/888888/groups/groupId1/policies"", ""/autoscale_policy_create_request.json"");"
145285,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/ScalingPolicyApiMockTest.java,144,,"               .target(""-5.5"")"
145286,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/ScalingPolicyApiMockTest.java,237,,"         assertRequest(server.takeRequest(), ""GET"", ""/v1.0/888888/groups/groupId1/policies"");"
145287,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/ScalingPolicyApiMockTest.java,289,,"         ScalingPolicy scalingPolicyResponse = api.get(""policyId"");"
145288,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/ScalingPolicyApiMockTest.java,295,,"         assertRequest(server.takeRequest(), ""GET"", ""/v1.0/888888/groups/groupId1/policies/policyId"");"
145289,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApiLiveTest.java,162,,"         Webhook webhook = webhookApi.create(""test1"", ImmutableMap.<String, Object>of(""notes"", ""test metadata"")).first().get();"
145290,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApiLiveTest.java,162,,"         Webhook webhook = webhookApi.create(""test1"", ImmutableMap.<String, Object>of(""notes"", ""test metadata"")).first().get();"
145291,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApiLiveTest.java,162,,"         Webhook webhook = webhookApi.create(""test1"", ImmutableMap.<String, Object>of(""notes"", ""test metadata"")).first().get();"
145292,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApiMockTest.java,46,,"      server.enqueue(addCommonHeaders(new MockResponse().setBody(stringFromResource(""/access.json""))));"
145293,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApiMockTest.java,50,,"         AutoscaleApi autoscaleApi = api(server.url(""/"").toString(), ""rackspace-autoscale"", overrides);"
145294,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApiMockTest.java,51,,"         WebhookApi api = autoscaleApi.getWebhookApi(""DFW"", ""1234567890"", ""321456"");"
145295,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApiMockTest.java,51,,"         WebhookApi api = autoscaleApi.getWebhookApi(""DFW"", ""1234567890"", ""321456"");"
145296,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApiMockTest.java,51,,"         WebhookApi api = autoscaleApi.getWebhookApi(""DFW"", ""1234567890"", ""321456"");"
145297,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApiMockTest.java,53,,"         FluentIterable<Webhook> webhooks = api.create(""PagerDuty"", ImmutableMap.<String, Object>of(""notes"", ""PagerDuty will fire this webhook""));"
145298,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApiMockTest.java,53,,"         FluentIterable<Webhook> webhooks = api.create(""PagerDuty"", ImmutableMap.<String, Object>of(""notes"", ""PagerDuty will fire this webhook""));"
145299,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApiMockTest.java,53,,"         FluentIterable<Webhook> webhooks = api.create(""PagerDuty"", ImmutableMap.<String, Object>of(""notes"", ""PagerDuty will fire this webhook""));"
145300,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApiMockTest.java,59,,"         assertRequest(server.takeRequest(), ""POST"", ""/v1.0/888888/groups/1234567890/policies/321456/webhooks"", ""/autoscale_webhook_create_request.json"");"
145301,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApiMockTest.java,59,,"         assertRequest(server.takeRequest(), ""POST"", ""/v1.0/888888/groups/1234567890/policies/321456/webhooks"", ""/autoscale_webhook_create_request.json"");"
145302,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApiMockTest.java,172,,"         assertRequest(server.takeRequest(), ""GET"", ""/v1.0/888888/groups/1234567890/policies/321456/webhooks"");"
145303,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApiMockTest.java,220,,"         boolean success = api.update(""5555"", ""alice"", ImmutableMap.<String, Object>of(""notes"", ""this is for Alice""));"
145304,./TargetProjects/jclouds-labs-openstack/rackspace-autoscale/src/test/java/org/jclouds/rackspace/autoscale/v1/features/WebhookApiMockTest.java,226,,"         assertRequest(server.takeRequest(), ""PUT"", ""/v1.0/888888/groups/1234567890/policies/321456/webhooks/5555"", ""/autoscale_webhook_update_request.json"");"
145305,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/main/java/org/jclouds/rackspace/cloudbigdata/v1/features/ClusterApi.java,64,,"   @SelectJson(""cluster"")"
145306,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ClusterApiMockTest.java,48,,"      server.enqueue(addCommonHeaders(new MockResponse().setBody(stringFromResource(""/access.json""))));"
145307,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ClusterApiMockTest.java,52,,"         CloudBigDataApi cbdApi = api(server.url(""/"").toString(), ""rackspace-cloudbigdata"", overrides);"
145308,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ClusterApiMockTest.java,53,,"         ClusterApi api = cbdApi.getClusterApi(""ORD"");"
145309,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ClusterApiMockTest.java,56,,"               .name(""slice"")"
145310,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ClusterApiMockTest.java,58,,"               .flavorId(""4fba3bca-7c76-11e2-b737-beeffa00040e"")"
145311,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ClusterApiMockTest.java,69,,"         assertRequest(server.takeRequest(), ""POST"", ""/v1.0/888888/clusters"", ""/cluster_create_request.json"");"
145312,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ClusterApiMockTest.java,69,,"         assertRequest(server.takeRequest(), ""POST"", ""/v1.0/888888/clusters"", ""/cluster_create_request.json"");"
145313,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ClusterApiMockTest.java,75,,"         assertEquals(cluster.getId(), ""db478fc1-2d86-4597-8010-cbe787bbbc41"");"
145314,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ClusterApiMockTest.java,76,,"         TimeZone.setDefault(TimeZone.getTimeZone(""GMT+0""));"
145315,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ClusterApiMockTest.java,77,,"         assertEquals(cluster.getCreated().toString(), ""Thu Dec 27 10:10:10 GMT+00:00 2012"");"
145316,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ClusterApiMockTest.java,78,,"         assertEquals(cluster.getUpdated().toString(), ""Fri Dec 27 10:10:10 GMT+00:00 2013"");"
145317,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ClusterApiMockTest.java,86,,"         assertEquals(cluster.getLinks().get(0).getHref(), new URI(""https://dfw.bigdata.api.rackspacecloud.com/v1.0/1234/clusters/db478fc1-2d86-4597-8010-cbe787bbbc41""));"
145318,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ClusterApiMockTest.java,141,,"         assertRequest(server.takeRequest(), ""GET"", ""/v1.0/888888/clusters/5"");"
145319,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ClusterApiMockTest.java,141,,"         assertRequest(server.takeRequest(), ""GET"", ""/v1.0/888888/clusters/5"");"
145320,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ProfileApiLiveTest.java,51,,"               .sshKeys(ImmutableList.of(ProfileSSHKey.builder().name(""t@test"")"
145321,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ProfileApiLiveTest.java,54,,"               .credentialsUsername(""jdoe"")"
145322,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ProfileApiMockTest.java,46,,"      server.enqueue(addCommonHeaders(new MockResponse().setBody(stringFromResource(""/access.json""))));"
145323,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ProfileApiMockTest.java,50,,"         CloudBigDataApi cbdApi = api(server.url(""/"").toString(), ""rackspace-cloudbigdata"", overrides);"
145324,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ProfileApiMockTest.java,51,,"         ProfileApi api = cbdApi.getProfileApi(""ORD"");"
145325,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ProfileApiMockTest.java,54,,"               .username(""john.doe"")"
145326,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ProfileApiMockTest.java,56,,"               .sshKeys(ImmutableList.of(ProfileSSHKey.builder().name(""t@test"")"
145327,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ProfileApiMockTest.java,64,,"                           .credentialsUsername(""jdoe"")"
145328,./TargetProjects/jclouds-labs-openstack/rackspace-cloudbigdata/src/test/java/org/jclouds/rackspace/cloudbigdata/v1/features/ProfileApiMockTest.java,74,,"         assertRequest(server.takeRequest(), ""POST"", ""/v1.0/888888/profile"", ""/profile_create_request.json"");"
145329,./TargetProjects/jena/jena-arq/src-examples/arq/examples/riot/Ex_WriteJsonLD.java,86,,"        m.setNsPrefix(""ex"", ""http://www.ex.com/"");"
145330,./TargetProjects/jena/jena-arq/src-examples/arq/examples/riot/Ex_WriteJsonLD.java,121,,"        m.setNsPrefix(""sh"", ""http://schema.org/"");"
145331,./TargetProjects/jena/jena-arq/src-examples/arq/examples/riot/Ex_WriteJsonLD.java,248,,"        m.add(s, m.createProperty(ns + ""name""), ""Jane Doe"");"
145332,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/atlas/data/SortedDataBag.java,147,,"    @SuppressWarnings({ ""unchecked"" })"
145333,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/query/QueryExecutionFactory.java,313,,"        checkNotNull(service, ""URL for service is null"") ;"
145334,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/query/ResultSetFactory.java,94,,"            Log.warn(ResultSet.class, ""Can't read a text result set"");"
145335,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/riot/RDFLanguages.java,292,,"            error(""Language overlap: "" +lang+"" and ""+mapContentTypeToLang.get(contentType)+"" on content type ""+contentType) ;"
145336,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/riot/RDFLanguages.java,292,,"            error(""Language overlap: "" +lang+"" and ""+mapContentTypeToLang.get(contentType)+"" on content type ""+contentType) ;"
145337,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/riot/ResultSetMgr.java,61,,"            throw new ResultSetException(""Not a result set"");"
145338,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/riot/lang/JsonLDReader.java,133,,"    @SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
145339,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/riot/lang/extra/javacc/TurtleJavacc.java,280,,"    throw new Error(""Missing return statement in function"");"
145340,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/riot/other/G.java,79,,"        Objects.requireNonNull(graph, ""graph"");"
145341,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/riot/other/G.java,86,,"        Objects.requireNonNull(node, ""node"");"
145342,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/riot/other/G.java,98,,"        Objects.requireNonNull(type, ""type"");"
145343,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/riot/other/G.java,572,,"                throw new RDFDataException(""More than one match : ""+matchStr(subject, predicate, object));"
145344,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/riot/resultset/rw/ResultSetWriterJSON.java,184,,"                    print(out, "" , "");"
145345,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/riot/system/PrefixMapUnmodifiable.java,37,,"    { throw new UnsupportedOperationException(""Unmodifiable PrefixMap"") ; }"
145346,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/engine/QueryExecutionBase.java,197,,"            throw new QueryExecException(""Attempt to have ResultSet from a "" + labelForQuery(query) + "" query"");"
145347,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/engine/http/QueryEngineHTTP.java,800,,"            throw new IllegalArgumentException(""Given Content Type '"" + contentType"
145348,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/expr/NodeValue.java,526,,"                raise(new ExprEvalException(""Unknown equality test: ""+nv1+"" and ""+nv2)) ;"
145349,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/expr/nodevalue/NodeValueOps.java,166,,"        throw new ExprEvalTypeException(""Operator '+' : Undefined addition: ""+nv1+"" and ""+nv2) ; "
145350,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/expr/nodevalue/XSDFuncOp.java,87,,"                throw new ARQInternalErrorException(""Unrecognized numeric operation : ("" + nv1 + "" ,"" + nv2 + "")"") ;"
145351,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/expr/nodevalue/XSDFuncOp.java,179,,"                    throw new ExprEvalException(""Divide by zero in IDIV"") ;"
145352,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/expr/nodevalue/XSDFuncOp.java,230,,"                    throw new ExprEvalException(""Divide by zero in MOD"") ;"
145353,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/expr/nodevalue/XSDFuncOp.java,398,,"                throw new ARQInternalErrorException(""Unrecognized numeric operation : "" + nv) ;"
145354,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/expr/nodevalue/XSDFuncOp.java,537,,"            throw new ExprEvalException(""IndexOutOfBounds"", ex) ;"
145355,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/expr/nodevalue/XSDFuncOp.java,612,,"        String pat = checkAndGetStringLiteral(""replace"", nvPattern).getLiteralLexicalForm();"
145356,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/expr/nodevalue/XSDFuncOp.java,954,,"            throw new ExprEvalTypeException(""Not a number (first arg to "" + fName + ""): "" + nv1) ;"
145357,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/expr/nodevalue/XSDFuncOp.java,967,,"            throw new ARQInternalErrorException(""Numeric op unrecognized (second arg to "" + fName + ""): "" + nv2) ;"
145358,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/expr/nodevalue/XSDFuncOp.java,1582,,"            Node n = NodeFactory.createLiteral(""PT0S"", NodeFactory.getType(XSDDatatype.XSD + ""#dayTimeDuration"")) ;"
145359,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/graph/GraphReadOnly.java,36,,"    { throw new AddDeniedException(""read-only graph"") ; }"
145360,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/lang/SyntaxVarScope.java,166,,"            throw new QueryParseException(""Variable used when already in-scope: ""+var+"" in ""+fmtAssignment(expr, var), -1 , -1) ;"
145361,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/mgt/ARQMgt_X.java,105,,"            log.warn(""Failed to register (NotCompliantMBeanException)'"" + objName.getCanonicalName() + ""': "" + ex.getMessage()) ;"
145362,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/resultset/RDFOutput.java,59,,"        if ( m.getNsPrefixURI(""rdf"") == null )"
145363,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/resultset/SPARQLResult.java,67,,"            throw new ResultSetException(""Not set"");"
145364,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/sse/builders/BuilderExpr.java,468,,"        BuilderLib.checkLength(2, list, ""md5: wanted 1 argument: got: ""+numArgs(list));"
145365,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/sse/builders/BuilderExpr.java,799,,"            BuilderLib.checkLength(1, x, ""Broken syntax: ""+list.shortString());"
145366,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/sse/builders/BuilderLib.java,80,,"            msg = ""Wrong number of arguments: ("" + len1 + ""-"" + len2 + "")/"" + list.size() + "" : "" + list.shortString();"
145367,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/util/QueryExecUtils.java,192,,"            output.println(""# ======== "") ;"
145368,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/sparql/util/RomanNumeral.java,45,,"            throw new NumberFormatException(""Roman numerals are 1-3999 ("" + i + "")"") ;"
145369,./TargetProjects/jena/jena-arq/src/main/java/org/apache/jena/system/TxnOp.java,55,,"            throw new JenaTransactionException(""Already in a transaction of an incompatable type: ""+""outer=""+outerTxnType+"" : inner=""+innerTxnType);"
145370,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/arq/junit/LibTestSetup.java,41,,"        throw new ExTestSetup(""Manifest problem (not a Resource): ""+n+"" => ""+p) ;"
145371,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/arq/junit/manifest/Manifest.java,203,,"        throw new ExTestSetup(""Manifest problem (not a Resource): ""+n+"" => ""+p) ;"
145372,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/atlas/data/TestDistinctDataNet.java,241,,"        testDiff(""a b e g i j"", ""b g h"", ""a e i j"");"
145373,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/atlas/data/TestDistinctDataNet.java,241,,"        testDiff(""a b e g i j"", ""b g h"", ""a e i j"");"
145374,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/atlas/json/TestJsonExt.java,36,,"        read(""'abc'"", new JsonString(""abc"")) ;"
145375,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/atlas/web/TestContentNegotiation.java,37,,"    static final String ctTextPlain          =  ""text/plain"" ;"
145376,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/atlas/web/TestContentNegotiation.java,38,,"    static final String ctTextXML            =  ""text/xml"" ;"
145377,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/atlas/web/TestContentNegotiation.java,70,,"                ""text/turtle"") ;"
145378,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/common/TestIsoMatcher.java,46,,"    @Test public void iso_graph_01() { testGraph(""(<x> <p> 1)"","
145379,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/common/TestIsoMatcher.java,74,,"    @Test public void iso_graph_10() { testGraph(""(_:a _:a _:a)"","
145380,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/common/TestIsoMatcher.java,227,,"        String[] x1 = {""(_:x <p> 1)""};"
145381,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/common/TestIsoMatcher.java,228,,"        String[] x2 = {""(_:y <p> 1)""};"
145382,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/common/TestIsoMatcher.java,260,,"            System.out.println(""===="");"
145383,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/common/TestIsoMatcher.java,262,,"            System.out.println(""----"");"
145384,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/common/TestIsoMatcher.java,264,,"            System.out.println(""Expected: "" + iso + ""; got: "" + b);"
145385,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/common/TestIsoMatcher.java,264,,"            System.out.println(""Expected: "" + iso + ""; got: "" + b);"
145386,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/common/TestIsoMatcher.java,310,,"        s1 = ""(graph ""+s1+"")"";"
145387,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,88,,"        ParameterizedSparqlString query = new ParameterizedSparqlString("""", ""http://example.org"");"
145388,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,168,,"        String cmdText = ""SELECT * WHERE { ?s ?p ?o }"";"
145389,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,172,,"        test(query, new String[] { ""<http://example.org>"" }, new String[] { ""?s"" });"
145390,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,208,,"        String cmdText = ""SELECT * WHERE { ?s ?p ?o . }"";"
145391,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,211,,"        query.setIri(""p"", ""http://predicate"");"
145392,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,284,,"        test(query, new String[] { ""<http://example.org>"", ""<http://predicate>"", ""true"" }, new String[] { ""?s"", ""?p"", ""?o"" });"
145393,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,294,,"        query.setLiteral(""o"", ""test"");"
145394,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,402,,"        query.setLiteral(""o"", ""xyz"", TypeMapper.getInstance().getSafeTypeByName(XSD.xboolean.toString()));"
145395,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,412,,"        String cmdText = ""SELECT * WHERE { ?s ?p ? }"";"
145396,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,532,,"        test(query, new String[] { ""123.4"", XSD.xdouble.toString() }, new String[] { ""?o"" });"
145397,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,545,,"        test(query, new String[] { ""1.23E7"" }, new String[] { ""?o"", XSD.xdouble.toString() });"
145398,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,682,,"        query.setLiteral(""o"", ""hello"", ""en"");"
145399,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,693,,"        query.setLiteral(""o"", ""bonjour"", ""fr"");"
145400,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,758,,"        String cmdText = ""SELECT * WHERE { ? ?p ?o }"";"
145401,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,962,,"        query.setIri(""x"", ""http://example.org/original"");"
145402,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,964,,"        copy.setIri(""x"", ""http://example.org/copy"");"
145403,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,1045,,"        query.append(""SELECT *"");"
145404,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,1049,,"        test(query, new String[] { ""SELECT"", ""*"", ""\n"", ""WHERE"", ""?s"", ""?p"", ""?o"" }, new String[] {});"
145405,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,1049,,"        test(query, new String[] { ""SELECT"", ""*"", ""\n"", ""WHERE"", ""?s"", ""?p"", ""?o"" }, new String[] {});"
145406,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,1059,,"        query.append(""WHERE { ?s ?p "");"
145407,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,1077,,"        test(query, new String[] { ""SELECT"", ""*"", ""\n"", ""WHERE"", ""?s"", ""?p"", ""123"" }, new String[] {});"
145408,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,1262,,"        String cmdText = ""SELECT * WHERE { ? ? ? . }"";"
145409,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,1381,,"        pss.setIri(""var2"", ""hello> } ; DROP ALL ; INSERT DATA { <s> <p> <goodbye>"");"
145410,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,1384,,"        Assert.fail(""Attempt to do SPARQL injection should result in an exception"");"
145411,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,1448,,"        pss.setLiteral(""var"", ""hello' . } ; DROP ALL ; INSERT DATA { <s> <p> \""goodbye"");"
145412,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,1460,,"        pss.setLiteral(""var"", "" . } ; DROP ALL ; INSERT DATA { <s> <p> "");"
145413,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,1473,,"        pss.setLiteral(""var"", ""' . } ; DROP ALL ; INSERT DATA { <s> <p> <o> }#"");"
145414,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,1611,,"        map.put(""L_name"", ""\""rgyud bla ma\"""");"
145415,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,1612,,"        map.put(""LG_name"", ""bo-x-ewts"");"
145416,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,1929,,"        String str = ""SELECT * WHERE { VALUES ?o {?objs} ?s ?p ?o }"";"
145417,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,1931,,"        pss.setValues(""objs"", ResourceFactory.createPlainLiteral(""test""));"
145418,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,2002,,"        objs.add(ResourceFactory.createPlainLiteral(""obj_A""));"
145419,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,2032,,"        String str = ""SELECT * WHERE { VALUES (?p ?o) {?vars} ?s ?p ?o }"";"
145420,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,2035,,"        vars.add(ResourceFactory.createProperty(""http://example.org/prop_A""));"
145421,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/query/TestParameterizedSparqlString.java,2037,,"        pss.setValues(""vars"", vars);"
145422,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestJenaReaderRIOT.java,49,,"    @Test public void read_03() { jenaread(""D.rdf"") ; }"
145423,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestJenaReaderRIOT.java,55,,"    @Test public void read_12() { jenaread(""D.ttl"",  ""TTL"") ; }"
145424,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestJenaReaderRIOT.java,56,,"    @Test public void read_13() { jenaread(""D.rdf"",  ""RDF/XML"") ; }"
145425,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestJenaReaderRIOT.java,61,,"    @Test public void read_21a() { jenaread(""D-nt"",  ""N-TRIPLES"") ; }"
145426,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestJenaReaderRIOT.java,147,,"        modelRead(""file:""+plainRelFnTTL) ;"
145427,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestParseURISchemeBases.java,73,,"    private static final String FILE_BASE = ""file:///"";"
145428,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestParseURISchemeBases.java,122,,"        assertTrue(""Can't find statement"", m.contains(expectedStatement(APP_BASE)));"
145429,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestParseURISchemeBases.java,139,,"        RDFDataMgr.read(m, load(""rel.rdf""), APP_BASE + ""nested/"", Lang.RDFXML);"
145430,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestParseURISchemeBases.java,139,,"        RDFDataMgr.read(m, load(""rel.rdf""), APP_BASE + ""nested/"", Lang.RDFXML);"
145431,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestParseURISchemeBases.java,145,,"        RDFDataMgr.read(m, load(""rel.ttl""), APP_BASE + ""nested/"", Lang.TURTLE);"
145432,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestRDFParser.java,64,,"        RDFParser.create().source(""file:""+DIR+""data.ttl"").parse(graph);"
145433,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestRDFParser.java,230,,"        testNormalization(""'abc'@En-gB"", ""'abc'@En-gB"", builder().langTagAsGiven());"
145434,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestReadData.java,50,,"    @Test public void read_01() { read(""D.nq"") ; }"
145435,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestReadData.java,51,,"    @Test public void read_02() { read(""D.trig"") ; }"
145436,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestReadData.java,62,,"    @Test public void read_21() { read(""D-nq"",  RDFLanguages.NQUADS) ; }"
145437,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestReadData.java,73,,"    @Test public void load_01() { RDFDataMgr.loadModel(filename(""D.nt"")) ; }"
145438,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestSyntaxDetermination.java,42,,"        add(x, ""Test-ext-ttl-1"", ""http://sparql.org/D.ttl"",   ""text/turtle"",  Lang.TTL,     Lang.TTL) ;"
145439,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestSyntaxDetermination.java,42,,"        add(x, ""Test-ext-ttl-1"", ""http://sparql.org/D.ttl"",   ""text/turtle"",  Lang.TTL,     Lang.TTL) ;"
145440,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestSyntaxDetermination.java,44,,"        add(x, ""Test-ext-ttl-3"", ""http://sparql.org/D.ttl"",   ""text/plain"",   null,         Lang.TTL) ;"
145441,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestSyntaxDetermination.java,49,,"        add(x, ""Test-no-ext-1"", ""http://sparql.org/D"",       ""text/turtle"",  Lang.TTL,     Lang.TTL) ;"
145442,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestSyntaxDetermination.java,56,,"        add(x, ""Test-ext-rdf-1"", ""http://sparql.org/D.rdf"",  ""text/turtle"",  Lang.TTL,     Lang.TTL) ;"
145443,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/TestSyntaxDetermination.java,63,,"        add(x, ""Test-unknown-ext-1"", ""http://sparql.org/D.xyz"",       ""text/turtle"",  Lang.TTL,     Lang.TTL) ;"
145444,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/lang/TestLabelToNode.java,139,,"        Node n1 = mapper.get(null, ""label1"") ;"
145445,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/lang/TestLangRdfJson.java,159,,"        String s2 = ""<http://example.org/subject> <http://example.org/predicate> <http://example.org/object> .\n"""
145446,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/lang/TestLangRdfJson.java,173,,"        String s2 = ""<http://example.org/subject> <http://example.org/predicate> \""some text\"" .\n"""
145447,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/lang/TestNodeAllocator.java,39,,"        Node b1 = alloc.get(gragh1, ""xyz"" ) ;"
145448,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/lang/TestParserFactory.java,45,,"            String s = ""<x> <p> <q> ."" ;"
145449,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/out/TestNodeFmt.java,71,,"    @Test public void nodefmt_nt_05()  { test(nodeFormatterNTutf8, ""'abc'"", ""\""abc\"""") ; }"
145450,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/out/TestQuotedStringOutput.java,55,,"    @Test public void escape_nt_01() { testSingleLine(escProcNT, ""abc"", ""abc"") ; }"
145451,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/out/TestQuotedStringOutput.java,56,,"    @Test public void escape_nt_02() { testSingleLine(escProcNT, ""abc\ndef"", ""abc\\ndef"") ; }"
145452,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/out/TestQuotedStringOutput.java,60,,"    @Test public void escape_nt_05() { testSingleLine(escProcNT, ""xyz\t"", ""xyz\\t"") ; }"
145453,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/process/TestNormalization.java,49,,"    @Test public void normalize_decimal_01()    { normalize(""0.0"", ""0.0"") ; }"
145454,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/process/TestNormalization.java,58,,"    @Test public void normalize_decimal_09()    { normalize(""-1.0"", ""-1.0"") ; }"
145455,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/process/TestNormalization.java,69,,"    @Test public void normalize_double_02()     { normalize(""0e0"", ""0.0E0"") ; }"
145456,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/process/TestNormalization.java,83,,"    @Test public void normalize_datetime_01()   { normalizeDT(""1984-01-01T07:07:07"",    ""1984-01-01T07:07:07"") ; }"
145457,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/stream/TestLocators.java,38,,"        assertTrue(loc.exists(""pom.xml"")) ;"
145458,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/stream/TestLocators.java,39,,"        assertTrue(loc.exists(testingDir+""data.ttl"")) ;"
145459,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/stream/TestStreamManager.java,79,,"    @Test public void fm_open_01()  { open(streamMgrNull, directory+""/D.ttl"", context(streamMgrHere)) ; }"
145460,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/system/AbstractTestPrefixMap.java,52,,"        pmap.add("""", ""http://example/"") ;"
145461,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/system/AbstractTestPrefixMap.java,65,,"        pmap.add(""org"", ""http://example.org/"") ;"
145462,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/system/AbstractTestPrefixMap.java,97,,"        assertEquals(""http://example/x"", x);"
145463,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/system/TestFormatRegistration.java,44,,"        add(""RDFXML"",   x, RDFFormat.RDFXML,            true, false) ;"
145464,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/system/TestIO_JenaWriters.java,45,,"        assertEquals(RDFWriterRIOT.class, writerF.getWriter(""N-TRIPLE"").getClass());"
145465,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/system/TestIRIxRIOT.java,70,,"    @Test public void irix_uuid_2_nt()          { testDft(""<urn:uuid:bad>"", Lang.NT, 0, 1); }"
145466,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/system/TestIRIxRIOT.java,101,,"    @Test public void irix_relative_nt()           { testNT(""<relative>"", UNSET, UNSET, 0, 0); }"
145467,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/system/TestJsonLDReadWrite.java,45,,"    @Test public void read_g01() { graphJ2R(""graph1.jsonld"", ""graph1.ttl"") ; }"
145468,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/tokens/TestTokenizer.java,256,,"        tokenizeAndTestExact(""   'abc'   "", StringType.STRING1, ""abc"") ;"
145469,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/tokens/TestTokenizer.java,378,,"        tokenizeAndTestExact(""_:123 "", TokenType.BNODE, ""123"") ;"
145470,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/tokens/TestTokenizer.java,741,,"        tokenizeAndTestLiteralDT(""'''123'''^^<xyz>"", StringType.LONG_STRING1, ""123"", TokenType.IRI, ""xyz"", null) ;"
145471,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/writer/TestJsonLDWriter.java,57,,"        String ns = ""http://www.a.com/foo/"";"
145472,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/writer/TestJsonLDWriter.java,95,,"        assertFalse(s.contains(""@context""));"
145473,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/writer/TestJsonLDWriter.java,255,,"        String ns = ""http://schema.org/"";"
145474,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/writer/TestJsonLDWriter.java,257,,"        m.add(s, m.createProperty(ns + ""name""), ""Jane Doe"");"
145475,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/writer/TestJsonLDWriter.java,257,,"        m.add(s, m.createProperty(ns + ""name""), ""Jane Doe"");"
145476,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/writer/TestJsonLDWriter.java,258,,"        m.add(s, m.createProperty(ns + ""url""), ""http://www.janedoe.com"");"
145477,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/writer/TestJsonLDWriter.java,258,,"        m.add(s, m.createProperty(ns + ""url""), ""http://www.janedoe.com"");"
145478,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/writer/TestJsonLDWriter.java,259,,"        m.add(s, RDF.type, ""Person"");"
145479,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/writer/TestJsonLDWriter.java,282,,"        m.add(s, m.createProperty(ns + ""jobTitle""), ""Professor"");"
145480,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/writer/TestJsonLDWriter.java,282,,"        m.add(s, m.createProperty(ns + ""jobTitle""), ""Professor"");"
145481,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/writer/TestRDFJSON.java,73,,"        test (""(base <http://example/> (graph "","
145482,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/writer/TestTurtleWriter.java,123,,"        int count1 = StringUtils.countMatches(result, ""@base"");"
145483,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/riot/writer/TestTurtleWriter.java,125,,"        int count2 = StringUtils.countMatches(result, ""BASE"");"
145484,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/TestAlgebraTranslate.java,61,,"                                            ""(extend ((?v1 (+ ?v 1)))"", "
145485,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/TestAlgebraTranslate.java,92,,"                                            ""(leftjoin"","
145486,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/TestOpAsQuery.java,338,,"        String query = StrUtils.strjoinNL(""SELECT (COUNT(*) as ?count) {"","
145487,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/TestOpAsQuery.java,340,,"                                          ""    GRAPH ?graph {"","
145488,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/TestOpAsQuery.java,341,,"                                          ""      ?uri ?p ?o ."","
145489,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/TestOpAsQuery.java,342,,"                                          ""      }"","
145490,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/TestPattern2Join.java,40,,"                                           ""(join "","
145491,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/TestTransformQuads.java,38,,"                                        ""(sequence"" +"
145492,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/TestVarFinder.java,35,,"    @Test public void varfind_01_1() { varfindFixed(""(bgp (?s <p> <o>))"", ""s"") ; }"
145493,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/TestVarFinder.java,40,,"    @Test public void varfind_02_1() { varfindFixed(""(graph ?g (bgp (?s <p> <o>)))"", ""s"", ""g"") ; }"
145494,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/TestVarFinder.java,45,,"    @Test public void varfind_03_1() { varfindFixed(""(filter (?s) (bgp (?s <p> <o>)))"", ""s"") ; }"
145495,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestOptDistinctReduced.java,37,,"            ""(distinct\n"" + "
145496,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestOptDistinctReduced.java,48,,"            ""(reduced\n"" + "
145497,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestOptDistinctReduced.java,75,,"            ""      (bgp (triple ?s ?p ?o)))))"" ; "
145498,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestOptDistinctReduced.java,102,,"                ""  (project (?p ?o)\n"" +"
145499,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestOptDistinctReduced.java,215,,"            ""  (distinct\n"" +"
145500,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestOptDistinctReduced.java,216,,"            ""    (project (?p)\n"" +"
145501,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestOptimizer.java,61,,"        	""  (order (?p ?o)\n"" +"
145502,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestOptimizer.java,62,,"            ""    (bgp (triple ?s ?p ?o))))"" ;"
145503,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestOptimizer.java,194,,"            (""(sequence"""
145504,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestOptimizer.java,270,,"                                            ""  (table unit))"");"
145505,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformEliminateAssignments.java,76,,"        test(StrUtils.strjoinNL(""(project (?y)"","
145506,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformEliminateAssignments.java,78,,"                                ""    (table unit)))""),"
145507,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformEliminateAssignments.java,107,,"                                ""  (filter (exprlist ?x)"","
145508,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformEliminateAssignments.java,108,,"                                ""    (extend (?x true)"","
145509,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformEliminateAssignments.java,109,,"                                ""      (table unit))))""),"
145510,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformEliminateAssignments.java,111,,"             ""  (filter (exprlist true)"","
145511,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformEliminateAssignments.java,123,,"        test(StrUtils.strjoinNL(""(project (?z)"","
145512,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformEliminateAssignments.java,189,,"                                ""  (order (?x)"","
145513,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformEliminateAssignments.java,340,,"        testNoChange(""(filter (exprlist ?x)"","
145514,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformEliminateAssignments.java,377,,"                     ""      (extend (?x true)"","
145515,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformEliminateAssignments.java,388,,"        testNoChange(""(project (?s)"","
145516,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformEliminateAssignments.java,391,,"                    ""      (bgp (triple ?s ?p ?o))"","
145517,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformEliminateAssignments.java,393,,"                    ""        (table unit)))))"");"
145518,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformEliminateAssignments.java,702,,"                                ""  (project (?y)"","
145519,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilterPlacement.java,256,,"             ""      (bgp (triple ?s ?p ?o))"" ,"
145520,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilterPlacement.java,281,,"             ""   ))"") ;"
145521,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilterPlacement.java,410,,"             ,""  (extend ((?w 2))"""
145522,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilterPlacement.java,504,,"             ,""  (assign ((?w 2))"""
145523,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilterPlacement.java,567,,"            ,""  (union"""
145524,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilterPlacement.java,573,,"            (""(union"""
145525,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilterPlacement.java,604,,"            ,""  (sequence"""
145526,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilterPlacement.java,629,,"            , ""    (bgp (triple ?s ?p ?o))"""
145527,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilterPlacement.java,663,,"            (""(slice _ 1"""
145528,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilterPlacement.java,664,,"            ,""  (project (?s ?p ?o)"""
145529,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilterPlacement.java,669,,"            ,""    ))"""
145530,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilterPlacement.java,750,,"            (""(filter (= ?x 1)"""
145531,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilterPlacement.java,901,,"                ,""    (propfunc :PF ?pfSubjArg (?pfObjArg1 ?pfObjArg2)"""
145532,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilterPlacement.java,902,,"                ,""       (bgp (?s ?p ?o))"""
145533,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilterPlacement.java,1015,,"                ,""   (proc :PROC ((+ ?arg1 111) (?arg2))"""
145534,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilterPlacement.java,1016,,"                ,""      (bgp (?s ?p ?o))"""
145535,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilters.java,81,,"            (""(sequence"""
145536,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilters.java,124,,"            ( ""PREFIX : <http://example/> SELECT * {"""
145537,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilters.java,125,,"              , ""    OPTIONAL { ?x :q ?o }"""
145538,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilters.java,126,,"              , ""    FILTER(?x = :x)"""
145539,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilters.java,397,,"               ""(table empty)"");"
145540,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformFilters.java,696,,"               ""(leftjoin (bgp (?x ?p ?o)) (assign ((?y ?x) (?z ?x)) (bgp (?x ?p1 ?o1) (?x ?p2 ?x))))"");"
145541,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformPathFlatten.java,61,,"        Op op1 = path("":x1"", "":q1/:p1*"", "":T1"");"
145542,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformPromoteTableEmpty.java,44,,"        test(""(extend ((?x 1)) (table empty))"", t_promote, ""(table empty)"");"
145543,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformPromoteTableEmpty.java,84,,"        test(""(leftjoin (table unit) (table empty) ())"", t_promote, ""(table unit)"");"
145544,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformTopN.java,30,,"            (""(slice _ 5"""
145545,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformTopN.java,32,,"             ,""    (bgp (triple ?s ?p ?z)) ))"""
145546,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformTopN.java,35,,"            (""(top (5 ?z)"""
145547,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformTopN.java,46,,"             ,""      (bgp (triple ?s ?p ?z)) )))"""
145548,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformTopN.java,65,,"            ,""  (top (5 ?z ?s)"""
145549,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformTopN.java,148,,"             ,""  (distinct"""
145550,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformTopN.java,167,,"             ,""    (project (?s ?z)"""
145551,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformTopN.java,168,,"             ,""      (order (?z ?s)"""
145552,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestTransformTopN.java,169,,"             ,""        (bgp (triple ?s ?p ?z)) ))))"""
145553,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestVarRename.java,110,,"            ""  (join\n"" + "
145554,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestVarRename.java,111,,"            ""    (bgp (triple ?s ?p ?o))\n"" + "
145555,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestVarRename.java,112,,"            ""    (slice _ 50\n"" + "
145556,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestVarRename.java,241,,"                                       ""  (project (?openTriplets)"","
145557,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestVarRename.java,244,,"                                       ""        (filter (notexists"","
145558,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/algebra/optimize/TestVarRename.java,246,,"                                       ""          (quadpattern"","
145559,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/api/TestAPI.java,93,,"            init.add(""z"", m.createLiteral(""zzz""));"
145560,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/api/TestAPI.java,98,,"            assertTrue(""Empty model"", r.size() > 0 ) ;"
145561,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/api/TestAPI.java,143,,"        try(QueryExecution qExec = makeQExec(""SELECT * {?s ?p ?o}"")) {"
145562,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/api/TestQueryExecutionTimeout1.java,94,,"        String qs = prefix + ""SELECT * { ?s ?p ?o }"" ;"
145563,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/core/AbstractDatasetGraphFind.java,250,,"        Assume.assumeTrue(""Not a DatasetGraphBaseFind"", dsg instanceof DatasetGraphBaseFind) ;"
145564,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/core/AbstractDatasetGraphFindPatterns.java,112,,"        List<Quad> quads1 = Iter.toList(dsg.find(node("":gx""), null, null, null)) ;"
145565,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/core/AbstractDatasetGraphFindPatterns.java,119,,"        List<Quad> quads1 =  Iter.toList(dsg.find(null, node("":sx""), null, null)) ;"
145566,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/core/AbstractDatasetGraphFindPatterns.java,126,,"        List<Quad> quads1 =  Iter.toList(dsg.find(null, null, node("":px""), null)) ;"
145567,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/core/AbstractDatasetGraphFindPatterns.java,133,,"        List<Quad> quads1 =  Iter.toList(dsg.find(null, null, null, node("":ox""))) ;"
145568,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/core/AbstractDatasetGraphTests.java,73,,"        Quad quad = SSE.parseQuad(""(quad <g> <s> <p> <o>)"") ;"
145569,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/core/AbstractDatasetGraphTests.java,139,,"        Node g  = SSE.parseNode(""<g>"") ;"
145570,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/core/AbstractDatasetGraphTests.java,241,,"        Node subject = NodeFactory.createURI(""http://example/s"");"
145571,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/core/AbstractDatasetGraphTests.java,242,,"        Node predicate = NodeFactory.createURI(""http://example/p"");"
145572,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/core/AbstractDatasetGraphTests.java,255,,"        Node graph = NodeFactory.createURI(""http://example/g"") ;"
145573,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/core/AbstractTestDataset.java,77,,"        String graphName = ""http://example/"";"
145574,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/core/AbstractTestDynamicDataset.java,85,,"    @Test public void dynamic09()    { testCount(""SELECT * ""+"
145575,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/core/TestSpecialGraphNames.java,98,,"        List<Binding> results = exec(""(graph <"" + Quad.unionGraph.getURI() + ""> (bgp (<s2> ?p ?o)))"", TRIPLES) ;"
145576,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/core/TestSpecialGraphNames.java,98,,"        List<Binding> results = exec(""(graph <"" + Quad.unionGraph.getURI() + ""> (bgp (<s2> ?p ?o)))"", TRIPLES) ;"
145577,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/engine/http/TestService.java,147,,"        @SuppressWarnings(""unchecked"")"
145578,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/engine/http/TestService.java,153,,"        Query q = QueryFactory.create(""ASK { }"");"
145579,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/engine/join/AbstractTestJoin.java,48,,"        return parseTableInt(""(table"", "
145580,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/engine/join/AbstractTestJoin.java,64,,"                             ""   (row (?a 1) (?c 9) (?b 2))"","
145581,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/engine/join/AbstractTestJoin.java,108,,"                             ""   (row (?a 4) (?c 4) (?b 4))"","
145582,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/engine/join/AbstractTestJoin.java,109,,"                             ""   (row (?a 4) (?c 4) (?b 5))"","
145583,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/engine/join/AbstractTestJoin.java,110,,"                             ""   (row (?a 4) (?c 5) (?b 4))"","
145584,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/engine/join/AbstractTestJoin.java,111,,"                             ""   (row (?a 4) (?c 5) (?b 5))"","
145585,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/engine/join/AbstractTestJoin.java,162,,"                             ""  (row (?a 1) (?c 9) (?z 11))"","
145586,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestCastXSD.java,80,,"    @Test public void cast_to_boolean_01()  { testCast      (""xsd:boolean('1'^^xsd:double)"",        ""true"") ; }"
145587,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestCastXSD.java,82,,"    @Test public void cast_to_boolean_03()  { testCast      (""xsd:boolean('0'^^xsd:float)"",         ""false"") ; }"
145588,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestCustomAggregates.java,93,,"        String qs = ""SELECT (AGG <""+aggIRI+"">(?o) AS ?x) {?s ?p ?o } GROUP BY ?s"" ;"
145589,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestCustomAggregates.java,101,,"        String qs = ""SELECT (<""+aggIRI+"">(?o) AS ?x) {?s ?p ?o } GROUP BY ?s"" ;"
145590,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestExpressions.java,179,,"    @Test public void testBoolean_54() { testBoolean(dateTime1+"" = ""+dateTime2, true) ; }"
145591,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestExpressions.java,182,,"    @Test public void testBoolean_57() { testBoolean(dateTime3+"" < ""+dateTime1, true) ; }"
145592,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestExpressions.java,183,,"    @Test public void testBoolean_58() { testBoolean(dateTime3+"" > ""+dateTime1, false) ; }"
145593,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestExpressions.java,276,,"    @Test public void testNumeric_51() { testNumeric(""'21'^^<""+XSDDatatype.XSDinteger.getURI()+"">"", 21) ; }"
145594,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestExpressions.java,379,,"    static String duration1 = ""'P1Y1M1DT1H1M1S""+""'^^<""+XSDDatatype.XSDduration.getURI()+"">"";"
145595,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestExpressions3.java,41,,"    @Test public void bound_02()       { eval(""BOUND(?x)"", ""(?y 1)"", false) ; }"
145596,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestExpressionsMath.java,36,,"    @Test public void exp_04()          { test(""math:exp(1e0/0)"", ""'INF'^^xsd:double"") ; }"
145597,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestExpressionsMath.java,39,,"    @Test public void exp_07()          { test(""math:exp('NaN'^^xsd:double)"", ""'NaN'^^xsd:double"") ; }"
145598,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestExpressionsMath.java,61,,"    @Test public void pow_12()          { test(""math:pow(1e0, 'INF'^^xsd:double)"", ""'1.0e0'^^xsd:double"") ; }"
145599,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestFunctions.java,186,,"    @Test public void exprReplace03()  { test(""REPLACE('abcbd', 'b.', 'Z')"", NodeValue.makeString(""aZZ"")) ; }"
145600,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestFunctions2.java,97,,"    @Test public void abs_03()    { test(""abs(1.0e0)"",  ""1.0e0"") ; }"
145601,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestFunctions2.java,126,,"    @Test public void concat_02()   { test(""concat('a', 'b')"",  ""'ab'"") ; }"
145602,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestFunctions2.java,146,,"    @Test public void substr_01()    { test(""substr('abc',1)"",      ""'abc'"") ; }"
145603,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestFunctions2.java,224,,"    @Test public void contains_01()    { test(""contains('abc', 'a')"", ""true"") ; }"
145604,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestFunctions2.java,226,,"    @Test public void contains_03()    { test(""contains('ABC', 'a')"", ""false"") ; }"
145605,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestFunctions2.java,311,,"    @Test public void year_01()         { test(""year('2010-12-24T16:24:01.123'^^xsd:dateTime)"", ""2010"") ; }"
145606,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestFunctions2.java,465,,"    @Test public void timezone_01()       { test(""timezone('2010-12-24T16:24:35.123Z'^^xsd:dateTime)"", ""'PT0S'^^xsd:dayTimeDuration"") ; }"
145607,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestFunctions2.java,496,,"    @Test public void md5_01()      { test(""md5('abcd')"",""'e2fc714c4727ee9395f324cd2e7f331f'"") ; }"
145608,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestFunctions2.java,505,,"    @Test public void sha1_01()      { test(""sha1('abcd')"",""'81fe8bfe87576c3ecb22426f8e57847382917acf'"") ; }"
145609,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestFunctions2.java,526,,"    @Test public void sha256_01()      { test(""sha256('abcd')"",""'88d4266fd4e6338d13b845fcf289579d209c897823b9217da3e161936f031589'"") ; }"
145610,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestFunctions2.java,537,,"    @Test public void sha384_01()      { test(""sha384('abcd')"",""'1165b3406ff0b52a3d24721f785462ca2276c9f454a116c2b2ba20171a7905ea5a026682eb659c4d5f115c363aa3c79b'"") ; }"
145611,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestFunctions2.java,549,,"    @Test public void sha512_01()      { test(""sha512('abcd')"",""'d8022f2060ad6efd297ab73dcc5355c9b214054b0d1776a136a669d26a7d3b14f73aa0d0ebff19ee333368f0164b6419a96da49e3e481753e7e96b716bdccb6f'"") ; }"
145612,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestLeviathanFunctions.java,138,,"        LibTestExpr.test(""lfn:log(4, 2)"", ""2e0"");"
145613,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestLeviathanFunctions.java,198,,"        LibTestExpr.test(""lfn:cartesian(0, 0, 3, 4)"", ""5e0"");"
145614,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeFunctions.java,41,,"        Node n1 = NodeFactory.createLiteral(""xyz"") ;"
145615,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeFunctions.java,48,,"        Node n2 = NodeFactory.createLiteral(""abc"") ;"
145616,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeFunctions.java,109,,"        Node n1 = SSE.parseNode(""<<:s :p 123>>"");"
145617,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeFunctions.java,216,,"        Node n = NodeFactory.createLiteral(""abc"", ""en-gb"") ;"
145618,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeFunctions.java,243,,"        NodeValue nv = NodeValue.makeNode(NodeFactory.createURI(""http://example/"")) ;"
145619,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeFunctions.java,370,,"        Node n = NodeFunctions.checkAndGetStringLiteral(""Test"", nv);"
145620,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,62,,"        assertTrue(""Not a number: "" + v, v.isNumber());"
145621,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,63,,"        assertTrue(""Not an integer: "" + v, v.isInteger());"
145622,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,72,,"        assertTrue(""Not a node: "" + v, v.hasNode());"
145623,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,79,,"        assertTrue(""Not same integer: "" + v1 + "" & "" + v2, v1.getInteger().equals(v2.getInteger()));"
145624,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,112,,"        assertTrue(""Not a double: "" + v, v.isDouble());"
145625,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,133,,"        NodeValue v = NodeValue.makeDecimal(new BigDecimal(""1.3""));"
145626,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,158,,"        cal.setTimeZone(TimeZone.getTimeZone(""GMT""));"
145627,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,171,,"        NodeValue v = NodeValue.makeNodeDateTime(""2005-02-18T20:39:10Z"");"
145628,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,181,,"        assertEquals(""Not Calendar.equals: "", v1.getDateTime(), v2.getDateTime());"
145629,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,335,,"        assertEquals(""Print form mismatch"", ""57"", actualStr);"
145630,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,451,,"        assertTrue(""Not a boolean: "" + v, v.isBoolean());"
145631,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,639,,"        assertFalse(""It's a boolean: "" + v, v.isBoolean());"
145632,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,657,,"        NodeValue v = NodeValue.makeString(""xyz"");"
145633,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,770,,"        NodeValue v = NodeValue.makeString(""string"");"
145634,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,771,,"        assertTrue(""Not a string: "" + v, v.isString());"
145635,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,821,,"                {""Broager"", ""Åkirkeby"", ""Børkop"", ""Ærøskøbing"", ""Brædstrup"", ""Wandsbek""};"
145636,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,821,,"                {""Broager"", ""Åkirkeby"", ""Børkop"", ""Ærøskøbing"", ""Brædstrup"", ""Wandsbek""};"
145637,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,821,,"                {""Broager"", ""Åkirkeby"", ""Børkop"", ""Ærøskøbing"", ""Brædstrup"", ""Wandsbek""};"
145638,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,821,,"                {""Broager"", ""Åkirkeby"", ""Børkop"", ""Ærøskøbing"", ""Brædstrup"", ""Wandsbek""};"
145639,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,821,,"                {""Broager"", ""Åkirkeby"", ""Børkop"", ""Ærøskøbing"", ""Brædstrup"", ""Wandsbek""};"
145640,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,821,,"                {""Broager"", ""Åkirkeby"", ""Børkop"", ""Ærøskøbing"", ""Brædstrup"", ""Wandsbek""};"
145641,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,929,,"        assertTrue(""Same values ("" + nv1 + "","" + nv2 + "")"", NodeValue.notSameAs(nv1, nv2));"
145642,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,933,,"        assertTrue(""Different values ("" + nv1 + "","" + nv3 + "")"", NodeValue.sameAs(nv1, nv3));"
145643,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,934,,"        assertFalse(""Different values - notNotSame ("" + nv1 + "","" + nv3 + "")"", NodeValue.notSameAs(nv1, nv3));"
145644,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,1052,,"        assertEquals(""Not NodeValue.equals()"", nv1, nv2);"
145645,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValue.java,1071,,"        NodeValue nv1 = NodeValue.makeNode(NodeFactory.createURI(""http://example""));"
145646,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValueOps.java,37,,"    @Test public void nv_add_10() { testAdd(""'12'"", ""'13'"", ""'1213'"" ) ; }"
145647,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValueOps.java,40,,"    @Test public void nv_add_20() { testAdd(""'PT1H'^^xsd:duration"", ""'PT1H'^^xsd:duration"", ""'PT2H'^^xsd:duration"" ) ; }"
145648,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValueOps.java,42,,"    @Test public void nv_add_21() { testAdd(""'PT1H'^^xsd:dayTimeDuration"", ""'PT1H'^^xsd:dayTimeDuration"", ""'PT2H'^^xsd:dayTimeDuration"" ) ; }"
145649,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestNodeValueOps.java,67,,"    @Test public void nv_add_24() { testAdd(""'2000-01-01T00:00:00Z'^^xsd:dateTime"", "
145650,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestOrdering.java,131,,"        NodeValue nv1 = NodeValue.makeNode(NodeFactory.createLiteral(""abc"")) ;"
145651,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestOrdering.java,139,,"        NodeValue nv1 = NodeValue.makeNode(NodeFactory.createLiteral(""xyz"")) ;"
145652,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestOrdering.java,302,,"        Node y = SSE.parseNode(""<<:s :p 2>>"");"
145653,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestRegex.java,61,,"    @Test public void testRegex01() { regexTest( ""ABC"",  ""ABC"",  null,   true) ; }"
145654,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestRegex.java,62,,"    @Test public void testRegex02() { regexTest( ""ABC"",  ""abc"",  null,   false) ; }"
145655,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestXSDFuncOp.java,43,,"        lex_decimal_value(BigDecimal.valueOf(0), ""0.0"");"
145656,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestXSDFuncOp.java,126,,"        assertTrue(""Not an integer: ""+r, r.isInteger()) ;"
145657,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestXSDFuncOp.java,127,,"        assertTrue(""Not a NodeValueInteger: ""+r, r instanceof NodeValueInteger) ;"
145658,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestXSDFuncOp.java,128,,"        assertEquals(""Wrong result"", 12, r.getInteger().longValue()) ;"
145659,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestXSDFuncOp.java,136,,"        assertTrue(""Not a decimal: ""+r, r.isDecimal()) ;"
145660,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestXSDFuncOp.java,137,,"        assertTrue(""Not a NodeValueDecimal: ""+r, r instanceof NodeValueDecimal) ;"
145661,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestXSDFuncOp.java,147,,"        assertTrue(""Not a NodeValueFloat: ""+r, r instanceof NodeValueFloat) ;"
145662,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestXSDFuncOp.java,157,,"        assertTrue(""Not a double: ""+r, r.isDouble()) ;"
145663,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestXSDFuncOp.java,158,,"        assertTrue(""Not a NodeValueDouble: ""+r, r instanceof NodeValueDouble) ;"
145664,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestXSDFuncOp.java,424,,"        assertEquals(""Does not compare ""+nv5+"" & ""+nv7, NodeValue.CMP_LESS, NodeValue.compare(nv5, nv7)) ;"
145665,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestXSDFuncOp.java,424,,"        assertEquals(""Does not compare ""+nv5+"" & ""+nv7, NodeValue.CMP_LESS, NodeValue.compare(nv5, nv7)) ;"
145666,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestXSDFuncOp.java,545,,"            fail(""Should not compare (but did) ""+nv5+"" & ""+nv7) ;"
145667,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestXSDFuncOp.java,578,,"        NodeValue nv1 = NodeValue.makeNode(NodeFactory.createURI(""test:abc"")) ;"
145668,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/TestXSDFuncOp.java,613,,"        NodeValue nv1 = NodeValue.makeDateTime(""2007-09-04T09:22:03"") ;"
145669,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/expr/nodevalue/TestNodeValueSortKey.java,36,,"        NodeValue noveValue = NodeValue.makeString(""Casa"");"
145670,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/library/TestFnFunctionsCollation.java,40,,"        final String[] unordered = {""tšekin kieli"" , ""tulun kieli"", ""töyhtöhyyppä"","
145671,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/library/TestFnFunctionsCollation.java,41,,"                                    ""tsahurin kieli"", ""tsahurin kieli"", ""tulun kieli""};"
145672,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/library/TestFnFunctionsDateTimeDuration.java,84,,"        test(""fn:timezone-from-dateTime('2017-09-14T17:01:02+01:00'^^xsd:dateTime)"", ""'PT1H'^^xsd:dayTimeDuration"");"
145673,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/library/TestFnFunctionsDateTimeDuration.java,145,,"            ""fn:adjust-dateTime-to-timezone('2002-03-07T10:00:00'^^xsd:dateTime,'""+getDynamicDurationString()+""'^^xsd:dayTimeDuration)"");"
145674,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/library/TestFnFunctionsOther.java,35,,"        test(""fn:apply(math:sqrt, 9)"", ""3.0e0"");"
145675,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/library/TestFnFunctionsString.java,149,,"    @Test public void exprFnReplace03()  { test(""fn:replace('abcbd', 'b.', 'Z')"", NodeValue.makeString(""aZZ"")) ; }"
145676,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/scripting/TestScriptFunction.java,128,,"        NodeValue nv = eval(""identity"", ""'2018-01-06T17:56:41.293+00:00'^^xsd:dateTime"");"
145677,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/scripting/TestScriptFunction.java,145,,"        NodeValue nv = eval(""combine"", ""1"", ""2"");"
145678,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/user/TestFunctionExpansion.java,72,,"        UserDefinedFunctionFactory.getFactory().add(""http://example/square"", e, new ArrayList<>(e.getVarsMentioned()));"
145679,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/user/TestFunctionExpansion.java,111,,"        UserDefinedFunctionFactory.getFactory().add(""http://example/cube"", cube, new ArrayList<>(cube.getVarsMentioned()));"
145680,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/user/TestFunctionExpansion.java,147,,"        UserDefinedFunctionFactory.getFactory().add(""http://example/takeaway"", takeaway, args);"
145681,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/user/TestFunctionExpansion.java,154,,"        UserDefinedFunctionFactory.getFactory().add(""http://example/test"", test, new ArrayList<Var>());"
145682,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/user/TestFunctionExpansion.java,246,,"        UserDefinedFunctionFactory.getFactory().add(""http://example/single"", single, new ArrayList<>(single.getVarsMentioned()));"
145683,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/user/TestFunctionExpansion.java,254,,"        UserDefinedFunctionFactory.getFactory().add(""http://example/add"", add, args);"
145684,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/user/TestFunctionNonExpansion.java,53,,"        UserDefinedFunctionFactory.getFactory().add(""http://example/square"", square, new ArrayList<>(square.getVarsMentioned()));"
145685,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/user/TestFunctionNonExpansion.java,57,,"        UserDefinedFunctionFactory.getFactory().add(""http://example/cube"", cube, new ArrayList<>(cube.getVarsMentioned()));"
145686,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/function/user/TestUserDefinedFunctionFactory.java,57,,"        UserDefinedFunctionFactory.getFactory().add(""http://example/square"", e, new ArrayList<>(e.getVarsMentioned()));"
145687,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/graph/AbstractTestPrefixMappingView.java,45,,"        pmap.setNsPrefix(""ex"", ""http://example/"") ;"
145688,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/graph/TestDatasets.java,138,,"		test(""SELECT * FROM <ex:from> FROM NAMED <ex:named> { GRAPH <ex:named> { ?s ?p ?o } }"", new String[] { ""ex:named"" }, 1);"
145689,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/graph/TestGraphUnionRead.java,43,,"      ""   (triple <http://example/s> <http://example/p> <http://example/o>)"" ,"
145690,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/modify/AbstractTestUpdateGraph.java,199,,"        Element element = QueryFactory.createElement(""{ ?s <http://example/p> ?o }"" ) ;"
145691,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/modify/AbstractTestUpdateGraph.java,328,,"        assertTrue(graphContains(gStore.getDefaultGraph(), new Triple(s,p,NodeFactoryExtra.parseNode(""123"")))) ;"
145692,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/modify/TestUpdateOperations.java,73,,"        UpdateRequest req = UpdateFactory.create(""LOAD <""+DIR+""/D.nt>"") ;"
145693,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/modify/TestUpdateOperations.java,106,,"        UpdateRequest req = UpdateFactory.create(""LOAD SILENT <""+DIR+""/D.nq> INTO GRAPH <""+gName.getURI()+"">"") ;"
145694,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/negation/TestGraphDeltas.java,57,,"        (""SELECT *"","
145695,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/negation/TestGraphDeltas.java,59,,"         ""  GRAPH <http://a>"","
145696,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/negation/TestGraphDeltas.java,60,,"         ""  {"","
145697,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/negation/TestGraphDeltas.java,62,,"         ""  }"","
145698,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/negation/TestGraphDeltas.java,172,,"        a.read(new StringReader(testData), null, ""TTL"");"
145699,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/path/TestPath.java,126,,"    @Test public void parsePath_04()           { parse("":p*"") ; }"
145700,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/path/TestPath2.java,79,,"	@Test public void path_02() { test(x, ""(alt :q :r)"",          "":y2"", "":y1"", "":y2"", "":y1"") ; } "
145701,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/path/TestPath2.java,79,,"	@Test public void path_02() { test(x, ""(alt :q :r)"",          "":y2"", "":y1"", "":y2"", "":y1"") ; } "
145702,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/path/TestPath2.java,93,,"	@Test public void path_16() { test(x, ""(mod 0 3 :r)"",         "":x"", "":y2"", "":z"", "":a2"", "":a1"", "":y1"", "":z"", "":a2"", "":a1"") ; } "
145703,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/path/TestPath2.java,93,,"	@Test public void path_16() { test(x, ""(mod 0 3 :r)"",         "":x"", "":y2"", "":z"", "":a2"", "":a1"", "":y1"", "":z"", "":a2"", "":a1"") ; } "
145704,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/path/TestPathPF.java,112,,"        Path path = SSE.parsePath(""(prefix ((list: <http://jena.apache.org/ARQ/list#>)) (seq :p (link list:member)))"") ;"
145705,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/pfunction/library/TestStrSplit.java,67,,"		assertAllX(""foo"");"
145706,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/resultset/TestResultSet.java,98,,"        ResultSetRewindable rs1 = makeRewindable(""x"", org.apache.jena.graph.NodeFactory.createURI(""tag:local"")) ;"
145707,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/resultset/TestResultSet.java,175,,"        ResultSet rs = ResultSetFactory.load(DIR+""output.srx"") ;"
145708,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/resultset/TestResultSetFormat1.java,78,,"    	""(resultset (?x)"","
145709,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/resultset/TestResultSetFormat1.java,79,,"    	"" (row (?x <"" + RDF.type.toString() + "">))"","
145710,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/resultset/TestResultSetFormat1.java,79,,"    	"" (row (?x <"" + RDF.type.toString() + "">))"","
145711,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/solver/TestReorder.java,38,,"        Triple t = triple(""(:x :p ?v)"") ;"
145712,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/solver/TestReorder.java,102,,"        Triple t = triple(""(?x :p 1913)"") ;"
145713,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/sse/TestSSE_Basic.java,66,,"    @Test public void testParseList_02() { parse(""(a)"") ; }"
145714,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/syntax/TestSerialization.java,48,,"    { fmtURI_Prefix(""http://example/"", ""<http://example/>"", pmap1) ; }"
145715,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/syntax/TestSerialization.java,132,,"    { test(""SELECT * { ?s ?p ?o }"","
145716,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/syntax/syntaxtransform/TestSyntaxTransform.java,97,,"                ""s"", ""<urn:ex:z>"");"
145717,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/syntax/syntaxtransform/TestSyntaxTransform.java,182,,"        String x1 = reqExpected.toString().replaceAll(""[ \n\t]"", """") ;"
145718,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/util/TestDateTimeParsing.java,40,,"              ""2007"", ""08"", ""31"","
145719,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/util/TestDateTimeParsing.java,118,,"              ""-08:00"") ;"
145720,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/sparql/util/TestVersion.java,44,,"        Assert.assertTrue(info.contains(""ARQ""));"
145721,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/system/TestTxn.java,47,,"                assertEquals(""In R, value()"", 0, counter.value()) ;"
145722,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/system/TestTxn.java,48,,"                assertEquals(""In R, get()"", 0, counter.get()) ;"
145723,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/system/TestTxn.java,69,,"                assertEquals(""In W, value()"", 0, counter.value()) ;"
145724,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/system/TestTxn.java,70,,"                assertEquals(""In W, get()"",1, counter.get()) ;"
145725,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/system/TestTxn.java,73,,"        assertEquals(""Outside W"",1, x) ;"
145726,./TargetProjects/jena/jena-arq/src/test/java/org/apache/jena/system/TestTxn.java,165,,"            assertEquals(""In txn, value()"", 91, counter.value()) ;"
145727,./TargetProjects/jena/jena-base/src/main/java/org/apache/jena/atlas/io/IO.java,88,,"        if ( filename.startsWith(""file:"") )"
145728,./TargetProjects/jena/jena-base/src/main/java/org/apache/jena/atlas/lib/IRILib.java,163,,"        if ( fn.startsWith(""file:"") )"
145729,./TargetProjects/jena/jena-base/src/main/java/org/apache/jena/atlas/logging/LogCtl.java,113,,"        else if ( levelName.equalsIgnoreCase(""info"") )"
145730,./TargetProjects/jena/jena-base/src/main/java/org/apache/jena/atlas/logging/LogCtl.java,117,,"        else if ( levelName.equalsIgnoreCase(""warn"") || levelName.equalsIgnoreCase(""warning"") )"
145731,./TargetProjects/jena/jena-base/src/main/java/org/apache/jena/atlas/logging/LogCtl.java,119,,"        else if ( levelName.equalsIgnoreCase(""error"") || levelName.equalsIgnoreCase(""severe"") )"
145732,./TargetProjects/jena/jena-base/src/main/java/org/apache/jena/atlas/logging/LogCtl.java,121,,"        else if ( levelName.equalsIgnoreCase(""OFF"") )"
145733,./TargetProjects/jena/jena-base/src/test/java/org/apache/jena/atlas/io/TestIndentedWriter.java,63,,"            b.println(""ABCD"") ;"
145734,./TargetProjects/jena/jena-base/src/test/java/org/apache/jena/atlas/lib/TestDateTimeUtils.java,34,,"		cal.setTimeZone(TimeZone.getTimeZone(""MST""));"
145735,./TargetProjects/jena/jena-base/src/test/java/org/apache/jena/atlas/lib/TestFileOps.java,71,,"    { test(""xyz"", null, ""xyz"", null) ; }"
145736,./TargetProjects/jena/jena-base/src/test/java/org/apache/jena/atlas/lib/TestFilenameProcessing.java,98,,"        filenameToIRI(""abc"", ""file://"" + cwd + ""/abc"") ;"
145737,./TargetProjects/jena/jena-base/src/test/java/org/apache/jena/atlas/lib/TestStrUtils.java,90,,"        boolean b = StrUtils.strStartsWithIgnoreCase(""foobar"", ""FOO"");"
145738,./TargetProjects/jena/jena-base/src/test/java/org/apache/jena/atlas/lib/TestTrie.java,38,,"        trie.add(""test"", 123);"
145739,./TargetProjects/jena/jena-base/src/test/java/org/apache/jena/atlas/lib/TestTrie.java,172,,"        trie.add(""testing"", 456);"
145740,./TargetProjects/jena/jena-base/src/test/java/org/apache/jena/atlas/lib/TestTrie.java,279,,"        matches = trie.prefixSearch(""testingly"");"
145741,./TargetProjects/jena/jena-base/src/test/java/org/apache/jena/atlas/lib/TestXMLLib.java,27,,"    @Test public void ws_collapse_01()  { test(""abc"", ""abc"") ; }"
145742,./TargetProjects/jena/jena-base/src/test/java/org/apache/jena/atlas/lib/persistent/TestPMap.java,36,,"		assertFalse(testMap.containsKey(""key""));"
145743,./TargetProjects/jena/jena-base/src/test/java/org/apache/jena/atlas/lib/tuple/TestTupleMap.java,33,,"        TupleMap tmap = TupleMap.create(""SPO"", ""POS"");"
145744,./TargetProjects/jena/jena-base/src/test/java/org/apache/jena/atlas/lib/tuple/TestTupleMap.java,33,,"        TupleMap tmap = TupleMap.create(""SPO"", ""POS"");"
145745,./TargetProjects/jena/jena-cmds/src/main/java/jena/rdfcat.java,131,,"    protected String m_inputFormat = ""RDF/XML"";"
145746,./TargetProjects/jena/jena-cmds/src/main/java/jena/rdfcat.java,161,,"    		(arg,val) -> m_actionQ.add( new ReadAction( val, ""N-TRIPLE"" ) ) );    "
145747,./TargetProjects/jena/jena-cmds/src/main/java/jena/schemagen.java,900,,"                writeValue( (Resource) i.next(), template, ""ObjectProperty"", ""createObjectProperty"", ""_PROP"" );"
145748,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_rdfcat.java,53,,"        assertEquals( ""RDF/XML"", jena.rdfcat.unabbreviate.get( ""x"" ) );"
145749,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_rdfcat.java,60,,"        assertEquals( ""N-TRIPLE"", jena.rdfcat.unabbreviate.get( ""ntriples"" ) );"
145750,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_rdfcat.java,83,,"        source.read( ""file:testing/cmd/rdfcat.xml"", ""RDF/XML"" );"
145751,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_rdfcat.java,130,,"        doTestRdfcatOutput( ""-n"", ""file:testing/cmd/rdfcat.n3"", ""RDF/XML"", ""RDF/XML"" );"
145752,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_rdfcat.java,201,,"        doTestRdfcatOutput( ""-t"", ""file:testing/cmd/rdfcat.nt"", ""RDF/XML"", ""RDF/XML"" );"
145753,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,82,,"        String SOURCE = PREFIX + ""ex:A a owl:Class ."";"
145754,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,93,,"                             new String[] {""-a"", ""http://example.com/sg#"", ""--owl""},"
145755,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,93,,"                             new String[] {""-a"", ""http://example.com/sg#"", ""--owl""},"
145756,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,94,,"                             new String[] {"".*public static final Resource A.*""},"
145757,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,100,,"        String SOURCE = PREFIX + ""ex:A a rdfs:Class ."";"
145758,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,111,,"                             new String[] {""-a"", ""http://example.com/sg#"", ""--rdfs""},"
145759,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,127,,"        String SOURCE = PREFIX + ""ex:p a owl:ObjectProperty ."";"
145760,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,130,,"                             new String[] {"".*public static final Property p.*""},"
145761,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,136,,"        String SOURCE = PREFIX + ""ex:p a rdf:Property ."";"
145762,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,164,,"        String SOURCE = PREFIX + ""ex:A a owl:Class . ex:i a ex:A ."";"
145763,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,167,,"                             new String[] {"".*public static final Resource i.*""},"
145764,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,265,,"        String SOURCE = PREFIX + ""ex:A a owl:Class ; rdfs:comment \""commentcomment\"" ."";"
145765,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,359,,"                             new String[] {""-a"", ""http://example.com/sg#"", ""--owl"", ""--ontology""},"
145766,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,360,,"                             new String[] {"".*public static final OntClass A.*""},"
145767,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,510,,"                             new String[] {"".*Property p.*""} );"
145768,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,518,,"                             new String[] {"".*Resource A.*""},"
145769,./TargetProjects/jena/jena-cmds/src/test/java/jena/Test_schemagen.java,607,,"                             new String[] {""-a"", ""http://example.com/sg#"", ""--owl"", ""--includeSource""},"
145770,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/assembler/assemblers/ContentAssembler.java,188,,"        ""@prefix rdf: <"" + RDF.getURI() + ""> ."""
145771,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/datatypes/xsd/XSDDateTime.java,214,,"        if ((mask & TIME_MASK) == 0) throw new IllegalDateTimeFieldException(""Time not available"");"
145772,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/datatypes/xsd/impl/XSDAbstractDateTimeType.java,104,,"                 throw new RuntimeException(""Error in parsing time zone"" );"
145773,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/datatypes/xsd/impl/XSDAbstractDateTimeType.java,333,,"             if ( digit < 0 ) throw new NumberFormatException(""'""+buffer.toString()+""' has wrong format"");"
145774,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/datatypes/xsd/impl/XSDDayTimeDurationType.java,37,,"            throw new DatatypeFormatException(""Not valid as xsd:dayTimeDuration: ""+lex) ;"
145775,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ext/xerces/util/URI.java,518,,"                  throw new MalformedURIException(""No scheme found in URI."");"
145776,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/AllValuesFromRestrictionImpl.java,108,,"        setPropertyValue( getProfile().ALL_VALUES_FROM(), ""ALL_VALUES_FROM"", cls );"
145777,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/CardinalityQRestrictionImpl.java,109,,"        setPropertyValue( getProfile().CARDINALITY_Q(), ""CARDINALITY_Q"", getModel().createTypedLiteral( cardinality ) );"
145778,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/CardinalityRestrictionImpl.java,106,,"        setPropertyValue( getProfile().CARDINALITY(), ""CARDINALITY"", getModel().createTypedLiteral( cardinality ) );"
145779,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/ComplementClassImpl.java,126,,"        setPropertyValue( getProfile().COMPLEMENT_OF(), ""COMPLEMENT_OF"", cls );"
145780,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/HasValueRestrictionImpl.java,110,,"        setPropertyValue( getProfile().HAS_VALUE(), ""HAS_VALUE"", value );"
145781,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/MaxCardinalityQRestrictionImpl.java,111,,"        setPropertyValue( getProfile().MAX_CARDINALITY_Q(), ""MAX_CARDINALITY_Q"", getModel().createTypedLiteral( cardinality ) );"
145782,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/MaxCardinalityRestrictionImpl.java,106,,"        setPropertyValue( getProfile().MAX_CARDINALITY(), ""MAX_CARDINALITY"", getModel().createTypedLiteral( cardinality ) );"
145783,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/MinCardinalityQRestrictionImpl.java,110,,"        setPropertyValue( getProfile().MIN_CARDINALITY_Q(), ""MIN_CARDINALITY_Q"", getModel().createTypedLiteral( cardinality ) );"
145784,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/MinCardinalityRestrictionImpl.java,106,,"        setPropertyValue( getProfile().MIN_CARDINALITY(), ""MIN_CARDINALITY"", getModel().createTypedLiteral( cardinality ) );"
145785,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntClassImpl.java,128,,"        setPropertyValue( getProfile().SUB_CLASS_OF(), ""SUB_CLASS_OF"", cls );"
145786,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntClassImpl.java,443,,"        setPropertyValue( getProfile().EQUIVALENT_CLASS(), ""EQUIVALENT_CLASS"", cls );"
145787,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntClassImpl.java,511,,"        setPropertyValue( getProfile().DISJOINT_WITH(), ""DISJOINT_WITH"", cls );"
145788,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntModelImpl.java,360,,"        checkProfileEntry( getProfile().FUNCTIONAL_PROPERTY(), ""FUNCTIONAL_PROPERTY"" );"
145789,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntModelImpl.java,674,,"        checkProfileEntry( getProfile().RESTRICTION(), ""RESTRICTION"" );"
145790,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntModelImpl.java,1419,,"        checkProfileEntry( getProfile().CLASS(), ""CLASS"" );"
145791,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntPropertyImpl.java,132,,"        setPropertyValue( getProfile().SUB_PROPERTY_OF(), ""SUB_PROPERTY_OF"", prop );"
145792,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntPropertyImpl.java,308,,"        setPropertyValue( getProfile().DOMAIN(), ""DOMAIN"", res );"
145793,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntPropertyImpl.java,375,,"        setPropertyValue( getProfile().RANGE(), ""RANGE"", res );"
145794,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntPropertyImpl.java,444,,"        setPropertyValue( getProfile().EQUIVALENT_PROPERTY(), ""EQUIVALENT_PROPERTY"", prop );"
145795,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntPropertyImpl.java,511,,"        setPropertyValue( getProfile().INVERSE_OF(), ""INVERSE_OF"", prop );"
145796,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntResourceImpl.java,180,,"        setPropertyValue( getProfile().SAME_AS(), ""SAME_AS"", res );"
145797,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntResourceImpl.java,245,,"        setPropertyValue( getProfile().DIFFERENT_FROM(), ""DIFFERENT_FROM"", res );"
145798,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntResourceImpl.java,309,,"        setPropertyValue( getProfile().SEE_ALSO(), ""SEE_ALSO"", res );"
145799,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntResourceImpl.java,377,,"        setPropertyValue( getProfile().IS_DEFINED_BY(), ""IS_DEFINED_BY"", res );"
145800,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntResourceImpl.java,445,,"        checkProfile( getProfile().VERSION_INFO(), ""VERSION_INFO"" );"
145801,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntResourceImpl.java,525,,"        checkProfile( getProfile().LABEL(), ""LABEL"" );"
145802,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntResourceImpl.java,654,,"        checkProfile( getProfile().COMMENT(), ""COMMENT"" );"
145803,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntResourceImpl.java,786,,"        setPropertyValue( RDF.type, ""rdf:type"", cls );"
145804,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntologyImpl.java,107,,"        setPropertyValue( getProfile().IMPORTS(), ""IMPORTS"", res );"
145805,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntologyImpl.java,175,,"        setPropertyValue( getProfile().BACKWARD_COMPATIBLE_WITH(), ""BACKWARD_COMPATIBLE_WITH"", res );"
145806,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntologyImpl.java,245,,"        setPropertyValue( getProfile().PRIOR_VERSION(), ""PRIOR_VERSION"", res );"
145807,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/OntologyImpl.java,314,,"        setPropertyValue( getProfile().INCOMPATIBLE_WITH(), ""INCOMPATIBLE_WITH"", res );"
145808,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/QualifiedRestrictionImpl.java,112,,"        setPropertyValue( getProfile().HAS_CLASS_Q(), ""HAS_CLASS_Q"", cls );"
145809,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/RestrictionImpl.java,106,,"        setPropertyValue( getProfile().ON_PROPERTY(), ""ON_PROPERTY"", prop );"
145810,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ontology/impl/SomeValuesFromRestrictionImpl.java,108,,"        setPropertyValue( getProfile().SOME_VALUES_FROM(), ""SOME_VALUES_FROM"", cls );"
145811,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/rdfxml/xmlinput/impl/RDFXMLParser.java,83,,"            a.setEncoding(""UTF"");"
145812,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/reasoner/rulesys/impl/LPInterpreter.java,305,,"                    if (traceOn) logger.info(""TRIPLE match ("" + tmFrame.goal +"") -> FAIL"");"
145813,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/reasoner/rulesys/impl/LPInterpreter.java,356,,"                    if (traceOn) logger.info(""FAIL "" + clause);"
145814,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/reasoner/rulesys/impl/RuleClauseCode.java,251,,"                    out.println(""GET_CONSTANT "" + args[argi++] + "", A"" + code[p++]);"
145815,./TargetProjects/jena/jena-core/src/main/java/org/apache/jena/ttl/turtle/parser/TurtleParser.java,274,,"    throw new Error(""Missing return statement in function"");"
145816,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/assembler/test/TestAssemblerHelp.java,64,,"        testFindSpecificTypes( """", ""x rdf:type A"", ""Top"" );"
145817,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/assembler/test/TestContentAssembler.java,60,,"        String A = ""<eh:/A> a <eh:/Type>."".replaceAll( "" "", ""\\\\s"" );"
145818,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/assembler/test/TestContentAssembler.java,62,,"        Resource root = resourceInModel( ""x rdf:type ja:Content; x rdf:type ja:LiteralContent; x ja:literalContent '"" + A + ""'; x ja:literalContent '"" + B + ""'"" );"
145819,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/assembler/test/TestContentAssembler.java,94,,"        String source = Testing + ""/schema.n3"";"
145820,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/assembler/test/TestContentAssembler.java,97,,"        assertIsoModels( FileManager.getInternal().loadModelInternal( ""file:"" + source ), c.fill( model( """" ) ) );"
145821,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/assembler/test/TestModelContent.java,62,,"        final Model expected = model( ""_x rdf:value '17'xsd:integer"" );"
145822,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/assembler/test/TestModelExpansion.java,33,,"        Model base = model( ""a R b"" );"
145823,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/assembler/test/TestRuleSetAssembler.java,60,,"        Resource root = resourceInModel( ""x rdf:type ja:RuleSet; x ja:rule '"" + ruleString.replaceAll( "" "", ""\\\\s"" ) + ""'"" );"
145824,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/datatypes/TestDatatypeValues.java,96,,"        Assert.assertEquals(""Compare: ""+lex1+"" and ""+lex2, expected, cmp) ;"
145825,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/datatypes/TestDatatypes.java,108,,"        valid(xsdDuration, ""P1D"") ;"
145826,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,107,,"		graph.add(triple(""S P O""));"
145827,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,181,,"		if (GL.contains(""delete""))"
145828,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,233,,"				graph.delete(triple(""x R y""));"
145829,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,375,,"				""S P O; S2 P2 O2; S3 P3 O3"");"
145830,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,429,,"						g2.contains(x, P, node(""'1'xsd:integer"")));"
145831,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,504,,"		Graph g = graphWith(producer.newInstance(), ""x R y; a P b"");"
145832,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,555,,"			assertTrue(g.contains(triple(""?? P ??"")));"
145833,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,673,,"					graph.contains(triple(""S2 P2 O2"")));"
145834,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,675,,"					graph.contains(triple(""S3 P3 O3"")));"
145835,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,755,,"		assertTrue(""Missing some values"","
145836,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,856,,"			Node chaten = node(""'chat'en""), chatEN = node(""'chat'EN"");"
145837,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,856,,"			Node chaten = node(""'chat'en""), chatEN = node(""'chat'EN"");"
145838,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,1243,,"		testRemove(""S ?? ??"", ""S ?? ??"");"
145839,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,1245,,"		testRemove(""S ?? ??"", ""?? ?? O"");"
145840,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,1415,,"			{ ""x R y; a P b"", ""x R y"", ""a P b"", ""x R y"" },"
145841,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,1668,,"		testLiteralTypingBasedFind(""a P 'simple'"", 1, ""'simple'"", ""'simple'"","
145842,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,1671,,"				""'simple'xsd:string"", true);"
145843,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,1679,,"		testLiteralTypingBasedFind(""a P 'simple'; a P 'simple'xsd:string"", 1,"
145844,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,1687,,"		testLiteralTypingBasedFind(""a P 1"", 1, ""1"", ""1"", false);"
145845,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphContractTest.java,1688,,"		testLiteralTypingBasedFind(""a P '1'xsd:float"", 1, ""'1'xsd:float"","
145846,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphEventManagerContractTest.java,115,,"		L.assertHas(new Object[] { ""add"", mockGraph, SPO });"
145847,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphMakerContractTest.java,214,,"		assertFalse(""no such graph"", graphMaker.hasGraph(""john""));"
145848,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphMakerContractTest.java,214,,"		assertFalse(""no such graph"", graphMaker.hasGraph(""john""));"
145849,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphMakerContractTest.java,215,,"		assertFalse(""no such graph"", graphMaker.hasGraph(""paul""));"
145850,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/GraphMakerContractTest.java,216,,"		assertFalse(""no such graph"", graphMaker.hasGraph(""george""));"
145851,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/TransactionHandlerContractTest.java,75,,"				fail(""Should have thrown UnsupportedOperationException"");"
145852,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/DeltaTest.java,84,,"		Graph x = graphWith(getDeltaTestProducer().newInstance(), ""x R y"");"
145853,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/DeltaTest.java,97,,"		delta.delete(triple(""I like cheese""));"
145854,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/UnionTest.java,82,,"		assertContains(""Union"", ""x R y"", u);"
145855,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/UnionTest.java,87,,"		u.add(triple(""cats eat cheese""));"
145856,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestDelta.java,74,,"        assertIsomorphic(graphWith( ""p S q"" ), delta);"
145857,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestDelta.java,92,,"        delta.delete( triple( ""a T b"" ) ) ;"
145858,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestDelta.java,139,,"        Triple t1 = triple(""s p 1"");"
145859,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestDelta.java,140,,"        Triple t01 = triple(""s p 01"");"
145860,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestDifference.java,46,,"        assertIsomorphic( graphWith( ""x R y"" ), differenceOf( ""x R y"", """" ) );"
145861,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestDifference.java,59,,"        l.add( triple( ""x R z"" ) );"
145862,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestDifference.java,60,,"        assertIsomorphic( graphWith( ""x R y; x R z"" ), diff );"
145863,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestDisjointUnion.java,88,,"        du.delete( triple( ""x R y"" ) );"
145864,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestIntersection.java,46,,"        assertIsomorphic( graphWith( """" ), intersectionOf( ""x R y"", """" ) );"
145865,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestIntersection.java,49,,"        assertIsomorphic( graphWith( ""x R y"" ), intersectionOf( ""x R y; p R q"", ""r A s; x R y"" ) );"
145866,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestIntersection.java,54,,"        Graph r = graphWith( ""p S q"" );"
145867,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestIntersection.java,86,,"        isec.add( triple( ""r A s"" ) );"
145868,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestIntersection.java,94,,"        assertIsomorphic( graphWith( ""p S q; r A s; x R y"" ), r );"
145869,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestMultiUnion.java,66,,"        Graph g0 = graphWith( ""x p y"");"
145870,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestMultiUnion.java,74,,"        Graph g1 = graphWith( ""x p z; z p zz"" );        // disjoint with g0"
145871,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestMultiUnion.java,75,,"        Graph g2 = graphWith( ""x p y; z p a"" );         // intersects with g1"
145872,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestUnion.java,48,,"        assertIsomorphic(graphWith( ""x R y"" ), unionOf( ""x R y"", """" ) );"
145873,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestUnion.java,50,,"        assertIsomorphic(graphWith( ""x R y; x R z"" ), unionOf( ""x R y"", ""x R z"" ) );"
145874,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/compose/test/TestUnion.java,76,,"        Graph r = graphWith( ""x R y; p S q"" );"
145875,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/impl/TripleStoreContractTest.java,70,,"		store.add(triple(""x P y""));"
145876,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/impl/TripleStoreContractTest.java,77,,"				iteratorToSet(store.find(triple(""?? ?? ??""))));"
145877,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/AbstractTestGraph.java,87,,"        assertTrue( g.contains( triple( ""?? P ??"" ) ) );"
145878,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/AbstractTestGraph.java,108,,"        assertFalse( g.contains( triple( ""S P O"" ) ) );"
145879,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/AbstractTestGraph.java,116,,"        Graph g = getGraphWith( ""x R y; a P b"" );"
145880,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/AbstractTestGraph.java,227,,"        g.delete( triple( ""x R y"" ) );"
145881,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/AbstractTestGraph.java,291,,"        Graph items = graphWith( ""pigs might fly; dead can dance"" );"
145882,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/AbstractTestGraph.java,357,,"        testRemove( ""S ?? ??"", ""S ?? ??"" );"
145883,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/AbstractTestGraph.java,359,,"        testRemove( ""S ?? ??"", ""?? ?? O"" );"
145884,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/AbstractTestGraph.java,439,,"        L.assertHas( new Object[] {""add"", g, SPO} );"
145885,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/AbstractTestGraph.java,872,,"        { ""x R y; a P b"", ""x R y"", ""a P b"" },"
145886,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/AbstractTestGraphMaker.java,194,,"        assertFalse( ""no such graph"", gf.hasGraph( ""john"" ) );"
145887,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/AbstractTestGraphMaker.java,194,,"        assertFalse( ""no such graph"", gf.hasGraph( ""john"" ) );"
145888,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/AbstractTestGraphMaker.java,195,,"        assertFalse( ""no such graph"", gf.hasGraph( ""paul"" ) );"
145889,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/AbstractTestGraphMaker.java,196,,"        assertFalse( ""no such graph"", gf.hasGraph( ""george"" ) );"
145890,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/AbstractTestReifier.java,151,,"        ReifierStd.reifyAs( G , N, triple( ""x R y"" ) );"
145891,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/AbstractTestTripleStore.java,49,,"        store.add( triple( ""x P y"" ) );"
145892,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/AbstractTestTripleStore.java,55,,"        assertEquals( tripleSet( ""x P y"" ), iteratorToSet( store.find( triple( ""?? ?? ??"" ) ) ) );"
145893,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestFindLiterals.java,62,,"        result.addTest( aTest( ""a P 'simple'"", 1, ""'simple'"", ""'simple'"" ) );"
145894,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestFindLiterals.java,63,,"        result.addTest( aTest( ""a P 'simple'xsd:string"", 1, ""'simple'"", ""'simple'xsd:string"" ) );"
145895,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestFindLiterals.java,71,,"        result.addTest( aTest( ""a P 1"", 1, ""1"", ""1"" ) );"
145896,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestFindLiterals.java,72,,"        result.addTest( aTest( ""a P '1'xsd:float"", 1, ""'1'xsd:float"", ""'1'xsd:float"" ) );"
145897,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestFindLiterals.java,73,,"        result.addTest( aTest( ""a P '1'xsd:double"", 1, ""'1'xsd:double"", ""'1'xsd:double"" ) );"
145898,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestFindLiterals.java,87,,"        result.addTest( aTest( ""a P 1"", 1, ""'1'xsd:integer"", ""'1'xsd:integer"" ) );"
145899,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestGraphExtract.java,38,,"        testExtract( """", ""x"", ""a R b"" );"
145900,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestLiteralLabelSameValueAs.java,67,,"    @Test public void literalLabel_string_01()     { testSameValueAs(gen(""abc""), gen(""abc""), true) ; }"
145901,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestLiteralLabels.java,99,,"        LiteralLabel A = LiteralLabelFactory.createTypedLiteral(""xyz"") ;"
145902,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestNode.java,103,,"        assertEquals( NodeFactory.createVariable( ""hello"" ), new Node_Variable( ""hello"" ) );"
145903,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestNode.java,255,,"        assertEquals( Node_Variable.variable( ""xxx"" ), Node_Variable.variable( ""xxx"" ) );"
145904,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestNodeToTriplesMap.java,65,,"        ntS.add( triple( ""x P y"" ) );"
145905,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTriple.java,153,,"        testMatches( ""S P O"" );"
145906,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTriple.java,160,,"        testMatches( ""?? P O"", ""Z P O"" );"
145907,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTriple.java,161,,"        testMatches( ""S ?? O"", ""S Q O"" );"
145908,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTriple.java,162,,"        testMatches( ""S P ??"", ""S P oh"" );"
145909,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTriple.java,163,,"        testMatches( ""?? ?? ??"", ""X Y Z"" );"
145910,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTripleField.java,57,,"        assertTrue( Field.fieldSubject.filterOn( node( ""a"" ) ).test( triple( ""a P b"" ) ) );"
145911,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,90,,"        Literal l1 = m.createTypedLiteral(""foo"", typeURI);"
145912,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,230,,"        checkLegalLiteral(""12345"", XSDDatatype.XSDlong, Integer.class, 12345 );"
145913,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,231,,"        checkLegalLiteral(""-12345"", XSDDatatype.XSDlong, Integer.class, -12345 );"
145914,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,232,,"        checkIllegalLiteral(""2.3"", XSDDatatype.XSDlong);"
145915,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,252,,"        checkLegalLiteral(""9223372036854775808"", XSDDatatype.XSDunsignedLong, BigInteger.class, new BigInteger(""9223372036854775808""));"
145916,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,286,,"        checkLegalLiteral(""-9223372036854775808"", XSDDatatype.XSDnegativeInteger, BigInteger.class, new BigInteger(""-9223372036854775808""));"
145917,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,317,,"        Literal l1 = m.createTypedLiteral(""10"", ""http://www.w3.org/2001/XMLSchema#integer"");"
145918,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,356,,"            Calendar testCal = new GregorianCalendar(TimeZone.getTimeZone(""GMT""));"
145919,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,387,,"            assertSameValueAs(""String != plain??"", lString, lPlain);"
145920,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,414,,"        assertDiffer(""float/double/int distinct"", lDouble, lDouble2);"
145921,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,485,,"        doTestDecimalCanonicalize(""0.500"", ""0.5"", BigDecimal.class);"
145922,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,512,,"        assertEquals(""duration value"", 1, ((XSDDuration)l1.getValue()).getYears());"
145923,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,520,,"        assertEquals(""serialization"", ""P1Y2M3DT5H6M7.5S"", l1.getValue().toString());"
145924,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,521,,"        assertTrue(""equality test"", l1.sameValueAs( m.createTypedLiteral(""P1Y2M3DT5H6M7.5S"", XSDDatatype.XSDduration) ) );"
145925,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,529,,"        Literal l1 = m.createTypedLiteral(""P1Y"", XSDDatatype.XSDduration);"
145926,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,552,,"        Literal l1 = m.createTypedLiteral(""1999-05-31T02:09:32Z"", XSDDatatype.XSDdateTime);"
145927,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,554,,"        assertEquals(""dateTime data type"", XSDDatatype.XSDdateTime, l1.getDatatype());"
145928,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,555,,"        assertEquals(""dateTime java type"", XSDDateTime.class, l1.getValue().getClass());"
145929,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,556,,"        assertEquals(""dateTime value"", 1999, xdt.getYears());"
145930,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,671,,"            assertTrue(""Failed to prevent illegal access"", false);"
145931,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,768,,"        assertEquals(""DateTime from date"", XSDDatatype.XSDdateTime, l1.getDatatype());"
145932,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,949,,"        Literal la = m.createTypedLiteral(""GpM7"", XSDDatatype.XSDbase64Binary);"
145933,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,1166,,"        assertSameValueAs(""lexical form does not affect value"", l1, l2);"
145934,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/graph/test/TestTypedLiterals.java,1168,,"        assertTrue(""lexical form affects equality"", ! l1.equals(l2));"
145935,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/irix/AbstractTestIRIx.java,48,,"        provider.strictMode(""http"", true);"
145936,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/irix/AbstractTestIRIx.java,49,,"        provider.strictMode(""urn"",  true);"
145937,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/irix/AbstractTestIRIx.java,50,,"        provider.strictMode(""file"", true);"
145938,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/irix/AbstractTestIRIx.java,51,,"        provider.strictMode(""did"",  true);"
145939,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/irix/TestIRIx.java,122,,"    @Test public void reference_01() { reference(""http://example/"", true); }"
145940,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/irix/TestIRIx.java,124,,"    @Test public void reference_02() { reference(""http://example/abcd"", true); }"
145941,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/irix/TestIRIx.java,139,,"    @Test public void resolve_http_01() { resolve(""http://example/"", ""path"", ""http://example/path""); }"
145942,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/irix/TestIRIx.java,155,,"    @Test public void resolve_file_02() { resolve(""file:///dir/file"", ""a/b/c"", ""file:///dir/a/b/c""); }"
145943,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/irix/TestNormalize.java,37,,"        testNormalize(""http://host/a/b/c?q=1#2"", ""http://host/a/b/c?q=1#2"");"
145944,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/irix/TestResolve.java,36,,"        testResolve(""http://example/dir/"", """", ""http://example/dir/"");"
145945,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/irix/TestResolve.java,56,,"        testResolve(""http://example/dir1/dir2/dir3/dir4"", "".."", ""http://example/dir1/dir2/"");"
145946,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/irix/TestResolve.java,66,,"        testResolve(""http://example/dir1/dir2"", "".."", ""http://example/"");"
145947,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/irix/TestResolve.java,151,,"        testResolve(""http://example/#fragment"", ""path?q=arg"", ""http://example/path?q=arg"");"
145948,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/mem/TripleBunchContractTest.java,130,,"		testingBunch.add(triple(""a P b""));"
145949,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/mem/TripleBunchContractTest.java,131,,"		testingBunch.add(triple(""c Q d""));"
145950,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/mem/test/TestTripleBunch.java,110,,"        b.add( triple( ""c Q d"" ) );"
145951,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,79,,"                    assertEquals( ""Cardinality should be 1"", 1, A.getCardinality( prof.SUB_CLASS_OF() ) );"
145952,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,83,,"                    assertEquals( ""Cardinality should be 2"", 2, A.getCardinality( prof.SUB_CLASS_OF() ) );"
145953,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,188,,"                    assertEquals( ""Size should be 1"", 1, A.getOneOf().size() );"
145954,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,325,,"                    assertEquals( ""cardinality should be 1 "", 1, A.getCardinality( prof.ON_PROPERTY() ));"
145955,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,365,,"                    assertEquals( ""cardinality should be 0 "", 0, A.getCardinality( prof.ALL_VALUES_FROM() ));"
145956,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,390,,"                    assertTrue( ""Restriction should not be some values from gMonth"", !A.hasAllValuesFrom( XSD.gMonth ) );"
145957,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,564,,"                    assertTrue( ""Restriction should not be cardinality 2"", !A.hasCardinality( 2 ) );"
145958,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,570,,"                    assertTrue( ""Restriction should not be cardinality 3"", !A.hasCardinality( 3 ) );"
145959,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,781,,"                    assertTrue( ""enumerated class test not correct"",    a.isEnumeratedClass() );"
145960,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,782,,"                    assertTrue( ""intersection class test not correct"",  !a.isIntersectionClass() );"
145961,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,783,,"                    assertTrue( ""union class test not correct"",         !a.isUnionClass() );"
145962,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,784,,"                    assertTrue( ""complement class test not correct"",    !a.isComplementClass() );"
145963,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,785,,"                    assertTrue( ""restriction test not correct"",         !a.isRestriction() );"
145964,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,962,,"                    assertTrue( ""all values from test not correct"",   a.isAllValuesFromRestriction() );"
145965,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,963,,"                    assertTrue( ""some values from test not correct"",  !a.isSomeValuesFromRestriction() );"
145966,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,964,,"                    assertTrue( ""has value test not correct"",         m_owlLiteLang || !a.isHasValueRestriction() );"
145967,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,965,,"                    assertTrue( ""cardinality test not correct"",       !a.isCardinalityRestriction() );"
145968,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,966,,"                    assertTrue( ""min cardinality test not correct"",   !a.isMinCardinalityRestriction() );"
145969,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestClassExpression.java,967,,"                    assertTrue( ""max cardinality test not correct"",   !a.isMaxCardinalityRestriction() );"
145970,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestFrameView.java,364,,"                new Object[] {noinfA, noinfAnn, noinfUnion1, noinfUnion2, mNoInf.getOntClass(NS+""Joint""),noinfIntersect1,noinfIntersect2}, 2 );"
145971,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestIndividual.java,319,,"            new OntTestCase( ""OntResource.isIndividual 1"", true, true, true ) {"
145972,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestIndividual.java,332,,"                    String NS = ""http://jena.hpl.hp.com/example#"";"
145973,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestIndividual.java,339,,"                        assertFalse( ontClass.getLocalName() + ""should not be an individual"", ontClass.isIndividual() );"
145974,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestListSyntaxCategories.java,56,,"        new DoListTest( ""OWL list ontologies"",  ""file:testing/ontology/owl/list-syntax/test.rdf"",  OntModelSpec.OWL_MEM_TRANS_INF,  1,"
145975,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestListSyntaxCategories.java,122,,"        new DoListTest( ""OWL list functional properties"",  ""file:testing/ontology/owl/list-syntax/test-proptypes.rdf"",  OntModelSpec.OWL_MEM_TRANS_INF,  1,"
145976,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestListSyntaxCategories.java,480,,"        new DoListTest( ""OWL+import list ontologies"",  ""file:testing/ontology/owl/list-syntax/test-with-import.rdf"",  OntModelSpec.OWL_MEM_TRANS_INF,  2,"
145977,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntDocumentManager.java,148,,"        r.addProperty( OntDocManagerVocab.publicURI, m.createResource(""http://example.com/foo"") );"
145978,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntDocumentManager.java,149,,"        r.addProperty( OntDocManagerVocab.altURL, m.createResource(""file:local.rdf"") );"
145979,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntDocumentManager.java,156,,"        OntDocumentManager mgr = new OntDocumentManager( ""ont-policy-test.rdf"" );"
145980,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntDocumentManager.java,159,,"        assertNotNull( ""cache URL for owl should not be null"", mgr.doAltURLMapping( ""http://www.w3.org/2002/07/owl"" ));"
145981,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntDocumentManager.java,333,,"        odm.addModel( ""http://www.w3.org/2002/07/owl#"", m );"
145982,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntDocumentManager.java,390,,"        odm.addIgnoreImport( ""file:testing/ontology/testImport3/c.owl"" );"
145983,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntDocumentManager.java,399,,"        m.read( ""file:testing/ontology/testImport3/a.owl"" );"
145984,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntDocumentManager.java,400,,"        assertEquals( ""Marker count not correct"", 2, countMarkers( m ));"
145985,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntDocumentManager.java,413,,"        assertTrue( ""c should be imported"", m.hasLoadedImport( ""file:testing/ontology/testImport3/c.owl"" ) );"
145986,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntDocumentManager.java,416,,"        assertFalse( ""c should not be imported"", m.hasLoadedImport( ""file:testing/ontology/testImport3/c.owl"" ) );"
145987,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntDocumentManager.java,426,,"        assertTrue( ""b should be imported"", m.hasLoadedImport( ""file:testing/ontology/testImport3/b.owl"" ) );"
145988,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntDocumentManager.java,426,,"        assertTrue( ""b should be imported"", m.hasLoadedImport( ""file:testing/ontology/testImport3/b.owl"" ) );"
145989,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntDocumentManager.java,430,,"        assertFalse( ""b should not be imported"", m.hasLoadedImport( ""file:testing/ontology/testImport3/b.owl"" ) );"
145990,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntModel.java,217,,"        assertEquals( ""Result of get s"", s, m.getOntology( NS + ""s"" ) );"
145991,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntModel.java,218,,"        assertNull( ""result of get q"", m.getOntology( NS+""q"") );"
145992,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntModel.java,219,,"        assertNull( ""result of get r"", m.getOntology( NS+""r""));"
145993,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntModel.java,491,,"        m.read( ""file:testing/ontology/testImport6/a.owl"" );"
145994,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntModel.java,492,,"        assertEquals( ""Marker count not correct"", 4, TestOntDocumentManager.countMarkers( m ) );"
145995,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntModel.java,506,,"        assertTrue( ""b should be imported "", c.contains( ""file:testing/ontology/testImport6/b.owl"" ));"
145996,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntModel.java,507,,"        assertFalse( ""c should not be imported "", c.contains( ""file:testing/ontology/testImport6/c.owl"" ));"
145997,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntModel.java,525,,"        OntProperty ontp = m.createOntProperty( NS + ""ontp"" );"
145998,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntModel.java,526,,"        Property rdfp = m.createProperty( NS + ""rdfp"" );"
145999,./TargetProjects/jena/jena-core/src/test/java/org/apache/jena/ontology/impl/TestOntModel.java,758,,"        m.read( base0, ""RDF/XML"" );"
