124000,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/cache/store/CacheStoreSessionListenerLifecycleSelfTest.java,199,,"            ""cache-0 1 SESSION START cache-0"","
124001,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/cache/store/CacheStoreSessionListenerLifecycleSelfTest.java,200,,"            ""cache-0 2 SESSION START cache-0"","
124002,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/cache/store/CacheStoreSessionListenerLifecycleSelfTest.java,201,,"            ""cache-0 1 SESSION END cache-0"","
124003,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/cache/store/CacheStoreSessionListenerLifecycleSelfTest.java,202,,"            ""cache-0 2 SESSION END cache-0"","
124004,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/cache/store/CacheStoreSessionListenerReadWriteThroughDisabledAbstractTest.java,130,,"            cache.put(r.nextInt(), ""test-value"");"
124005,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/cache/store/jdbc/CacheJdbcPojoStoreAbstractSelfTest.java,205,,"            new JdbcTypeField(Types.VARCHAR, escape ? ""NAME"" : ""Name"", String.class, ""name""),"
124006,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/cache/store/jdbc/CacheJdbcPojoStoreTest.java,88,,"        storeTypes[0].setDatabaseSchema(""PUBLIC"");"
124007,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/cache/store/jdbc/CacheJdbcPojoStoreTest.java,96,,"            new JdbcTypeField(Types.VARCHAR, ""NAME"", String.class, ""name""),"
124008,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/cache/store/jdbc/CacheJdbcPojoStoreTest.java,131,,"        storeTypes[3].setKeyFields(new JdbcTypeField(Types.TIMESTAMP, ""KEY"", Timestamp.class, null));"
124009,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/cache/store/jdbc/CacheJdbcPojoStoreTest.java,134,,"        storeTypes[3].setValueFields(new JdbcTypeField(Types.INTEGER, ""VAL"", Integer.class, null));"
124010,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/cache/store/jdbc/CacheJdbcPojoStoreTest.java,233,,"        stmt.executeUpdate(""CREATE TABLE IF NOT EXISTS "" +"
124011,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/cache/store/jdbc/CacheJdbcPojoWriteBehindStoreWithCoalescingTest.java,119,,"        type.setCacheName(""TEST_CACHE"");"
124012,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/cache/store/jdbc/CacheJdbcPojoWriteBehindStoreWithCoalescingTest.java,133,,"            new JdbcTypeField(java.sql.Types.DATE, ""VALUE3"", java.sql.Date.class, ""value3"")"
124013,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/cache/store/jdbc/CacheJdbcPojoWriteBehindStoreWithCoalescingTest.java,461,,"                            TestPojo next = new TestPojo(""ORIGIN"" + i, i, new java.sql.Date(new java.util.Date().getTime()));"
124014,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/cache/store/jdbc/CacheJdbcStoreAbstractMultithreadedSelfTest.java,199,,"                        cache.put(new OrganizationKey(id), new Organization(id, ""Name"" + id, ""City"" + id));"
124015,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/cache/store/jdbc/GridCacheJdbcBlobStoreMultithreadedSelfTest.java,124,,"                    cache.put(rnd.nextInt(1000), ""value"");"
124016,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/FunctionalTest.java,557,,"            assertEquals(""1"", cache.getAndPut(1, ""1.1""));"
124017,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/FunctionalTest.java,604,,"            assertFalse(cache.replace(101, ""101""));"
124018,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/FunctionalTest.java,683,,"                    .setName(""cache"")"
124019,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/FunctionalTest.java,686,,"            cache.put(0, ""value0"");"
124020,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/FunctionalTest.java,697,,"                        cache.put(0, ""value2"");"
124021,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/FunctionalTest.java,751,,"                cache.put(0, ""value1"");"
124022,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/FunctionalTest.java,967,,"                    cache.put(0, ""value8"");"
124023,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/FunctionalTest.java,973,,"                        cache1.put(1, ""value9"");"
124024,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/FunctionalTest.java,1002,,"                assertEquals(""value13"", cache.getAndPut(4, ""value14""));"
124025,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/FunctionalTest.java,1040,,"                cache.put(0, ""value18"");"
124026,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/FunctionalTest.java,1236,,"            try (ClientTransaction tx = client.transactions().withLabel(""label"").txStart()) {"
124027,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/IgniteBinaryTest.java,57,,"        Person val = new Person(key, ""Joe"");"
124028,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/IgniteBinaryTest.java,173,,"                BinaryObject val1 = builder.setField(""Name"", ""Person 1"").build();"
124029,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/ReliabilityTest.java,148,,"            ClientCache<Integer, Integer> cache = client.createCache(""cache"");"
124030,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/SslParametersTest.java,100,,"            ""TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"","
124031,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/SslParametersTest.java,101,,"            ""TLS_RSA_WITH_AES_128_GCM_SHA256"","
124032,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/SslParametersTest.java,102,,"            ""TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"""
124033,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/SslParametersTest.java,186,,"            ""TLSv1.1"","
124034,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/SslParametersTest.java,187,,"            ""SSLv3"""
124035,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/client/SslParametersTest.java,196,,"                ""TLSv1.2"""
124036,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/ClassSetTest.java,36,,"        clsSet.add(""org.apache.ignite.Ignite"");"
124037,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/ClassSetTest.java,39,,"        assertFalse(clsSet.contains(""org.apache.ignite.NotIgnite""));"
124038,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/ClusterGroupHostsSelfTest.java,50,,"        Collection<String> hostNames = Arrays.asList(""h_1"", ""h_2"", ""h_3"");"
124039,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/ClusterGroupSelfTest.java,143,,"        ClusterGroup emptyGrp = cluster.forAttribute(""nonExistent"", ""val"");"
124040,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/ClusterGroupSelfTest.java,346,,"            ignite.cluster().forCacheNodes(""cache"" + rnd.nextInt(16)).nodes();"
124041,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/ClusterNodeMetricsSelfTest.java,371,,"        assertEquals(srvNodes, helperCluster.nodeIdsForAttribute(ATTR_CLIENT_MODE, ""false"", true, true));"
124042,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/ConsistentIdImplicitlyExplicitlyTest.java,119,,"        info(""Consistent ID: "" + ignite.cluster().localNode().consistentId());"
124043,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridCacheHashMapPutAllWarningsTest.java,81,,"                if (s.contains(""deadlock""))"
124044,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridCacheHashMapPutAllWarningsTest.java,92,,"        m.put(1, ""foo"");"
124045,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridCacheHashMapPutAllWarningsTest.java,93,,"        m.put(2, ""bar"");"
124046,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridCacheHashMapPutAllWarningsTest.java,147,,"            assertFalse(message.contains(""operation on cache""));"
124047,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridContinuousJobAnnotationSelfTest.java,164,,"            X.println(""Constructing TestJob [this="" + this + "", identity="" + System.identityHashCode(this) + ""]"");"
124048,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridContinuousJobAnnotationSelfTest.java,172,,"                "", flag="" + flag + ""]"");"
124049,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridContinuousTaskSelfTest.java,274,,"    @SuppressWarnings({""PublicInnerClass""})"
124050,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridDeploymentSelfTest.java,123,,"            assert depSpi.getRegisterCount() == 1 : ""Invalid deploy count: "" + depSpi.getRegisterCount();"
124051,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridDeploymentSelfTest.java,124,,"            assert depSpi.getUnregisterCount() == 0 : ""Invalid undeploy count: "" + depSpi.getUnregisterCount();"
124052,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridDeploymentSelfTest.java,251,,"            assert ignite.compute().localTasks().get(""GridDeploymentTestTask"") != null;"
124053,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridEventStorageCheckAllEventsSelfTest.java,133,,"            "", evts="" + evts + ']';"
124054,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridJobContextSelfTest.java,86,,"                        jobCtx.setAttribute(""nodeId"", locNodeId);"
124055,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridMBeansTest.java,69,,"        checkBean(""Thread Pools"", ""GridExecutionExecutor"", ""Terminated"", false);"
124056,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridMBeansTest.java,69,,"        checkBean(""Thread Pools"", ""GridExecutionExecutor"", ""Terminated"", false);"
124057,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridMultipleSpisSelfTest.java,86,,"        GridTestFailoverSpi fail1 = new GridTestFailoverSpi(""fail2"");"
124058,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridMultipleSpisSelfTest.java,92,,"        GridTestLoadBalancingSpi load1 = new GridTestLoadBalancingSpi(""load2"");"
124059,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridMultipleSpisSelfTest.java,98,,"        GridTestCheckpointSpi cp1 = new GridTestCheckpointSpi(""cp2"");"
124060,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridMultipleVersionsDeploymentSelfTest.java,114,,"                Collections.singletonMap(""testResource"", ""1""),"
124061,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridMultipleVersionsDeploymentSelfTest.java,133,,"            ComputeTaskFuture fut = executeAsync(ignite.compute(), ""GridDeploymentTestTask"", null);"
124062,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridNodeMetricsLogSelfTest.java,162,,"            assertTrue(max + "" is less then "" + init + "": "" + subj, max >= init);"
124063,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridRuntimeExceptionSelfTest.java,104,,"            info(""Got expected grid exception: "" + e);"
124064,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridStartStopSelfTest.java,167,,"            assert e instanceof IllegalStateException : ""Wrong exception type."";"
124065,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridStopWithWaitSelfTest.java,200,,"            ses.setAttribute(""fail"", true);"
124066,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridTaskContinuousMapperSelfTest.java,97,,"    @SuppressWarnings({""PublicInnerClass""})"
124067,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridTaskContinuousMapperSelfTest.java,192,,"                    log.info(""Expected exception: "" + e);"
124068,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridTaskExecutionContextSelfTest.java,73,,"        assert ""name1"".equals(g.compute().withName(""name1"").call(f));"
124069,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridTaskExecutionContextSelfTest.java,74,,"        assert ""name2"".equals(g.compute().withName(""name2"").call(f));"
124070,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridTaskExecutionContextSelfTest.java,91,,"                throw new ComputeExecutionRejectedException(""Expected error."");"
124071,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/GridTopicExternalizableSelfTest.java,53,,"            info(""Test GridTopic externalization [marshaller="" + marsh + ']');"
124072,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientFailuresTest.java,98,,"        client00.getOrCreateCache(new CacheConfiguration<>(""cache0""));"
124073,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientReconnectAtomicsTest.java,264,,"        IgniteAtomicReference<String> clientAtomicRef = client.atomicReference(""atomicRef"", ""1st value"", true);"
124074,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientReconnectAtomicsTest.java,267,,"        assertTrue(clientAtomicRef.compareAndSet(""1st value"", ""2st value""));"
124075,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientReconnectAtomicsTest.java,273,,"        assertTrue(srvAtomicRef.compareAndSet(""2st value"", ""3st value""));"
124076,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientReconnectAtomicsTest.java,279,,"                assertTrue(srvAtomicRef.compareAndSet(""3st value"", ""4st value""));"
124077,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientReconnectAtomicsTest.java,285,,"        assertTrue(clientAtomicRef.compareAndSet(""4st value"", ""5st value""));"
124078,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientReconnectAtomicsTest.java,307,,"            client.atomicReference(""atomicRefRemoved"", ""1st value"", true);"
124079,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientReconnectAtomicsTest.java,470,,"        final IgniteAtomicStamped clientAtomicStamped = client.atomicStamped(""atomicStampedRemoved"", 0, 0, true);"
124080,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientReconnectAtomicsTest.java,623,,"        final IgniteAtomicLong clientAtomicLong = client.atomicLong(""atomicLongRmv"", 0, true);"
124081,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientReconnectAtomicsWithLostPartitionsTest.java,243,,"        assertEquals(""Unexpected initial value."", 1L, atomic.get());"
124082,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientReconnectCacheTest.java,210,,"                    info(""Disconnected: "" + evt);"
124083,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientReconnectCacheTest.java,224,,"                                log.info(""Expected exception: "" + e);"
124084,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientReconnectCacheTest.java,242,,"                    info(""Reconnected: "" + evt);"
124085,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientReconnectServicesTest.java,101,,"        srvServices.deployClusterSingleton(""testServiceRemove"", new TestServiceImpl());"
124086,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientRejoinTest.java,88,,"        if (gridName.contains(""client"")) {"
124087,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientRejoinTest.java,360,,"                throw new SocketException(""Test discovery exception"");"
124088,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteExplicitImplicitDeploymentSelfTest.java,124,,"                assertEquals(""Invalid res1: "", expected, (int)res1);"
124089,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteExplicitImplicitDeploymentSelfTest.java,177,,"                Collections.singletonMap(""testResource"", ""1""),"
124090,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/IgniteExplicitImplicitDeploymentSelfTest.java,201,,"                assert res == 2 : ""Invalid response: "" + res;"
124091,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/TransactionsMXBeanImplTest.java,136,,"    @WithSystemProperty(key = IGNITE_LONG_OPERATIONS_DUMP_TIMEOUT, value = ""100"")"
124092,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryBasicIdMapperSelfTest.java,38,,"        assertEquals((GridBinaryTestClass1.class.getName() + ""$InnerClass"").toLowerCase().hashCode(),"
124093,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryClassLoaderMultiJvmTest.java,77,,"                new CacheConfiguration(""SomeCache"")"
124094,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryClassLoaderMultiJvmTest.java,80,,"                new CacheConfiguration(""SomeCacheEnum"")"
124095,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryClassLoaderMultiJvmTest.java,83,,"                new CacheConfiguration(""OrganizationCache"")"
124096,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryClassLoaderMultiJvmTest.java,96,,"            new URL(GridTestProperties.getProperty(""p2p.uri.cls""))});"
124097,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryClassLoaderTest.java,67,,"                new CacheConfiguration(""SomeCache"")"
124098,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryClassLoaderTest.java,70,,"                new CacheConfiguration(""SomeCacheEnum"")"
124099,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryClassLoaderTest.java,73,,"                new CacheConfiguration(""OrganizationCache"")"
124100,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryEnumsSelfTest.java,301,,"        BinaryObject obj = node1.binary().builder(EnumHolder.class.getName()).setField(""val"", EnumType.ONE).build();"
124101,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryFieldExtractionSelfTest.java,119,,"        BinaryFieldEx field = (BinaryFieldEx)binObj.type().field(""time"");"
124102,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,470,,"        String[] arr = new String[] {""str1"", ""str2"", ""str3""};"
124103,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,470,,"        String[] arr = new String[] {""str1"", ""str2"", ""str3""};"
124104,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,470,,"        String[] arr = new String[] {""str1"", ""str2"", ""str3""};"
124105,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,568,,"    @SuppressWarnings(""unchecked"")"
124106,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,686,,"        assertTrue(po.hasField(""bool""));"
124107,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,753,,"        assertEquals(date, po1.field(""date""));"
124108,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,792,,"        assertEquals(obj.str, po.field(""str""));"
124109,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,793,,"        assertEquals(obj.uuid, po.field(""uuid""));"
124110,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,797,,"        assertArrayEquals(obj.bArr, (byte[])po.field(""bArr""));"
124111,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,798,,"        assertArrayEquals(obj.sArr, (short[])po.field(""sArr""));"
124112,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,799,,"        assertArrayEquals(obj.iArr, (int[])po.field(""iArr""));"
124113,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,800,,"        assertArrayEquals(obj.lArr, (long[])po.field(""lArr""));"
124114,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,801,,"        assertArrayEquals(obj.fArr, (float[])po.field(""fArr""), 0);"
124115,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,802,,"        assertArrayEquals(obj.dArr, (double[])po.field(""dArr""), 0);"
124116,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,803,,"        assertArrayEquals(obj.cArr, (char[])po.field(""cArr""));"
124117,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,804,,"        assertBooleanArrayEquals(obj.boolArr, (boolean[])po.field(""boolArr""));"
124118,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,805,,"        assertArrayEquals(obj.strArr, (String[])po.field(""strArr""));"
124119,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,806,,"        assertArrayEquals(obj.uuidArr, (UUID[])po.field(""uuidArr""));"
124120,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,807,,"        assertArrayEquals(obj.dateArr, (Date[])po.field(""dateArr""));"
124121,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,808,,"        assertArrayEquals(obj.objArr, (Object[])po.field(""objArr""));"
124122,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,809,,"        assertEquals(obj.col, po.field(""col""));"
124123,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,810,,"        assertEquals(obj.map, po.field(""map""));"
124124,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,811,,"        assertEquals(new Integer(obj.enumVal.ordinal()), new Integer(((BinaryObject)po.field(""enumVal"")).enumOrdinal()));"
124125,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,812,,"        assertArrayEquals(ordinals(obj.enumArr), ordinals((BinaryObject[])po.field(""enumArr"")));"
124126,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,813,,"        assertNull(po.field(""unknown""));"
124127,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,815,,"        BinaryObject innerPo = po.field(""inner"");"
124128,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,876,,"        assertEquals(obj.bool, (boolean)po.field(""_bool""));"
124129,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,877,,"        assertEquals(obj.str, po.field(""_str""));"
124130,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,878,,"        assertEquals(obj.uuid, po.field(""_uuid""));"
124131,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,879,,"        assertEquals(obj.date, po.field(""_date""));"
124132,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,880,,"        assertEquals(obj.ts, po.field(""_ts""));"
124133,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,881,,"        assertArrayEquals(obj.bArr, (byte[])po.field(""_bArr""));"
124134,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,882,,"        assertArrayEquals(obj.sArr, (short[])po.field(""_sArr""));"
124135,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,883,,"        assertArrayEquals(obj.iArr, (int[])po.field(""_iArr""));"
124136,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,884,,"        assertArrayEquals(obj.lArr, (long[])po.field(""_lArr""));"
124137,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,885,,"        assertArrayEquals(obj.fArr, (float[])po.field(""_fArr""), 0);"
124138,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,886,,"        assertArrayEquals(obj.dArr, (double[])po.field(""_dArr""), 0);"
124139,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,887,,"        assertArrayEquals(obj.cArr, (char[])po.field(""_cArr""));"
124140,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,888,,"        assertBooleanArrayEquals(obj.boolArr, (boolean[])po.field(""_boolArr""));"
124141,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,889,,"        assertArrayEquals(obj.strArr, (String[])po.field(""_strArr""));"
124142,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,890,,"        assertArrayEquals(obj.uuidArr, (UUID[])po.field(""_uuidArr""));"
124143,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,891,,"        assertArrayEquals(obj.dateArr, (Date[])po.field(""_dateArr""));"
124144,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,892,,"        assertArrayEquals(obj.objArr, (Object[])po.field(""_objArr""));"
124145,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,893,,"        assertEquals(obj.col, po.field(""_col""));"
124146,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,894,,"        assertEquals(obj.map, po.field(""_map""));"
124147,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,895,,"        assertEquals(new Integer(obj.enumVal.ordinal()), new Integer(((BinaryObject)po.field(""_enumVal"")).enumOrdinal()));"
124148,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,896,,"        assertArrayEquals(ordinals(obj.enumArr), ordinals((BinaryObject[])po.field(""_enumArr"")));"
124149,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,899,,"        BinaryObject simplePo = po.field(""_simple"");"
124150,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,937,,"        BinaryObject binaryPo = po.field(""_binary"");"
124151,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,982,,"        obj.queue = new TestQueue(""test"");"
124152,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,1016,,"        assertEquals(obj.val, ((BinaryObject)po.field(""val"")).deserialize());"
124153,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,1316,,"                if (""val1"".equals(fieldName))"
124154,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,1318,,"                else if (""val2"".equals(fieldName))"
124155,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,1321,,"                assert false : ""Unknown field: "" + fieldName;"
124156,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,1483,,"        assertEquals(null, po1.field(""val3""));"
124157,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,1688,,"        BinaryTypeConfiguration customType2 = new BinaryTypeConfiguration(""org.gridgain.NonExistentClass1"");"
124158,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,1700,,"        BinaryTypeConfiguration customType3 = new BinaryTypeConfiguration(""NonExistentClass2"");"
124159,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,1712,,"        BinaryTypeConfiguration customType4 = new BinaryTypeConfiguration(""NonExistentClass0"");"
124160,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,1727,,"                new BinaryTypeConfiguration(""org.gridgain.NonExistentClass3""),"
124161,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,1728,,"                new BinaryTypeConfiguration(""NonExistentClass4""),"
124162,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,1738,,"        assertEquals(""notconfiguredclass"".hashCode(), ctx.typeId(""NotConfiguredClass""));"
124163,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,1738,,"        assertEquals(""notconfiguredclass"".hashCode(), ctx.typeId(""NotConfiguredClass""));"
124164,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,1739,,"        assertEquals(""key"".hashCode(), ctx.typeId(Key.class.getName()));"
124165,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,1747,,"        assertEquals(""nonexistentclass0"".hashCode(), ctx.typeId(""NonExistentClass0""));"
124166,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,2592,,"        map.put(""str"", ""str555"");"
124167,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,2824,,"        assertArrayEquals(obj1.valArr, portObj.<BigDecimal[]>field(""valArr""));"
124168,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,4125,,"        outer.strArr = new String[] {""str10"", ""str20"", ""str30""};"
124169,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,4136,,"        outer.col.add(""str4"");"
124170,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,4137,,"        outer.col.add(""str5"");"
124171,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryMarshallerSelfTest.java,4138,,"        outer.col.add(""str6"");"
124172,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,234,,"        mutInner.setField(""foo"", mutInner);"
124173,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,986,,"        mutableObj.setField(""xx567"", ""a"");"
124174,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,1055,,"        builder.setField(""dateField"", null);"
124175,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,1057,,"        builder.setField(""objectField"", null, Integer.class);"
124176,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,1069,,"            assertTrue(ex.getMessage().startsWith(""Wrong value has been set""));"
124177,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,1271,,"            new GridBinaryTestClasses.Address(""Saint-Petersburg"", ""Torzhkovskya"", 1, 53), ""occupation""));"
124178,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,1271,,"            new GridBinaryTestClasses.Address(""Saint-Petersburg"", ""Torzhkovskya"", 1, 53), ""occupation""));"
124179,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,1271,,"            new GridBinaryTestClasses.Address(""Saint-Petersburg"", ""Torzhkovskya"", 1, 53), ""occupation""));"
124180,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,1541,,"        hashMap.put(""key"", ""val"");"
124181,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,1541,,"        hashMap.put(""key"", ""val"");"
124182,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,1551,,"        root.setField(""linkedHashSet"", linkedHashSet);"
124183,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,1609,,"        BinaryObject extObj = builder.setField(""extVal"", exp).setField(""extArr"", expArr).build();"
124184,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,1609,,"        BinaryObject extObj = builder.setField(""extVal"", exp).setField(""extArr"", expArr).build();"
124185,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,1643,,"                .setField(""testEnumA"", TestEnum.A)"
124186,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,1644,,"                .setField(""testEnumB"", TestEnum.B)"
124187,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,1645,,"                .setField(""testEnumArr"", expArr)"
124188,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderAdditionalSelfTest.java,1778,,"        builder.setField(""f1"", ""val1"");"
124189,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderDefaultMappersSelfTest.java,130,,"        BinaryObjectBuilder builder = builder(""Class"");"
124190,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderDefaultMappersSelfTest.java,132,,"        builder.setField(""objField"", (Object)null);"
124191,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderDefaultMappersSelfTest.java,134,,"        builder.setField(""otherField"", ""value"");"
124192,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderDefaultMappersSelfTest.java,134,,"        builder.setField(""otherField"", ""value"");"
124193,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderDefaultMappersSelfTest.java,195,,"        builder.setField(""intField"", 1);"
124194,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderDefaultMappersSelfTest.java,331,,"        builder.setField(""stringField"", ""str"");"
124195,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderDefaultMappersSelfTest.java,371,,"        builder.setField(""uuidField"", uuid);"
124196,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderDefaultMappersSelfTest.java,388,,"        builder.setField(""byteArrayField"", new byte[] {1, 2, 3});"
124197,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderDefaultMappersSelfTest.java,611,,"        builder.setField(""objectField"", new Value(1));"
124198,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderDefaultMappersSelfTest.java,712,,"        builder.setField(""iArr"", new int[] {1, 2, 3});"
124199,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderDefaultMappersSelfTest.java,713,,"        builder.setField(""obj"", new Key(1));"
124200,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderDefaultMappersSelfTest.java,714,,"        builder.setField(""col"", Arrays.asList(new Value(1), new Value(2)), Collection.class);"
124201,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectBuilderDefaultMappersSelfTest.java,847,,"        BinaryObjectBuilder builder = builder(""org.test.MetaTest"");"
124202,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectToStringTest.java,71,,"        assertStringFormMatches(new TestContainer(newExtInstance1()), failedStrPattern(""ExternalTestClass1""));"
124203,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectToStringTest.java,72,,"        assertStringFormMatches(new TestContainer(newExtInstance2()), failedStrPattern(""ExternalTestClass2""));"
124204,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryObjectTypeCompatibilityTest.java,62,,"        bldr.setField(""objField"", new Object());"
124205,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryTreeSelfTest.java,135,,"    @SuppressWarnings(""unchecked"")"
124206,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridBinaryWildcardsSelfTest.java,86,,"            new BinaryTypeConfiguration(""org.apache.ignite.internal.binary.test.*""),"
124207,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridBinaryWildcardsSelfTest.java,87,,"            new BinaryTypeConfiguration(""unknown.*"")"
124208,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridBinaryWildcardsSelfTest.java,92,,"        ConcurrentMap<Integer, BinaryInternalMapper> types = U.field(ctx, ""typeId2Mapper"");"
124209,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridBinaryWildcardsSelfTest.java,128,,"        Map<String, org.apache.ignite.internal.binary.BinaryInternalMapper> typeMappers = U.field(ctx, ""cls2Mappers"");"
124210,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridDefaultBinaryMappersBinaryMetaDataSelfTest.java,114,,"                assertTrue(fields.contains(""intVal""));"
124211,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridDefaultBinaryMappersBinaryMetaDataSelfTest.java,115,,"                assertTrue(fields.contains(""strVal""));"
124212,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridDefaultBinaryMappersBinaryMetaDataSelfTest.java,116,,"                assertTrue(fields.contains(""arrVal""));"
124213,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridDefaultBinaryMappersBinaryMetaDataSelfTest.java,117,,"                assertTrue(fields.contains(""obj1Val""));"
124214,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridDefaultBinaryMappersBinaryMetaDataSelfTest.java,118,,"                assertTrue(fields.contains(""obj2Val""));"
124215,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridDefaultBinaryMappersBinaryMetaDataSelfTest.java,119,,"                assertTrue(fields.contains(""decVal""));"
124216,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridDefaultBinaryMappersBinaryMetaDataSelfTest.java,120,,"                assertTrue(fields.contains(""decArrVal""));"
124217,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridDefaultBinaryMappersBinaryMetaDataSelfTest.java,125,,"                assertEquals(""Object"", meta.fieldTypeName(""obj1Val""));"
124218,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridDefaultBinaryMappersBinaryMetaDataSelfTest.java,127,,"                assertEquals(""decimal"", meta.fieldTypeName(""decVal""));"
124219,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridDefaultBinaryMappersBinaryMetaDataSelfTest.java,128,,"                assertEquals(""decimal[]"", meta.fieldTypeName(""decArrVal""));"
124220,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridDefaultBinaryMappersBinaryMetaDataSelfTest.java,135,,"                assertTrue(fields.contains(""boolVal""));"
124221,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridDefaultBinaryMappersBinaryMetaDataSelfTest.java,136,,"                assertTrue(fields.contains(""dateVal""));"
124222,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridDefaultBinaryMappersBinaryMetaDataSelfTest.java,137,,"                assertTrue(fields.contains(""uuidArrVal""));"
124223,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridDefaultBinaryMappersBinaryMetaDataSelfTest.java,138,,"                assertTrue(fields.contains(""objVal""));"
124224,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/binary/GridDefaultBinaryMappersBinaryMetaDataSelfTest.java,139,,"                assertTrue(fields.contains(""mapVal""));"
124225,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/client/thin/ReliableChannelTest.java,60,,"    private final String[] dfltAddrs = new String[]{""127.0.0.1:10800"", ""127.0.0.1:10801"", ""127.0.0.1:10802""};"
124226,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/client/thin/ReliableChannelTest.java,60,,"    private final String[] dfltAddrs = new String[]{""127.0.0.1:10800"", ""127.0.0.1:10801"", ""127.0.0.1:10802""};"
124227,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/client/thin/ReliableChannelTest.java,60,,"    private final String[] dfltAddrs = new String[]{""127.0.0.1:10800"", ""127.0.0.1:10801"", ""127.0.0.1:10802""};"
124228,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/client/thin/ReliableChannelTest.java,84,,"            .nextAddresesResponse(""127.0.0.1:10803"", ""127.0.0.1:10804"", ""127.0.0.1:10805"")"
124229,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/client/thin/ReliableChannelTest.java,84,,"            .nextAddresesResponse(""127.0.0.1:10803"", ""127.0.0.1:10804"", ""127.0.0.1:10805"")"
124230,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/client/thin/ReliableChannelTest.java,85,,"            .nextAddresesResponse(""127.0.0.1:10803"", ""127.0.0.1:10804"", ""127.0.0.1:10806"")"
124231,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/cluster/IgniteClusterIdTagTest.java,121,,"        IgniteEx cl0 = startGrid(""client0"");"
124232,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/cluster/IgniteClusterIdTagTest.java,260,,"            fail(""Expected exception has not been thrown."");"
124233,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/managers/IgniteDiagnosticMessagesTest.java,225,,"            assertTrue(log.contains(""General node info [id="" + id0));"
124234,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/managers/checkpoint/GridCheckpointManagerAbstractSelfTest.java,453,,"                throw new IgniteException(""Thread has been interrupted."", e);"
124235,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/managers/communication/GridIoManagerFileTransmissionSelfTest.java,307,,"        File fileToSend = createFileRandomData(""testFile"", fileSizeBytes);"
124236,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/managers/communication/GridIoManagerSelfTest.java,93,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-12661"")"
124237,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/marshaller/optimized/OptimizedMarshallerSerialPersistentFieldsSelfTest.java,57,,"            new ObjectStreamField(""field1"", Integer.TYPE),"
124238,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/marshaller/optimized/OptimizedMarshallerSerialPersistentFieldsSelfTest.java,58,,"            new ObjectStreamField(""field2"", Integer.TYPE)"
124239,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/marshaller/optimized/OptimizedMarshallerTest.java,466,,"    @SuppressWarnings( {""PublicField"", ""TransientFieldInNonSerializableClass"", ""FieldMayBeStatic""})"
124240,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/marshaller/optimized/OptimizedMarshallerTest.java,466,,"    @SuppressWarnings( {""PublicField"", ""TransientFieldInNonSerializableClass"", ""FieldMayBeStatic""})"
124241,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/marshaller/optimized/OptimizedObjectStreamSelfTest.java,409,,"        String[] strArr = {""str1"", ""str2""};"
124242,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/marshaller/optimized/OptimizedObjectStreamSelfTest.java,592,,"        WriteReadTestObject obj = marshalUnmarshal(new WriteReadTestObject(100, ""str""));"
124243,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/marshaller/optimized/OptimizedObjectStreamSelfTest.java,595,,"        assertEquals(""Optional data"", obj.str);"
124244,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/CacheMetricsAddRemoveTest.java,83,,"                    new DataRegionConfiguration().setName(""persisted"").setPersistenceEnabled(true)));"
124245,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/CacheMetricsAddRemoveTest.java,92,,"        startClientGrid(getConfiguration(""client""));"
124246,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/CacheMetricsAddRemoveTest.java,114,,"        String cachePrefix = cacheMetricsRegistryName(""other-cache"", false);"
124247,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/CacheMetricsAddRemoveTest.java,144,,"        String cachePrefix2 = cacheMetricsRegistryName(""other-cache2"", false);"
124248,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/JmxExporterSpiTest.java,188,,"        assertTrue(res.contains(metricName(""memory"", ""heap"", ""init"")));"
124249,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/JmxExporterSpiTest.java,258,,"        assertEquals(42L, bean1.getAttribute(""test""));"
124250,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/JmxExporterSpiTest.java,281,,"            cacheNames.remove(row.get(""cacheName""));"
124251,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/JmxExporterSpiTest.java,302,,"            grpNames.remove(row.get(""cacheGroupName""));"
124252,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/JmxExporterSpiTest.java,325,,"        assertEquals(srvcCfg.getName(), sysView.get(""name""));"
124253,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/JmxExporterSpiTest.java,359,,"        assertTrue(t.get(""taskName"").toString().startsWith(getClass().getName()));"
124254,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/JmxExporterSpiTest.java,639,,"            assertTrue((boolean)txv.get(""local""));"
124255,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/JmxExporterSpiTest.java,644,,"            assertTrue(((long)txv.get(""startTime"")) <= System.currentTimeMillis());"
124256,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/JmxExporterSpiTest.java,704,,"            new CacheConfiguration<Integer, Integer>(""cache1"")"
124257,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/JmxExporterSpiTest.java,705,,"                .setGroupName(""group1""));"
124258,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/JmxExporterSpiTest.java,771,,"            IgniteCache<Integer, Integer> cache2 = client2.createCache(""cache2"");"
124259,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/JmxExporterSpiTest.java,1097,,"            if (row.get(""name"").equals(name) && val.equals(row.get(""value"")))"
124260,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/MetricsConfigurationTest.java,187,,"            mreg.hitRateMetric(HITRATE_NAME, ""test"", 10000, 5);"
124261,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/MetricsConfigurationTest.java,237,,"            HistogramMetricImpl getTime = g0.context().metric().registry(cacheRegName).findMetric(""GetTime"");"
124262,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/MetricsSelfTest.java,79,,"        AtomicLongMetric l = mreg.longMetric(""ltest"", ""test"");"
124263,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/MetricsSelfTest.java,314,,"        AtomicLongMetric cntr = mreg.longMetric(""my.name"", null);"
124264,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/SystemViewComputeJobTest.java,97,,"        cache = server.createCache(""test-cache"");"
124265,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/SystemViewComputeJobTest.java,381,,"        client.compute().withName(""cancel-task"").executeAsync(new ComputeTask<Object, Object>() {"
124266,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/SystemViewSelfTest.java,259,,"                g.createCache(""test-cache"");"
124267,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/SystemViewSelfTest.java,638,,"                .setUserAttributes(F.asMap(""name"", ""val0"")));"
124268,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/SystemViewSelfTest.java,876,,"                new CacheConfiguration<Integer, Integer>(""cache1"")"
124269,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/SystemViewSelfTest.java,877,,"                    .setGroupName(""group1""));"
124270,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/SystemViewSelfTest.java,946,,"            IgniteCache<Integer, Integer> cache2 = client2.createCache(""cache2"");"
124271,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/SystemViewSelfTest.java,1060,,"                new AtomicConfiguration().setBackups(1).setGroupName(""my-group""), 43, true);"
124272,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/SystemViewSelfTest.java,1181,,"            IgniteAtomicReference<String> l1 = g0.atomicReference(""ref-1"", ""str1"", true);"
124273,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/SystemViewSelfTest.java,1197,,"                    l1.set(""str2"");"
124274,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/SystemViewSelfTest.java,1548,,"            IgniteQueue<String> q0 = g0.queue(""queue-1"", 42, new CollectionConfiguration()"
124275,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/SystemViewSelfTest.java,1627,,"            IgniteSet<String> s0 = g0.set(""set-1"", new CollectionConfiguration()"
124276,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/metric/SystemViewSelfTest.java,2014,,"            .setConsistentId(""consId""))"
124277,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/authentication/AuthenticationConfigurationClusterTest.java,155,,"                    grid(0).context().security().createUser(""test"", ""test"".toCharArray());"
124278,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/authentication/AuthenticationOnNotActiveClusterTest.java,93,,"            SecurityContext secCtx = authenticate(grid(i), ""ignite"", ""ignite"");"
124279,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/authentication/AuthenticationProcessorNodeRestartTest.java,124,,"            String user = ""test"" + usrCnt.getAndIncrement();"
124280,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/authentication/AuthenticationProcessorNodeRestartTest.java,132,,"                                grid(CLI_NODE).context().security().createUser(user, (""passwd_"" + user).toCharArray());"
124281,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/authentication/AuthenticationProcessorNodeRestartTest.java,166,,"        }, 10, ""user-op"");"
124282,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/authentication/AuthenticationProcessorNodeRestartTest.java,198,,"                log.error(""Unexpected exception."", e);"
124283,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/authentication/AuthenticationProcessorSelfTest.java,118,,"        secCtxDflt = authenticate(grid(0), DFAULT_USER_NAME, ""ignite"");"
124284,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/authentication/AuthenticationProcessorSelfTest.java,192,,"            grid(0).context().security().createUser(""test"", ""test"".toCharArray());"
124285,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/authentication/AuthenticationProcessorSelfTest.java,203,,"                        grid(nodeIdx).context().security().createUser(""test1"", ""test1"".toCharArray());"
124286,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/authentication/AuthenticationProcessorSelfTest.java,444,,"                grid(i).context().security().createUser(""test"" + i, (""passwd"" + i).toCharArray());"
124287,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/AbstractDataTypesCoverageTest.java,622,,"            sqlStrVal = ""PARSEDATETIME('"" + TIME_DATE_FORMAT.format(time) + ""', '"" + PATTERN + ""')"";"
124288,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/AbstractDataTypesCoverageTest.java,622,,"            sqlStrVal = ""PARSEDATETIME('"" + TIME_DATE_FORMAT.format(time) + ""', '"" + PATTERN + ""')"";"
124289,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheAffinityKeyConfigurationMismatchTest.java,186,,"            ""Affinity key configuration mismatch"""
124290,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheClientStoreSelfTest.java,119,,"        Ignite ignite = startClientGrid(""client-1"");"
124291,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheConfigurationSerializationAbstractTest.java,167,,"                Assert.assertNotNull(""Cache is not started "" + cacheDesc.cacheName() + "", node "" + node.name(), cache);"
124292,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheDataRegionConfigurationTest.java,234,,"        invCfg.setName(""invCfg"");"
124293,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheDataRegionConfigurationTest.java,248,,"        checkStartGridException(IgniteCheckedException.class, ""Failed to start processor: GridProcessorAdapter []"");"
124294,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheDataRegionConfigurationTest.java,302,,"        LogListener cacheGrpLsnr0 = matches(""Cache group 'default' brings high overhead"").build();"
124295,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheDataRegionConfigurationTest.java,304,,"        LogListener partsInfoLsnr0 = matches(numOfPartitions + "" partitions, "" +"
124296,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheDataRegionConfigurationTest.java,306,,"            "" bytes per partition, "" + partitionsMetaMemoryChunk + "" MBs total"").build();"
124297,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheDataRegionConfigurationTest.java,306,,"            "" bytes per partition, "" + partitionsMetaMemoryChunk + "" MBs total"").build();"
124298,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheDataRegionConfigurationTest.java,310,,"        IgniteEx ignite0 = startGrid(""srv0"");"
124299,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheDataRegionConfigurationTest.java,321,,"        startGrid(""srv1"");"
124300,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheGetEntryAbstractTest.java,550,,"                assertTrue(""Unexpected error message: "" + err.getMessage(), err.getMessage().startsWith(getVerErr));"
124301,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheGetRemoveSkipStoreTest.java,99,,"        startClientGrid(""client"");"
124302,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheGroupMetricsTest.java,146,,"            .setName(""cache1"")"
124303,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheGroupMetricsTest.java,147,,"            .setGroupName(""group1"")"
124304,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheGroupMetricsTest.java,155,,"            .setGroupName(""group2"")"
124305,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheGroupMetricsTest.java,166,,"            .setName(""cache4"")"
124306,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheGroupMetricsTest.java,397,,"            .findMetric(""TotalAllocatedPages"");"
124307,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheGroupsMetricsRebalanceTest.java,290,,"                ""equal to the number of partitions in the cache group."", DFLT_PARTITION_COUNT, partitionsLeft.value());"
124308,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheKeepBinaryTransactionTest.java,55,,"        CacheConfiguration ccfg = new CacheConfiguration(""tx-cache"");"
124309,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheMetricsManageTest.java,111,,"        Assume.assumeFalse(""https://issues.apache.org/jira/browse/IGNITE-9224"", MvccFeatureChecker.forcedMvcc());"
124310,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheReadThroughRestartSelfTest.java,104,,"            cache.put(""key"" + k, k);"
124311,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheReadThroughRestartSelfTest.java,126,,"                            assertNotNull(""Null value for key: "" + key, cache.getEntry(key));"
124312,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheSerializableTransactionsTest.java,191,,"        log.info(""Test key: "" + key);"
124313,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheSerializableTransactionsTest.java,748,,"                        log.info(""Expected exception: "" + e);"
124314,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheSerializableTransactionsTest.java,2979,,"                        log.error(""Unexpected error: "" + e);"
124315,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheSerializableTransactionsTest.java,2984,,"            }, (SRVS + CLIENTS) * 2, ""update-thread"");"
124316,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheSerializableTransactionsTest.java,3781,,"                log.info(""Iteration [iter="" + i + "", val="" + cntr.get() + ']');"
124317,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheStopAndDestroySelfTest.java,65,,"    private static String CACHE_NAME_DHT = ""cache"";"
124318,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheStopAndDestroySelfTest.java,310,,"        grid(0).cache(CACHE_NAME_NEAR).put(KEY_VAL, ""near-test"");"
124319,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheStopAndDestroySelfTest.java,526,,"        cache0.put(KEY_VAL, KEY_VAL + ""recreated"");"
124320,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheTxNotAllowReadFromBackupTest.java,76,,"        CacheConfiguration<Integer, Integer> cfg = new CacheConfiguration<>(""test-cache"");"
124321,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAbstractFailoverSelfTest.java,216,,"                                String key = ""key"" + k;"
124322,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAbstractFullApiMultithreadedSelfTest.java,97,,"                    jcache().put(""key"" + i, i);"
124323,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAbstractFullApiMultithreadedSelfTest.java,172,,"                assert !cache.containsKey(""wrongKey"");"
124324,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAbstractFullApiSelfTest.java,422,,"            map.put(""key"" + i, i);"
124325,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAbstractFullApiSelfTest.java,646,,"        cache.put(""key1"", 1);"
124326,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAbstractFullApiSelfTest.java,647,,"        cache.put(""key2"", 2);"
124327,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAbstractFullApiSelfTest.java,651,,"        assert cache.get(""wrongKey"") == null;"
124328,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAbstractFullApiSelfTest.java,761,,"        Map<String, Integer> map1 = cache.getAll(ImmutableSet.of(""key1"", ""key2"", ""key9999""));"
124329,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAbstractFullApiSelfTest.java,765,,"        assert 2 == map1.size() : ""Invalid map: "" + map1;"
124330,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAbstractFullApiSelfTest.java,846,,"        assert 2 == c1.size() : ""Invalid collection: "" + c1;"
124331,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAbstractFullApiSelfTest.java,1087,,"        assert cache.get(""wrong"") == null;"
124332,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAbstractFullApiSelfTest.java,1215,,"        cache.put(""key3"", 3);"
124333,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAbstractFullApiSelfTest.java,1220,,"            assertEquals(""null"", cache.invoke(""key1"", INCR_IGNITE_PROCESSOR));"
124334,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAbstractFullApiSelfTest.java,5325,,"        testGlobalClearKey(false, Arrays.asList(""key25""), false);"
124335,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAbstractSelfTest.java,231,,"    @SuppressWarnings(""unchecked"")"
124336,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAffinityRoutingSelfTest.java,137,,"                grid(0).compute().affinityCall(NON_DFLT_CACHE_NAME, ""key"","
124337,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheAtomicEntryProcessorDeploymentSelfTest.java,156,,"            cache.put(""key"", valCls.newInstance());"
124338,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheBasicStoreAbstractTest.java,136,,"        assertEquals(""load"", store.getLastMethod());"
124339,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheBasicStoreAbstractTest.java,168,,"        checkLastMethod(""putAll"");"
124340,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheBasicStoreAbstractTest.java,282,,"        checkLastMethod(""loadAll"");"
124341,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheBasicStoreAbstractTest.java,314,,"        checkLastMethod(""loadAllFull"");"
124342,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheBasicStoreAbstractTest.java,488,,"            store.write(new CacheEntryImpl<>(i, ""reloaded-"" + i));"
124343,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheConfigurationConsistencySelfTest.java,67,,"@SuppressWarnings(""unchecked"")"
124344,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheConfigurationConsistencySelfTest.java,143,,"        CU.checkAttributeMismatch(strLog, ""cache"", node.id(), ""cacheMode"", ""Cache mode"", LOCAL, PARTITIONED, false);"
124345,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheConfigurationConsistencySelfTest.java,143,,"        CU.checkAttributeMismatch(strLog, ""cache"", node.id(), ""cacheMode"", ""Cache mode"", LOCAL, PARTITIONED, false);"
124346,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheConfigurationConsistencySelfTest.java,146,,"            strLog.toString().contains(""Cache mode mismatch""));"
124347,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheConfigurationConsistencySelfTest.java,188,,"        cacheName = ""myCache"";"
124348,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheConfigurationConsistencySelfTest.java,267,,"        cacheName = ""partitioned"";"
124349,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheDataTypesCoverageTest.java,200,,"            new Object[] {""String"", Boolean.TRUE, 'A', 1},"
124350,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheFinishPartitionsSelfTest.java,111,,"        info(""Wait time, ms: "" + waitTime);"
124351,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheIncrementTransformTest.java,81,,"        jcache(0).put(""key"", new TestObject(0));"
124352,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheInterceptorAbstractSelfTest.java,636,,"    @SuppressWarnings(""unchecked"")"
124353,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheInterceptorAbstractSelfTest.java,1570,,"            System.out.println(""Get [key="" + key + "", val="" + val + "", ret="" + ret + ']');"
124354,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheIteratorPerformanceTest.java,119,,"        X.println("">>>"");"
124355,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheMvccSelfTest.java,1723,,"        info(""Done candidate: "" + cand);"
124356,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheOffHeapMultiThreadedUpdateAbstractSelfTest.java,112,,"            assertEquals(""Unexpected value for grid "" + i, (Integer)(ITERATIONS_PER_THREAD * THREADS), val);"
124357,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheOffHeapMultiThreadedUpdateSelfTest.java,98,,"                assertEquals(""Unexpected value for grid "" + i, (Integer)(ITERATIONS_PER_THREAD * THREADS), val);"
124358,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheP2PUndeploySelfTest.java,74,,"        repCacheCfg.setName(""replicated"");"
124359,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheP2PUndeploySelfTest.java,88,,"        partCacheCfg.setName(""partitioned"");"
124360,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCachePutAllFailoverSelfTest.java,103,,"             return ""worker"".equals(n.attribute(""segment""));"
124361,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheQuerySqlFieldInlineSizeSelfTest.java,132,,"    @QueryGroupIndex(name = ""idx"", inlineSize = 10)"
124362,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheSlowTxWarnTest.java,47,,"        cc1.setName(""partitioned"");"
124363,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheSlowTxWarnTest.java,53,,"        cc2.setName(""replicated"");"
124364,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheSlowTxWarnTest.java,58,,"        cc3.setName(""local"");"
124365,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheValueConsistencyAbstractSelfTest.java,122,,"            cache.put(""key"" + i, i);"
124366,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridCacheValueConsistencyAbstractSelfTest.java,132,,"                    info(""Node is reported as affinity node for key [key="" + key + "", nodeId="" + locNode.id() + ']');"
124367,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridEvictionPolicyMBeansTest.java,64,,"        cache1.setName(""cache1"");"
124368,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridEvictionPolicyMBeansTest.java,74,,"        cache2.setName(""cache2"");"
124369,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridEvictionPolicyMBeansTest.java,105,,"        checkBean(""cache1"", ""org.apache.ignite.cache.eviction.fifo.FifoEvictionPolicy"", ""MaxSize"", 100);"
124370,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridEvictionPolicyMBeansTest.java,106,,"        checkBean(""cache1"", ""org.apache.ignite.cache.eviction.fifo.FifoEvictionPolicy"", ""BatchSize"", 10);"
124371,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridEvictionPolicyMBeansTest.java,107,,"        checkBean(""cache1"", ""org.apache.ignite.cache.eviction.fifo.FifoEvictionPolicy"", ""MaxMemorySize"", 20L);"
124372,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/GridEvictionPolicyMBeansTest.java,110,,"            checkBean(""cache1-near"", ""org.apache.ignite.cache.eviction.lru.LruEvictionPolicy"", ""MaxSize"", 40);"
124373,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractStopBusySelfTest.java,164,,"                info(""Start operation."");"
124374,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheAbstractStopBusySelfTest.java,168,,"                info(""Stop operation."");"
124375,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheBinaryEntryProcessorSelfTest.java,129,,"                bldr.setField(""val"", i);"
124376,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheBinaryEntryProcessorSelfTest.java,130,,"                bldr.setField(""strVal"", ""value-"" + i);"
124377,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheBinaryEntryProcessorSelfTest.java,150,,"                    assertEquals(""updated-"" + i, updated.stringValue());"
124378,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheBinaryObjectsScanSelfTest.java,51,,"        startClientGrid(""client"");"
124379,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheConfigVariationsFullApiTest.java,188,,"            map.put(""key"" + i, i);"
124380,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheConfigVariationsFullApiTest.java,202,,"        map.remove(""key0"");"
124381,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheConfigVariationsFullApiTest.java,484,,"        cache.put(""key1"", 1);"
124382,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheConfigVariationsFullApiTest.java,485,,"        cache.put(""key2"", 2);"
124383,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheConfigVariationsFullApiTest.java,571,,"                assert 2 == map1.size() : ""Invalid map: "" + map1;"
124384,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheConfigVariationsFullApiTest.java,780,,"                assert cache.get(""wrong"") == null;"
124385,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheConfigVariationsFullApiTest.java,1322,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-11885"")"
124386,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheConfigVariationsFullApiTest.java,2093,,"            m.put(""key3"", 3);"
124387,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheConfigVariationsFullApiTest.java,5366,,"        testGlobalClearKey(false, false, Arrays.asList(""key25""));"
124388,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheConfigurationTemplateTest.java,102,,"        checkCreate(ignite0, ""org.apache.ignite.test.cache1"", 4);"
124389,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheConfigurationTemplateTest.java,109,,"        checkCreate(ignite1, ""org.apache.ignite1"", 3);"
124390,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheConfigurationTemplateTest.java,114,,"        checkCreate(ignite0, ""org.apache1"", 2);"
124391,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheConfigurationTemplateTest.java,134,,"        checkCreate(ignite0, ""org.apache.ignite.test2.cache1"", 5);"
124392,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheConfigurationTemplateTest.java,213,,"        template2.setName(""org.apache.ignite"");"
124393,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheContainsKeyAbstractSelfTest.java,87,,"            assertTrue(""Invalid result on grid: "" + i, jcache(i).containsKey(key));"
124394,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheEntryProcessorCallTest.java,227,,"        log.info(""Invoke: "" + key);"
124395,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheEntryProcessorNodeJoinTest.java,187,,"                        Set<String> vals = ignite(g).<String, Set<String>>cache(cacheName).get(""set-"" + i);"
124396,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsTest.java,134,,"    private static final String CACHE1 = ""cache1"";"
124397,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsTest.java,137,,"    private static final String CACHE2 = ""cache2"";"
124398,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsTest.java,354,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-9530"")"
124399,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsTest.java,681,,"            GridTestUtils.runMultiThreaded(cls, ""loaders"");"
124400,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsTest.java,1351,,"            ccfgs[2] = cacheConfiguration(GROUP1, ""cache3"", PARTITIONED, ATOMIC, 2, false);"
124401,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsTest.java,3068,,"                    log.error(""Unexpected error: "" + e, e);"
124402,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsTest.java,3272,,"        ccfgs = new CacheConfiguration[]{new CacheConfiguration(""AaAaAa""), new CacheConfiguration(""AaAaBB"")};"
124403,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsTest.java,3272,,"        ccfgs = new CacheConfiguration[]{new CacheConfiguration(""AaAaAa""), new CacheConfiguration(""AaAaBB"")};"
124404,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheInvokeAbstractTest.java,209,,"            }, EntryProcessorException.class, ""Test processor exception."");"
124405,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheInvokeAbstractTest.java,554,,"                assertNotNull(""No result for "" + key);"
124406,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheInvokeReadThroughSingleNodeTest.java,114,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-8582"")"
124407,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheInvokeReadThroughTest.java,131,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-8582"")"
124408,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheLoadRebalanceEvictionSelfTest.java,135,,"            throw new UnsupportedOperationException(""Unsupported"");"
124409,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheNearLockValueSelfTest.java,79,,"            cache.put(""key1"", ""val1"");"
124410,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCachePeekModesAbstractTest.java,304,,"                "", offheap="" + offheapKeys.size() +"
124411,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCachePeekModesAbstractTest.java,448,,"                log.info(""Keys [total="" + totalKeys + "", offheap="" + offheapKeys + "", swap="" + swapKeys + ']');"
124412,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCachePeekModesAbstractTest.java,448,,"                log.info(""Keys [total="" + totalKeys + "", offheap="" + offheapKeys + "", swap="" + swapKeys + ']');"
124413,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheStoreValueAbstractTest.java,264,,"                    assertNotNull(""Unexpected value, node: "" + g,"
124414,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteClusterActivateDeactivateTestWithPersistence.java,521,,"                Assert.assertNotNull(""node="" + ignite.name() + "", key="" + k, val);"
124415,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteClusterActivateDeactivateTestWithPersistence.java,521,,"                Assert.assertNotNull(""node="" + ignite.name() + "", key="" + k, val);"
124416,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteDaemonNodeMarshallerCacheTest.java,83,,"            assertFalse(""true"".equals(ignite1.cluster().localNode().attribute(ATTR_DAEMON)));"
124417,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteDynamicCacheStartNoExchangeTimeoutTest.java,130,,"        log.info(""Test with cache: "" + ccfg.getName());"
124418,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteMarshallerCacheClientRequestsMappingOnMissTest.java,118,,"        Organization org = new Organization(1, ""Microsoft"", ""One Microsoft Way Redmond, WA 98052-6399, USA"");"
124419,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteMarshallerCacheClientRequestsMappingOnMissTest.java,118,,"        Organization org = new Organization(1, ""Microsoft"", ""One Microsoft Way Redmond, WA 98052-6399, USA"");"
124420,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteMarshallerCacheClientRequestsMappingOnMissTest.java,154,,"        replaceWithCountingMappingRequestListener(((GridKernalContext)U.field(srv1, ""ctx"")).io());"
124421,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteStartCacheInTransactionSelfTest.java,91,,"        final String key = ""key"";"
124422,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteStartCacheInTransactionSelfTest.java,92,,"        final String val = ""val"";"
124423,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteStartCacheInTransactionSelfTest.java,101,,"                    ignite.createCache(""NEW_CACHE"");"
124424,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteTxConfigCacheSelfTest.java,186,,"            cache.put(""key"", ""val"");"
124425,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteTxMultiNodeAbstractTest.java,159,,"                    "", isCntrPrimary="" + isCntrPrimary + "", nearId="" + locId +"
124426,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteTxMultiNodeAbstractTest.java,160,,"                    "", nearEntry="" + nearEntry(locId, CNTR_KEY) +"
124427,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteTxMultiNodeAbstractTest.java,161,,"                    (isCntrPrimary ? "", dhtEntry="" + dhtEntry(locId, CNTR_KEY) : """") + ']');"
124428,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteTxMultiNodeAbstractTest.java,170,,"                        "", cur="" + cntr + "", new="" + newVal + "", nearEntry="" + nearEntry(locId, CNTR_KEY) +"
124429,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteTxMultiNodeAbstractTest.java,170,,"                        "", cur="" + cntr + "", new="" + newVal + "", nearEntry="" + nearEntry(locId, CNTR_KEY) +"
124430,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteTxMultiNodeAbstractTest.java,177,,"                info(""Before "" + kind + "" put item [retry="" + retry + "", key="" + itemKey + "", cur="" + cntr +"
124431,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteTxMultiNodeAbstractTest.java,360,,"                ignite.log().info(""***"");"
124432,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteTxMultiNodeAbstractTest.java,445,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-11956"")"
124433,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteTxMultiNodeAbstractTest.java,753,,"            ignite.log().info(""Running job [node="" + ignite.cluster().localNode().id() + "", job="" + this + ""]"");"
124434,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteTxMultiNodeAbstractTest.java,753,,"            ignite.log().info(""Running job [node="" + ignite.cluster().localNode().id() + "", job="" + this + ""]"");"
124435,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteTxStoreExceptionAbstractSelfTest.java,398,,"                assertFalse(""Unexpected entry for grid [idx="" + i + "", entry="" + entry + ']', entry.lockedByAny());"
124436,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteTxStoreExceptionAbstractSelfTest.java,398,,"                assertFalse(""Unexpected entry for grid [idx="" + i + "", entry="" + entry + ']', entry.lockedByAny());"
124437,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteTxStoreExceptionAbstractSelfTest.java,657,,"                throw new CacheLoaderException(""Store exception"");"
124438,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/WithKeepBinaryCacheFullApiTest.java,126,,"    @SuppressWarnings(""serial"")"
124439,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/BinaryMetadataRemoveTest.java,90,,"        startGrid(""srv2"");"
124440,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/BinaryMetadataRemoveTest.java,91,,"        startClientGrid(""cli0"");"
124441,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/BinaryMetadataRemoveTest.java,163,,"            BinaryObjectBuilder builder0 = ignCreateType.binary().builder(""Type0"");"
124442,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/BinaryMetadataRemoveWithPersistenceTest.java,60,,"            BinaryObjectBuilder builder0 = grid(nodeName).binary().builder(""Type0"");"
124443,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/CacheKeepBinaryWithInterceptorTest.java,118,,"            assertEquals(10, (int)obj.field(""val""));"
124444,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/CacheKeepBinaryWithInterceptorTest.java,124,,"            assertEquals(1, (int)e.getKey().field(""key""));"
124445,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/GridCacheBinaryObjectsAbstractSelfTest.java,97,,"    @SuppressWarnings(""unchecked"")"
124446,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/GridCacheBinaryObjectsAbstractSelfTest.java,117,,"            setTypeName(""ArrayHashedKey"");"
124447,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/GridCacheBinaryObjectsAbstractSelfTest.java,125,,"        CacheKeyConfiguration arrayHashCfg = new CacheKeyConfiguration(""ArrayHashedKey"", ""fld1"");"
124448,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/GridCacheBinaryObjectsAbstractSelfTest.java,278,,"            assertEquals(i, (int)po.field(""val""));"
124449,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/GridCacheBinaryObjectsAbstractSelfTest.java,557,,"        checkArrayClass(cache, new String[] {""abc""});"
124450,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/GridCacheBinaryObjectsAbstractSelfTest.java,663,,"                assertFalse(""Key="" + i, val instanceof BinaryObjectOffheapImpl);"
124451,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/GridCacheBinaryObjectsAbstractSelfTest.java,1003,,"        c.put(new ComplexBinaryFieldsListHashedKey(), ""zzz"");"
124452,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/GridCacheBinaryObjectsAbstractSelfTest.java,1028,,"            BinaryObject binKey = bldr.setField(""fld1"", 5).setField(""fld2"", 1).setField(""fld3"", ""abc"").build();"
124453,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/GridCacheBinaryObjectsAbstractSelfTest.java,1028,,"            BinaryObject binKey = bldr.setField(""fld1"", 5).setField(""fld2"", 1).setField(""fld3"", ""abc"").build();"
124454,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/GridCacheBinaryObjectsAbstractSelfTest.java,1247,,"                    assertNull(""Unexpected value: "" + val, val);"
124455,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/binary/datastreaming/GridDataStreamerImplSelfTest.java,225,,"                assertEquals(k, v.field(""val""));"
124456,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/consistency/AtomicReadRepairTest.java,65,,"                fail(""Should not happen."");"
124457,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/GridCacheAbstractDataStructuresFailoverSelfTest.java,1201,,"                    log.info(""Start node: "" + id);"
124458,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/GridCacheAbstractQueueFailoverDataConsistencySelfTest.java,180,,"                    log.info(""Added "" + (i + 1) + "" items."");"
124459,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/GridCacheQueueApiSelfAbstractTest.java,598,,"        assertEquals(""Item-0"", queue.peek());"
124460,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/GridCacheQueueApiSelfAbstractTest.java,652,,"        IgniteQueue queue1 = initQueue(0, ""Queue1"", 0, colCfg);"
124461,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/GridCacheQueueApiSelfAbstractTest.java,654,,"        IgniteQueue queue2 = initQueue(0, ""Queue2"", 0, colCfg);"
124462,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/GridCacheQueueMultiNodeAbstractSelfTest.java,135,,"            info(""Queue name: "" + queueName);"
124463,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/GridCacheQueueMultiNodeAbstractSelfTest.java,500,,"                            grid.log().info(""Running job [node="" + grid.cluster().localNode().id() + ""]"");"
124464,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/GridCacheQueueMultiNodeAbstractSelfTest.java,611,,"            ignite.log().info(""Running job [node="" + ignite.cluster().localNode().id() + "", job="" + this + ""]"");"
124465,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/GridCacheQueueRotativeMultiNodeAbstractTest.java,217,,"            ignite.log().info(""Running job [node="" + ignite.cluster().localNode().id() + "", job="" + this + ""]"");"
124466,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/GridCacheQueueRotativeMultiNodeAbstractTest.java,217,,"            ignite.log().info(""Running job [node="" + ignite.cluster().localNode().id() + "", job="" + this + ""]"");"
124467,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/GridCacheSequenceApiSelfAbstractTest.java,207,,"                info(""Finished iteration: "" + i);"
124468,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/GridCacheSequenceApiSelfAbstractTest.java,524,,"            assert resSet.add(val) : ""Element already in set : "" + val;"
124469,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/GridCacheSetAbstractSelfTest.java,929,,"        try (final IgniteSet<Integer> set2 = grid(0).set(""Set2"", colCfg)) {"
124470,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/IgniteAtomicLongApiAbstractSelfTest.java,67,,"        info(""Running test [name="" + getName() + "", cacheMode="" + atomicsCacheMode() + ']');"
124471,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/IgniteAtomicLongApiAbstractSelfTest.java,67,,"        info(""Running test [name="" + getName() + "", cacheMode="" + atomicsCacheMode() + ']');"
124472,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/IgniteAtomicLongApiAbstractSelfTest.java,113,,"        IgniteAtomicLong atomic = ignite.atomicLong(""atomic"", 0, true);"
124473,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/IgniteClientDataStructuresAbstractTest.java,98,,"        assertNull(creator.atomicSequence(""seq1"", 1L, false));"
124474,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/IgniteClientDataStructuresAbstractTest.java,159,,"        assertNull(creator.atomicLong(""long1"", 1L, false));"
124475,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/IgniteClientDataStructuresAbstractTest.java,239,,"        assertNull(creator.set(""set1"", null));"
124476,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/IgniteClientDataStructuresAbstractTest.java,288,,"        assertNull(creator.countDownLatch(""latch1"", 1, true, false));"
124477,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/IgniteClientDataStructuresAbstractTest.java,367,,"        assertNull(creator.semaphore(""semaphore1"", 1, true, false));"
124478,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/IgniteClientDataStructuresAbstractTest.java,446,,"        assertNull(creator.reentrantLock(""lock1"", true, false, false));"
124479,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/IgniteDataStructureUniqueNameTest.java,243,,"        IgniteAtomicLong atomicLong = ignite.atomicLong(""testName"","
124480,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/IgniteLockAbstractSelfTest.java,140,,"            IgniteLock lock = ignite.reentrantLock(""lock"", true, true, true);"
124481,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/IgniteLockAbstractSelfTest.java,550,,"                IgniteCondition cond = grid(0).reentrantLock(""lock2"", true, true, true).getOrCreateCondition(""cond"");"
124482,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/IgniteSemaphoreAbstractSelfTest.java,233,,"        final IgniteSemaphore semaphore1 = grid(0).semaphore(""semaphore"", -2, true, true);"
124483,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/partitioned/GridCachePartitionedAtomicSequenceMultiThreadedTest.java,81,,"        assertEquals(new Long(9L), U.field(seq, ""locVal""));"
124484,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/datastructures/partitioned/GridCachePartitionedAtomicSequenceMultiThreadedTest.java,82,,"        assertEquals(new Long(9L), U.field(seq, ""upBound""));"
124485,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/CacheAsyncOperationsTest.java,130,,"            log.info(""Expected error: "" + e);"
124486,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/CacheBlockOnGetAllTest.java,57,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-9915"")"
124487,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/CacheBlockOnGetAllTest.java,89,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-9883"")"
124488,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/CacheBlockOnGetAllTest.java,249,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-9987"")"
124489,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/CacheBlockOnScanTest.java,82,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-9987"")"
124490,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/CacheBlockOnSingleGetTest.java,51,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-9915"")"
124491,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/CacheBlockOnSingleGetTest.java,83,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-9883"")"
124492,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/CacheBlockOnSingleGetTest.java,243,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-9987"")"
124493,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/CacheExchangeMergeTest.java,281,,"            }, 5, ""start-node"");"
124494,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/CacheExchangeMergeTest.java,1062,,"            fail(""Failed to wait for expected messages."");"
124495,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/CacheGetInsideLockChangingTopologyTest.java,229,,"            }, ""stop-thread"");"
124496,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/CacheLateAffinityAssignmentTest.java,379,,"        System.setProperty(IGNITE_EXCHANGE_COMPATIBILITY_VER_1, ""true"");"
124497,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/CacheLateAffinityAssignmentTest.java,2030,,"                        log.info(""Destroy cache [cache="" + cacheName + "", node="" + node.name() + ']');"
124498,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/CacheLockReleaseNodeLeaveTest.java,340,,"        Lock lock = ignite1.cache(DEFAULT_CACHE_NAME).lock(""key"");"
124499,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/GridCacheAbstractNodeRestartSelfTest.java,610,,"                            Thread.currentThread().setName(""put-worker-"" + grid(gridIdx).name());"
124500,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/GridCacheAbstractNodeRestartSelfTest.java,767,,"                                                "", keys="" + keys +"
124501,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/GridCacheBasicOpAbstractTest.java,185,,"            IgniteFuture<String> f1 = cache1.getAsync(""async1"");"
124502,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/GridCacheBasicOpAbstractTest.java,189,,"            cache1.putAsync(""async1"", ""asyncval1"").get();"
124503,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/GridCacheBasicOpAbstractTest.java,268,,"                cache1.put(""tx1"", ""val1"");"
124504,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/GridCacheBasicOpAbstractTest.java,269,,"                cache1.put(""tx2"", ""val2"");"
124505,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/GridCacheBasicOpAbstractTest.java,270,,"                cache1.put(""tx3"", ""val3"");"
124506,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/GridCacheBasicOpAbstractTest.java,298,,"            assert b1 != null : ""Invalid value: "" + b1;"
124507,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/GridCacheBasicOpAbstractTest.java,333,,"        cache1.put(""key"", ""val"");"
124508,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/GridExchangeFreeCellularSwitchComplexOperationsTest.java,142,,"                fail(""Should not happen [exception="" + e + ""]"");"
124509,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/GridExchangeFreeCellularSwitchIsolationTest.java,123,,"                fail(""Should not happen [exception="" + e + ""]"");"
124510,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/GridExchangeFreeSwitchTest.java,402,,"                    fail(""Should not happen [exception="" + e + ""]"");"
124511,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/GridExchangeFreeSwitchTest.java,473,,"                            fail(""Should not happen"");"
124512,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/IgniteBinaryMetadataUpdateChangingTopologySelfTest.java,64,,"        CacheConfiguration ccfg = new CacheConfiguration(""cache"");"
124513,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/IgniteCacheClientNodeChangingTopologyTest.java,212,,"                Thread.currentThread().setName(""put-thread"");"
124514,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/IgniteCacheClientNodeChangingTopologyTest.java,346,,"        log.info(""Stop block."");"
124515,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/IgniteCacheClientNodeChangingTopologyTest.java,1654,,"                                    assertNotNull(""No entry [node="" + node.name() + "", key="" + key + ']', entry);"
124516,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/IgniteCacheClientNodeChangingTopologyTest.java,1902,,"                    log.error(""Failed to wait for update."");"
124517,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/IgniteCacheClientReconnectTest.java,92,,"                ccfg.setName(""cache-"" + i);"
124518,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/IgniteCacheFailedUpdateResponseTest.java,104,,"        startClientGrid(""client"");"
124519,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/IgniteCacheFailedUpdateResponseTest.java,252,,"            throw new NotSerializableException(""Test marshalling exception"");"
124520,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/IgniteCacheReadFromBackupTest.java,92,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-10274"")"
124521,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/IgniteCacheReadFromBackupTest.java,108,,"            log.info(""Test cache [mode="" + ccfg.getCacheMode() +"
124522,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/IgniteCacheReadFromBackupTest.java,109,,"                "", atomicity="" + ccfg.getAtomicityMode() +"
124523,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/IgniteCacheReadFromBackupTest.java,110,,"                "", backups="" + ccfg.getBackups() +"
124524,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/IgniteCacheReadFromBackupTest.java,111,,"                "", near="" + near + ""]"");"
124525,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/IgniteCrossCacheTxStoreSelfTest.java,62,,"        CacheConfiguration cfg1 = cacheConfiguration(""cacheA"", new FirstStoreFactory());"
124526,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/IgniteCrossCacheTxStoreSelfTest.java,171,,"            ""sessionEnd true"""
124527,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/IgnitePessimisticTxSuspendResumeTest.java,89,,"                        assertFalse(""Locked key "" + j, cache.lock(j).tryLock());"
124528,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GracefulShutdownTest.java,165,,"            IgniteCache cache = ignite0.cache(""cache"" + i);"
124529,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheAtomicFullApiSelfTest.java,81,,"        jcache().put(""key1"", 1);"
124530,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheAtomicFullApiSelfTest.java,82,,"        jcache().put(""key2"", 2);"
124531,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheAtomicFullApiSelfTest.java,94,,"        Map<String, Integer> map1 = jcache().getAll(ImmutableSet.of(""key1"", ""key2"", ""key9999""));"
124532,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheAtomicNearCacheSelfTest.java,145,,"    @SuppressWarnings(""ZeroLengthArrayAllocation"")"
124533,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheAtomicNearCacheSelfTest.java,217,,"            log.info(""PutAll [igniteInstanceName="" + grid(i).name() + "", val="" + val + ']');"
124534,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheAtomicNearCacheSelfTest.java,683,,"            assertNotNull(""No near entry for: "" + key + "", grid: "" + ignite.name(), nearEntry);"
124535,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheAtomicNearCacheSelfTest.java,685,,"            assertEquals(""Unexpected value for grid: "" + ignite.name(),"
124536,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheColocatedDebugTest.java,580,,"            Map<Integer, String> map = F.asMap(k0, ""val"" + k0, k1, ""val"" + k1, k2, ""val"" + k2);"
124537,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheColocatedDebugTest.java,856,,"            Map<Integer, String> map = F.asMap(k0, ""value"" + k0, k1, ""value"" + k1, k2, ""value"" + k2);"
124538,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheDhtEvictionsDisabledSelfTest.java,48,,"        cc.setName(""test"");"
124539,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheDhtPreloadSelfTest.java,263,,"                info(""Before grid stop [name="" + g.name() + "", fullTop="" + top2string(ignites));"
124540,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheDhtPreloadUnloadSelfTest.java,168,,"                info(""Grid size [i="" + i + "", size="" + grid(i).cache(DEFAULT_CACHE_NAME).localSize() + ']');"
124541,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheDhtPreloadUnloadSelfTest.java,168,,"                info(""Grid size [i="" + i + "", size="" + grid(i).cache(DEFAULT_CACHE_NAME).localSize() + ']');"
124542,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheDhtPreloadWaitForBackupsTest.java,57,,"        DistributedMetaStorageImpl.IGNITE_INTERNAL_KEY_PREFIX + ""graceful.shutdown"";"
124543,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheDhtPreloadWaitForBackupsTest.java,172,,"            grid(i % 2).cache(""cache"" + (1 + (i >> 3) % 3)).put(i, new byte[i]);"
124544,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheDhtPreloadWaitForBackupsTest.java,181,,"        }, ""Stopper"");"
124545,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCachePartitionedTopologyChangeSelfTest.java,193,,"                                info("">>> Failed to perform lock [key="" + key + "", e="" + e + ']');"
124546,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridCacheTxNodeFailureSelfTest.java,440,,"                assertTrue(""near="" + nearEntry, nearEntry.remoteMvccSnapshot().isEmpty());"
124547,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/IgniteCachePrimaryNodeFailureRecoveryAbstractTest.java,475,,"                    assertNull(""Unexpected value for: "" + ignite.name(), cache.localPeek(key));"
124548,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/IgniteCachePutRetryTransactionalSelfTest.java,193,,"                String key = ""key-"" + base;"
124549,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/IgniteCachePutRetryTransactionalSelfTest.java,201,,"                    assertEquals(""value-"" + i, cache.get(""key-"" + base + ""-"" + i));"
124550,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/dht/atomic/GridCacheAtomicPreloadSelfTest.java,125,,"                info("">>>>>>>>>>>>>>>"");"
124551,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCacheNearMetricsSelfTest.java,158,,"                info(""Reads: "" + cache0.localMetrics().getCacheGets());"
124552,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCacheNearMetricsSelfTest.java,159,,"                info(""Affinity nodes: "" + U.nodes2names(affinity(cache0).mapKeyToPrimaryAndBackups(i)));"
124553,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCacheNearMetricsSelfTest.java,268,,"                info(""Writes: "" + cache0.localMetrics().getCachePuts());"
124554,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCacheNearOneNodeSelfTest.java,72,,"        assertEquals(""DHT entries: "" + dht().entrySet(), 0, dht().size());"
124555,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCacheNearOneNodeSelfTest.java,73,,"        assertEquals(""Near entries: "" + near().entrySet(), 0, near().size());"
124556,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCacheNearOneNodeSelfTest.java,305,,"        cache.put(1, ""val1"");"
124557,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedAffinityExcludeNeighborsPerformanceTest.java,140,,"            info("">>> "");"
124558,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedBasicStoreMultiNodeSelfTest.java,138,,"        assertNull(cache.getAndPut(key, ""val""));"
124559,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,157,,"                "", nearEntry="" + near(g).peekEx(CNTR_KEY) :"
124560,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,158,,"                "", dhtEntry="" + dht(g).peekEx(CNTR_KEY) + "", dhtNear="" + near(g).peekEx(CNTR_KEY)) +"
124561,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,158,,"                "", dhtEntry="" + dht(g).peekEx(CNTR_KEY) + "", dhtNear="" + near(g).peekEx(CNTR_KEY)) +"
124562,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,296,,"                                    info(""***"");"
124563,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,301,,"                                    info(""*** Primary Iteration #"" + i + "": "" + cntr + "" ***"");"
124564,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,314,,"                                        info(""Started tx [igniteInstanceName="" + pri.name() +"
124565,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,315,,"                                            "", primary=true, xid="" + tx.xid() + "", oldCntr="" + oldCntr +"
124566,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,316,,"                                            "", node="" + priId + "", dhtEntry="" + dhtEntry +"
124567,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,322,,"                                    assertTrue(""Lock violation: "" + tx, locked.compareAndSet(false, true));"
124568,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,328,,"                                        info(""Read counter [igniteInstanceName="" + pri.name() +"
124569,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,335,,"                                    assert curCntr >= global : invalid(""Counter mismatch"", pri, true, curCntr, global);"
124570,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,340,,"                                        info(""Setting global counter [old="" + global + "", new="" + newCntr + ']');"
124571,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,340,,"                                        info(""Setting global counter [old="" + global + "", new="" + newCntr + ']');"
124572,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,342,,"                                    assert globalCntr.compareAndSet(global, newCntr) : invalid(""Invalid global counter"","
124573,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,348,,"                                        info(""Put new value [igniteInstanceName="" + pri.name() +"
124574,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,349,,"                                            "", primary=true, prev="" + prev + "", newCntr="" + newCntr + ']');"
124575,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,358,,"                                        info(""Committed tx: "" + tx);"
124576,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeCounterSelfTest.java,480,,"        X.println(""*** "");"
124577,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/near/GridCachePartitionedMultiNodeFullApiSelfTest.java,177,,"        jcache().put(""key"", 1);"
124578,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/rebalancing/GridCacheRebalancingSyncSelfTest.java,197,,"                        "", iteration="" + iter + "", cache="" + name + ""]"");"
124579,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/replicated/preloader/GridCacheReplicatedPreloadSelfTest.java,442,,"            cfg.setName(""customStore"");"
124580,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/distributed/replicated/preloader/GridCacheReplicatedPreloadSelfTest.java,623,,"                cache1.put(i, ""val"" + i);"
124581,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/eviction/DhtAndNearEvictionTest.java,106,,"        CacheConfiguration<?, ?> ccfg = new CacheConfiguration<Integer, Integer>(""mycache"")"
124582,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/eviction/EvictionAbstractTest.java,509,,"            info(""Min cache size [min="" + min + "", idx="" + minIdx + ']');"
124583,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/eviction/EvictionPolicyFactoryAbstractTest.java,531,,"            info(""Min cache size [min="" + min + "", idx="" + minIdx + ']');"
124584,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/eviction/GridCacheEmptyEntriesAbstractSelfTest.java,203,,"        cache.put(""key7"", ""key7"");"
124585,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/eviction/GridCacheEvictionFilterSelfTest.java,164,,"                        U.warn(log, ""Invalid count for key [key="" + i + "", cnt="" + cnt0 + "", expected="" + exp + ']');"
124586,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/eviction/paged/PageEvictionPagesRecyclingAndReusingTest.java,156,,"        System.out.println(""### Recycled pages count: "" + reuseList.recycledPagesCount());"
124587,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/expiry/IgniteCacheExpiryPolicyAbstractTest.java,1130,,"        IgniteConfiguration clientCfg = getConfiguration(""client"");"
124588,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/integration/IgniteCacheLoaderWriterAbstractTest.java,113,,"        cache.put(key, ""test1"");"
124589,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/integration/IgniteCacheStoreNodeRestartAbstractTest.java,79,,"        grid(0).cache(CACHE_NAME1).put(""key1"", new UserObject(""key1""));"
124590,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/integration/IgniteCacheStoreSessionAbstractTest.java,272,,"                log.info(""Tx end [commit="" + commit + "", tx="" + session().transaction() + ']');"
124591,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/integration/IgniteCacheTxStoreSessionTest.java,131,,"            expData.add(new ExpectedData(true, ""writeAll"", new HashMap<>(), DEFAULT_CACHE_NAME));"
124592,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/integration/IgniteCacheTxStoreSessionTest.java,132,,"            expData.add(new ExpectedData(true, ""delete"", F.<Object, Object>asMap(0, ""writeAll""), DEFAULT_CACHE_NAME));"
124593,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/integration/IgniteCacheTxStoreSessionTest.java,133,,"            expData.add(new ExpectedData(true, ""sessionEnd"", F.<Object, Object>asMap(0, ""writeAll"", 1, ""delete""), DEFAULT_CACHE_NAME));"
124594,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/integration/IgniteCacheTxStoreSessionTest.java,135,,"            log.info(""Do tx commit."");"
124595,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/integration/IgniteCacheTxStoreSessionTest.java,171,,"            expData.add(new ExpectedData(true, ""write"", new HashMap<>(), cache.getName()));"
124596,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/local/GridCacheLocalFullApiSelfTest.java,59,,"        cache.put(""key1"", 1);"
124597,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/local/GridCacheLocalFullApiSelfTest.java,60,,"        cache.put(""key2"", 2);"
124598,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/local/GridCacheLocalMultithreadedSelfTest.java,140,,"                info(""Locked keys from thread [keys="" + keys + "", thread="" + thread() + ']');"
124599,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccAbstractBasicCoordinatorFailoverTest.java,77,,"    @SuppressWarnings(""unchecked"")"
124600,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccAbstractTest.java,405,,"                    assert false : ""Unknown write mode"";"
124601,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccAbstractTest.java,885,,"    @SuppressWarnings(""unchecked"")"
124602,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccAbstractTest.java,1337,,"                        error(""Unexpected error: "" + e, e);"
124603,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccConfigurationValidationTest.java,69,,"    @SuppressWarnings(""ThrowableNotThrown"")"
124604,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccConfigurationValidationTest.java,74,,"        node.createCache(new CacheConfiguration(""cache1"").setGroupName(""grp1"").setAtomicityMode(ATOMIC));"
124605,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccConfigurationValidationTest.java,79,,"                    new CacheConfiguration(""cache2"").setGroupName(""grp1"").setAtomicityMode(TRANSACTIONAL_SNAPSHOT));"
124606,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccConfigurationValidationTest.java,157,,"        IgniteConfiguration cfg = getConfiguration(""testGrid"");"
124607,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccOperationChecksTest.java,57,,"        checkOperationUnsupported(""clear"", m(""Clear""), E);"
124608,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccOperationChecksTest.java,76,,"        checkOperationUnsupported(""loadCache"", m(""Load""), t(IgniteBiPredicate.class, Object[].class),"
124609,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccTransactionsTest.java,151,,"                        log.info(""Test key: "" + key);"
124610,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccTransactionsTest.java,423,,"            ccfg.setName(""cache-"" + c);"
124611,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/IgniteBaselineAffinityTopologyActivationTest.java,337,,"                long activationHash = U.field(blt, ""branchingPntHash"");"
124612,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/IgniteDataStorageMetricsSelfTest.java,121,,"            cacheConfiguration(GROUP1, ""cache"", PARTITIONED, ATOMIC, 1, null),"
124613,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/IgnitePdsBinaryMetadataAsyncWritingTest.java,141,,"        GridTestUtils.runAsync(() -> cache.put(0, new TestAddress(0, ""USA"", ""NYC"", ""Park Ave"")));"
124614,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/IgnitePdsBinaryMetadataAsyncWritingTest.java,141,,"        GridTestUtils.runAsync(() -> cache.put(0, new TestAddress(0, ""USA"", ""NYC"", ""Park Ave"")));"
124615,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/IgnitePdsBinaryMetadataAsyncWritingTest.java,314,,"        String cacheName = ""testCache"";"
124616,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/IgnitePdsBinaryMetadataOnClusterRestartTest.java,59,,"    private static final String DYNAMIC_INT_FIELD_NAME = ""intField"";"
124617,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/IgnitePdsBinaryMetadataOnClusterRestartTest.java,142,,"            .setField(DYNAMIC_STR_FIELD_NAME, ""str"")"
124618,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/IgnitePdsCacheObjectBinaryProcessorOnDiscoveryTest.java,73,,"        addBinaryType(ig0, ""test_1"", new IgniteBiTuple<>(""name"", String.class));"
124619,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/IgnitePdsCacheRebalancingAbstractTest.java,255,,"        info("">>>>>>>>>>>>>>>>>"");"
124620,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/IgnitePersistentStoreDataStructuresTest.java,253,,"        IgniteLock lock = ignite.reentrantLock(""test"", false, true, true);"
124621,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/MaintenanceRegistrySimpleTest.java,150,,"        String name = ""name0"";"
124622,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/baseline/ClientAffinityAssignmentWithBaselineTest.java,93,,"    private static final String CLIENT_GRID_NAME = ""client"";"
124623,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/baseline/ClientAffinityAssignmentWithBaselineTest.java,96,,"    private static final String FLAKY_NODE_NAME = ""flaky"";"
124624,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/baseline/ClientAffinityAssignmentWithBaselineTest.java,281,,"            client1 = startClientGrid(""client1"");"
124625,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/baseline/ClientAffinityAssignmentWithBaselineTest.java,282,,"            client2 = startClientGrid(""client2"");"
124626,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/baseline/ClientAffinityAssignmentWithBaselineTest.java,498,,"                        dynamicCache.put(i0, ""txtxtxtx"" + i0);"
124627,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/baseline/ClientAffinityAssignmentWithBaselineTest.java,505,,"                        System.out.println(""Tx #"" + i0 + "" committed"");"
124628,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/IgnitePdsCacheWalDisabledOnRebalancingTest.java,148,,"        if (!""client"".equals(igniteInstanceName)) {"
124629,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/IgnitePdsPartitionPreloadTest.java,228,,"            fail(""Exception is expected"");"
124630,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/IgnitePdsPartitionPreloadTest.java,231,,"            log.error(""Expected"", e);"
124631,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/file/IgnitePdsCheckpointSimulationWithRealCpDisabledTest.java,775,,"                            assertEquals(""Invalid state [pageId="" + fullId + "", pos="" + i + ']',"
124632,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/file/IgnitePdsDiskErrorsRecoveringTest.java,247,,"                if (t.getCause() != null && t.getCause().getMessage().equals(""Not enough space!""))"
124633,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/file/IgnitePdsNoActualWalHistoryTest.java,130,,"            dbMgr.wakeupForCheckpoint(""test"").get();"
124634,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/filename/IgniteUidAsConsistentIdMigrationTest.java,225,,"        final String expVal = ""there is compatible mode with old style folders!"";"
124635,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/filename/IgniteUidAsConsistentIdMigrationTest.java,239,,"        assertNotNull(""Expected to have cache ["" + CACHE_NAME + ""] using ["" + expDfltConsistentId + ""] as PDS folder"", cache);"
124636,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/filename/IgniteUidAsConsistentIdMigrationTest.java,283,,"            assertTrue(""there!"".equals(igniteRestart.cache(CACHE_NAME).get(""hi"")));"
124637,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/IgniteWalHistoryReservationsTest.java,85,,"        ccfg1.setName(""cache1"");"
124638,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/IgniteWalRebalanceLoggingTest.java,117,,"                str.contains(""cache_group1"") && str.contains(""cache_group2"")).times(3)."
124639,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/IgniteWalRebalanceLoggingTest.java,117,,"                str.contains(""cache_group1"") && str.contains(""cache_group2"")).times(3)."
124640,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/IgniteWalRebalanceLoggingTest.java,200,,"            cache1.put(i, ""abc"" + i);"
124641,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/IgniteWalRebalanceTest.java,543,,"        Assert.assertEquals(""Rebalance should be cancelled on demander node: "" + preloader.rebalanceFuture(), false, res);"
124642,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/IgniteWalRebalanceTest.java,590,,"        String cacheName = ""test-cache-1"";"
124643,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/IgniteWalRecoverySeveralRestartsTest.java,144,,"                info(""Restart #"" + restartCnt);"
124644,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/IgniteWalRecoverySeveralRestartsTest.java,189,,"            dynCacheCfg.setName(""dyncache"");"
124645,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/IgniteWalSerializerVersionTest.java,79,,"        RecordSerializer ser0 = U.field(wal0, ""serializer"");"
124646,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/WalCompactionTest.java,189,,"        ig.context().cache().context().database().wakeupForCheckpoint(""Forced checkpoint"").get();"
124647,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/WalCompactionTest.java,195,,"        File walDir = new File(dbDir, ""wal"");"
124648,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/WalCompactionTest.java,196,,"        File archiveDir = new File(walDir, ""archive"");"
124649,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/WalRebalanceRestartTest.java,105,,"            startGrid(""new_srv"");"
124650,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/WalRecoveryTxLogicalRecordsTest.java,384,,"                    assertTrue(""Not historical for iteration: "" + i, it.historical(0));"
124651,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/reader/IgniteWalReaderTest.java,715,,"        stopGrid(""node0"", false);"
124652,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/reader/IgniteWalReaderTest.java,1119,,"                    workDir + ""/db/wal/"" + subfolderName1,"
124653,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/db/wal/reader/IgniteWalReaderTest.java,1120,,"                    workDir + ""/db/wal/archive/"" + subfolderName1"
124654,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/diagnostic/pagelocktracker/PageLockTrackerManagerTest.java,50,,"        System.setProperty(""IGNITE_PAGE_LOCK_TRACKER_TYPE"", String.valueOf(-1));"
124655,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/diagnostic/pagelocktracker/stack/PageLockStackTest.java,490,,"        Assert.assertTrue(msg, msg.contains(""Stack is empty""));"
124656,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/freelist/FreeListCachingTest.java,162,,"                    assertNull(""Expected null bucket [partId="" + cacheData.partId() + "", i="" + i + "", bucket="" +"
124657,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/pagemem/PageMemoryLazyAllocationWithPDSTest.java,83,,"        IgniteEx srv = startGrid(cfgWithHugeRegion(""test-server""));"
124658,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/snapshot/IgniteClusterSnapshotCheckTest.java,132,,"        assertContains(log, b.toString(), ""The check procedure has finished, no conflicts have been found"");"
124659,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/snapshot/IgniteClusterSnapshotSelfTest.java,1031,,"                        assertEquals(""Exchange order violated: "" + fut.firstEvent(), 0, order.getAndIncrement());"
124660,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/snapshot/IgniteSnapshotWithMetastorageTest.java,62,,"        ignite.context().distributedMetastorage().write(""key"", ""value"");"
124661,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/standbycluster/IgniteChangeGlobalStateAbstractTest.java,123,,"        return nodes.get(""node"" + idx + primarySuffix);"
124662,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/standbycluster/IgniteChangeGlobalStateCacheTest.java,49,,"        cacheP.put(""key"", ""value"");"
124663,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/standbycluster/IgniteChangeGlobalStateCacheTest.java,49,,"        cacheP.put(""key"", ""value"");"
124664,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/standbycluster/IgniteStandByClusterTest.java,72,,"        final String cacheName = ""cache"";"
124665,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/standbycluster/IgniteStandByClusterTest.java,119,,"        Map<String, GridCacheAdapter<?, ?>> caches = U.field(ig3.context().cache(), ""caches"");"
124666,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/standbycluster/IgniteStandByClusterTest.java,139,,"        IgniteConfiguration cfg1 = getConfiguration(""node1"");"
124667,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/standbycluster/IgniteStandByClusterTest.java,142,,"            new CacheConfiguration(cache1).setNodeFilter(new NodeFilterIgnoreByName(""node2"")));"
124668,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/standbycluster/IgniteStandByClusterTest.java,147,,"            new CacheConfiguration(cache2).setNodeFilter(new NodeFilterIgnoreByName(""node3"")));"
124669,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/wal/SegmentedRingByteBufferTest.java,393,,"                    fail(""Exception in producer thread, ex="" + ex.get());"
124670,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/wal/scanner/WalScannerTest.java,211,,"        assertRecord(actualRecords.get(0), ""PageSnapshot ["", ""PAGE_RECORD"");"
124671,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/wal/scanner/WalScannerTest.java,212,,"        assertRecord(actualRecords.get(0), ""CheckpointRecord ["", ""CHECKPOINT_RECORD"");"
124672,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/wal/scanner/WalScannerTest.java,213,,"        assertRecord(actualRecords.get(0), ""FixCountRecord ["", ""BTREE_FIX_COUNT"");"
124673,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/CacheScanQueryFailoverTest.java,207,,"            }, Error.class, ""Poison pill"");"
124674,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryTransformerSelfTest.java,70,,"        IgniteCache<Integer, String> cache = grid().createCache(""test-cache"");"
124675,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryTransformerSelfTest.java,144,,"                cache.put(i, new Value(""str"" + i, i * 100));"
124676,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryTransformerSelfTest.java,262,,"                        return e.getValue().field(""idx"");"
124677,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryTransformerSelfTest.java,525,,"                ""Transformers are supported only for SCAN queries."""
124678,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/CacheContinuousQueryAsyncFilterListenerTest.java,467,,"                                assertFalse(""Failed: "" + Thread.currentThread().getName(),"
124679,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/CacheContinuousQueryFactoryAsyncFilterRandomOperationTest.java,56,,"            assertTrue(""Failed. Current thread name: "" + Thread.currentThread().getName(),"
124680,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/CacheContinuousQueryFailoverAbstractSelfTest.java,601,,"                log.info(""Put [key="" + key + "", val="" + val + "", part="" + aff.partition(key) + ']');"
124681,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/CacheContinuousQueryFailoverAbstractSelfTest.java,601,,"                log.info(""Put [key="" + key + "", val="" + val + "", part="" + aff.partition(key) + ']');"
124682,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/CacheContinuousQueryFailoverAbstractSelfTest.java,900,,"                fail(""Failed to wait for notifications [exp="" + keys.size() + "", left="" + keys0.size() + ']');"
124683,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/CacheContinuousQueryFailoverAbstractSelfTest.java,900,,"                fail(""Failed to wait for notifications [exp="" + keys.size() + "", left="" + keys0.size() + ']');"
124684,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/CacheContinuousQueryFailoverAbstractSelfTest.java,1092,,"        assertFalse(""Unexpected error during test, see log for details."", err);"
124685,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/CacheContinuousQueryFailoverAbstractSelfTest.java,1371,,"        assertTrue(""Backup queue is not cleared: "" + backupQueue(ignite(1)),"
124686,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/CacheContinuousQueryRandomOperationsTest.java,595,,"                fail(""Unknown query type"");"
124687,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/CacheEntryProcessorExternalizableFailedTest.java,487,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-7187"")"
124688,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/CacheEntryProcessorNonSerializableTest.java,228,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-7187"")"
124689,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/CacheKeepBinaryIterationTest.java,181,,"                            assertTrue(""Got unexpected object: "" + key.getClass() + "", keepBinary: "" + keepBinary,"
124690,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/CacheKeepBinaryIterationTest.java,181,,"                            assertTrue(""Got unexpected object: "" + key.getClass() + "", keepBinary: "" + keepBinary,"
124691,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/ContinuousQueryPeerClassLoadingTest.java,67,,"        check(""server1"", ""server2"", ""client"");"
124692,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/GridCacheContinuousQueryMultiNodesFilteringTest.java,91,,"                jcache(i, ""part"" + i).put(""k"" + j, ""v0"");"
124693,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/GridCacheContinuousQueryMultiNodesFilteringTest.java,92,,"                jcache(i, ""repl"" + i).put(""k"" + j, ""v0"");"
124694,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/GridCacheContinuousQueryMultiNodesFilteringTest.java,110,,"                    return opCounts.get(""qry"" + i0 + ""_total"").get() == expTotal;"
124695,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/GridCacheContinuousQueryMultiNodesFilteringTest.java,110,,"                    return opCounts.get(""qry"" + i0 + ""_total"").get() == expTotal;"
124696,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/GridCacheContinuousQueryMultiNodesFilteringTest.java,114,,"            int partInserts = opCounts.get(""part"" + i + ""_ins"").get();"
124697,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/GridCacheContinuousQueryMultiNodesFilteringTest.java,116,,"            int partUpdates = opCounts.get(""part"" + i + ""_upd"").get();"
124698,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/GridCacheContinuousQueryMultiNodesFilteringTest.java,118,,"            int partRemoves = opCounts.get(""part"" + i + ""_rmv"").get();"
124699,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/IgniteCacheContinuousQueryBackupQueueTest.java,130,,"                log.info(""Put key: "" + i);"
124700,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/IgniteCacheContinuousQueryClientReconnectTest.java,105,,"            assertTrue(""Failed to wait for event."", lsnr.latch.await(5, SECONDS));"
124701,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/store/GridCacheWriteBehindStoreSelfTest.java,233,,"                store.write(new CacheEntryImpl<>(i, ""val"" + i));"
124702,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TransactionIntegrityWithPrimaryIndexCorruptionTest.java,68,,"        doTestTransferAmount0(true, true, () -> new AssertionError(""Test""));"
124703,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxDeadlockDetectionNoHangsTest.java,116,,"            GridTestUtils.setFieldValue(IgniteTxManager.class, ""DEADLOCK_MAX_ITERS"", 0);"
124704,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxDeadlockDetectionTest.java,156,,"                                    log.info("">>> Performs put [node="" + ((IgniteKernal)ignite).localNode() +"
124705,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxDeadlockDetectionTest.java,157,,"                                        "", tx="" + tx + "", key="" + key + ']');"
124706,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxDeadlockDetectionTest.java,157,,"                                        "", tx="" + tx + "", key="" + key + ']');"
124707,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxDeadlockDetectionTest.java,169,,"                }, NODES_CNT * 3, ""tx-thread"");"
124708,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxOnCachesStopTest.java,379,,"            CacheConfiguration<Integer, byte[]> c = new CacheConfiguration<>(""test-cache-"" + i);"
124709,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxPartitionCounterStateAbstractTest.java,831,,"            log.info(""TX: prepared on primary [name="" + primary.name() + "", txId="" + idx + ']');"
124710,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxPartitionCounterStateOnePrimaryTwoBackupsFailAllHistoryRebalanceTest.java,47,,"    @Ignore(""Rebalance will not be triggered because counters are same"")"
124711,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxPartitionCounterStateOnePrimaryTwoBackupsHistoryRebalanceTest.java,62,,"    @Ignore(""Rebalance may be not triggered because all prepared txs may have counters greater than commited tx's "" +"
124712,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxPartitionCounterStateOnePrimaryTwoBackupsHistoryRebalanceTest.java,63,,"        ""and will be rolled back on recovery, so, nothing to rebalance"")"
124713,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxPartitionCounterStatePutTest.java,144,,"    @Ignore(""https://issues.apache.org/jira/browse/IGNITE-11793"")"
124714,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxRollbackAsyncTest.java,441,,"        }, 1, ""tx-rollback-thread"");"
124715,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxRollbackOnIncorrectParamsTest.java,86,,"            fail(""Should fail prior this line."");"
124716,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxRollbackOnMapOnInvalidTopologyTest.java,72,,"        startClientGrid(""client"");"
124717,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxRollbackOnTimeoutOnePhaseCommitTest.java,60,,"        if (!igniteInstanceName.startsWith(""client"")) {"
124718,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxWithKeyContentionSelfTest.java,135,,"    @WithSystemProperty(key = IGNITE_DUMP_TX_COLLISIONS_INTERVAL, value = ""30000"")"
124719,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/warmup/LoadAllWarmUpStrategySelfTest.java,75,,"                        new DataRegionConfiguration().setName(""dr_0"").setPersistenceEnabled(true)"
124720,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/warmup/LoadAllWarmUpStrategySelfTest.java,81,,"                cacheCfg(""c_0"", ""g_0"", ""dr_0"", Organization.queryEntity()),"
124721,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/warmup/LoadAllWarmUpStrategySelfTest.java,82,,"                cacheCfg(""c_1"", ""g_0"", ""dr_0"", Person.queryEntity()),"
124722,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/warmup/LoadAllWarmUpStrategySelfTest.java,83,,"                cacheCfg(""c_2"", ""g_1"", ""dr_1"", Organization.queryEntity()),"
124723,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/warmup/LoadAllWarmUpStrategySelfTest.java,84,,"                cacheCfg(""c_3"", ""g_1"", ""dr_1"", Person.queryEntity())"
124724,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/closure/GridClosureSerializationTest.java,150,,"            throw new IOException(""Test exception"");"
124725,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cluster/ClusterReadOnlyModeSelfTest.java,108,,"            metaStorage.write(""key"", ""val"");"
124726,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/cluster/ClusterReadOnlyModeSelfTest.java,260,,"        grid.utilityCache().put(new GridServiceAssignmentsKey(""test""), ""test"");"
124727,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,64,,"    private static final String CACHE_NAME = ""test"";"
124728,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,198,,"                assertCollectionsEquals(""Results value mismatch"", createGoldenResults(), results);"
124729,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,286,,"                assertEquals(""Result's size mismatch: job must be run on all server nodes"","
124730,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,290,,"                    assertNull(""All results must be null"", o);"
124731,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,868,,"                ignite.getOrCreateCache(""test0"");"
124732,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,869,,"                ignite.getOrCreateCache(""test1"");"
124733,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,1206,,"    @SuppressWarnings({""PublicInnerClass""})"
124734,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,1472,,"            writer.writeObject(""arg"", argument(0));"
124735,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,1483,,"            isVal = reader.readBoolean(""isVal"");"
124736,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,1484,,"            bVal = reader.readByte(""bVal"");"
124737,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,1485,,"            cVal = reader.readChar(""cVal"");"
124738,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,1486,,"            sVal = reader.readShort(""sVal"");"
124739,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,1487,,"            intVal = reader.readInt(""intVal"");"
124740,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,1488,,"            lVal = reader.readLong(""lVal"");"
124741,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,1489,,"            fltVal = reader.readFloat(""fltVal"");"
124742,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,1490,,"            dblVal = reader.readDouble(""dblVal"");"
124743,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,1491,,"            strVal = reader.readString(""strVal"");"
124744,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,1492,,"            arrVal = reader.readObjectArray(""arrVal"");"
124745,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeConfigVariationsFullApiTest.java,1493,,"            eVal = reader.readEnum(""eVal"");"
124746,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/compute/IgniteComputeCustomExecutorConfigurationSelfTest.java,37,,"            checkStartWithInvalidConfiguration(getConfiguration(""node0"")"
124747,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/continuous/GridEventConsumeSelfTest.java,431,,"                    info(""Event from "" + nodeId + "" ["" + evt.shortDisplay() + ']');"
124748,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/continuous/GridMessageListenSelfTest.java,242,,"            Ignite g = startGrid(""anotherGrid"");"
124749,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/database/BPlusTreeSelfTest.java,1155,,"        }, threads, ""put"");"
124750,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/database/BPlusTreeSelfTest.java,1383,,"                X.println("" --> put("" + row + "")"");"
124751,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/database/BPlusTreeSelfTest.java,1407,,"                X.println("" --> rmv("" + row + "")"");"
124752,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/database/BPlusTreeSelfTest.java,1530,,"        }, 1, ""printLocks"");"
124753,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/database/BPlusTreeSelfTest.java,1696,,"        }, sizeThreadCnt, ""size"");"
124754,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/database/BPlusTreeSelfTest.java,2636,,"                        assertTrue(low + "" <= "" + c.get() + "" <= "" + high, c.get() >= low);"
124755,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/database/IgniteDbPutGetAbstractTest.java,161,,"        X.println(""Put start"");"
124756,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/database/IgniteDbPutGetAbstractTest.java,164,,"            DbValue v0 = new DbValue(i, ""test-value"", i);"
124757,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/database/IgniteDbPutGetAbstractTest.java,416,,"        X.println(""Get start"");"
124758,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/database/IgniteDbPutGetAbstractTest.java,969,,"        final IgniteCache<DbKey, DbValue> cache = cache(""non-primitive"");"
124759,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/datastreamer/DataStreamProcessorSelfTest.java,232,,"            info(""Caught expected exception: "" + e);"
124760,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/datastreamer/DataStreamProcessorSelfTest.java,1043,,"                        cache.put(""key"", threadName);"
124761,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/datastreamer/DataStreamerUpdateAfterLoadTest.java,121,,"        ccfgs.add(cacheConfiguration(CacheAtomicityMode.ATOMIC, 1, ""cache-"" + ccfgs.size()));"
124762,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/failure/FailureProcessorThreadDumpThrottlingTest.java,41,,"@WithSystemProperty(key = IgniteSystemProperties.IGNITE_DUMP_THREADS_ON_FAILURE, value = ""true"")"
124763,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/failure/FailureProcessorThreadDumpThrottlingTest.java,91,,"                new FailureContext(SYSTEM_WORKER_BLOCKED, new Throwable(""Failure context error""));"
124764,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/jobmetrics/GridJobMetricsSelfTest.java,203,,"            assertTrue(""Active = "" + active.value(), res);"
124765,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStorageClassloadingTest.java,87,,"        client.context().distributedMetastorage().write(""hey"", new BamboozleClass(0));"
124766,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStoragePersistentTest.java,78,,"        ignite.context().distributedMetastorage().write(""key"", ""value"");"
124767,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStoragePersistentTest.java,78,,"        ignite.context().distributedMetastorage().write(""key"", ""value"");"
124768,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStoragePersistentTest.java,100,,"        ignite.context().distributedMetastorage().write(""key1"", ""value1"");"
124769,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStoragePersistentTest.java,100,,"        ignite.context().distributedMetastorage().write(""key1"", ""value1"");"
124770,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStoragePersistentTest.java,110,,"        ignite.context().distributedMetastorage().write(""key2"", ""value2"");"
124771,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStoragePersistentTest.java,110,,"        ignite.context().distributedMetastorage().write(""key2"", ""value2"");"
124772,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStoragePersistentTest.java,145,,"        ignite.context().distributedMetastorage().write(""key3"", ""value3"");"
124773,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStoragePersistentTest.java,145,,"        ignite.context().distributedMetastorage().write(""key3"", ""value3"");"
124774,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStoragePersistentTest.java,289,,"        metastorage(3).write(""key4"", ""value4"");"
124775,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStoragePersistentTest.java,289,,"        metastorage(3).write(""key4"", ""value4"");"
124776,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStorageTest.java,134,,"        assertNull(metastorage.read(""key""));"
124777,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStorageTest.java,136,,"        metastorage.write(""key"", ""value"");"
124778,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStorageTest.java,311,,"        assertTrue(metastorage(0).compareAndSet(""key"", null, ""val1""));"
124779,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStorageTest.java,319,,"        assertTrue(metastorage(0).compareAndSet(""key"", ""val1"", ""val3""));"
124780,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStorageTest.java,362,,"        ignite.context().distributedMetastorage().write(""key1"", ""value1"");"
124781,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStorageTest.java,362,,"        ignite.context().distributedMetastorage().write(""key1"", ""value1"");"
124782,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStorageTest.java,364,,"        ignite.context().distributedMetastorage().write(""key2"", ""value2"");"
124783,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStorageTest.java,364,,"        ignite.context().distributedMetastorage().write(""key2"", ""value2"");"
124784,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStorageTest.java,431,,"        metastorage(0).write(""key0"", ""value0"");"
124785,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/DistributedMetaStorageTest.java,431,,"        metastorage(0).write(""key0"", ""value0"");"
124786,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/persistence/DistributedMetaStorageHistoryCacheTest.java,52,,"        DistributedMetaStorageHistoryItem item0 = newHistoryItem(""key0"");"
124787,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/persistence/DistributedMetaStorageHistoryCacheTest.java,76,,"            histCache.put(30L, newHistoryItem(""key1""));"
124788,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/persistence/DmsDataWriterWorkerTest.java,100,,"        metastorage.write(COMMON_KEY_PREFIX + ""dummy1"", ""val1"");"
124789,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/persistence/DmsDataWriterWorkerTest.java,101,,"        metastorage.write(COMMON_KEY_PREFIX + ""dummy2"", ""val2"");"
124790,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/persistence/DmsDataWriterWorkerTest.java,116,,"        write(""key1"", ""val1"");"
124791,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/persistence/DmsDataWriterWorkerTest.java,134,,"        write(""key2"", ""val2"");"
124792,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/persistence/DmsDataWriterWorkerTest.java,135,,"        write(""key1"", ""val3"");"
124793,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/persistence/InMemoryCachedDistributedMetaStorageBridgeTest.java,63,,"        bridge.write(""key"", valBytes);"
124794,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/persistence/InMemoryCachedDistributedMetaStorageBridgeTest.java,73,,"        bridge.write(""key3"", marshaller.marshal(""val3""));"
124795,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/persistence/InMemoryCachedDistributedMetaStorageBridgeTest.java,74,,"        bridge.write(""key1"", marshaller.marshal(""val1""));"
124796,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/persistence/InMemoryCachedDistributedMetaStorageBridgeTest.java,74,,"        bridge.write(""key1"", marshaller.marshal(""val1""));"
124797,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/persistence/InMemoryCachedDistributedMetaStorageBridgeTest.java,75,,"        bridge.write(""key2"", marshaller.marshal(""val2""));"
124798,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/metastorage/persistence/InMemoryCachedDistributedMetaStorageBridgeTest.java,75,,"        bridge.write(""key2"", marshaller.marshal(""val2""));"
124799,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/odbc/OdbcConfigurationValidationSelfTest.java,133,,"        check(new OdbcConfiguration().setEndpointAddress(""127.0.0.1:9998..10000"")"
124800,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/odbc/OdbcEscapeSequenceSelfTest.java,310,,"            ""CAST('12345678-9abc-def0-1234-123456789abc' AS UUID)"","
124801,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/odbc/OdbcEscapeSequenceSelfTest.java,378,,"            ""'2016-08-26'"","
124802,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/odbc/OdbcEscapeSequenceSelfTest.java,430,,"        check(""'13:15:08'"", ""{t '13:15:08'}"");"
124803,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/odbc/OdbcEscapeSequenceSelfTest.java,476,,"            ""'2016-08-26 13:15:08'"","
124804,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/odbc/OdbcEscapeSequenceSelfTest.java,549,,"            ""t OUTER JOIN t2 ON t.id=t2.id"","
124805,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/odbc/OdbcEscapeSequenceSelfTest.java,838,,"            ""ESCAPE '\\'"","
124806,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/rest/handlers/log/GridLogCommandHandlerTest.java,55,,"        Path file = Paths.get(igniteHome + ""/work/log/"" + ""ignite.log"");"
124807,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/rest/handlers/log/GridLogCommandHandlerTest.java,58,,"        file = Paths.get(igniteHome + ""/work/log/"" + ""test.log"");"
124808,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/security/cache/CacheOperationPermissionCheckTest.java,78,,"            c -> c.put(""key"", ""value""),"
124809,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/security/cache/CacheOperationPermissionCheckTest.java,78,,"            c -> c.put(""key"", ""value""),"
124810,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/security/client/ThinClientPermissionCheckTest.java,235,,"            t(c -> c.cache(CACHE).clear(""key""), ""clearKey""),"
124811,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/security/client/ThinClientPermissionCheckTest.java,272,,"            assertThrowsWithCause(() -> client.cache(CACHE).put(""key"", ""value""), ClientAuthorizationException.class);"
124812,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/security/client/ThinClientSslPermissionCheckTest.java,166,,"            t(c -> c.cache(CACHE).clear(""key""), ""clearKey""),"
124813,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/security/client/ThinClientSslPermissionCheckTest.java,204,,"            t(c -> c.cache(cacheName).put(""key"", ""value""), ""put""),"
124814,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/security/sandbox/CacheSandboxTest.java,100,,"            () -> node.cache(TEST_CACHE).invoke(""key"", TEST_PROC),"
124815,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/security/sandbox/DoPrivilegedOnRemoteNodeTest.java,55,,"            ""    }\n"" +"
124816,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/security/sandbox/IgniteOperationsInsideSandboxTest.java,129,,"                    .setCacheStoreFactory(new TestStoreFactory(""1"", ""val""))"
124817,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/security/sandbox/IgniteOperationsInsideSandboxTest.java,179,,"                    cache.put(""key"", ""val"");"
124818,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/security/sandbox/IgniteOperationsInsideSandboxTest.java,180,,"                    cache.putAll(singletonMap(""key"", ""value""));"
124819,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/service/ClosureServiceClientsNodesTest.java,88,,"            log.info(""Iteration: "" + i);"
124820,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/service/GridServiceProcessorAbstractSelfTest.java,163,,"        info(""Deployed service: "" + name);"
124821,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/service/GridServiceProcessorAbstractSelfTest.java,223,,"        info(""Finished waiting for service future: "" + name);"
124822,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/service/GridServiceProcessorAbstractSelfTest.java,648,,"        info(""Cancelled service: "" + name);"
124823,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/service/GridServiceProcessorBatchDeploySelfTest.java,89,,"        assertTrue(""Waiting for services deployment timed out."", latch.await(30, TimeUnit.SECONDS));"
124824,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/service/GridServiceProcessorMultiNodeSelfTest.java,57,,"        info(""Deployed service: "" + name);"
124825,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/service/GridServiceProcessorMultiNodeSelfTest.java,61,,"        info(""Finished waiting for service future: "" + name);"
124826,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/service/GridServiceProcessorMultiNodeSelfTest.java,130,,"        Ignite client = startClientGrid(""client"", getConfiguration(""client""));"
124827,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/service/GridServiceProxyClientReconnectSelfTest.java,45,,"        startGrid(""server"");"
124828,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/service/GridServiceProxyClientReconnectSelfTest.java,49,,"        client.services().deployClusterSingleton(""my-service"", new MyServiceImpl());"
124829,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/service/IgniteServiceProxyTimeoutInitializedTest.java,69,,"            scfg.setName(""testService"");"
124830,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/service/ServiceDeploymentProcessingOnCoordinatorLeftTest.java,46,,"            IgniteFuture fut = ignite2.services().deployNodeSingletonAsync(""testService"","
124831,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/service/ServiceDeploymentProcessingOnCoordinatorLeftTest.java,48,,"            IgniteFuture fut2 = ignite2.services().deployNodeSingletonAsync(""testService2"","
124832,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/service/ServiceDeploymentProcessingOnNodesLeftTest.java,51,,"            IgniteFuture fut = client.services().deployNodeSingletonAsync(""testService"","
124833,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/timeout/GridTimeoutProcessorSelfTest.java,100,,"                    info(""Received timeout callback: "" + this);"
124834,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/timeout/GridTimeoutProcessorSelfTest.java,105,,"                        fail(""Timeout event happened prematurely [endTime="" + endTime + "", now="" + now +"
124835,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/timeout/GridTimeoutProcessorSelfTest.java,105,,"                        fail(""Timeout event happened prematurely [endTime="" + endTime + "", now="" + now +"
124836,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/timeout/GridTimeoutProcessorSelfTest.java,106,,"                            "", obj="" + this + ']');"
124837,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/timeout/GridTimeoutProcessorSelfTest.java,118,,"                    return ""Timeout test object [idx="" + idx + "", endTime="" + endTime + "", id="" + id + ']';"
124838,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/timeout/GridTimeoutProcessorSelfTest.java,118,,"                    return ""Timeout test object [idx="" + idx + "", endTime="" + endTime + "", id="" + id + ']';"
124839,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/timeout/GridTimeoutProcessorSelfTest.java,118,,"                    return ""Timeout test object [idx="" + idx + "", endTime="" + endTime + "", id="" + id + ']';"
124840,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/processors/timeout/GridTimeoutProcessorSelfTest.java,196,,"        }, threads, ""timeout-test-worker"");"
124841,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserAnalyzeSelfTest.java,36,,"        parseValidate(null, ""ANALYZE tbl"", new StatisticsTarget((String)null, ""TBL""));"
124842,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserAnalyzeSelfTest.java,40,,"        parseValidate(null, ""ANALYZE schema.tbl"", new StatisticsTarget(""SCHEMA"", ""TBL""));"
124843,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserBulkLoadSelfTest.java,97,,"            ""copy from 'any.file' into Person (_key, age, firstName, lastName) format csv charset"" +"
124844,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserCreateIndexSelfTest.java,50,,"        parseValidate(null, ""CREATE INDEX idx ON tbl(a)"", null, ""TBL"", ""IDX"", DEFAULT_PROPS, ""A"", false);"
124845,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserCreateIndexSelfTest.java,50,,"        parseValidate(null, ""CREATE INDEX idx ON tbl(a)"", null, ""TBL"", ""IDX"", DEFAULT_PROPS, ""A"", false);"
124846,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserCreateIndexSelfTest.java,50,,"        parseValidate(null, ""CREATE INDEX idx ON tbl(a)"", null, ""TBL"", ""IDX"", DEFAULT_PROPS, ""A"", false);"
124847,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserCreateIndexSelfTest.java,57,,"        parseValidate(null, ""CREATE INDEX IDX ON TBL(COL)"", null, ""TBL"", ""IDX"", DEFAULT_PROPS, ""COL"", false);"
124848,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserCreateIndexSelfTest.java,98,,"        parseValidate(null, ""CREATE INDEX idx ON schema.tbl(a)"", ""SCHEMA"", ""TBL"", ""IDX"", DEFAULT_PROPS, ""A"", false);"
124849,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserCreateIndexSelfTest.java,154,,"            ""Failed to parse SQL statement "" +"
124850,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserDropIndexSelfTest.java,33,,"        parseValidate(null, ""DROP INDEX idx"", null, ""IDX"");"
124851,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserDropIndexSelfTest.java,33,,"        parseValidate(null, ""DROP INDEX idx"", null, ""IDX"");"
124852,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserDropIndexSelfTest.java,44,,"        parseValidate(""SCHEMA"", ""DROP INDEX idx"", ""SCHEMA"", ""IDX"");"
124853,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserDropIndexSelfTest.java,45,,"        parseValidate(""schema"", ""DROP INDEX idx"", ""schema"", ""IDX"");"
124854,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserDropStatisticsSelfTest.java,33,,"        parseValidate(null, ""DROP STATISTICS tbl"", new StatisticsTarget((String)null, ""TBL""));"
124855,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserDropStatisticsSelfTest.java,35,,"        parseValidate(null, ""DROP STATISTICS schema.tbl"", new StatisticsTarget(""SCHEMA"", ""TBL""));"
124856,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserKillQuerySelfTest.java,47,,"        assertKillQuery(""KILL QUERY '"" + nodeId + ""_"" + qryId + ""'"", nodeId, qryId, false);"
124857,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserRefreshStatisticsSelfTest.java,33,,"        parseValidate(null, ""REFRESH STATISTICS tbl"", new StatisticsTarget((String)null, ""TBL""));"
124858,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserRefreshStatisticsSelfTest.java,36,,"            new StatisticsTarget(""SCHEMA"", ""TBL""));"
124859,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserSetStreamingSelfTest.java,57,,"                ""\""ON\"", \""OFF\"", \""1\"", \""0\"")"");"
124860,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserUserSelfTest.java,38,,"        parseValidateCreate(""CREATE USER test WITH PASSWORD 'test'"", ""TEST"", ""test"");"
124861,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/sql/SqlParserUserSelfTest.java,38,,"        parseValidateCreate(""CREATE USER test WITH PASSWORD 'test'"", ""TEST"", ""test"");"
124862,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/HostAndPortRangeTest.java,46,,"        HostAndPortRange expected = new HostAndPortRange(""127.0.0.1"", 8080, 8090);"
124863,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/IgniteExceptionRegistrySelfTest.java,51,,"            registry.onException(""Test "" + i, new Exception(""Test "" + i));"
124864,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/IgniteUtilsSelfTest.java,252,,"            File file = new File(System.getProperty(""java.io.tmpdir"") + File.separator + ""url-http.file"");"
124865,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/IgniteUtilsSelfTest.java,484,,"        col.add(""Test"");"
124866,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/IgniteUtilsSelfTest.java,984,,"            new IgniteThreadFactory(""testscope"", ""ignite-utils-test""));"
124867,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/IgniteUtilsSelfTest.java,984,,"            new IgniteThreadFactory(""testscope"", ""ignite-utils-test""));"
124868,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/IgniteUtilsWorkDirectoryTest.java,67,,"        dfltUserDir = getProperty(""user.dir"");"
124869,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/future/GridFutureAdapterSelfTest.java,58,,"        fut.onDone(""test"");"
124870,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/future/GridFutureAdapterSelfTest.java,64,,"        fut.onDone(new IgniteCheckedException(""TestMessage""));"
124871,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/future/IgniteFutureImplTest.java,86,,"        fut0.onDone(""test"");"
124872,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/future/IgniteFutureImplTest.java,106,,"        IgniteCheckedException err0 = new IgniteCheckedException(""test error"");"
124873,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/future/nio/GridNioFutureSelfTest.java,52,,"        fut.onDone(""test"");"
124874,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/future/nio/GridNioFutureSelfTest.java,58,,"        fut.onDone(new IgniteCheckedException(""TestMessage""));"
124875,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemorySpaceSelfTest.java,65,,"        File tokFile = new File(IgniteSystemProperties.getString(""java.io.tmpdir""), UUID.randomUUID().toString());"
124876,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java,663,,"            assertEquals(""Unexpected message count"", 10, lsnr.getMessageCount());"
124877,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java,971,,"                        error(""Failed to create client: "" + e.getMessage());"
124878,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridRoundTripTest.java,98,,"                System.out.println("">>>>>>> ["" + start + ""] sending message, "" + msg.length + "" bytes"");"
124879,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridRoundTripTest.java,98,,"                System.out.println("">>>>>>> ["" + start + ""] sending message, "" + msg.length + "" bytes"");"
124880,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/nio/impl/GridNioFilterChainSelfTest.java,165,,"        assertEquals(""DCBA"", connectedEvt.get());"
124881,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/offheap/GridOffHeapPartitionedMapAbstractSelfTest.java,485,,"        info(""Stats [size="" + map.size() + "", rehashes="" + rehashes + "", releases="" + releases + ']');"
124882,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/offheap/GridOffHeapPartitionedMapAbstractSelfTest.java,485,,"        info(""Stats [size="" + map.size() + "", rehashes="" + rehashes + "", releases="" + releases + ']');"
124883,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/offheap/GridOffHeapPartitionedMapAbstractSelfTest.java,485,,"        info(""Stats [size="" + map.size() + "", rehashes="" + rehashes + "", releases="" + releases + ']');"
124884,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/offheap/GridOffHeapPartitionedMapPerformanceAbstractTest.java,114,,"        info(""Warming up..."");"
124885,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/offheap/GridOffHeapPartitionedMapPerformanceAbstractTest.java,118,,"        info(""Warm up finished."");"
124886,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/offheap/GridOffHeapPartitionedMapPerformanceAbstractTest.java,208,,"            info(""Putting "" + (ops * 1000) / step + "" ops/sec"");"
124887,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/offheap/GridOffHeapPartitionedMapPerformanceAbstractTest.java,208,,"            info(""Putting "" + (ops * 1000) / step + "" ops/sec"");"
124888,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/tostring/CircularStringBuilderSelfTest.java,50,,"        testSB(3, ""1234"", 2, ""234"");"
124889,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/tostring/GridToStringBuilderSelfTest.java,132,,"        info(GridToStringBuilder.toString(ArrayList.class, list1, ""name"", list2));"
124890,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/tostring/GridToStringBuilderSelfTest.java,372,,"        assertTrue(""Can't find \""... and 1 more\"" in overflowed array string!"","
124891,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/tostring/GridToStringBuilderSelfTest.java,373,,"            GridToStringBuilder.arrayToString(byteArr).contains(""... and 1 more""));"
124892,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/internal/util/tostring/GridToStringBuilderSelfTest.java,685,,"        @SuppressWarnings(""unused"")"
124893,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/jvmtest/BlockingQueueTest.java,51,,"            X.println("">>>"");"
124894,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/jvmtest/NetworkFailureTest.java,60,,"                        X.println(""Socket [timeout="" + sock.getSoTimeout() + "", linger="" + sock.getSoLinger() +"
124895,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/jvmtest/NetworkFailureTest.java,60,,"                        X.println(""Socket [timeout="" + sock.getSoTimeout() + "", linger="" + sock.getSoLinger() +"
124896,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/jvmtest/NetworkFailureTest.java,61,,"                            "", sndBuf="" + sock.getSendBufferSize() + "", sndBuf="" + sock.getSendBufferSize() + ']');"
124897,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/jvmtest/NetworkFailureTest.java,130,,"            ""client"""
124898,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/jvmtest/NetworkFailureTest.java,162,,"                            "", NODELAY="" + sock.getTcpNoDelay() + ']');"
124899,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/jvmtest/ReadWriteLockMultiThreadedTest.java,36,,"    @SuppressWarnings({""LockAcquiredButNotSafelyReleased""})"
124900,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/lang/GridMetadataAwareAdapterSelfTest.java,59,,"        assert ma.addMeta(attr1, ""val1"") == null;"
124901,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/lang/GridXSelfTest.java,84,,"        TestCloneable cloneable = new TestCloneable(""Some string value"");"
124902,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/lang/utils/GridCircularBufferPerformanceTest.java,52,,"                    info(""Ops/sec: "" + cnt.sumThenReset() / 5);"
124903,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/lang/utils/GridCircularBufferPerformanceTest.java,73,,"        info(""Buffer: "" + buf);"
124904,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/lang/utils/GridCircularBufferSelfTest.java,42,,"            info(""Created buffer: "" + buf);"
124905,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/lang/utils/GridConcurrentLinkedHashMapSelfTest.java,80,,"            tst.put(i, ""value"" + i);"
124906,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/lang/utils/GridConcurrentLinkedHashMapSelfTest.java,223,,"            assert nextVal == i : ""Unexpected value: "" + i;"
124907,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/lang/utils/GridLeanMapSelfTest.java,50,,"            fail(""NoSuchElementException must have been thrown."");"
124908,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/lang/utils/GridLeanMapSelfTest.java,53,,"            info(""Caught expected exception: "" + e);"
124909,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/lang/utils/GridLeanMapSelfTest.java,77,,"            fail(""IllegalStateException must have been thrown."");"
124910,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/lang/utils/GridLeanMapSelfTest.java,376,,"        checkImpl(map, ""LeanHashMap"");"
124911,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/lang/utils/GridLeanMapSelfTest.java,453,,"        checkImpl(map, ""Map4"");"
124912,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/lang/utils/IgniteOffheapReadWriteLockSelfTest.java,108,,"                                    assertEquals(""Failed check for index: "" + i1, pair.a, -pair.b);"
124913,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/lang/utils/IgniteOffheapReadWriteLockSelfTest.java,125,,"        }, 32, ""tester"");"
124914,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/lang/utils/IgniteOffheapReadWriteLockSelfTest.java,130,,"            info(""Reads: "" + reads.getAndSet(0) + "", writes="" + writes.getAndSet(0));"
124915,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/loadtests/GridSingleExecutionTest.java,283,,"            assert results != null : ""Unexpected result [results="" + results + ']';"
124916,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/loadtests/cache/GridCacheBenchmark.java,94,,"                            X.println("">>> Performed "" + ops + "" operations."");"
124917,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/loadtests/cache/GridCacheBenchmark.java,151,,"                X.println("">>>"");"
124918,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/loadtests/cache/GridCacheDataStructuresLoadTest.java,124,,"                        info(""Performed "" + cnt + "" writes."");"
124919,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/loadtests/cache/GridCacheDataStructuresLoadTest.java,124,,"                        info(""Performed "" + cnt + "" writes."");"
124920,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/loadtests/cache/GridCacheDataStructuresLoadTest.java,141,,"                        info(""Performed "" + cnt + "" reads."");"
124921,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/loadtests/colocation/GridTestMain.java,54,,"            final IgniteCache<GridTestKey, Long> cache = g.cache(""partitioned"");"
124922,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/loadtests/communication/GridIoManagerBenchmark0.java,365,,"                        info(U.nl() + "">>>"" + U.nl() + "">>> High load."" + U.nl() + "">>>"");"
124923,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/marshaller/GridMarshallerAbstractTest.java,165,,"        cache.put(""key"", ""val"");"
124924,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/marshaller/GridMarshallerAbstractTest.java,165,,"        cache.put(""key"", ""val"");"
124925,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/marshaller/MarshallerContextSelfTest.java,179,,"        MarshallerMappingItem item2 = new MarshallerMappingItem((byte) 2, 2, ""Random.Class.Name"");"
124926,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/messaging/GridMessagingSelfTest.java,212,,"                    log.info(""Received new message [msg="" + msg + "", senderNodeId="" + nodeId + ']');"
124927,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/messaging/GridMessagingSelfTest.java,212,,"                    log.info(""Received new message [msg="" + msg + "", senderNodeId="" + nodeId + ']');"
124928,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/messaging/GridMessagingSelfTest.java,215,,"                        log.error(""Unexpected sender node: "" + nodeId);"
124929,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/messaging/GridMessagingSelfTest.java,376,,"                        "", topic="" + S_TOPIC_1 + ']');"
124930,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/messaging/GridMessagingSelfTest.java,387,,"                        log.error(""Unexpected message "" + msg + "" for topic: "" + S_TOPIC_1);"
124931,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/messaging/GridMessagingSelfTest.java,387,,"                        log.error(""Unexpected message "" + msg + "" for topic: "" + S_TOPIC_1);"
124932,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/p2p/GridP2PComputeWithNestedEntryProcessorTest.java,202,,"        U.invoke(TEST_CLASS_LOADER.loadClass(COMPOSITE_FILTER_NAME), compositeFilter, ""addPredicate"", firstFilter);"
124933,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/p2p/GridP2PLocalDeploymentSelfTest.java,120,,"                new URL[] {new URL(GridTestProperties.getProperty(""p2p.uri.cls""))}, getClass().getClassLoader());"
124934,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/p2p/GridP2PLocalDeploymentSelfTest.java,126,,"            Class taskCls = ldr1.loadClass(""org.apache.ignite.tests.p2p.P2PTestTaskExternalPath1"");"
124935,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/p2p/SharedDeploymentTest.java,67,,"                new URL(GridTestProperties.getProperty(""p2p.uri.cls""))}, RUN_CLS1/*, RUN_CLS2*/), ignite2, 10_000, 1);"
124936,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/platform/PlatformDeployServiceTask.java,627,,"                case ""InterruptedException"": throw new InterruptedException(""Test"");"
124937,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/platform/PlatformEventsWriteEventTask.java,101,,"                ctx.writeEvent(writer, new CacheEvent(""cacheName"", node, node, ""msg"", evtType, 1, true, 2,"
124938,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/platform/PlatformEventsWriteEventTask.java,102,,"                    igniteUuid, ""txLabel"", 3, 4, true, 5, true, uuid, ""cloClsName"", ""taskName""));"
124939,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/session/GridSessionSetJobAttributeOrderSelfTest.java,77,,"                    "", expected="" + SETS_ATTR_COUNT + ']';"
124940,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/session/GridSessionWaitAttributeSelfTest.java,227,,"            String key = createKey(""fut"", type, i);"
124941,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/session/GridSessionWaitAttributeSelfTest.java,268,,"                            ""Failed to wait for attribute [key="" + key + "", val="" + val + "", receivedVal="" + obj + ']';"
124942,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/session/GridSessionWaitAttributeSelfTest.java,268,,"                            ""Failed to wait for attribute [key="" + key + "", val="" + val + "", receivedVal="" + obj + ']';"
124943,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/session/GridSessionWaitAttributeSelfTest.java,268,,"                            ""Failed to wait for attribute [key="" + key + "", val="" + val + "", receivedVal="" + obj + ']';"
124944,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/GridTcpSpiForwardingSelfTest.java,83,,"            ipFinder.setAddresses(Arrays.asList(""127.0.0.1:"" + locPort1, ""127.0.0.1:"" + locPort2));"
124945,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/GridTcpSpiForwardingSelfTest.java,110,,"        cfg.setLocalHost(""127.0.0.1"");"
124946,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/collision/GridTestCollisionTaskSession.java,65,,"        assert false : ""Not implemented"";"
124947,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/collision/jobstealing/GridJobStealingCollisionSpiAttributesSelfTest.java,141,,"        rmtNode.setAttribute(""useCollision"", true);"
124948,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/communication/GridCacheMessageSelfTest.java,397,,"                    if (!writer.writeString(""body"", body))"
124949,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/communication/GridCacheMessageSelfTest.java,403,,"                    if (!writer.writeMessage(""msg"", msg))"
124950,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/communication/GridCacheMessageSelfTest.java,544,,"                    if (!writer.writeUuid(""nodeId"", nodeId))"
124951,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/communication/tcp/GridSandboxedClientWithoutNetworkTest.java,99,,"        IgniteCache<String, String> testCache = client1.getOrCreateCache(""test"");"
124952,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/communication/tcp/GridTcpCommunicationSpiRecoverySelfTest.java,335,,"                    assertTrue(""Failed to wait for session close"", ses0.closeTime() != 0);"
124953,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/communication/tcp/TcpCommunicationSpiHalfOpenedConnectionTest.java,137,,"        ConcurrentMap<?, GridNioRecoveryDescriptor> recoveryDescs = GridTestUtils.getFieldValue(commSpi, ""nioSrvWrapper"", ""recoveryDescs"");"
124954,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/communication/tcp/TcpCommunicationSpiMultiJvmTest.java,148,,"        localAddrStr = ""127.0.0.1"";"
124955,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/deployment/local/GridLocalDeploymentSpiSelfTest.java,96,,"        String taskName = ""GridDeploymentTestTask"";"
124956,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/AbstractDiscoverySelfTest.java,319,,"                            node.id() + "", spiIdx="" + spis.indexOf(spi) + ']');"
124957,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/IgniteDiscoveryCacheReuseSelfTest.java,92,,"            assertNotSame(U.field(discoCache1, ""alives""), U.field(discoCache2, ""alives""));"
124958,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpClientDiscoverySpiFailureTimeoutSelfTest.java,121,,"        assertTrue(((TcpDiscoverySpi)(G.ignite(""server-0"").configuration().getDiscoverySpi()))."
124959,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpClientDiscoverySpiFailureTimeoutSelfTest.java,126,,"        assertTrue(((TcpDiscoverySpi)(G.ignite(""client-0"").configuration().getDiscoverySpi()))."
124960,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpClientDiscoverySpiFailureTimeoutSelfTest.java,461,,"                    U.dumpStack(log, ""Before sleep [msg="" + msg +"
124961,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpClientDiscoverySpiFailureTimeoutSelfTest.java,474,,"                throw new SocketTimeoutException(""Write to socket delay timeout exception."");"
124962,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpClientDiscoverySpiSelfTest.java,384,,"        stopGrid(""client-2"");"
124963,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpClientDiscoverySpiSelfTest.java,453,,"        stopGrid(""server-2"");"
124964,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpClientDiscoverySpiSelfTest.java,494,,"        Ignite srv0 = G.ignite(""server-0"");"
124965,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpClientDiscoverySpiSelfTest.java,495,,"        Ignite srv1 = G.ignite(""server-1"");"
124966,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpClientDiscoverySpiSelfTest.java,496,,"        Ignite client = G.ignite(""client-0"");"
124967,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpClientDiscoverySpiSelfTest.java,642,,"            Collections.singleton(""localhost:"" + srv0Node.discoveryPort()));"
124968,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpClientDiscoverySpiSelfTest.java,905,,"            Ignite g = startGrid(""server-"" + srvIdx.getAndIncrement());"
124969,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpClientDiscoverySpiSelfTest.java,1202,,"            Ignite g = G.ignite(""client-"" + i);"
124970,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoveryIpFinderFailureTest.java,76,,"        dynamicIpFinder.setAddresses(Collections.singleton(""127.0.0.1:47500""));"
124971,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoveryIpFinderFailureTest.java,176,,"        IgniteConfiguration cfgSrv = getConfigurationDynamicIpFinder(""Server1"", false);"
124972,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoveryPendingMessageDeliveryTest.java,70,,"        else if (igniteInstanceName.startsWith(""listener""))"
124973,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoveryPendingMessageDeliveryTest.java,111,,"        assertTrue(""Sent: "" + sentEnsuredMsgs + ""; received: "" + receivedEnsuredMsgs,"
124974,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoveryPendingMessageDeliveryTest.java,111,,"        assertTrue(""Sent: "" + sentEnsuredMsgs + ""; received: "" + receivedEnsuredMsgs,"
124975,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySelfTest.java,155,,"            spi = igniteInstanceName.contains(""testPingInterruptedOnNodeFailedFailingNode"") ?"
124976,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySelfTest.java,360,,"            info(""Nodes were started"");"
124977,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySelfTest.java,2401,,"                    log.info(""Fail write on message send [node="" + node.id() + "", msg="" + msg + ']');"
124978,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpiMBeanTest.java,110,,"                    assertTrue(discoReg.<LongMetric>findMetric(""CoordinatorSince"").value() > 0);"
124979,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpiReconnectDelayTest.java,85,,"            Ignite ignite1 = G.start(getConfiguration(""server"", false, reconnectDelay));"
124980,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpiReconnectDelayTest.java,154,,"            assertEquals(""Unexpected number of messages"", expNumOfMessages, numOfMessages);"
124981,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySslParametersTest.java,68,,"                    ""TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"","
124982,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySslParametersTest.java,69,,"                    ""TLS_RSA_WITH_AES_128_GCM_SHA256"","
124983,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySslParametersTest.java,70,,"                    ""TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"""
124984,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySslParametersTest.java,153,,"                    ""TLSv1.1"","
124985,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySslParametersTest.java,154,,"                    ""SSLv3"""
124986,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySslParametersTest.java,158,,"                    ""TLSv1.2"","
124987,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySslSecuredUnsecuredTest.java,72,,"        checkConnection(""plain-server"", ""ssl-server"");"
124988,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySslSecuredUnsecuredTest.java,72,,"        checkConnection(""plain-server"", ""ssl-server"");"
124989,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySslTrustedUntrustedTest.java,57,,"        checkDiscoverySuccess(""node01"", ""trustone"", ""node01"", ""trustone"");"
124990,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySslTrustedUntrustedTest.java,57,,"        checkDiscoverySuccess(""node01"", ""trustone"", ""node01"", ""trustone"");"
124991,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySslTrustedUntrustedTest.java,65,,"        checkDiscoverySuccess(""node02"", ""trusttwo"", ""node03"", ""trusttwo"");"
124992,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySslTrustedUntrustedTest.java,65,,"        checkDiscoverySuccess(""node02"", ""trusttwo"", ""node03"", ""trusttwo"");"
124993,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySslTrustedUntrustedTest.java,65,,"        checkDiscoverySuccess(""node02"", ""trusttwo"", ""node03"", ""trusttwo"");"
124994,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySslTrustedUntrustedTest.java,73,,"        checkDiscoverySuccess(""node01"", ""trustboth"", ""node02"", ""trustboth"", ""node03"", ""trustboth"");"
124995,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/ipfinder/vm/TcpDiscoveryVmIpFinderDnsResolveTest.java,99,,"        addrs.add(BAD_FQDN + "":47500"");"
124996,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/ipfinder/vm/TcpDiscoveryVmIpFinderDnsResolveTest.java,219,,"        log.info(""Resolved addresses are "" + resolved);"
124997,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/ipfinder/vm/TcpDiscoveryVmIpFinderSelfTest.java,68,,"            info(""Caught expected exception: "" + e);"
124998,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/encryption/KeystoreEncryptionSpiSelfTest.java,46,,"            encSpi.spiStart(""default"");"
124999,./TargetProjects/ignite/modules/core/src/test/java/org/apache/ignite/spi/eventstorage/memory/GridMemoryEventStorageSpiSelfTest.java,69,,"        assert evts != null : ""Events can't be null."";"
