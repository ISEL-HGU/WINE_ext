25000,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/adapter/clone/ArrayTable.java,102,,"      @SuppressWarnings(""unchecked"")"
25001,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/adapter/enumerable/EnumUtils.java,509,,"              ""toString"","
25002,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/adapter/enumerable/PhysTypeImpl.java,343,,"                          : ""compare"","
25003,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/plan/RelRule.java,223,,"      Objects.requireNonNull(done, ""done"");"
25004,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/plan/hep/HepPlanner.java,185,,"    if ((rel == root) || (rel == requireNonNull(root, ""root"").getCurrentRel())) {"
25005,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/plan/hep/HepPlanner.java,227,,"    assert currentProgram != null : ""currentProgram must not be null"";"
25006,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/plan/hep/HepPlanner.java,413,,"    requireNonNull(currentProgram, ""currentProgram"");"
25007,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/plan/volcano/RelSubset.java,203,,"  @API(since = ""1.23"", status = API.Status.EXPERIMENTAL)"
25008,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java,359,,"      desc.item(""group"", group).item(""upperBound"", upperBound);"
25009,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java,359,,"      desc.item(""group"", group).item(""upperBound"", upperBound);"
25010,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java,415,,"      desc.item(""mExpr"", mExpr).item(""explore"", explore);"
25011,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java,1531,,"  @API(since = ""1.24"", status = API.Status.EXPERIMENTAL)"
25012,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/prepare/PlannerImpl.java,154,,"    return requireNonNull(planner, ""planner"").emptyTraitSet();"
25013,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/profile/Profiler.java,117,,"      map.put(""type"", ""rowCount"");"
25014,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/core/Correlate.java,101,,"    this.joinType = requireNonNull(joinType, ""joinType"");"
25015,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/core/Filter.java,79,,"    this.condition = requireNonNull(condition, ""condition"");"
25016,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/core/JoinRelType.java,159,,"  @API(since = ""1.28"", status = API.Status.EXPERIMENTAL)"
25017,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/core/TableModify.java,127,,"      requireNonNull(updateColumnList, ""updateColumnList"");"
25018,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/core/Values.java,98,,"        input.getTuples(""tuples""), input.getTraitSet());"
25019,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/externalize/RelJson.java,108,,"  @SuppressWarnings(""unchecked"")"
25020,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/externalize/RelJson.java,123,,"    String type = get(map, ""type"");"
25021,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/externalize/RelJson.java,191,,"      map.put(""field"", fieldCollation.getFieldIndex());"
25022,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/externalize/RelJson.java,192,,"      map.put(""direction"", fieldCollation.getDirection().name());"
25023,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/externalize/RelJson.java,247,,"        builder.add(get(jsonMap, ""name""), toType(typeFactory, jsonMap));"
25024,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/externalize/RelJson.java,294,,"      component = requireNonNull(map.get(""component""), ""component"");"
25025,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/externalize/RelJson.java,320,,"      aggMap.put(""class"", node.getAggregation().getClass().getName());"
25026,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/externalize/RelJson.java,422,,"      map.put(""expr"", toJson(fieldAccess.getReferenceExpr()));"
25027,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/externalize/RelJson.java,497,,"        map.put(""rows-lower"", toJson(window.getLowerBound()));"
25028,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/externalize/RelJson.java,499,,"        map.put(""range-lower"", toJson(window.getLowerBound()));"
25029,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/externalize/RelJsonReader.java,88,,"    @SuppressWarnings(""unchecked"")"
25030,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/hint/RelHint.java,202,,"          ""List options and key value options can not be mixed in"");"
25031,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/metadata/JaninoRelMetadataProvider.java,221,,"          .append(""      "")"
25032,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/metadata/JaninoRelMetadataProvider.java,233,,"    buff.append(""  }\n"")"
25033,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/metadata/JaninoRelMetadataProvider.java,270,,"          .append("");\n"")"
25034,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/metadata/RelMdPredicates.java,543,,"    @SuppressWarnings(""JdkObsolete"")"
25035,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/rules/LoptMultiJoin.java,449,,"  @RequiresNonNull({""joinStart"", ""nFieldsInJoinFactor""})"
25036,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rel/rules/LoptMultiJoin.java,449,,"  @RequiresNonNull({""joinStart"", ""nFieldsInJoinFactor""})"
25037,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rex/RexLiteral.java,519,,"          return litmus.fail(""not a constant: {}"", o1);"
25038,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/rex/RexSimplify.java,1802,,"  @SuppressWarnings(""BetaApi"")"
25039,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/runtime/CalciteResource.java,597,,"  @Property(name = ""FeatureDefinition"", value = ""SQL:2003 Part 2 Annex F"")"
25040,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/runtime/CalciteResource.java,597,,"  @Property(name = ""FeatureDefinition"", value = ""SQL:2003 Part 2 Annex F"")"
25041,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/runtime/CalciteResource.java,629,,"  @Property(name = ""FeatureDefinition"", value = ""Eigenbase-defined"")"
25042,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/runtime/FlatLists.java,329,,"        throw new IndexOutOfBoundsException(""index "" + index);"
25043,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/runtime/FlatLists.java,386,,"    @SuppressWarnings({""unchecked"" })"
25044,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/runtime/GeoFunctions.java,207,,"  @Hints({""SqlKind:ST_MAKE_LINE""})"
25045,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/runtime/HttpUtils.java,49,,"        out.append(URLEncoder.encode(me.getKey(), ""UTF-8""))"
25046,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql/SqlBasicTypeNameSpec.java,137,,"      return litmus.fail(""{} != {}"", this, node);"
25047,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql/SqlIntervalQualifier.java,484,,"    String intervalPattern = ""(\\d+)"";"
25048,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql/SqlLiteral.java,290,,"    requireNonNull(value, ""value"");"
25049,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql/SqlNodeList.java,132,,"  @SuppressWarnings(""return.type.incompatible"")"
25050,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql/SqlRowTypeNameSpec.java,106,,"      return litmus.fail(""{} != {}"", this, node);"
25051,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql/fun/SqlLibraryOperators.java,162,,"      new SqlFunction(""SUBSTR"", SqlKind.SUBSTR_BIG_QUERY,"
25052,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql/validate/SqlConformance.java,38,,"  @SuppressWarnings(""unused"")"
25053,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql/validate/SqlNonNullableAccessors.java,50,,"  @API(since = ""1.27"", status = API.Status.EXPERIMENTAL)"
25054,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java,479,,"        for (ScopeChild child : requireNonNull(scope, ""scope"").children) {"
25055,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java,1260,,"        () -> ""namespace for "" + node);"
25056,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java,1807,,"    requireNonNull(node, ""node"");"
25057,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql/validate/implicit/TypeCoercionImpl.java,113,,"          requireNonNull(scope, ""scope""), query, columnIndex, targetType);"
25058,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql2rel/SqlToRelConverter.java,3780,,"      assert field != null : ""column "" + p.left + "" not found"";"
25059,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql2rel/SqlToRelConverter.java,3780,,"      assert field != null : ""column "" + p.left + "" not found"";"
25060,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql2rel/SqlToRelConverter.java,3946,,"        requireNonNull(call.getSourceSelect(), () -> ""sourceSelect for "" + call),"
25061,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql2rel/StandardConvertletTable.java,478,,"        : ""componentType of "" + msType + "" must be struct"";"
25062,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/sql2rel/StandardConvertletTable.java,478,,"        : ""componentType of "" + msType + "" must be struct"";"
25063,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/statistic/MapSqlStatisticProvider.java,46,,"        .put(""foodmart"", ""agg_c_14_sales_fact_1997"", 86_805, ""id"")"
25064,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/statistic/MapSqlStatisticProvider.java,71,,"        .put(""tpcds"", ""CALL_CENTER"", 8, ""id"")"
25065,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/statistic/QuerySqlStatisticProvider.java,98,,"              throw new AssertionError(""expected exactly 1 row: "" + sql);"
25066,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/util/BuiltInMethod.java,169,,"  DATA_CONTEXT_GET(DataContext.class, ""get"", String.class),"
25067,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/util/BuiltInMethod.java,432,,"  REGEXP_REPLACE3(SqlFunctions.class, ""regexpReplace"", String.class,"
25068,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/util/ChunkList.java,317,,"            end = occupied(requireNonNull(chunk, ""chunk""));"
25069,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/util/ImmutableBeans.java,141,,"        throw new IllegalArgumentException(""method '"" + methodName"
25070,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/util/ImmutableBitSet.java,1009,,"        throw new IllegalArgumentException(""can only use builder once"");"
25071,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/util/ImmutableNullableSet.java,90,,"  @SuppressWarnings({""unchecked"", ""StaticPseudoFunctionalStyleMethod""})"
25072,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/util/PartiallyOrderedSet.java,489,,"                : node1.e + "" is less than "" + node2.e + "" but """
25073,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/util/PartiallyOrderedSet.java,489,,"                : node1.e + "" is less than "" + node2.e + "" but """
25074,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/util/Sources.java,96,,"    return source.protocol().equals(""file"");"
25075,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/util/Util.java,2633,,"  @API(since = ""1.27"", status = API.Status.EXPERIMENTAL)"
25076,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/util/graph/DefaultDirectedGraph.java,71,,"    @SuppressWarnings(""unchecked"")"
25077,./TargetProjects/calcite/core/src/main/java/org/apache/calcite/util/mapping/Mappings.java,944,,"            ""source #"" + source + "" has no target in mapping "" + toString());"
25078,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/adapter/clone/ArrayTableTest.java,188,,"    valueSet.add(""foo"");"
25079,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/adapter/enumerable/TypeFinderTest.java,69,,"        + ""  }\n"""
25080,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/jdbc/CalciteRemoteDriverTest.java,181,,"        ""jdbc:avatica:remote:factory="" + LJS);"
25081,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/jdbc/CalciteRemoteDriverTest.java,546,,"    String sql = ""select * from \""foo\"".\""bar\"""";"
25082,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/materialize/LatticeSuggesterTest.java,109,,"    final String q5 = ""select *\n"""
25083,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/materialize/LatticeSuggesterTest.java,146,,"        + ""from \""time_by_day\"" as \""t\"",\n"""
25084,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/materialize/LatticeSuggesterTest.java,150,,"        + ""where \""s\"".\""time_id\"" = \""t\"".\""time_id\""\n"""
25085,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/materialize/LatticeSuggesterTest.java,157,,"    final String g = ""sales_fact_1997"""
25086,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/materialize/LatticeSuggesterTest.java,411,,"        + ""from \""sales_fact_1997\""\n"""
25087,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/materialize/LatticeSuggesterTest.java,494,,"    final String q0 = ""select\n"""
25088,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelOptUtilTest.java,158,,"        Util.toLinux(RelOptUtil.getFullTypeDifferenceString(""source"", t0, ""target"", t1) + ""\n""));"
25089,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelOptUtilTest.java,158,,"        Util.toLinux(RelOptUtil.getFullTypeDifferenceString(""source"", t0, ""target"", t1) + ""\n""));"
25090,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelOptUtilTest.java,273,,"    int leftJoinIndex = empScan.getRowType().getFieldNames().indexOf(""DEPTNO"");"
25091,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,93,,"  public static final String XX = ""{\n"""
25092,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,94,,"      + ""  \""rels\"": [\n"""
25093,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,95,,"      + ""    {\n"""
25094,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,96,,"      + ""      \""id\"": \""0\"",\n"""
25095,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,97,,"      + ""      \""relOp\"": \""LogicalTableScan\"",\n"""
25096,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,98,,"      + ""      \""table\"": [\n"""
25097,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,101,,"      + ""      ],\n"""
25098,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,102,,"      + ""      \""inputs\"": []\n"""
25099,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,103,,"      + ""    },\n"""
25100,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,105,,"      + ""      \""id\"": \""1\"",\n"""
25101,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,112,,"      + ""        },\n"""
25102,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,114,,"      + ""          {\n"""
25103,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,117,,"      + ""          },\n"""
25104,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,123,,"      + ""            }\n"""
25105,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,124,,"      + ""          }\n"""
25106,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,135,,"      + ""        {\n"""
25107,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,137,,"      + ""            \""name\"": \""COUNT\"",\n"""
25108,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,138,,"      + ""            \""kind\"": \""COUNT\"",\n"""
25109,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,139,,"      + ""            \""syntax\"": \""FUNCTION_STAR\""\n"""
25110,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,141,,"      + ""          \""type\"": {\n"""
25111,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,142,,"      + ""            \""type\"": \""BIGINT\"",\n"""
25112,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,143,,"      + ""            \""nullable\"": false\n"""
25113,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,146,,"      + ""          \""operands\"": [\n"""
25114,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,161,,"      + ""          \""distinct\"": false,\n"""
25115,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,164,,"      + ""        }\n"""
25116,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,165,,"      + ""      ]\n"""
25117,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,166,,"      + ""    }\n"""
25118,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,167,,"      + ""  ]\n"""
25119,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,285,,"      + ""              {\n"""
25120,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,288,,"      + ""              }\n"""
25121,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,289,,"      + ""            ],\n"""
25122,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,610,,"        b.scan(""EMP"")"
25123,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,616,,"                        b.field(""ENAME"")),"
25124,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,627,,"        + ""  LogicalTableScan(table=[[scott, EMP]])\n"";"
25125,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,638,,"                builder.field(""SAL""),"
25126,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,660,,"            builder.field(""JOB""),"
25127,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,769,,"            builder.equals(builder.field(0), builder.field(v.get(), ""DEPTNO"")))"
25128,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java,892,,"          + ""    LogicalTableScan(table=[[scott, EMP]])\n"";"
25129,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/plan/volcano/VolcanoPlannerTraitTest.java,119,,"            new NoneLeafRel(cluster, ""noneLeafRel""), ALT_TRAIT);"
25130,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/logical/ToLogicalConverterTest.java,148,,"            .scan(""EMP"")"
25131,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/logical/ToLogicalConverterTest.java,162,,"            .project(builder.field(""DEPTNO""))"
25132,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/logical/ToLogicalConverterTest.java,166,,"        + ""  EnumerableTableScan(table=[[scott, EMP]])\n"";"
25133,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/logical/ToLogicalConverterTest.java,169,,"        + ""  LogicalTableScan(table=[[scott, EMP]])\n"";"
25134,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/logical/ToLogicalConverterTest.java,246,,"        + ""    EnumerableTableScan(table=[[scott, EMP]])\n"";"
25135,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/logical/ToLogicalConverterTest.java,281,,"            .scan(""DEPT"")"
25136,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,217,,"    String query = ""select\n"""
25137,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,223,,"    final String expected = ""SELECT"""
25138,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,226,,"        + ""FROM \""foodmart\"".\""product\""\n"""
25139,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,242,,"        + ""FROM foodmart.product\n"""
25140,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,279,,"        + ""FROM \""foodmart\"".\""product\"""";"
25141,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,294,,"        + ""from \""product\""\n"""
25142,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,308,,"        .scan(""EMP"")"
25143,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,310,,"            b.or(b.isNull(b.field(""COMM"")),"
25144,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,313,,"    final String expected = ""SELECT *\n"""
25145,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,314,,"        + ""FROM \""scott\"".\""EMP\""\n"""
25146,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,357,,"    final String expected = ""SELECT COUNT(*)\n"""
25147,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,391,,"        + ""FROM `foodmart`.`product`"";"
25148,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,414,,"        + ""FROM `foodmart`.`product`\n"""
25149,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,506,,"        + ""GROUP BY \""product_class_id\"""";"
25150,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,547,,"    final String expected = ""SELECT \""product_class_id\"", COUNT(*) AS \""C\""\n"""
25151,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,549,,"        + ""GROUP BY ROLLUP(\""product_class_id\"")\n"""
25152,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,707,,"        + ""FROM \""foodmart\"".\""expense_fact\"""";"
25153,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,798,,"                    .mapToObj(i -> b.equals(b.field(""EMPNO""), b.literal(i)))"
25154,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,813,,"        .scan(""DEPT"")"
25155,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,817,,"              builder.field(2, 1, ""DEPTNO""),"
25156,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,821,,"    final String expectedSql = ""SELECT \""DEPTNO\""\n"""
25157,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,822,,"        + ""FROM \""scott\"".\""DEPT\""\n"""
25158,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,881,,"        + ""WHERE EXISTS (SELECT 1\n"""
25159,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,905,,"        + ""FROM (SELECT *\n"""
25160,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1284,,"        + ""  from \""product\""\n"""
25161,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1290,,"    final String expected = ""SELECT \""product_id\""\n"""
25162,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1302,,"    String query = ""select \""product_id\"" from \""product\""\n"""
25163,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1306,,"        + ""ORDER BY \""net_weight\"""";"
25164,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1375,,"        + ""from \""foodmart\"".\""reserve_employee\"""";"
25165,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1377,,"        + ""FROM foodmart.reserve_employee"";"
25166,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1622,,"    final String query = ""select  * from \""employee\"" where  \""hire_date\"" - """
25167,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1625,,"        + ""FROM foodmart.employee\n"""
25168,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1695,,"    final String expected = ""SELECT product_id\n"""
25169,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1704,,"        + ""FROM foodmart.product"";"
25170,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1730,,"    final String query = ""select *\n"""
25171,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1773,,"    final String query = ""select mod(11,3) from \""product\""\n"""
25172,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1775,,"    final String expected = ""SELECT MOD(11, 3)\n"""
25173,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1778,,"        + ""SELECT 1\n"""
25174,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1788,,"        + ""UNION ALL\n"""
25175,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1818,,"        + ""order by \""product_id\"" desc nulls first"";"
25176,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1823,,"    final String mssqlExpected = ""SELECT [product_id]\n"""
25177,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1824,,"        + ""FROM [foodmart].[product]\n"""
25178,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1833,,"        + ""order by \""product_id\"" nulls last"";"
25179,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1848,,"        + ""order by \""product_id\"" nulls first"";"
25180,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1864,,"        + ""order by \""product_id\"" desc nulls last"";"
25181,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1879,,"    final String query = ""SELECT row_number() over """
25182,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1880,,"        + ""(order by \""hire_date\"" desc nulls first) FROM \""employee\"""";"
25183,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1881,,"    final String expected = ""SELECT ROW_NUMBER() """
25184,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,1883,,"        + ""FROM foodmart.employee"";"
25185,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2028,,"    final String expected = ""SELECT ROW_NUMBER() OVER """
25186,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2050,,"            + ""FROM \""foodmart\"".\""employee\"""";"
25187,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2057,,"    final String expected = ""SELECT `product_id`\n"""
25188,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2068,,"            + ""FROM `foodmart`.`employee`"";"
25189,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2095,,"        + ""ORDER BY `product_id`"";"
25190,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2100,,"    final String query = ""SELECT row_number() """
25191,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2101,,"            + ""over (order by \""hire_date\"" nulls first) FROM \""employee\"""";"
25192,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2102,,"    final String expected = ""SELECT ROW_NUMBER() OVER (ORDER BY `hire_date`)\n"""
25193,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2112,,"        + ""ORDER BY `product_id` DESC"";"
25194,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2118,,"            + ""over (order by \""hire_date\"" desc nulls last) FROM \""employee\"""";"
25195,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2119,,"    final String expected = ""SELECT ROW_NUMBER() OVER (ORDER BY `hire_date` DESC)\n"""
25196,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2376,,"        + ""FETCH NEXT 100 ROWS ONLY"";"
25197,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2488,,"        + ""from \""sales_fact_1997\"" as s\n"""
25198,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2496,,"        + ""FROM \""foodmart\"".\""sales_fact_1997\""\n"""
25199,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2497,,"        + ""INNER JOIN \""foodmart\"".\""customer\"" """
25200,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2500,,"        + ""INNER JOIN \""foodmart\"".\""product\"" """
25201,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2683,,"    final String expected = ""SELECT """
25202,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2700,,"        + ""on A.\""department_id\"" = B.\""department_id\"""";"
25203,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2702,,"        + ""FROM foodmart.employee AS employee\n"""
25204,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2888,,"    final String expected = ""SELECT \""DEPT\"".\""DEPTNO\"","""
25205,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2889,,"        + "" \""EMP\"".\""DEPTNO\"" AS \""DEPTNO0\""\n"""
25206,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,2890,,"        + ""FROM \""SCOTT\"".\""DEPT\""\n"""
25207,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3158,,"    String expected3 = ""SELECT LAG(\""employee_id\"", 1, 'NA') OVER """
25208,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3194,,"            + ""FROM \""foodmart\"".\""employee\""\n"""
25209,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3337,,"    String query = ""SELECT floor(\""hire_date\"" TO MINUTE) FROM \""employee\"""";"
25210,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3380,,"        + ""FROM [foodmart].[employee]"";"
25211,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3424,,"    String queryDatePlus = ""select  * from \""employee\"" where  \""hire_date\"" + """
25212,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3425,,"        + ""INTERVAL '19800' SECOND(5) > TIMESTAMP '2005-10-17 00:00:00' "";"
25213,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3429,,"        + "" > TIMESTAMP '2005-10-17 00:00:00'"";"
25214,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3451,,"        + ""FROM `foodmart`.`employee`\n"""
25215,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3702,,"    String query = ""select \""product_name\"" from \""product\"" a """
25216,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3704,,"        + ""from \""sales_fact_1997\""b """
25217,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3705,,"        + ""where b.\""product_id\"" = a.\""product_id\"")"";"
25218,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3706,,"    String expected = ""SELECT \""product_name\""\n"""
25219,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3710,,"        + ""WHERE \""product_id\"" = \""product\"".\""product_id\"")"";"
25220,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3823,,"        + ""  from \""product\"" match_recognize\n"""
25221,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3824,,"        + ""  (\n"""
25222,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3827,,"        + ""    pattern (strt down+ up+)\n"""
25223,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3828,,"        + ""    define\n"""
25224,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3829,,"        + ""      down as down.\""net_weight\"" < PREV(down.\""net_weight\""),\n"""
25225,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3830,,"        + ""      up as up.\""net_weight\"" > prev(up.\""net_weight\"")\n"""
25226,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3831,,"        + ""  ) mr"";"
25227,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3834,,"        + ""FROM \""foodmart\"".\""product\"") MATCH_RECOGNIZE(\n"""
25228,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3837,,"        + ""ONE ROW PER MATCH\n"""
25229,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3838,,"        + ""AFTER MATCH SKIP TO NEXT ROW\n"""
25230,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3839,,"        + ""PATTERN (\""STRT\"" \""DOWN\"" + \""UP\"" +)\n"""
25231,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3840,,"        + ""DEFINE """
25232,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3841,,"        + ""\""DOWN\"" AS PREV(\""DOWN\"".\""net_weight\"", 0) < """
25233,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3842,,"        + ""PREV(\""DOWN\"".\""net_weight\"", 1), """
25234,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3843,,"        + ""\""UP\"" AS PREV(\""UP\"".\""net_weight\"", 0) > """
25235,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,3844,,"        + ""PREV(\""UP\"".\""net_weight\"", 1))"";"
25236,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,4135,,"        + ""MATCH_RECOGNIZE(\n"""
25237,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,4155,,"        + ""      up as up.\""net_weight\"" > NEXT(up.\""net_weight\"")\n"""
25238,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,4167,,"        + ""NEXT(PREV(\""UP\"".\""net_weight\"", 0), 1))"";"
25239,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,4249,,"        + ""   LAST(DOWN.\""net_weight\"") as bottom_nw,"""
25240,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,4259,,"        + ""FROM \""foodmart\"".\""product\"") """
25241,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,4261,,"        + ""MEASURES """
25242,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,4264,,"        + ""FINAL \""STRT\"".\""net_weight\"" AS \""START_NW\"", """
25243,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,4265,,"        + ""FINAL LAST(\""DOWN\"".\""net_weight\"", 0) AS \""BOTTOM_NW\"", """
25244,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,4282,,"        + ""   measures STRT.\""net_weight\"" as start_nw,"""
25245,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,4662,,"        + ""   SUM(STDN.\""net_weight\"") as avg_stdn"""
25246,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,4854,,"        + ""FROM (VALUES (1, 'x '),\n"""
25247,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,5111,,"    final String query = ""select \""product_class_id\"", collect(\""net_weight\"") """
25248,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,5113,,"        + ""from \""product\"" group by \""product_class_id\"""";"
25249,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,5114,,"    final String expected = ""SELECT \""product_class_id\"", COLLECT(\""net_weight\"") """
25250,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,5680,,"    final String expectedDefault = ""INSERT INTO \""SCOTT\"".\""DEPT\"""""
25251,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,5681,,"        + "" (\""DEPTNO\"", \""DNAME\"", \""LOC\"")\n"""
25252,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,5682,,"        + ""VALUES (1, 'Fred', 'San Francisco'),\n"""
25253,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,5683,,"        + ""(2, 'Eric', 'Washington')"";"
25254,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,5686,,"        + ""SELECT 1, 'Fred', 'San Francisco'\n"""
25255,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,5687,,"        + ""FROM (VALUES (0)) AS \""t\"" (\""ZERO\"")\n"""
25256,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,5689,,"        + ""SELECT 2, 'Eric', 'Washington'\n"""
25257,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,5690,,"        + ""FROM (VALUES (0)) AS \""t\"" (\""ZERO\"")"";"
25258,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java,5762,,"        + ""SELECT ?, ?, ?\n"""
25259,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rules/DateRangeRulesTest.java,196,,"            + "" OR(AND(>=($8, 2000-02-01), <($8, 2000-03-01)),"""
25260,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rules/DateRangeRulesTest.java,197,,"            + "" AND(>=($8, 2000-03-01), <($8, 2000-04-01)),"""
25261,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rules/DateRangeRulesTest.java,198,,"            + "" AND(>=($8, 2000-05-01), <($8, 2000-06-01)))),"""
25262,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rules/DateRangeRulesTest.java,199,,"            + "" AND(AND(>=($8, 2001-01-01), <($8, 2002-01-01)),"""
25263,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rules/DateRangeRulesTest.java,306,,"        is(""AND(AND(>=($9, 2010-01-01 00:00:00), <($9, 2011-01-01 00:00:00)),"""
25264,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rules/DateRangeRulesTest.java,415,,"        is(""false""));"
25265,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rel/rules/SortRemoveRuleTest.java,107,,"              not(containsString(""EnumerableSort""))));"
25266,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexBuilderTest.java,174,,"    assertThat(ts2.toString(), is(""1969-07-21 02:56:15.056""));"
25267,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexBuilderTest.java,183,,"        is(""1969-07-21 02:56:15""));"
25268,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexBuilderTest.java,272,,"    assertThat(ts2.round(1).toString(), is(""1969-07-21 02:56:15 PST""));"
25269,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexBuilderTest.java,325,,"    assertThat(t2.toString(), is(""02:56:15.056""));"
25270,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexBuilderTest.java,345,,"    assertThat(t2.round(1).toString(), is(""02:56:15""));"
25271,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexBuilderTest.java,439,,"      fail(""expected exception, got "" + dateString);"
25272,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexBuilderTest.java,559,,"    final NlsString utf8 = new NlsString(""foobar"", ""UTF8"", SqlCollation.IMPLICIT);"
25273,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexLosslessCastTest.java,133,,"    checkSimplify(cast(vIntNotNull(), nullable(tInt())), ""?0.notNullInt0"");"
25274,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,93,,"        ""(expr#0..1=[{inputs}], expr#2=[+($0, 1)], expr#3=[77], """
25275,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,104,,"        ""(expr#0..1=[{inputs}], expr#2=[+($t0, $t1)], expr#3=[1], """
25276,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,105,,"            + ""expr#4=[+($t0, $t3)], expr#5=[+($t2, $t4)], """
25277,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,488,,"    item = item(input(mapType, 0), literal(""abc""));"
25278,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,499,,"        ""false"");"
25279,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,519,,"        ""true"");"
25280,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,564,,"    checkCnf(nullBool, ""null:BOOLEAN"");"
25281,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,565,,"    checkCnf(and(aRef, bRef), ""AND(?0.a, ?0.b)"");"
25282,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,1019,,"    checkSimplify(isNull(plus(vInt(0), vIntNotNull(1))), ""IS NULL(?0.int0)"");"
25283,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,1027,,"        ""IS NOT NULL(?0.int0)"");"
25284,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,1045,,"    checkSimplify(plus(vInt(), nullInt), ""null:INTEGER"");"
25285,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,1079,,"        ""=(?0.a, 1)"");"
25286,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,1357,,"        ""NOT(?0.bool0)"");"
25287,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,1931,,"    checkSimplify(or(vBool(), vBool()), ""?0.bool0"");"
25288,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,2126,,"    checkSimplify(isNotNull(lt(i0, i2)), ""IS NOT NULL($0)"");"
25289,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,2516,,"        vIntNotNull(0), ""?0.notNullInt0"", ""INTEGER NOT NULL"");"
25290,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,2748,,"        ""IS NOT FALSE(?0.bool0)"", ""IS NOT FALSE(?0.bool0)"", ""?0.bool0"");"
25291,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,2751,,"        ""IS NOT TRUE(?0.bool0)"","
25292,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/rex/RexProgramTest.java,3236,,"    checkSimplify(add(a, zero), ""?0.notNullInt1"");"
25293,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,51,,"          new Emp(10, ""Fred""),"
25294,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,52,,"          new Emp(20, ""Theodore""),"
25295,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,53,,"          new Emp(20, ""Sebastian""),"
25296,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,54,,"          new Emp(30, ""Joe"")));"
25297,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,58,,"          new Dept(20, ""Sales""),"
25298,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,59,,"          new Dept(15, ""Marketing"")));"
25299,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,110,,"                    new Emp(30, ""Greg""))),"
25300,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,115,,"                    new Dept(30, ""Research""),"
25301,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,116,,"                    new Dept(30, ""Development""))),"
25302,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,121,,"            + "" Emp(20, Sebastian), Dept(20, Sales),"""
25303,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,159,,"          equalTo(""[1, 4]""),"
25304,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,493,,"                    new Emp(50, ""Mary""))),"
25305,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,537,,"                    new Emp(20, ""Zoey""),"
25306,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,978,,"                        new Emp(20, ""Lilly""),"
25307,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,1052,,"                        new Emp(15, ""Phyllis""),"
25308,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,1053,,"                        new Emp(18, ""Maddie""),"
25309,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,1054,,"                        new Emp(22, ""Jenny""),"
25310,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java,1055,,"                        new Emp(42, ""Susan""))),"
25311,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,110,,"      ""ABS"",                                               ""2011"", ""2014"", ""c"","
25312,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,110,,"      ""ABS"",                                               ""2011"", ""2014"", ""c"","
25313,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,110,,"      ""ABS"",                                               ""2011"", ""2014"", ""c"","
25314,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,113,,"      ""ADD"",                           ""92"", ""99"", ""2003"","
25315,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,191,,"      ""CURRENT_CATALOG"",                                   ""2011"", ""2014"", ""c"","
25316,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,197,,"      ""CURRENT_SCHEMA"",                                    ""2011"", ""2014"", ""c"","
25317,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,207,,"      ""DAYS"",                                              ""2011"","
25318,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,243,,"      ""ESCAPE"",                        ""92"", ""99"", ""2003"", ""2011"", ""2014"", ""c"","
25319,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,320,,"      ""KEY"",                           ""92"", ""99"","
25320,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,473,,"      ""SELECT"",                        ""92"", ""99"", ""2003"", ""2011"", ""2014"", ""c"","
25321,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,543,,"      ""UPSERT"",                                                            ""c"","
25322,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,731,,"            + ""Was expecting one of:\n"""
25323,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,750,,"            + ""FROM `EMP`"");"
25324,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,755,,"        .fails(""(?s)Encountered \""\\. \\*\"" at .*"");"
25325,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,768,,"        .fails(""(?s)Encountered \""-\"" at .*"")"
25326,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,770,,"        .ok(""SELECT *\n"""
25327,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,897,,"    final String sql = ""select * from emp\n"""
25328,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,900,,"        + ""FROM `EMP`\n"""
25329,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,963,,"            + ""FROM `T`"");"
25330,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,969,,"            + ""FROM `T`\n"""
25331,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,1074,,"        .ok(""SELECT 1\n"""
25332,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,1142,,"    final String sql0 = ""select * from t\n"""
25333,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,1299,,"            + ""FROM `DEPT`\n"""
25334,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,1362,,"        + ""FROM `EMP`,\n"""
25335,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,1363,,"        + ""`DEPT`"";"
25336,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,1704,,"        .fails(""(?s).*Encountered \""time\"" at .*"");"
25337,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,1975,,"        .fails(""(?s)Incorrect syntax near the keyword 'DEFAULT' at .*"");"
25338,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,1999,,"    final String sql = ""select\n"""
25339,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,2054,,"    final String expected = ""SELECT `DEPTNO`\n"""
25340,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,2063,,"    final String sql = ""select deptno from emp\n"""
25341,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,2162,,"        + ""FROM `EMPS`\n"""
25342,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,2227,,"        + ""UNION\n"""
25343,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,2237,,"        .fails(""(?s).*Encountered.*"");"
25344,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,2238,,"    expr(""\""x`y`z\"""").ok(""`x``y``z`"");"
25345,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,2433,,"            + ""EXCEPT\n"""
25346,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,2492,,"        .ok(""(SELECT *\n"""
25347,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,2493,,"            + ""FROM `A`\n"""
25348,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,2496,,"            + ""FROM `A`)"");"
25349,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,2620,,"            + ""INTERSECT\n"""
25350,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,2649,,"            + ""WHERE (3 = 3)"");"
25351,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,2698,,"            + ""FROM (SELECT *\n"""
25352,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,2783,,"    final String sql = ""select * from dept\n"""
25353,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,2870,,"    final String sql1 = ""select * """
25354,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,3088,,"            + ""FROM `FOO`\n"""
25355,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,3098,,"        .ok(""SELECT `A`\n"""
25356,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,3100,,"            + ""ORDER BY `B`, `C`\n"""
25357,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,3101,,"            + ""OFFSET 1 ROWS\n"""
25358,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,3102,,"            + ""FETCH NEXT 2 ROWS ONLY"");"
25359,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,3116,,"            + ""FETCH NEXT 3 ROWS ONLY"");"
25360,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,3194,,"    final String expected1 = ""SELECT A\n"""
25361,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,3195,,"        + ""FROM FOO\n"""
25362,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,3345,,"        .ok(""VALUES (ROW(1))"");"
25363,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,3848,,"    final String expected0 = ""SELECT STREAM *\n"""
25364,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,3864,,"        + ""FROM `ORDERS`\n"""
25365,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,3931,,"    final String expected = ""EXPLAIN PLAN"""
25366,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,3934,,"        + ""FROM `EMPS`"";"
25367,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,3967,,"        .ok(""EXPLAIN PLAN INCLUDING ATTRIBUTES WITH IMPLEMENTATION FOR\n"""
25368,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4061,,"        + ""INSERT INTO `EMPS`\n"""
25369,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4079,,"        + ""FROM `EMPS`)"";"
25370,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4247,,"            + ""WHERE (`EMPNO` = 12)"");"
25371,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4258,,"    final String sql = ""merge into emps e """
25372,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4260,,"        + ""on e.empno = t.empno """
25373,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4261,,"        + ""when matched then update """
25374,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4263,,"        + ""when not matched then insert (name, dept, salary) """
25375,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4264,,"        + ""values(t.name, 10, t.salary * .15)"";"
25376,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4265,,"    final String expected = ""MERGE INTO `EMPS` AS `E`\n"""
25377,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4269,,"        + ""ON (`E`.`EMPNO` = `T`.`EMPNO`)\n"""
25378,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4273,,"        + ""WHEN NOT MATCHED THEN INSERT (`NAME`, `DEPT`, `SALARY`) """
25379,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4274,,"        + ""(VALUES (ROW(`T`.`NAME`, 10, (`T`.`SALARY` * 0.15))))"";"
25380,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4919,,"            + ""FROM `BIDS`"");"
25381,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4946,,"    final String sql = ""select col1,\n"""
25382,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4952,,"        + ""from t\n"""
25383,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4953,,"        + ""order by col1 limit 10"";"
25384,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4958,,"        + ""ORDER BY `COL1`\n"""
25385,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,4959,,"        + ""FETCH NEXT 10 ROWS ONLY"";"
25386,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,6277,,"    final String sql = ""select *\n"""
25387,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,6547,,"    expr(""INTERVAL '--1' HOUR"")"
25388,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,7676,,"        + ""SELECT\n"""
25389,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,7876,,"    sql(""select "" + ident128 + "" from mytable"")"
25390,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,7905,,"            + ""FROM `TBL`"");"
25391,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,7927,,"            + ConversionUtil.TEST_UNICODE_STRING + ""'))"";"
25392,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8090,,"    final String sql = ""SELECT * FROM emp\n"""
25393,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8182,,"        + ""  from t match_recognize\n"""
25394,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8183,,"        + ""  (\n"""
25395,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8186,,"        + ""    pattern (strt down+ up+)\n"""
25396,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8187,,"        + ""    define\n"""
25397,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8188,,"        + ""      down as down.price < PREV(down.price),\n"""
25398,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8189,,"        + ""      up as up.price > prev(up.price)\n"""
25399,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8190,,"        + ""  ) mr"";"
25400,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8192,,"        + ""FROM `T` MATCH_RECOGNIZE(\n"""
25401,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8195,,"        + ""PATTERN (((`STRT` (`DOWN` +)) (`UP` +)))\n"""
25402,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8196,,"        + ""DEFINE """
25403,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8197,,"        + ""`DOWN` AS (`DOWN`.`PRICE` < PREV(`DOWN`.`PRICE`, 1)), """
25404,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8198,,"        + ""`UP` AS (`UP`.`PRICE` > PREV(`UP`.`PRICE`, 1))"""
25405,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8199,,"        + "") AS `MR`"";"
25406,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8463,,"        + ""DEFINE `DOWN` AS (`DOWN`.`PRICE` < PREV(`DOWN`.`PRICE`, 1)), """
25407,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8473,,"        + ""   measures """
25408,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8477,,"        + ""   LAST(DOWN.ts) as bottom_ts,"""
25409,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8489,,"        + ""LAST(`DOWN`.`TS`, 0) AS `BOTTOM_TS`, """
25410,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8502,,"        + ""   measures STRT.ts as start_ts,"""
25411,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8512,,"        + ""MEASURES `STRT`.`TS` AS `START_TS`, """
25412,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8779,,"        + ""   AVG(stdn.price) as stdn_avg"""
25413,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8790,,"        + ""AVG(`STDN`.`PRICE`) AS `STDN_AVG`\n"""
25414,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8807,,"        + ""    subset stdn = (strt, down), stdn2 = (strt, down)\n"""
25415,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8818,,"        + ""SUBSET (`STDN` = (`STRT`, `DOWN`)), (`STDN2` = (`STRT`, `DOWN`))\n"""
25416,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,8914,,"    final String expected = ""SELECT `COL1`,"""
25417,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,9049,,"        .ok(""`FOO` FORMAT JSON"");"
25418,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,9089,,"        .ok(""JSON_QUERY('{\""foo\"": \""bar\""}', """
25419,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,9309,,"    sql(""select unquotedColumn from \""doubleQuotedTable\"""")"
25420,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,9389,,"        + ""empno, ename, deptno from emps"";"
25421,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,9543,,"        + ""from emp /* comment with 'quoted string'? */ as e\n"""
25422,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java,10065,,"      expr(sql.replace(""$op"", op).replace(""$p"", period))"
25423,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,68,,"          ""KEYWORD(()"","
25424,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,76,,"          ""SCHEMA(CATALOG.SALES.NEST)"","
25425,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,112,,"          ""TABLE(EMP)"");"
25426,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,159,,"          ""KEYWORD(EXISTS)"","
25427,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,262,,"          ""COLUMN(EMPNO)"","
25428,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,382,,"      ""COLUMN(EMPNO)\n"""
25429,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,383,,"          + ""TABLE(EMP)\n"";"
25430,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,643,,"            + ""on a.deptno=b.deptno where empno=1"";"
25431,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,732,,"        ""select a.empno, b.deptno from sales.emp a join sales.dept b """
25432,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,761,,"        ""select a.empno, b.deptno from sales.emp a, sales.dept b """
25433,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,1042,,"            + ""COMMENT\n"""
25434,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,1048,,"            + ""RPAREN\n"""
25435,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,1228,,"    expected = ""SELECT * FROM t GROUP BY t. _suggest_"";"
25436,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,1311,,"            + ""KEYWORD(EXISTS)\n"""
25437,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,1353,,"    assertComplete(sql, EMPNO_EMP, null, ImmutableMap.of(""COLUMN(EMPNO)"", ""empno""));"
25438,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,1363,,"    assertComplete(sql, EMPNO_EMP, ""\""EM"", ImmutableMap.of(""COLUMN(EMPNO)"", ""\""EMPNO\""""));"
25439,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java,1446,,"        ""SCHEMA(CATALOG.SALES.NEST)\n"","
25440,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,169,,"      Bug.FNL3_FIXED ? null : ""(?s).*"";"
25441,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,230,,"      ""TINYINT"", ""SMALLINT"", ""INTEGER"", ""BIGINT"","
25442,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,230,,"      ""TINYINT"", ""SMALLINT"", ""INTEGER"", ""BIGINT"","
25443,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,230,,"      ""TINYINT"", ""SMALLINT"", ""INTEGER"", ""BIGINT"","
25444,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,230,,"      ""TINYINT"", ""SMALLINT"", ""INTEGER"", ""BIGINT"","
25445,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,231,,"      ""DECIMAL(5, 2)"", ""REAL"", ""FLOAT"", ""DOUBLE"""
25446,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,231,,"      ""DECIMAL(5, 2)"", ""REAL"", ""FLOAT"", ""DOUBLE"""
25447,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,231,,"      ""DECIMAL(5, 2)"", ""REAL"", ""FLOAT"", ""DOUBLE"""
25448,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,554,,"        ""abc "");"
25449,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,557,,"    checkCastToString(""123"", ""CHAR(3)"", ""123"");"
25450,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,562,,"    checkCastToString(""123.4"", ""CHAR(5)"", ""123.4"");"
25451,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,569,,"        ""VARCHAR(10) NOT NULL"");"
25452,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,618,,"    checkCastToString(""'abc'"", ""CHAR(1)"", ""a"");"
25453,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,619,,"    checkCastToString(""'abc'"", ""CHAR(3)"", ""abc"");"
25454,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,625,,"        ""a x"", ""VARCHAR(4) NOT NULL"");"
25455,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,627,,"        ""a  x"", ""VARCHAR(6) NOT NULL"");"
25456,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,629,,"        ""CHAR(4) NOT NULL"");"
25457,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,632,,"        ""INTEGER NOT NULL"");"
25458,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,800,,"        ""BIGINT NOT NULL"","
25459,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,812,,"        ""DECIMAL(2, 1) NOT NULL"","
25460,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,813,,"        ""1.3"");"
25461,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,821,,"        ""1.2"");"
25462,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,825,,"        ""-1.3"");"
25463,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,867,,"          ""5.0"");"
25464,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,973,,"        ""INTERVAL SECOND NOT NULL"");"
25465,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,985,,"        ""INTERVAL DAY NOT NULL"");"
25466,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1025,,"        ""INTERVAL HOUR TO MINUTE NOT NULL"");"
25467,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1033,,"        ""INTERVAL HOUR TO SECOND NOT NULL"");"
25468,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1064,,"    checkCastToScalarOkay(""1.23454"", ""DECIMAL(8, 4)"", ""1.2345"");"
25469,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1271,,"      tester.checkFails(""cast('15.4' as integer)"", ""xxx"", true);"
25470,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1288,,"        ""1945-02-24 12:42:25"","
25471,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1289,,"        ""TIMESTAMP(0) NOT NULL"");"
25472,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1293,,"        ""12:42:25"","
25473,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1294,,"        ""TIME(0) NOT NULL"");"
25474,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1314,,"        ""1945-02-24"","
25475,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1315,,"        ""DATE NOT NULL"");"
25476,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1460,,"          ""TIMESTAMP(2) NOT NULL"");"
25477,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1606,,"        ""bcd"","
25478,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1616,,"        ""VARCHAR(3)"");"
25479,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1630,,"        ""DOUBLE NOT NULL"","
25480,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1688,,"            + ""when 1, 2 then '1 or 2' """
25481,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1689,,"            + ""when 2 then 'not possible' """
25482,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1690,,"            + ""when 3, 2 then '3' """
25483,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1691,,"            + ""else 'none of the above' """
25484,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1692,,"            + ""end"","
25485,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1694,,"        ""CHAR(17) NOT NULL"");"
25486,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1765,,"        ""VARCHAR(17) NOT NULL"");"
25487,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1807,,"        ""TIMESTAMP(0)"");"
25488,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1841,,"    tester.checkScalar(""{fn CEILING(-2.6)}"", -2, ""DECIMAL(2, 0) NOT NULL"");"
25489,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1893,,"    tester.checkString(""{fn REVERSE('abc')}"", ""cba"", ""VARCHAR(3) NOT NULL"");"
25490,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1897,,"    tester.checkString(""{fn LEFT('abcd', 4)}"", ""abcd"", ""VARCHAR(4) NOT NULL"");"
25491,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1932,,"    tester.checkScalar(""{fn REPEAT('a', -100)}"", """", ""VARCHAR(1) NOT NULL"");"
25492,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1958,,"    tester.checkScalar(""{fn SOUNDEX('Miller')}"", ""M460"", ""VARCHAR(4) NOT NULL"");"
25493,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1961,,"    tester.checkScalar(""{fn SPACE(-100)}"", """", ""VARCHAR(2000) NOT NULL"");"
25494,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1968,,"    tester.checkScalar(""{fn UCASE('xxx')}"", ""XXX"", ""CHAR(3) NOT NULL"");"
25495,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,1981,,"          ""cannot translate call EXTRACT.*"","
25496,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,2020,,"    tester.checkString(""{fn IFNULL('a', 'b')}"", ""a"", ""CHAR(1) NOT NULL"");"
25497,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,2168,,"    tester.checkString("" 'a'||'b' "", ""ab"", ""CHAR(2) NOT NULL"");"
25498,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,2176,,"        ""fedf"","
25499,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,2181,,"        ""VARCHAR NOT NULL"");"
25500,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,2314,,"        ""REAL NOT NULL"","
25501,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,2365,,"        ""INTERVAL YEAR TO MONTH NOT NULL"");"
25502,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,3223,,"        ""FLOAT NOT NULL"","
25503,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,3475,,"    tester.checkScalar(""1+CAST(2 AS ANY)"", ""3"", ""ANY NOT NULL"");"
25504,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,3677,,"        ""[1]"","
25505,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,3678,,"        ""INTEGER NOT NULL MULTISET NOT NULL"");"
25506,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,3697,,"        ""[null]"","
25507,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,3772,,"    tester.checkType(""'a' + - 'b' + 'c'"", ""DECIMAL(19, 9) NOT NULL"");"
25508,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,4362,,"        ""abcdef"","
25509,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,4551,,"            ""546869732069732061207465737420537472696e672e"","
25510,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,4552,,"            ""VARBINARY NOT NULL"");"
25511,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,4723,,"          t.checkString(""left(x'ABCdef', 1)"", ""ab"", ""VARBINARY(3) NOT NULL"");"
25512,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,4797,,"    tester.checkBoolean(""json_exists('{\""foo\"":\""bar\""}', """
25513,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,4837,,"        + ""'lax $' unknown on error)"", ""(?s).*Illegal use of 'NULL'.*"", false);"
25514,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,4839,,"        null, ""BOOLEAN"");"
25515,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,4854,,"        ""100"", ""VARCHAR(2000)"");"
25516,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,4854,,"        ""100"", ""VARCHAR(2000)"");"
25517,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,4879,,"        ""empty"", ""VARCHAR(2000)"");"
25518,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,4897,,"        ""(?s).*Illegal jsonpath spec.*"", true);"
25519,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,4936,,"        ""{\""foo\"":100}"", ""VARCHAR(2000)"");"
25520,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,5003,,"        ""[100]"", ""VARCHAR(2000)"");"
25521,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,5037,,"        ""null"", ""VARCHAR(2000)"");"
25522,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,5072,,"        ""STRING"", ""VARCHAR(20)"");"
25523,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,5199,,"        ""[\""foo\""]"", ""VARCHAR(2000)"");"
25524,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,5296,,"        {""'foo'"", ""'bar'""},"
25525,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,5475,,"            + "".</Body></Article>', '/Article/Title')"","
25526,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,6139,,"        ""DECIMAL(2, 3) NOT NULL"");"
25527,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,6338,,"        ""DECIMAL(2, 1)"","
25528,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,6451,,"  @Tag(""slow"")"
25529,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,6474,,"            pair.left.substring(11) + ""[0-9][0-9]:[0-9][0-9]""),"
25530,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,6475,,"        ""VARCHAR(30) NOT NULL"");"
25531,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,6636,,"    tester.checkScalar(""CURRENT_DATE"", DATE_PATTERN, ""DATE NOT NULL"");"
25532,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,6685,,"        ""2019-02-28"", ""DATE NOT NULL"");"
25533,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,6687,,"        ""2019-06-30"", ""DATE NOT NULL"");"
25534,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,6693,,"        ""2019-12-31"", ""DATE NOT NULL"");"
25535,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,6715,,"        ""2020-02-29"", ""DATE NOT NULL"");"
25536,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7112,,"    tester1.checkString(""greatest('on', 'earth')"", ""on   "", ""CHAR(5) NOT NULL"");"
25537,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7116,,"    tester1.checkScalar(""greatest(false, true)"", true, ""BOOLEAN NOT NULL"");"
25538,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7119,,"    tester2.checkString(""greatest('on', 'earth')"", ""on"", ""VARCHAR(5) NOT NULL"");"
25539,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7127,,"    tester1.checkString(""least('on', 'earth')"", ""earth"", ""CHAR(5) NOT NULL"");"
25540,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7150,,"        ""VARCHAR(20) NOT NULL"");"
25541,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7269,,"    tester.checkBoolean(""(multiset[1, 2, 3, 4, 2] """
25542,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7278,,"            + ""multiset union distinct multiset['c', 'd', 'e'])"","
25543,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7285,,"    tester.checkBoolean(""(multiset['a', 'b', 'c'] """
25544,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7295,,"        ""[null, null]"","
25545,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7379,,"    tester.checkFails(""collect(^*^)"", ""Unknown identifier '\\*'"", false);"
25546,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7391,,"    final String[] values = {""0"", ""CAST(null AS INTEGER)"", ""2"", ""2""};"
25547,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7438,,"    final String[] values = {""'x'"", ""null"", ""'yz'""};"
25548,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7440,,"    t.checkAgg(""string_agg(x,':')"", values, ""x:yz"", 0);"
25549,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7453,,"    final String[] values = {""'x'"", ""'y'""};"
25550,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7459,,"            + ""<CHARACTER>\\)"","
25551,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7528,,"    final String expectedError = ""No match found for function signature """
25552,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7614,,"        ""2008"","
25553,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7954,,"        ""(?s)Cannot apply 'EXTRACT' to arguments of type 'EXTRACT\\(<INTERVAL """
25554,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,7956,,"            + ""form\\(s\\):.*"","
25555,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,8783,,"        ""23:59:59"", ""TIME(0) NOT NULL"");"
25556,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,8831,,"        + ""timestamp '2016-02-24 12:42:25', """
25557,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,8847,,"        + ""timestamp '2014-02-24 12:42:25', """
25558,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,8848,,"        + ""timestamp '2016-02-24 12:42:25')"","
25559,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,9079,,"    tester.checkType(""sum('name')"", ""DECIMAL(19, 9)"");"
25560,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,9140,,"    final String[] values = {""0"", ""CAST(null AS FLOAT)"", ""3"", ""3""};"
25561,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,9550,,"    tester.checkWinAgg(""last_value(x)"", values, ""ROWS 3 PRECEDING"", ""INTEGER"","
25562,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,9552,,"    final String[] values2 = {""1.6"", ""1.2""};"
25563,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,9617,,"        ""false"","
25564,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,9642,,"        ""true"","
25565,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,9716,,"    tester.checkAgg(""bool_and(x)"", values1, true, 0d);"
25566,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,9751,,"    tester.checkAgg(""bool_or(x)"", values1, true, 0d);"
25567,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,9786,,"    tester.checkAgg(""logical_and(x)"", values1, true, 0d);"
25568,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,9821,,"    tester.checkAgg(""logical_or(x)"", values1, true, 0d);"
25569,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,9851,,"    tester.checkAgg(""bit_and(x)"", values, ""2"", 0);"
25570,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java,9858,,"    tester.checkAgg(""bit_and(x)"", new String[]{""CAST(x'02' AS BINARY)""}, ""02"", 0);"
25571,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlTestFactory.java,65,,"          .put(""conformance"", SqlConformanceEnum.DEFAULT)"
25572,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlTests.java,119,,"    buf.append(""SELECT "").append(expr).append("" FROM "");"
25573,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlTests.java,436,,"          + "" col "" + actualColumn"
25574,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/test/SqlTests.java,437,,"          + "" thru line "" + actualLine"
25575,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/validate/LexCaseSensitiveTest.java,106,,"    String sql = ""select empid as EMPID, empid from (\n"""
25576,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/validate/LexCaseSensitiveTest.java,113,,"    String sql = ""select EMPID, empid from\n"""
25577,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/validate/LexCaseSensitiveTest.java,114,,"        + "" (select empid from emps order by emps.deptno)"";"
25578,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/validate/LexCaseSensitiveTest.java,173,,"    String sql = ""select t.empid as EMPID, s.empid from\n"""
25579,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/validate/LexCaseSensitiveTest.java,174,,"        + ""(select * from emps where emps.deptno > 100) t join\n"""
25580,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/validate/LexCaseSensitiveTest.java,175,,"        + ""(select * from emps where emps.deptno < 200) s on t.empid = s.empid"";"
25581,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/validate/SqlValidatorUtilTest.java,78,,"    List<String> nameList = Lists.newArrayList(""col1"", ""COL1"", ""col_ABC"", ""col_abC"");"
25582,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/validate/SqlValidatorUtilTest.java,78,,"    List<String> nameList = Lists.newArrayList(""col1"", ""COL1"", ""col_ABC"", ""col_abC"");"
25583,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/validate/SqlValidatorUtilTest.java,93,,"    List<String> nameList = Lists.newArrayList(""k68s"", ""def"", ""col1"", ""COL1"", ""abc"", ""123"");"
25584,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/validate/SqlValidatorUtilTest.java,93,,"    List<String> nameList = Lists.newArrayList(""k68s"", ""def"", ""col1"", ""COL1"", ""abc"", ""123"");"
25585,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/validate/SqlValidatorUtilTest.java,93,,"    List<String> nameList = Lists.newArrayList(""k68s"", ""def"", ""col1"", ""COL1"", ""abc"", ""123"");"
25586,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/validate/SqlValidatorUtilTest.java,146,,"        ImmutableList.of(""john"", ""paul"", ""ringo"", ""rinGo"");"
25587,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql/validate/SqlValidatorUtilTest.java,146,,"        ImmutableList.of(""john"", ""paul"", ""ringo"", ""rinGo"");"
25588,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql2rel/CorrelateProjectExtractorTest.java,65,,"                    builder.field(v.get(), ""DEPTNO""))))"
25589,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql2rel/RelFieldTrimmerTest.java,69,,"        builder.scan(""EMP"")"
25590,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql2rel/RelFieldTrimmerTest.java,70,,"            .project(builder.field(""EMPNO""), builder.field(""ENAME""), builder.field(""DEPTNO""))"
25591,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql2rel/RelFieldTrimmerTest.java,70,,"            .project(builder.field(""EMPNO""), builder.field(""ENAME""), builder.field(""DEPTNO""))"
25592,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql2rel/RelFieldTrimmerTest.java,70,,"            .project(builder.field(""EMPNO""), builder.field(""ENAME""), builder.field(""DEPTNO""))"
25593,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql2rel/RelFieldTrimmerTest.java,80,,"        + ""  LogicalProject(EMPNO=[$0], ENAME=[$1])\n"""
25594,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql2rel/RelFieldTrimmerTest.java,81,,"        + ""    LogicalTableScan(table=[[scott, EMP]])\n"";"
25595,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql2rel/RelFieldTrimmerTest.java,249,,"    final RelHint aggHint = RelHint.builder(""resource"").build();"
25596,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/sql2rel/RelFieldTrimmerTest.java,339,,"        + ""        LogicalTableScan(table=[[scott, EMP]])\n"";"
25597,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/CalciteAssert.java,820,,"          ImmutableList.of(""GEO""), emptyPath, false);"
25598,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/CalciteAssert.java,862,,"              ""select * from (values\n"""
25599,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/CalciteAssert.java,873,,"              emptyPath, ImmutableList.of(""POST"", ""EMP""),"
25600,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/CalciteAssert.java,1653,,"    @API(since = ""1.22"", status = API.Status.EXPERIMENTAL)"
25601,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/CalciteAssert.java,2032,,"            ""org.hsqldb.jdbcDriver"", ""foodmart""),"
25602,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/CollectionTypeTest.java,66,,"    final String sql = ""select \""ID\"", \""MAPFIELD\""['c'] AS \""MAPFIELD_C\"","""
25603,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/CollectionTypeTest.java,67,,"        + "" \""NESTEDMAPFIELD\"", \""ARRAYFIELD\"" """
25604,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/CollectionTypeTest.java,68,,"        + ""from \""s\"".\""nested\"" """
25605,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/CollectionTypeTest.java,75,,"    String expectedRow = ""ID=2; MAPFIELD_C=4; NESTEDMAPFIELD={a={b=2, c=4}}; """
25606,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/CollectionTypeTest.java,76,,"        + ""ARRAYFIELD=[100, 200, 300]"";"
25607,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/CollectionTypeTest.java,101,,"    final String sql = ""select \""ID\"", \""MAPFIELD\"","""
25608,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ExceptionMessageTest.java,86,,"    rootSchema.add(""test"", new ReflectiveSchema(new TestSchema()));"
25609,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/InterpreterTest.java,271,,"    rootSchema.add(""beatles"", new ScannableTableTest.BeatlesTable());"
25610,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/InterpreterTest.java,286,,"        .returnsRows(""[0]"", ""[10]"", ""[20]"", ""[30]"");"
25611,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/InterpreterTest.java,286,,"        .returnsRows(""[0]"", ""[10]"", ""[20]"", ""[30]"");"
25612,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/InterpreterTest.java,286,,"        .returnsRows(""[0]"", ""[10]"", ""[20]"", ""[30]"");"
25613,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/InterpreterTest.java,286,,"        .returnsRows(""[0]"", ""[10]"", ""[20]"", ""[30]"");"
25614,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/InterpreterTest.java,358,,"    final String sql = ""select * from\n"""
25615,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/InterpreterTest.java,359,,"        + ""(select x, y from (values (cast(NULL as int), cast(NULL as varchar(1))),\n"""
25616,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/InterpreterTest.java,362,,"        + ""(select x, y from (values (cast(NULL as int), cast(NULL as varchar(1)))) as t2(x, y))"";"
25617,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/InterpreterTest.java,363,,"    sql(sql).returnsRows(""[null, null]"");"
25618,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/InterpreterTest.java,379,,"        + ""(select x, y from (values (1, 'a'), (2, 'c'), (4, 'x')) as t2(x, y))"";"
25619,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/InterpreterTest.java,380,,"    sql(sql).returnsRows(""[1, a]"");"
25620,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/InterpreterTest.java,414,,"    sql(sql).returnsRows(""[2, b]"", ""[3, c]"");"
25621,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/InterpreterTest.java,414,,"    sql(sql).returnsRows(""[2, b]"", ""[3, c]"");"
25622,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/InterpreterTest.java,461,,"        + ""(select x, y from (values (1, 'a'), (2, 'b'), (3, 'c')) as t(x, y)) t\n"""
25623,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/InterpreterTest.java,544,,"    sql(""select * from unnest(array[1, 2])"").returnsRows(""[1]"", ""[2]"");"
25624,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/InterpreterTest.java,652,,"    final String sql = ""select *\n"""
25625,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,57,,"        + ""  JdbcToEnumerableConverter\n"""
25626,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,60,,"    final String jdbcSql = ""SELECT *\n"""
25627,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,76,,"        .explainContains(""PLAN=JdbcToEnumerableConverter\n"""
25628,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,106,,"                    + ""        JdbcTableScan(table=[[SCOTT, EMP]])"")"
25629,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,113,,"                + ""FROM \""SCOTT\"".\""EMP\""\n"""
25630,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,163,,"            + ""      JdbcProject(EMPNO=[$0], ENAME=[$1], DEPTNO=[$7])\n"""
25631,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,164,,"            + ""        JdbcTableScan(table=[[SCOTT, EMP]])\n"""
25632,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,165,,"            + ""      JdbcProject(DEPTNO=[$0], DNAME=[$1])\n"""
25633,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,166,,"            + ""        JdbcTableScan(table=[[SCOTT, DEPT]])"")"
25634,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,169,,"        .planHasSql(""SELECT \""t\"".\""EMPNO\"", \""t\"".\""ENAME\"", """
25635,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,172,,"            + ""FROM \""SCOTT\"".\""EMP\"") AS \""t\""\n"""
25636,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,173,,"            + ""INNER JOIN (SELECT \""DEPTNO\"", \""DNAME\""\n"""
25637,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,534,,"        + ""    JdbcTableScan(table=[[foodmart, expense_fact]])\n"";"
25638,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,542,,"            + ""FROM \""foodmart\"".\""expense_fact\"""");"
25639,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,556,,"        .query(""select \""store_id\"", \""account_id\"", \""exp_date\"","""
25640,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,557,,"            + "" \""time_id\"", \""category_id\"", \""currency_id\"", \""amount\"","""
25641,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,559,,"            + "" as \""last_version\"" from \""expense_fact\"""")"
25642,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,594,,"        .planHasSql(""SELECT \""store_id\"", \""account_id\"", \""exp_date\"","""
25643,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,624,,"            + "" last_value(\""time_id\"") over (partition by \""account_id\"""""
25644,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,853,,"      final String iSql = ""INSERT INTO \""foodmart\"".\""expense_fact\""(\n"""
25645,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,854,,"          + "" \""store_id\"", \""account_id\"", \""exp_date\"", \""time_id\"","""
25646,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcAdapterTest.java,855,,"          + "" \""category_id\"", \""currency_id\"", \""amount\"")\n"""
25647,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcFrontJdbcBackLinqMiddleTest.java,123,,"            + ""  join \""foodmart\"".\""customer\"" as c\n"""
25648,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcFrontLinqBackTest.java,67,,"        .query(""select *\n"""
25649,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcFrontLinqBackTest.java,93,,"            + ""from \""hr\"".\""emps\"" as e\n"""
25650,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcFrontLinqBackTest.java,228,,"    with.query(""select count(*) as c from \""foo\"".\""bar\"""")"
25651,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,178,,"  public static final String FOODMART_SCHEMA = ""     {\n"""
25652,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,179,,"      + ""       type: 'jdbc',\n"""
25653,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,181,,"      + ""       jdbcDriver: "" + q(CalciteAssert.DB.foodmart.driver) + "",\n"""
25654,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,187,,"      + ""     }\n"";"
25655,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,189,,"  public static final String FOODMART_MODEL = ""{\n"""
25656,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,190,,"      + ""  version: '1.0',\n"""
25657,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,192,,"      + ""   schemas: [\n"""
25658,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,194,,"      + ""   ]\n"""
25659,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,225,,"      + ""',\n"""
25660,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,268,,"    return Stream.of(""text"", ""dot"");"
25661,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,268,,"    return Stream.of(""text"", ""dot"");"
25662,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,278,,"          ""select \""name\"", \""empid\"" as e, \""salary\"" """
25663,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,281,,"      with.query(""select \""name\"" from \""adhoc\"".V order by \""name\"""")"
25664,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,287,,"              statement.executeQuery(""explain plan for\n"""
25665,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,324,,"            fail(""expected error, got "" + s);"
25666,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,382,,"              + ""from \""MUTABLE_EMPLOYEES\""\n"""
25667,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,455,,"        DriverManager.getConnection(""jdbc:calcite:"");"
25668,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,457,,"    ResultSet resultSet = connection.createStatement().executeQuery(""select *\n"""
25669,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,483,,"        equalTo(""N={'a'=1, 'baz'=2}\n"""
25670,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,542,,"    final String expected1 = ""c=1\n"""
25671,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,543,,"        + ""c=3\n"""
25672,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,597,,"        + ""         {\n"""
25673,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,615,,"        + ""         }\n"""
25674,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,616,,"        + ""       ]\n"""
25675,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,923,,"    checkLikeToRegex(true, ""%"", ""abc"");"
25676,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,931,,"    checkLikeToRegex(true, ""a%c"", ""ac"");"
25677,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,936,,"    checkLikeToRegex(true, ""a\\%c"", ""a%c"");"
25678,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,960,,"          + ""from \""hr\"".\""emps\"""";"
25679,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,963,,"          + ""from \""hr\"".\""emps\""\n"""
25680,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1333,,"      ""select\n"""
25681,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1335,,"        + "" \""time_by_day\"".\""the_year\"" as \""c1\"",\n"""
25682,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1338,,"        + ""from \""store\"" as \""store\"",\n"""
25683,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1339,,"        + "" \""sales_fact_1997\"" as \""sales_fact_1997\"",\n"""
25684,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1341,,"        + ""where \""sales_fact_1997\"".\""store_id\"" = \""store\"".\""store_id\""\n"""
25685,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1343,,"        + ""and \""sales_fact_1997\"".\""time_id\"" = \""time_by_day\"".\""time_id\""\n"""
25686,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1344,,"        + ""and \""time_by_day\"".\""the_year\"" = 1997\n"""
25687,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1429,,"        + ""from \""time_by_day\"" as \""time_by_day\"",\n"""
25688,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1431,,"        + "" \""product_class\"" as \""product_class\"",\n"""
25689,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1432,,"        + "" \""product\"" as \""product\""\n"""
25690,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1433,,"        + ""where \""sales_fact_1997\"".\""time_id\"" = \""time_by_day\"".\""time_id\""\n"""
25691,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1435,,"        + ""and \""sales_fact_1997\"".\""product_id\"" = \""product\"".\""product_id\""\n"""
25692,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1436,,"        + ""and \""product\"".\""product_class_id\"" = \""product_class\"".\""product_class_id\""\n"""
25693,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1438,,"        + ""   and \""product_class\"".\""product_subcategory\"" = 'Pot Scrubbers'\n"""
25694,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1439,,"        + ""   and \""product_class\"".\""product_category\"" = 'Kitchen Products'\n"""
25695,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1440,,"        + ""   and \""product_class\"".\""product_department\"" = 'Household'\n"""
25696,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1547,,"        .query(""select count(*) as c from (\n"""
25697,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1753,,"            + ""from \""hr\"".\""emps\"" as e\n"""
25698,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1795,,"            + ""from\n"""
25699,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1822,,"        .returns(""+-------+---------------------+-----+------+------------+\n"""
25700,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1922,,"          && !queries1[i + 1].startsWith(""select"")) {"
25701,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1967,,"        + ""ID INTEGER,\n"""
25702,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1980,,"    info.put(""model"","
25703,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1981,,"        ""inline:"""
25704,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1984,,"            + ""  defaultSchema: 'BASEJDBC',\n"""
25705,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1985,,"            + ""  schemas: [\n"""
25706,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1988,,"            + ""       name: 'BASEJDBC',\n"""
25707,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1989,,"            + ""       jdbcDriver: '"" + jdbcDriver.class.getName() + ""',\n"""
25708,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1990,,"            + ""       jdbcUrl: '"" + url + ""',\n"""
25709,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1991,,"            + ""       jdbcCatalog: null,\n"""
25710,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1992,,"            + ""       jdbcSchema: null\n"""
25711,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,1994,,"            + ""  ]\n"""
25712,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,2051,,"                statement.executeQuery(""select \""empid\"",\n"""
25713,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,2190,,"        + ""from \""hr\"".\""depts\"" as d,\n"""
25714,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,2246,,"        .query(""select d.\""name\"", e.*\n"""
25715,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,2556,,"        + ""              } else {\n"""
25716,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,2558,,"        + ""              }\n"""
25717,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,2564,,"        .returns(""T=null\n"""
25718,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,2612,,"        + "" ? (String) null"""
25719,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,2643,,"        + "" ? (Integer) null"""
25720,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,2842,,"          + ""}\n"""
25721,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,2862,,"            ""deptno=10; deptno=10"","
25722,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3057,,"            + ""    LogicalTableScan(table=[[hr, emps]])\n"""
25723,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3158,,"        .query(""select \""store_id\"", \""grocery_sqft\"" from \""store\""\n"""
25724,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3160,,"        .returns(""store_id=1; grocery_sqft=17475\n"""
25725,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3161,,"            + ""store_id=2; grocery_sqft=22271\n"""
25726,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3162,,"            + ""store_id=0; grocery_sqft=null\n"");"
25727,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3192,,"        .query(""select * from \""hr\"".\""emps\""\n"""
25728,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3198,,"            + ""empid=200; deptno=20; name=Eric; salary=8000.0; commission=500\n"""
25729,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3199,,"            + ""empid=150; deptno=10; name=Sebastian; salary=7000.0; commission=null\n"""
25730,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3200,,"            + ""empid=110; deptno=10; name=Theodore; salary=11500.0; commission=250\n"""
25731,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3201,,"            + ""empid=100; deptno=10; name=Bill; salary=10000.0; commission=1000\n"");"
25732,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3207,,"            + ""union all\n"""
25733,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3248,,"        .query(""select \""store_id\"", \""grocery_sqft\""\n"""
25734,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3249,,"            + ""from \""foodmart\"".\""store\""\n"""
25735,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3344,,"        .explainContains(""PLAN="""
25736,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3495,,"            ""deptno=10"","
25737,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3655,,"        .query(""select \""empid\"", \""name\"" from \""hr\"".\""emps\"" where \""deptno\""=10\n"""
25738,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3657,,"            + ""select \""empid\"", \""name\"" from \""hr\"".\""emps\"" where \""empid\"">=150"")"
25739,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3662,,"            ""empid=150; name=Sebastian"","
25740,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3723,,"            + ""      EnumerableTableScan(table=[[hr, emps]])\n"")"
25741,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3829,,"            + "" \""empid\"",\n"""
25742,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3967,,"        .query(""select  \""deptno\"",\n"""
25743,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3969,,"            + "" \""commission\"",\n"""
25744,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3991,,"            ""[deptno INTEGER NOT NULL, R BIGINT NOT NULL]"")"
25745,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,3993,,"            ""deptno=10; R=1"","
25746,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,4008,,"            ""deptno=10; R=2"","
25747,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,4249,,"            + "" from "" + START_OF_GROUP_DATA)"
25748,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,4251,,"            ""[RN INTEGER NOT NULL, VAL INTEGER NOT NULL, EXPECTED INTEGER NOT NULL, L INTEGER NOT NULL]"")"
25749,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,4644,,"            ""M=1"","
25750,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,4680,,"            ""M=0"","
25751,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,4940,,"            ""DEPTNO=50"","
25752,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,5128,,"        .query(""select e.\""deptno\"", d.\""deptno\""\n"""
25753,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,5480,,"        + ""           type: 'custom',\n"""
25754,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,5481,,"        + ""           factory: '"""
25755,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,5546,,"            + ""  defaultSchema: 'adhoc',\n"""
25756,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,5548,,"            + ""    {\n"""
25757,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,5558,,"            + ""    }\n"""
25758,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,5564,,"        assertEquals(""adhoc"", connection.getSchema());"
25759,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,5728,,"        + ""        {\n"""
25760,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,5904,,"            + ""whose definition is cyclic"");"
25761,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,5915,,"        + ""      type: 'view',\n"""
25762,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,5916,,"        + ""      sql: """
25763,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,6021,,"        + ""          \""nullable\"": false,\n"""
25764,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,6046,,"        + ""          {\n"""
25765,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,6048,,"        + ""            \""type\"": {\n"""
25766,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,6051,,"        + ""            }\n"""
25767,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,6679,,"        .throws_(""Object 'metaData' not found; did you mean 'metadata'?"");"
25768,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,6718,,"        .returnsUnordered(""DID=1"", ""DID=2"");"
25769,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,6718,,"        .returnsUnordered(""DID=1"", ""DID=2"");"
25770,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,7092,,"        + ""     ( values (1), (2) ) as T1(deptid) ) "")"
25771,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,7110,,"        + ""     ( values (1), (2) ) as T1(deptid) ) X "")"
25772,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,7118,,"        + ""     ( values (1), (2) ) as T1(deptid) ) X (DID2)"")"
25773,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,7119,,"        .returnsUnordered(""DID2=1"", ""DID2=2"");"
25774,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,7119,,"        .returnsUnordered(""DID2=1"", ""DID2=2"");"
25775,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,7213,,"    assertThat((Double) rs.getObject(""VALS""), equalTo(1.0));"
25776,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,7394,,"              + ""  BindableProject(empid=[$0], deptno=[$1])\n"""
25777,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,7431,,"        + ""limit 10"";"
25778,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,7555,,"        + ""isStrictStarts=[false], isStrictEnds=[false], subsets=[[]], """
25779,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/JdbcTest.java,7557,,"        + ""inputFields=[[empid, deptno, name, salary, commission]])\n"""
25780,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,67,,"  private static final String SALES_LATTICE = ""{\n"""
25781,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,76,,"      + ""  algorithm: true,\n"""
25782,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,79,,"      + ""  defaultMeasures: [ {\n"""
25783,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,80,,"      + ""    agg: 'count'\n"""
25784,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,81,,"      + ""  } ],\n"""
25785,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,82,,"      + ""  tiles: [ {\n"""
25786,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,83,,"      + ""    dimensions: [ 'the_year', ['t', 'quarter'] ],\n"""
25787,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,85,,"      + ""      agg: 'sum',\n"""
25788,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,86,,"      + ""      args: 'unit_sales'\n"""
25789,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,87,,"      + ""    }, {\n"""
25790,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,89,,"      + ""      args: 'store_sales'\n"""
25791,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,91,,"      + ""      agg: 'count'\n"""
25792,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,92,,"      + ""    } ]\n"""
25793,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,93,,"      + ""  } ]\n"""
25794,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,178,,"        + ""     {\n"""
25795,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,181,,"        + ""         {\n"""
25796,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,186,,"        + ""',\n"""
25797,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,188,,"        + ""         }\n"""
25798,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,200,,"    modelWithLattice(""EMPLOYEES"", ""select * from \""foodmart\"".\""days\"""")"
25799,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,226,,"    modelWithLattice(""star"","
25800,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,227,,"        ""select 1 from \""foodmart\"".\""sales_fact_1997\"" as s\n"""
25801,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,228,,"            + ""join \""foodmart\"".\""product\"" as p using (\""product_id\"")\n"""
25802,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,351,,"            + ""from \""foodmart\"".\""sales_fact_1997\"" as s\n"""
25803,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,406,,"    foodmartModel("" auto: false,\n"""
25804,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,412,,"        + ""    measures: [ ]\n"""
25805,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/LatticeTest.java,416,,"            + ""join \""foodmart\"".\""time_by_day\"" as t using (\""time_id\"")\n"")"
25806,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializationTest.java,83,,"  private static final String HR_FKUK_SCHEMA = ""{\n"""
25807,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializationTest.java,88,,"      + ""',\n"""
25808,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializationTest.java,238,,"    String q = ""select *\n"""
25809,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializationTest.java,281,,"        {{""hr"", ""emps""}, {""hr"", ""m0""}},"
25810,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,55,,"            + ""from \""emps\"" group by \""empid\"", \""deptno\"""","
25811,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,61,,"            + ""    EnumerableTableScan(table=[[hr, MV0]])""))"
25812,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,66,,"    sql(""select \""empid\"", \""deptno\"" from \""emps\"" group by \""empid\"", \""deptno\"""","
25813,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,72,,"        ""select \""deptno\"" from \""emps\"" group by \""deptno\"""")"
25814,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,75,,"            + ""EnumerableAggregate(group=[{1}])\n"""
25815,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,76,,"            + ""  EnumerableTableScan(table=[[hr, MV0]])""))"
25816,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,87,,"    sql(""select \""empid\"", \""deptno\""\n"""
25817,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,132,,"        ""select \""empid\"" from \""emps\""\n"""
25818,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,138,,"    sql(""select \""empid\"", \""deptno\"", count(*) as c, sum(\""empid\"") as s\n"""
25819,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,174,,"            + ""from \""emps\"" where \""deptno\"" >= 10 group by \""empid\"", \""deptno\"""","
25820,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,176,,"            + ""from \""emps\"" where \""deptno\"" > 10 group by \""deptno\"""")"
25821,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,181,,"            + ""proj#0..3=[{exprs}], $condition=[$t5])\n"""
25822,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,239,,"            + ""count(*) + 1 as c, sum(\""empid\"") as s\n"""
25823,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,240,,"            + ""from \""emps\""\n"""
25824,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,353,,"            + ""group by \""empid\"", \""depts\"".\""deptno\"""","
25825,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,355,,"            + ""join \""depts\"" using (\""deptno\"") where \""depts\"".\""deptno\"" > 20\n"""
25826,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,438,,"    sql(""select \""depts\"".\""deptno\"", \""dependents\"".\""empid\""\n"""
25827,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,439,,"            + ""from \""depts\""\n"""
25828,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,440,,"            + ""join \""dependents\"" on (\""depts\"".\""name\"" = \""dependents\"".\""name\"")\n"""
25829,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,441,,"            + ""join \""locations\"" on (\""locations\"".\""name\"" = \""dependents\"".\""name\"")\n"""
25830,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,442,,"            + ""join \""emps\"" on (\""emps\"".\""deptno\"" = \""depts\"".\""deptno\"")\n"""
25831,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,444,,"            + ""group by \""depts\"".\""deptno\"", \""dependents\"".\""empid\"""","
25832,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,445,,"        ""select \""dependents\"".\""empid\""\n"""
25833,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,451,,"            + ""group by \""dependents\"".\""empid\"""")"
25834,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,454,,"                ""EnumerableUnion(all=[true])"","
25835,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,456,,"                ""EnumerableTableScan(table=[[hr, MV0]])"","
25836,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,474,,"            + ""where \""depts\"".\""deptno\"" > 10 and \""depts\"".\""deptno\"" < 20\n"""
25837,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,532,,"            + ""from \""emps\"" join \""depts\"" using (\""deptno\"")\n"""
25838,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,616,,"        + ""join \""depts\"" on (\""emps\"".\""deptno\"" = \""depts\"".\""deptno\"")\n"""
25839,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,629,,"            + ""join \""dependents\"" on (\""emps\"".\""empid\"" = \""dependents\"".\""empid\"")\n"""
25840,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,630,,"            + ""group by \""dependents\"".\""empid\"", \""emps\"".\""deptno\"""","
25841,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,789,,"        + ""      EnumerableTableScan(table=[[hr, MV0]])\n"""
25842,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,799,,"        + ""join \""depts\"" using (\""deptno\"")"";"
25843,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,814,,"    String q = ""select \""empid\"" \""deptno\"" from \""emps\""\n"""
25844,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,952,,"            + ""(select * from \""emps\"" where \""empid\"" = 1) \""a\""\n"""
25845,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,953,,"            + ""join \""depts\"" using (\""deptno\"")\n"""
25846,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,954,,"            + ""join \""dependents\"" using (\""empid\"")"","
25847,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,968,,"            + ""join \""dependents\"" using (\""empid\"")\n"")"
25848,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,996,,"    sql(""select \""emps\"".\""empid\"", \""emps\"".\""deptno\"" from \""emps\""\n"""
25849,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,999,,"            + ""where \""emps\"".\""empid\"" = 1"","
25850,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,1000,,"        ""select \""emps\"".\""empid\"" from \""emps\""\n"""
25851,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,1064,,"            + ""group by \""deptno\"", \""empid\"", \""salary\"""","
25852,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewRelOptRulesTest.java,1105,,"            + ""group by \""deptno\"""")"
25853,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,157,,"        + ""select *\n"""
25854,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,189,,"            + ""  EnumerableTableScan(table=[[hr, MV0]])""))"
25855,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,344,,"        + ""group by \""deptno\"""";"
25856,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,357,,"        + ""from \""emps\""\n"""
25857,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,386,,"        + ""select * from\n"""
25858,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,387,,"        + ""(select \""deptno\"", sum(\""salary\"") as \""sum_salary\"", sum(\""commission\"")\n"""
25859,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,389,,"        + ""group by \""deptno\"")\n"""
25860,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,390,,"        + ""where \""sum_salary\"" > 10"";"
25861,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,393,,"        + ""(select \""deptno\"", sum(\""salary\"") as \""sum_salary\""\n"""
25862,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,467,,"    sql(""select \""empid\"", \""deptno\"", count(*) as c, sum(\""salary\"") as s\n"""
25863,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,468,,"            + ""from \""emps\"" group by cube(\""empid\"",\""deptno\"")"","
25864,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,496,,"            + ""    EnumerableTableScan(table=[[hr, MV0]])""))"
25865,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,507,,"        + ""group by \""empid\"", \""deptno\"""";"
25866,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,525,,"            + ""LogicalCalc(expr#0..2=[{inputs}], expr#3=[1], """
25867,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,526,,"            + ""expr#4=[+($t2, $t3)], C=[$t4], deptno=[$t1])\n"""
25868,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,647,,"        + ""  (select \""deptno\"", sum(\""salary\""), sum(\""commission\"")\n"""
25869,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,648,,"        + ""  from \""emps\""\n"""
25870,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,649,,"        + ""  group by \""deptno\"") \""A\""\n"""
25871,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,650,,"        + ""  join\n"""
25872,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,651,,"        + ""  (select \""deptno\"", count(\""name\"")\n"""
25873,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,652,,"        + ""  from \""depts\""\n"""
25874,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,653,,"        + ""  group by \""deptno\"") \""B\""\n"""
25875,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,654,,"        + ""  on \""A\"".\""deptno\"" = \""B\"".\""deptno\"""";"
25876,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,718,,"        + ""select \""emps\"".\""empid\"", \""emps\"".\""deptno\"", \""depts\"".\""deptno\"" from\n"""
25877,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,719,,"        + ""\""emps\"" join \""depts\""\n"""
25878,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,720,,"        + ""on \""emps\"".\""deptno\"" = \""depts\"".\""deptno\"""";"
25879,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,789,,"        + ""join \""depts\"" using (\""deptno\"")"";"
25880,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,790,,"    sql(""select * from \""emps\"" where \""empid\"" < 500"", q).ok();"
25881,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,896,,"        + ""select \""deptno\"", \""salary\""\n"""
25882,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,904,,"        + ""select \""deptno\"", \""salary\"" * 2\n"""
25883,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,920,,"        + ""intersect all\n"""
25884,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java,976,,"        + ""from \""emps\"" group by \""name\"""";"
25885,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,61,,"        ""{\n"""
25886,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,62,,"        + ""  version: '1.0',\n"""
25887,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,63,,"        + ""   schemas: [\n"""
25888,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,64,,"        + ""     {\n"""
25889,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,65,,"        + ""       name: 'FoodMart',\n"""
25890,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,67,,"        + ""         {\n"""
25891,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,70,,"        + ""             {\n"""
25892,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,73,,"        + ""             }\n"""
25893,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,74,,"        + ""           ]\n"""
25894,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,75,,"        + ""         }\n"""
25895,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,77,,"        + ""       tables: [\n"""
25896,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,80,,"        + ""           factory: 'com.test',\n"""
25897,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,81,,"        + ""           columns: [\n"""
25898,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,83,,"        + ""               name: 'time_id'\n"""
25899,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,86,,"        + ""         },\n"""
25900,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,96,,"        + ""       ]\n"""
25901,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,97,,"        + ""     }\n"""
25902,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,98,,"        + ""   ]\n"""
25903,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ModelTest.java,101,,"    assertEquals(""1.0"", root.version);"
25904,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MultiJdbcSchemaJoinTest.java,61,,"        + ""field1 varchar(10))"");"
25905,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MultiJdbcSchemaJoinTest.java,74,,"    Connection connection = DriverManager.getConnection(""jdbc:calcite:"");"
25906,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MultiJdbcSchemaJoinTest.java,79,,"        JdbcSchema.dataSource(db1, ""org.hsqldb.jdbcDriver"", """", """");"
25907,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MutableRelTest.java,227,,"    assertThat(mutableScanOf(builder, ""EMP""),"
25908,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/MutableRelTest.java,232,,"    assertThat(mutableScanOf(builder, ""scott"", ""EMP""),"
25909,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/PigRelBuilderTest.java,63,,"        .scan(""EMP"")"
25910,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/PigRelBuilderTest.java,79,,"        .project(builder.field(""DEPTNO""))"
25911,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ReflectiveSchemaTest.java,110,,"                            e, ""empid""),"
25912,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ReflectiveSchemaTest.java,170,,"        DriverManager.getConnection(""jdbc:calcite:"");"
25913,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ReflectiveSchemaTest.java,231,,"            ""select * from \""emps\"""","
25914,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ReflectiveSchemaTest.java,350,,"        .query(""select au.\""aid\"" as aid from \""bookstore\"".\""authors\"" au\n"""
25915,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ReflectiveSchemaTest.java,526,,"    with.query(""select count(*) as c from \""s\"".\""everyTypes\""\n"""
25916,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ReflectiveSchemaTest.java,528,,"        .returns(""C=1\n"");"
25917,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/ReflectiveSchemaTest.java,591,,"        .returns(""C=null\n"");"
25918,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,180,,"            spec.schemaName, ""EMP"");"
25919,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,187,,"    root.add(""MYVIEW"", macro);"
25920,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,214,,"        hasTree(""LogicalTableScan(table=[[scott, EMP]])\n""));"
25921,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,238,,"      fail(""expected error, got "" + root);"
25922,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,314,,"        hasTree(""LogicalValues(tuples=[[]])\n""));"
25923,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,326,,"                builder.equals(builder.field(""DEPTNO""), builder.literal(20)))"
25924,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,329,,"        + ""  LogicalTableScan(table=[[scott, EMP]])\n"";"
25925,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,359,,"        .scan(""DEPT"")"
25926,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,367,,"        + ""  LogicalTableScan(table=[[scott, DEPT]])\n"";"
25927,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,490,,"            .project(builder.isNotNull(builder.field(""EMPNO"")))"
25928,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,777,,"    final String expected = ""LogicalTableScan(table=[[scott, DEPT]])\n"";"
25929,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,824,,"        + ""      LogicalTableScan(table=[[scott, DEPT]])\n"";"
25930,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,843,,"            .project(builder.field(1, ""EMP"", ""ENAME""))"
25931,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,900,,"                        b.literal(0), b.literal(""zero""),"
25932,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,918,,"        + ""    LogicalTableScan(table=[[scott, EMP]])\n"";"
25933,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,935,,"                b.field(""SAL""),"
25934,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,1299,,"        + ""      LogicalTableScan(table=[[scott, EMP]])\n"";"
25935,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,1472,,"                      .filter(builder.field(""COMM""))"
25936,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,1582,,"                builder.field(""JOB""))"
25937,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,1920,,"        + ""  LogicalProject(DEPTNO=[$0])\n"""
25938,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,1921,,"        + ""    LogicalTableScan(table=[[scott, DEPT]])\n"""
25939,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,1922,,"        + ""  LogicalProject(EMPNO=[$0])\n"""
25940,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,2411,,"                builder.field(""DEPT"", ""DNAME""))"
25941,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,2443,,"                    builder.field(""e"", ""MGR"")))"
25942,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,2493,,"            .as(""EMP_alias"")"
25943,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,2690,,"        + ""LogicalProject(EMPNO=[$0], ENAME=[$1], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7])\n"""
25944,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,3023,,"          is(""Value count must be a positive multiple of field count""));"
25945,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,3538,,"        builder.patternQuantify(builder.literal(""DOWN""), builder.literal(1),"
25946,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelBuilderTest.java,3919,,"        + ""    LogicalFilter(condition=[=($cor0.EMPNO, 'NaN')])\n"""
25947,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,192,,"  private static final List<String> EMP_QNAME = ImmutableList.of(""CATALOG"", ""SALES"", ""EMP"");"
25948,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,192,,"  private static final List<String> EMP_QNAME = ImmutableList.of(""CATALOG"", ""SALES"", ""EMP"");"
25949,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,192,,"  private static final List<String> EMP_QNAME = ImmutableList.of(""CATALOG"", ""SALES"", ""EMP"");"
25950,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,260,,"    checkPercentageOriginalRows(""select * from (\n"""
25951,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,426,,"        ""DEPT"","
25952,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,427,,"        ""NAME"","
25953,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,445,,"        ""ENAME"","
25954,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,513,,"        ""MGR"","
25955,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,565,,"        equalTo(""SAL""));"
25956,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,602,,"    final String sql = ""select * from emp"";"
25957,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,630,,"        + ""inner join (select * from dept limit 4) as dept\n"""
25958,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,631,,"        + ""on emp.deptno = dept.deptno"";"
25959,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,637,,"    final String sql = ""select * from (select * from emp limit 0) as emp\n"""
25960,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,662,,"        + ""inner join (select * from dept limit 0) as dept\n"""
25961,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,694,,"        + ""union all\n"""
25962,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,700,,"    final String sql = ""select ename from (select * from emp limit 100)\n"""
25963,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,702,,"        + ""select name from (select * from dept limit 40)"";"
25964,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,708,,"        + ""union\n"""
25965,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,809,,"    final String sql = ""select deptno from emp\n"""
25966,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,966,,"    RelNode rel = convertSql(""select * from emp where deptno = 10"");"
25967,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,987,,"        convertSql(""select deptno, count(*) from emp where deptno > 10 """
25968,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,988,,"            + ""group by deptno having count(*) = 0"");"
25969,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,1070,,"        ImmutableBitSet.of(rel.getRowType().getFieldNames().indexOf(""DEPTNO""));"
25970,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,1154,,"    final String sql = ""select *\n"""
25971,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,1206,,"        + ""from (select distinct deptno, sal from emp)\n"""
25972,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,1218,,"        is(""[DEPTNO, SAL]""));"
25973,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,1241,,"        + ""intersect all\n"""
25974,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,1255,,"        + ""except all\n"""
25975,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,1490,,"      assertThat(colType(mq, rel, 0), equalTo(""DEPTNO-rel""));"
25976,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,1573,,"    assertThat(colType(mq, input, 0), equalTo(""DEPTNO-agg""));"
25977,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,1591,,"    assertThat(colType(mq, input, 1), equalTo(""EXPR$1-agg""));"
25978,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,1673,,"    final Project rel = (Project) convertSql(""select * from emp, dept"");"
25979,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,2044,,"    assertThat(predicates.pulledUpPredicates, sortsAs(""[=($0, 1)]""));"
25980,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,2764,,"        + ""cross join (select * from dept limit 1) as b\n"""
25981,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,2765,,"        + ""inner join (select * from emp limit 2) as c\n"""
25982,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelMetadataTest.java,2809,,"    final String sql = ""select a.deptno, c.sal from (select * from emp limit 7) as a\n"""
25983,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,201,,"    final String sql = ""select *\n"""
25984,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,215,,"            + ""from emp\n"""
25985,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,230,,"            + ""from (\n"""
25986,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,232,,"            + ""union all\n"""
25987,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,274,,"              .scan(""EMP"")"
25988,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,342,,"    final String sql = ""select\n"""
25989,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,347,,"        + ""from emp"";"
25990,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,409,,"        .scan(""DEPT"")"
25991,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,412,,"                b.field(2, 0, ""DEPTNO""),"
25992,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,414,,"            b.equals(b.field(2, 1, ""DNAME""),"
25993,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,526,,"        + ""on d.deptno = e.deptno\n"""
25994,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,603,,"                  b.field(2, 0, ""JOB""),"
25995,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,618,,"    Sql sql = sql(""${sql}"")"
25996,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,698,,"        + ""from dept a\n"""
25997,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,799,,"        + ""on a.name = b.name"";"
25998,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,939,,"    final String sql = ""select count(*) as c\n"""
25999,./TargetProjects/calcite/core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java,940,,"        + ""from sales.emp\n"""
