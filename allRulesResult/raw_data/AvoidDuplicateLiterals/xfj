139000,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/PropertyTest.java,69,,"        n.addMixin(""mix:title"");"
139001,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/PropertyTest.java,73,,"        Property title = n.setProperty(""jcr:title"", 12345);"
139002,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/PropertyTest.java,81,,"            title.setValue(""str"");"
139003,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ReferenceBinaryIT.java,116,,"        Session secondSession = repository.login(new SimpleCredentials(""admin"", ""admin"".toCharArray()));"
139004,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ReferencesTest.java,53,,"        n.setProperty(""myref"", ref);"
139005,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ReferencesTest.java,56,,"        assertEquals(""ref"", ref.getPath(), n.getProperty(""myref"").getNode().getPath());"
139006,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ReferencesTest.java,57,,"        checkReferences(""refs"", ref.getReferences(), n.getPath() + ""/myref"");"
139007,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ReferencesTest.java,57,,"        checkReferences(""refs"", ref.getReferences(), n.getPath() + ""/myref"");"
139008,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ReferencesTest.java,82,,"        n.setProperty(""ref1"", new Value[]{weak, weak});"
139009,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ReferencesTest.java,83,,"        n.setProperty(""ref2"", new Value[]{weak, weak});"
139010,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ReferencesTest.java,142,,"        n.setProperty(""myref0"", ref);"
139011,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ReferencesTest.java,143,,"        n.setProperty(""myref1"", ref);"
139012,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ReferencesTest.java,276,,"        assertEquals(""ref0"", ref0.getIdentifier(), n.getProperty(""myref"").getValues()[0].getString());"
139013,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ReferencesTest.java,503,,"            fail(""must fail with ReferentialIntegrityException"");"
139014,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RefreshOnGCTest.java,105,,"        Session session = repository.login(new SimpleCredentials(""admin"", ""admin"".toCharArray()));"
139015,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,120,,"        Node foo = root.addNode(""foo"");"
139016,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,121,,"        foo.setProperty(""stringProp"", ""stringVal"");"
139017,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,122,,"        foo.setProperty(""intProp"", 42);"
139018,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,128,,"        root.addNode(""bar"");"
139019,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,208,,"        getAdminSession().getWorkspace().createWorkspace(""new"");"
139020,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,248,,"        Node node = getNode(""/foo"");"
139021,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,503,,"            add(""added"");"
139022,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,573,,"        Property property = getProperty(""/foo/stringProp"");"
139023,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,630,,"        Node node1 = root.addNode(""node1"");"
139024,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,634,,"        Node node2 = root.addNode(""node2"");"
139025,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,680,,"        node.addNode(""new"", ""nt:folder"");"
139026,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1099,,"        referee.addMixin(""mix:referenceable"");"
139027,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1216,,"        Node node = parentNode.addNode(""test"");"
139028,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1256,,"        Property p2 = p1.getParent().setProperty(""stringProp"", ""newValue"");"
139029,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1324,,"            session2.getProperty(TEST_PATH + ""/newProperty"").setValue((String) null);"
139030,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1383,,"            Node removeNode = session2.getNode(TEST_PATH + ""/newNode"");"
139031,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1423,,"        Property p = bar.setProperty(""name"", ""value"");"
139032,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1427,,"            fail(""Expected InvalidItemStateException"");"
139033,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1523,,"            session1.getNode(""/node1"").addNode(""node2"");"
139034,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1529,,"            Node node2 = session1.getNode(""/node1/node2"");"
139035,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1532,,"            Node node3 = session1.getNode(""/node1/node3"");"
139036,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1535,,"            node3.setProperty(""property1"", ""value1"");"
139037,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1536,,"            Item property1 = session1.getProperty(""/node1/node3/property1"");"
139038,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1692,,"            session1.getRootNode().addNode(""node"").setProperty(""p"", ""v1"");"
139039,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1724,,"            session1.getNode(""/node"").remove();"
139040,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1776,,"        Node source = node.addNode(""source"").addNode(""node"");"
139041,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1781,,"        session.move(TEST_PATH + ""/source/node"", TEST_PATH + ""/target/moved"");"
139042,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1784,,"        assertFalse(node.hasNode(""source/node""));"
139043,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1786,,"        assertTrue(node.hasNode(""target/moved""));"
139044,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1905,,"        assertEquals(""nt:unstructured"", testNode.getPrimaryNodeType().getName());"
139045,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1906,,"        assertEquals(""nt:unstructured"", testNode.getProperty(""jcr:primaryType"").getString());"
139046,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1969,,"        assertFalse(asList(nsReg.getURIs()).contains(""file:///foo""));"
139047,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,1986,,"        getAdminSession().getRootNode().addNode(""foo:test"");"
139048,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/RepositoryTest.java,2044,,"        mixTest.setName(""mix:test"");"
139049,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/TestContentLoader.java,127,,"        while (node.hasNode(""node1"")) {"
139050,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/TestContentLoader.java,130,,"        getOrAddNode(node, ""node1"").setProperty(""prop1"", ""You can have it good, cheap, or fast. Any two."");"
139051,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/TestContentLoader.java,155,,"        resource.setProperty(""jcr:mimeType"", ""text/plain"");"
139052,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/TestContentLoader.java,183,,"        Node transition = getOrAddNode(transitions, ""identity"");"
139053,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ValidNamesTest.java,119,,"        nameTest(""foo"");"
139054,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/ValidNamesTest.java,285,,"        org.junit.Assume.assumeFalse(super.fixture.toString().toLowerCase().contains(""rdb""));"
139055,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/binary/BinaryAccessIT.java,298,,"        String mediaType = conn.getHeaderField(""Content-Type"");"
139056,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/binary/BinaryAccessIT.java,378,,"        String contentDisposition = conn.getHeaderField(""Content-Disposition"");"
139057,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/cluster/AbstractClusterTest.java,90,,"        s1 = r1.login(new SimpleCredentials(""admin"", ""admin"".toCharArray()));"
139058,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/cluster/SimpleTestIT.java,32,,"        if (s1.getRootNode().hasNode(""test"")) {"
139059,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/document/VersionedDocumentBundlingTest.java,103,,"        Node asset = JcrUtils.getOrCreateByPath(""/bundlingtest/foo.png"", ""oak:Unstructured"", ""oak:Asset"", s, false);"
139060,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/document/VersionedDocumentBundlingTest.java,105,,"        Node content = asset.addNode(""jcr:content"", ""oak:Unstructured"");"
139061,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/nodetype/NodeTypeTest.java,65,,"        root.addNode(""q1"", ""nt:query"").addNode(""q2"", ""nt:query"");"
139062,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/nodetype/NodeTypeTest.java,76,,"        n.setProperty(""jcr:statement"", vf.createValue(""statement""));"
139063,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/nodetype/NodeTypeTest.java,76,,"        n.setProperty(""jcr:statement"", vf.createValue(""statement""));"
139064,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/nodetype/NodeTypeTest.java,77,,"        n.setProperty(""jcr:language"", vf.createValue(""language""));"
139065,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/nodetype/NodeTypeTest.java,77,,"        n.setProperty(""jcr:language"", vf.createValue(""language""));"
139066,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/nodetype/NodeTypeTest.java,284,,"        a.setProperty(""jcr:uuid"", UUID.randomUUID().toString());      // No problem here"
139067,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/nodetype/NodeTypeTest.java,307,,"        String cnd = ""<'test'='http://www.apache.org/jackrabbit/test'>\n"" +"
139068,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/nodetype/NodeTypeTest.java,313,,"        Node n = root.addNode(""test"", ""test:MyType"");"
139069,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/nodetype/NodeTypeTest.java,314,,"        n.setProperty(""test:mandatory"", ""value"");"
139070,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ConsolidatedListenerMBeanTest.java,50,,"        config.put(""jmx.objectname"", new ObjectName(""*:*""));"
139071,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/OakEventFilterImplTest.java,38,,"        assertMatches(new String[] {""/a"", ""/a/b""}, ""/a/b"");"
139072,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/OakEventFilterImplTest.java,41,,"        assertMatches(new String[] {""/a"", ""/a/b"", ""/a/b/c""}, ""/a/b/c"");"
139073,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/OakEventFilterImplTest.java,43,,"        assertMatches(new String[] {""/a"", ""/a/b"", ""/a/b/**""}, ""/a/b/**"");"
139074,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationQueueFullWarnTest.java,302,,"        root.addNode(""testNode"");"
139075,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationRefreshTest.java,175,,"                n.setProperty(""test100"", ""foo"");"
139076,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,146,,"        n.setProperty(""test_property1"", 42);"
139077,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,180,,"            assertTrue(""Missing events: "" + missing, missing.isEmpty());"
139078,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,182,,"            assertTrue(""Unexpected events: "" + unexpected, unexpected.isEmpty());"
139079,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,214,,"            n.addNode(""n1"", ""oak:Unstructured"");"
139080,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,466,,"        observationManager.addEventListener(listener, PROPERTY_ADDED, ""/a/b"", false, null, null, false);"
139081,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,486,,"            if (root.hasNode(""events"")) {"
139082,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,677,,"        Node nodeA = testNode.addNode(""a"", ""nt:unstructured"");"
139083,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,984,,"        listener.expect(n.getPath() + ""/jcr:primaryType"", PROPERTY_ADDED);"
139084,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1005,,"        builder.condition(builder.property(Selectors.PARENT, ""foo"","
139085,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1009,,"                        return ""bar"".equals(property.getValue(STRING));"
139086,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1121,,"            n.setProperty(""added"", 42);"
139087,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1146,,"        n.setProperty(""toChange"", new String[]{""one"", ""two""}, PropertyType.STRING);"
139088,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1330,,"                    return equal(before, event.getInfo().get(""beforeValue"")) &&"
139089,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1598,,"                new String[] {""/a/b/c/d""}, "
139090,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1599,,"                new String[] {""/unrelated/child"", ""/unrelated"", ""/a/b/c/unrelated/child"", ""/a/b/c/unrelated"", "
139091,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1599,,"                new String[] {""/unrelated/child"", ""/unrelated"", ""/a/b/c/unrelated/child"", ""/a/b/c/unrelated"", "
139092,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1599,,"                new String[] {""/unrelated/child"", ""/unrelated"", ""/a/b/c/unrelated/child"", ""/a/b/c/unrelated"", "
139093,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1599,,"                new String[] {""/unrelated/child"", ""/unrelated"", ""/a/b/c/unrelated/child"", ""/a/b/c/unrelated"", "
139094,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1600,,"                        ""/a/b/unrelated/child"", ""/a/b/unrelated"", ""/a/unrelated/child"", ""/a/unrelated"", "
139095,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1600,,"                        ""/a/b/unrelated/child"", ""/a/b/unrelated"", ""/a/unrelated/child"", ""/a/unrelated"", "
139096,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1600,,"                        ""/a/b/unrelated/child"", ""/a/b/unrelated"", ""/a/unrelated/child"", ""/a/unrelated"", "
139097,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1600,,"                        ""/a/b/unrelated/child"", ""/a/b/unrelated"", ""/a/unrelated/child"", ""/a/unrelated"", "
139098,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1637,,"                        ""/a/b/related/unrelatedchild"", ""/a/b/related"", ""/a/unrelated/child"", ""/a/unrelated"", "
139099,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1643,,"                new String[] {""/unrelated/child"", ""/unrelated"", ""/a/b/c/related/child"", ""/a/b/c/related"", "
139100,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1643,,"                new String[] {""/unrelated/child"", ""/unrelated"", ""/a/b/c/related/child"", ""/a/b/c/related"", "
139101,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1644,,"                        ""/a/b/related/child"", ""/a/b/related"", ""/a/unrelated/child"", ""/a/unrelated"", "
139102,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,1659,,"                        ""/a/b/unrelated/child"", ""/a/b/unrelated"", ""/a/related/unrelatedchild"", ""/a/related"", "
139103,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,2083,,"        filter.setAbsPath(""/parent"");"
139104,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,2087,,"                new String[] { """", ""jcr:content"", ""jcr:content/**"" });"
139105,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,2089,,"        Node parent = getAdminSession().getRootNode().addNode(""parent"", ""nt:unstructured"");"
139106,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,2092,,"        Node child = parent.addNode(""child"", ""nt:unstructured"");"
139107,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,2095,,"        Node file = child.addNode(""file"", ""oak:Unstructured"");"
139108,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,2098,,"        listener.expect(jcrContent.getPath(), ""/parent/child/file"", NODE_ADDED);"
139109,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,2100,,"        Property jcrDataProperty = jcrContent.setProperty(""jcr:data"", ""foo"");"
139110,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,2145,,"        listener.expect(jcrContent.getPath(), ""/parent/child"", NODE_ADDED);"
139111,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,2294,,"        doTestFileWithGlobs(""/parent/**/*.jsp"", ""/parent"");"
139112,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,2297,,"        doTestFileWithGlobs(""/**/*.jsp"", """");"
139113,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,2298,,"        doTestFileWithGlobs(""**/*.jsp"", """");"
139114,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,2383,,"        doTestAggregate6(oef, new String[] {""/""}, new String[] {""/parent"", ""/parent/**"", ""/parent/**/*.jsp"", ""/parent/**/*.jsp/**""});"
139115,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ObservationTest.java,2403,,"                .withIncludeGlobPaths(""/parent/**/*.jsp"", ""/foo/bar/**"");"
139116,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/SlowObservationIT.java,125,,"        testNode = session.getRootNode().addNode(TEST_NODE, ""oak:Unstructured"");"
139117,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryFulltextTest.java,52,,"        n1.setProperty(""text"", ""hello world"");"
139118,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryPlanTest.java,53,,"        Node nt = session.getRootNode().getNode(""oak:index"").getNode(""nodetype"");"
139119,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryPlanTest.java,54,,"        nt.setProperty(""entryCount"", 200);"
139120,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryPlanTest.java,58,,"        if (session.getRootNode().hasNode(""testroot"")) {"
139121,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryPlanTest.java,64,,"            Node n = testRootNode.addNode(""n"" + i, ""oak:Unstructured"");"
139122,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryPlanTest.java,74,,"        q = qm.createQuery(""explain "" + xpath, ""xpath"");"
139123,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryPlanTest.java,74,,"        q = qm.createQuery(""explain "" + xpath, ""xpath"");"
139124,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryPlanTest.java,79,,"        String plan = row.getValue(""plan"").getString();"
139125,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryPlanTest.java,324,,"        e1.setProperty(""type"", ""1"");"
139126,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryTest.java,93,,"        assertTrue(isValidQuery(qm, ""xpath"","
139127,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryTest.java,146,,"        a.setProperty(""test"", true);"
139128,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryTest.java,189,,"        test.addNode(""a"", ""oak:Unstructured"").setProperty(""time"", ""2001-01-01T00:00:00.000Z"", PropertyType.DATE);"
139129,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryTest.java,216,,"                ""on ischildnode(b, a) "" +"
139130,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryTest.java,295,,"                rit.nextRow().getValue(""plan"").getString());"
139131,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryTest.java,336,,"                {""two"", ""123456789""}, "
139132,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryTest.java,337,,"                {""one"", ""\u3360\u3361\u3362\u3363\u3364\u3365\u3366\u3367\u3368\u3369""}, "
139133,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryTest.java,340,,"            content.addNode(pair[0]).setProperty(""prop"", "
139134,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryTest.java,362,,"        content.addNode(""one"").addNode(""child"").setProperty(""prop"", ""hello"");"
139135,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryTest.java,362,,"        content.addNode(""one"").addNode(""child"").setProperty(""prop"", ""hello"");"
139136,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryTest.java,388,,"        String oldCompatValue = System.getProperty(""oak.useOldInexistenceCheck"");"
139137,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryTest.java,448,,"        assertEquals(""/hello/world"", getPaths(q));"
139138,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryTest.java,464,,"    @SuppressWarnings(""deprecation"")"
139139,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryTest.java,527,,"        hello.setProperty(""text"",  ""hello_world"");"
139140,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryTest.java,527,,"        hello.setProperty(""text"",  ""hello_world"");"
139141,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryTest.java,588,,"        hello1.setProperty(""data"",  ""x"");"
139142,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/RemappingTest.java,67,,"        QueryResult qr = qm.createQuery(statement, ""xpath"").execute();"
139143,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/qom/QomTest.java,127,,"        PropertyValue p = f.propertyValue(""selectorName"", ""propertyName"");"
139144,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/qom/QomTest.java,127,,"        PropertyValue p = f.propertyValue(""selectorName"", ""propertyName"");"
139145,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/qom/QomTest.java,169,,"        assertEquals(""[p]"", f.column(null, ""p"", null).toString());"
139146,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/qom/QomTest.java,192,,"        DescendantNode d = f.descendantNode(""selectorName"", ""path"");"
139147,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/qom/QomTest.java,222,,"        EquiJoinCondition e = f.equiJoinCondition(""selector1Name"", ""property1Name"","
139148,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/query/qom/QomTest.java,223,,"                ""selector2Name"", ""property2Name"");"
139149,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/random/AbstractRandomizedTest.java,63,,"        writeSessions.add((JackrabbitSession) jackrabbitRepository.login(new SimpleCredentials(""admin"", ""admin"".toCharArray())));"
139150,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/random/RandomOpCompare.java,92,,"        session1 = r1.login(new SimpleCredentials(""admin"", ""admin"".toCharArray()));"
139151,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AbstractMoveTest.java,72,,"            fail(""Move requires addChildNodes and removeChildNodes privilege."");"
139152,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AbstractMoveTest.java,201,,"        String movedChildNPath = path + ""/movedNode"";"
139153,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AccessControlImporterTest.java,46,,"    public static final String XML_POLICY_TREE = ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>"" +"
139154,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AccessControlImporterTest.java,59,,"            ""             <sv:value>""+EveryonePrincipal.NAME+""</sv:value>"" +"
139155,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AccessControlImporterTest.java,66,,"            ""</sv:node>"";"
139156,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AccessControlImporterTest.java,70,,"            ""xmlns:mix=\""http://www.jcp.org/jcr/mix/1.0\"" xmlns:nt=\""http://www.jcp.org/jcr/nt/1.0\"" xmlns:fn_old=\""http://www.w3.org/2004/10/xpath-functions\"" xmlns:fn=\""http://www.w3.org/2005/xpath-functions\"" xmlns:xs=\""http://www.w3.org/2001/XMLSchema\"" xmlns:sv=\""http://www.jcp.org/jcr/sv/1.0\"" xmlns:rep=\""internal\"" xmlns:jcr=\""http://www.jcp.org/jcr/1.0\"">"" +"
139157,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AccessControlImporterTest.java,71,,"            ""<sv:property sv:name=\""jcr:primaryType\"" sv:type=\""Name\"">"" +"
139158,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AccessControlImporterTest.java,72,,"            ""<sv:value>rep:ACL</sv:value>"" +"
139159,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AccessControlImporterTest.java,73,,"            ""</sv:property>"" +"
139160,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AccessControlImporterTest.java,76,,"            ""<sv:value>rep:GrantACE</sv:value>"" +"
139161,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AccessControlImporterTest.java,78,,"            ""<sv:property sv:name=\""rep:principalName\"" sv:type=\""String\"">"" +"
139162,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AccessControlImporterTest.java,79,,"            ""<sv:value>""+EveryonePrincipal.NAME+""</sv:value>"" +"
139163,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AccessControlImporterTest.java,81,,"            ""<sv:property sv:name=\""rep:privileges\"" sv:type=\""Name\"">"" +"
139164,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AccessControlImporterTest.java,82,,"            ""<sv:value>jcr:write</sv:value>"" +"
139165,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AccessControlImporterTest.java,190,,"        Node target = testRootNode.addNode(""test"", ""test:sameNameSibsFalseChildNodeDefinition"");"
139166,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AccessControlImporterTest.java,396,,"            assertTrue(target.hasNode(""rep:repoPolicy""));"
139167,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/AccessControlManagementTest.java,51,,"        assertTrue(testSession.nodeExists(path + ""/rep:policy""));"
139168,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/HasPermissionTest.java,36,,"                ""/"", path, childPPath, path + ""/rep:policy"","
139169,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/HasPermissionTest.java,37,,"                ""/nonExisting"", path + ""/nonExisting"");"
139170,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/ImportIgnoreTest.java,57,,"            ""</sv:property>"" +"
139171,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/IndexManagementTest.java,61,,"        Node n = testSession.getNode(path).getNode(IndexConstants.INDEX_DEFINITIONS_NAME).addNode(""myIndex"", IndexConstants.INDEX_DEFINITIONS_NODE_TYPE);"
139172,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/IndexManagementTest.java,62,,"        n.setProperty(IndexConstants.TYPE_PROPERTY_NAME, ""myType"");"
139173,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/IndexManagementTest.java,88,,"        n.setProperty(""someProperty"", ""val"");"
139174,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/IndexManagementTest.java,127,,"        indexDef.setProperty(""customProp"", ""val"");"
139175,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/NodeTypeDefinitionManagementTest.java,69,,"            fail(""Node type registration should be denied."");"
139176,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/NodeTypeManagementTest.java,159,,"            fail(""Missing privilege jcr:nodeTypeManagement."");"
139177,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/NodeTypeManagementTest.java,192,,"            fail(""Missing write privilege."");"
139178,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/QueryTest.java,65,,"        q.bindValue(""path"", vf.createValue(visible.getPath()));"
139179,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/ReadPropertyTest.java,46,,"        propertyPaths.add(path + ""/jcr:primaryType"");"
139180,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/SessionMoveTest.java,130,,"        testSession.move(childNPath, childNPath2 + ""/dest"");"
139181,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/SessionMoveTest.java,317,,"        replacement.setProperty(""movedProp"", ""val"");"
139182,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/SessionMoveTest.java,317,,"        replacement.setProperty(""movedProp"", ""val"");"
139183,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/SessionMoveTest.java,353,,"        Property p = destNode.setProperty(""newProp"", ""val"");"
139184,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/SessionMoveTest.java,380,,"        destNode.setProperty(""movedProp"", ""modified"");"
139185,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/VersionManagementTest.java,315,,"        history.addVersionLabel(v.getName(), ""testLabel"", false);"
139186,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/VersionManagementTest.java,366,,"        newNode.addMixin(""mix:versionable"");"
139187,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/WritePropertyTest.java,39,,"        Privilege[] privileges = privilegesFromNames(new String[] {""rep:addProperties""});"
139188,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/WritePropertyTest.java,49,,"        assertHasPrivilege(path, ""rep:removeProperties"", false);"
139189,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/WritePropertyTest.java,50,,"        assertHasPrivilege(path, ""rep:alterProperties"", false);"
139190,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/WritePropertyTest.java,58,,"        testN.setProperty(""newProperty"", ""value"");"
139191,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/WritePropertyTest.java,58,,"        testN.setProperty(""newProperty"", ""value"");"
139192,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/WritePropertyTest.java,67,,"            testN.setProperty(""newProperty"", ""modified"");"
139193,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/WriteTest.java,203,,"            fail(""Removal must fail"");"
139194,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/authorization/WriteWithCustomPrivilege.java,36,,"            privilegeManager.getPrivilege(""replicate"");"
139195,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/privilege/PrivilegeRegistrationTest.java,100,,"            getPrivilegeManager(readOnly).registerPrivilege(""test"", true, new String[0]);"
139196,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/privilege/PrivilegeRegistrationTest.java,121,,"        privilegeManager.registerPrivilege(""custom4"", false, new String[0]);"
139197,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/privilege/PrivilegeRegistrationTest.java,122,,"        privilegeManager.registerPrivilege(""custom5"", false, new String[0]);"
139198,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/privilege/PrivilegeRegistrationTest.java,198,,"        newCustomPrivs.put(""new"", new String[0]);"
139199,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/privilege/PrivilegeRegistrationTest.java,235,,"        illegal.put(""newPrivilege"", new String[] {""invalid:privilegeName""});"
139200,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/AuthorizableByTypeTestTest.java,63,,"        assertEquals(""Equal ID expected"", auth.getID(), user.getID());"
139201,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/AuthorizableByTypeTestTest.java,84,,"        Authorizable nonExisting = userMgr.getAuthorizable(""nonExistingAuthorizable"", User.class);"
139202,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/AuthorizablePropertyTest.java,67,,"        String propName = ""Fullname"";"
139203,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/AuthorizablePropertyTest.java,68,,"        Value v = superuser.getValueFactory().createValue(""Super User"");"
139204,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/AuthorizablePropertyTest.java,73,,"            throw new NotExecutableException(""Cannot test 'Authorizable.setProperty'."");"
139205,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/AuthorizablePropertyTest.java,349,,"            user.setProperty(""testProperty"", v);"
139206,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/AuthorizablePropertyTest.java,613,,"            user.setProperty(""someProp"", v);"
139207,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/CreateUserTest.java,161,,"            User user = createUser(null, ""anyPW"");"
139208,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportAbortTest.java,61,,"                        ""   <sv:property sv:name=\""rep:principalName\"" sv:type=\""String\""><sv:value>g1</sv:value></sv:property>"" +"
139209,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportAbortTest.java,62,,"                        ""   <sv:property sv:name=\""rep:members\"" sv:type=\""WeakReference\""><sv:value>"" +id+ ""</sv:value></sv:property>"" +"
139210,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportAbortTest.java,62,,"                        ""   <sv:property sv:name=\""rep:members\"" sv:type=\""WeakReference\""><sv:value>"" +id+ ""</sv:value></sv:property>"" +"
139211,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportAbortTest.java,63,,"                        ""</sv:node>"" +"
139212,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportBestEffortTest.java,64,,"            String xml = ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>"" +"
139213,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportBestEffortTest.java,65,,"                    ""<sv:node sv:name=\""gFolder\"" xmlns:mix=\""http://www.jcp.org/jcr/mix/1.0\"" xmlns:nt=\""http://www.jcp.org/jcr/nt/1.0\"" xmlns:fn_old=\""http://www.w3.org/2004/10/xpath-functions\"" xmlns:fn=\""http://www.w3.org/2005/xpath-functions\"" xmlns:xs=\""http://www.w3.org/2001/XMLSchema\"" xmlns:sv=\""http://www.jcp.org/jcr/sv/1.0\"" xmlns:rep=\""internal\"" xmlns:jcr=\""http://www.jcp.org/jcr/1.0\"">"" +"
139214,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportBestEffortTest.java,69,,"                        ""   <sv:property sv:name=\""rep:principalName\"" sv:type=\""String\""><sv:value>g1</sv:value></sv:property>"" +"
139215,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportBestEffortTest.java,70,,"                        ""   <sv:property sv:name=\""rep:members\"" sv:type=\""WeakReference\""><sv:value>"" +id+ ""</sv:value></sv:property>"" +"
139216,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportBestEffortTest.java,71,,"                        ""</sv:node>"" +"
139217,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportIgnoreTest.java,55,,"                ""   <sv:property sv:name=\""jcr:uuid\"" sv:type=\""String\""><sv:value>""+invalidId+""</sv:value></sv:property>"" +"
139218,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportIgnoreTest.java,56,,"                ""   <sv:property sv:name=\""rep:principalName\"" sv:type=\""String\""><sv:value>g1</sv:value></sv:property>"" +"
139219,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportIgnoreTest.java,57,,"                ""   <sv:property sv:name=\""rep:members\"" sv:type=\""WeakReference\""><sv:value>"" +invalidId+ ""</sv:value></sv:property>"" +"
139220,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportIgnoreTest.java,58,,"                ""</sv:node>"" +"
139221,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportTest.java,60,,"        String xml = ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>\n"" +"
139222,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportTest.java,61,,"                ""<sv:node sv:name=\""g\"" xmlns:mix=\""http://www.jcp.org/jcr/mix/1.0\"" xmlns:nt=\""http://www.jcp.org/jcr/nt/1.0\"" xmlns:fn_old=\""http://www.w3.org/2004/10/xpath-functions\"" xmlns:fn=\""http://www.w3.org/2005/xpath-functions\"" xmlns:xs=\""http://www.w3.org/2001/XMLSchema\"" xmlns:sv=\""http://www.jcp.org/jcr/sv/1.0\"" xmlns:rep=\""internal\"" xmlns:jcr=\""http://www.jcp.org/jcr/1.0\"">"" +"
139223,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportTest.java,62,,"                ""   <sv:property sv:name=\""jcr:primaryType\"" sv:type=\""Name\""><sv:value>rep:Group</sv:value></sv:property>"" +"
139224,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportTest.java,63,,"                ""   <sv:property sv:name=\""jcr:uuid\"" sv:type=\""String\""><sv:value>b2f5ff47-4366-31b6-a533-d8dc3614845d</sv:value></sv:property>"" +"
139225,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportTest.java,64,,"                ""   <sv:property sv:name=\""rep:principalName\"" sv:type=\""String\""><sv:value>g</sv:value></sv:property>"" +"
139226,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportTest.java,65,,"                ""</sv:node>"";"
139227,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportTest.java,96,,"                ""<sv:node sv:name=\""gFolder\"" xmlns:mix=\""http://www.jcp.org/jcr/mix/1.0\"" xmlns:nt=\""http://www.jcp.org/jcr/nt/1.0\"" xmlns:fn_old=\""http://www.w3.org/2004/10/xpath-functions\"" xmlns:fn=\""http://www.w3.org/2005/xpath-functions\"" xmlns:xs=\""http://www.w3.org/2001/XMLSchema\"" xmlns:sv=\""http://www.jcp.org/jcr/sv/1.0\"" xmlns:rep=\""internal\"" xmlns:jcr=\""http://www.jcp.org/jcr/1.0\"">"" +"
139228,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportTest.java,162,,"        String xml = ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>"" +"
139229,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportTest.java,226,,"                ""       <sv:property sv:name=\""jcr:primaryType\"" sv:type=\""Name\""><sv:value>rep:Group</sv:value></sv:property>"" +"
139230,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportTest.java,230,,"                ""   </sv:node>"" +"
139231,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportWithActionsBestEffortTest.java,84,,"                        ""         <sv:value>"" + uuid1 + ""</sv:value>"" +"
139232,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportWithActionsBestEffortTest.java,84,,"                        ""         <sv:value>"" + uuid1 + ""</sv:value>"" +"
139233,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportWithActionsTest.java,84,,"                        ""         <sv:value>"" + uuid1 + ""</sv:value>"" +"
139234,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/GroupImportWithActionsTest.java,84,,"                        ""         <sv:value>"" + uuid1 + ""</sv:value>"" +"
139235,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/RemappingTest.java,48,,"    private List<String> mappedPaths = ImmutableList.of(""my:property"", ""my:node/my:property2"");"
139236,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/RemappingTest.java,48,,"    private List<String> mappedPaths = ImmutableList.of(""my:property"", ""my:node/my:property2"");"
139237,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/RemappingTest.java,56,,"        Value value = superuser.getValueFactory().createValue(""value"");"
139238,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/RemappingTest.java,122,,"        Map<String, String> m = ImmutableMap.of(""my:property"", ""my:value"", ""my:node/my:property2"", ""my:value"");"
139239,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/SystemUserImportTest.java,83,,"        String xml = ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>\n"" +"
139240,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/SystemUserImportTest.java,84,,"                ""<sv:node sv:name=\""t\"" xmlns:mix=\""http://www.jcp.org/jcr/mix/1.0\"" xmlns:nt=\""http://www.jcp.org/jcr/nt/1.0\"" xmlns:fn_old=\""http://www.w3.org/2004/10/xpath-functions\"" xmlns:fn=\""http://www.w3.org/2005/xpath-functions\"" xmlns:xs=\""http://www.w3.org/2001/XMLSchema\"" xmlns:sv=\""http://www.jcp.org/jcr/sv/1.0\"" xmlns:rep=\""internal\"" xmlns:jcr=\""http://www.jcp.org/jcr/1.0\"">"" +"
139241,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/SystemUserImportTest.java,85,,"                ""   <sv:property sv:name=\""jcr:primaryType\"" sv:type=\""Name\""><sv:value>rep:SystemUser</sv:value></sv:property>"" +"
139242,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/SystemUserImportTest.java,86,,"                ""   <sv:property sv:name=\""jcr:uuid\"" sv:type=\""String\""><sv:value>e358efa4-89f5-3062-b10d-d7316b65649e</sv:value></sv:property>"" +"
139243,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/SystemUserImportTest.java,87,,"                ""   <sv:property sv:name=\""rep:principalName\"" sv:type=\""String\""><sv:value>t</sv:value></sv:property>"" +"
139244,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/SystemUserImportTest.java,89,,"                ""</sv:node>"";"
139245,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/SystemUserImportTest.java,176,,"                ""   <sv:property sv:name=\""jcr:uuid\"" sv:type=\""String\""><sv:value>"" + mismatchUUID + ""</sv:value></sv:property>"" +"
139246,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/SystemUserImportTest.java,347,,"                ""   <sv:property sv:name=\""jcr:primaryType\"" sv:type=\""Name\""><sv:value>rep:AuthorizableFolder</sv:value></sv:property>"" +"
139247,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/SystemUserImportTest.java,505,,"        assertTrue(s.propertyExists(newUser.getPath() + ""/rep:authorizableId""));"
139248,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportBestEffortTest.java,53,,"        String xml = ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>\n"" +"
139249,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportBestEffortTest.java,54,,"                ""<sv:node sv:name=\""t\"" xmlns:mix=\""http://www.jcp.org/jcr/mix/1.0\"" xmlns:nt=\""http://www.jcp.org/jcr/nt/1.0\"" xmlns:fn_old=\""http://www.w3.org/2004/10/xpath-functions\"" xmlns:fn=\""http://www.w3.org/2005/xpath-functions\"" xmlns:xs=\""http://www.w3.org/2001/XMLSchema\"" xmlns:sv=\""http://www.jcp.org/jcr/sv/1.0\"" xmlns:rep=\""internal\"" xmlns:jcr=\""http://www.jcp.org/jcr/1.0\"">"" +"
139250,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportBestEffortTest.java,55,,"                ""   <sv:property sv:name=\""jcr:primaryType\"" sv:type=\""Name\""><sv:value>rep:User</sv:value></sv:property>"" +"
139251,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportBestEffortTest.java,56,,"                ""   <sv:property sv:name=\""jcr:uuid\"" sv:type=\""String\""><sv:value>e358efa4-89f5-3062-b10d-d7316b65649e</sv:value></sv:property>"" +"
139252,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportBestEffortTest.java,57,,"                ""   <sv:property sv:name=\""rep:password\"" sv:type=\""String\""><sv:value>{sha1}8efd86fb78a56a5145ed7739dcb00c78581c5375</sv:value></sv:property>"" +"
139253,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportBestEffortTest.java,58,,"                ""   <sv:property sv:name=\""rep:principalName\"" sv:type=\""String\""><sv:value>t</sv:value></sv:property>"" +"
139254,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportBestEffortTest.java,59,,"                ""</sv:node>"";"
139255,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportCacheTest.java,53,,"                ""   </sv:property>"" +"
139256,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportFromJackrabbit.java,74,,"        String xml = ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>\n"" +"
139257,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportFromJackrabbit.java,75,,"                ""<sv:node sv:name=\""""+uid+""\"" xmlns:mix=\""http://www.jcp.org/jcr/mix/1.0\"" xmlns:nt=\""http://www.jcp.org/jcr/nt/1.0\"" xmlns:fn_old=\""http://www.w3.org/2004/10/xpath-functions\"" xmlns:fn=\""http://www.w3.org/2005/xpath-functions\"" xmlns:xs=\""http://www.w3.org/2001/XMLSchema\"" xmlns:sv=\""http://www.jcp.org/jcr/sv/1.0\"" xmlns:rep=\""internal\"" xmlns:jcr=\""http://www.jcp.org/jcr/1.0\"">"" +"
139258,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportFromJackrabbit.java,75,,"                ""<sv:node sv:name=\""""+uid+""\"" xmlns:mix=\""http://www.jcp.org/jcr/mix/1.0\"" xmlns:nt=\""http://www.jcp.org/jcr/nt/1.0\"" xmlns:fn_old=\""http://www.w3.org/2004/10/xpath-functions\"" xmlns:fn=\""http://www.w3.org/2005/xpath-functions\"" xmlns:xs=\""http://www.w3.org/2001/XMLSchema\"" xmlns:sv=\""http://www.jcp.org/jcr/sv/1.0\"" xmlns:rep=\""internal\"" xmlns:jcr=\""http://www.jcp.org/jcr/1.0\"">"" +"
139259,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportFromJackrabbit.java,76,,"                ""   <sv:property sv:name=\""jcr:primaryType\"" sv:type=\""Name\""><sv:value>rep:User</sv:value></sv:property>"" +"
139260,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportFromJackrabbit.java,77,,"                ""   <sv:property sv:name=\""jcr:uuid\"" sv:type=\""String\""><sv:value>e358efa4-89f5-3062-b10d-d7316b65649e</sv:value></sv:property>"" +"
139261,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportFromJackrabbit.java,78,,"                ""   <sv:property sv:name=\""rep:password\"" sv:type=\""String\""><sv:value>{sha1}8efd86fb78a56a5145ed7739dcb00c78581c5375</sv:value></sv:property>"" +"
139262,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportFromJackrabbit.java,79,,"                ""   <sv:property sv:name=\""rep:principalName\"" sv:type=\""String\""><sv:value>t</sv:value></sv:property>"" +"
139263,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportFromJackrabbit.java,80,,"                ""   <sv:property sv:name=\""rep:disabled\"" sv:type=\""String\""><sv:value>disabledUser</sv:value></sv:property>"" +"
139264,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportFromJackrabbit.java,81,,"                ""</sv:node>"";"
139265,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportFromJackrabbit.java,194,,"        assertEquals(""user path"", Text.getRelativeParent(initialPath, 1) + '/' + uid, newUser.getPath());"
139266,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportFromJackrabbit.java,245,,"            fail(""Importing an authorizable with mismatch between authorizableId and uuid must fail."");"
139267,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportHistoryTest.java,56,,"                ""   </sv:property>"" +"
139268,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportInitialPwChangeTest.java,69,,"        String xml = ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>\n"" +"
139269,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportInitialPwChangeTest.java,71,,"                ""   <sv:property sv:name=\""jcr:primaryType\"" sv:type=\""Name\""><sv:value>rep:User</sv:value></sv:property>"" +"
139270,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportInitialPwChangeTest.java,73,,"                ""   <sv:property sv:name=\""rep:authorizableId\"" sv:type=\""String\""><sv:value>t</sv:value></sv:property>"" +"
139271,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportInitialPwChangeTest.java,74,,"                ""   <sv:property sv:name=\""rep:password\"" sv:type=\""String\""><sv:value>{sha1}8efd86fb78a56a5145ed7739dcb00c78581c5375</sv:value></sv:property>"" +"
139272,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportInitialPwChangeTest.java,75,,"                ""   <sv:property sv:name=\""rep:principalName\"" sv:type=\""String\""><sv:value>t</sv:value></sv:property>""+"
139273,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportInitialPwChangeTest.java,76,,"                ""</sv:node>"";"
139274,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportInitialPwChangeTest.java,104,,"                ""   <sv:property sv:name=\""jcr:uuid\"" sv:type=\""String\""><sv:value>""+uuid+""</sv:value></sv:property>"" +"
139275,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportPwExpiryTest.java,68,,"        String xml = ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>\n"" +"
139276,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportPwExpiryTest.java,70,,"                ""   <sv:property sv:name=\""jcr:primaryType\"" sv:type=\""Name\"">"" +"
139277,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportPwExpiryTest.java,71,,"                ""      <sv:value>rep:User</sv:value>"" +"
139278,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportPwExpiryTest.java,72,,"                ""   </sv:property>"" +"
139279,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportPwExpiryTest.java,76,,"                ""   <sv:property sv:name=\""rep:password\"" sv:type=\""String\"">"" +"
139280,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportPwExpiryTest.java,79,,"                ""   <sv:property sv:name=\""rep:principalName\"" sv:type=\""String\"">"" +"
139281,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportPwExpiryTest.java,85,,"                ""      </sv:property>"" +"
139282,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportPwExpiryTest.java,87,,"                ""</sv:node>"";"
139283,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportTest.java,66,,"        String xml = ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>\n"" +"
139284,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportTest.java,67,,"                ""<sv:node sv:name=\""t\"" xmlns:mix=\""http://www.jcp.org/jcr/mix/1.0\"" xmlns:nt=\""http://www.jcp.org/jcr/nt/1.0\"" xmlns:fn_old=\""http://www.w3.org/2004/10/xpath-functions\"" xmlns:fn=\""http://www.w3.org/2005/xpath-functions\"" xmlns:xs=\""http://www.w3.org/2001/XMLSchema\"" xmlns:sv=\""http://www.jcp.org/jcr/sv/1.0\"" xmlns:rep=\""internal\"" xmlns:jcr=\""http://www.jcp.org/jcr/1.0\"">"" +"
139285,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportTest.java,68,,"                ""   <sv:property sv:name=\""jcr:primaryType\"" sv:type=\""Name\""><sv:value>rep:User</sv:value></sv:property>"" +"
139286,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportTest.java,69,,"                ""   <sv:property sv:name=\""jcr:uuid\"" sv:type=\""String\""><sv:value>e358efa4-89f5-3062-b10d-d7316b65649e</sv:value></sv:property>"" +"
139287,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportTest.java,70,,"                ""   <sv:property sv:name=\""rep:password\"" sv:type=\""String\""><sv:value>{sha1}8efd86fb78a56a5145ed7739dcb00c78581c5375</sv:value></sv:property>"" +"
139288,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportTest.java,71,,"                ""   <sv:property sv:name=\""rep:principalName\"" sv:type=\""String\""><sv:value>t</sv:value></sv:property>"" +"
139289,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportTest.java,73,,"                ""</sv:node>"";"
139290,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportTest.java,154,,"                ""   <sv:property sv:name=\""jcr:uuid\"" sv:type=\""String\""><sv:value>"" + mismatchUUID + ""</sv:value></sv:property>"" +"
139291,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportTest.java,327,,"                ""   <sv:property sv:name=\""jcr:primaryType\"" sv:type=\""Name\""><sv:value>rep:AuthorizableFolder</sv:value></sv:property>"" +"
139292,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportTest.java,406,,"                ""<sv:node sv:name=\""r\"" xmlns:mix=\""http://www.jcp.org/jcr/mix/1.0\"" xmlns:nt=\""http://www.jcp.org/jcr/nt/1.0\"" xmlns:fn_old=\""http://www.w3.org/2004/10/xpath-functions\"" xmlns:fn=\""http://www.w3.org/2005/xpath-functions\"" xmlns:xs=\""http://www.w3.org/2001/XMLSchema\"" xmlns:sv=\""http://www.jcp.org/jcr/sv/1.0\"" xmlns:rep=\""internal\"" xmlns:jcr=\""http://www.jcp.org/jcr/1.0\"">"" +"
139293,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportTest.java,408,,"                ""   <sv:property sv:name=\""jcr:uuid\"" sv:type=\""String\""><sv:value>4b43b0ae-e356-34cd-95b9-10189b3dc231</sv:value></sv:property>"" +"
139294,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportTest.java,524,,"        assertTrue(s.propertyExists(newUser.getPath() + ""/rep:authorizableId""));"
139295,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportWithActionsTest.java,84,,"        String xml = ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>\n"" +"
139296,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportWithActionsTest.java,85,,"                ""<sv:node sv:name=\""t\"" xmlns:mix=\""http://www.jcp.org/jcr/mix/1.0\"" xmlns:nt=\""http://www.jcp.org/jcr/nt/1.0\"" xmlns:fn_old=\""http://www.w3.org/2004/10/xpath-functions\"" xmlns:fn=\""http://www.w3.org/2005/xpath-functions\"" xmlns:xs=\""http://www.w3.org/2001/XMLSchema\"" xmlns:sv=\""http://www.jcp.org/jcr/sv/1.0\"" xmlns:rep=\""internal\"" xmlns:jcr=\""http://www.jcp.org/jcr/1.0\"">"" +"
139297,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportWithActionsTest.java,87,,"                ""   <sv:property sv:name=\""jcr:uuid\"" sv:type=\""String\""><sv:value>e358efa4-89f5-3062-b10d-d7316b65649e</sv:value></sv:property>"" +"
139298,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserImportWithActionsTest.java,90,,"                ""</sv:node>"";"
139299,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserManagerTest.java,313,,"                fail(""Principal "" + p.getName() + "" is already in use -> must throw AuthorizableExistsException."");"
139300,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserManagerTest.java,313,,"                fail(""Principal "" + p.getName() + "" is already in use -> must throw AuthorizableExistsException."");"
139301,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserQueryTest.java,87,,"        Group insects = createGroup(""insects"");"
139302,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserQueryTest.java,88,,"        vertebrates = createGroup(""vertebrates"");"
139303,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserQueryTest.java,110,,"        User ant = createUser(""ant"", ""leaves"", 0.5, false);"
139304,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserQueryTest.java,149,,"        setProperty(""color"", vf.createValue(""black""), blackWidow, gardenSpider, ant, fly, lizard, salamander);"
139305,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserQueryTest.java,152,,"        setProperty(""numberOfLegs"", vf.createValue(2), kangaroo, gibbon, kestrel, goose, dove);"
139306,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserQueryTest.java,159,,"        setProperty(""continent"", vf.createValue(""africa""), lemur, gibbon);"
139307,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserQueryTest.java,448,,"                        gt(""profile/@weight"", vf.createValue(2000.0)));"
139308,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserQueryTest.java,455,,"                    Value[] weight = user.getProperty(""profile/weight"");"
139309,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserQueryTest.java,523,,"                        like(""profile/@food"", ""m%""));"
139310,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserQueryTest.java,567,,"                        contains(""@color"", ""gold""));"
139311,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserQueryTest.java,776,,"                builder.setCondition(builder.exists(""@continent""));"
139312,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserTest.java,95,,"            user.changePassword(""changed"");"
139313,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/security/user/UserTest.java,196,,"        String reason = ""readonly user is disabled!"";"
139314,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/session/SessionImplCapabilityWithMountInfoProviderTest.java,48,,"        MountInfoProvider mip = Mounts.newBuilder().readOnlyMount(""ro"", ""/private"").build();"
139315,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/session/SessionImplCapabilityWithMountInfoProviderTest.java,89,,"                adminSession.hasCapability(""addNode"", adminSession.getNode(""/private""), new String[] {""foo""}));"
139316,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/session/SessionImplCapabilityWithMountInfoProviderTest.java,111,,"                assertFalse(""Unexpected return value for hasCapability("" + operation+ "") on node '"" + privateMountNode +""' from the private mount"","
139317,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/version/HiddenNodeTest.java,74,,"        Node test = session.getRootNode().addNode(""test"", ""nt:unstructured"");"
139318,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/version/HiddenNodeTest.java,74,,"        Node test = session.getRootNode().addNode(""test"", ""nt:unstructured"");"
139319,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/version/HiddenNodeTest.java,75,,"        test.addMixin(""mix:versionable"");"
139320,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/version/HiddenNodeTest.java,79,,"        builder.child(""test"").child("":hidden"").setProperty(""property"", ""value"");"
139321,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/version/HiddenNodeTest.java,79,,"        builder.child(""test"").child("":hidden"").setProperty(""property"", ""value"");"
139322,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/version/HiddenNodeTest.java,83,,"        Version v1 = vMgr.checkpoint(""/test"");"
139323,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/version/HiddenNodeTest.java,108,,"        testBuilder.setProperty("":hiddenProperty"", ""value"");"
139324,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/version/HiddenNodeTest.java,163,,"        test.addNode(""child"");"
139325,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/version/OpvIgnoreTest.java,106,,"        Node ignoreTestNode = testRootNode.addNode(""ignoreTestNode"", JcrConstants.NT_UNSTRUCTURED);"
139326,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/version/RestoreTest.java,39,,"        n.setProperty(""prop"", ""a"");"
139327,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/version/VersionablePathsTest.java,38,,"        assertTrue(vh.isNodeType(""rep:VersionablePaths""));"
139328,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/version/VersionableTest.java,66,,"        node.setProperty(propertyName1, ""foo"");"
139329,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/version/VersionableTest.java,70,,"            node.setProperty(propertyName1, ""bar"");"
139330,./TargetProjects/jackrabbit-oak/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/xml/ImportMvPropertyTest.java,54,,"        n1.setProperty(""test:multiProperty"", ""v1"");"
139331,./TargetProjects/jackrabbit-oak/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexMBean.java,46,,"            @Name(""indexPath"")"
139332,./TargetProjects/jackrabbit-oak/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexMBeanImpl.java,123,,"                    ""Lucene Index Stats"", IndexStats.TYPE, new String[]{""path""});"
139333,./TargetProjects/jackrabbit-oak/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/NodeStateAnalyzerFactory.java,177,,"            throw new RuntimeException(""Error occurred while instantiating Analyzer for "" + analyzerClazz, e);"
139334,./TargetProjects/jackrabbit-oak/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/IndexDefinitionBuilder.java,93,,"        tree.setProperty(""async"", ""async"");"
139335,./TargetProjects/jackrabbit-oak/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/writer/CommitMitigatingTieredMergePolicy.java,440,,"                message(""  seg="" + writer.get().segString(info) + "" size="" + String.format(Locale.ROOT, ""%.3f"", segBytes / 1024 / 1024.) + "" MB"" + extra);"
139336,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreLuceneIndexTest.java,98,,"        repoV1.setupIndexAndContentInRepo(""luceneTest"", ""foo"", false, VERSION_1);"
139337,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreLuceneIndexTest.java,98,,"        repoV1.setupIndexAndContentInRepo(""luceneTest"", ""foo"", false, VERSION_1);"
139338,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreLuceneIndexTest.java,147,,"        repoV2.getReadOnlyRoot().getNode(""libs"").addNode(""node-foo-0"").setProperty(""foo"", ""bar"");"
139339,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreLuceneIndexTest.java,159,,"        QueryResult result = repoV2.executeQuery(""explain /jcr:root//*[@foo = 'bar']"", ""xpath"");"
139340,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreLuceneIndexTest.java,159,,"        QueryResult result = repoV2.executeQuery(""explain /jcr:root//*[@foo = 'bar']"", ""xpath"");"
139341,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreLuceneIndexTest.java,165,,"        result = repoV2.executeQuery(""/jcr:root//*[@foo = 'bar'] order by @jcr:path"", ""xpath"");"
139342,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreLuceneIndexTest.java,167,,"                ""/libs/node-foo-0"", getResult(result, ""jcr:path""));"
139343,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreLuceneIndexTest.java,382,,"            compositeSession = (JackrabbitSession) compositeRepository.login(new SimpleCredentials(""admin"", ""admin"".toCharArray()));"
139344,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreQueryTest.java,73,,"        b = createIndexDefinition(readOnlyBuilder.child(INDEX_DEFINITIONS_NAME), ""foo"","
139345,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreQueryTest.java,90,,"            builder.child(""readOnly"").child(""node-"" + i).setProperty(""foo"", ""bar"");"
139346,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreQueryTest.java,90,,"            builder.child(""readOnly"").child(""node-"" + i).setProperty(""foo"", ""bar"");"
139347,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreQueryTest.java,90,,"            builder.child(""readOnly"").child(""node-"" + i).setProperty(""foo"", ""bar"");"
139348,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreQueryTest.java,102,,"                executeQuery(""explain /jcr:root//*[@foo = 'bar']"", ""xpath"", false).toString(),"
139349,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreQueryTest.java,110,,"            builder.child(""content"").child(""node-"" + i).setProperty(""foo"", ""bar"");"
139350,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreQueryTest.java,193,,"                .child(""asyncFoo"");"
139351,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/CompositeNodeStoreQueryTestBase.java,162,,"        readOnlyStore = register(mounts.create(""readOnly""));"
139352,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/blueGreen/CustomizedIndexTest.java,61,,"        p.session.getRootNode().addNode(""libs"").addNode(""test"").setProperty(""foo"", ""a"");"
139353,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/blueGreen/CustomizedIndexTest.java,63,,"        IndexUtils.createIndex(p, ""test-1"", ""foo"", 10);"
139354,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/blueGreen/CustomizedIndexTest.java,83,,"                ""/jcr:root//*[@foo] order by @jcr:path"","
139355,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/blueGreen/CustomizedIndexTest.java,93,,"        IndexUtils.createIndex(p, ""test-2"", ""foo"", 20);"
139356,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/blueGreen/CustomizedIndexTest.java,115,,"        Node n = IndexUtils.createIndex(p, ""test-2-custom-1"", ""foo"", 10);"
139357,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/composite/blueGreen/CustomizedIndexTest.java,116,,"        n.setProperty(""merges"", new String[]{""/oak:index/test-2""});"
139358,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/AtomicCounterIT.java,77,,"        NodeBuilder lucene = newLuceneIndexDefinition(index, ""lucene"", ImmutableSet.of(""String""), null, ""async"");"
139359,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/LuceneOakRepositoryStub.java,91,,"                        .setProperty(JCR_PRIMARYTYPE, ""nt:unstructured"", NAME)"
139360,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,68,,"        node.setProperty(""name"", ""jc/text"");"
139361,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,68,,"        node.setProperty(""name"", ""jc/text"");"
139362,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,113,,"        Node n1 = testRootNode.addNode(""node1"");"
139363,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,114,,"        n1.setProperty(""text"", ""hello"");"
139364,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,114,,"        n1.setProperty(""text"", ""hello"");"
139365,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,115,,"        Node n2 = testRootNode.addNode(""node2"");"
139366,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,116,,"        n2.setProperty(""text"", ""hallo"");"
139367,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,117,,"        Node n3 = testRootNode.addNode(""node3"");"
139368,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,118,,"        n3.setProperty(""text"", ""oh hallo"");"
139369,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,268,,"        n1.setProperty(""jcr:title"", ""apache jackrabbit oak"");"
139370,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,269,,"        n1.setProperty(""tags"", new String[]{""software"", ""repository"", ""apache""});"
139371,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,276,,"        Node n4 = testRootNode.addNode(""node4"");"
139372,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,373,,"        String sql2 = ""select [jcr:path], [rep:facet("" + pn + "")] from [nt:base] "" +"
139373,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,373,,"        String sql2 = ""select [jcr:path], [rep:facet("" + pn + "")] from [nt:base] "" +"
139374,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,374,,"                ""where contains(["" + pn + ""], 'hallo') order by [jcr:path]"";"
139375,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,374,,"                ""where contains(["" + pn + ""], 'hallo') order by [jcr:path]"";"
139376,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,467,,"        Node n11 = testRootNode.addNode(""node11"");"
139377,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,469,,"        Node n12 = testRootNode.addNode(""node12"");"
139378,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,655,,"        deny(testRootNode.addNode(""test1"")).setProperty(""jcr:title"", ""test1"");"
139379,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,656,,"        deny(testRootNode.addNode(""test2"")).addNode(""child"").setProperty(""jcr:title"", ""test2"");"
139380,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,656,,"        deny(testRootNode.addNode(""test2"")).addNode(""child"").setProperty(""jcr:title"", ""test2"");"
139381,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,657,,"        deny(testRootNode.addNode(""test3"").addNode(""child"")).setProperty(""jcr:title"", ""test3"");"
139382,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,662,,"        Query q = queryManager.createQuery(""//*[@jcr:title]/(rep:facet(jcr:title))"", Query.XPATH);"
139383,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,666,,"        assertNotNull(""facetResult is null"", facetResult);"
139384,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/FacetTest.java,690,,"        deny(testRootNode.addNode(""test1"")).setProperty(""jcr:title"", ""test"");"
139385,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryFulltextTest.java,39,,"        Node n1 = testRootNode.addNode(""node1"");"
139386,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryFulltextTest.java,40,,"        n1.setProperty(""text"", ""hello hello hello"");"
139387,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryFulltextTest.java,42,,"        n2.setProperty(""text"", ""hello"");"
139388,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryFulltextTest.java,79,,"        String sql2 = ""select [jcr:path] as [path] from [nt:base] "" +"
139389,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/QueryFulltextTest.java,82,,"        assertEquals("""", getResult(q.execute(), ""path""));"
139390,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/SpellcheckTest.java,44,,"        n1.setProperty(""text"", ""hello hello hello alt"");"
139391,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/SpellcheckTest.java,76,,"        n1.setProperty(""jcr:title"", ""it is always a good idea to go visiting ontario"");"
139392,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/SuggestTest.java,68,,"        Node n1 = testRootNode.addNode(""node1"");"
139393,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/SuggestTest.java,69,,"        n1.setProperty(""jcr:title"", ""in 2015 my fox is red, like mike's fox and john's fox"");"
139394,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/SuggestTest.java,69,,"        n1.setProperty(""jcr:title"", ""in 2015 my fox is red, like mike's fox and john's fox"");"
139395,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/SuggestTest.java,70,,"        Node n2 = testRootNode.addNode(""node2"");"
139396,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/SuggestTest.java,71,,"        n2.setProperty(""jcr:title"", ""in 2015 a red fox is still a fox"");"
139397,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/jcr/query/SuggestTest.java,76,,"        List<String> result = getResult(q.execute(), ""rep:suggest()"");"
139398,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/ActiveDeletedBlobCollectorMBeanImplTest.java,129,,"                new IndexMBeanInfoSupplier(""foo-async"", statusSupplier, returnExecCount::get)"
139399,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/AsyncIndexStatsUpdateCallbackTest.java,107,,"                .property(""foo"").analyzed().nodeScopeIndex().ordered().useInExcerpt().propertyIndex();"
139400,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/AsyncIndexStatsUpdateCallbackTest.java,111,,"        root.getTree(""/"").addChild(""content"").addChild(""c1"").setProperty(""foo"", ""bar"");"
139401,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/AsyncIndexStatsUpdateCallbackTest.java,117,,"        root.getTree(""/content"").addChild(""c2"").setProperty(""foo"", ""bar"");"
139402,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/BadIndexTrackerTest.java,38,,"        tracker.markBadIndexForRead(""foo"", new Exception());"
139403,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/ExcerptTest.java,81,,"        Tree notIndexedProp = properties.addChild(""baz"");"
139404,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/ExcerptTest.java,118,,"        Tree contentRoot = root.getTree(""/"").addChild(""testRoot"");"
139405,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/ExcerptTest.java,119,,"        contentRoot.setProperty(""foo"", ""is fox ifoxing"");"
139406,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/ExcerptTest.java,119,,"        contentRoot.setProperty(""foo"", ""is fox ifoxing"");"
139407,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,90,,"        Tree test = root.getTree(""/"").addChild(""test"");"
139408,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,93,,"            low.setProperty(""jcr:primaryType"", ""nt:unstructured"", Type.NAME);"
139409,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,93,,"            low.setProperty(""jcr:primaryType"", ""nt:unstructured"", Type.NAME);"
139410,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,100,,"        assertThat(explain(query), containsString(""traverse""));"
139411,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,101,,"        assertQuery(query, Lists.newArrayList(""/test/b"", ""/test/B""));"
139412,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,101,,"        assertQuery(query, Lists.newArrayList(""/test/b"", ""/test/B""));"
139413,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,105,,"        assertQuery(queryXPath, ""xpath"", Lists.newArrayList(""/test/b"", ""/test/B""));"
139414,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,122,,"                .addChild(""nt:base"")"
139415,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,137,,"        assertThat(explain(query), containsString(""lucene:lowerLocalName""));"
139416,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,217,,"        Tree luceneIndex = createIndex(""upper"", Collections.<String>emptySet());"
139417,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,231,,"            a.setProperty(""name"", ""10% foo"");"
139418,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,237,,"        assertThat(explain(query), containsString(""lucene:upper""));"
139419,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,255,,"        Tree upper = TestUtil.enableFunctionIndex(props, ""upper([foo])"");"
139420,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,266,,"        a.setProperty(""foo"", ""hello"");"
139421,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,287,,"                ""\t  from [nt:unstructured] as a\n"" +"
139422,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,295,,"        assertEquals(""Ordering doesn't match"", asList(""10 percent"", ""10%"", ""Hallo"", ""hello"", ""World!""), result);"
139423,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,336,,"        a.setProperty(""foo2"", ""b2"");"
139424,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,359,,"        String query = ""select a.[foo],a.[foo2]\n"" +"
139425,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,367,,"        assertEquals(""Ordering doesn't match"", asList(""a1, b1"", ""a1, b2"", ""a1, b3"", ""a2, b3"", ""a3, b1""), result);"
139426,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,367,,"        assertEquals(""Ordering doesn't match"", asList(""a1, b1"", ""a1, b2"", ""a1, b3"", ""a2, b3"", ""a3, b1""), result);"
139427,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,367,,"        assertEquals(""Ordering doesn't match"", asList(""a1, b1"", ""a1, b2"", ""a1, b3"", ""a2, b3"", ""a3, b1""), result);"
139428,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,367,,"        assertEquals(""Ordering doesn't match"", asList(""a1, b1"", ""a1, b2"", ""a1, b3"", ""a2, b3"", ""a3, b1""), result);"
139429,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,367,,"        assertEquals(""Ordering doesn't match"", asList(""a1, b1"", ""a1, b2"", ""a1, b3"", ""a2, b3"", ""a3, b1""), result);"
139430,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,369,,"        query = ""select a.[foo2],a.[foo]\n"" +"
139431,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,375,,"        assertEquals(""Ordering doesn't match"", asList(""b1, a1"", ""b1, a3"", ""b2, a1"", ""b3, a1"", ""b3, a2""), result);"
139432,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,375,,"        assertEquals(""Ordering doesn't match"", asList(""b1, a1"", ""b1, a3"", ""b2, a1"", ""b3, a1"", ""b3, a2""), result);"
139433,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,375,,"        assertEquals(""Ordering doesn't match"", asList(""b1, a1"", ""b1, a3"", ""b2, a1"", ""b3, a1"", ""b3, a2""), result);"
139434,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,375,,"        assertEquals(""Ordering doesn't match"", asList(""b1, a1"", ""b1, a3"", ""b2, a1"", ""b3, a1"", ""b3, a2""), result);"
139435,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,375,,"        assertEquals(""Ordering doesn't match"", asList(""b1, a1"", ""b1, a3"", ""b2, a1"", ""b3, a1"", ""b3, a2""), result);"
139436,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,734,,"        a = test.addChild(""jcr:content"");"
139437,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,741,,"        String query = ""select [jcr:path]\n"" +"
139438,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,747,,"        assertEquals(""Ordering doesn't match"", asList(""/test/jcr:content"", ""/test/d2"", ""/test/d3"", ""/test/d1""), result);"
139439,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,747,,"        assertEquals(""Ordering doesn't match"", asList(""/test/jcr:content"", ""/test/d2"", ""/test/d3"", ""/test/d1""), result);"
139440,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,747,,"        assertEquals(""Ordering doesn't match"", asList(""/test/jcr:content"", ""/test/d2"", ""/test/d3"", ""/test/d1""), result);"
139441,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,747,,"        assertEquals(""Ordering doesn't match"", asList(""/test/jcr:content"", ""/test/d2"", ""/test/d3"", ""/test/d1""), result);"
139442,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,848,,"            a.setProperty(""foo"", ""bar"" + idx);"
139443,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/FunctionIndexTest.java,1075,,"                ""lucene:upper(/oak:index/upper)"", asList(""/a"",""/c"",""/b"",""/e"",""/d""));"
139444,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexCopierCleanupTest.java,247,,"        writeFile(cow2, ""fileX"");"
139445,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexCopierTest.java,129,,"        LuceneIndexDefinition defn = new LuceneIndexDefinition(root, builder.getNodeState(), ""/foo"");"
139446,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexCopierTest.java,800,,"        assertFalse(""t2 should NOT be copied to remote"", remote.fileExists(""t2""));"
139447,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexNodeManagerTest.java,92,,"        assertNull(LuceneIndexNodeManager.open(""/foo"", root, builder.getNodeState(), readerFactory, null));"
139448,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexNodeManagerTest.java,101,,"        TopDocs docs = node.getSearcher().search(new TermQuery(new Term(PATH, ""/content/en"")), 100);"
139449,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexNodeManagerTest.java,117,,"        rootBuilder.child(IndexNodeManager.ASYNC).setProperty(""async"", ""async"");"
139450,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexNodeManagerTest.java,159,,"        builder.child("":async"");"
139451,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,119,,"        NodeBuilder defn = newLucenePropertyIndexDefinition(builder, ""test"", of(""foo""), ""async"");"
139452,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,119,,"        NodeBuilder defn = newLucenePropertyIndexDefinition(builder, ""test"", of(""foo""), ""async"");"
139453,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,119,,"        NodeBuilder defn = newLucenePropertyIndexDefinition(builder, ""test"", of(""foo""), ""async"");"
139454,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,121,,"        LuceneIndexNode node = createIndexNode(new LuceneIndexDefinition(root, defn.getNodeState(), ""/foo""));"
139455,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,122,,"        FulltextIndexPlanner planner = new FulltextIndexPlanner(node, ""/foo"", createFilter(""nt:base""),"
139456,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,132,,"        FulltextIndexPlanner planner = new FulltextIndexPlanner(node, ""/foo"", createFilter(""nt:file""),"
139457,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,142,,"        filter.setFullTextConstraint(FullTextParser.parse(""."", ""mountain""));"
139458,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,153,,"        filter.restrictProperty(""foo"", Operator.EQUAL, PropertyValues.newString(""bar""));"
139459,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,215,,"        NodeBuilder foob = getNode(defn, ""indexRules/nt:base/properties/foo"");"
139460,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,637,,"        String queryNodeType = ""nt:unstructured"";"
139461,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,688,,"        FullTextExpression exp = FullTextParser.parse(""bar"", ""mountain OR valley"");"
139462,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,711,,"            FullTextParser.parse(""jcr:content/*"", ""mountain OR valley""));"
139463,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,796,,"        FullTextExpression fooExp = FullTextParser.parse(""jcr:content/bar"", ""mountain OR valley"");"
139464,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,797,,"        FullTextExpression barExp = FullTextParser.parse(""jcr:content/foo"", ""mountain OR valley"");"
139465,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,840,,"        filter.restrictProperty(""foo"", Operator.EQUAL, PropertyValues.newString(""/bar""));"
139466,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,1184,,"        defnb.indexRule(""oak:TestSuperType"");"
139467,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,1296,,"        LuceneIndexDefinition definition = new LuceneIndexDefinition(root, defn.getNodeState(), ""/test"");"
139468,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,1324,,"        NodeBuilder defn = newLucenePropertyIndexDefinition(builder, ""test"", of(""foo"", ""foo1"", ""foo2""), ""async"");"
139469,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,1324,,"        NodeBuilder defn = newLucenePropertyIndexDefinition(builder, ""test"", of(""foo"", ""foo1"", ""foo2""), ""async"");"
139470,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,1329,,"        doc.add(new StringField(""foo1"", ""bar1"", Field.Store.NO));"
139471,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,1389,,"        filter.restrictProperty(""foo2"", Operator.EQUAL, PropertyValues.newString(""bar2""));"
139472,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlannerTest.java,1562,,"        fooPD.setProperty(PROP_FUNCTION, ""lower([foo])"");"
139473,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexStatisticsTest.java,62,,"            writer.deleteDocuments(new Term(""foo"", ""bar1""));"
139474,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexStatisticsTest.java,108,,"        document.add(new StringField(""foo"", ""manualBar"", Field.Store.NO));"
139475,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexTrackerTest.java,71,,"            new LuceneIndexEditorProvider(), ""async"", false);"
139476,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexTrackerTest.java,79,,"        newLucenePropertyIndexDefinition(index, ""lucene"", ImmutableSet.of(""foo""), ""async"");"
139477,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexTrackerTest.java,82,,"        builder.setProperty(""foo"", ""bar"");"
139478,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexTrackerTest.java,90,,"        LuceneIndexNode indexNode = tracker.acquireIndexNode(""/oak:index/lucene"");"
139479,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexTrackerTest.java,114,,"        LuceneIndexNode indexNode = tracker.acquireIndexNode(""/oak:index/foo"");"
139480,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexlaneRepositoryTraversalTest.java,108,,"        asyncIndexUpdate = new AsyncIndexUpdate(""async"", nodeStore, compose(newArrayList("
139481,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneDocumentMakerTest.java,41,,"                .property(""foo"")"
139482,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregation2Test.java,165,,"            .newRuleWithName(NT_FILE, newArrayList(""jcr:content""))"
139483,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregation2Test.java,171,,"                newArrayList(""metadata"", ""renditions"", ""renditions/original"", ""comments"","
139484,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregation2Test.java,215,,"        Tree content = root.getTree(""/"").addChild(""content"");"
139485,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregation2Test.java,255,,"        node.setProperty(""format"", ""image/jpeg"", STRING);"
139486,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregation2Test.java,255,,"        node.setProperty(""format"", ""image/jpeg"", STRING);"
139487,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregation2Test.java,269,,"        assertQuery(statement, ""xpath"", expected);"
139488,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,67,,"                .newRuleWithName(NT_FOLDER, newArrayList(""myFile"", ""subfolder/subsubfolder/file""));"
139489,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,117,,"        resource.setProperty(JCR_PRIMARYTYPE, ""nt:resource"", Type.NAME);"
139490,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,118,,"        resource.setProperty(""jcr:lastModified"", Calendar.getInstance());"
139491,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,119,,"        resource.setProperty(""jcr:encoding"", ""UTF-8"");"
139492,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,119,,"        resource.setProperty(""jcr:encoding"", ""UTF-8"");"
139493,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,120,,"        resource.setProperty(""jcr:mimeType"", ""text/plain"");"
139494,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,120,,"        resource.setProperty(""jcr:mimeType"", ""text/plain"");"
139495,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,122,,"                ""the quick brown fox jumps over the lazy dog.""));"
139496,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,124,,"        assertQuery(sqlDog, ImmutableList.of(""/myFile""));"
139497,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,145,,"        Tree foo = unstrContent.addChild(""foo"");"
139498,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,190,,"        resource.setProperty(""jcr:title"", ""title"");"
139499,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,190,,"        resource.setProperty(""jcr:title"", ""title"");"
139500,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,191,,"        resource.setProperty(""jcr:description"", ""description"");"
139501,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,191,,"        resource.setProperty(""jcr:description"", ""description"");"
139502,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,196,,"        assertQuery(matchContentSimple, ""xpath"", ImmutableList.of(""/myFile""));"
139503,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,214,,"        Tree folder = root.getTree(""/"").addChild(""myFolder"");"
139504,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,232,,"        assertQuery(matchContentSimple, ""xpath"", ImmutableList.of(""/myFolder""));"
139505,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAggregationTest.java,271,,"        assertQuery(matchContentSimple, ""xpath"", ImmutableList.of(""/myFolder/myFile""));"
139506,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAugmentTest.java,92,,"        NodeTypeRegistry.register(root, IOUtils.toInputStream(TestUtil.TEST_NODE_TYPE), ""test nodeType"");"
139507,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAugmentTest.java,94,,"        TestUtil.enableForFullText(props, ""foo"");"
139508,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAugmentTest.java,99,,"        final String realSearchText = ""bar"";"
139509,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAugmentTest.java,116,,"        Tree test = root.getTree(""/"").addChild(""test"");"
139510,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAugmentTest.java,133,,"        TestUtil.enablePropertyIndex(props, ""foo1"", false);"
139511,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAugmentTest.java,134,,"        TestUtil.enablePropertyIndex(props, ""foo2"", false);"
139512,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAugmentTest.java,159,,"        node.setProperty(""foo1"", ""bar1"");"
139513,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAugmentTest.java,160,,"        node.setProperty(""foo2"", ""bar2"");"
139514,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAugmentTest.java,161,,"        Tree subChild = node.addChild(""subChild"");"
139515,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAugmentTest.java,387,,"        Tree node1 = createNodeWithType(root.getTree(""/""), ""node1"", TestUtil.NT_TEST);"
139516,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAugmentTest.java,458,,"        String query = ""SELECT [jcr:path] from ["" + TestUtil.NT_TEST + ""] WHERE [foo1]='bar1'"";"
139517,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAugmentTest.java,461,,"        query = ""EXPLAIN "" + query;"
139518,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAugmentTest.java,463,,"        assertTrue(""property index should have made the index selected ("" + paths.get(0) + "")"","
139519,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAugmentTest.java,464,,"            paths.get(0).contains(""/* lucene:test-index(""));"
139520,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexAugmentTest.java,527,,"        assertEquals(""Query augmentor should get called for full text constraints"", 1, queryingCounter.get());"
139521,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,93,,"        LuceneIndexDefinition idxDefn = new LuceneIndexDefinition(root, builder.getNodeState(), ""/foo"");"
139522,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,104,,"        assertTrue(""By default everything is indexed"", rule.isIndexed(""foo""));"
139523,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,115,,"        builder.setProperty(createProperty(INCLUDE_PROPERTY_NAMES, of(""foo"" , ""bar""), STRINGS));"
139524,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,220,,"        builder.setProperty(createProperty(INCLUDE_PROPERTY_NAMES, of(""foo"", ""foo1/bar"", ""foo2/bar2/baz""), STRINGS));"
139525,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,222,,"        IndexingRule rule = defn.getApplicableIndexingRule(asState(newNode(""nt:folder"")));"
139526,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,234,,"        TestUtil.child(rules, ""nt:folder/properties/prop1"")"
139527,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,240,,"        assertNull(defn.getApplicableIndexingRule(asState(newNode(""nt:base""))));"
139528,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,246,,"        assertTrue(rule1.isIndexed(""prop1""));"
139529,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,247,,"        assertFalse(rule1.isIndexed(""prop2""));"
139530,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,258,,"        rules.child(""nt:hierarchyNode"").setProperty(FulltextIndexConstants.FIELD_BOOST, 2.0);"
139531,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,346,,"        TestUtil.child(rules, ""nt:folder/properties/prop2"")"
139532,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,358,,"        assertTrue(rule1.isIndexed(""fooProp""));"
139533,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,467,,"                ""lucene"", of(TYPENAME_STRING));"
139534,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,492,,"        NodeBuilder defnb = newLucenePropertyIndexDefinition(builder, ""test"", of(""foo""), ""async"");"
139535,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,639,,"        app.child(""test"").setProperty(FulltextIndexConstants.TIKA_MAPPED_TYPE, ""text/plain"");"
139536,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,672,,"        TestUtil.child(rules, ""oak:TestNode/properties/prop2"")"
139537,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,1043,,"        defnb.indexRule(""oak:TestSuperType"");"
139538,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexDefinitionTest.java,1058,,"        assertNull(getRule(defn, ""oak:TestMixA""));"
139539,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditor2Test.java,78,,"        defnb.indexRule(""nt:base"").property(""foo"").propertyIndex();"
139540,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditor2Test.java,78,,"        defnb.indexRule(""nt:base"").property(""foo"").propertyIndex();"
139541,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditor2Test.java,87,,"        builder.child(""a"").setProperty(""foo"", ""bar"");"
139542,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditor2Test.java,111,,"        builder.child(""a"").setProperty(""foo2"", ""bar"");"
139543,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditor2Test.java,122,,"        builder.child(""a"").setProperty(""foo"", ""bar2"");"
139544,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditor2Test.java,145,,"        defnb.indexRule(""nt:base"").property(""jcr:content/metadata/foo"").propertyIndex();"
139545,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorProviderTest.java,65,,"        IndexUpdateCallback callback = new TestCallback(""/oak:index/fooIndex"", newCommitInfo(), false, false);"
139546,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorProviderTest.java,66,,"        NodeBuilder defnBuilder = createIndexDefinition(""fooIndex"").builder();"
139547,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorProviderTest.java,74,,"            builderFromContext.setProperty(""foo"", ""bar"");"
139548,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorTest.java,148,,"        NodeBuilder idxnb = newLuceneIndexDefinitionV2(index, ""lucene"","
139549,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorTest.java,150,,"        LuceneIndexDefinition defn = new LuceneIndexDefinition(root, idxnb.getNodeState(), ""/foo"");"
139550,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorTest.java,152,,"        builder.child(""test"").setProperty(""foo"", ""fox is jumping"");"
139551,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorTest.java,152,,"        builder.child(""test"").setProperty(""foo"", ""fox is jumping"");"
139552,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorTest.java,152,,"        builder.child(""test"").setProperty(""foo"", ""fox is jumping"");"
139553,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorTest.java,153,,"        builder.child(""test"").setProperty(""price"", 100);"
139554,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorTest.java,160,,"        assertEquals(""/test"", query(escape(FieldNames.createAnalyzedFieldName(""foo""))+"":fox"", defn));"
139555,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorTest.java,174,,"        builder.child(""test"").setProperty(""foo"", ""bar"");"
139556,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorTest.java,208,,"        builder.child(""test"").setProperty(""bar"", ""kite is flying"");"
139557,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorTest.java,248,,"        builder.child(""test2"").setProperty(""bar"", ""kite is flying"");"
139558,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorTest.java,325,,"        nb.setProperty(createProperty(INCLUDE_PROPERTY_NAMES, of(""foo"", ""jcr:content/mime"","
139559,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorTest.java,330,,"        builder.child(""test"").child(""jcr:content"").setProperty(""mime"", ""text"");"
139560,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorTest.java,330,,"        builder.child(""test"").child(""jcr:content"").setProperty(""mime"", ""text"");"
139561,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexEditorTest.java,331,,"        builder.child(""test"").child(""jcr:content"").child(""metadata"").setProperty(""type"", ""image"");"
139562,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexExclusionQueryTest.java,79,,"        one.setProperty(""jcr:title"", ""abc"");"
139563,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexExclusionQueryTest.java,79,,"        one.setProperty(""jcr:title"", ""abc"");"
139564,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexPathRestrictionTest.java,77,,"                new LuceneIndexDefinitionBuilder(rootBuilder.child(IndexConstants.INDEX_DEFINITIONS_NAME).child(""fooIndex""))"
139565,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexPathRestrictionTest.java,79,,"        idxBuilder.indexRule(""nt:base"").property(""foo"").propertyIndex();"
139566,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexPathRestrictionTest.java,79,,"        idxBuilder.indexRule(""nt:base"").property(""foo"").propertyIndex();"
139567,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexPathRestrictionTest.java,83,,"        NodeBuilder testRootBuilder = rootBuilder.child(""test"");"
139568,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexPathRestrictionTest.java,84,,"        testRootBuilder.child(""a"").child(""j:c"").setProperty(""foo"", ""bar"");"
139569,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexPathRestrictionTest.java,84,,"        testRootBuilder.child(""a"").child(""j:c"").setProperty(""foo"", ""bar"");"
139570,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexPathRestrictionTest.java,93,,"        f.restrictProperty(""j:c/foo"", Operator.EQUAL, PropertyValues.newString(""bar""));"
139571,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexPathRestrictionTest.java,94,,"        validateResult(f, of(""/test"", ""/test/a"", ""/test/c/d""));"
139572,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexPathRestrictionTest.java,94,,"        validateResult(f, of(""/test"", ""/test/a"", ""/test/c/d""));"
139573,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexPathRestrictionTest.java,94,,"        validateResult(f, of(""/test"", ""/test/a"", ""/test/c/d""));"
139574,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexPathRestrictionTest.java,98,,"        f.restrictProperty(""*/foo"", Operator.EQUAL, PropertyValues.newString(""bar""));"
139575,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexPathRestrictionTest.java,103,,"        f.restrictProperty(""d/*/foo"", Operator.EQUAL, PropertyValues.newString(""bar""));"
139576,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexPathRestrictionTest.java,104,,"        validateResult(f, of(""/"", ""/test"", ""/test/c""));"
139577,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexSuggestionTest.java,194,,"        final String nodeType = ""nt:unstructured"";"
139578,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexSuggestionTest.java,220,,"        final String indexPropName = ""description"";"
139579,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexSuggestionTest.java,221,,"        final String indexPropValue = ""this is just a sample text which should get some response in suggestions"";"
139580,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexTest.java,144,,"        NodeBuilder defn = newLuceneIndexDefinition(index, ""lucene"", ImmutableSet.of(""String""));"
139581,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexTest.java,148,,"        builder.setProperty(""foo"", ""value-with-dash"");"
139582,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexTest.java,182,,"        builder.setProperty(""foo"", ""bar"");"
139583,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexTest.java,258,,"        assertEquals(""/a/b"", cursor.next().getPath());"
139584,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexTest.java,344,,"        purgeDeletedDocs(idx, new LuceneIndexDefinition(root, idx.getNodeState(), ""/foo""));"
139585,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexTest.java,648,,"        NodeBuilder idxb = newLucenePropertyIndexDefinition(index, ""lucene"", ImmutableSet.of(""foo"", ""foo2""), null);"
139586,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexTest.java,662,,"        builder.setProperty(""foo2"", ""bar2"");"
139587,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndexTest.java,848,,"        newLucenePropertyIndexDefinition(index, ""luceneTest"", ImmutableSet.of(""foo""), null);"
139588,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,263,,"        Tree idx = createFulltextIndex(root.getTree(""/""), ""test"");"
139589,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,271,,"        test.setProperty(""foo"", ""fox jumping"");"
139590,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,274,,"        assertQuery(""select * from [nt:base] where CONTAINS(*, 'fox was jumping')"", asList(""/test""));"
139591,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,313,,"        assertQuery(""select * from [nt:base] where ISDESCENDANTNODE('/test') and CONTAINS(*, 'plane')"", asList(""/test/node""));"
139592,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,325,,"        createIndex(""test1"", of(""propa"", ""propb""));"
139593,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,325,,"        createIndex(""test1"", of(""propa"", ""propb""));"
139594,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,325,,"        createIndex(""test1"", of(""propa"", ""propb""));"
139595,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,326,,"        createIndex(""test2"", of(""propc""));"
139596,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,326,,"        createIndex(""test2"", of(""propc""));"
139597,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,333,,"        test.addChild(""e"").setProperty(""propd"", ""foo"");"
139598,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,337,,"        assertThat(explain(propaQuery), containsString(""lucene:test1""));"
139599,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,338,,"        assertThat(explain(""select [jcr:path] from [nt:base] where [propc] = 'foo'""), containsString(""lucene:test2""));"
139600,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,340,,"        assertQuery(propaQuery, asList(""/test/a"", ""/test/b""));"
139601,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,340,,"        assertQuery(propaQuery, asList(""/test/a"", ""/test/b""));"
139602,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,341,,"        assertQuery(""select [jcr:path] from [nt:base] where [propa] = 'foo2'"", asList(""/test/c""));"
139603,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,342,,"        assertQuery(""select [jcr:path] from [nt:base] where [propc] = 'foo'"", asList(""/test/d""));"
139604,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,352,,"        Tree nodeTypeIndex = root.getTree(""/"").getChild(""oak:index"").getChild(""nodetype"");"
139605,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,357,,"        test.setProperty(""jcr:primaryType"", ""nt:unstructured"", Type.NAME);"
139606,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,357,,"        test.setProperty(""jcr:primaryType"", ""nt:unstructured"", Type.NAME);"
139607,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,376,,"        Tree nodeTypeIdx = root.getTree(""/oak:index/nodetype"");"
139608,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,377,,"        nodeTypeIdx.setProperty(PropertyStates.createProperty(DECLARING_NODE_TYPES, of(""nt:file""), NAMES));"
139609,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,384,,"        Tree luceneIndex = createFullTextIndex(root.getTree(""/""), ""lucene"");"
139610,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,391,,"        setNodeType(test.addChild(""c""), ""nt:base"");"
139611,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,446,,"        a.setProperty(""propb"", ""baz"");"
139612,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,468,,"        nodeTypeIdx.setProperty(PropertyStates.createProperty(DECLARING_NODE_TYPES, of(""nt:resource""), NAMES));"
139613,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,531,,"        test.addChild(""test"").addChild(""bar"");"
139614,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,536,,"        assertQuery(propabQuery, asList(""/foo""));"
139615,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,537,,"        assertQuery(""select [jcr:path] from [nt:base] where LOCALNAME() = 'bar'"", asList(""/test/bar""));"
139616,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,539,,"        assertQuery(""select [jcr:path] from [nt:base] where LOCALNAME() LIKE 'camel%'"", asList(""/camelCase""));"
139617,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,606,,"        assertQuery(""select [jcr:path] from [nt:base] where propa is not null"", asList(""/test/a"", ""/test/b""));"
139618,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,628,,"        Tree idx = createIndex(""test1"", of(""tags""));"
139619,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,637,,"                ""and(\n"" +"
139620,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,639,,"                ""    or content.[tags] = 'Products:A/B'\n"" +"
139621,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,642,,"                "")\n"" +"
139622,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,714,,"        NodeTypeRegistry.register(root, IOUtils.toInputStream(TestUtil.TEST_NODE_TYPE), ""test nodeType"");"
139623,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,718,,"        Tree prop = props.addChild(TestUtil.unique(""prop""));"
139624,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,725,,"        createNodeWithType(test, ""a"", ""oak:TestNode"").setProperty(""propa"", ""a"");"
139625,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,860,,"        assertThat(explain(""select [jcr:path] from [nt:base] where [propa] >= 20""), containsString(""lucene:test1""));"
139626,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,914,,"        node1Tree.setProperty(""propa"", ""abcdef"");"
139627,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,917,,"        node2Tree.setProperty(""propa"", ""abc_def"");"
139628,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,925,,"        assertQuery(query, asList(""/node1"", ""/node2""));"
139629,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,963,,"        fnNameFunctionIndex.getBuilderTree().setProperty(""tags"", of(""name""), STRINGS);"
139630,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,1154,,"        assertQuery(query, asList(""/test/c"", ""/test/f""));"
139631,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,1295,,"                asList(""/test/a"", ""/test/c"", ""/test/d"", ""/test/f"", ""/test/g"", ""/test/h"", ""/test/i""));"
139632,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,1295,,"                asList(""/test/a"", ""/test/c"", ""/test/d"", ""/test/f"", ""/test/g"", ""/test/h"", ""/test/i""));"
139633,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,1295,,"                asList(""/test/a"", ""/test/c"", ""/test/d"", ""/test/f"", ""/test/g"", ""/test/h"", ""/test/i""));"
139634,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,1426,,"        assertEquals(""Unexpected number of docs passed back to query engine"", 1, queryIndexProvider.getCount());"
139635,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,1516,,"        assertOrderedQuery(""select [jcr:path] from [nt:base] where [bar] = 'baz' order by [foo]"", getSortedPaths(tuples, OrderDirection.ASC));"
139636,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,1517,,"        assertOrderedQuery(""select [jcr:path] from [nt:base] where [bar] = 'baz' order by [foo] DESC"", getSortedPaths(tuples, OrderDirection.DESC));"
139637,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,1789,,"        Tree title = props.addChild(""title"");"
139638,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,1799,,"        Tree text = props.addChild(""text"");"
139639,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,1806,,"        Tree a = createNodeWithType(test, ""a"", ""oak:TestNode"").addChild(""jcr:content"");"
139640,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,1807,,"        a.setProperty(""jcr:title"", ""Batman"");"
139641,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,1893,,"        a.setProperty(""propa"", ""fox is jumping"");"
139642,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,1971,,"        usc(test, ""b"").addChild(""jcr:content"").addChild(""metadata"").setProperty(""title"", ""foo"");"
139643,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,1987,,"        createFileNode(test, ""text"", ""fox is jumping"", ""text/plain"");"
139644,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,1991,,"        assertQuery(""select * from [nt:base] where CONTAINS(*, 'fox ')"", asList(""/test/text/jcr:content""));"
139645,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,2131,,"        test.setProperty(""text"", ""red brown fox was jumping"");"
139646,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,2134,,"        assertQuery(""select * from [nt:base] where CONTAINS(*, 'jumping')"", asList(""/test""));"
139647,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,2226,,"        assertQuery(queryString, ""xpath"", asList(""/test/b""));"
139648,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,2337,,"        af.setProperty(""type"", ""jpg""); //Should be excluded"
139649,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,2393,,"        Tree props = TestUtil.newRulePropTree(idx, ""mix:title"");"
139650,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,2406,,"        assertThat(explain(propabQuery), containsString(""lucene:test1(/oak:index/test1)""));"
139651,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,2415,,"        prop.setProperty(FulltextIndexConstants.PROP_NAME, ""jcr:mimeType"");"
139652,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,2596,,"        prop1.setProperty(FulltextIndexConstants.PROP_NAME, ""tag"");"
139653,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,2753,,"                "" - * (UNDEFINED) multiple\n"" +"
139654,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,2769,,"        idxb.indexRule(""oak:TestMixA"").property(JcrConstants.JCR_MIXINTYPES).propertyIndex();"
139655,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,2781,,"                .setProperty(JcrConstants.JCR_PRIMARYTYPE,  ""oak:Unstructured"", Type.NAME);"
139656,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,2857,,"        root.getTree(""/oak:index/test1"").setProperty(REINDEX_PROPERTY_NAME, true);"
139657,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,3008,,"        URI uri = getClass().getResource(""/org/apache/jackrabbit/oak/query/fvs.csv"").toURI();"
139658,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,3038,,"            String query = ""select [jcr:path] from [nt:base] where similar(., '"" + similarPath + ""')"";"
139659,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,3040,,"            Iterator<String> result = executeQuery(query, ""JCR-SQL2"").iterator();"
139660,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,3215,,"        assertTrue(""Injected def ("" + defSeed + "")and clone ("" + clonedSeed + "" seeds aren't same"", defSeed == clonedSeed);"
139661,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,3215,,"        assertTrue(""Injected def ("" + defSeed + "")and clone ("" + clonedSeed + "" seeds aren't same"", defSeed == clonedSeed);"
139662,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,3215,,"        assertTrue(""Injected def ("" + defSeed + "")and clone ("" + clonedSeed + "" seeds aren't same"", defSeed == clonedSeed);"
139663,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,3324,,"        rootTree.addChild(""a"").addChild(""j:c"").addChild(""foo1"").setProperty(""foo"", ""bar"");"
139664,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,3335,,"                ""lucene:fooIndex(/oak:index/fooIndex)"", asList(""/a"", ""/b"", ""/d/e"", ""/""));"
139665,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,3335,,"                ""lucene:fooIndex(/oak:index/fooIndex)"", asList(""/a"", ""/b"", ""/d/e"", ""/""));"
139666,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndexTest.java,3402,,"                ""lucene:fooIndex(/oak:index/fooIndex)"", asList(""/test/a"", ""/test/c/d""));"
139667,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneWritesOnSegmentStatsTest.java,128,,"                {false, ""oakCodec"", false, 4096, ""tiered""},"
139668,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneWritesOnSegmentStatsTest.java,128,,"                {false, ""oakCodec"", false, 4096, ""tiered""},"
139669,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneWritesOnSegmentStatsTest.java,129,,"                {false, ""oakCodec"", false, 4096, ""mitigated""},"
139670,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneWritesOnSegmentStatsTest.java,131,,"                {false, ""Lucene46"", false, 4096, ""tiered""},"
139671,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneWritesOnSegmentStatsTest.java,140,,"                {false, ""compressingCodec"", false, 4096, ""tiered""},"
139672,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/MultiplexingLucenePropertyIndexTest.java,109,,"            .mount(""foo"", ""/libs"", ""/apps"").build();"
139673,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/MultiplexingLucenePropertyIndexTest.java,176,,"        doc.add(new StringField(""foo"", ""bar"", Field.Store.NO));"
139674,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/MultiplexingLucenePropertyIndexTest.java,180,,"        doc.add(new StringField(""foo"", ""baz"", Field.Store.NO));"
139675,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/NodeStateAnalyzerFactoryTest.java,82,,"        byte[] stopWords = newCharArraySet(""foo"", ""bar"");"
139676,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/NodeStateAnalyzerFactoryTest.java,92,,"        nb.child(ANL_TOKENIZER).setProperty(ANL_NAME, ""whitespace"");"
139677,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/NodeStateAnalyzerFactoryTest.java,111,,"        filters.setProperty(OAK_CHILD_ORDER, ImmutableList.of(""stop"", ""LowerCase""),NAMES);"
139678,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/SecureFacetTest.java,120,,"                .property(""cons"")"
139679,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/SecureFacetTest.java,122,,"                .property(""foo"")"
139680,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/SecureFacetTest.java,125,,"        indexNode = getOrCreateByPath(""/oak:index"", ""nt:unstructured"", session)"
139681,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/SecureFacetTest.java,137,,"        Node par = allow(getOrCreateByPath(""/parent"", ""oak:Unstructured"", session));"
139682,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/SecureFacetTest.java,143,,"                child.setProperty(""cons"", ""val"");"
139683,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/SecureFacetTest.java,260,,"        assertEquals(""Unexpected number of facets"", actualAclLabelCount.size(), facets.size());"
139684,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/SecureFacetTest.java,266,,"            assertTrue(""Facet count for label: "" + facetLabel + "" is outside of 10% margin of error. "" +"
139685,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/SecureFacetTest.java,267,,"                            ""Expected: "" + facet.getValue() + ""; Got: "" + facetCount + ""; Ratio: "" + ratio,"
139686,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/SecureFacetTest.java,267,,"                            ""Expected: "" + facet.getValue() + ""; Got: "" + facetCount + ""; Ratio: "" + ratio,"
139687,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/SecureFacetTest.java,267,,"                            ""Expected: "" + facet.getValue() + ""; Got: "" + facetCount + ""; Ratio: "" + ratio,"
139688,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/SuggestionIntervalTest.java,140,,"        root.getTree(""/"").addChild(""indexedNode"")"
139689,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/ActiveDeletedBlobCollectionIT.java,155,,"        createIndex(""test1"", of(""propa""));"
139690,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/ActiveDeletedBlobCollectionIT.java,161,,"        root.getTree(""/"").addChild(""test"").setProperty(""propa"", ""foo"");"
139691,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/ActiveDeletedBlobCollectorTest.java,116,,"        bdc1.deleted(""blobId1"", Collections.singleton(""/a""));"
139692,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/ActiveDeletedBlobCollectorTest.java,120,,"        bdc2.deleted(""blobId2"", Collections.singleton(""/b""));"
139693,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/ActiveDeletedBlobCollectorTest.java,123,,"        bdc3.deleted(""blobId3"", Collections.singleton(""/c""));"
139694,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/ActiveDeletedBlobCollectorTest.java,197,,"                            String id = ""Thread"" + thisThreadNum + ""Blob"" + blobCnt;"
139695,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/ActiveDeletedBlobCollectorTest.java,392,,"        bdc.deleted(""blobId4"", Collections.singleton(""/d""));"
139696,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/ActiveDeletedBlobCollectorTest.java,393,,"        bdc.deleted(""blobId5"", Collections.singleton(""/e""));"
139697,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/BufferedOakDirectoryTest.java,61,,"        byte[] data = writeFile(buffered, ""file"");"
139698,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/BufferedOakDirectoryTest.java,172,,"            IndexOutput multiBlobIndexOutput = multiBlobDir.createOutput(""foo"", IOContext.DEFAULT);"
139699,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/BufferedOakDirectoryTest.java,281,,"        assertTrue(""Flag not setting as set by command line flag"","
139700,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/BufferedOakDirectoryTest.java,289,,"        System.setProperty(ENABLE_WRITING_SINGLE_BLOB_INDEX_FILE_PARAM, ""true"");"
139701,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/BufferedOakDirectoryTest.java,294,,"        System.setProperty(ENABLE_WRITING_SINGLE_BLOB_INDEX_FILE_PARAM, ""false"");"
139702,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/BufferedOakDirectoryTest.java,371,,"        assertEquals(""Don't warn unnecessarily"", 0, custom.getLogs().size());"
139703,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/ConcurrentCopyOnReadDirectoryTest.java,94,,"        IndexOutput output = remote.createOutput(""file"", IOContext.DEFAULT);"
139704,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/CopyOnWriteDirectoryTest.java,103,,"        LuceneIndexDefinition def = new LuceneIndexDefinition(ns.getRoot(), ns.getRoot(), ""/foo"");"
139705,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/CopyOnWriteDirectoryTest.java,105,,"        Directory dir = new DefaultDirectoryFactory(copier, null).newInstance(def, builder.child(""foo""), INDEX_DATA_CHILD_NAME, false);"
139706,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/FSDirectoryFactoryTest.java,51,,"        LuceneIndexDefinition defn = LuceneIndexDefinition.newBuilder(root, idx.getNodeState(), ""/fooIndex"").build();"
139707,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/FSDirectoryFactoryTest.java,54,,"        Directory dir = factory.newInstance(defn, idx, "":data"", false);"
139708,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/IndexConsistencyCheckerTest.java,79,,"        FailingBlob failingBlob = new FailingBlob(""foo"");"
139709,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/IndexConsistencyCheckerTest.java,121,,"        LuceneIndexDefinition defn = LuceneIndexDefinition.newBuilder(rootState, idx.getNodeState(), ""/fooIndex"").build();"
139710,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/IndexConsistencyCheckerTest.java,122,,"        Directory dir = new OakDirectory(idx, "":data"", defn, false);"
139711,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/IndexMetaTest.java,49,,"        m.addDirectoryMapping("":hidden-data"", ""hiddendata"");"
139712,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/IndexMetaTest.java,49,,"        m.addDirectoryMapping("":hidden-data"", ""hiddendata"");"
139713,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/IndexRootDirectoryTest.java,59,,"        File f1 = dir.getIndexDir(getDefn(), ""/a/b"", ""default"");"
139714,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/IndexRootDirectoryTest.java,59,,"        File f1 = dir.getIndexDir(getDefn(), ""/a/b"", ""default"");"
139715,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/LocalIndexDirTest.java,42,,"        IndexMeta m = new IndexMeta(""/a/b"", 100);"
139716,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/OakDirectoryTestBase.java,104,,"        Directory dir = createDir(builder, false, ""/foo"");"
139717,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/OakDirectoryTestBase.java,114,,"        NodeBuilder testNode = builder.child(INDEX_DATA_CHILD_NAME).child(""test"");"
139718,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/OakDirectoryTestBase.java,131,,"        NodeBuilder file = builder.child(INDEX_DATA_CHILD_NAME).child(""test.txt"");"
139719,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/OakDirectoryTestBase.java,283,,"            fail(""cannot use IndexInput once closed"");"
139720,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/OakDirectoryTestBase.java,525,,"        writeFile(dir, ""file1"", fileSize);"
139721,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/OakDirectoryTestBase.java,526,,"        writeFile(dir, ""file2"", fileSize);"
139722,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/OakStreamingIndexFileTest.java,95,,"        NodeBuilder fooBuilder = builder.child(""foo"");"
139723,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/OakStreamingIndexFileTest.java,96,,"        try (OakStreamingIndexFile readFile = new OakStreamingIndexFile(""foo"", fooBuilder, ""dirDetails"","
139724,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/dynamicBoost/DynamicBoostTest.java,94,,"        NodeTypeRegistry.register(root, toInputStream(ASSET_NODE_TYPE), ""test nodeType"");"
139725,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/dynamicBoost/DynamicBoostTest.java,95,,"        createIndex(""dam:Asset"");"
139726,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/dynamicBoost/DynamicBoostTest.java,109,,"        Tree pt = createNodeWithType(props, ""predictedTags"", UNSTRUCTURED);"
139727,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/dynamicBoost/DynamicBoostTest.java,110,,"        pt.setProperty(""name"", ""jcr:content/metadata/predictedTags/.*"");"
139728,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/dynamicBoost/DynamicBoostTest.java,178,,"            t.setProperty(""confidence"", 10.0);"
139729,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/dynamicBoost/DynamicBoostTest.java,188,,"                t.getParent().setProperty(""updateCount"", 1);"
139730,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/DocumentQueueTest.java,106,,"        assertTrue(queue.add(LuceneDoc.forDelete(""foo"", ""bar"")));"
139731,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/DocumentQueueTest.java,106,,"        assertTrue(queue.add(LuceneDoc.forDelete(""foo"", ""bar"")));"
139732,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/DocumentQueueTest.java,139,,"        assertTrue(queue.add(LuceneDoc.forDelete(""/oak:index/fooIndex"", ""bar"")));"
139733,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/DocumentQueueTest.java,150,,"        d1.add(newPathField(""/a/b""));"
139734,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/ExternalIndexObserverTest.java,91,,"        indexedPaths.put(""/a"", ""/oak:index/foo"");"
139735,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/HybridIndexClusterIT.java,153,,"        idx.indexRule(""nt:base"").property(""foo"").propertyIndex();"
139736,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/HybridIndexTest.java,185,,"        String idxName = ""hybridtest"";"
139737,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/HybridIndexTest.java,186,,"        Tree idx = createIndex(root.getTree(""/""), idxName, Collections.singleton(""foo""));"
139738,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/HybridIndexTest.java,192,,"        createPath(""/a"").setProperty(""foo"", ""bar"");"
139739,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/HybridIndexTest.java,198,,"        assertQuery(""select [jcr:path] from [nt:base] where [foo] = 'bar'"", of(""/a""));"
139740,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/HybridIndexTest.java,230,,"        test.addChild(""a"").setProperty(""text"", ""Hello World Hello World"");"
139741,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/HybridIndexTest.java,336,,"        b.setProperty(JcrConstants.JCR_PRIMARYTYPE, ""oak:TestNode"", Type.NAME);"
139742,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/LocalIndexWriterFactoryTest.java,83,,"        builder.child(""a"").setProperty(""foo"", ""bar"");"
139743,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/LocalIndexWriterFactoryTest.java,83,,"        builder.child(""a"").setProperty(""foo"", ""bar"");"
139744,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/LocalIndexWriterFactoryTest.java,107,,"        assertEquals(2, getIndexedDocList(holder, ""/oak:index/fooIndex"").size());"
139745,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/LuceneDocumentHolderTest.java,41,,"        holder.add(true, LuceneDoc.forDelete(""/oak:index/foo"", ""/a""));"
139746,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/LuceneJournalPropertyBuilderTest.java,60,,"        h1.add(true, LuceneDoc.forDelete(""/oak:index/foo"", ""/a""));"
139747,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/LuceneJournalPropertyBuilderTest.java,65,,"        h2.add(true, LuceneDoc.forDelete(""/oak:index/bar"", ""/a""));"
139748,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/NRTIndexFactoryTest.java,67,,"        LuceneIndexDefinition idxDefn = new LuceneIndexDefinition(root, builder.getNodeState(), ""/foo"");"
139749,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/NRTIndexFactoryTest.java,130,,"        d.add(newPathField(""/a/b""));"
139750,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/NRTIndexTest.java,81,,"        LuceneIndexDefinition idxDefn = getSyncIndexDefinition(""/foo"");"
139751,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/hybrid/NRTIndexTest.java,144,,"        document.add(newPathField(""/a/b""));"
139752,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/BucketSwitcherTest.java,73,,"        builder.child(""2"").child(""foo"");"
139753,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/HybridPropertyIndexLookupTest.java,58,,"        defnb.indexRule(""nt:base"").property(""foo"").sync();"
139754,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/HybridPropertyIndexLookupTest.java,58,,"        defnb.indexRule(""nt:base"").property(""foo"").sync();"
139755,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/HybridPropertyIndexLookupTest.java,60,,"        propertyUpdated(""/a"", ""foo"", ""bar"");"
139756,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/HybridPropertyIndexStorageTest.java,61,,"        defnb.indexRule(""nt:base"").property(""foo"");"
139757,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/HybridPropertyIndexStorageTest.java,61,,"        defnb.indexRule(""nt:base"").property(""foo"");"
139758,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/HybridPropertyIndexStorageTest.java,64,,"                null, createProperty(""foo"", ""bar""));"
139759,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/LuceneIndexDeprecatedTest.java,84,,"                ""foo"", ImmutableSet.of(""foo""), null);"
139760,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/LuceneIndexDisabledTest.java,73,,"                ""foo"", ImmutableSet.of(""foo""), null);"
139761,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/LuceneIndexPropertyQueryTest.java,51,,"        defnb.indexRule(""nt:base"").property(""foo"").propertyIndex();"
139762,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/LuceneIndexPropertyQueryTest.java,53,,"        assertEquals(0,Iterables.size(query.getIndexedPaths(""foo"", ""bar"")));"
139763,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/PropertyIndexCleanerTest.java,83,,"        defnb.indexRule(""nt:base"").property(""foo"").propertyIndex().sync();"
139764,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/PropertyIndexCleanerTest.java,83,,"        defnb.indexRule(""nt:base"").property(""foo"").propertyIndex().sync();"
139765,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/PropertyIndexCleanerTest.java,84,,"        String indexPath = ""/oak:index/foo"";"
139766,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/PropertyIndexCleanerTest.java,88,,"                new PropertyIndexCleaner(nodeStore, () -> asList(""/oak:index/uuid"", indexPath), asyncService, StatisticsProvider.NOOP);"
139767,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/PropertyIndexCleanerTest.java,95,,"        propertyUpdated(cb, indexPath, ""/a"", ""foo"", ""bar"");"
139768,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/PropertyIndexCleanerTest.java,120,,"        asyncService.addInfo(""async"", 1000);"
139769,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/PropertyIndexCleanerTest.java,170,,"        builder.child(""b"").setProperty(""foo"", ""bar2"");"
139770,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/SynchronousPropertyIndexTest.java,164,,"                .withAsyncIndexing(""async"", TimeUnit.DAYS.toSeconds(1));"
139771,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/SynchronousPropertyIndexTest.java,172,,"        defnb.async(""async"", ""nrt"");"
139772,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/SynchronousPropertyIndexTest.java,173,,"        defnb.indexRule(""nt:base"").property(""foo"").propertyIndex().unique();"
139773,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/SynchronousPropertyIndexTest.java,173,,"        defnb.indexRule(""nt:base"").property(""foo"").propertyIndex().unique();"
139774,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/SynchronousPropertyIndexTest.java,178,,"        createPath(""/a"").setProperty(""foo"", ""bar"");"
139775,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/SynchronousPropertyIndexTest.java,273,,"        assertQuery(""select * from [nt:base] where [foo] = 'bar'"", asList(""/a""));"
139776,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/UniquenessConstraintValidatorTest.java,50,,"        defnb.indexRule(""nt:base"").property(""foo"").unique();"
139777,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/UniquenessConstraintValidatorTest.java,50,,"        defnb.indexRule(""nt:base"").property(""foo"").unique();"
139778,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/property/UniquenessConstraintValidatorTest.java,52,,"        updateRootState(""/a"", ""foo"", ""bar"");"
139779,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/reader/DefaultIndexReaderFactoryTest.java,59,,"    private LuceneIndexDefinition defn = new LuceneIndexDefinition(root, builder.getNodeState(), ""/foo"");"
139780,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/reader/DefaultIndexReaderFactoryTest.java,76,,"        writer.updateDocument(""/content/en"", newDoc(""/content/en""));"
139781,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/reader/DefaultIndexReaderFactoryTest.java,157,,"        writer.updateDocument(""/libs/config"", newDoc(""/libs/config""));"
139782,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/LuceneIndexDefinitionBuilderTest.java,70,,"        assertEquals(""async"", state.getString(""async""));"
139783,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/LuceneIndexDefinitionBuilderTest.java,71,,"        assertEquals(""lucene"", state.getString(""type""));"
139784,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/LuceneIndexDefinitionBuilderTest.java,79,,"        builder.indexRule(""nt:base"")"
139785,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/LuceneIndexDefinitionBuilderTest.java,80,,"                    .property(""foo"")"
139786,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/LuceneIndexDefinitionBuilderTest.java,83,,"                    .property(""bar"")"
139787,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/LuceneIndexDefinitionBuilderTest.java,91,,"        assertTrue(state.getChildNode(""indexRules"").exists());"
139788,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/LuceneIndexDefinitionBuilderTest.java,148,,"        builder.indexRule(""nt:unstructured"");"
139789,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/LuceneIndexDefinitionBuilderTest.java,234,,"        builder.indexRule(""nt:file"");"
139790,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/LuceneIndexDefinitionBuilderTest.java,307,,"        builder.tags(""foo1"", ""foo2"");"
139791,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/LuceneIndexDefinitionBuilderTest.java,307,,"        builder.tags(""foo1"", ""foo2"");"
139792,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/LuceneIndexDefinitionBuilderTest.java,378,,"        builder.indexRule(""nt:base"").property(""fooProp"");"
139793,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/util/LuceneIndexDefinitionBuilderTest.java,923,,"        assertEquals(""Unexpected number of tags"", 1, Iterables.size(tags));"
139794,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/writer/DefaultIndexWriterTest.java,61,,"        LuceneIndexDefinition defn = new LuceneIndexDefinition(root, builder.getNodeState(), ""/foo"");"
139795,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/writer/DefaultIndexWriterTest.java,79,,"        document.add(newPathField(""/a/b""));"
139796,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/writer/FailedIndexUpdateTest.java,115,,"        createIndex(""fails"", ""foo"", true);"
139797,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/writer/FailedIndexUpdateTest.java,122,,"        root.getTree(""/"").addChild(""test"")"
139798,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/writer/FailedIndexUpdateTest.java,123,,"                .addChild(""a"").setProperty(""foo"", ""bar"");"
139799,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/writer/FailedIndexUpdateTest.java,127,,"        assertTrue(""Indexing must fail"", asyncIndexUpdate.isFailing());"
139800,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/writer/FailedIndexUpdateTest.java,135,,"        copier.getDirs().forEach((key, value) -> assertTrue(""Writer for "" + key + "" must be closed"", value.isClosed()));"
139801,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/writer/FailedIndexUpdateTest.java,135,,"        copier.getDirs().forEach((key, value) -> assertTrue(""Writer for "" + key + "" must be closed"", value.isClosed()));"
139802,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/writer/MultiplexingIndexWriterTest.java,113,,"        writer.updateDocument(""/libs/config"", newDoc(""/libs/config""));"
139803,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/writer/MultiplexingIndexWriterTest.java,122,,"        writer.updateDocument(""/content"", newDoc(""/content""));"
139804,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/writer/MultiplexingIndexWriterTest.java,132,,"        writer.updateDocument(""/libs/config1"", newDoc(""/libs/config1""));"
139805,./TargetProjects/jackrabbit-oak/oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/writer/MultiplexingIndexWriterTest.java,141,,"        writer.updateDocument(""/content1"", newDoc(""/content1""));"
139806,./TargetProjects/jackrabbit-oak/oak-pojosr/src/test/java/org/apache/jackrabbit/oak/run/osgi/OakOSGiRepositoryFactoryTest.java,113,,"                repository.login(new SimpleCredentials(""admin"", ""admin"".toCharArray()));"
139807,./TargetProjects/jackrabbit-oak/oak-query-spi/src/test/java/org/apache/jackrabbit/oak/query/facet/FacetResultTest.java,62,,"        assertTrue(facetResult.getDimensions().contains(""jcr:title""));"
139808,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/index/indexer/document/flatfile/ChildNodeStateProviderTest.java,61,,"        Set<String> preferred = ImmutableSet.of(""jcr:content"", ""x"");"
139809,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/index/indexer/document/flatfile/ChildNodeStateProviderTest.java,62,,"        CountingIterable<NodeStateEntry> citr = createList(preferred, asList(""/a"", ""/a/jcr:content"", ""/a/c"", ""/a/d"", ""/e"", ""/e/f"", ""/g"", ""/h""));"
139810,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/index/indexer/document/flatfile/ChildNodeStateProviderTest.java,62,,"        CountingIterable<NodeStateEntry> citr = createList(preferred, asList(""/a"", ""/a/jcr:content"", ""/a/c"", ""/a/d"", ""/e"", ""/e/f"", ""/g"", ""/h""));"
139811,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/index/indexer/document/flatfile/ChildNodeStateProviderTest.java,62,,"        CountingIterable<NodeStateEntry> citr = createList(preferred, asList(""/a"", ""/a/jcr:content"", ""/a/c"", ""/a/d"", ""/e"", ""/e/f"", ""/g"", ""/h""));"
139812,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/index/indexer/document/flatfile/ChildNodeStateProviderTest.java,62,,"        CountingIterable<NodeStateEntry> citr = createList(preferred, asList(""/a"", ""/a/jcr:content"", ""/a/c"", ""/a/d"", ""/e"", ""/e/f"", ""/g"", ""/h""));"
139813,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/index/indexer/document/flatfile/FlatFileStoreIteratorTest.java,61,,"        Set<String> preferred = ImmutableSet.of(""jcr:content"");"
139814,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/index/indexer/document/flatfile/FlatFileStoreIteratorTest.java,62,,"        CountingIterable<NodeStateEntry> citr = createList(preferred, asList(""/a"", ""/a/jcr:content"", ""/a/jcr:content/metadata"","
139815,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/index/indexer/document/flatfile/FlatFileStoreIteratorTest.java,62,,"        CountingIterable<NodeStateEntry> citr = createList(preferred, asList(""/a"", ""/a/jcr:content"", ""/a/jcr:content/metadata"","
139816,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/index/indexer/document/flatfile/FlatFileStoreIteratorTest.java,133,,"        CountingIterable<NodeStateEntry> citr = createList(preferred, asList(""/a"", ""/a/j:c"", ""/a/j:c/j:c"", ""/a/b""));"
139817,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/index/indexer/document/flatfile/NodeStateEntryWriterTest.java,50,,"        builder.setProperty(""foo"", 1);"
139818,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/index/indexer/document/flatfile/NodeStateEntryWriterTest.java,68,,"        b1.setProperty(""foo"", ""bar"");"
139819,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/index/indexer/document/flatfile/PathElementComparatorTest.java,43,,"        assertSorted(asList(""/a"", ""/a/b"", ""/a/b/c"", ""/d"", ""/e/f"", ""/g""));"
139820,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/index/indexer/document/flatfile/PathElementComparatorTest.java,43,,"        assertSorted(asList(""/a"", ""/a/b"", ""/a/b/c"", ""/d"", ""/e/f"", ""/g""));"
139821,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/index/indexer/document/flatfile/PathElementComparatorTest.java,43,,"        assertSorted(asList(""/a"", ""/a/b"", ""/a/b/c"", ""/d"", ""/e/f"", ""/g""));"
139822,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/index/indexer/document/flatfile/PathElementComparatorTest.java,55,,"        assertEquals(asList(""/a"", ""/a/jcr:content"", ""/a/b""), TestUtils.sortPaths(asList(""/a/jcr:content"", ""/a/b"", ""/a""), c));"
139823,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/run/cli/BlobStoreFixtureProviderTest.java,57,,"            String blobId = fixture.getBlobStore().writeBlob(new ByteArrayInputStream(""foo"".getBytes()));"
139824,./TargetProjects/jackrabbit-oak/oak-run-commons/src/test/java/org/apache/jackrabbit/oak/run/cli/BlobStoreFixtureProviderTest.java,85,,"        p.put(""foo"", ""bar"");"
139825,./TargetProjects/jackrabbit-oak/oak-run/src/main/java/org/apache/jackrabbit/oak/checkpoint/SegmentTarCheckpoints.java,63,,"        NodeState ns = store.getHead().getChildNode(""checkpoints"");"
139826,./TargetProjects/jackrabbit-oak/oak-run/src/main/java/org/apache/jackrabbit/oak/console/ConsoleSession.java,93,,"        context.put(""root"", store.retrieve(checkpoint));"
139827,./TargetProjects/jackrabbit-oak/oak-run/src/main/java/org/apache/jackrabbit/oak/explorer/NodeStoreTree.java,113,,"            l.append("" in "").append(file);"
139828,./TargetProjects/jackrabbit-oak/oak-run/src/main/java/org/apache/jackrabbit/oak/explorer/NodeStoreTree.java,687,,"            if (""root"".equals(name)) {"
139829,./TargetProjects/jackrabbit-oak/oak-run/src/main/java/org/apache/jackrabbit/oak/index/merge/IndexDiff.java,49,,"    private static final String OAK_INDEX = ""/oak:index/"";"
139830,./TargetProjects/jackrabbit-oak/oak-run/src/main/java/org/apache/jackrabbit/oak/index/merge/IndexDiff.java,69,,"            Path p = Paths.get(extractTargetDirectory, fileName + "".json"");"
139831,./TargetProjects/jackrabbit-oak/oak-run/src/main/java/org/apache/jackrabbit/oak/index/merge/IndexMerge.java,199,,"                log(linePrefix + ""property "" + k + "" = true (Boolean)"");"
139832,./TargetProjects/jackrabbit-oak/oak-run/src/main/java/org/apache/jackrabbit/oak/run/CheckpointsCommand.java,95,,"                    System.out.println(""Removed "" + cnt + "" checkpoints in "" + time + ""ms."");"
139833,./TargetProjects/jackrabbit-oak/oak-run/src/main/java/org/apache/jackrabbit/oak/run/DataStoreCheckCommand.java,428,,"        System.out.println(""Finished in "" + watch.elapsed(TimeUnit.SECONDS) + "" seconds"");"
139834,./TargetProjects/jackrabbit-oak/oak-run/src/main/java/org/apache/jackrabbit/oak/run/DataStoreCheckCommand.java,428,,"        System.out.println(""Finished in "" + watch.elapsed(TimeUnit.SECONDS) + "" seconds"");"
139835,./TargetProjects/jackrabbit-oak/oak-run/src/main/java/org/apache/jackrabbit/oak/run/IOTraceCommand.java,91,,"                                        "" Applies to "" + BREADTH + "", "" + DEPTH)"
139836,./TargetProjects/jackrabbit-oak/oak-run/src/main/java/org/apache/jackrabbit/oak/run/RevisionsCommand.java,249,,"        System.out.printf(Locale.US, ""%21s  %s%n"", ""Last Successful Run:"","
139837,./TargetProjects/jackrabbit-oak/oak-run/src/main/java/org/apache/jackrabbit/oak/threadDump/ThreadDumpCleaner.java,65,,"        ""\"".*?\"".*?\n   java.lang.Thread.State:.*\n\t"" +"
139838,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/exporter/NodeStateSerializerTest.java,51,,"        builder.child(""a"").setProperty(""foo"", ""bar"");"
139839,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/exporter/NodeStateSerializerTest.java,51,,"        builder.child(""a"").setProperty(""foo"", ""bar"");"
139840,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/index/DocumentStoreIndexerIT.java,154,,"        NodeBuilder appNB = newNode(""app:Asset"");"
139841,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/index/ReindexIT.java,76,,"        fixture.getAsyncIndexUpdate(""async"").run();"
139842,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/index/ReindexIT.java,88,,"                ""--index-temp-dir="" + temporaryFolder.newFolder().getAbsolutePath(),"
139843,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/index/ReindexIT.java,89,,"                ""--index-out-dir=""  + outDir.getAbsolutePath(),"
139844,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/index/ReindexIT.java,92,,"                ""--reindex"","
139845,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/index/ReindexIT.java,121,,"        int fooCount = getFooCount(fixture, ""foo"");"
139846,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/index/ReindexIT.java,149,,"        addTestContent(fixture2, ""/testNode/c"", ""bar"", 100);"
139847,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/index/ReindexIT.java,152,,"        String explain = getQueryPlan(fixture2, ""select * from [nt:base] where [bar] is not null"");"
139848,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,83,,"        fixture.getAsyncIndexUpdate(""async"").run();"
139849,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,89,,"                ""--read-write"","
139850,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,90,,"                ""--threshold=1"""
139851,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,97,,"        Assert.assertFalse(""Index:"" + ""fooIndex-2"" + "" deleted"", fixture.getNodeStore().getRoot().getChildNode(""oak:index"").getChildNode(""fooIndex-2"").exists());"
139852,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,97,,"        Assert.assertFalse(""Index:"" + ""fooIndex-2"" + "" deleted"", fixture.getNodeStore().getRoot().getChildNode(""oak:index"").getChildNode(""fooIndex-2"").exists());"
139853,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,97,,"        Assert.assertFalse(""Index:"" + ""fooIndex-2"" + "" deleted"", fixture.getNodeStore().getRoot().getChildNode(""oak:index"").getChildNode(""fooIndex-2"").exists());"
139854,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,97,,"        Assert.assertFalse(""Index:"" + ""fooIndex-2"" + "" deleted"", fixture.getNodeStore().getRoot().getChildNode(""oak:index"").getChildNode(""fooIndex-2"").exists());"
139855,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,98,,"        Assert.assertFalse(""Index:"" + ""fooIndex-2-custom-1"" + "" deleted"", fixture.getNodeStore().getRoot().getChildNode(""oak:index"").getChildNode(""fooIndex-2-custom-1"").exists());"
139856,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,99,,"        Assert.assertFalse(""Index:"" + ""fooIndex-3"" + "" deleted"", fixture.getNodeStore().getRoot().getChildNode(""oak:index"").getChildNode(""fooIndex-3"").exists());"
139857,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,100,,"        Assert.assertFalse(""Index:"" + ""fooIndex-3-custom-1"" + "" deleted"", fixture.getNodeStore().getRoot().getChildNode(""oak:index"").getChildNode(""fooIndex-3-custom-1"").exists());"
139858,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,101,,"        Assert.assertFalse(""Index:"" + ""fooIndex-3-custom-2"" + "" deleted"", fixture.getNodeStore().getRoot().getChildNode(""oak:index"").getChildNode(""fooIndex-3-custom-2"").exists());"
139859,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,102,,"        Assert.assertFalse(""Index:"" + ""fooIndex"" + "" deleted"", fixture.getNodeStore().getRoot().getChildNode(""oak:index"").getChildNode(""fooIndex"").exists());"
139860,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,103,,"        Assert.assertEquals(fixture.getNodeStore().getRoot().getChildNode(""oak:index"").getChildNode(""fooIndex-4"").getProperty(""type"").getValue(Type.STRING), ""disabled"");"
139861,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,103,,"        Assert.assertEquals(fixture.getNodeStore().getRoot().getChildNode(""oak:index"").getChildNode(""fooIndex-4"").getProperty(""type"").getValue(Type.STRING), ""disabled"");"
139862,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,103,,"        Assert.assertEquals(fixture.getNodeStore().getRoot().getChildNode(""oak:index"").getChildNode(""fooIndex-4"").getProperty(""type"").getValue(Type.STRING), ""disabled"");"
139863,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,105,,"        Assert.assertFalse(""Index:"" + ""fooIndex-4-custom-1"" + "" deleted"", fixture.getNodeStore().getRoot().getChildNode(""oak:index"").getChildNode(""fooIndex-4-custom-1"").exists());"
139864,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/indexversion/PurgeOldIndexVersionTest.java,106,,"        Assert.assertTrue(""Index:"" + ""fooIndex-4-custom-2"" + "" deleted"", fixture.getNodeStore().getRoot().getChildNode(""oak:index"").getChildNode(""fooIndex-4-custom-2"").exists());"
139865,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/plugins/tika/CSVFileBinaryResourceProviderTest.java,45,,"        p.printRecord(""a"", 123, ""text/plain"", null, ""/a"");"
139866,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/plugins/tika/NodeStoreBinaryResourceProviderTest.java,50,,"        createFileNode(builder, ""a"", new IdBlob(""hello"", null), ""text/plain"");"
139867,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/plugins/tika/NodeStoreBinaryResourceProviderTest.java,50,,"        createFileNode(builder, ""a"", new IdBlob(""hello"", null), ""text/plain"");"
139868,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCheckTest.java,214,,"        assertFileEquals(dump, ""[id]"", blobsAdded);"
139869,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCheckTest.java,215,,"        assertFileEquals(dump, ""[ref]"", Sets.union(blobsAdded, Sets.newHashSet(deletedBlobId)));"
139870,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCheckTest.java,216,,"        assertFileEquals(dump, ""[consistency]"", Sets.newHashSet(deletedBlobId));"
139871,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCheckTest.java,320,,"            .newArrayList(""--id"", ""--ref"", ""--consistency"", ""--"" + dsOption, cfgFilePath, ""--store"", storePath,"
139872,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCheckTest.java,320,,"            .newArrayList(""--id"", ""--ref"", ""--consistency"", ""--"" + dsOption, cfgFilePath, ""--store"", storePath,"
139873,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCheckTest.java,320,,"            .newArrayList(""--id"", ""--ref"", ""--consistency"", ""--"" + dsOption, cfgFilePath, ""--store"", storePath,"
139874,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCheckTest.java,320,,"            .newArrayList(""--id"", ""--ref"", ""--consistency"", ""--"" + dsOption, cfgFilePath, ""--store"", storePath,"
139875,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCheckTest.java,321,,"                ""--dump"", dump.getAbsolutePath(), ""--repoHome"", repoHome.getAbsolutePath());"
139876,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCheckTest.java,321,,"                ""--dump"", dump.getAbsolutePath(), ""--repoHome"", repoHome.getAbsolutePath());"
139877,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCommandTest.java,297,,"            .newArrayList(""--check-consistency"", ""--"" + getOption(blobFixture.getType()), blobFixture.getConfigPath(), ""--out-dir"","
139878,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCommandTest.java,297,,"            .newArrayList(""--check-consistency"", ""--"" + getOption(blobFixture.getType()), blobFixture.getConfigPath(), ""--out-dir"","
139879,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCommandTest.java,298,,"                dump.getAbsolutePath(), storeFixture.getConnectionString(), ""--reset-log-config"", ""false"", ""--work-dir"","
139880,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCommandTest.java,298,,"                dump.getAbsolutePath(), storeFixture.getConnectionString(), ""--reset-log-config"", ""false"", ""--work-dir"","
139881,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCommandTest.java,298,,"                dump.getAbsolutePath(), storeFixture.getConnectionString(), ""--reset-log-config"", ""false"", ""--work-dir"","
139882,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCommandTest.java,384,,"        additionalParams += "" --verboseRootPath /c1,/c2"";"
139883,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCommandTest.java,388,,"            if (data.idToPath.get(id).equals(""/c1"") || data.idToPath.get(id).equals(""/c2"")) {"
139884,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCommandTest.java,388,,"            if (data.idToPath.get(id).equals(""/c1"") || data.idToPath.get(id).equals(""/c2"")) {"
139885,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/DataStoreCommandTest.java,567,,"        assertFileEquals(dump, ""avail-"", Sets.difference(data.added, data.missingDataStore));"
139886,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/JsonIndexTest.java,57,,"                ""{'$x':1}"","
139887,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/JsonIndexTest.java,75,,"                ""{'print':'$x'}"","
139888,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/JsonIndexTest.java,144,,"                    ""{'session':'save'}"","
139889,./TargetProjects/jackrabbit-oak/oak-run/src/test/java/org/apache/jackrabbit/oak/run/MetricsExporterFixtureProviderTest.java,56,,"        assertEquals(""pushgateway"", metricsExporterFixture.getExporterType().name());"
139890,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/main/java/org/apache/jackrabbit/oak/plugins/index/elastic/index/ElasticIndexHelper.java,78,,"                        settingsBuilder.field(""type"", ""word_delimiter_graph"");"
139891,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/main/java/org/apache/jackrabbit/oak/plugins/index/elastic/index/ElasticIndexHelper.java,94,,"                settingsBuilder.startObject(""analyzer"");"
139892,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/main/java/org/apache/jackrabbit/oak/plugins/index/elastic/index/ElasticIndexHelper.java,96,,"                    settingsBuilder.startObject(""oak_analyzer"");"
139893,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/main/java/org/apache/jackrabbit/oak/plugins/index/elastic/index/ElasticIndexHelper.java,127,,"                .field(""type"", ""keyword"")"
139894,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/main/java/org/apache/jackrabbit/oak/plugins/index/elastic/index/ElasticIndexHelper.java,130,,"                .field(""type"", ""text"")"
139895,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticContentTest.java,56,,"        builder.indexRule(""nt:base"").property(""a"").analyzed();"
139896,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticContentTest.java,63,,"        Tree content = root.getTree(""/"").addChild(""content"");"
139897,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticContentTest.java,64,,"        content.addChild(""indexed"").setProperty(""a"", ""foo"");"
139898,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticDynamicBoostQueryTest.java,50,,"        Tree item1Color1 = createNodeWithType(item1Metadata,""color1"", NT_UNSTRUCTURED);"
139899,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticDynamicBoostQueryTest.java,51,,"        item1Color1.setProperty(""name"", ""red"");"
139900,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticDynamicBoostQueryTest.java,51,,"        item1Color1.setProperty(""name"", ""red"");"
139901,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticDynamicBoostQueryTest.java,52,,"        item1Color1.setProperty(""confidence"", 9.0);"
139902,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticDynamicBoostQueryTest.java,53,,"        Tree item1Color2 = createNodeWithType(item1Metadata,""color2"", NT_UNSTRUCTURED);"
139903,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticDynamicBoostQueryTest.java,54,,"        item1Color2.setProperty(""name"", ""blue"");"
139904,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticDynamicBoostQueryTest.java,68,,"                    XPATH, Arrays.asList(""/test/item1"", ""/test/item2""));"
139905,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticDynamicBoostQueryTest.java,68,,"                    XPATH, Arrays.asList(""/test/item1"", ""/test/item2""));"
139906,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticDynamicBoostQueryTest.java,143,,"        IndexDefinitionBuilder builder = createIndex(true, ""dam:Asset"", ""title"", ""dynamicBoost"");"
139907,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFacetTest.java,172,,"        indexSkeleton.indexRule.property(""cons"").propertyIndex();"
139908,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFacetTest.java,173,,"        indexSkeleton.indexRule.property(""foo"").propertyIndex().getBuilderTree().setProperty(FACET_PROP, true, Type.BOOLEAN);"
139909,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFacetTest.java,249,,"        Node facetConfig = getOrCreateByPath(indexNode.getPath() + ""/"" + FACETS, ""nt:unstructured"", adminSession);"
139910,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFacetTest.java,266,,"        assertEquals(""Unexpected number of facets"", actualAclLabelCount.size(), getFacets().size());"
139911,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFacetTest.java,272,,"            assertTrue(""Facet count for label: "" + facetLabel + "" is outside of 10% margin of error. "" +"
139912,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFacetTest.java,273,,"                            ""Expected: "" + facet.getValue() + ""; Got: "" + facetCount + ""; Ratio: "" + ratio,"
139913,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFacetTest.java,273,,"                            ""Expected: "" + facet.getValue() + ""; Got: "" + facetCount + ""; Ratio: "" + ratio,"
139914,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFacetTest.java,273,,"                            ""Expected: "" + facet.getValue() + ""; Got: "" + facetCount + ""; Ratio: "" + ratio,"
139915,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFullTextAsyncTest.java,48,,"        IndexDefinitionBuilder builder = createIndex(""propa"");"
139916,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFullTextAsyncTest.java,49,,"        builder.async(""async"");"
139917,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFullTextAsyncTest.java,50,,"        builder.indexRule(""nt:base"").property(""propa"").analyzed();"
139918,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFullTextAsyncTest.java,57,,"        Tree test = root.getTree(""/"").addChild(""test"");"
139919,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFullTextAsyncTest.java,69,,"            assertQuery(query, XPATH, Arrays.asList(""/test/a"", ""/test/c"", ""/test/d""));"
139920,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFullTextAsyncTest.java,102,,"        test.addChild(""a"").setProperty(""a"", ""hello"");"
139921,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFullTextAsyncTest.java,103,,"        test.addChild(""b"").setProperty(""a"", ""world"");"
139922,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFullTextAsyncTest.java,104,,"        test.addChild(""c"").setProperty(""a"", ""hello world"");"
139923,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFullTextAsyncTest.java,111,,"            assertQuery(""//*[jcr:contains(., 'Hello')] "", XPATH, Arrays.asList(""/test/a"", ""/test/c"", ""/test/d""));"
139924,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFullTextAsyncTest.java,112,,"            assertQuery(""//*[jcr:contains(., 'hello world')] "", XPATH, Arrays.asList(""/test/c"", ""/test/d""));"
139925,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFullTextAsyncTest.java,140,,"            assertQuery(""//*[jcr:contains(., 'Hello')] "", XPATH, Arrays.asList(""/test/nodea"", ""/test/nodec"", ""/test/noded""));"
139926,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFullTextAsyncTest.java,140,,"            assertQuery(""//*[jcr:contains(., 'Hello')] "", XPATH, Arrays.asList(""/test/nodea"", ""/test/nodec"", ""/test/noded""));"
139927,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticFullTextAsyncTest.java,205,,"        IndexDefinitionBuilder builder = createIndex(""analyzed_field"");"
139928,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticOrderByTest.java,33,,"        IndexDefinitionBuilder builder = createIndex(""foo"");"
139929,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticOrderByTest.java,34,,"        builder.indexRule(""nt:base"")"
139930,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticOrderByTest.java,41,,"        Tree test = root.getTree(""/"").addChild(""test"");"
139931,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticOrderByTest.java,44,,"        root.commit(Collections.singletonMap(""sync-mode"", ""rt""));"
139932,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticOrderByTest.java,47,,"        assertOrderedQuery(""select [jcr:path] from [nt:base] where contains(foo, 'hello')"", asList(""/test/b"", ""/test/a""));"
139933,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticOrderByTest.java,47,,"        assertOrderedQuery(""select [jcr:path] from [nt:base] where contains(foo, 'hello')"", asList(""/test/b"", ""/test/a""));"
139934,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticOrderByTest.java,140,,"        IndexDefinitionBuilder builder = createIndex(""foo"", ""bar"");"
139935,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticPerfTest.java,79,,"        long startTest = LOG_PERF.startForInfoLog(""Starting test executions"");"
139936,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticPerfTest.java,83,,"        LOG_PERF.end(startTest, -1,-1, ""{} iterations of tests completed"", NUM_ITERATIONS);"
139937,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticPropertyIndexTest.java,34,,"        setIndex(""test1"", createIndex(""propa""));"
139938,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticPropertyIndexTest.java,34,,"        setIndex(""test1"", createIndex(""propa""));"
139939,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticPropertyIndexTest.java,36,,"        Tree test = root.getTree(""/"").addChild(""test"");"
139940,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticPropertyIndexTest.java,38,,"            test.addChild(""a"" + i).setProperty(""propa"", ""foo"" + i);"
139941,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticPropertyIndexTest.java,47,,"            assertThat(explain(propaQuery), containsString(""elasticsearch:test1""));"
139942,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticPropertyIndexTest.java,68,,"        setIndex(""test1"", createIndex(""propa"", ""propb""));"
139943,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticSimilarQueryTest.java,67,,"        String nativeQueryString = ""select [jcr:path] from [nt:base] where "" +"
139944,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticSimilarQueryTest.java,69,,"        Tree test = root.getTree(""/"").addChild(""test"");"
139945,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticSimilarQueryTest.java,70,,"        test.addChild(""a"").setProperty(""text"", ""Hello World"");"
139946,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticSimilarQueryTest.java,70,,"        test.addChild(""a"").setProperty(""text"", ""Hello World"");"
139947,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticSimilarQueryTest.java,75,,"        assertEventually(() -> assertQuery(nativeQueryString, Arrays.asList(""/test/c"", ""/test/b"")));"
139948,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticSimilarQueryTest.java,75,,"        assertEventually(() -> assertQuery(nativeQueryString, Arrays.asList(""/test/c"", ""/test/b"")));"
139949,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticSimilarQueryTest.java,90,,"        test.addChild(""a"").setProperty(""text"", ""Hello World Hello World"");"
139950,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticSimilarQueryTest.java,92,,"        test.addChild(""c"").setProperty(""text"", ""World"");"
139951,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticSimilarQueryTest.java,93,,"        test.addChild(""d"").setProperty(""text"", ""Hello"");"
139952,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticSimilarQueryTest.java,101,,"                Arrays.asList(""/test/a"", ""/test/b"", ""/test/c"", ""/test/d"", ""/test/f"", ""/test/g"", ""/test/h"")));"
139953,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticSimilarQueryTest.java,101,,"                Arrays.asList(""/test/a"", ""/test/b"", ""/test/c"", ""/test/d"", ""/test/f"", ""/test/g"", ""/test/h"")));"
139954,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticSimilarQueryTest.java,101,,"                Arrays.asList(""/test/a"", ""/test/b"", ""/test/c"", ""/test/d"", ""/test/f"", ""/test/g"", ""/test/h"")));"
139955,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticSimilarQueryTest.java,214,,"        a.setProperty(""tags"", ""foo"");"
139956,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticSimilarQueryTest.java,236,,"        Tree tree = builder.indexRule(""nt:base"").property(fieldName1).useInSimilarity(true).nodeScopeIndex()"
139957,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/ElasticSpellcheckTest.java,151,,"        indexSkeleton.indexRule.property(""foo"").propertyIndex();"
139958,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/index/ElasticBulkProcessorHandlerTest.java,65,,"        when(definitionNodeStateMock.getProperty(eq(""async""))).thenReturn(null);"
139959,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/index/ElasticBulkProcessorHandlerTest.java,76,,"        when(definitionNodeStateMock.getProperty(eq(""sync-mode"")))"
139960,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/index/ElasticIndexHelperTest.java,42,,"        indexRuleA.property(""foo"").type(""String"");"
139961,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/index/ElasticIndexHelperTest.java,42,,"        indexRuleA.property(""foo"").type(""String"");"
139962,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/index/ElasticIndexHelperTest.java,48,,"                new ElasticIndexDefinition(nodeState, nodeState, ""path"", ""prefix"");"
139963,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/index/ElasticIndexHelperTest.java,48,,"                new ElasticIndexDefinition(nodeState, nodeState, ""path"", ""prefix"");"
139964,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/index/ElasticIndexHelperTest.java,56,,"        assertThat(fooMapping.get(""type""), is(""text""));"
139965,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/index/ElasticIndexWriterTest.java,63,,"        indexWriter.updateDocument(""/foo"", new ElasticDocument(""/foo""));"
139966,./TargetProjects/jackrabbit-oak/oak-search-elastic/src/test/java/org/apache/jackrabbit/oak/plugins/index/elastic/index/ElasticIndexWriterTest.java,75,,"        indexWriter.deleteDocuments(""/bar"");"
139967,./TargetProjects/jackrabbit-oak/oak-search/src/main/java/org/apache/jackrabbit/oak/plugins/index/search/util/FunctionIndexProcessor.java,152,,"            result = PropertyStates.createProperty(""value"", values.get(0), type);"
139968,./TargetProjects/jackrabbit-oak/oak-search/src/main/java/org/apache/jackrabbit/oak/plugins/index/search/util/IndexDefinitionBuilder.java,86,,"        tree.setProperty(""async"", ""async"");"
139969,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,54,,"        Tree test = root.getTree(""/"").addChild(""test"");"
139970,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,57,,"            low.setProperty(""jcr:primaryType"", ""nt:unstructured"", Type.NAME);"
139971,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,57,,"            low.setProperty(""jcr:primaryType"", ""nt:unstructured"", Type.NAME);"
139972,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,64,,"        assertThat(explain(query), containsString(""traverse""));"
139973,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,65,,"        assertQuery(query, Lists.newArrayList(""/test/b"", ""/test/B""));"
139974,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,65,,"        assertQuery(query, Lists.newArrayList(""/test/b"", ""/test/B""));"
139975,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,69,,"        assertQuery(queryXPath, ""xpath"", Lists.newArrayList(""/test/b"", ""/test/B""));"
139976,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,86,,"                .addChild(""nt:base"")"
139977,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,101,,"        assertThat(explain(query), containsString(""lucene:lowerLocalName""));"
139978,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,181,,"        Tree luceneIndex = createIndex(""upper"", Collections.<String>emptySet());"
139979,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,195,,"            a.setProperty(""name"", ""10% foo"");"
139980,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,201,,"        assertThat(explain(query), containsString(""lucene:upper""));"
139981,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,218,,"        Tree upper = TestUtil.enableFunctionIndex(props, ""upper([foo])"");"
139982,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,229,,"        a.setProperty(""foo"", ""hello"");"
139983,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,250,,"                ""\t  from [nt:unstructured] as a\n"" +"
139984,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,258,,"        assertEquals(""Ordering doesn't match"", asList(""10 percent"", ""10%"", ""Hallo"", ""hello"", ""World!""), result);"
139985,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,298,,"        a.setProperty(""foo2"", ""b2"");"
139986,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,321,,"        String query = ""select a.[foo],a.[foo2]\n"" +"
139987,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,329,,"        assertEquals(""Ordering doesn't match"", asList(""a1, b1"", ""a1, b2"", ""a1, b3"", ""a2, b3"", ""a3, b1""), result);"
139988,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,329,,"        assertEquals(""Ordering doesn't match"", asList(""a1, b1"", ""a1, b2"", ""a1, b3"", ""a2, b3"", ""a3, b1""), result);"
139989,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,329,,"        assertEquals(""Ordering doesn't match"", asList(""a1, b1"", ""a1, b2"", ""a1, b3"", ""a2, b3"", ""a3, b1""), result);"
139990,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,329,,"        assertEquals(""Ordering doesn't match"", asList(""a1, b1"", ""a1, b2"", ""a1, b3"", ""a2, b3"", ""a3, b1""), result);"
139991,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,329,,"        assertEquals(""Ordering doesn't match"", asList(""a1, b1"", ""a1, b2"", ""a1, b3"", ""a2, b3"", ""a3, b1""), result);"
139992,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,331,,"        query = ""select a.[foo2],a.[foo]\n"" +"
139993,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,337,,"        assertEquals(""Ordering doesn't match"", asList(""b1, a1"", ""b1, a3"", ""b2, a1"", ""b3, a1"", ""b3, a2""), result);"
139994,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,337,,"        assertEquals(""Ordering doesn't match"", asList(""b1, a1"", ""b1, a3"", ""b2, a1"", ""b3, a1"", ""b3, a2""), result);"
139995,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,337,,"        assertEquals(""Ordering doesn't match"", asList(""b1, a1"", ""b1, a3"", ""b2, a1"", ""b3, a1"", ""b3, a2""), result);"
139996,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,337,,"        assertEquals(""Ordering doesn't match"", asList(""b1, a1"", ""b1, a3"", ""b2, a1"", ""b3, a1"", ""b3, a2""), result);"
139997,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,337,,"        assertEquals(""Ordering doesn't match"", asList(""b1, a1"", ""b1, a3"", ""b2, a1"", ""b3, a1"", ""b3, a2""), result);"
139998,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,692,,"        a = test.addChild(""jcr:content"");"
139999,./TargetProjects/jackrabbit-oak/oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/FunctionIndexCommonTest.java,699,,"        String query = ""select [jcr:path]\n"" +"
