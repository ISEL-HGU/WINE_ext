2000,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSClientTest.java,682,,"            MessageConsumer consumer = session.createDurableSubscriber(topic, ""DurbaleTopic"");"
2001,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSClientTest.java,701,,"            assertNotNull(""Should have received a message by now."", received.get());"
2002,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSClientTest.java,702,,"            assertTrue(""Should be an instance of TextMessage"", received.get() instanceof TextMessage);"
2003,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSClientTransactionTest.java,176,,"            message.setIntProperty(""MessageSequence"", i);"
2004,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSInteroperabilityTest.java,67,,"                {""jms""},"
2005,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSInteroperabilityTest.java,89,,"    @SuppressWarnings(""unchecked"")"
2006,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSInteroperabilityTest.java,119,,"        outbound.setBooleanProperty(""Boolean"", bool);"
2007,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSInteroperabilityTest.java,120,,"        outbound.setByteProperty(""Byte"", bValue);"
2008,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSInteroperabilityTest.java,121,,"        outbound.setShortProperty(""Short"", nShort);"
2009,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSInteroperabilityTest.java,122,,"        outbound.setIntProperty(""Integer"", nInt);"
2010,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSInteroperabilityTest.java,123,,"        outbound.setFloatProperty(""Float"", nFloat);"
2011,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSInteroperabilityTest.java,124,,"        outbound.setDoubleProperty(""Double"", nDouble);"
2012,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSInteroperabilityTest.java,125,,"        outbound.setStringProperty(""String"", ""test"");"
2013,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSInteroperabilityTest.java,125,,"        outbound.setStringProperty(""String"", ""test"");"
2014,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSInteroperabilityTest.java,126,,"        outbound.setLongProperty(""Long"", nLong);"
2015,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSInteroperabilityTest.java,127,,"        outbound.setObjectProperty(""BooleanObject"", Boolean.valueOf(bool));"
2016,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSParallelConnectTest.java,62,,"                        Connection connection = JMSClientContext.INSTANCE.createConnection(amqpURI, ""admin"", ""password"");"
2017,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSParallelConnectTest.java,62,,"                        Connection connection = JMSClientContext.INSTANCE.createConnection(amqpURI, ""admin"", ""password"");"
2018,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSParallelConnectTest.java,73,,"        assertTrue(""executor done on time"", executorService.awaitTermination(30, TimeUnit.SECONDS));"
2019,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/JMSQueueBrowserTest.java,77,,"            LOG.debug(""Recv: {}"", msg);"
2020,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/client/AmqpClientTestSupport.java,71,,"        return !isUseSSL() && !connectorScheme.contains(""nio"") && !connectorScheme.contains(""ws"");"
2021,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/client/util/PropertyUtil.java,130,,"                    rc.append(URLEncoder.encode(entry.getKey(), ""UTF-8""));"
2022,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpCorrelationIdPreservationTest.java,138,,"        AmqpSender sender = session.createSender(""queue://"" + getTestName());"
2023,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpCorruptedFrameHandlingTest.java,49,,"        connection.setContainerId(""ClientID:"" + getTestName());"
2024,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpDescribedTypePayloadTest.java,83,,"        AmqpSender sender = session.createSender(""queue://"" + getTestName());"
2025,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpDurableReceiverTest.java,70,,"        session.createDurableReceiver(""topic://"" + getTestName(), getTestName());"
2026,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpExpiredMessageTest.java,51,,"      message.setText(""Test-Message"");"
2027,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpMessageIdPreservationTest.java,138,,"        AmqpSender sender = session.createSender(""queue://"" + getTestName());"
2028,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpReceiverDrainTest.java,54,,"            destinationName = ""topic://"" + getTestName();"
2029,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpReceiverDrainTest.java,56,,"            destinationName = ""queue://"" + getTestName();"
2030,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpReceiverTest.java,99,,"        AmqpReceiver receiver = session.createReceiver(""queue://"" + getTestName());"
2031,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpScheduledMessageTest.java,70,,"        AmqpSender sender = session.createSender(""queue://"" + getTestName());"
2032,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpScheduledMessageTest.java,79,,"        message.setMessageAnnotation(""x-opt-delivery-time"", deliveryTime);"
2033,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpScheduledMessageTest.java,80,,"        message.setText(""Test-Message"");"
2034,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpSendReceiveTest.java,89,,"            address = ""queue://"" + getTestName();"
2035,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpSendReceiveTest.java,91,,"            address = ""topic://"" + getTestName();"
2036,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpSendReceiveTest.java,103,,"        message.setMessageId(""msg"" + 1);"
2037,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpSendReceiveTest.java,104,,"        message.setMessageAnnotation(""serialNo"", 1);"
2038,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpSendReceiveTest.java,105,,"        message.setText(""Test-Message"");"
2039,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpSendReceiveTest.java,114,,"        assertEquals(""msg1"", received.getMessageId());"
2040,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpSendReceiveTest.java,151,,"        assertEquals(""msg0"", received.getMessageId());"
2041,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpSendReceiveTest.java,188,,"        assertNotNull(""Should have read a message"", received);"
2042,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpSenderTest.java,60,,"        AmqpSender sender = session.createSender(""queue://"" + getTestName());"
2043,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpSessionTest.java,53,,"            fail(""Should not be able to mutate."");"
2044,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpTransactionTest.java,81,,"        AmqpSender sender = session.createSender(""queue://"" + getTestName());"
2045,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpTransactionTest.java,87,,"        message.setText(""Test-Message"");"
2046,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/interop/AmqpTransactionTest.java,652,,"            message.setApplicationProperty(""msgId"", i);"
2047,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/joram/ActiveMQNIOPlusSSLAdmin.java,50,,"        sslContext.setKeyStorePassword(""password"");"
2048,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/joram/ActiveMQSSLAdmin.java,50,,"        sslContext.setKeyStorePassword(""password"");"
2049,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/message/AMQPMessageIdHelperTest.java,79,,"        assertNotNull(""null string should not have been returned"", baseMessageIdString);"
2050,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/message/AMQPMessageIdHelperTest.java,80,,"        assertEquals(""expected base id string was not returned"", stringMessageId, baseMessageIdString);"
2051,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/message/AMQPMessageIdHelperTest.java,207,,"        assertNotNull(""null object should not have been returned"", idObject);"
2052,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/message/AMQPMessageIdHelperTest.java,208,,"        assertEquals(""expected id object was not returned"", longId, idObject);"
2053,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/message/AMQPMessageIdHelperTest.java,347,,"            fail(""expected exception was not thrown"");"
2054,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/message/AmqpMessageSupportTest.java,47,,"        messageAnnotationsMap.put(Symbol.valueOf(""x-opt-test""), Boolean.TRUE);"
2055,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/message/AmqpMessageSupportTest.java,85,,"        assertFalse(AmqpMessageSupport.isContentType(""test"", message));"
2056,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/message/JMSMappingInboundTransformerTest.java,77,,"        assertNotNull(""Message should not be null"", jmsMessage);"
2057,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/message/JMSMappingInboundTransformerTest.java,78,,"        assertEquals(""Unexpected message class type"", ActiveMQBytesMessage.class, jmsMessage.getClass());"
2058,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/message/JMSMappingOutboundTransformerTest.java,302,,"        @SuppressWarnings(""unchecked"")"
2059,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/message/JMSMappingOutboundTransformerTest.java,313,,"        outbound.setString(""property-1"", ""string"");"
2060,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/message/JMSMappingOutboundTransformerTest.java,313,,"        outbound.setString(""property-1"", ""string"");"
2061,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/message/JMSMappingOutboundTransformerTest.java,673,,"        String contentString = ""myTextMessageContent"";"
2062,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/message/JMSTransformationSpeedComparisonTest.java,105,,"        message.setBody(new AmqpValue(""String payload for AMQP message conversion performance testing.""));"
2063,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/message/JMSTransformationSpeedComparisonTest.java,128,,"        LOG.info(""[{}] Total time for {} cycles of transforms = {} ms  -> [{}]"","
2064,./TargetProjects/activemq/activemq-amqp/src/test/java/org/apache/activemq/transport/amqp/message/MessageTransformationTest.java,114,,"        incomingMessage.setBody(new AmqpValue(""String payload for AMQP message conversion performance testing.""));"
2065,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/BrokerService.java,594,,"        MDC.put(""activemq.broker"", brokerName);"
2066,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/BrokerService.java,2556,,"                logError(""Failed to shut down: "" + e + "". Reason: "" + linkedException, linkedException);"
2067,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/BrokerMBeanSupport.java,155,,"        objectNameStr += "",connector="" + type + "",connectorName=""+ JMXSupport.encodeObjectNamePart(name);"
2068,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/BrokerView.java,375,,"            throw new NoSuchElementException(""Not connector matched the given name: "" + discoveryAddress);"
2069,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/BrokerViewMBean.java,122,,"    void setMemoryLimit(@MBeanInfo(""bytes"") long limit);"
2070,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/BrokerViewMBean.java,257,,"    void addTopic(@MBeanInfo(""name"") String name) throws Exception;"
2071,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/DestinationViewMBean.java,166,,"    String sendTextMessage(@MBeanInfo(""body"") String body) throws Exception;"
2072,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/HealthView.java,68,,"                answer.add(new HealthStatus(""org.apache.activemq.noConsumer"", ""WARNING"", message, key.toString()));"
2073,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/JobSchedulerView.java,59,,"        TabularType tt = new TabularType(""Scheduled Jobs"", ""Scheduled Jobs"", ct, new String[] { ""jobId"" });"
2074,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/ManagedRegionBroker.java,331,,"            LOG.warn(""Failed to register MBean {}"", key);"
2075,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/ManagedRegionBroker.java,332,,"            LOG.debug(""Failure reason: "", e);"
2076,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/ManagedRegionBroker.java,346,,"                LOG.warn(""Failed to unregister MBean {}"", key);"
2077,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/ManagementContext.java,154,,"                            MDC.put(""activemq.broker"", brokerName);"
2078,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/QueueViewMBean.java,34,,"    CompositeData getMessage(@MBeanInfo(""messageId"") String messageId) throws OpenDataException;"
2079,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/QueueViewMBean.java,54,,"    int removeMatchingMessages(@MBeanInfo(""selector"") String selector) throws Exception;"
2080,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/QueueViewMBean.java,83,,"    boolean copyMessageTo(@MBeanInfo(""messageId"") String messageId, @MBeanInfo(""destinationName"") String destinationName) throws Exception;"
2081,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/region/AbstractRegion.java,323,,"    @SuppressWarnings(""unchecked"")"
2082,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/region/NullMessageReference.java,34,,"        throw new RuntimeException(""not implemented"");"
2083,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/region/Queue.java,227,,"                                                        + "" See http://activemq.apache.org/producer-flow-control.html for more info""));"
2084,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/region/RegionBroker.java,519,,"        throw new IllegalAccessException(""Transaction operation not implemented by this broker."");"
2085,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/util/LoggingBrokerPlugin.java,488,,"            String msg = ""Unable to display message."";"
2086,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/view/ConnectionDotFileInterceptor.java,124,,"        writer.println(""label=\""ActiveMQ Broker: "" + getBrokerView().getBrokerId() + ""\""];"");"
2087,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/view/ConnectionDotFileInterceptor.java,189,,"            writer.print("" -> "");"
2088,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/network/DemandForwardingBridgeSupport.java,495,,"                    localClientId = configuration.getName() + configuration.getClientIdToken() + remoteBrokerName + configuration.getClientIdToken() + ""inbound"" + configuration.getClientIdToken() + configuration.getBrokerName();"
2089,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/network/LdapNetworkConnector.java,408,,"            LOG.error(""ERR: caught unexpected exception"", err);"
2090,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/security/AuthorizationBroker.java,104,,"            throw new SecurityException(""User "" + securityContext.getUserName() + "" is not authorized to create: "" + info.getDestination());"
2091,./TargetProjects/activemq/activemq-broker/src/main/java/org/apache/activemq/security/DefaultAuthorizationMap.java,49,,"    @SuppressWarnings(""rawtypes"")"
2092,./TargetProjects/activemq/activemq-broker/src/test/java/org/apache/activemq/JmsTransactionTestSupport.java,196,,"        Message[] outbound = new Message[] {session.createTextMessage(""First Message""), session.createTextMessage(""Second Message"")};"
2093,./TargetProjects/activemq/activemq-broker/src/test/java/org/apache/activemq/JmsTransactionTestSupport.java,196,,"        Message[] outbound = new Message[] {session.createTextMessage(""First Message""), session.createTextMessage(""Second Message"")};"
2094,./TargetProjects/activemq/activemq-broker/src/test/java/org/apache/activemq/JmsTransactionTestSupport.java,216,,"        LOG.info(""About to consume message 1"");"
2095,./TargetProjects/activemq/activemq-broker/src/test/java/org/apache/activemq/JmsTransactionTestSupport.java,219,,"        LOG.info(""Received: "" + message);"
2096,./TargetProjects/activemq/activemq-broker/src/test/java/org/apache/activemq/broker/OpenwireConnectionTest.java,44,,"        connector.setName(""tcp"");"
2097,./TargetProjects/activemq/activemq-broker/src/test/java/org/apache/activemq/broker/interceptor/MessageInterceptorTest.java,97,,"            javax.jms.Message message = producerSession.createTextMessage(""test: "" + i);"
2098,./TargetProjects/activemq/activemq-broker/src/test/java/org/apache/activemq/security/SimpleAuthenticationPluginTest.java,35,,"        AuthenticationUser alice = new AuthenticationUser(""alice"", ""password"", ""group1"");"
2099,./TargetProjects/activemq/activemq-broker/src/test/java/org/apache/activemq/security/SimpleAuthenticationPluginTest.java,35,,"        AuthenticationUser alice = new AuthenticationUser(""alice"", ""password"", ""group1"");"
2100,./TargetProjects/activemq/activemq-broker/src/test/java/org/apache/activemq/security/SimpleAuthenticationPluginTest.java,36,,"        AuthenticationUser bob = new AuthenticationUser(""bob"", ""security"", ""group2"");"
2101,./TargetProjects/activemq/activemq-broker/src/test/java/org/apache/activemq/security/SimpleAuthenticationPluginTest.java,36,,"        AuthenticationUser bob = new AuthenticationUser(""bob"", ""security"", ""group2"");"
2102,./TargetProjects/activemq/activemq-broker/src/test/java/org/apache/activemq/store/PListTestSupport.java,65,,"            String test = new String(""test"" + i);"
2103,./TargetProjects/activemq/activemq-broker/src/test/java/org/apache/activemq/store/PListTestSupport.java,538,,"                        LOG.info(""Job-"" + id + "", CREATE"");"
2104,./TargetProjects/activemq/activemq-camel/src/test/java/org/apache/activemq/camel/component/ActiveMQConfigureTest.java,44,,"        assertEquals(""pubSubDomain"", false, template.isPubSubDomain());"
2105,./TargetProjects/activemq/activemq-camel/src/test/java/org/apache/activemq/camel/component/InvokeRequestReplyUsingJmsReplyToHeaderTest.java,52,,"        headers.put(""JMSReplyTo"", replyQueueName);"
2106,./TargetProjects/activemq/activemq-camel/src/test/java/org/apache/activemq/camel/component/InvokeRequestReplyUsingJmsReplyToHeaderTest.java,53,,"        headers.put(""JMSCorrelationID"", correlationID);"
2107,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/ActiveMQQueueSession.java,87,,"            throw new InvalidDestinationException(""Topics are not supported by a QueueSession"");"
2108,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/ActiveMQQueueSession.java,110,,"        throw new IllegalStateException(""Operation not supported by a QueueSession"");"
2109,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/ActiveMQTopicSession.java,80,,"        throw new IllegalStateException(""Operation not supported by a TopicSession"");"
2110,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/ActiveMQTopicSession.java,108,,"            throw new InvalidDestinationException(""Queues are not supported by a TopicSession"");"
2111,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/command/ActiveMQMessage.java,591,,"            throw new MessageFormatException(""Property "" + name + "" was a "" + value.getClass().getName() + "" and cannot be read as a boolean"");"
2112,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/command/ActiveMQMessage.java,591,,"            throw new MessageFormatException(""Property "" + name + "" was a "" + value.getClass().getName() + "" and cannot be read as a boolean"");"
2113,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/command/ActiveMQMessage.java,600,,"            throw new NumberFormatException(""property "" + name + "" was null"");"
2114,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/command/ActiveMQMessage.java,600,,"            throw new NumberFormatException(""property "" + name + "" was null"");"
2115,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/command/ActiveMQStreamMessage.java,212,,"                throw new MessageEOFException(""reached end of data"");"
2116,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/filter/ArithmeticExpression.java,50,,"                throw new RuntimeException(""Cannot call plus operation on: "" + lvalue + "" and: "" + rvalue);"
2117,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/filter/ComparisonExpression.java,176,,"    @SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
2118,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/filter/ComparisonExpression.java,176,,"    @SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
2119,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/filter/DestinationMap.java,61,,"    @SuppressWarnings({""rawtypes"", ""unchecked""})"
2120,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/filter/DestinationMap.java,61,,"    @SuppressWarnings({""rawtypes"", ""unchecked""})"
2121,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/filter/DestinationMapNode.java,89,,"    @SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
2122,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/filter/DestinationMapNode.java,89,,"    @SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
2123,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/openwire/OpenWireFormat.java,137,,"                throw new IOException(""Unknown data type: "" + type);"
2124,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/transport/TransportFactory.java,226,,"    @SuppressWarnings(""rawtypes"")"
2125,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/transport/nio/NIOBufferedInputStream.java,71,,"            throw new IOException(""Input Stream Closed"");"
2126,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/transport/tcp/TcpTransportServer.java,396,,"                                LOG.warn(""run()"", e);"
2127,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/transport/udp/UdpTransport.java,157,,"                    LOG.warn(""Caught in: "" + this + "" while closing: "" + e2 + "". Now Closed"", e2);"
2128,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/transport/udp/UdpTransport.java,157,,"                    LOG.warn(""Caught in: "" + this + "" while closing: "" + e2 + "". Now Closed"", e2);"
2129,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/transport/udp/UdpTransport.java,157,,"                    LOG.warn(""Caught in: "" + this + "" while closing: "" + e2 + "". Now Closed"", e2);"
2130,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/util/IntrospectionSupport.java,52,,"            throw new IllegalArgumentException(""props was null."");"
2131,./TargetProjects/activemq/activemq-client/src/main/java/org/apache/activemq/util/URISupport.java,128,,"                        String name = URLDecoder.decode(parameters[i].substring(0, p), ""UTF-8"");"
2132,./TargetProjects/activemq/activemq-client/src/test/java/org/apache/activemq/ActiveMQSslConnectionFactoryTest.java,53,,"        executeTest(SSL_TRANSPORT, TRUST_STORE_DIRECTORY_NAME + TRUST_STORE_FILE_NAME + "".dummy"");"
2133,./TargetProjects/activemq/activemq-client/src/test/java/org/apache/activemq/blob/DownloadStrategyTest.java,39,,"        message.setURL(new URL(""https://www.apache.org""));"
2134,./TargetProjects/activemq/activemq-client/src/test/java/org/apache/activemq/blob/DownloadStrategyTest.java,43,,"            fail(""Failure expected on an incorrect blob message URL"");"
2135,./TargetProjects/activemq/activemq-client/src/test/java/org/apache/activemq/broker/scheduler/CronParserTest.java,44,,"        LOG.debug(""start:"" + current.getTime());"
2136,./TargetProjects/activemq/activemq-client/src/test/java/org/apache/activemq/broker/scheduler/CronParserTest.java,51,,"        LOG.debug(""next:"" + result.getTime());"
2137,./TargetProjects/activemq/activemq-client/src/test/java/org/apache/activemq/command/ActiveMQMessageIsMarshalledTest.java,110,,"            message.setProperty(""test"", ""test"");"
2138,./TargetProjects/activemq/activemq-client/src/test/java/org/apache/activemq/command/ScheduledValuesTest.java,35,,"            fail(""Failure expected on a negative value"");"
2139,./TargetProjects/activemq/activemq-client/src/test/java/org/apache/activemq/util/BitArrayBinTest.java,69,,"            assertTrue(""not already set: id="" + j, !toTest.setBit(j, Boolean.TRUE));"
2140,./TargetProjects/activemq/activemq-client/src/test/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStreamTest.java,294,,"                fail(""Should not be able to read the payload."");"
2141,./TargetProjects/activemq/activemq-client/src/test/java/org/apache/activemq/util/StringArrayConverterTest.java,31,,"        String[] array = StringArrayConverter.convertToStringArray(""foo"");"
2142,./TargetProjects/activemq/activemq-client/src/test/java/org/apache/activemq/util/StringArrayConverterTest.java,38,,"        assertEquals(""bar"", array[1]);"
2143,./TargetProjects/activemq/activemq-client/src/test/java/org/apache/activemq/util/URISupportTest.java,67,,"        assertTrue(data.getParameters().containsKey(""updateURIsURL""));"
2144,./TargetProjects/activemq/activemq-client/src/test/java/org/apache/activemq/util/URISupportTest.java,203,,"            assertTrue(uri + "" must be detected as composite URI"", URISupport.isCompositeURI(uri));"
2145,./TargetProjects/activemq/activemq-console/src/main/java/org/apache/activemq/console/CommandContext.java,40,,"            throw new IllegalStateException(""No OutputFormatter specified. Use GlobalWriter.instantiate(OutputFormatter)."");"
2146,./TargetProjects/activemq/activemq-console/src/main/java/org/apache/activemq/console/CommandContext.java,86,,"    @SuppressWarnings(""rawtypes"")"
2147,./TargetProjects/activemq/activemq-console/src/main/java/org/apache/activemq/console/Main.java,353,,"            if (System.getProperty(""activemq.home"") != null) {"
2148,./TargetProjects/activemq/activemq-console/src/main/java/org/apache/activemq/console/command/CreateCommand.java,184,,"            data = resolveParam(""[$][{]activemq.home[}]"", amqHome.getCanonicalPath().replaceAll(""[\\\\]"", ""/""), data);"
2149,./TargetProjects/activemq/activemq-console/src/main/java/org/apache/activemq/console/command/store/tar/TarBuffer.java,190,,"                               + "" blkIdx = "" + currBlkIdx);"
2150,./TargetProjects/activemq/activemq-console/src/main/java/org/apache/activemq/console/command/store/tar/TarBuffer.java,340,,"            throw new IOException(""writing to an input buffer"");"
2151,./TargetProjects/activemq/activemq-console/src/main/java/org/apache/activemq/console/formatter/CommandShellOutputFormatter.java,84,,"                out.println(attrib.getName() + "" = "" + attrib.getValue().toString());"
2152,./TargetProjects/activemq/activemq-console/src/main/java/org/apache/activemq/console/formatter/OutputFormatter.java,57,,"    @SuppressWarnings(""rawtypes"")"
2153,./TargetProjects/activemq/activemq-console/src/test/java/org/apache/activemq/console/QueryCommandTest.java,69,,"        assertTrue(""Output valid"", result.contains(""Q1""));"
2154,./TargetProjects/activemq/activemq-console/src/test/java/org/apache/activemq/console/QueryCommandTest.java,86,,"        assertTrue(""got Q1"", result.contains(""Q1""));"
2155,./TargetProjects/activemq/activemq-console/src/test/java/org/apache/activemq/console/QueryCommandTest.java,87,,"        assertTrue(""got Q2"", result.contains(""Q2""));"
2156,./TargetProjects/activemq/activemq-console/src/test/java/org/apache/activemq/console/QueryCommandTest.java,143,,"        assertTrue(""invoked"", result.contains(""Q1""));"
2157,./TargetProjects/activemq/activemq-http/src/main/java/org/apache/activemq/transport/http/HttpTunnelServlet.java,167,,"            response.sendError(HttpServletResponse.SC_BAD_REQUEST, ""No clientID header specified"");"
2158,./TargetProjects/activemq/activemq-http/src/main/java/org/apache/activemq/transport/ws/WSTransportProxy.java,163,,"            LOG.debug(""Waiting for WebSocket to be properly started..."");"
2159,./TargetProjects/activemq/activemq-http/src/main/java/org/apache/activemq/transport/ws/WSTransportProxy.java,167,,"                LOG.warn(""While waiting for WebSocket to be properly started, we got interrupted!! Should be okay, but you could see race conditions..."");"
2160,./TargetProjects/activemq/activemq-http/src/test/java/org/apache/activemq/transport/http/HttpSendCompressedMessagesTest.java,107,,"        LOG.info(""Received Message on TCP: "" + tcpMessage.toString());"
2161,./TargetProjects/activemq/activemq-http/src/test/java/org/apache/activemq/transport/http/HttpSendCompressedMessagesTest.java,108,,"        LOG.info(""Received Message on HTTP: "" + httpMessage.toString());"
2162,./TargetProjects/activemq/activemq-http/src/test/java/org/apache/activemq/transport/ws/MQTTWSConnection.java,202,,"                LOG.info(""WS-Client read frame: {}"", ping);"
2163,./TargetProjects/activemq/activemq-http/src/test/java/org/apache/activemq/transport/ws/MQTTWSTransportTest.java,117,,"        assertTrue(""Connection should close"", Wait.waitFor(new Wait.Condition() {"
2164,./TargetProjects/activemq/activemq-http/src/test/java/org/apache/activemq/transport/ws/SocketTest.java,30,,"        StompSocket stompSocketJetty8 = new StompSocket(""ws://localhost:8080"");"
2165,./TargetProjects/activemq/activemq-http/src/test/java/org/apache/activemq/transport/ws/StompWSSubProtocolTest.java,66,,"        String connectFrame = ""STOMP\n"" +"
2166,./TargetProjects/activemq/activemq-http/src/test/java/org/apache/activemq/transport/ws/StompWSSubProtocolTest.java,67,,"                              ""accept-version:1.2\n"" +"
2167,./TargetProjects/activemq/activemq-http/src/test/java/org/apache/activemq/transport/ws/StompWSSubProtocolTest.java,68,,"                              ""host:localhost\n"" +"
2168,./TargetProjects/activemq/activemq-http/src/test/java/org/apache/activemq/transport/ws/StompWSTransportTest.java,84,,"        String connectFrame = ""STOMP\n"" +"
2169,./TargetProjects/activemq/activemq-http/src/test/java/org/apache/activemq/transport/ws/StompWSTransportTest.java,85,,"                              ""login:system\n"" +"
2170,./TargetProjects/activemq/activemq-http/src/test/java/org/apache/activemq/transport/ws/StompWSTransportTest.java,86,,"                              ""passcode:manager\n"" +"
2171,./TargetProjects/activemq/activemq-http/src/test/java/org/apache/activemq/transport/ws/StompWSTransportTest.java,88,,"                              ""host:localhost\n"" +"
2172,./TargetProjects/activemq/activemq-http/src/test/java/org/apache/activemq/transport/ws/StompWSTransportTest.java,95,,"        assertTrue(incoming.startsWith(""CONNECTED""));"
2173,./TargetProjects/activemq/activemq-http/src/test/java/org/apache/activemq/transport/ws/StompWSTransportTest.java,98,,"        assertTrue(""Connection should close"", Wait.waitFor(new Wait.Condition() {"
2174,./TargetProjects/activemq/activemq-http/src/test/java/org/apache/activemq/transport/ws/StompWSTransportTest.java,143,,"                              ""accept-version:1.1\n"" +"
2175,./TargetProjects/activemq/activemq-http/src/test/java/org/apache/activemq/transport/ws/StompWSTransportTest.java,271,,"        String message = ""SEND\n"" + ""destination:/queue/"" + getTestName() + ""\n\n"" + ""Hello World"" + Stomp.NULL;"
2176,./TargetProjects/activemq/activemq-jaas/src/test/java/org/apache/activemq/jaas/GroupPrincipalTest.java,27,,"        GroupPrincipal principal = new GroupPrincipal(""FOO"");"
2177,./TargetProjects/activemq/activemq-jaas/src/test/java/org/apache/activemq/jaas/LDAPLoginModuleTest.java,61,,"    private static final String CREDENTIALS = ""secret"";"
2178,./TargetProjects/activemq/activemq-jaas/src/test/java/org/apache/activemq/jaas/LDAPLoginModuleTest.java,114,,"                        ((NameCallback) callbacks[i]).setName(""first"");"
2179,./TargetProjects/activemq/activemq-jaas/src/test/java/org/apache/activemq/jaas/PropertiesLoginModuleTest.java,55,,"        LoginContext context = new LoginContext(getLoginModule(), new UserPassHandler(""first"", ""secret""));"
2180,./TargetProjects/activemq/activemq-jaas/src/test/java/org/apache/activemq/jaas/UserPrincipalTest.java,27,,"        UserPrincipal principal = new UserPrincipal(""FOO"");"
2181,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/JDBCMessageStore.java,97,,"            JDBCPersistenceAdapter.log(""JDBC Failure: "", e);"
2182,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/JDBCMessageStore.java,125,,"            throw IOExceptionSupport.create(""Failed to broker message: "" + messageId + "" in container: "" + e, e);"
2183,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/JDBCMessageStore.java,125,,"            throw IOExceptionSupport.create(""Failed to broker message: "" + messageId + "" in container: "" + e, e);"
2184,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/JDBCPersistenceAdapter.java,131,,"            JDBCPersistenceAdapter.log(""JDBC Failure: "", e);"
2185,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/JDBCPersistenceAdapter.java,810,,"            throw IOExceptionSupport.create(""Failed to recover from: "" + jdbcMemoryTransactionStore + "". Reason: "" + e,e);"
2186,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/JDBCTopicMessageStore.java,92,,"            JDBCPersistenceAdapter.log(""JDBC Failure: "", e);"
2187,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/JDBCTopicMessageStore.java,136,,"            throw IOExceptionSupport.create(""Failed to recover subscription: "" + clientId + "". Reason: "" + e, e);"
2188,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/Statements.java,97,,"                ""CREATE TABLE "" + getFullMessageTableName() + ""("" + ""ID "" + sequenceDataType + "" NOT NULL"""
2189,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/Statements.java,102,,"                ""CREATE INDEX "" + getFullMessageTableName() + ""_MIDX ON "" + getFullMessageTableName() + "" (MSGID_PROD,MSGID_SEQ)"","
2190,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/Statements.java,110,,"                ""ALTER TABLE "" + getFullMessageTableName() + "" ADD PRIORITY "" + sequenceDataType,"
2191,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/Statements.java,136,,"                ""INSERT INTO "" + getFullLockTableName() + ""(ID) VALUES (1)"""
2192,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/Statements.java,173,,"            updateMessageStatement = ""UPDATE "" + getFullMessageTableName() + "" SET MSG=? WHERE MSGID_PROD=? AND MSGID_SEQ=? AND CONTAINER=?"";"
2193,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/Statements.java,180,,"            removeMessageStatement = ""DELETE FROM "" + getFullMessageTableName() + "" WHERE ID=?"";"
2194,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/Statements.java,272,,"                                      + "" WHERE CONTAINER=? AND CLIENT_ID=? AND SUB_NAME=?"";"
2195,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/Statements.java,303,,"            findAllDurableSubMessagesStatement = ""SELECT M.ID, M.MSG FROM "" + getFullMessageTableName()"
2196,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/Statements.java,304,,"                                                 + "" M, "" + getFullAckTableName() + "" D """
2197,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/Statements.java,304,,"                                                 + "" M, "" + getFullAckTableName() + "" D """
2198,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/Statements.java,305,,"                                                 + "" WHERE D.CONTAINER=? AND D.CLIENT_ID=? AND D.SUB_NAME=?"""
2199,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/adapter/AxionJDBCAdapter.java,38,,"                + ""ID "" + statements.getSequenceDataType() + "" NOT NULL"""
2200,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/journal/JournalMessageStore.java,102,,"                LOG.debug(""Journalled message add for: "" + id + "", at: "" + location);"
2201,./TargetProjects/activemq/activemq-jdbc-store/src/main/java/org/apache/activemq/store/journal/JournalTopicMessageStore.java,109,,"                LOG.debug(""Journalled acknowledge for: "" + messageId + "", at: "" + location);"
2202,./TargetProjects/activemq/activemq-jdbc-store/src/test/java/org/apache/activemq/store/jdbc/adapter/DefaultJDBCAdapterDoCreateTablesTest.java,123,,"		assertLog(0, DEBUG, ""Executing SQL: "" + CREATE_STATEMENT1);"
2203,./TargetProjects/activemq/activemq-jms-pool/src/test/java/org/apache/activemq/jms/pool/JmsPoolTestSupport.java,70,,"            ""org.apache.activemq:type=Broker,brokerName="" + brokerService.getBrokerName());"
2204,./TargetProjects/activemq/activemq-jms-pool/src/test/java/org/apache/activemq/jms/pool/PooledConnectionFactoryTest.java,67,,"        ActiveMQConnectionFactory amq = new ActiveMQConnectionFactory(""vm://broker1?marshal=false&broker.persistent=false&broker.useJmx=false"");"
2205,./TargetProjects/activemq/activemq-jms-pool/src/test/java/org/apache/activemq/jms/pool/PooledConnectionFactoryWithTemporaryDestinationsTest.java,72,,"        LOG.info(""Created queue named: "" + tempQueue.getQueueName());"
2206,./TargetProjects/activemq/activemq-jms-pool/src/test/java/org/apache/activemq/jms/pool/PooledConnectionSecurityExceptionTest.java,69,,"        Connection connection = pooledConnFact.createConnection(""invalid"", ""credentials"");"
2207,./TargetProjects/activemq/activemq-jms-pool/src/test/java/org/apache/activemq/jms/pool/PooledConnectionSecurityExceptionTest.java,69,,"        Connection connection = pooledConnFact.createConnection(""invalid"", ""credentials"");"
2208,./TargetProjects/activemq/activemq-jms-pool/src/test/java/org/apache/activemq/jms/pool/PooledConnectionSecurityExceptionTest.java,73,,"            fail(""Should fail to connect"");"
2209,./TargetProjects/activemq/activemq-jms-pool/src/test/java/org/apache/activemq/jms/pool/PooledConnectionSecurityExceptionTest.java,75,,"            LOG.info(""Caught expected security error"");"
2210,./TargetProjects/activemq/activemq-jms-pool/src/test/java/org/apache/activemq/jms/pool/PooledConnectionSecurityExceptionTest.java,78,,"        connection = pooledConnFact.createConnection(""system"", ""manager"");"
2211,./TargetProjects/activemq/activemq-jms-pool/src/test/java/org/apache/activemq/jms/pool/PooledConnectionSecurityExceptionTest.java,78,,"        connection = pooledConnFact.createConnection(""system"", ""manager"");"
2212,./TargetProjects/activemq/activemq-jms-pool/src/test/java/org/apache/activemq/jms/pool/PooledConnectionSecurityExceptionTest.java,346,,"        users.add(new AuthenticationUser(""user"", ""password"", ""users""));"
2213,./TargetProjects/activemq/activemq-jms-pool/src/test/java/org/apache/activemq/jms/pool/PooledConnectionSecurityExceptionTest.java,360,,"        entry.setRead(""admins"");"
2214,./TargetProjects/activemq/activemq-jms-pool/src/test/java/org/apache/activemq/jms/pool/PooledConnectionSecurityExceptionTest.java,373,,"        entry.setWrite(""guests,users"");"
2215,./TargetProjects/activemq/activemq-jms-pool/src/test/java/org/apache/activemq/jms/pool/PooledConnectionTempDestCleanupTest.java,156,,"        assertTrue(""TEST METHOD FAILURE - NEW TEMP DESTINATION DOES NOT EXIST"", destinationExists(tempDest));"
2216,./TargetProjects/activemq/activemq-jms-pool/src/test/java/org/apache/activemq/jms/pool/XAConnectionPoolTest.java,364,,"                throw new SystemException(""NoTx"");"
2217,./TargetProjects/activemq/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/MessageDatabase.java,450,,"                LOG.error(""Checkpoint failed"", ioe);"
2218,./TargetProjects/activemq/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/MessageDatabase.java,560,,"    @SuppressWarnings(""rawtypes"")"
2219,./TargetProjects/activemq/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/index/BTreeNode.java,191,,"        @SuppressWarnings(""unchecked"")"
2220,./TargetProjects/activemq/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/index/ListIndex.java,58,,"    @SuppressWarnings(""rawtypes"")"
2221,./TargetProjects/activemq/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/index/ListNode.java,309,,"            throw new IllegalArgumentException(""Key cannot be null"");"
2222,./TargetProjects/activemq/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/util/LinkedNode.java,78,,"            throw new IllegalArgumentException(""You cannot link to yourself"");"
2223,./TargetProjects/activemq/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/util/LinkedNode.java,84,,"            throw new IllegalArgumentException(""This node is not yet in a list"");"
2224,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/JournalCorruptionEofIndexRecoveryTest.java,170,,"        assertTrue(""more than x files: "" + numFiles, numFiles > 2);"
2225,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/JournalCorruptionEofIndexRecoveryTest.java,196,,"        assertEquals(""Drain"", 49, drainQueue(49));"
2226,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/KahaDBStoreOpenWireVersionTest.java,200,,"        connection.setClientID(""test"");"
2227,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/MessageDatabaseSizeTest.java,112,,"        MessageId messageId = new MessageId(""111:222:333"");"
2228,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/disk/index/ListIndexTest.java,80,,"        assertEquals(""correct size"", count, listIndex.size());"
2229,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/disk/index/ListIndexTest.java,520,,"            assertTrue(""List should contain Key[""+i+""]"",test.containsKey(tx, String.valueOf(i)));"
2230,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/disk/index/ListIndexTest.java,521,,"            assertNotNull(""List contents of Key[""+i+""] should not be null"", test.get(tx, String.valueOf(i)));"
2231,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/disk/index/ListIndexTest.java,521,,"            assertNotNull(""List contents of Key[""+i+""] should not be null"", test.get(tx, String.valueOf(i)));"
2232,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/disk/index/ListIndexTest.java,529,,"            LOG.debug(""Size of ListIndex before removal of entry [""+i+""] is: "" + test.size());"
2233,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/disk/index/ListIndexTest.java,529,,"            LOG.debug(""Size of ListIndex before removal of entry [""+i+""] is: "" + test.size());"
2234,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/disk/index/ListIndexTest.java,533,,"            LOG.debug(""Size of ListIndex after removal of entry [""+i+""] is: "" + test.size());"
2235,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/disk/journal/JournalTest.java,56,,"        ByteSequence data = new ByteSequence(""DATA"".getBytes());"
2236,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/disk/journal/TargetedDataFileAppenderTest.java,68,,"        assertTrue(""Data file should not be empty"", dataFile.getLength() > 0);"
2237,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/disk/page/PageFileTest.java,47,,"        PageFile pf = new PageFile(new File(""target/test-data""), getName());"
2238,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/disk/page/PageFileTest.java,59,,"            String t = ""page:"" + i;"
2239,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/disk/page/PageFileTest.java,239,,"                    LOG.info(""free page count: "" + freePages);"
2240,./TargetProjects/activemq/activemq-kahadb-store/src/test/java/org/apache/activemq/store/kahadb/disk/page/PageFileTest.java,281,,"        LOG.info(""Number of free pages:"" + pf.getFreePageCount());"
2241,./TargetProjects/activemq/activemq-log4j-appender/src/test/java/org/apache/activemq/util/JmsLogAppenderTest.java,62,,"        warnLog.warn(""Warn Message"");"
2242,./TargetProjects/activemq/activemq-log4j-appender/src/test/java/org/apache/activemq/util/JmsLogAppenderTest.java,63,,"        warnLog.info(""Info Message"");"
2243,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTAuthTest.java,92,,"        MQTT mqttPub = createMQTTConnection(""pub"", true);"
2244,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTAuthTest.java,187,,"        mqttPub.setUserName(""admin"");"
2245,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTAuthTest.java,202,,"        getProxyToBroker().addTopic(""USERS.foo"");"
2246,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTAuthTest.java,210,,"        mqtt.setPassword(""password"");"
2247,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTAuthTestSupport.java,49,,"        users.add(new AuthenticationUser(""user"", ""password"", ""users""));"
2248,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTAuthTestSupport.java,65,,"        entry.setRead(""admins"");"
2249,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTAuthTestSupport.java,78,,"        entry.setWrite(""guests,users"");"
2250,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTAuthTestSupport.java,102,,"        entry.setWrite(""guests,users,anonymous"");"
2251,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTCodecTest.java,90,,"        LOG.info(""Unmarshalled: {}"", connect);"
2252,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTCodecTest.java,138,,"        connect.clientId(new UTF8Buffer(""test""));"
2253,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTCodecTest.java,139,,"        connect.userName(new UTF8Buffer(""user""));"
2254,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTCodecTest.java,140,,"        connect.password(new UTF8Buffer(""pass""));"
2255,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,82,,"        subscriptionProvider.subscribe(""foo/bah"", AT_MOST_ONCE);"
2256,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,92,,"                        assertNotNull(""Should get a message"", payload);"
2257,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,108,,"            String payload = ""Message "" + i;"
2258,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,174,,"        provider.subscribe(""foo"", EXACTLY_ONCE);"
2259,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,176,,"            String payload = ""Test Message: "" + i;"
2260,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,348,,"        mqtt.setVersion(""3.1.1""); // The V3.1 spec doesn't make the same assertion"
2261,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,419,,"        final String RETAINED = ""RETAINED"";"
2262,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,420,,"        String[] topics = { ""TopicA"", ""/TopicA"", ""/"", ""TopicA/"", ""//"" };"
2263,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,420,,"        String[] topics = { ""TopicA"", ""/TopicA"", ""/"", ""TopicA/"", ""//"" };"
2264,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,659,,"                LOG.debug(""Client received:\n"" + frame);"
2265,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,665,,"                        fail(""Error decoding publish "" + e.getMessage());"
2266,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,673,,"                LOG.debug(""Client sent:\n"" + frame);"
2267,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,1053,,"        assertNotNull(""Should get retained message"", message);"
2268,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,1122,,"        assertTrue(""KeepAlive didn't work properly"", Wait.waitFor(new Wait.Condition() {"
2269,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,1384,,"        mqtt.setClientId(""MQTT-Client"");"
2270,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,1411,,"        LOG.info(""Trying to subscrobe to topic: {}"", topic.name());"
2271,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,1415,,"            fail(""Should not be able to subscribe with invalid Topic"");"
2272,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,1417,,"            LOG.info(""Caught expected error on subscribe"");"
2273,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTest.java,1420,,"        assertTrue(""Should have lost connection"", Wait.waitFor(new Wait.Condition() {"
2274,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTestSupport.java,81,,"        this.protocolScheme = ""mqtt"";"
2275,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTTestSupport.java,99,,"        System.setProperty(""javax.net.ssl.trustStorePassword"", ""password"");"
2276,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTWillTest.java,35,,"            mqtt1.setWillMessage(""last will"");"
2277,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTWillTest.java,37,,"            mqtt1.setWillTopic(""wills"");"
2278,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTWillTest.java,47,,"            conn1.publish(""test"", ""hello world"".getBytes(), QoS.AT_LEAST_ONCE, false);"
2279,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTWillTest.java,47,,"            conn1.publish(""test"", ""hello world"".getBytes(), QoS.AT_LEAST_ONCE, false);"
2280,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/PahoMQTTTest.java,67,,"        MessageConsumer consumer = createConsumer(s, ""test"");"
2281,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/PahoMQTTTest.java,151,,"        MqttClient client = createClient(false, ""receive"", listener);"
2282,./TargetProjects/activemq/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/PahoMQTTTest.java,155,,"        client.subscribe(ACCOUNT_PREFIX + ""1/2/3"");"
2283,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CHeadersGenerator.java,159,,"                out.println(""   ow_"" + type + "" "" + name + "";"");"
2284,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpClassesGenerator.java,156,,"            out.println(""        }"");"
2285,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,56,,"        if (type.equals(""boolean"")) {"
2286,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,57,,"            out.println(""        info."" + propertyName + "" = bs.ReadBoolean();"");"
2287,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,58,,"        } else if (type.equals(""byte"")) {"
2288,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,60,,"        } else if (type.equals(""char"")) {"
2289,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,62,,"        } else if (type.equals(""short"")) {"
2290,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,64,,"        } else if (type.equals(""int"")) {"
2291,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,66,,"        } else if (type.equals(""long"")) {"
2292,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,68,,"        } else if (type.equals(""String"")) {"
2293,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,70,,"        } else if (type.equals(""byte[]"") || type.equals(""ByteSequence"")) {"
2294,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,70,,"        } else if (type.equals(""byte[]"") || type.equals(""ByteSequence"")) {"
2295,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,79,,"            out.println(""        info."" + propertyName + "" = ("" + type + "") TightUnmarshalCachedObject(wireFormat, dataIn, bs);"");"
2296,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,92,,"            out.println(""            "" + arrayType + ""[] value = new "" + arrayType + ""["" + size.asInt() + ""];"");"
2297,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,92,,"            out.println(""            "" + arrayType + ""[] value = new "" + arrayType + ""["" + size.asInt() + ""];"");"
2298,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,94,,"            out.println(""                value[i] = ("" + arrayType + "") TightUnmarshalNestedObject(wireFormat,dataIn, bs);"");"
2299,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,95,,"            out.println(""            }"");"
2300,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,96,,"            out.println(""            info."" + propertyName + "" = value;"");"
2301,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,96,,"            out.println(""            info."" + propertyName + "" = value;"");"
2302,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,97,,"            out.println(""        }"");"
2303,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,135,,"                out.println(""        rc += TightMarshalLong1(wireFormat, "" + getter + "", bs);"");"
2304,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,178,,"                out.println(""        dataOut.Write("" + getter + "");"");"
2305,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,186,,"                out.println(""        TightMarshalLong2(wireFormat, "" + getter + "", dataOut, bs);"");"
2306,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,194,,"                    out.println(""           dataOut.Write("" + getter + "".Length);"");"
2307,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,303,,"                out.println(""        LooseMarshalLong(wireFormat, "" + getter + "", dataOut);"");"
2308,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,390,,"            out.println(""    {"");"
2309,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,392,,"            out.println(""    }"");"
2310,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,404,,"        out.println(""    // "");"
2311,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,413,,"            out.println(""        "" + jclass.getSimpleName() + "" info = ("" + jclass.getSimpleName() + "")o;"");"
2312,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,413,,"            out.println(""        "" + jclass.getSimpleName() + "" info = ("" + jclass.getSimpleName() + "")o;"");"
2313,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,413,,"            out.println(""        "" + jclass.getSimpleName() + "" info = ("" + jclass.getSimpleName() + "")o;"");"
2314,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSharpMarshallingGenerator.java,432,,"        out.println(""    //"");"
2315,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSourcesGenerator.java,78,,"        String type = (""ow_"" + name).toUpperCase() + ""_TYPE"";"
2316,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSourcesGenerator.java,78,,"        String type = (""ow_"" + name).toUpperCase() + ""_TYPE"";"
2317,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSourcesGenerator.java,106,,"        out.println(""   }"");"
2318,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSourcesGenerator.java,115,,"            out.println(""   ow_"" + name + "" *value = apr_pcalloc(pool,sizeof(ow_"" + name + ""));"");"
2319,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSourcesGenerator.java,180,,"        out.println(""   ow_marshal2_"" + baseName + ""(buffer, bitbuffer, (ow_"" + baseName + ""*)object);   "");"
2320,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSourcesGenerator.java,193,,"                out.println(""   SUCCESS_CHECK(ow_byte_buffer_append_"" + type + ""(buffer, object->"" + propname + ""));"");"
2321,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSourcesGenerator.java,193,,"                out.println(""   SUCCESS_CHECK(ow_byte_buffer_append_"" + type + ""(buffer, object->"" + propname + ""));"");"
2322,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSourcesGenerator.java,256,,"                out.println(""   SUCCESS_CHECK(ow_byte_array_read_"" + type + ""(buffer, &object->"" + propname + ""));"");"
2323,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSourcesGenerator.java,256,,"                out.println(""   SUCCESS_CHECK(ow_byte_array_read_"" + type + ""(buffer, &object->"" + propname + ""));"");"
2324,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSourcesGenerator.java,264,,"                out.println(""   SUCCESS_CHECK(ow_unmarshal_long(buffer, bitbuffer, &object->"" + propname + "", pool));"");"
2325,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CSourcesGenerator.java,314,,"                out.println(""      case "" + type + "": return (ow_DataStructure *)ow_"" + name + ""_create(pool);"");"
2326,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CppClassesGenerator.java,62,,"        } else if (name.equals(""ByteSequence"")) {"
2327,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CppClassesGenerator.java,64,,"        } else if (name.equals(""boolean"")) {"
2328,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CppMarshallingClassesGenerator.java,41,,"        out.print(""    "");"
2329,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CppMarshallingClassesGenerator.java,46,,"            out.println(""info."" + setter + ""( bs.readBoolean() );"");"
2330,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CppMarshallingClassesGenerator.java,81,,"            out.println(""        "" + arrayType + ""[] value = new "" + arrayType + ""["" + size.asInt() + ""];"");"
2331,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CppMarshallingClassesGenerator.java,86,,"            out.println(""    }"");"
2332,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CppMarshallingClassesGenerator.java,125,,"                out.println(""rc += marshal1Long(wireFormat, "" + getter + "", bs);"");"
2333,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CppMarshallingClassesGenerator.java,168,,"                out.println(""DataStreamMarshaller.writeByte("" + getter + "", dataOut);"");"
2334,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/CppMarshallingClassesGenerator.java,176,,"                out.println(""marshal2Long(wireFormat, "" + getter + "", dataOut, bs);"");"
2335,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,93,,"            out.println(""    /**"");"
2336,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,96,,"            out.println(""     */"");"
2337,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,99,,"            out.println(""    }"");"
2338,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,122,,"            out.println(""        "" + getJclass().getSimpleName() + "" info = ("" + getJclass().getSimpleName() + "")o;"");"
2339,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,122,,"            out.println(""        "" + getJclass().getSimpleName() + "" info = ("" + getJclass().getSimpleName() + "")o;"");"
2340,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,122,,"            out.println(""        "" + getJclass().getSimpleName() + "" info = ("" + getJclass().getSimpleName() + "")o;"");"
2341,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,367,,"            JAnnotation annotation = property.getAnnotation(""openwire:property"");"
2342,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,368,,"            JAnnotationValue size = annotation.getValue(""size"");"
2343,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,372,,"            if (propertyType.isArrayType() && !propertyTypeName.equals(""byte[]"")) {"
2344,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,384,,"        if (type.equals(""boolean"")) {"
2345,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,385,,"            out.println(""        info."" + setter + ""(bs.readBoolean());"");"
2346,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,386,,"        } else if (type.equals(""byte"")) {"
2347,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,388,,"        } else if (type.equals(""char"")) {"
2348,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,390,,"        } else if (type.equals(""short"")) {"
2349,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,392,,"        } else if (type.equals(""int"")) {"
2350,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,394,,"        } else if (type.equals(""long"")) {"
2351,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,396,,"        } else if (type.equals(""String"")) {"
2352,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,404,,"        } else if (type.equals(""ByteSequence"")) {"
2353,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,422,,"            out.println(""            "" + arrayType + "" value[] = new "" + arrayType + ""["" + size.asInt() + ""];"");"
2354,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,422,,"            out.println(""            "" + arrayType + "" value[] = new "" + arrayType + ""["" + size.asInt() + ""];"");"
2355,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,424,,"            out.println(""                value[i] = ("" + arrayType + "") tightUnmarsalNestedObject(wireFormat,dataIn, bs);"");"
2356,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,425,,"            out.println(""            }"");"
2357,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,426,,"            out.println(""            info."" + setter + ""(value);"");"
2358,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,426,,"            out.println(""            info."" + setter + ""(value);"");"
2359,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,427,,"            out.println(""        }"");"
2360,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,465,,"                out.println(""        rc+=tightMarshalLong1(wireFormat, "" + getter + "", bs);"");"
2361,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,516,,"                out.println(""        tightMarshalLong2(wireFormat, "" + getter + "", dataOut, bs);"");"
2362,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaMarshallingGenerator.java,566,,"                out.println(""        looseMarshalLong(wireFormat, "" + getter + "", dataOut);"");"
2363,./TargetProjects/activemq/activemq-openwire-generator/src/main/java/org/apache/activemq/openwire/tool/JavaTestsGenerator.java,155,,"                out.println(""        info."" + setterName + ""("" + generator.createBool() + "");"");"
2364,./TargetProjects/activemq/activemq-partition/src/test/java/org/apache/activemq/partition/PartitionBrokerTest.java,62,,"        partitioning.byClientId.put(""client1"", new Target(""broker1""));"
2365,./TargetProjects/activemq/activemq-partition/src/test/java/org/apache/activemq/partition/PartitionBrokerTest.java,62,,"        partitioning.byClientId.put(""client1"", new Target(""broker1""));"
2366,./TargetProjects/activemq/activemq-partition/src/test/java/org/apache/activemq/partition/PartitionBrokerTest.java,65,,"        Connection connection = createConnectionToUrl(getConnectURL(""broker2""));"
2367,./TargetProjects/activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConsumerTest.java,56,,"    public static final String USERNAME = ""test"";"
2368,./TargetProjects/activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConsumerTest.java,183,,"        String url = brokerService.getTransportConnectorByScheme(""tcp"").getPublishableConnectString();"
2369,./TargetProjects/activemq/activemq-pool/src/test/java/org/apache/activemq/pool/XAConnectionPoolTest.java,333,,"                throw new SystemException(""NoTx"");"
2370,./TargetProjects/activemq/activemq-ra/src/main/java/org/apache/activemq/ra/ActiveMQManagedConnection.java,292,,"                    throw new ResourceException(""Not connected."");"
2371,./TargetProjects/activemq/activemq-ra/src/main/java/org/apache/activemq/ra/ManagedConnectionProxy.java,236,,"        throw new JMSException(""Not Supported."");"
2372,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/ActiveMQActivationSpecTest.java,91,,"        activationSpec.setDestinationType(""foobar"");"
2373,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/ActiveMQActivationSpecTest.java,161,,"        assertEquals(""Incorrect acknowledge mode"", ActiveMQActivationSpec.INVALID_ACKNOWLEDGE_MODE,"
2374,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/ActiveMQActivationSpecTest.java,268,,"        assertNull(""Property not null"", activationSpec.getDestinationType());"
2375,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/ActiveMQConnectionFactoryTest.java,114,,"        assertEquals(""one resource"", 1, resources.length);"
2376,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/ActiveMQConnectionFactoryTest.java,116,,"        assertEquals(""no pending transactions"", 0, resources[0].recover(100).length);"
2377,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/ActiveMQConnectionFactoryTest.java,133,,"        brokerService.addConnector(""tcp://localhost:0"");"
2378,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/ActiveMQResourceAdapterJavaBeanEqualityTest.java,53,,"        raOne.setServerUrl(""one"");"
2379,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/MDBTest.java,181,,"        ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(""vm://localhost?broker.persistent=false"");"
2380,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/MDBTest.java,186,,"        MessageConsumer advisory = session.createConsumer(AdvisorySupport.getConsumerAdvisoryTopic(new ActiveMQQueue(""TEST"")));"
2381,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/MDBTest.java,189,,"        adapter.setServerUrl(""vm://localhost?broker.persistent=false&create=false"");"
2382,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/MDBTest.java,235,,"        producer.send(session.createTextMessage(""Hello!""));"
2383,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/MessageEndpointProxyTest.java,59,,"            fail(""An exception should have been thrown"");"
2384,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/MessageEndpointProxyTest.java,204,,"            fail(""An InvalidMessageEndpointException should have been thrown"");"
2385,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/SSLTest.java,78,,"    private static final String PASSWORD = ""password"";"
2386,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/SSLTest.java,212,,"        ActiveMQSslConnectionFactory factory = new ActiveMQSslConnectionFactory(""ssl://localhost:61616"");"
2387,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/SSLTest.java,213,,"        factory.setTrustStore(""server.keystore"");"
2388,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/SSLTest.java,219,,"        MessageConsumer advisory = session.createConsumer(AdvisorySupport.getConsumerAdvisoryTopic(new ActiveMQQueue(""TEST"")));"
2389,./TargetProjects/activemq/activemq-ra/src/test/java/org/apache/activemq/ra/SSLTest.java,289,,"        factory.setKeyStore(""client.keystore"");"
2390,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/AbstractVirtualDestTest.java,38,,"        ActiveMQConnection connection = new ActiveMQConnectionFactory(""vm://localhost"").createActiveMQConnection();"
2391,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/AuthenticationTest.java,37,,"        assertAllowed(""test_user_password"", ""USERS.A"");"
2392,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/AuthorizationTest.java,31,,"        applyNewConfig(brokerConfig, configurationSeed + ""-users"");"
2393,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/AuthorizationTest.java,33,,"        assertTrue(""broker alive"", brokerService.isStarted());"
2394,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/AuthorizationTest.java,35,,"        assertAllowed(""user"", ""USERS.A"");"
2395,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/AuthorizationTest.java,35,,"        assertAllowed(""user"", ""USERS.A"");"
2396,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/AuthorizationTest.java,36,,"        assertDenied(""user"", ""GUESTS.A"");"
2397,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/AuthorizationTest.java,37,,"        assertDenied(""guest"", ""GUESTS.A"");"
2398,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/NetworkConnectorTest.java,44,,"        applyNewConfig(brokerConfig, configurationSeed + ""-one-nc"", SLEEP);"
2399,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/PolicyEntryTest.java,34,,"        final String brokerConfig = configurationSeed + ""-policy-ml-broker"";"
2400,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/PolicyEntryTest.java,37,,"        assertTrue(""broker alive"", brokerService.isStarted());"
2401,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/PolicyEntryTest.java,39,,"        verifyQueueLimit(""Before"", 1024);"
2402,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/PolicyEntryTest.java,73,,"        verifyQueueLimit(""queue.test"", 1024);"
2403,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/PolicyEntryTest.java,74,,"        verifyQueueLimit(""queue.child.test"", 2048);"
2404,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/SpringBeanTest.java,40,,"        assertTrue(""broker alive"", brokerService.isStarted());"
2405,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/SpringBeanTest.java,74,,"        System.setProperty(""network.uri"", ""static:(tcp://localhost:8888)"");"
2406,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/SpringBeanTest.java,74,,"        System.setProperty(""network.uri"", ""static:(tcp://localhost:8888)"");"
2407,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/VirtualDestTest.java,39,,"        assertTrue(""broker alive"", brokerService.isStarted());"
2408,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/VirtualDestTest.java,43,,"        assertEquals(""one interceptor"", 1, interceptors.length);"
2409,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/VirtualDestTest.java,44,,"        assertTrue(""it is virtual topic interceptor"", interceptors[0] instanceof VirtualDestinationInterceptor);"
2410,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/VirtualDestTest.java,52,,"        applyNewConfig(brokerConfig, configurationSeed + ""-one-vd"", SLEEP);"
2411,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/VirtualDestTest.java,58,,"        exerciseVirtualTopic(""A.Default"");"
2412,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/VirtualDestTest.java,78,,"        exerciseCompositeQueue(""VirtualDestination.CompositeQueue"", ""VirtualDestination.QueueConsumer"");"
2413,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/VirtualDestTest.java,78,,"        exerciseCompositeQueue(""VirtualDestination.CompositeQueue"", ""VirtualDestination.QueueConsumer"");"
2414,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/VirtualDestTest.java,245,,"        exerciseFilteredCompositeQueue(""VirtualDestination.FilteredCompositeQueue"", ""VirtualDestination.QueueConsumer"", ""yes"");"
2415,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaAuthenticationTest.java,59,,"        users.add(new AuthenticationUser(""test_user_password"", ""test_user_password"", ""users""));"
2416,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaAuthenticationTest.java,59,,"        users.add(new AuthenticationUser(""test_user_password"", ""test_user_password"", ""users""));"
2417,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaAuthenticationTest.java,67,,"        entries.add(buildQueueAuthorizationEntry("">"", ""admins"", ""admins"", ""admins""));"
2418,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaAuthenticationTest.java,99,,"        assertAllowed(""test_user_password"", ""USERS.A"");"
2419,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaAuthenticationTest.java,100,,"        assertDenied(""another_test_user_password"", ""USERS.A"");"
2420,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaAuthorizationTest.java,74,,"        assertAllowed(""user"", ""USERS.A"");"
2421,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaAuthorizationTest.java,74,,"        assertAllowed(""user"", ""USERS.A"");"
2422,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaAuthorizationTest.java,75,,"        assertDenied(""user"", ""GUESTS.A"");"
2423,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaAuthorizationTest.java,77,,"        assertDeniedTemp(""guest"");"
2424,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaAuthorizationTest.java,143,,"        assertDenied(""user"", ""USERS.>"");"
2425,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaAuthorizationTest.java,158,,"        entries.add(buildQueueAuthorizationEntry("">"", ""admins"", ""admins"", ""admins""));"
2426,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaAuthorizationTest.java,159,,"        entries.add(buildQueueAuthorizationEntry(""ALL.USERS.>"", ""users"", ""users"", ""users""));"
2427,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaAuthorizationTest.java,160,,"        entries.add(buildQueueAuthorizationEntry(""ALL.GUESTS.>"", ""guests"", ""guests,users"", ""guests,users""));"
2428,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaAuthorizationTest.java,160,,"        entries.add(buildQueueAuthorizationEntry(""ALL.GUESTS.>"", ""guests"", ""guests,users"", ""guests,users""));"
2429,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaAuthorizationTest.java,169,,"        tempEntry.setRead(""tempDestinationAdmins,guests"");"
2430,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaDestinationsTest.java,56,,"        brokerService.setDestinations(new ActiveMQDestination[] {new ActiveMQQueue(""ORIGINAL"")});"
2431,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaDestinationsTest.java,68,,"                new ActiveMQTopic(""BEFORE""), new ActiveMQQueue(""ORIGINAL""), new ActiveMQQueue(""AFTER"")});"
2432,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaDestinationsTest.java,68,,"                new ActiveMQTopic(""BEFORE""), new ActiveMQQueue(""ORIGINAL""), new ActiveMQQueue(""AFTER"")});"
2433,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaPolicyEntryTest.java,78,,"        assertTrue(""broker alive"", brokerService.isStarted());"
2434,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaPolicyEntryTest.java,79,,"        verifyQueueLimit(""Before"", 1024);"
2435,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaPolicyEntryTest.java,86,,"        verifyQueueLimit(""After"", 4194304);"
2436,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaPolicyEntryTest.java,376,,"        entry.setQueue(""queue.>"");"
2437,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaPolicyEntryTest.java,379,,"        entry2.setQueue(""queue.child.>"");"
2438,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaPolicyEntryTest.java,388,,"                brokerService.getAdminConnectionContext(), new ActiveMQQueue(""queue.test""), false);"
2439,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaPolicyEntryTest.java,390,,"                brokerService.getAdminConnectionContext(), new ActiveMQQueue(""queue.child.test""), false);"
2440,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaPolicyEntryTest.java,403,,"        verifyQueueLimit(""queue.child.test2"", 4194304);"
2441,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaVirtualDestTest.java,62,,"        assertTrue(""broker alive"", brokerService.isStarted());"
2442,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaVirtualDestTest.java,66,,"        assertEquals(""one interceptor"", 1, interceptors.length);"
2443,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaVirtualDestTest.java,67,,"        assertTrue(""it is virtual topic interceptor"", interceptors[0] instanceof VirtualDestinationInterceptor);"
2444,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaVirtualDestTest.java,75,,"        javaConfigBroker.setVirtualDestinations(new VirtualDestination[]{buildVirtualTopic(""A.>"", false)});"
2445,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaVirtualDestTest.java,82,,"        exerciseVirtualTopic(""A.Default"");"
2446,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaVirtualDestTest.java,99,,"        CompositeQueue queue = buildCompositeQueue(""VirtualDestination.CompositeQueue"","
2447,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaVirtualDestTest.java,100,,"                Arrays.asList(new ActiveMQQueue(""VirtualDestination.QueueConsumer""),"
2448,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaVirtualDestTest.java,101,,"                new ActiveMQTopic(""VirtualDestination.TopicConsumer"")));"
2449,./TargetProjects/activemq/activemq-runtime-config/src/test/java/org/apache/activemq/java/JavaVirtualDestTest.java,344,,"        CompositeQueue queue = buildCompositeQueue(""VirtualDestination.FilteredCompositeQueue"","
2450,./TargetProjects/activemq/activemq-shiro/src/test/java/org/apache/activemq/shiro/ShiroPluginTest.java,172,,"        Ini ini = Ini.fromResourcePath(""classpath:minimal.shiro.ini"");"
2451,./TargetProjects/activemq/activemq-shiro/src/test/java/org/apache/activemq/shiro/authc/DefaultAuthenticationPolicyTest.java,99,,"                return new SimplePrincipalCollection(""anonymous"", ""iniRealm"");"
2452,./TargetProjects/activemq/activemq-shiro/src/test/java/org/apache/activemq/shiro/authz/ActiveMQPermissionResolverTest.java,33,,"        Permission p = resolver.resolvePermission(""Foo:Bar"");"
2453,./TargetProjects/activemq/activemq-shiro/src/test/java/org/apache/activemq/shiro/authz/AuthorizationFilterTest.java,103,,"        String name = ""myTopic"";"
2454,./TargetProjects/activemq/activemq-spring/src/test/java/org/apache/activemq/usecases/AMQDeadlockTestW4Brokers.java,61,,"                                       + ""&wireFormat.tightEncodingEnabled=false&wireFormat.maxInactivityDuration=30000&wireFormat.tcpNoDelayEnabled=false"";"
2455,./TargetProjects/activemq/activemq-spring/src/test/java/org/apache/activemq/usecases/AMQDeadlockTestW4Brokers.java,111,,"            final String failover1 = ""failover:("" + URL1"
2456,./TargetProjects/activemq/activemq-spring/src/test/java/org/apache/activemq/usecases/AMQDeadlockTestW4Brokers.java,112,,"                                     + "")?initialReconnectDelay=10&maxReconnectDelay=30000&useExponentialBackOff=true&backOffMultiplier=2&maxReconnectAttempts=0&randomize=false"";"
2457,./TargetProjects/activemq/activemq-spring/src/test/java/org/apache/bugs/LoadBalanceTest.java,53,,"    private static final String TESTING_QUEUE = ""testingqueue"";"
2458,./TargetProjects/activemq/activemq-spring/src/test/java/org/apache/bugs/LoadBalanceTest.java,72,,"            brokerService1.setBrokerName(""one"");"
2459,./TargetProjects/activemq/activemq-spring/src/test/java/org/apache/bugs/LoadBalanceTest.java,78,,"            brokerService2.setBrokerName(""two"");"
2460,./TargetProjects/activemq/activemq-spring/src/test/java/org/apache/bugs/LoadBalanceTest.java,195,,"            LOG.info(""broker1Count "" + broker1Count.get() + "", broker2Count "" + broker2Count.get());"
2461,./TargetProjects/activemq/activemq-spring/src/test/java/org/apache/bugs/LoadBalanceTest.java,195,,"            LOG.info(""broker1Count "" + broker1Count.get() + "", broker2Count "" + broker2Count.get());"
2462,./TargetProjects/activemq/activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java,77,,"                String text = new String(command.getContent(), ""UTF-8"");"
2463,./TargetProjects/activemq/activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/ProtocolConverter.java,340,,"                throw new ProtocolException(""Invalid transaction id: "" + stompTx);"
2464,./TargetProjects/activemq/activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/Stomp.java,99,,"            String DESTINATION = ""destination"";"
2465,./TargetProjects/activemq/activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/StompConnection.java,167,,"            headers.put(""transaction"", transaction);"
2466,./TargetProjects/activemq/activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/StompWireFormat.java,106,,"        os.write(marshalHeaders(stomp, builder).toString().getBytes(""UTF-8""));"
2467,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/LegacyFrameTranslatorTest.java,67,,"        assertEquals(""test"", destination.getPhysicalName());"
2468,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/LegacyFrameTranslatorTest.java,116,,"        String destinationA = ""destinationA"";"
2469,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/LegacyFrameTranslatorTest.java,117,,"        String destinationB = ""destinationB"";"
2470,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,82,,"        String connectFrame = ""STOMP\n"" +"
2471,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,83,,"                              ""login:system\n"" +"
2472,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,84,,"                              ""passcode:manager\n"" +"
2473,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,85,,"                              ""accept-version:1.1\n"" +"
2474,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,86,,"                              ""host:localhost\n"" +"
2475,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,92,,"        LOG.debug(""Broker sent: "" + f);"
2476,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,94,,"        assertTrue(f.startsWith(""CONNECTED""));"
2477,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,96,,"        assertTrue(f.indexOf(""version:1.1"") >= 0);"
2478,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,97,,"        assertTrue(f.indexOf(""session:"") >= 0);"
2479,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,179,,"        assertTrue(f.startsWith(""ERROR""));"
2480,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,181,,"        assertTrue(f.indexOf(""message:"") >= 0);"
2481,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,202,,"        assertTrue(""Frame should have a heart beat header."", f.indexOf(""heart-beat:"") >= 0);"
2482,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,276,,"        String message = ""SEND\n"" + ""destination:/queue/"" + getQueueName() + ""\n\n"" + ""Hello World"" + Stomp.NULL;"
2483,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,276,,"        String message = ""SEND\n"" + ""destination:/queue/"" + getQueueName() + ""\n\n"" + ""Hello World"" + Stomp.NULL;"
2484,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,276,,"        String message = ""SEND\n"" + ""destination:/queue/"" + getQueueName() + ""\n\n"" + ""Hello World"" + Stomp.NULL;"
2485,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,276,,"        String message = ""SEND\n"" + ""destination:/queue/"" + getQueueName() + ""\n\n"" + ""Hello World"" + Stomp.NULL;"
2486,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,294,,"        String frame = ""SUBSCRIBE\n"" + ""destination:/queue/"" + getQueueName() + ""\n"" +"
2487,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,295,,"                       ""id:12345\n"" + ""ack:auto\n\n"" + Stomp.NULL;"
2488,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,295,,"                       ""id:12345\n"" + ""ack:auto\n\n"" + Stomp.NULL;"
2489,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,299,,"        assertTrue(stompFrame.getAction().equals(""MESSAGE""));"
2490,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,428,,"        frame = ""UNSUBSCRIBE\n"" + ""destination:/queue/"" + getQueueName() + ""\n"" +"
2491,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,429,,"                ""receipt:1\n"" + ""id:12345\n\n"" + Stomp.NULL;"
2492,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,429,,"                ""receipt:1\n"" + ""id:12345\n\n"" + Stomp.NULL;"
2493,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,433,,"        assertTrue(stompFrame.getAction().equals(""RECEIPT""));"
2494,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,520,,"                       ""id:12345\n"" + ""ack:client\n\n"" + Stomp.NULL;"
2495,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,526,,"        frame = ""ACK\n"" + ""subscription:12345\n"" + ""message-id:"" +"
2496,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,526,,"        frame = ""ACK\n"" + ""subscription:12345\n"" + ""message-id:"" +"
2497,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,526,,"        frame = ""ACK\n"" + ""subscription:12345\n"" + ""message-id:"" +"
2498,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,527,,"                received.getHeaders().get(""message-id"") + ""\n\n"" + Stomp.NULL;"
2499,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,865,,"                ""host:localhost\n"" + ""client-id:test\n"" + ""\n"" + Stomp.NULL;"
2500,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,876,,"                ""destination:/topic/"" + getQueueName() + ""1"" + ""\n"" +"
2501,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,877,,"                ""ack:auto\n"" + ""receipt:1\n"" + ""id:durablesub-1\n"" +"
2502,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,877,,"                ""ack:auto\n"" + ""receipt:1\n"" + ""id:durablesub-1\n"" +"
2503,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,878,,"                ""activemq.subscriptionName:test1\n\n"" + Stomp.NULL;"
2504,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,884,,"        assertEquals(""1"", receipt.getHeaders().get(""receipt-id""));"
2505,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,890,,"                ""ack:auto\n"" + ""receipt:2\n"" + ""id:durablesub-2\n"" +"
2506,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,891,,"                ""activemq.subscriptionName:test2\n\n"" + Stomp.NULL;"
2507,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,921,,"        frame = ""UNSUBSCRIBE\n"" + ""destination:/topic/"" + getQueueName() + ""1\n"" +"
2508,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java,1159,,"        frame = ""BEGIN\n"" + ""transaction: tx1\n"" + ""\n\n"" + Stomp.NULL;"
2509,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,77,,"                         ""accept-version:1.2\r\n"" +"
2510,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,78,,"                         ""login:system\r\n"" +"
2511,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,79,,"                         ""passcode:manager\r\n"" +"
2512,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,80,,"                         ""\r\n"" +"
2513,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,81,,"                         ""\u0000\r\n"";"
2514,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,86,,"        LOG.info(""Broker sent: "" + f);"
2515,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,88,,"        assertTrue(f.startsWith(""CONNECTED""));"
2516,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,89,,"        assertTrue(f.indexOf(""version:1.2"") >= 0);"
2517,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,90,,"        assertTrue(f.indexOf(""session:"") >= 0);"
2518,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,94,,"                      ""destination:/queue/"" + getQueueName() + ""\r\n"" +"
2519,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,103,,"        assertTrue(receipt.getAction().startsWith(""RECEIPT""));"
2520,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,104,,"        String receiptId = receipt.getHeaders().get(""receipt-id"");"
2521,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,112,,"        String connect = ""STOMP\r\n"" +"
2522,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,128,,"        String subscribe = ""SUBSCRIBE\n"" +"
2523,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,129,,"                           ""id:1\n"" +"
2524,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,131,,"                           ""ack:client\n"" +"
2525,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,133,,"                           ""receipt:1\n"" +"
2526,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,144,,"        String message = ""SEND\n"" + ""destination:/queue/"" + getQueueName() + ""\n\n"" + ""1"" + Stomp.NULL;"
2527,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,144,,"        String message = ""SEND\n"" + ""destination:/queue/"" + getQueueName() + ""\n\n"" + ""1"" + Stomp.NULL;"
2528,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,148,,"        assertTrue(received.getAction().equals(""MESSAGE""));"
2529,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,155,,"        String frame = ""ACK\n"" + ""message-id:"" + ackId + ""\n\n"" + Stomp.NULL;"
2530,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,163,,"        frame = ""ACK\n"" + ""id:"" + ackId + ""\n"" + ""receipt:2\n\n"" + Stomp.NULL;"
2531,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,180,,"        frame = ""DISCONNECT\n\n"" + Stomp.NULL;"
2532,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,348,,"        String frame = ""ACK\n"" + ""id:"" +  lastAckId + ""\n"" + ""receipt:2"" + ""\n\n"" + Stomp.NULL;"
2533,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,431,,"        frame = ""DISCONNECT\n"" + ""\n\n"" + Stomp.NULL;"
2534,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,577,,"        String connectFrame = ""STOMP\n"" +"
2535,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,578,,"                              ""login:system\n"" +"
2536,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,579,,"                              ""passcode:manager\n"" +"
2537,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,580,,"                              ""accept-version:1.2\n"" +"
2538,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,581,,"                              ""host:localhost\n"" +"
2539,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,607,,"            assertEquals(""12345"", message.getHeaders().get(Stomp.Headers.Message.SUBSCRIPTION));"
2540,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp12Test.java,866,,"        String begin = ""BEGIN\n"" + ""transaction:tx1"" + ""\n\n"" + Stomp.NULL;"
2541,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompAdvisoryTest.java,96,,"        subheaders.put(""receipt"", ""id-1"");"
2542,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompAdvisoryTest.java,96,,"        subheaders.put(""receipt"", ""id-1"");"
2543,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompAdvisoryTest.java,98,,"        stompConnection.connect(""system"", ""manager"");"
2544,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompAdvisoryTest.java,98,,"        stompConnection.connect(""system"", ""manager"");"
2545,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompAdvisoryTest.java,103,,"        LOG.debug(""Response to subscribe was: {}"", frame);"
2546,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompAdvisoryTest.java,104,,"        assertTrue(frame.trim().startsWith(""RECEIPT""));"
2547,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompAdvisoryTest.java,112,,"        assertEquals(f.getAction(),""MESSAGE"");"
2548,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompAdvisoryTest.java,113,,"        assertTrue(""Should have a body"", f.getBody().length() > 0);"
2549,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompAdvisoryTest.java,114,,"        assertTrue(f.getBody().startsWith(""{\""ConnectionInfo\"":""));"
2550,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompAdvisoryTest.java,132,,"        subheaders.put(""transformation"", Stomp.Transformations.JMS_JSON.toString());"
2551,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompAdvisoryTest.java,259,,"        Message mess = session.createTextMessage(""test"");"
2552,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompAdvisoryTest.java,421,,"        assertTrue(f.getBody().startsWith(""{\""DestinationInfo\"":""));"
2553,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompCompositeDestinationTest.java,64,,"        String destinationA = ""StompA"";"
2554,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompCompositeDestinationTest.java,65,,"        String destinationB = ""StompB"";"
2555,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompCompositeDestinationTest.java,67,,"        String frame = ""CONNECT\n"" +"
2556,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompCompositeDestinationTest.java,68,,"                       ""login:system\n"" +"
2557,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompCompositeDestinationTest.java,69,,"                       ""passcode:manager\n\n"" + Stomp.NULL;"
2558,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompCompositeDestinationTest.java,73,,"        assertTrue(frame.startsWith(""CONNECTED""));"
2559,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompCompositeDestinationTest.java,88,,"        assertTrue(frame.startsWith(""MESSAGE""));"
2560,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompInactivityMonitorTest.java,96,,"        return !transportScheme.contains(""nio"") && !transportScheme.contains(""ssl"");"
2561,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompInactivityMonitorTest.java,96,,"        return !transportScheme.contains(""nio"") && !transportScheme.contains(""ssl"");"
2562,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompMaxFrameSizeTest.java,236,,"        String frame = action + ""\n"" + ""destination:/queue/"" + getQueueName() + ""\n\n"" + ""body"" + Stomp.NULL;"
2563,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompMaxFrameSizeTest.java,236,,"        String frame = action + ""\n"" + ""destination:/queue/"" + getQueueName() + ""\n\n"" + ""body"" + Stomp.NULL;"
2564,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompPrefetchTest.java,62,,"        stompConnection.connect(""system"", ""manager"");"
2565,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompPrefetchTest.java,62,,"        stompConnection.connect(""system"", ""manager"");"
2566,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,86,,"        + ""  <entry>\n"""
2567,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,89,,"        + ""  </entry>\n"""
2568,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,136,,"        connection = cf.createConnection(""system"", ""manager"");"
2569,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,136,,"        connection = cf.createConnection(""system"", ""manager"");"
2570,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,164,,"        sendMessage(msg, ""foo"", ""xyz"");"
2571,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,184,,"        String connectFrame = ""CONNECT\n"" + ""login:system\n"" + ""passcode:manager\n"" + ""request-id:1\n"" + ""\n"" + Stomp.NULL;"
2572,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,184,,"        String connectFrame = ""CONNECT\n"" + ""login:system\n"" + ""passcode:manager\n"" + ""request-id:1\n"" + ""\n"" + Stomp.NULL;"
2573,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,188,,"        assertTrue(f.startsWith(""CONNECTED""));"
2574,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,197,,"        String frame = ""CONNECT\n"" + ""login:system\n"" + ""passcode:manager\n\n"" + Stomp.NULL;"
2575,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,203,,"        frame = ""SEND\n"" + ""destination:/queue/"" + getQueueName() + ""\n\n"" + ""Hello World"" + Stomp.NULL;"
2576,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,203,,"        frame = ""SEND\n"" + ""destination:/queue/"" + getQueueName() + ""\n\n"" + ""Hello World"" + Stomp.NULL;"
2577,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,203,,"        frame = ""SEND\n"" + ""destination:/queue/"" + getQueueName() + ""\n\n"" + ""Hello World"" + Stomp.NULL;"
2578,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,203,,"        frame = ""SEND\n"" + ""destination:/queue/"" + getQueueName() + ""\n\n"" + ""Hello World"" + Stomp.NULL;"
2579,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,256,,"        assertEquals(""foo"", ""abc"", message.getStringProperty(""foo""));"
2580,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,257,,"        assertEquals(""bar"", ""123"", message.getStringProperty(""bar""));"
2581,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,348,,"        assertTrue(frame.startsWith(""ERROR""));"
2582,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,370,,"        frame = ""SUBSCRIBE\n"" + ""destination:/queue/"" + getQueueName() + ""\n"" + ""ack:auto\n\n"" + Stomp.NULL;"
2583,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,370,,"        frame = ""SUBSCRIBE\n"" + ""destination:/queue/"" + getQueueName() + ""\n"" + ""ack:auto\n\n"" + Stomp.NULL;"
2584,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,383,,"        assertTrue(frame.startsWith(""MESSAGE""));"
2585,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,387,,"        assertTrue(frame.startsWith(""RECEIPT""));"
2586,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,452,,"            frame = ""UNSUBSCRIBE\n"" + ""destination:/queue/"" + getQueueName() + ""\n""  + ""receipt: "" +  (receiptId++)  + ""\n\n"" + Stomp.NULL;"
2587,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,524,,"        String length = message.getHeaders().get(""content-length"");"
2588,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,574,,"        message.setStringProperty(""s"", ""value"");"
2589,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,643,,"        assertTrue(""Should have received the real message but got: "" + frame, frame.indexOf(""Real message"") > 0);"
2590,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,663,,"        frame = ""SEND\n"" + ""foo:42\n"" + ""destination:/queue/"" + getQueueName() + ""\n\n"" + ""Real Message"" + Stomp.NULL;"
2591,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,833,,"        frame = ""BEGIN\n"" + ""transaction: tx1\n"" + ""\n\n"" + Stomp.NULL;"
2592,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,904,,"            assertFalse(""no stack trace impl leak:"" + f, f.contains(""at ""));"
2593,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,904,,"            assertFalse(""no stack trace impl leak:"" + f, f.contains(""at ""));"
2594,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,930,,"        frame = ""SEND\n"" + ""destination:/queue/USERS."" + getQueueName() + ""\n\n"" + ""Hello World"" + Stomp.NULL;"
2595,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1019,,"        frame = ""SEND\n"" + ""destination:/queue/"" + getQueueName() + ""\n"" + ""transformation:"" + Stomp.Transformations.JMS_OBJECT_XML + ""\n\n"" + ""Hello World"" + Stomp.NULL;"
2596,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1051,,"        assertEquals(""Dejan"", object.getName());"
2597,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1077,,"        MessageProducer producer = session.createProducer(new ActiveMQQueue(""USERS."" + getQueueName()));"
2598,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1078,,"        ObjectMessage message = session.createObjectMessage(new SamplePojo(""Dejan"", ""Belgrade""));"
2599,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1087,,"        frame = ""SUBSCRIBE\n"" + ""destination:/queue/USERS."" + getQueueName() + ""\n"" + ""ack:auto"" + ""\n"" + ""transformation:""	+ Stomp.Transformations.JMS_OBJECT_XML + ""\n\n"" + Stomp.NULL;"
2600,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1164,,"        mapMessage.setString(""name"", ""Dejan"");"
2601,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1165,,"        mapMessage.setString(""city"", ""Belgrade"");"
2602,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1248,,"        LOG.info(""Received Frame: {}"", xmlFrame.getBody());"
2603,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1560,,"        stompConnection.begin(""tx1"");"
2604,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1561,,"        stompConnection.send(""/queue/"" + getQueueName(), ""msg"", ""tx1"", null);"
2605,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1578,,"        sendMessage(""message 1"");"
2606,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1579,,"        sendMessage(""message 2"");"
2607,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1580,,"        sendMessage(""message 3"");"
2608,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1581,,"        sendMessage(""message 4"");"
2609,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1582,,"        sendMessage(""message 5"");"
2610,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1684,,"        stompConnection.begin(""tx2"");"
2611,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1716,,"        headers.put(""activemq.exclusive"", ""true"");"
2612,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1797,,"        headers.put(Stomp.Headers.Message.MESSAGE_ID, ""Thisisnotallowed"");"
2613,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTest.java,1990,,"        doTestActiveMQReplyToTempDestination(""topic"");"
2614,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java,139,,"        sslContext.setKeyStorePassword(""password"");"
2615,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java,219,,"        users.add(new AuthenticationUser(""user"", ""password"", ""users""));"
2616,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java,233,,"        entry.setRead(""admins"");"
2617,./TargetProjects/activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java,246,,"        entry.setWrite(""guests,users"");"
2618,./TargetProjects/activemq/activemq-tooling/activemq-maven-plugin/src/test/java/org/apache/activemq/maven/StartBrokerMojoTest.java,94,,"        this.startBrokerMojo.setConfigUri(""x-config-uri-x"");"
2619,./TargetProjects/activemq/activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/JmsConsumerClient.java,95,,"                LOG.info(""Unsubscribing durable subscriber: "" + getClientName());"
2620,./TargetProjects/activemq/activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/JmsProducerClient.java,141,,"                            getJmsProducer().send(dest[j], createJmsTextMessage(""Text Message ["" + i + ""]""));"
2621,./TargetProjects/activemq/activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/properties/ReflectionUtil.java,72,,"                String getMethod = ""get"" + name.substring(0, 1).toUpperCase() + name.substring(1);"
2622,./TargetProjects/activemq/activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/reports/XmlFilePerfReportWriter.java,119,,"            tempLogFileWriter.println(""[TP-DATA]"" + csvData);"
2623,./TargetProjects/activemq/activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/reports/XmlFilePerfReportWriter.java,121,,"            tempLogFileWriter.println(""[CPU-DATA]"" + csvData);"
2624,./TargetProjects/activemq/activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/reports/XmlFilePerfReportWriter.java,218,,"        xmlFileWriter.println(""</property>"");"
2625,./TargetProjects/activemq/activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/reports/XmlFilePerfReportWriter.java,252,,"        xmlFileWriter.println(""<prop key='"" + ThroughputReportPlugin.KEY_SYS_TOTAL_TP + ""'>"" + val + ""</prop>"");"
2626,./TargetProjects/activemq/activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/reports/XmlFilePerfReportWriter.java,252,,"        xmlFileWriter.println(""<prop key='"" + ThroughputReportPlugin.KEY_SYS_TOTAL_TP + ""'>"" + val + ""</prop>"");"
2627,./TargetProjects/activemq/activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/reports/XmlFilePerfReportWriter.java,277,,"        System.out.println(""Min Client Throughput Per Sample: clientName="" + clientName + "", value="" + clientVal);"
2628,./TargetProjects/activemq/activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/reports/XmlFilePerfReportWriter.java,278,,"        xmlFileWriter.println(""<prop key='"" + ThroughputReportPlugin.KEY_MIN_CLIENT_TP + ""'>clientName="" + clientName + "",value="" + clientVal + ""</prop>"");"
2629,./TargetProjects/activemq/activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/reports/XmlFilePerfReportWriter.java,278,,"        xmlFileWriter.println(""<prop key='"" + ThroughputReportPlugin.KEY_MIN_CLIENT_TP + ""'>clientName="" + clientName + "",value="" + clientVal + ""</prop>"");"
2630,./TargetProjects/activemq/activemq-tooling/activemq-perf-maven-plugin/src/test/java/org/apache/activemq/tool/AbstractJmsClientTest.java,87,,"        assertDestinationNameType(""dest"", TOPIC_TYPE,"
2631,./TargetProjects/activemq/activemq-tooling/activemq-perf-maven-plugin/src/test/java/org/apache/activemq/tool/ReflectionUtilTest.java,31,,"        ReflectionUtil.configureClass(data, ""this-should-not-matter"", ""this-should-not-matter"");"
2632,./TargetProjects/activemq/activemq-tooling/activemq-perf-maven-plugin/src/test/java/org/apache/activemq/tool/ReflectionUtilTest.java,80,,"        props.setProperty(""booleanData"", ""true"");"
2633,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ActiveMQConnectionFactoryTest.java,85,,"        assertEquals(""vm://localhost"", cf.getBrokerURL());"
2634,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ActiveMQSslConnectionFactoryTest.java,40,,"    public static final String PASSWORD = ""password"";"
2635,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ActiveMQSslConnectionFactoryTest.java,89,,"        String sslUri = ""ssl://localhost:61611"";"
2636,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ActiveMQXAConnectionFactoryTest.java,141,,"        ActiveMQConnectionFactory cf = getXAConnectionFactory(""vm://localhost?broker.persistent=false"");"
2637,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ConnectionCleanupTest.java,48,,"        connection.setClientID(""test"");"
2638,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ConnectionCleanupTest.java,53,,"            fail(""Should have received JMSException"");"
2639,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ExclusiveConsumerTest.java,93,,"            Message msg = senderSession.createTextMessage(""test"");"
2640,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JMSConsumerTest.java,80,,"        addCombinationValues(""deliveryMode"", new Object[] {Integer.valueOf(DeliveryMode.NON_PERSISTENT), Integer.valueOf(DeliveryMode.PERSISTENT)});"
2641,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JMSConsumerTest.java,81,,"        addCombinationValues(""destinationType"", new Object[] {Byte.valueOf(ActiveMQDestination.QUEUE_TYPE), Byte.valueOf(ActiveMQDestination.TOPIC_TYPE),"
2642,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JMSConsumerTest.java,203,,"        addCombinationValues(""ackMode"", new Object[] {Integer.valueOf(Session.AUTO_ACKNOWLEDGE), Integer.valueOf(Session.DUPS_OK_ACKNOWLEDGE),"
2643,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JMSConsumerTest.java,332,,"        connection.setClientID(""test"");"
2644,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JMSConsumerTest.java,919,,"        assertEquals(2, msg.getLongProperty(""JMSXDeliveryCount""));"
2645,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsConsumerResetActiveListenerTest.java,102,,"        producer.send(session.createTextMessage(""First""));"
2646,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsConsumerResetActiveListenerTest.java,103,,"        producer.send(session.createTextMessage(""Second""));"
2647,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsConsumerResetActiveListenerTest.java,110,,"        assertEquals(""result is first"", ""First"", ((TextMessage)result).getText());"
2648,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsDurableTopicSendReceiveTest.java,63,,"        connection2.setClientID(""test"");"
2649,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsMessageConsumerTest.java,79,,"        producer.send(session.createTextMessage(""test""));"
2650,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsQueueBrowserTest.java,61,,"        ActiveMQQueue destination = new ActiveMQQueue(""TEST"");"
2651,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsQueueBrowserTest.java,223,,"        assertEquals(""Queue size"", outbound.length, proxy.getQueueSize());"
2652,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsQueueWildcardSendReceiveTest.java,91,,"            fail(""unexpected message:"" + text);"
2653,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsRedeliveredTest.java,86,,"        Queue queue = session.createQueue(""queue-"" + getName());"
2654,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsRedeliveredTest.java,94,,"        assertFalse(""Message should not be redelivered."", msg.getJMSRedelivered());"
2655,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsRedeliveredTest.java,106,,"        assertTrue(""Message should be redelivered."", msg.getJMSRedelivered());"
2656,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsRedeliveredTest.java,233,,"        Topic topic = session.createTopic(""topic-"" + getName());"
2657,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsRedeliveredTest.java,234,,"        MessageConsumer consumer = session.createDurableSubscriber(topic, ""sub1"");"
2658,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsRollbackRedeliveryTest.java,121,,"                        LOG.info(""Received message "" + msg.getText() + "" ("" + received.getAndIncrement() + "")"" + msg.getJMSMessageID());"
2659,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsRollbackRedeliveryTest.java,123,,"                        assertEquals(2, msg.getLongProperty(""JMSXDeliveryCount""));"
2660,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsRollbackRedeliveryTest.java,231,,"                    assertEquals(""redelivery property matches deliveries"", received.get(), msg.getLongProperty(""JMSXDeliveryCount""));"
2661,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsSendReceiveWithMessageExpirationTest.java,96,,"            message.setStringProperty(""stringProperty"", data[i]);"
2662,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsSendReceiveWithMessageExpirationTest.java,97,,"            message.setIntProperty(""intProperty"", i);"
2663,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsSendReceiveWithMessageExpirationTest.java,101,,"                    LOG.debug(""About to send a queue message: "" + message + "" with text: "" + data[i]);"
2664,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsSessionRecoverTest.java,138,,"        producer.send(session.createTextMessage(""First""));"
2665,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsSessionRecoverTest.java,139,,"        producer.send(session.createTextMessage(""Second""));"
2666,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsTempDestinationTest.java,137,,"        TextMessage message = session.createTextMessage(""Hello"");"
2667,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsTopicSelectorTest.java,99,,"        message.setStringProperty(""stringProperty"", ""a"");"
2668,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsTopicSelectorTest.java,100,,"        message.setLongProperty(""longProperty"", 1);"
2669,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsTopicSelectorTest.java,101,,"        message.setBooleanProperty(""booleanProperty"", true);"
2670,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/JmsTopicWildcardSendReceiveTest.java,74,,"            fail(""unexpected message:"" + text);"
2671,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/MessageListenerRedeliveryTest.java,106,,"                LOG.info(""Message Received: "" + message);"
2672,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/MessageListenerRedeliveryTest.java,127,,"        Queue queue = session.createQueue(""queue-"" + getTestName());"
2673,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/OptimizedAckTest.java,68,,"                LOG.info(""inflight count: "" + regionBroker.getDestinationStatistics().getInflight().getCount());"
2674,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ProducerFlowControlTest.java,76,,"        CountDownLatch pubishDoneToQeueuB = asyncSendTo(queueB, ""Message 1"");"
2675,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ProducerFlowControlTest.java,83,,"        pubishDoneToQeueuB = asyncSendTo(queueB, ""Message 2"");"
2676,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/RedeliveryPolicyTest.java,113,,"        producer.send(session.createTextMessage(""1st""));"
2677,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/RedeliveryPolicyTest.java,114,,"        producer.send(session.createTextMessage(""2nd""));"
2678,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/RedeliveryPolicyTest.java,213,,"        ActiveMQQueue destination = new ActiveMQQueue(""TEST"");"
2679,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/RedeliveryPolicyTest.java,217,,"        MessageConsumer dlqConsumer = session.createConsumer(new ActiveMQQueue(""ActiveMQ.DLQ""));"
2680,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/RedeliveryPolicyTest.java,251,,"        assertTrue(""cause exception has policy ref: "" + cause, cause.contains(""RedeliveryPolicy""));"
2681,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/RedeliveryPolicyTest.java,455,,"        assertNotNull(""Got message from DLQ"", m);"
2682,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/TransactionContextTest.java,65,,"                fail(""exepcted rollback exception"");"
2683,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/XAConsumerTest.java,75,,"                new ActiveMQXAConnectionFactory(""admin"", ""admin"", brokerUri + ""?trace=true&jms.prefetchPolicy.all=0"");"
2684,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ZeroPrefetchConsumerTest.java,74,,"        assertNotNull(""Should have received a message!"", answer);"
2685,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ZeroPrefetchConsumerTest.java,77,,"        assertNull(""Should have not received a message!"", answer);"
2686,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ZeroPrefetchConsumerTest.java,94,,"        producer.send(session.createTextMessage(""Msg1""));"
2687,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ZeroPrefetchConsumerTest.java,95,,"        producer.send(session.createTextMessage(""Msg2""));"
2688,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ZeroPrefetchConsumerTest.java,182,,"        producer.send(session.createTextMessage(""Msg3""));"
2689,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ZeroPrefetchConsumerTest.java,183,,"        producer.send(session.createTextMessage(""Msg4""));"
2690,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ZeroPrefetchConsumerTest.java,184,,"        producer.send(session.createTextMessage(""Msg5""));"
2691,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ZeroPrefetchConsumerTest.java,185,,"        producer.send(session.createTextMessage(""Msg6""));"
2692,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ZeroPrefetchConsumerTest.java,186,,"        producer.send(session.createTextMessage(""Msg7""));"
2693,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/ZeroPrefetchConsumerTest.java,187,,"        producer.send(session.createTextMessage(""Msg8""));"
2694,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/blob/FTPBlobDownloadStrategyTest.java,40,,"        wrt.write(""hello world"");"
2695,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerRedeliveryTest.java,81,,"        assertNotNull(""got message"", message);"
2696,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerRedeliveryTest.java,94,,"            assertEquals(""message matches"", message.getStringProperty(""data""), brokerRedeliveryMessage.getStringProperty(""data""));"
2697,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerRedeliveryTest.java,94,,"            assertEquals(""message matches"", message.getStringProperty(""data""), brokerRedeliveryMessage.getStringProperty(""data""));"
2698,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerTest.java,49,,"        addCombinationValues(""deliveryMode"", new Object[] {Integer.valueOf(DeliveryMode.NON_PERSISTENT),"
2699,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerTest.java,55,,"        ActiveMQDestination destination = new ActiveMQQueue(""TEST"");"
2700,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerTest.java,90,,"            assertNotNull(""m1 is null for index: "" + i, m1);"
2701,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerTest.java,291,,"        addCombinationValues(""destinationType"","
2702,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerTest.java,512,,"        consumerInfo1.setSubscriptionName(""test"");"
2703,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerTest.java,1043,,"        addCombinationValues(""destination"", new Object[] {new ActiveMQTopic(""TEST""),"
2704,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/RecoveryBrokerTest.java,75,,"            consumerInfo1.setSubscriptionName(""test"");"
2705,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/RecoveryBrokerTest.java,157,,"        ActiveMQDestination destination = new ActiveMQQueue(""TEST"");"
2706,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/RedeliveryRestartTest.java,104,,"            LOG.info(""not redelivered? got: "" + msg);"
2707,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/RedeliveryRestartTest.java,105,,"            assertNotNull(""got the message"", msg);"
2708,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/RedeliveryRestartTest.java,106,,"            assertEquals(""first delivery"", 1, msg.getLongProperty(""JMSXDeliveryCount""));"
2709,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/RedeliveryRestartTest.java,106,,"            assertEquals(""first delivery"", 1, msg.getLongProperty(""JMSXDeliveryCount""));"
2710,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/RedeliveryRestartTest.java,107,,"            assertEquals(""not a redelivery"", false, msg.getJMSRedelivered());"
2711,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/RedeliveryRestartTest.java,121,,"            assertNotNull(""got the message again"", msg);"
2712,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/RedeliveryRestartWithExceptionTest.java,96,,"            + ""?jms.prefetchPolicy.all=0"");"
2713,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/RedeliveryRestartWithExceptionTest.java,109,,"                LOG.info(""not redelivered? got: "" + msg);"
2714,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/RedeliveryRestartWithExceptionTest.java,110,,"                assertNotNull(""got the message"", msg);"
2715,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/RedeliveryRestartWithExceptionTest.java,142,,"            assertTrue(""redelivery count survives restart"", msg.getLongProperty(""JMSXDeliveryCount"") > 1);"
2716,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/XARecoveryBrokerTest.java,388,,"        ActiveMQDestination destination = new ActiveMQTopic(""TryTopic"");"
2717,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/XARecoveryBrokerTest.java,392,,"        connectionInfo.setClientId(""durable"");"
2718,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/XARecoveryBrokerTest.java,687,,"        assertEquals(""there is a prepared tx"", 1, dataArrayResponse.getData().length);"
2719,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/XARecoveryBrokerTest.java,688,,"        assertEquals(""it matches"", txid, dataArrayResponse.getData()[0]);"
2720,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/XARecoveryBrokerTest.java,709,,"        assertEquals(""there are no prepared tx"", 0, dataArrayResponse.getData().length);"
2721,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/XARecoveryBrokerTest.java,972,,"        LOG.info(""new tx for redelivery"");"
2722,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/XARecoveryBrokerTest.java,986,,"                assertNotNull(""unexpected null on:"" + i, message);"
2723,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/advisory/AdvisoryBrokerTest.java,83,,"        ActiveMQDestination queue = new ActiveMQQueue(""test"");"
2724,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/advisory/AdvisoryJmxTest.java,61,,"        Destination dest = sess.createQueue(""test"");"
2725,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/advisory/AdvisoryNetworkBridgeTest.java,54,,"        assertTrue(advisory.getBooleanProperty(""started""));"
2726,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/BrokerViewSlowStoreStartupTest.java,119,,"            fail(""Should have thrown an IllegalStateException"");"
2727,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/BrokerViewSlowStoreStartupTest.java,292,,"            view.addTopic(""TEST"");"
2728,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/JMXRemoveDurableSubscriberTest.java,68,,"        authEntry1.setWrite(""manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin"");"
2729,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/Log4JConfigTest.java,129,,"        log4jConfigView.setLogLevel(BROKER_LOGGER, ""WARN"");"
2730,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/Log4JConfigTest.java,134,,"        log4jConfigView.setLogLevel(BROKER_LOGGER, ""INFO"");"
2731,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,104,,"        ObjectName brokerName = assertRegisteredObjectName(domain + "":type=Broker,brokerName=localhost"");"
2732,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,108,,"                     new URI(broker.getTransportConnectorByType(""tcp"")).getPort(),"
2733,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,130,,"        ObjectName queueViewMBeanName = assertRegisteredObjectName(domain + "":type=Broker,brokerName=localhost,destinationType=Queue,destinationName="" + getDestinationString());"
2734,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,137,,"            fail(""There is no message in the queue:"");"
2735,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,140,,"            echo(""Current queue size: "" + initialQueueSize);"
2736,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,146,,"            String messageID = (String) cdata.get(""JMSMessageID"");"
2737,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,147,,"            assertNotNull(""Should have a message ID for message "" + i, messageID);"
2738,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,151,,"        assertTrue(""dest has some memory usage"", queue.getMemoryPercentUsage() > 0);"
2739,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,174,,"        assertEquals(""Unexpected number of messages "",messageCount, newQueuesize);"
2740,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,384,,"            echo(""Message: "" + message.getJMSMessageID() + "" redelivered "" + message.getJMSRedelivered() + "" counter "" + message.getObjectProperty(""JMSXDeliveryCount""));"
2741,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,417,,"        assertEquals(""dest has no memory usage"", 0, queue.getMemoryPercentUsage());"
2742,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,451,,"        queue.moveMatchingMessagesTo(""counter > 2"", newDestination);"
2743,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,462,,"        assertEquals(""Should have no more messages in the queue: "" + queueViewMBeanName, 0, queueNew.getQueueSize());"
2744,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,464,,"        assertEquals(""dest has 0 memory usage"", 0, queueNew.getMemoryUsageByteCount());"
2745,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,487,,"        LOG.info(""Queue: "" + queueViewMBeanName + "" now has: "" + queueTwo.getQueueSize() + "" message(s)"");"
2746,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,487,,"        LOG.info(""Queue: "" + queueViewMBeanName + "" now has: "" + queueTwo.getQueueSize() + "" message(s)"");"
2747,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,487,,"        LOG.info(""Queue: "" + queueViewMBeanName + "" now has: "" + queueTwo.getQueueSize() + "" message(s)"");"
2748,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,488,,"        assertEquals(""Expected messages in a queue: "" + queueViewMBeanName, MESSAGE_COUNT-3, queueTwo.getQueueSize());"
2749,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,576,,"        assertNotRegisteredObjectName(domain + "":type=Broker,brokerName=localhost,destinationType=Topic,destinationName="" + getDestinationString() + ""1 "");"
2750,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,588,,"        assertEquals(""topic1 Durable subscriber count"", 0, topic1.getConsumerCount());"
2751,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,589,,"        assertEquals(""topic2 Durable subscriber count"", 0, topic2.getConsumerCount());"
2752,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,609,,"        echo(""Create QueueView MBean..."");"
2753,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,630,,"            headers.put(""JMSType"", ""MyType"");"
2754,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,631,,"            headers.put(""MyHeader"", i);"
2755,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,632,,"            headers.put(""MyStringHeader"", ""StringHeader"" + i);"
2756,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,632,,"            headers.put(""MyStringHeader"", ""StringHeader"" + i);"
2757,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,797,,"        assertEquals(""Durable subscriber count"", 0, broker.getDurableTopicSubscribers().length);"
2758,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,880,,"        assertEquals(""topic1 Producer count"", 0, topic1.getProducerCount());"
2759,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,881,,"        assertEquals(""topic2 Producer count"", 0, topic2.getProducerCount());"
2760,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,882,,"        assertEquals(""broker Topic Producer count"", 0, broker.getTopicProducers().length);"
2761,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,1031,,"            message.setIntProperty(""counter"", i);"
2762,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,1214,,"        assertTrue(""matches our options"", optionsMap.containsKey(""hasOptions""));"
2763,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,1223,,"        connection = connectionFactory.createConnection(""admin"", ""admin"");"
2764,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,1224,,"        connection.setClientID(""MBeanTest"");"
2765,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java,1707,,"        connection.setClientID(""test"");"
2766,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/PurgeTest.java,84,,"        assertEquals(""Queue size"", count, messageCount);"
2767,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/policy/ClientIdFilterDispatchPolicyTest.java,56,,"        connection1.setClientID(""test1"");"
2768,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/policy/ClientIdFilterDispatchPolicyTest.java,79,,"        connection2.setClientID(""test2"");"
2769,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/policy/MaxDestinationsPolicyTest.java,95,,"            createQueue(""queue."" + i);"
2770,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/policy/MaxDestinationsPolicyTest.java,136,,"            createTopic(""topic."" + i);"
2771,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/policy/SecureDLQTest.java,37,,"        readAccess.put(new ActiveMQQueue(""TEST""), ADMINS);"
2772,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/policy/SecureDLQTest.java,39,,"        readAccess.put(new ActiveMQQueue(""ActiveMQ.DLQ""), ADMINS);"
2773,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursorTest.java,230,,"        connection.setClientID(""clientId"");"
2774,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursorTest.java,314,,"        SubscriptionKey subKey = new SubscriptionKey(""clientId"", ""sub1"");"
2775,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/cursors/KahaDBPendingMessageCursorTest.java,122,,"        connection.setClientID(""clientId"");"
2776,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/cursors/KahaDBPendingMessageCursorTest.java,124,,"        Topic topic =  publishTestMessagesDurable(connection, new String[] {""sub1""}, 200,"
2777,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/cursors/KahaDBPendingMessageCursorTest.java,168,,"        SubscriptionKey subKey2 = new SubscriptionKey(""clientId"", ""sub2"");"
2778,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/cursors/MemoryPendingMessageCursorTest.java,75,,"        connection.setClientID(""clientId"");"
2779,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/cursors/MemoryPendingMessageCursorTest.java,78,,"        SubscriptionKey subKey = new SubscriptionKey(""clientId"", ""sub1"");"
2780,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/cursors/StoreQueueCursorOrderTest.java,99,,"        assertTrue(""cache enabled"", underTest.isUseCache() && underTest.isCacheEnabled());"
2781,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/cursors/StoreQueueCursorOrderTest.java,123,,"        assertTrue(""cache is disabled as limit reached"", !underTest.isCacheEnabled());"
2782,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/cursors/StoreQueueCursorOrderTest.java,134,,"            LOG.info(""Received message: {} with body: {}"","
2783,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/group/MessageGroupTest.java,49,,"        	TextMessage message = session.createTextMessage(""message "" + i);"
2784,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/group/MessageGroupTest.java,50,,"            message.setStringProperty(""JMSXGroupID"", ""TEST-GROUP"");"
2785,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/group/MessageGroupTest.java,50,,"            message.setStringProperty(""JMSXGroupID"", ""TEST-GROUP"");"
2786,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/group/MessageGroupTest.java,51,,"            message.setIntProperty(""JMSXGroupSeq"", i + 1);"
2787,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/group/MessageGroupTest.java,52,,"            LOG.info(""sending message: "" + message);"
2788,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/group/MessageGroupTest.java,60,,"            assertNotNull(""m1 is null for index: "" + i, m1);"
2789,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/scheduler/JmsSchedulerTest.java,76,,"        TextMessage message = session.createTextMessage(""test msg"");"
2790,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/scheduler/JobSchedulerStoreCheckpointTest.java,106,,"        LOG.info(""Number of journal log files: {}"", getNumJournalFiles());"
2791,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/scheduler/JobSchedulerTest.java,56,,"            String test = new String(""test"" + i);"
2792,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/scheduler/KahaDBSchedulerIndexRebuildTest.java,99,,"        JobScheduler scheduler = schedulerStore.getJobScheduler(""JMS"");"
2793,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/scheduler/memory/InMemoryJobSchedulerTest.java,59,,"            String test = new String(""test"" + i);"
2794,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/virtual/CompositeDestinationSendWhenNotMatchedTest.java,66,,"		Destination producerDestination = new ActiveMQQueue(""A.B"");"
2795,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/virtual/CompositeDestinationSendWhenNotMatchedTest.java,68,,"		Destination destination2 = new ActiveMQQueue(""A.C"");"
2796,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/virtual/CompositeDestinationSendWhenNotMatchedTest.java,70,,"		LOG.info(""Sending to: "" + producerDestination);"
2797,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/virtual/CompositeDestinationSendWhenNotMatchedTest.java,71,,"		LOG.info(""Consuming from: "" + destination1 + "" and "" + destination2);"
2798,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/virtual/CompositeDestinationSendWhenNotMatchedTest.java,71,,"		LOG.info(""Consuming from: "" + destination1 + "" and "" + destination2);"
2799,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/virtual/CompositeDestinationSendWhenNotMatchedTest.java,83,,"		producer.send(createMessage(session, ""tet13""));"
2800,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/virtual/CompositeDestinationSendWhenNotMatchedTest.java,122,,"		producer.send(createMessage(session, ""test13""));"
2801,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/virtual/CompositeDestinationSendWhenNotMatchedTest.java,142,,"		Destination producerDestination = new ActiveMQQueue(""A.D"");"
2802,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/virtual/CompositeDestinationSendWhenNotMatchedTest.java,216,,"		Destination producerDestination = new ActiveMQQueue(""A.X"");"
2803,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/virtual/CompositeDestinationSendWhenNotMatchedTest.java,292,,"		Destination producerDestination = new ActiveMQQueue(""A.W"");"
2804,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/broker/virtual/CompositeDestinationSendWhenNotMatchedTest.java,470,,"		filteredQueue.setSelector(""testid LIKE 'test%'"");"
2805,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ1282.java,61,,"            Boolean actual = message.getBoolean(""foo"");"
2806,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ2174Test.java,84,,"        assertEquals(""red"", received.getStringProperty(""color""));"
2807,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ3166Test.java,68,,"        MessageProducer producer = session.createProducer(session.createQueue(""QAT""));"
2808,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ3166Test.java,71,,"            producer.send(session.createTextMessage(""Hello A""));"
2809,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ3166Test.java,76,,"        assertTrue(""only one message made it through"", Wait.waitFor(new Wait.Condition() {"
2810,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ3274Test.java,165,,"        LOG.info(""TESTING TEMP TOPICS "" + prod_broker_url + "" -> "" + cons_broker_url + "" ("" + num_msg + "" messages)"");"
2811,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ3274Test.java,165,,"        LOG.info(""TESTING TEMP TOPICS "" + prod_broker_url + "" -> "" + cons_broker_url + "" ("" + num_msg + "" messages)"");"
2812,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ3465Test.java,96,,"       message.setText(""Some Text"");"
2813,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ3732Test.java,107,,"                    LOG.error(""Caught an unexpected error: "", e);"
2814,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4083Test.java,130,,"        assertTrue(""Inflight count should reach zero, currently: "" + queueView.getInFlightCount(), Wait.waitFor(new Wait.Condition() {"
2815,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4083Test.java,137,,"        LOG.info(""Dequeued Count: {}"", queueView.getDequeueCount());"
2816,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4083Test.java,138,,"        LOG.info(""Dispatch Count: {}"", queueView.getDispatchCount());"
2817,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4083Test.java,139,,"        LOG.info(""Enqueue Count: {}"", queueView.getEnqueueCount());"
2818,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4083Test.java,140,,"        LOG.info(""Expired Count: {}"", queueView.getExpiredCount());"
2819,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4083Test.java,141,,"        LOG.info(""InFlight Count: {}"", queueView.getInFlightCount());"
2820,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4126Test.java,80,,"        System.setProperty(""javax.net.ssl.trustStorePassword"", ""password"");"
2821,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4133Test.java,59,,"        System.setProperty(""javax.net.ssl.trustStorePassword"", ""password"");"
2822,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4133Test.java,76,,"        stompConnectTo(""localhost"", broker.getConnectorByName(""stomp+ssl"").getConnectUri().getPort());"
2823,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4147Test.java,57,,"        bridgeBrokers(""broker1"", ""broker2"").start();"
2824,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4147Test.java,57,,"        bridgeBrokers(""broker1"", ""broker2"").start();"
2825,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4147Test.java,101,,"            assertTrue(""Memory Usage Should be Zero: "", Wait.waitFor(new Wait.Condition() {"
2826,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4212Test.java,121,,"        LOG.info(""There are currently [{}] journal log files."", getNumberOfJournalFiles());"
2827,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4212Test.java,125,,"        assertTrue(""Should have an inactive durable sub"", Wait.waitFor(new Wait.Condition() {"
2828,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4212Test.java,171,,"        LOG.info(""Recovering the broker."");"
2829,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4212Test.java,290,,"        connection.setClientID(""Inactive"");"
2830,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4407Test.java,92,,"        sendMessage(DESTINATION_NAME, ""test 1"");"
2831,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4475Test.java,140,,"            LOG.warn(""Caught unexpected exception: {}"", e);"
2832,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4485LowLimitTest.java,77,,"            brokersUrl.append(""tcp://localhost:"" + (portBase + i));"
2833,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4485Test.java,76,,"                if (messageSend.isInTransaction() && messageSend.getProperty(""NUM"") != null) {"
2834,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4607Test.java,80,,"        bridge(""Broker0"", ""Broker1"");"
2835,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4607Test.java,80,,"        bridge(""Broker0"", ""Broker1"");"
2836,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4607Test.java,83,,"        bridge(""Broker1"", ""Broker2"");"
2837,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4607Test.java,92,,"        Destination dest = createDestination(""TEST.FOO"", false);"
2838,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4607Test.java,96,,"            MessageConsumer messageConsumer = createConsumer(""Broker"" + i, dest, ""DoNotConsume = 'true'"");"
2839,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4607Test.java,96,,"            MessageConsumer messageConsumer = createConsumer(""Broker"" + i, dest, ""DoNotConsume = 'true'"");"
2840,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4607Test.java,116,,"        assertTrue(""Consumed ok"", Wait.waitFor(new Wait.Condition() {"
2841,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4887Test.java,49,,"        ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(""vm://localhost"");"
2842,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4887Test.java,76,,"            message.setLongProperty(""sendTime"", sendTime);"
2843,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4887Test.java,81,,"            assertNotNull(""On message "" + i, receivedMessage);"
2844,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4893Test.java,39,,"        message.setIntProperty(""TestProp"", 333);"
2845,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ5814Test.java,53,,"        users.add(new AuthenticationUser(""publisher"", ""123"", ""publisher""));"
2846,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ5814Test.java,53,,"        users.add(new AuthenticationUser(""publisher"", ""123"", ""publisher""));"
2847,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ5814Test.java,54,,"        users.add(new AuthenticationUser(""subscriber"", ""123"", ""subscriber""));"
2848,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ5814Test.java,55,,"        users.add(new AuthenticationUser(""admin"", ""123"", ""publisher,subscriber""));"
2849,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ5893Test.java,106,,"                LOG.debug(""Received message: {}"", message);"
2850,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ6094Test.java,80,,"                    producer(connectionUri, ""queueA"");"
2851,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ6131Test.java,102,,"        broker.getBroker().addDestination(broker.getAdminConnectionContext(), new ActiveMQTopic(""durable.sub""), false);"
2852,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ6131Test.java,106,,"        connection.setClientID(""myId"");"
2853,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ6131Test.java,110,,"        TopicSubscriber durable = jmsSession.createDurableSubscriber(new ActiveMQTopic(""durable.sub""), ""sub"");"
2854,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ6131Test.java,113,,"        final int original = new ArrayList<File>(FileUtils.listFiles(persistentDir, new WildcardFileFilter(""*.log""), TrueFileFilter.INSTANCE)).size();"
2855,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ6254Test.java,100,,"        TopicSubscriber subscriber = session.createDurableSubscriber(session.createTopic(""alphabet.>""), ""alphabet.>"");"
2856,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ6254Test.java,282,,"        entry.setRead(""admins"");"
2857,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ6254Test.java,288,,"        entry.setRead(""users"");"
2858,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ6254Test.java,295,,"        entry.setWrite(""guests,users"");"
2859,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ6459Test.java,148,,"        ConnectionFactory connectionFactory = new ActiveMQConnectionFactory(""admin"", ""admin"", TRANSPORT_URL);"
2860,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ7067Test.java,114,,"        Queue holdKahaDb = xaSession.createQueue(""holdKahaDb"");"
2861,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ7067Test.java,119,,"        System.out.println(""****** create new txid = "" + txid);"
2862,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ7067Test.java,126,,"        Queue queue = xaSession.createQueue(""test"");"
2863,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ7067Test.java,446,,"        System.out.println(String.format(""QueueSize %s: %d"", holdKahaDb.getQueueName(), getQueueSize(holdKahaDb.getQueueName())));"
2864,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ7118Test.java,137,,"        checkFiles(true, 3, ""db-31.log"");"
2865,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/JMSQueueBrowserPriorityTest.java,81,,"            produceMessages(3, 4, ""TestQ"");"
2866,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/JmsDurableTopicSlowReceiveTest.java,101,,"        connection2.setClientID(""test"");"
2867,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/MemoryUsageBlockResumeTest.java,99,,"            LOG.info(""After big: "" + idx + "", System Memory Usage "" + broker.getSystemUsage().getMemoryUsage().getPercentUsage());"
2868,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/MessageExpiryClientSideTest.java,96,,"        Queue queue = session.createQueue(""timeout.test"");"
2869,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/MessageExpiryClientSideTest.java,98,,"        TextMessage textMessage = session.createTextMessage(""test Message"");"
2870,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/MissingDataFileTest.java,229,,"        LOG.info(""hectorToHalo received "" + hectorToHaloCtr + "" messages"");"
2871,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/OptimizeAcknowledgeWithExpiredMsgsTest.java,133,,"            LOG.trace(""Sent message: ""+ message.getJMSMessageID() +"
2872,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/OptimizeAcknowledgeWithExpiredMsgsTest.java,142,,"                "" with expiry 30 sec"");"
2873,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/bugs/TransactionNotStartedErrorTest.java,200,,"        LOG.info(""hectorToHalo received "" + hectorToHaloCtr + "" messages"");"
2874,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQBytesMessageTest.java,360,,"            fail(""Should have thrown exception"");"
2875,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQDestinationTest.java,40,,"        addCombinationValues(""destination"", new Object[] {new ActiveMQQueue(""TEST""),"
2876,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMapMessageTest.java,52,,"        msg.setBoolean(""boolean"", true);"
2877,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMapMessageTest.java,53,,"        msg.setByte(""byte"", (byte) 1);"
2878,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMapMessageTest.java,54,,"        msg.setBytes(""bytes"", new byte[1]);"
2879,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMapMessageTest.java,55,,"        msg.setChar(""char"", 'a');"
2880,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMapMessageTest.java,56,,"        msg.setDouble(""double"", 1.5);"
2881,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMapMessageTest.java,57,,"        msg.setFloat(""float"", 1.5f);"
2882,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMapMessageTest.java,58,,"        msg.setInt(""int"", 1);"
2883,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMapMessageTest.java,59,,"        msg.setLong(""long"", 1);"
2884,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMapMessageTest.java,60,,"        msg.setObject(""object"", ""stringObj"");"
2885,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMapMessageTest.java,60,,"        msg.setObject(""object"", ""stringObj"");"
2886,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMapMessageTest.java,61,,"        msg.setShort(""short"", (short) 1);"
2887,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMapMessageTest.java,62,,"        msg.setString(""string"", ""string"");"
2888,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMapMessageTest.java,284,,"        msg.setBytes(""bytes2"", new byte[3], 0, 2);"
2889,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMapMessageTest.java,329,,"        mapMessage.setString(""String"", ""String"");"
2890,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMapMessageTest.java,379,,"            fail(""should throw exception"");"
2891,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMessageTest.java,115,,"            msg.setIntProperty(""test"", 1);"
2892,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMessageTest.java,289,,"        msg.setIntProperty(""JMSXDeliveryCount"", 1);"
2893,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMessageTest.java,330,,"        String name = ""floatProperty"";"
2894,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMessageTest.java,441,,"        String name = ""property"";"
2895,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQMessageTest.java,543,,"            fail(""Should have thrown exception"");"
2896,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQObjectMessageTest.java,92,,"        msg.setObject(""test"");"
2897,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQStreamMessageTest.java,55,,"                fail(""Should have thrown exception"");"
2898,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQTextMessageTest.java,93,,"            fail(""should be readable"");"
2899,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/ActiveMQTextMessageTest.java,99,,"        textMessage.setText(""test"");"
2900,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/MessageCompressionTest.java,37,,"    private static final String TEXT = ""The quick red fox jumped over the lazy brown dog. """
2901,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/MessageTest.java,43,,"        message.setOriginalDestination(new ActiveMQQueue(""queue""));"
2902,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/MessageTest.java,44,,"        message.setGroupID(""group"");"
2903,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/MessageTest.java,46,,"        message.setCorrelationId(""correlation"");"
2904,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/command/MessageTest.java,47,,"        message.setMessageId(new MessageId(""c1:1:1"", 1));"
2905,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/config/ConfigTest.java,106,,"            assertEquals(""Broker Config Error (brokerName)"", ""brokerJournaledJDBCConfigTest"", broker.getBrokerName());"
2906,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/config/ConfigTest.java,119,,"            LOG.info(""Success"");"
2907,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/config/ConfigTest.java,325,,"        File journalFile = new File(JOURNAL_ROOT + ""testMemoryConfig"");"
2908,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/console/command/AMQ3410Test.java,93,,"		tokens.add(""--factory"");"
2909,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/console/command/AMQ3411Test.java,97,,"		tokens.add(""--password"");"
2910,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/console/command/PurgeCommandTest.java,60,,"    protected static final String PROPERTY_VALUE = ""1:1"";"
2911,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/console/command/PurgeCommandTest.java,195,,"        int withCount = getMessageCount(withPropertyBrowser, ""withProperty "");"
2912,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/console/command/PurgeCommandTest.java,198,,"        int allCount = getMessageCount(allBrowser, ""allMessages "");"
2913,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/console/command/PurgeCommandTest.java,204,,"        assertEquals(""Expected withCount to be "" + expectedWithCount + "" was """
2914,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/console/command/PurgeCommandTest.java,210,,"        LOG.info(""withCount = "" + withCount + ""\n withoutCount = """
2915,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/console/command/PurgeCommandTest.java,211,,"                + withoutCount + ""\n allCount = "" + allCount + ""\n  = "" + ""\n"");"
2916,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/console/command/PurgeCommandTest.java,211,,"                + withoutCount + ""\n allCount = "" + allCount + ""\n  = "" + ""\n"");"
2917,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/console/command/PurgeCommandTest.java,263,,"            tokens.add(""--msgsel"");"
2918,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationFilterTest.java,30,,"		assertFalse(""Filter matched wrong destination type"", filter.matches(new ActiveMQTopic("">"")));"
2919,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationFilterTest.java,36,,"		assertFalse(""Filter matched wrong destination type"", filter.matches(new ActiveMQTopic(""A.B"")));"
2920,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationFilterTest.java,48,,"        assertTrue(""Filter did not match"", filter.matches(new ActiveMQQueue(""A.B.C"")));"
2921,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,34,,"    protected ActiveMQDestination d1 = createDestination(""TEST.D1"");"
2922,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,35,,"    protected ActiveMQDestination d2 = createDestination(""TEST.BAR.D2"");"
2923,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,36,,"    protected ActiveMQDestination d3 = createDestination(""TEST.BAR.D3"");"
2924,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,109,,"        assertMapValue(""TEST.*"", v1);"
2925,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,110,,"        assertMapValue(""*.D1"", v1);"
2926,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,111,,"        assertMapValue(""*.*"", v1);"
2927,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,121,,"        assertMapValue(""*.*.D3"", v3);"
2928,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,125,,"        assertMapValue(""TEST.BAR.*"", v2, v3);"
2929,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,136,,"        assertMapValue(""TEST.>"", allValues);"
2930,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,141,,"        assertMapValue(""FOO.>"", null);"
2931,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,150,,"        assertMapValue(""FOO"", null);"
2932,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,151,,"        assertMapValue(""TEST.FOO"", v1);"
2933,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,154,,"        assertMapValue(""TEST.FOO.FOO"", null);"
2934,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,155,,"        assertMapValue(""TEST.BAR.FOO"", v2);"
2935,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,161,,"        assertMapValue(""TEST.*.*"", v2, v3);"
2936,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,212,,"        assertMapValue(""TEST.FOO.BAR"", v1);"
2937,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationMapTest.java,322,,"        put(""FOO.A"", v1);"
2938,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/filter/DestinationPathTest.java,24,,"        assertParse(""FOO"", new String[]{""FOO""});"
2939,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/jmx/JmxAuditLogTest.java,63,,"      System.setProperty(""org.apache.activemq.audit"", ""all"");"
2940,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/jndi/ActiveMQSslInitialContextFactoryTest.java,69,,"        environment.put(""connection.ConnectionFactory.userPassword"", ""test"");"
2941,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/jndi/ActiveMQSslInitialContextFactoryTest.java,72,,"        environment.put(""connection.ConnectionFactory.keyStoreType"", ""JKS"");"
2942,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/jndi/InitialContextTest.java,39,,"        assertTrue(""Created context"", context != null);"
2943,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/memory/buffer/OrderBasedMemoryBufferTest.java,37,,"        assertEquals(""buffer size"", 40, buffer.getSize());"
2944,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/CompressionOverNetworkTest.java,87,,"        StringBuilder payload = new StringBuilder(""test-"");"
2945,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/CompressionOverNetworkTest.java,170,,"            test.writeString(""test string: "" + i);"
2946,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DemandForwardingBridgeFilterTest.java,48,,"        configuration.setExcludedDestinations(Arrays.asList(ActiveMQDestination.createDestination(""OTHER.>"","
2947,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DemandForwardingBridgeFilterTest.java,51,,"                ""TEST"", ActiveMQDestination.QUEUE_TYPE)));"
2948,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DemandForwardingBridgeFilterTest.java,63,,"                ActiveMQDestination.createDestination(""TEST.X1"", ActiveMQDestination.QUEUE_TYPE)));"
2949,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DemandForwardingBridgeFilterTest.java,65,,"                ""TEST.X2"", ActiveMQDestination.QUEUE_TYPE)));"
2950,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DemandForwardingBridgeFilterTest.java,70,,"        assertReceiveNoMessageOn(""OTHER.X1"", ActiveMQDestination.QUEUE_TYPE);"
2951,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DuplexNetworkMBeanTest.java,85,,"            assertEquals(0, countMbeans(broker, ""connectionName""));"
2952,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DuplexNetworkMBeanTest.java,91,,"                    assertEquals(1, countMbeans(networkedBroker, ""networkBridge"", 2000));"
2953,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DuplexNetworkMBeanTest.java,167,,"                producerBroker = sessionBroker.createProducer(sessionBroker.createTopic(""testTopic""));"
2954,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DurableFiveBrokerNetworkBridgeTest.java,68,,"        bridgeBrokers(""Broker_A_A"", ""Broker_B_B"");"
2955,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DurableFiveBrokerNetworkBridgeTest.java,68,,"        bridgeBrokers(""Broker_A_A"", ""Broker_B_B"");"
2956,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DurableFiveBrokerNetworkBridgeTest.java,69,,"        bridgeBrokers(""Broker_B_B"", ""Broker_C_C"");"
2957,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DurableFiveBrokerNetworkBridgeTest.java,70,,"        bridgeBrokers(""Broker_C_C"", ""Broker_D_D"");"
2958,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DurableFiveBrokerNetworkBridgeTest.java,71,,"        bridgeBrokers(""Broker_D_D"", ""Broker_E_E"");"
2959,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DurableFiveBrokerNetworkBridgeTest.java,76,,"        ActiveMQTopic dest = (ActiveMQTopic) createDestination(""TEST.FOO"", true);"
2960,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DurableFiveBrokerNetworkBridgeTest.java,83,,"        MessageConsumer clientA = ses.createDurableSubscriber(dest, ""subA"");"
2961,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DurableFiveBrokerNetworkBridgeTest.java,98,,"        MessageConsumer clientE = ses2.createDurableSubscriber(dest, ""subE"");"
2962,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DurableFiveBrokerNetworkBridgeTest.java,182,,"        MessageConsumer clientB = ses.createDurableSubscriber(dest, ""subB"");"
2963,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DurableFiveBrokerNetworkBridgeTest.java,195,,"        MessageConsumer clientC = ses2.createDurableSubscriber(dest, ""subC"");"
2964,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DurableSyncNetworkBridgeTest.java,187,,"            prod.send(session2.createTextMessage(""test""));"
2965,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DurableSyncNetworkBridgeTest.java,312,,"        session1.createDurableSubscriber(topic2, ""sub2"");"
2966,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DurableSyncNetworkBridgeTest.java,348,,"        session1.createDurableSubscriber(topic2, ""sub3"").close();"
2967,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/DurableSyncNetworkBridgeTest.java,366,,"                session1.createDurableSubscriber(new ActiveMQTopic(""include.test."" + i), subName + i + j).close();"
2968,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/FailoverStaticNetworkTest.java,147,,"        brokerA = createBroker(""tcp"", ""61617"", null);"
2969,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/FailoverStaticNetworkTest.java,147,,"        brokerA = createBroker(""tcp"", ""61617"", null);"
2970,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/FailoverStaticNetworkTest.java,149,,"        brokerB = createBroker(""tcp"", ""62617"", new String[]{""61617""});"
2971,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/FailoverStaticNetworkTest.java,168,,"        brokerB = createBroker(""tcp"", ""62617"", new String[]{""61617"", ""63617""});"
2972,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/FailoverStaticNetworkTest.java,226,,"        networkConnectorProps.put(""duplex"", ""true"");"
2973,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/FailoverStaticNetworkTest.java,226,,"        networkConnectorProps.put(""duplex"", ""true"");"
2974,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/MQTTNetworkOfBrokersFailoverTest.java,104,,"        remoteConn.subscribe(new Topic[]{new Topic(""foo/bar"", QoS.AT_LEAST_ONCE)});"
2975,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/NetworkConnectionsTest.java,44,,"        NetworkConnector nc = localBroker.addNetworkConnector(""static:("" + REMOTE_BROKER_TRANSPORT_URI + "")"");"
2976,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/NetworkConnectionsTest.java,45,,"        nc.setName(""NC1"");"
2977,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/NetworkRestartTest.java,49,,"        localProducer.send(localSession.createTextMessage(""before""));"
2978,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/NetworkRestartTest.java,71,,"        localProducer.send(localSession.createTextMessage(""after""));"
2979,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/NetworkTestSupport.java,57,,"        BrokerRegistry.getInstance().bind(""remotehost"", remoteBroker);"
2980,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/SimpleNetworkTest.java,83,,"            Message test = localSession.createTextMessage(""test-"" + i);"
2981,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/SimpleNetworkTest.java,253,,"            assertNotNull(""message count: "" + i, remoteConsumer.receive(2500));"
2982,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/VirtualConsumerDemandTest.java,121,,"        MessageConsumer advisoryConsumer = getVirtualDestinationAdvisoryConsumer(""VirtualTopic.>"");"
2983,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/VirtualConsumerDemandTest.java,123,,"        MessageProducer includedProducer = localSession.createProducer(new ActiveMQTopic(""VirtualTopic.include.test.bar""));"
2984,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/VirtualConsumerDemandTest.java,127,,"        Message test = localSession.createTextMessage(""test"");"
2985,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/VirtualConsumerDemandTest.java,136,,"        final DestinationStatistics remoteStats = remoteBroker.getDestination(new ActiveMQQueue(""Consumer.cons1.VirtualTopic.include.test.bar"")).getDestinationStatistics();"
2986,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/VirtualConsumerDemandTest.java,151,,"        assertEquals(""remote dest messages"", 1, remoteStats.getMessages().getCount());"
2987,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/VirtualConsumerDemandTest.java,277,,"                new ActiveMQQueue(""include.test.bar.bridge""));"
2988,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/VirtualConsumerDemandTest.java,368,,"                new ActiveMQQueue(""include.test.bar.bridge2""));"
2989,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/VirtualConsumerDemandTest.java,487,,"        assertEquals(""remote2 dest messages"", 1, remoteDestStatistics2.getMessages().getCount());"
2990,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/VirtualConsumerDemandTest.java,921,,"        assertEquals(""broker consumer count"", 0, destinationStatistics.getConsumers().getCount());"
2991,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/jms/QueueBridgeStandaloneReconnectTest.java,64,,"        sendMessageToForeignBroker(""to.foreign.broker"");"
2992,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/jms/QueueBridgeStandaloneReconnectTest.java,65,,"        sendMessageToLocalBroker(""to.local.broker"");"
2993,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/jms/QueueBridgeStandaloneReconnectTest.java,69,,"        assertTrue(""Should have received a Message."", Wait.waitFor(new Wait.Condition() {"
2994,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/jms/QueueOutboundBridgeReconnectTest.java,72,,"        sendMessage(""test123"");"
2995,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/jms/QueueOutboundBridgeReconnectTest.java,73,,"        sendMessage(""test456"");"
2996,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/jms/TopicBridgeStandaloneReconnectTest.java,67,,"        sendMessageToForeignBroker(""to.foreign.broker"");"
2997,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/jms/TopicBridgeStandaloneReconnectTest.java,68,,"        sendMessageToLocalBroker(""to.local.broker"");"
2998,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/jms/TopicBridgeStandaloneReconnectTest.java,70,,"        assertTrue(""Should have received a Message."", Wait.waitFor(new Wait.Condition() {"
2999,./TargetProjects/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/jms/TopicOutboundBridgeReconnectTest.java,76,,"        sendMessage(""test123"");"
