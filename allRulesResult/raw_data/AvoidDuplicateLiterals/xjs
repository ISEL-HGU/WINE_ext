252000,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ImportStatementsTest.java,138,,"      assertEquals(Arrays.asList(""Second""), selectText(cas, ""org.apache.uima.ruta.Type2""));"
252001,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/LoadResourceFromClassPathTest.java,62,,"    list.add(new TestFeature(fn1, """", ""uima.cas.String""));"
252002,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/LoadResourceFromClassPathTest.java,68,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 3, ""Peter"", ""Marshall"", ""Joern"");"
252003,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/LoadResourceFromClassPathTest.java,68,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 3, ""Peter"", ""Marshall"", ""Joern"");"
252004,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/LoadResourceFromClassPathTest.java,68,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 3, ""Peter"", ""Marshall"", ""Joern"");"
252005,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/LoadScriptFromClassPathTest.java,46,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 4, ""Peter"", ""Jochen"", ""Flo"", ""Georg"");"
252006,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/LoadScriptFromClassPathTest.java,46,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 4, ""Peter"", ""Jochen"", ""Flo"", ""Georg"");"
252007,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/LoadScriptFromClassPathTest.java,46,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 4, ""Peter"", ""Jochen"", ""Flo"", ""Georg"");"
252008,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/LoadScriptFromClassPathTest.java,47,,"    RutaTestUtils.assertAnnotationsEquals(cas, 2, 1, ""und"");"
252009,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/LoadScriptFromClassPathTest.java,52,,"    RutaTestUtils.assertAnnotationsEquals(cas, 6, 2, ""Peter, Jochen,"", ""Jochen,"");"
252010,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/LoadScriptFromClassPathTest.java,58,,"            ""Flo und"");"
252011,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/OutOfWindowTest.java,58,,"    complexTypes.put(typeName, ""uima.tcas.Annotation"");"
252012,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ReindexUpdateModeTest.java,41,,"    CAS cas = RutaTestUtils.getCAS(""This is 1 TEST."");"
252013,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ReindexUpdateModeTest.java,44,,"    Ruta.apply(cas, ""NUM{-> T1}; CAP{-> T2};"", params);"
252014,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ReindexUpdateModeTest.java,47,,"    RutaTestUtils.assertAnnotationsEquals(cas, 2, 1, ""TEST"");"
252015,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ReindexUpdateModeTest.java,58,,"    RutaTestUtils.assertAnnotationsEquals(cas, 3, 1, ""This"");"
252016,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ReindexUpdateModeTest.java,61,,"    Ruta.apply(cas, ""ANY{PARTOF(T1)->T11};ANY{PARTOF(T2)->T12};ANY{PARTOF(T3)->T13};"", params);"
252017,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ReindexUpdateModeTest.java,62,,"    Ruta.apply(cas, ""ANY{STARTSWITH(T1)->T21};ANY{STARTSWITH(T2)->T22};ANY{STARTSWITH(T3)->T23};"","
252018,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ReindexUpdateModeTest.java,64,,"    Ruta.apply(cas, ""ANY{ENDSWITH(T1)->T31};ANY{ENDSWITH(T2)->T32};ANY{ENDSWITH(T3)->T33};"","
252019,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ReindexUpdateModeTest.java,83,,"    Ruta.apply(cas, ""PERIOD{-> T4, T4}; SW{-> T5};"", params);"
252020,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ReindexUpdateModeTest.java,95,,"    Ruta.apply(cas, ""ANY{PARTOF(T4)->T14};ANY{PARTOF(T5)->T15};"", params);"
252021,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ReindexUpdateModeTest.java,96,,"    Ruta.apply(cas, ""ANY{STARTSWITH(T4)->T24};ANY{STARTSWITH(T5)->T25};"", params);"
252022,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ReindexUpdateModeTest.java,97,,"    Ruta.apply(cas, ""ANY{ENDSWITH(T4)->T34};ANY{ENDSWITH(T5)->T35};"", params);"
252023,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ReindexUpdateModeTest.java,112,,"    Ruta.apply(cas, ""t4:T4{-> UNMARK(t4)};"", params);"
252024,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ReindexUpdateModeTest.java,113,,"    Ruta.apply(cas, ""t5:T5{CONTAINS(T5,2,10) -> UNMARK(t5)};"", params);"
252025,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ReindexUpdateModeTest.java,115,,"    Ruta.apply(cas, ""ANY{PARTOF(T4)->T16};ANY{PARTOF(T5)->T17};"");"
252026,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ReindexUpdateModeTest.java,116,,"    Ruta.apply(cas, ""ANY{STARTSWITH(T4)->T26};ANY{STARTSWITH(T5)->T27};"", params);"
252027,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/ReindexUpdateModeTest.java,117,,"    Ruta.apply(cas, ""ANY{ENDSWITH(T4)->T36};ANY{ENDSWITH(T5)->T37};"", params);"
252028,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/RemoveDocumentAnnotationTest.java,31,,"    String document = ""some text"";"
252029,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/StrictImportTest.java,91,,"      cas.setDocumentText(""Word"");"
252030,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/TypeAliasTest.java,47,,"    cas.setDocumentText(""Peter"");"
252031,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/WSDictionaryTest.java,61,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 9, ""Peter Kluegl"", ""Marshall Schor"","
252032,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/WSDictionaryTest.java,61,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 9, ""Peter Kluegl"", ""Marshall Schor"","
252033,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/WSDictionaryTest.java,62,,"            ""Joern Kottmann"", ""PeterKluegl"", ""MarshallSchor"", ""JoernKottmann"", ""Peter<x>Kluegl"","
252034,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/action/AddTest.java,31,,"    String document = ""Some text."";"
252035,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/action/AssignActionTest.java,31,,"    String document = ""This is a test."";"
252036,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/action/CreateTest.java,52,,"    complexTypes.put(typeName, ""uima.tcas.Annotation"");"
252037,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/action/GatherTest.java,50,,"    complexTypes.put(typeName, ""uima.tcas.Annotation"");"
252038,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/action/ImplicitActionTest.java,102,,"    String document = ""This is a test."";"
252039,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/action/MacroActionTest.java,47,,"    String document = ""Test"";"
252040,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/action/SplitTest.java,46,,"    String document = ""Some text. More text , with 1 , and more. even more text."";"
252041,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/action/SplitTest.java,47,,"    String script = ""PERIOD #{-> T1} PERIOD;"";"
252042,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/action/SplitTest.java,48,,"    script += "" #{-> T1} PERIOD;"";"
252043,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/action/SplitTest.java,49,,"    script += ""T1{CONTAINS(NUM)-> CREATE(Complex, \""number\""= NUM)};"";"
252044,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/action/SplitTest.java,53,,"    String typeName = ""Complex"";"
252045,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/action/SplitTest.java,54,,"    typeMap.put(typeName, ""uima.tcas.Annotation"");"
252046,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/action/SplitTest.java,59,,"    String fn = ""number"";"
252047,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/action/Transfer2Test.java,61,,"    list.add(new TestFeature(fn1, """", ""uima.cas.String""));"
252048,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/action/UnmarkTest.java,51,,"    typeMap.put(""Complex"", ""uima.tcas.Annotation"");"
252049,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/block/ForEachBlockTest.java,119,,"    String script = ""NUM{-> T1};"";"
252050,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/block/ForEachBlockTest.java,193,,"    script += ""}\n"";"
252051,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/block/RutaScriptBlockTest.java,45,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 1, ""Some"");"
252052,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/condition/ContainsTest.java,38,,"            ""Testing the CONTAINS condition of Ruta"");"
252053,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/condition/FeatureTest.java,60,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 1, ""Testing FEATURE condition."");"
252054,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/condition/ImplicitCondition1Test.java,77,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 1, ""Marshall Schor"");"
252055,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/condition/ImplicitCondition1Test.java,78,,"    RutaTestUtils.assertAnnotationsEquals(cas, 2, 3, ""Peter Kluegl"", ""Joern Kottmann"","
252056,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/condition/MacroConditionTest.java,31,,"    String document = ""Test"";"
252057,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/condition/ParseTest.java,42,,"    RutaTestUtils.assertAnnotationsEquals(cas, 2, 2, ""2,1"", ""2.3"");"
252058,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/condition/ParseTest.java,93,,"    CAS cas = RutaTestUtils.getCAS(""test 5"", complexTypes, features);"
252059,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/descriptor/GenerateDescriptorTest.java,140,,"    TypeDescription simpleType = tsd.getType(""test.package.Anonymous.SimpleType"");"
252060,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/engine/HtmlConverterTest.java,66,,"    HtmlConverterTest.htmlWin = FileUtils.file2String(textFile, ""UTF-8"");"
252061,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/engine/HtmlConverterTest.java,97,,"    URL url = HtmlConverter.class.getClassLoader().getResource(""HtmlConverter.xml"");"
252062,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/engine/HtmlConverterTest.java,100,,"              .getResource(""org/apache/uima/ruta/engine/HtmlConverter.xml"");"
252063,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/engine/HtmlConverterTest.java,123,,"    assertEquals(String.format(""begin of annotation is %d, %d expected."","
252064,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/engine/HtmlConverterTest.java,191,,"    String expectedText = ""start of body\nnormal bold\nend of body"";"
252065,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/engine/ParamVarTest.java,35,,"    String document = ""Some text."";"
252066,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/engine/ParamVarTest.java,60,,"            new String[] { ""Some"", ""text"", ""Some"", ""0"", ""true"", SW.class.getName(), ""CW"" });"
252067,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/engine/ParamVarTest.java,60,,"            new String[] { ""Some"", ""text"", ""Some"", ""0"", ""true"", SW.class.getName(), ""CW"" });"
252068,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/engine/ResourcesFromDataPathTest.java,70,,"      RutaTestUtils.assertAnnotationsEquals(cas, 1, 3, ""1 0 0"", ""100"", ""2 0 0"");"
252069,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/engine/RutaTest.java,56,,"    tsDesc.addType(""uima.ruta.T1"", """", ""uima.tcas.Annotation"");"
252070,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/engine/RutaTest.java,64,,"    cas.setDocumentText(""Some document."");"
252071,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/engine/RutaTest.java,134,,"    String document = ""Some text."";"
252072,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/engine/TestRutaInferenceVisitor.java,36,,"    throw new NotImplementedException(""Not supported."");"
252073,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/engine/UimaFitAnalysisEngineWithManditoryParameterTest.java,38,,"    String document = ""Some text."";"
252074,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/engine/ViewWriterTest.java,68,,"    newView.setDocumentText(""This is a new view."");"
252075,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/NullExpressionTest.java,37,,"    String document = ""Some text."";"
252076,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/VariableInitialValueTest.java,32,,"    String document = ""This is a test."";"
252077,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationFeatureExpressionTest.java,43,,"    String document = ""Some text."";"
252078,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationFeatureExpressionTest.java,54,,"    String typeName1 = ""Struct"";"
252079,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationFeatureExpressionTest.java,55,,"    typeMap.put(typeName1, ""uima.tcas.Annotation"");"
252080,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationFeatureExpressionTest.java,63,,"    list.add(new TestFeature(fn1, """", ""uima.cas.FSArray""));"
252081,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationFeatureExpressionTest.java,72,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 2, ""Some"", ""text"");"
252082,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationFeatureExpressionTest.java,72,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 2, ""Some"", ""text"");"
252083,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationFeatureExpressionTest.java,229,,"    complexTypes.put(""Struct1"", ""uima.tcas.Annotation"");"
252084,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationLabelExpressionTest.java,53,,"    String document = ""Some text."";"
252085,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationLabelExpressionTest.java,57,,"    String typeName = ""Struct"";"
252086,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationLabelExpressionTest.java,58,,"    typeMap.put(typeName, ""uima.tcas.Annotation"");"
252087,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationLabelExpressionTest.java,80,,"    Assert.assertEquals(""text"", next.getCoveredText());"
252088,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationLabelExpressionTest.java,82,,"    Assert.assertNotNull(""Feature value is null!"", a);"
252089,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationLabelExpressionTest.java,83,,"    Assert.assertEquals(""Some"", a.getCoveredText());"
252090,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationLabelExpressionTest.java,105,,"    list.add(new TestFeature(""c"", """", ""uima.cas.FSArray""));"
252091,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationLabelExpressionTest.java,112,,"    RutaTestUtils.assertAnnotationsEquals(cas, 2, 1, ""Some text"");"
252092,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationLabelExpressionTest.java,193,,"    t = cas.getTypeSystem().getType(""Struct1"");"
252093,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationLabelExpressionTest.java,204,,"    t = cas.getTypeSystem().getType(""Struct2"");"
252094,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationLabelExpressionTest.java,215,,"    t = cas.getTypeSystem().getType(""Struct3"");"
252095,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationLabelExpressionTest.java,462,,"    Assert.assertEquals(""Annotation"", a.getType().getShortName());"
252096,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationLabelExpressionTest.java,730,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 3, ""1 a a"", ""1 a a"", ""1 a"");"
252097,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationLabelExpressionTest.java,731,,"    RutaTestUtils.assertAnnotationsEquals(cas, 2, 3, ""a 1"", ""a a 1"", ""a a 1"");"
252098,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationVariableExpressionTest.java,50,,"    String document = ""Some text."";"
252099,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationVariableExpressionTest.java,57,,"    String typeName = ""Struct"";"
252100,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationVariableExpressionTest.java,58,,"    typeMap.put(typeName, ""uima.tcas.Annotation"");"
252101,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationVariableExpressionTest.java,74,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 1, ""Some"");"
252102,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationVariableExpressionTest.java,83,,"    assertEquals(""text"", next.getCoveredText());"
252103,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/annotation/AnnotationVariableExpressionTest.java,85,,"    assertNotNull(""Feature value is null!"", a);"
252104,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/expression/resource/WordTableStringExpressionTest.java,60,,"    list.add(new TestFeature(fn1, """", ""uima.cas.String""));"
252105,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/resource/CSVTableTest.java,33,,"    CSVTable csvTable = new CSVTable(CSVTable.class.getResourceAsStream(""test_csvfile.csv""),"
252106,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/ComposedRuleElementTest.java,58,,"    RutaTestUtils.assertAnnotationsEquals(cas, 3, 1, ""B A"");"
252107,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/DynamicAnchoring1Test.java,42,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 4, ""Peter"", ""Jochen"", ""Flo"", ""Georg"");"
252108,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/DynamicAnchoring1Test.java,42,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 4, ""Peter"", ""Jochen"", ""Flo"", ""Georg"");"
252109,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/DynamicAnchoring1Test.java,42,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 4, ""Peter"", ""Jochen"", ""Flo"", ""Georg"");"
252110,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/DynamicAnchoring1Test.java,43,,"    RutaTestUtils.assertAnnotationsEquals(cas, 2, 1, ""und"");"
252111,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/DynamicAnchoring1Test.java,47,,"    RutaTestUtils.assertAnnotationsEquals(cas, 6, 2, ""Peter, Jochen,"", ""Jochen,"");"
252112,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/DynamicAnchoring1Test.java,51,,"    RutaTestUtils.assertAnnotationsEquals(cas, 10, 3, ""Peter, Jochen, Flo und"", ""Jochen, Flo und"", ""Flo und"");"
252113,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/LiteralStringMatchTest.java,42,,"    RutaTestUtils.assertAnnotationsEquals(cas, 6, 2, ""CW COMMA CW COMMA"", ""CW COMMA"");"
252114,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/LiteralStringMatchTest.java,47,,"            ""CW SW"");"
252115,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/LiteralStringMatchTest.java,92,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 7, ""and"", ""and"", ""and"", ""and"", ""and"");"
252116,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/OptionalComposedEndTest.java,33,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 3, ""20,20"", ""20"", ""20,20"");"
252117,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/RuleInference1Test.java,32,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 4, ""Peter"", ""Jochen"", ""Flo"", ""Georg"");"
252118,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/RuleInference1Test.java,32,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 4, ""Peter"", ""Jochen"", ""Flo"", ""Georg"");"
252119,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/RuleInference1Test.java,32,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 4, ""Peter"", ""Jochen"", ""Flo"", ""Georg"");"
252120,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/RuleInference1Test.java,33,,"    RutaTestUtils.assertAnnotationsEquals(cas, 2, 1, ""und"");"
252121,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/RuleInference1Test.java,38,,"    RutaTestUtils.assertAnnotationsEquals(cas, 6, 2, ""Peter, Jochen,"", ""Jochen,"");"
252122,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/RuleInference1Test.java,44,,"            ""Flo und"");"
252123,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/RutaAnnotationTypeMatcherTest.java,77,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 1, ""This"");"
252124,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/RutaAnnotationTypeMatcherTest.java,110,,"    complexTypes.put(""Struct1"", ""uima.tcas.Annotation"");"
252125,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/SidestepInComposedTest.java,31,,"    String document = ""15. Mai 2005"";"
252126,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/WildCard1Test.java,36,,"    RutaTestUtils.assertAnnotationsEquals(cas, 2, 1, ""The"");"
252127,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/WildCard2Test.java,100,,"            ""Some test. Some test."", ""Some test."");"
252128,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/WildCardInWindowTest.java,39,,"    RutaTestUtils.assertAnnotationsEquals(cas, 2, 2, ""1"", ""1 1 1"");"
252129,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/quantifier/Quantifier1Test.java,32,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 3, ""A B"", ""A B"", ""A"");"
252130,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/quantifier/Quantifier1Test.java,34,,"    RutaTestUtils.assertAnnotationsEquals(cas, 3, 3, ""A B"", ""A B B"", ""A"");"
252131,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/quantifier/Quantifier1Test.java,43,,"    RutaTestUtils.assertAnnotationsEquals(cas, 12, 2, ""A B C"", ""A C"");"
252132,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/quantifier/Quantifier1Test.java,43,,"    RutaTestUtils.assertAnnotationsEquals(cas, 12, 2, ""A B C"", ""A C"");"
252133,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/quantifier/Quantifier1Test.java,45,,"    RutaTestUtils.assertAnnotationsEquals(cas, 14, 3, ""A B C"", ""A B B C"", ""A C"");"
252134,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/rule/quantifier/QuantifierTest.java,36,,"    JCas jcas = RutaTestUtils.getCAS(""a b c d e."").getJCas();"
252135,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/seed/DefaultSeederTest.java,56,,"    assertEquals(""SPACE"", iterator.next().getType().getShortName());"
252136,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/seed/DefaultSeederTest.java,86,,"    assertEquals(""MARKUP"", iterator.next().getType().getShortName());"
252137,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/seed/DefaultSeederTest.java,101,,"            + ""<sec sec-type=\""methods\"">"" + ""<sec sectype=\""methods\"">"""
252138,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/seed/DefaultSeederTest.java,101,,"            + ""<sec sec-type=\""methods\"">"" + ""<sec sectype=\""methods\"">"""
252139,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/seed/DefaultSeederTest.java,158,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 5, ""Text"", ""text"", ""text"", ""text"", ""."");"
252140,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/seed/TextSeederTest.java,50,,"    RutaTestUtils.assertAnnotationsEquals(cas, 1, 15, ""Text"", ""text"", ""<"", ""!"", ""-"", ""-"", ""some"","
252141,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/verbalizer/ExpressionVerbalizerTest.java,105,,"    String var = ""anyVar"";"
252142,./TargetProjects/uima-ruta/ruta-core/src/test/java/org/apache/uima/ruta/verbalizer/ExpressionVerbalizerTest.java,237,,"    assertEquals(""abc.d"", v.verbalize(new GenericFeatureExpression("
252143,./TargetProjects/uima-ruta/ruta-ep-addons/src/main/java/org/apache/uima/ruta/cde/ui/ConstraintSelectComposite.java,341,,"    tc2.setText(""Weight"");"
252144,./TargetProjects/uima-ruta/ruta-ep-addons/src/main/java/org/apache/uima/ruta/cde/ui/ConstraintSelectComposite.java,480,,"        IMemento currentMemento = memento.createChild(""constraint"", ""SimpleRutaConstraint"");"
252145,./TargetProjects/uima-ruta/ruta-ep-addons/src/main/java/org/apache/uima/ruta/cde/ui/ConstraintSelectComposite.java,483,,"        currentMemento.createChild(""Data"", constraint.getData());"
252146,./TargetProjects/uima-ruta/ruta-ep-addons/src/main/java/org/apache/uima/ruta/cde/ui/ConstraintSelectComposite.java,484,,"        currentMemento.createChild(""Description"", constraint.getDescription());"
252147,./TargetProjects/uima-ruta/ruta-ep-addons/src/main/java/org/apache/uima/ruta/cde/ui/DocumentSelectComposite.java,182,,"    folderIcon = getImage(""folder"");"
252148,./TargetProjects/uima-ruta/ruta-ep-ide-ui/src/main/java/org/apache/uima/ruta/ide/validator/LanguageCheckerVisitor.java,604,,"        matchedType = ""uima.tcas.Annotation"";"
252149,./TargetProjects/uima-ruta/ruta-ep-ide-ui/src/main/java/org/apache/uima/ruta/ide/validator/LanguageCheckerVisitor.java,663,,"          String[] split = name.split(""[.]"");"
252150,./TargetProjects/uima-ruta/ruta-ep-ide-ui/src/main/java/org/apache/uima/ruta/ide/validator/RutaCheckerProblemFactory.java,158,,"            + ""\"" is not defined."";"
252151,./TargetProjects/uima-ruta/ruta-ep-ide-ui/src/main/java/org/apache/uima/ruta/ide/validator/RutaCheckerUtils.java,167,,"      String fileExtended = xmlFilePath.replaceAll(""[.]"", ""/"") + "".xml"";"
252152,./TargetProjects/uima-ruta/ruta-ep-ide-ui/src/main/java/org/apache/uima/ruta/ide/validator/XMLOutputVisitor.java,64,,"      sb.append("" value='"");"
252153,./TargetProjects/uima-ruta/ruta-ep-ide-ui/src/main/java/org/apache/uima/ruta/ide/validator/XMLOutputVisitor.java,107,,"      sb.append("" type='"");"
252154,./TargetProjects/uima-ruta/ruta-ep-ide/src/main/java/org/apache/uima/ruta/ide/core/RutaExtensionManager.java,156,,"          obj = configurationElement.createExecutableExtension(""class"");"
252155,./TargetProjects/uima-ruta/ruta-ep-ide/src/main/java/org/apache/uima/ruta/ide/core/RutaExtensionManager.java,303,,"          obj = configurationElement.createExecutableExtension(""engine"");"
252156,./TargetProjects/uima-ruta/ruta-ep-ide/src/main/java/org/apache/uima/ruta/ide/core/codeassist/RutaCompletionEngine.java,295,,"      Resource[] resources = getFilesInClasspath(complString, ""xml"");"
252157,./TargetProjects/uima-ruta/ruta-ep-ide/src/main/java/org/apache/uima/ruta/ide/core/packages/DLTKRutaHelper.java,237,,"          String path = el.getAttribute(""name""); //$NON-NLS-1$"
252158,./TargetProjects/uima-ruta/ruta-ep-ide/src/main/java/org/apache/uima/ruta/ide/core/parser/DLTKRutaErrorReporter.java,114,,"      String[] messages = { ""Syntax Error:"" + message, message };"
252159,./TargetProjects/uima-ruta/ruta-ep-ide/src/main/java/org/apache/uima/ruta/ide/parser/ast/StatementFactory.java,212,,"  @SuppressWarnings({ ""rawtypes"" })"
252160,./TargetProjects/uima-ruta/ruta-ep-textruler/src/main/java/org/apache/uima/ruta/textruler/learner/kep/KEPLearner.java,175,,"    sendStatusUpdateToDelegate(slotName + "" done"", TextRulerLearnerState.ML_RUNNING, true);"
252161,./TargetProjects/uima-ruta/ruta-ep-textruler/src/main/java/org/apache/uima/ruta/textruler/learner/kep/KEPLearner.java,906,,"                ""BLOCK("" + blockType.getShortName() + "") "" + blockType.getShortName() + ""{} { \n"");"
252162,./TargetProjects/uima-ruta/ruta-ep-textruler/src/main/java/org/apache/uima/ruta/textruler/learner/kep/KEPLearner.java,906,,"                ""BLOCK("" + blockType.getShortName() + "") "" + blockType.getShortName() + ""{} { \n"");"
252163,./TargetProjects/uima-ruta/ruta-ep-textruler/src/main/java/org/apache/uima/ruta/textruler/learner/kep/KEPLearner.java,917,,"        ruleStrings.append((blockType != null ? ""\t"" : """") + rule.getRuleString() + ""\t// """
252164,./TargetProjects/uima-ruta/ruta-ep-textruler/src/main/java/org/apache/uima/ruta/textruler/learner/lp2/BasicLP2.java,400,,"      sb.append(leftBoundary + ""{->UNMARK("" + leftBoundary + "")} "");"
252165,./TargetProjects/uima-ruta/ruta-ep-textruler/src/main/java/org/apache/uima/ruta/textruler/learner/trabal/TrabalLearner.java,333,,"                ""Comparing documents "" + (i + 1) + "" of "" + goldStandard.size() + "": example """
252166,./TargetProjects/uima-ruta/ruta-ep-textruler/src/main/java/org/apache/uima/ruta/textruler/learner/trabal/TrabalLearner.java,1656,,"        result += ""'"" + each.getType() + ""';'"""
252167,./TargetProjects/uima-ruta/ruta-ep-textruler/src/main/java/org/apache/uima/ruta/textruler/learner/whisk/generic/Whisk.java,855,,"    Type frameType = cas.getTypeSystem().getType(""org.apache.uima.ruta.type.RutaFrame"");"
252168,./TargetProjects/uima-ruta/ruta-ep-textruler/src/main/java/org/apache/uima/ruta/textruler/ui/TextRulerViewComposite.java,98,,"      } else if (type.equals(""learner"")) {"
252169,./TargetProjects/uima-ruta/ruta-ep-textruler/src/main/java/org/apache/uima/ruta/textruler/ui/TextRulerViewComposite.java,243,,"      Image folderIcon = getImage(""folder"");"
252170,./TargetProjects/uima-ruta/ruta-ep-textruler/src/main/java/org/apache/uima/ruta/textruler/ui/TextRulerViewComposite.java,788,,"    memento.createChild(""skipPreprocessing"", skipPreButton.getSelection() ? ""yes"" : ""no"");"
252171,./TargetProjects/uima-ruta/ruta-maven-plugin/src/it/conflictingShortName/src/test/java/org/apache/uima/ruta/maven/ConflictingShortNameTest.java,51,,"    cas.setDocumentText(""Test"");"
252172,./TargetProjects/uima-ruta/ruta-maven-plugin/src/main/java/org/apache/uima/ruta/maven/RutaGenerateDescriptorMojo.java,354,,"    String aeName = ""**/"" + scriptName + analysisEngineSuffix + "".xml"";"
252173,./TargetProjects/uima-ruta/ruta-maven-plugin/src/main/java/org/apache/uima/ruta/maven/RutaGenerateDescriptorMojo.java,447,,"          aLog.debug(""Classpath entry: "" + element);"
252174,./TargetProjects/uima-sandbox/CasViewerEclipsePlugin/uimaj-ep-casviewer-core/src/main/java/org/apache/uima/casviewer/core/internal/TypeTree.java,710,,"			        errorText += "" and Parent: "" + fromNode.getParent().getLabel();"
252175,./TargetProjects/uima-sandbox/CasViewerEclipsePlugin/uimaj-ep-casviewer-core/src/main/java/org/apache/uima/casviewer/core/internal/UFSIndex.java,248,,"                    aOut.println(""null"");"
252176,./TargetProjects/uima-sandbox/CasViewerEclipsePlugin/uimaj-ep-casviewer-core/src/main/java/org/apache/uima/casviewer/core/internal/style/TypesystemBaseStyle.java,99,,"      colorNameMap.put(""#000000"", ""black"");"
252177,./TargetProjects/uima-sandbox/CasViewerEclipsePlugin/uimaj-ep-casviewer-core/src/main/java/org/apache/uima/casviewer/core/internal/style/TypesystemBaseStyle.java,99,,"      colorNameMap.put(""#000000"", ""black"");"
252178,./TargetProjects/uima-sandbox/CasViewerEclipsePlugin/uimaj-ep-casviewer-core/src/main/java/org/apache/uima/casviewer/core/internal/style/TypesystemBaseStyle.java,102,,"      colorNameMap.put(""#ffffff"", ""white"");"
252179,./TargetProjects/uima-sandbox/CasViewerEclipsePlugin/uimaj-ep-casviewer-core/src/main/java/org/apache/uima/casviewer/core/internal/style/TypesystemBaseStyle.java,102,,"      colorNameMap.put(""#ffffff"", ""white"");"
252180,./TargetProjects/uima-sandbox/CasViewerEclipsePlugin/uimaj-ep-casviewer-core/src/main/java/org/apache/uima/casviewer/core/internal/style/TypesystemBaseStyle.java,113,,"      colorNameMap.put(""#00ffff"", ""aqua"");"
252181,./TargetProjects/uima-sandbox/CasViewerEclipsePlugin/uimaj-ep-casviewer-core/src/main/java/org/apache/uima/casviewer/ui/internal/annotations/FSContentProvider.java,289,,"                    aOut.println(""null"");"
252182,./TargetProjects/uima-sandbox/CasViewerEclipsePlugin/uimaj-ep-casviewer-core/src/main/java/org/apache/uima/casviewer/ui/internal/index/FSIndexContentProvider.java,343,,"                    aOut.println(""null"");"
252183,./TargetProjects/uima-sandbox/CasViewerEclipsePlugin/uimaj-ep-casviewer-core/src/main/java/org/apache/uima/casviewer/ui/internal/index/FSIndexLabelProvider.java,85,,"                return ((UFSIndex) obj).getLabel() + "" - "" + typeName"
252184,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/Acquisition.java,62,,"      jcasType.jcas.throwFeatMissing(""company_acquirer"", ""org.apache.uima.calaisType.relation.Acquisition"");"
252185,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/Acquisition_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.Acquisition"");"
252186,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/Alliance.java,63,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.Alliance"");"
252187,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/Alliance.java,63,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.Alliance"");"
252188,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/Alliance_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.Alliance"");"
252189,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/Alliance_Type.java,51,,"      jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.Alliance"");"
252190,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/AnalystEarningsEstimate.java,63,,"      jcasType.jcas.throwFeatMissing(""company_source"", ""org.apache.uima.calaisType.relation.AnalystEarningsEstimate"");"
252191,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/AnalystEarningsEstimate_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.AnalystEarningsEstimate"");"
252192,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/AnalystRecommendation.java,63,,"      jcasType.jcas.throwFeatMissing(""company_source"", ""org.apache.uima.calaisType.relation.AnalystRecommendation"");"
252193,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/AnalystRecommendation_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.AnalystRecommendation"");"
252194,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/Bankruptcy.java,62,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.Bankruptcy"");"
252195,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/Bankruptcy_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.Bankruptcy"");"
252196,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/BusinessRelation.java,63,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.BusinessRelation"");"
252197,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/BusinessRelation.java,63,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.BusinessRelation"");"
252198,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/BusinessRelation_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.BusinessRelation"");"
252199,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/BusinessRelation_Type.java,51,,"      jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.BusinessRelation"");"
252200,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/Buybacks.java,62,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.Buybacks"");"
252201,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/Buybacks_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.Buybacks"");"
252202,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyAffiliates.java,62,,"      jcasType.jcas.throwFeatMissing(""company_affiliate"", ""org.apache.uima.calaisType.relation.CompanyAffiliates"");"
252203,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyAffiliates_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.CompanyAffiliates"");"
252204,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyCustomer.java,62,,"      jcasType.jcas.throwFeatMissing(""company_provider"", ""org.apache.uima.calaisType.relation.CompanyCustomer"");"
252205,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyCustomer_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.CompanyCustomer"");"
252206,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyEarningsAnnouncement.java,62,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.CompanyEarningsAnnouncement"");"
252207,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyEarningsAnnouncement_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.CompanyEarningsAnnouncement"");"
252208,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyEarningsGuidance.java,62,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.CompanyEarningsGuidance"");"
252209,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyEarningsGuidance_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.CompanyEarningsGuidance"");"
252210,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyInvestment.java,62,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.CompanyInvestment"");"
252211,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyInvestment_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.CompanyInvestment"");"
252212,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyLegalIssues.java,63,,"      jcasType.jcas.throwFeatMissing(""company_sued"", ""org.apache.uima.calaisType.relation.CompanyLegalIssues"");"
252213,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyLegalIssues_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.CompanyLegalIssues"");"
252214,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyLocation.java,65,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.CompanyLocation"");"
252215,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyLocation_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.CompanyLocation"");"
252216,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyMeeting.java,65,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.CompanyMeeting"");"
252217,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyMeeting_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.CompanyMeeting"");"
252218,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyMeeting_Type.java,201,,"    casFeat_companymeetingtype = jcas.getRequiredFeatureDE(casType, ""companymeetingtype"", ""uima.cas.String"", featOkTst);"
252219,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyReorganization.java,62,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.CompanyReorganization"");"
252220,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyReorganization_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.CompanyReorganization"");"
252221,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyTechnology.java,62,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.CompanyTechnology"");"
252222,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CompanyTechnology_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.CompanyTechnology"");"
252223,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/ConferenceCall.java,62,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.ConferenceCall"");"
252224,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/ConferenceCall_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.ConferenceCall"");"
252225,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/ConferenceCall_Type.java,147,,"    casFeat_ccalltype = jcas.getRequiredFeatureDE(casType, ""ccalltype"", ""uima.cas.String"", featOkTst);"
252226,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CreditRating.java,63,,"      jcasType.jcas.throwFeatMissing(""company_source"", ""org.apache.uima.calaisType.relation.CreditRating"");"
252227,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/CreditRating_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.CreditRating"");"
252228,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/FamilyRelation.java,62,,"      jcasType.jcas.throwFeatMissing(""person"", ""org.apache.uima.calaisType.relation.FamilyRelation"");"
252229,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/FamilyRelation_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.FamilyRelation"");"
252230,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/IPO.java,62,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.IPO"");"
252231,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/IPO_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.IPO"");"
252232,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/JointVenture.java,63,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.JointVenture"");"
252233,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/JointVenture.java,63,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.JointVenture"");"
252234,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/JointVenture_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.JointVenture"");"
252235,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/JointVenture_Type.java,51,,"      jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.JointVenture"");"
252236,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/ManagementChange.java,64,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.ManagementChange"");"
252237,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/ManagementChange_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.ManagementChange"");"
252238,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/Merger.java,63,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.Merger"");"
252239,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/Merger.java,63,,"      jcasType.jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.Merger"");"
252240,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/Merger_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.Merger"");"
252241,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/Merger_Type.java,51,,"      jcas.throwFeatMissing(""company"", ""org.apache.uima.calaisType.relation.Merger"");"
252242,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/PersonEducation.java,62,,"      jcasType.jcas.throwFeatMissing(""person"", ""org.apache.uima.calaisType.relation.PersonEducation"");"
252243,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/PersonEducation_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.PersonEducation"");"
252244,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/PersonPolitical.java,65,,"      jcasType.jcas.throwFeatMissing(""person"", ""org.apache.uima.calaisType.relation.PersonPolitical"");"
252245,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/PersonPoliticalPast.java,65,,"      jcasType.jcas.throwFeatMissing(""person"", ""org.apache.uima.calaisType.relation.PersonPoliticalPast"");"
252246,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/PersonPoliticalPast_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.PersonPoliticalPast"");"
252247,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/PersonPolitical_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.PersonPolitical"");"
252248,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/PersonProfessional.java,64,,"      jcasType.jcas.throwFeatMissing(""person"", ""org.apache.uima.calaisType.relation.PersonProfessional"");"
252249,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/PersonProfessionalPast.java,64,,"      jcasType.jcas.throwFeatMissing(""person"", ""org.apache.uima.calaisType.relation.PersonProfessionalPast"");"
252250,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/PersonProfessionalPast_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.PersonProfessionalPast"");"
252251,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/PersonProfessional_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.PersonProfessional"");"
252252,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/Quotation.java,62,,"      jcasType.jcas.throwFeatMissing(""person"", ""org.apache.uima.calaisType.relation.Quotation"");"
252253,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/calaisType/relation/Quotation_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.calaisType.relation.Quotation"");"
252254,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/examples/SourceDocumentInformation.java,69,,"      jcasType.jcas.throwFeatMissing(""uri"", ""org.apache.uima.examples.SourceDocumentInformation"");"
252255,./TargetProjects/uima-sandbox/OpenCalaisAnnotatorGroovy/src/main/java/org/apache/uima/examples/SourceDocumentInformation_Type.java,42,,"  public final static boolean featOkTst = JCasRegistry.getFeatOkTst(""org.apache.uima.examples.SourceDocumentInformation"");"
252256,./TargetProjects/uima-sandbox/uimaj-ep-cev/src/main/java/org/apache/uima/cev/data/StyleMapReader.java,50,,"    COLOR_NAME_MAP.put(""#000000"", ""black"");"
252257,./TargetProjects/uima-sandbox/uimaj-ep-cev/src/main/java/org/apache/uima/cev/data/StyleMapReader.java,50,,"    COLOR_NAME_MAP.put(""#000000"", ""black"");"
252258,./TargetProjects/uima-sandbox/uimaj-ep-cev/src/main/java/org/apache/uima/cev/data/StyleMapReader.java,53,,"    COLOR_NAME_MAP.put(""#ffffff"", ""white"");"
252259,./TargetProjects/uima-sandbox/uimaj-ep-cev/src/main/java/org/apache/uima/cev/data/StyleMapReader.java,53,,"    COLOR_NAME_MAP.put(""#ffffff"", ""white"");"
252260,./TargetProjects/uima-sandbox/uimaj-ep-cev/src/main/java/org/apache/uima/cev/data/StyleMapReader.java,64,,"    COLOR_NAME_MAP.put(""#00ffff"", ""aqua"");"
252261,./TargetProjects/uima-uimafit/uimafit-core/src/main/java/org/apache/uima/fit/util/CasUtil.java,79,,"  @SuppressWarnings(""unchecked"")"
252262,./TargetProjects/uima-uimafit/uimafit-core/src/main/java/org/apache/uima/fit/util/CasUtil.java,446,,"      assert (a.getBegin() >= left.getEnd()) : ""Illegal begin "" + a.getBegin() + "" in ["" + begin"
252263,./TargetProjects/uima-uimafit/uimafit-core/src/main/java/org/apache/uima/fit/util/FSUtil.java,336,,"          throw new IllegalArgumentException(""Unable to coerce value of feature ["" + aFeature.getName()"
252264,./TargetProjects/uima-uimafit/uimafit-core/src/main/java/org/apache/uima/fit/util/FSUtil.java,337,,"                  + ""] with type ["" + aFeature.getRange().getName() + ""] into ["" + aClazz.getName() + ""]"");"
252265,./TargetProjects/uima-uimafit/uimafit-core/src/main/java/org/apache/uima/fit/util/FSUtil.java,337,,"                  + ""] with type ["" + aFeature.getRange().getName() + ""] into ["" + aClazz.getName() + ""]"");"
252266,./TargetProjects/uima-uimafit/uimafit-core/src/main/java/org/apache/uima/fit/util/JCasUtil.java,111,,"  @SuppressWarnings(""unchecked"")"
252267,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/component/ViewCreatorAnnotatorTest.java,55,,"            typeSystemDescription, ViewCreatorAnnotator.PARAM_VIEW_NAME, ""myView"");"
252268,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/component/ViewCreatorAnnotatorTest.java,72,,"    assertEquals(""some"", JCasUtil.selectByIndex(jCas, Token.class, 0).getCoveredText());"
252269,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/component/initialize/ConfigurationParameterInitializerTest.java,86,,"            ""stringValue"", ""test"","
252270,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/component/initialize/ConfigurationParameterInitializerTest.java,112,,"            ""stringValues"", new String[] { ""test1"", ""test2"", ""test3"" },"
252271,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/component/initialize/ConfigurationParameterInitializerTest.java,112,,"            ""stringValues"", new String[] { ""test1"", ""test2"", ""test3"" },"
252272,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/component/initialize/ConfigurationParameterInitializerTest.java,112,,"            ""stringValues"", new String[] { ""test1"", ""test2"", ""test3"" },"
252273,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/component/initialize/ConfigurationParameterInitializerTest.java,246,,"            ""uri"", URI.create(""file:test""),"
252274,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/component/initialize/ConfigurationParameterInitializerTest.java,248,,"            ""uriArray"", new URI[] { URI.create(""file:test1""), URI.create(""file:test2""), "
252275,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/component/initialize/ConfigurationParameterInitializerTest.java,248,,"            ""uriArray"", new URI[] { URI.create(""file:test1""), URI.create(""file:test2""), "
252276,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/component/initialize/ConfigurationParameterInitializerTest.java,249,,"                    URI.create(""file:test3"") },"
252277,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/component/initialize/ConfigurationParameterInitializerTest.java,453,,"            ""files9"", new File[] { new File(""test/data/file""), new File(""test/data/file2"") },"
252278,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/component/initialize/ConfigurationParameterInitializerTest.java,453,,"            ""files9"", new File[] { new File(""test/data/file""), new File(""test/data/file2"") },"
252279,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/component/initialize/ConfigurationParameterInitializerTest.java,565,,"                ""C:\\Documents and Settings\\Philip\\My Documents\\"", ""/usr/local/bin"" }, ""files4"","
252280,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/component/initialize/ConfigurationParameterInitializerTest.java,565,,"                ""C:\\Documents and Settings\\Philip\\My Documents\\"", ""/usr/local/bin"" }, ""files4"","
252281,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/component/initialize/ConfigurationParameterInitializerTest.java,566,,"            new String[0], ""files5"", new String[] { ""foos/bars"" }, ""files6"", new String[] {"
252282,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/component/initialize/ConfigurationParameterInitializerTest.java,649,,"    assertEquals(""green"", ae.color);"
252283,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/AggregateBuilderTest.java,53,,"    tokenBuilder.buildTokens(jCas, ""Anyone up for a game of Foosball?"");"
252284,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/AggregateBuilderTest.java,164,,"    tokenBuilder.buildTokens(jCas, ""An honest man can never surrender an honest doubt."");"
252285,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/AggregateWithReaderTest.java,52,,"    reader.getMetaData().setName(""reader"");"
252286,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/AggregateWithReaderTest.java,56,,"    analyzer.getMetaData().setName(""analyzer"");"
252287,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/AnalysisEngineFactoryExternalResourceTest.java,239,,"            createSharedResourceDescription(""http://dumm.my"", TestSharedResourceObject.class,"
252288,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/AnalysisEngineFactoryTest.java,148,,"    tokenBuilder.buildTokens(jCas, ""Anyone up for a game of Foosball?"");"
252289,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/AnalysisEngineFactoryTest.java,185,,"        SofaMappingFactory.createSofaMapping(""ann2"", ViewNames.SORTED_VIEW, ""B""),"
252290,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/AnalysisEngineFactoryTest.java,308,,"    assertNotNull(""Parameter ["" + parameterName + ""] does not exist!"", cp);"
252291,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/AnalysisEngineFactoryTest.java,354,,"            ""Multiple deployment should be allowed on "" + desc1.getAnnotatorImplementationName(),"
252292,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/ConfigurationParameterFactoryTest.java,122,,"  @SuppressWarnings(""unused"")"
252293,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/ConfigurationParameterFactoryTest.java,224,,"            new Parameter_impl(""legacyKey"", ""legacyValue""), //"
252294,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/ConfigurationParameterFactoryTest.java,225,,"            new Parameter_impl(""key"", ""false""));"
252295,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/FsIndexFactoryTest.java,58,,"    assertEquals(""begin"", key11.getFeatureName());"
252296,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/ResourceMetaDataFactoryTest.java,36,,"    assertEquals(""dummy"", meta.getName());"
252297,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/ResourceMetaDataFactoryTest.java,37,,"    assertEquals(""1.0"", meta.getVersion());"
252298,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/testAes/ParameterizedAE.java,98,,"  @ConfigurationParameter(name = PARAM_BOOLEAN_1, mandatory = true, defaultValue = ""false"")"
252299,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/testAes/ParameterizedAE.java,113,,"  @ConfigurationParameter(name = PARAM_BOOLEAN_3, mandatory = true, defaultValue = { ""true"","
252300,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/factory/testAes/ParameterizedAE.java,225,,"  @ConfigurationParameter(name = ""file1"", mandatory = true, defaultValue = ""test/data/file"")"
252301,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/testing/factory/TokenBuilderTest.java,50,,"            + ""We could fly it to the moon for repairs."";"
252302,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/CasUtilTest.java,87,,"    String text = ""Rot wood cheeses dew?"";"
252303,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/CasUtilTest.java,99,,"    assertEquals(""uima.tcas.Annotation"", getType(cas, AnnotationFS.class).getName());"
252304,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/CasUtilTest.java,135,,"    assertEquals(""dew?"", selectByIndex(cas, type, -1).getCoveredText());"
252305,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/CasUtilTest.java,137,,"    assertEquals(""Rot"", selectByIndex(cas, type, 0).getCoveredText());"
252306,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/CasUtilTest.java,143,,"  @SuppressWarnings({ ""unchecked"", ""rawtypes"" })"
252307,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/CasUtilTest.java,143,,"  @SuppressWarnings({ ""unchecked"", ""rawtypes"" })"
252308,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/CasUtilTest.java,151,,"    assertEquals(asList(""Rot"", ""wood"", ""cheeses"", ""dew?""),"
252309,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/CasUtilTest.java,151,,"    assertEquals(asList(""Rot"", ""wood"", ""cheeses"", ""dew?""),"
252310,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/DisableLoggingTest.java,63,,"    Logger.getLogger(""foo"").info(""Hello!"");"
252311,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/FSUtilTest.java,85,,"    type.addFeature(""TopValue"", """", CAS.TYPE_NAME_TOP);"
252312,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/FSUtilTest.java,86,,"    type.addFeature(""AnnotationValue"", """", CAS.TYPE_NAME_ANNOTATION);"
252313,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/FSUtilTest.java,88,,"    type.addFeature(""AnnotationArrayValue"", """", CAS.TYPE_NAME_FS_ARRAY, CAS.TYPE_NAME_ANNOTATION, false);"
252314,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/FSUtilTest.java,90,,"    type.addFeature(""AnnotationListValue"", """", CAS.TYPE_NAME_FS_LIST, CAS.TYPE_NAME_ANNOTATION, false);"
252315,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/FSUtilTest.java,103,,"    setFeature(fs, ""BooleanValue"", true);"
252316,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/FSUtilTest.java,108,,"    setFeature(fs, ""ByteValue"", (byte) 1);"
252317,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/FSUtilTest.java,113,,"    setFeature(fs, ""DoubleValue"", 1d);"
252318,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/FSUtilTest.java,118,,"    setFeature(fs, ""FloatValue"", 1f);"
252319,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/FSUtilTest.java,123,,"    setFeature(fs, ""IntegerValue"", 1);"
252320,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/FSUtilTest.java,128,,"    setFeature(fs, ""LongValue"", 1l);"
252321,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/FSUtilTest.java,133,,"    setFeature(fs, ""ShortValue"", (short) 1);"
252322,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/FSUtilTest.java,138,,"    setFeature(fs, ""StringValue"", ""set"");"
252323,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/FSUtilTest.java,169,,"    setFeature(fs, ""BooleanArrayValue"", (boolean[]) null);"
252324,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/FSUtilTest.java,208,,"    setFeature(fs, ""StringArrayValue"", new String[] { ""one"", ""two"" });"
252325,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/FSUtilTest.java,208,,"    setFeature(fs, ""StringArrayValue"", new String[] { ""one"", ""two"" });"
252326,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/JCasUtilTest.java,516,,"    String text = ""Rot wood cheeses dew?"";"
252327,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/JCasUtilTest.java,611,,"    String text = ""one two three"";"
252328,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/JCasUtilTest.java,801,,"    this.jCas.setDocumentText(""A B C D E"");"
252329,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/JCasUtilTest.java,969,,"    assertNull(getView(jcas, ""view1"", null));"
252330,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/JCasUtilv3Test.java,330,,"    String text = ""Rot wood cheeses dew?"";"
252331,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/JCasUtilv3Test.java,439,,"    String text = ""one two three"";"
252332,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/JCasUtilv3Test.java,652,,"    this.jCas.setDocumentText(""A B C D E"");"
252333,./TargetProjects/uima-uimafit/uimafit-core/src/test/java/org/apache/uima/fit/util/JCasUtilv3Test.java,799,,"    assertNull(getView(jcas, ""view1"", null));"
252334,./TargetProjects/uima-uimafit/uimafit-cpe/src/test/java/org/apache/uima/fit/cpe/ExternalResourceFactoryTest.java,77,,"  @SuppressWarnings(""javadoc"")"
252335,./TargetProjects/uima-uimafit/uimafit-maven-plugin/src/main/java/org/apache/uima/fit/maven/EnhanceMojo.java,90,,"  @Parameter(defaultValue = ""false"", required = true)"
252336,./TargetProjects/unomi/common/src/test/java/org/apache/unomi/common/DataTableTest.java,28,,"        dataTable.addRow(""Row1"", 1, 2, 1);"
252337,./TargetProjects/unomi/common/src/test/java/org/apache/unomi/common/DataTableTest.java,29,,"        dataTable.addRow(""Row2"", 3, 2, 2);"
252338,./TargetProjects/unomi/common/src/test/java/org/apache/unomi/common/DataTableTest.java,30,,"        dataTable.addRow(""Row3"", 2, 1, 1);"
252339,./TargetProjects/unomi/extensions/geonames/rest/src/main/java/org/apache/unomi/geonames/rest/GeonamesEndPoint.java,65,,"    public List<GeonameEntry> reverseGeoCode(@PathParam(""latlon"") String latlon, @HeaderParam(""Accept-Language"") String language) {"
252340,./TargetProjects/unomi/extensions/geonames/services/src/main/java/org/apache/unomi/geonames/services/GeonamesServiceImpl.java,187,,"        andCondition.setConditionType(definitionsService.getConditionType(""booleanCondition""));"
252341,./TargetProjects/unomi/extensions/geonames/services/src/main/java/org/apache/unomi/geonames/services/GeonamesServiceImpl.java,188,,"        andCondition.setParameter(""operator"", ""and"");"
252342,./TargetProjects/unomi/extensions/geonames/services/src/main/java/org/apache/unomi/geonames/services/GeonamesServiceImpl.java,188,,"        andCondition.setParameter(""operator"", ""and"");"
252343,./TargetProjects/unomi/extensions/geonames/services/src/main/java/org/apache/unomi/geonames/services/GeonamesServiceImpl.java,189,,"        andCondition.setParameter(""subConditions"", l);"
252344,./TargetProjects/unomi/extensions/geonames/services/src/main/java/org/apache/unomi/geonames/services/GeonamesServiceImpl.java,193,,"        featureCodeCondition.setParameter(""propertyName"", ""featureCode"");"
252345,./TargetProjects/unomi/extensions/geonames/services/src/main/java/org/apache/unomi/geonames/services/GeonamesServiceImpl.java,200,,"            PartialList<GeonameEntry> adm1 = buildHierarchy(andCondition, featureCodeCondition, ""admin1Code"", entry.getAdmin1Code(), ADM1_FEATURE_CODES, 0, 1);"
252346,./TargetProjects/unomi/extensions/geonames/services/src/main/java/org/apache/unomi/geonames/services/GeonamesServiceImpl.java,222,,"        featureCodeCondition.setParameter(""propertyValues"", featuresCode);"
252347,./TargetProjects/unomi/extensions/geonames/services/src/main/java/org/apache/unomi/geonames/services/GeonamesServiceImpl.java,225,,"        Condition condition = getPropertyCondition(featurePropertyName, ""propertyValue"", featureValue, ""equals"");"
252348,./TargetProjects/unomi/extensions/geonames/services/src/main/java/org/apache/unomi/geonames/services/GeonamesServiceImpl.java,225,,"        Condition condition = getPropertyCondition(featurePropertyName, ""propertyValue"", featureValue, ""equals"");"
252349,./TargetProjects/unomi/extensions/privacy-extension/rest/src/main/java/org/apache/unomi/privacy/rest/PrivacyServiceEndPoint.java,62,,"    public Response deleteProfileData(@PathParam(""profileId"") String profileId, @QueryParam(""withData"") @DefaultValue(""false"") boolean withData,"
252350,./TargetProjects/unomi/extensions/salesforce-connector/services/src/main/java/org/apache/unomi/sfdc/services/internal/SFDCServiceImpl.java,181,,"                logger.debug(""Response received from Salesforce: {}"", queryResponse);"
252351,./TargetProjects/unomi/extensions/salesforce-connector/services/src/main/java/org/apache/unomi/sfdc/services/internal/SFDCServiceImpl.java,569,,"            logger.error(""Error executing query {}"", query, e);"
252352,./TargetProjects/unomi/extensions/salesforce-connector/services/src/main/java/org/apache/unomi/sfdc/services/internal/SFDCServiceImpl.java,603,,"            logger.error(""Error retrieving Salesforce API Limits"", e);"
252353,./TargetProjects/unomi/extensions/salesforce-connector/services/src/main/java/org/apache/unomi/sfdc/services/internal/SFDCServiceImpl.java,638,,"                exchange.addRequestHeader(""Authorization"", ""OAuth "" + sfdcSession.getSessionId());"
252354,./TargetProjects/unomi/extensions/salesforce-connector/services/src/test/java/org/apache/unomi/sfdc/services/internal/SFDCServiceImplTest.java,56,,"        sfdcConfiguration.setSfdcLoginEndpoint(properties.getProperty(""sfdc.login.endpoint""));"
252355,./TargetProjects/unomi/extensions/salesforce-connector/services/src/test/java/org/apache/unomi/sfdc/services/internal/SFDCServiceImplTest.java,66,,"        if (System.getProperty(""sfdcProperties"") != null) {"
252356,./TargetProjects/unomi/extensions/unomi-mailchimp/services/src/main/java/org/apache/unomi/mailchimp/services/internal/MailChimpServiceImpl.java,148,,"        JsonNode response = HttpUtils.executePostRequest(httpClient, getBaseUrl() + ""/lists/"" + listIdentifier + ""/members"", getHeaders(), userData.toString());"
252357,./TargetProjects/unomi/extensions/unomi-mailchimp/services/src/main/java/org/apache/unomi/mailchimp/services/internal/MailChimpServiceImpl.java,174,,"        JsonNode response = HttpUtils.executeDeleteRequest(httpClient, getBaseUrl() + ""/lists/"" + listIdentifier + ""/members/"" + currentMember.get(ID).asText(), getHeaders());"
252358,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/condition/factories/EventConditionFactory.java,63,,"            rootSubConditions.add(datePropertyCondition(""timeStamp"", ""equals"", filterInput.getCdp_timestamp_equals()));"
252359,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/condition/factories/EventConditionFactory.java,139,,"            final List<Map<String, Object>> listFilterInputAsMap = (List<Map<String, Object>>) filterInputAsMap.get(""and"");"
252360,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/condition/factories/EventConditionFactory.java,202,,"            subConditions.add(datePropertyCondition(""properties.lastUpdate"", ""equals"", eventFilterInput.getLastUpdate_equals()));"
252361,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/condition/factories/EventConditionFactory.java,222,,"            subConditions.add(datePropertyCondition(""properties.expiration"", ""equals"", eventFilterInput.getExpiration_equals()));"
252362,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/condition/factories/ProfileConditionFactory.java,78,,"            rootSubConditions.add(booleanCondition(""and"", filterAndSubConditions));"
252363,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/condition/factories/ProfileConditionFactory.java,91,,"    @SuppressWarnings(""unchecked"")"
252364,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/condition/factories/TopicConditionFactory.java,63,,"        if (filterInputAsMap.get(""and"") != null) {"
252365,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/condition/parsers/SegmentProfileEventsConditionParser.java,57,,"    @SuppressWarnings(""unchecked"")"
252366,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/condition/parsers/SegmentProfileEventsConditionParser.java,61,,"        ((List<Condition>) condition.getParameter(""subConditions"")).forEach(subCondition -> {"
252367,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/condition/parsers/SegmentProfileEventsConditionParser.java,102,,"                            && subConditions.stream().anyMatch(c -> c.getParameter(""propertyName"") != null"
252368,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/condition/parsers/SegmentProfileEventsConditionParser.java,126,,"            fieldsMap.put(fieldAsTuple.get(""fieldName"").toString(), fieldAsTuple.get(""fieldValue""));"
252369,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/condition/parsers/SegmentProfilePropertiesConditionParser.java,91,,"        final String propertyName = condition.getParameter(""propertyName"").toString().replaceAll(""properties."", """");"
252370,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/condition/parsers/SegmentProfilePropertiesConditionParser.java,91,,"        final String propertyName = condition.getParameter(""propertyName"").toString().replaceAll(""properties."", """");"
252371,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/schema/GraphQLSchemaProvider.java,267,,"                final String typeName = UnomiToGraphQLConverter.convertEventType(unomiEventType.getType()) + ""Input"";"
252372,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/schema/GraphQLSchemaProvider.java,341,,"            if (""set"".equals(propertyType.getValueTypeId())) {"
252373,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/schema/PropertyFilterUtils.java,55,,"                    .name(propertyName + ""_equals"")"
252374,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/schema/PropertyFilterUtils.java,59,,"                    .name(propertyName + ""_lt"")"
252375,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/schema/PropertyFilterUtils.java,63,,"                    .name(propertyName + ""_lte"")"
252376,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/schema/PropertyFilterUtils.java,67,,"                    .name(propertyName + ""_gt"")"
252377,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/schema/PropertyFilterUtils.java,71,,"                    .name(propertyName + ""_gte"")"
252378,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/types/output/CDPMutation.java,89,,"            final @GraphQLNonNull @GraphQLName(""profileID"") CDPProfileIDInput profileIDInput,"
252379,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/types/output/CDPQuery.java,63,,"            final @GraphQLName(""filter"") CDPProfileFilterInput filter,"
252380,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/types/output/CDPQuery.java,64,,"            final @GraphQLName(""orderBy"") List<CDPOrderByInput> orderBy,"
252381,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/types/output/CDPQuery.java,65,,"            final @GraphQLName(""first"") Integer first,"
252382,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/types/output/CDPQuery.java,66,,"            final @GraphQLName(""after"") String after,"
252383,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/types/output/CDPQuery.java,67,,"            final @GraphQLName(""last"") Integer last,"
252384,./TargetProjects/unomi/graphql/cxs-impl/src/main/java/org/apache/unomi/graphql/types/output/CDPQuery.java,68,,"            final @GraphQLName(""before"") String before,"
252385,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/BaseIT.java,208,,"                    new VMOption(""--add-opens""),"
252386,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/BasicIT.java,101,,"        request.setHeader(""Content-Type"", ""application/json"");"
252387,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/BasicIT.java,137,,"        HttpPost request = new HttpPost(URL + ""/cxs/context.json"");"
252388,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/BasicIT.java,180,,"        requestLoginVisitor1.addHeader(""Cookie"", requestResponsePageView1.getCookieHeaderValue());"
252389,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/BasicIT.java,185,,"        Assert.assertEquals(""Context profile id should be the same"", profileIdVisitor1,"
252390,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ConditionBuilder.java,93,,"            return op(""equals"").stringValue(value);"
252391,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ConditionBuilder.java,197,,"            return op(""notEquals"").stringValue(value);"
252392,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ConditionBuilder.java,213,,"            return op(""notIn"").stringValues(values);"
252393,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ConditionEvaluatorIT.java,70,,"        profile.setProperty(""gender"", ""female"");"
252394,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ConditionEvaluatorIT.java,80,,"        assertTrue(eval(builder.and(builder.profileProperty(""properties.gender"").equalTo(""female""),"
252395,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ConditionEvaluatorIT.java,81,,"                builder.profileProperty(""properties.age"").equalTo(30)).build()));"
252396,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ConditionEvaluatorIT.java,82,,"        assertFalse(eval(builder.and(builder.profileProperty(""properties.gender"").equalTo(""male""),"
252397,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ConditionEvaluatorIT.java,102,,"        assertTrue(eval(builder.profileProperty(""properties.lastVisit"").equalTo(lastVisit).build()));"
252398,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ConditionEvaluatorIT.java,162,,"        assertTrue(eval(builder.property(""profileSegmentCondition"", ""segments"").parameter(""matchType"", ""in"")"
252399,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ConditionEvaluatorIT.java,162,,"        assertTrue(eval(builder.property(""profileSegmentCondition"", ""segments"").parameter(""matchType"", ""in"")"
252400,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ConditionEvaluatorIT.java,162,,"        assertTrue(eval(builder.property(""profileSegmentCondition"", ""segments"").parameter(""matchType"", ""in"")"
252401,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ConditionEvaluatorIT.java,163,,"                .parameter(""segments"", ""s10"", ""s20"", ""s2"").build()));"
252402,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ConditionEvaluatorIT.java,163,,"                .parameter(""segments"", ""s10"", ""s20"", ""s2"").build()));"
252403,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ContextServletIT.java,107,,"        String profileId = ""test-profile-id"";"
252404,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ContextServletIT.java,158,,"        String eventId = ""test-event-id-"" + System.currentTimeMillis();"
252405,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ContextServletIT.java,160,,"        String sessionId = ""test-session-id"";"
252406,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ContextServletIT.java,161,,"        String scope = ""test-scope"";"
252407,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ContextServletIT.java,181,,"        request.setEntity(new StringEntity(objectMapper.writeValueAsString(contextRequest), ContentType.create(""application/json"")));"
252408,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ContextServletIT.java,396,,"        props.put(""floatProperty"", 3.14159);"
252409,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/CopyPropertiesActionIT.java,83,,"        profile.setProperty(""singleValue"", ""A single value"");"
252410,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/CopyPropertiesActionIT.java,84,,"        profile.setProperty(""existingArray"", Arrays.asList(""element1"", ""element2""));"
252411,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/CopyPropertiesActionIT.java,114,,"        propertyType1.setTarget(""profiles"");"
252412,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/CopyPropertiesActionIT.java,115,,"        propertyType1.setValueTypeId(""string"");"
252413,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/CopyPropertiesActionIT.java,187,,"        createRule(""data/tmp/testCopyPropertiesWithoutSystemTags.json"");"
252414,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/CopyPropertiesActionIT.java,190,,"        properties.put(ARRAY_PARAM_NAME, Arrays.asList(""valueA"", ""valueB""));"
252415,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/CopyPropertiesActionIT.java,190,,"        properties.put(ARRAY_PARAM_NAME, Arrays.asList(""valueA"", ""valueB""));"
252416,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/CopyPropertiesActionIT.java,215,,"        properties.put(""singleValue"", ""New value"");"
252417,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementInterestsIT.java,93,,"        interestsAsMap.put(""unknown"", 10.0);"
252418,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementInterestsIT.java,102,,"            Map<String, Double> interests = (Map<String, Double>) updatedProfile.getProperty(""interests"");"
252419,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementPropertyIT.java,86,,"            int value = ((Map<String, Integer>) updatedProfile.getProperty(""pageView"")).get(""acme-space"");"
252420,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementPropertyIT.java,86,,"            int value = ((Map<String, Integer>) updatedProfile.getProperty(""pageView"")).get(""acme-space"");"
252421,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementPropertyIT.java,89,,"            Assert.fail(""Profile was not updated"");"
252422,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementPropertyIT.java,119,,"            int value = ((Map<String, Integer>) updatedProfile.getProperty(""pageView"")).get(""acme"");"
252423,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementPropertyIT.java,174,,"        propertyValue.put(""health"", 18);"
252424,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementPropertyIT.java,175,,"        propertyValue.put(""sport"", 99);"
252425,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementPropertyIT.java,247,,"        propertyValue.put(""city"", 13);"
252426,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementPropertyIT.java,248,,"        properties2.put(""state"", propertyValue);"
252427,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementPropertyIT.java,249,,"        properties1.put(""country"", properties2);"
252428,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementPropertyIT.java,250,,"        properties.put(""continent"", properties1);"
252429,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementPropertyIT.java,312,,"        propertyValue.put(""books"", 59);"
252430,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementPropertyIT.java,313,,"        propertyValue.put(""chapters"", 1001);"
252431,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementPropertyIT.java,314,,"        propertyValue.put(""featured"", ""The forty rules"");"
252432,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementPropertyIT.java,314,,"        propertyValue.put(""featured"", ""The forty rules"");"
252433,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/IncrementPropertyIT.java,315,,"        properties.put(""library"", propertyValue);"
252434,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/InputValidationIT.java,78,,"        doPOSTRequestTest(CONTEXT_JSON_URL, null, ""/validation/contextRequest_invalidSessionId.json"", 400, ERROR_MESSAGE_INVALID_DATA_RECEIVED);"
252435,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/InputValidationIT.java,86,,"        doPOSTRequestTest(CONTEXT_JSON_URL, null, ""/validation/contextRequest_invalidProfileId.json"", 400, ERROR_MESSAGE_INVALID_DATA_RECEIVED);"
252436,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/InputValidationIT.java,94,,"        doPOSTRequestTest(CONTEXT_JSON_URL, null, ""/validation/contextRequest_valid.json"", 200, null);"
252437,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/PatchIT.java,74,,"            Assert.assertEquals(""foo"", newCompany.getDefaultValue());"
252438,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ProfileExportIT.java,60,,"        profile1.setProperty(""firstName"", ""Pablo"");"
252439,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ProfileExportIT.java,61,,"        profile1.setProperty(""lastName"", ""Esco"");"
252440,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ProfileExportIT.java,62,,"        profile1.setProperty(""city"", ""exportCity"");"
252441,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ProfileImportActorsIT.java,62,,"        PropertyType propertyTypeTwitterId = new PropertyType(new Metadata(""integration"", ""twitterId"", ""Twitter ID"", ""Twitter ID""));"
252442,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ProfileImportActorsIT.java,67,,"        PropertyType propertyTypeActorsGenres = new PropertyType(new Metadata(""integration"", ""movieGenres"", ""Movie Genres"", ""Movie Genres""));"
252443,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ProfileImportRankingIT.java,68,,"        PropertyType propertyTypeRank = new PropertyType(new Metadata(""integration"", ""rank"", ""Rank"", ""Rank""));"
252444,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ProfileImportSurfersIT.java,63,,"        PropertyType propertyType = new PropertyType(new Metadata(""integration"", ""alive"", ""Alive"", ""Is the person alive?""));"
252445,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ProfileImportSurfersIT.java,85,,"        importConfigSurfers.setMergingProperty(""linkedInId"");"
252446,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ProfileServiceWithoutOverwriteIT.java,81,,"        profile.setProperty(""country"", ""test-country"");"
252447,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/ProfileServiceWithoutOverwriteIT.java,91,,"        profile.setProperty(""country"", ""test2-country"");"
252448,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/PropertiesUpdateActionIT.java,78,,"        Assert.assertNull(profile.getProperty(""firstName""));"
252449,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/PropertiesUpdateActionIT.java,80,,"        Event updateProperties = new Event(""updateProperties"", null, profile, null, null, profile, new Date());"
252450,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/PropertiesUpdateActionIT.java,88,,"        updateProperties.setProperty(UpdatePropertiesAction.TARGET_TYPE_KEY, ""profile"");"
252451,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/PropertiesUpdateActionIT.java,127,,"        propertyToAdd.put(""properties.prop1"", ""New property 1"");"
252452,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/PropertiesUpdateActionIT.java,127,,"        propertyToAdd.put(""properties.prop1"", ""New property 1"");"
252453,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/PropertiesUpdateActionIT.java,128,,"        propertyToAdd.put(""properties.prop2"", ""New property 2"");"
252454,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/PropertiesUpdateActionIT.java,129,,"        propertyToAdd.put(""properties.prop3"", ""New property 3"");"
252455,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/PropertiesUpdateActionIT.java,129,,"        propertyToAdd.put(""properties.prop3"", ""New property 3"");"
252456,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/PropertiesUpdateActionIT.java,141,,"        Assert.assertEquals(""Props_to_add should set the prop if it's missing"", ""New property 1"", profile.getProperty(""prop1""));"
252457,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/PropertiesUpdateActionIT.java,142,,"        Assert.assertEquals(""Props_to_add should set the prop if it's missing"", ""New property 2"", profile.getProperty(""prop2""));"
252458,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/PropertiesUpdateActionIT.java,143,,"        Assert.assertEquals(""Props_to_add should set the prop if it's missing"", ""New property 3"", profile.getProperty(""prop3""));"
252459,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/SegmentIT.java,117,,"        pastEventEventCondition.setParameter(""eventTypeId"", ""test-event-type"");"
252460,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/graphql/GraphQLListIT.java,54,,"                Assert.assertEquals(""testListId"", context.getValue(""data.cdp.createOrUpdateList.id""));"
252461,./TargetProjects/unomi/itests/src/test/java/org/apache/unomi/itests/graphql/GraphQLSegmentIT.java,55,,"            Assert.assertEquals(""testSegment"", context.getValue(""data.cdp.createOrUpdateSegment.id""));"
252462,./TargetProjects/unomi/metrics/src/test/java/org/apache/unomi/metrics/internal/MetricsServiceTest.java,71,,"        System.out.println(""Free memory="" + humanReadableByteCount(Runtime.getRuntime().freeMemory(), false));"
252463,./TargetProjects/unomi/performance-tests/src/test/java/org/apache/unomi/performancetests/BasicTest.java,128,,"                    new VMOption(""--add-opens""),"
252464,./TargetProjects/unomi/persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java,1240,,"                                    ""        \""number_of_shards\"" : "" + monthlyIndexNumberOfShards + "",\n"" +"
252465,./TargetProjects/unomi/persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java,1366,,"            Map<String, Object> subMappings = mappings.computeIfAbsent(""properties"", k -> new HashMap<>());"
252466,./TargetProjects/unomi/persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/ElasticSearchPersistenceServiceImpl.java,1937,,"                        DateHistogramAggregationBuilder dateHistogramBuilder = AggregationBuilders.dateHistogram(""buckets"").field(fieldName).calendarInterval(new DateHistogramInterval((dateAggregate.getInterval())));"
252467,./TargetProjects/unomi/persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/conditions/ConditionContextHelper.java,71,,"            if (((String) value).startsWith(""parameter::"") || ((String) value).startsWith(""script::"")) {"
252468,./TargetProjects/unomi/persistence-elasticsearch/core/src/main/java/org/apache/unomi/persistence/elasticsearch/conditions/ConditionContextHelper.java,71,,"            if (((String) value).startsWith(""parameter::"") || ((String) value).startsWith(""script::"")) {"
252469,./TargetProjects/unomi/plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/actions/MergeProfilesOnPropertyAction.java,187,,"                                    persistenceService.update(currentEvent, currentEvent.getTimeStamp(), Event.class, ""profileId"", anonymousBrowsing ? null : masterProfileId);"
252470,./TargetProjects/unomi/plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/actions/SetEventOccurenceCountAction.java,63,,"        Condition c = new Condition(definitionsService.getConditionType(""eventPropertyCondition""));"
252471,./TargetProjects/unomi/plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/actions/SetEventOccurenceCountAction.java,64,,"        c.setParameter(""propertyName"", ""profileId"");"
252472,./TargetProjects/unomi/plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/actions/SetEventOccurenceCountAction.java,65,,"        c.setParameter(""comparisonOperator"", ""equals"");"
252473,./TargetProjects/unomi/plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/actions/SetEventOccurenceCountAction.java,110,,"            fromDateTime = LocalDateTime.ofInstant(fromDateCalendar.toInstant(), ZoneId.of(""UTC""));"
252474,./TargetProjects/unomi/plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/conditions/PastEventConditionESQueryBuilder.java,78,,"        Integer minimumEventCount = condition.getParameter(""minimumEventCount"") == null ? 1 : (Integer) condition.getParameter(""minimumEventCount"");"
252475,./TargetProjects/unomi/plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/conditions/PastEventConditionESQueryBuilder.java,79,,"        Integer maximumEventCount = condition.getParameter(""maximumEventCount"") == null ? Integer.MAX_VALUE : (Integer) condition.getParameter(""maximumEventCount"");"
252476,./TargetProjects/unomi/plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/conditions/PastEventConditionESQueryBuilder.java,81,,"        if (condition.getParameter(""generatedPropertyKey"") != null && condition.getParameter(""generatedPropertyKey"").equals(segmentService.getGeneratedPropertyKey((Condition) condition.getParameter(""eventCondition""), condition))) {"
252477,./TargetProjects/unomi/plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/conditions/PastEventConditionESQueryBuilder.java,105,,"                Map<String, Long> eventCountByProfile = persistenceService.aggregateWithOptimizedQuery(eventCondition, new TermsAggregate(""profileId""), Event.ITEM_TYPE, maximumIdsQueryCount);"
252478,./TargetProjects/unomi/plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/conditions/PastEventConditionESQueryBuilder.java,107,,"                        .filter(x -> !x.getKey().equals(""_filtered""))"
252479,./TargetProjects/unomi/plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/conditions/PastEventConditionEvaluator.java,89,,"            profileCondition.setConditionType(definitionsService.getConditionType(""sessionPropertyCondition""));"
252480,./TargetProjects/unomi/plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/conditions/PastEventConditionEvaluator.java,90,,"            profileCondition.setParameter(""propertyName"", ""profileId"");"
252481,./TargetProjects/unomi/plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/conditions/PastEventConditionEvaluator.java,91,,"            profileCondition.setParameter(""comparisonOperator"", ""equals"");"
252482,./TargetProjects/unomi/plugins/baseplugin/src/test/java/org/apache/unomi/plugins/baseplugin/conditions/HardcodedPropertyAccessorRegistryTest.java,37,,"        assertTokens(""test"", ""test"", null);"
252483,./TargetProjects/unomi/plugins/baseplugin/src/test/java/org/apache/unomi/plugins/baseplugin/conditions/PropertyConditionEvaluatorTest.java,71,,"                allowedExpressions.add(Pattern.compile(""size""));"
252484,./TargetProjects/unomi/plugins/baseplugin/src/test/java/org/apache/unomi/plugins/baseplugin/conditions/PropertyConditionEvaluatorTest.java,85,,"        assertEquals(""Target itemId value is not correct"", MOCK_ITEM_ID, propertyConditionEvaluator.getHardcodedPropertyValue(mockEvent, ""target.itemId""));"
252485,./TargetProjects/unomi/plugins/baseplugin/src/test/java/org/apache/unomi/plugins/baseplugin/conditions/PropertyConditionEvaluatorTest.java,85,,"        assertEquals(""Target itemId value is not correct"", MOCK_ITEM_ID, propertyConditionEvaluator.getHardcodedPropertyValue(mockEvent, ""target.itemId""));"
252486,./TargetProjects/unomi/plugins/baseplugin/src/test/java/org/apache/unomi/plugins/baseplugin/conditions/PropertyConditionEvaluatorTest.java,86,,"        assertEquals(""Target scope is not correct"", DIGITALL_SCOPE, propertyConditionEvaluator.getHardcodedPropertyValue(mockEvent, ""target.scope""));"
252487,./TargetProjects/unomi/plugins/baseplugin/src/test/java/org/apache/unomi/plugins/baseplugin/conditions/PropertyConditionEvaluatorTest.java,87,,"        assertEquals(""Target page path value is not correct"", TARGET_PAGE_PATH_VALUE, propertyConditionEvaluator.getHardcodedPropertyValue(mockEvent, ""target.properties.pageInfo.pagePath""));"
252488,./TargetProjects/unomi/plugins/baseplugin/src/test/java/org/apache/unomi/plugins/baseplugin/conditions/PropertyConditionEvaluatorTest.java,88,,"        assertEquals(""Target page url value is not correct"", TARGET_PAGE_URL_VALUE, propertyConditionEvaluator.getHardcodedPropertyValue(mockEvent, ""target.properties.pageInfo.pageURL""));"
252489,./TargetProjects/unomi/plugins/baseplugin/src/test/java/org/apache/unomi/plugins/baseplugin/conditions/PropertyConditionEvaluatorTest.java,95,,"        assertEquals(""Unexisting property should be null"", null, propertyConditionEvaluator.getHardcodedPropertyValue(mockSession, ""systemProperties.goals._csk6r4cgeStartReached""));"
252490,./TargetProjects/unomi/plugins/baseplugin/src/test/java/org/apache/unomi/plugins/baseplugin/conditions/PropertyConditionEvaluatorTest.java,153,,"        File vulnFile = new File(""target/vuln-file.txt"");"
252491,./TargetProjects/unomi/plugins/baseplugin/src/test/java/org/apache/unomi/plugins/baseplugin/conditions/PropertyConditionEvaluatorTest.java,164,,"        assertFalse(""Vulnerability successfully executed ! File created at "" + vulnFileCanonicalPath, vulnFile.exists());"
252492,./TargetProjects/unomi/plugins/request/src/main/java/org/apache/unomi/plugins/request/useragent/UserAgent.java,97,,"        sb.append(""agent.name: "" + this.getUserAgentName() + "",\n"");"
252493,./TargetProjects/unomi/rest/src/main/java/org/apache/unomi/rest/endpoints/ContextJsonEndpoint.java,117,,"            @QueryParam(""personaId"") @Pattern(regexp = ValidationPattern.TEXT_VALID_CHARACTERS_PATTERN) String personaId,"
252494,./TargetProjects/unomi/rest/src/main/java/org/apache/unomi/rest/endpoints/ContextJsonEndpoint.java,118,,"            @QueryParam(""sessionId"") @Pattern(regexp = ValidationPattern.TEXT_VALID_CHARACTERS_PATTERN) String sessionId,"
252495,./TargetProjects/unomi/rest/src/main/java/org/apache/unomi/rest/endpoints/ContextJsonEndpoint.java,119,,"            @QueryParam(""timestamp"") Long timestampAsLong, @QueryParam(""invalidateProfile"") boolean invalidateProfile,"
252496,./TargetProjects/unomi/rest/src/main/java/org/apache/unomi/rest/endpoints/ContextJsonEndpoint.java,119,,"            @QueryParam(""timestamp"") Long timestampAsLong, @QueryParam(""invalidateProfile"") boolean invalidateProfile,"
252497,./TargetProjects/unomi/rest/src/main/java/org/apache/unomi/rest/endpoints/ContextJsonEndpoint.java,120,,"            @QueryParam(""invalidateSession"") boolean invalidateSession) throws JsonProcessingException {"
252498,./TargetProjects/unomi/rest/src/main/java/org/apache/unomi/rest/endpoints/DefinitionsServiceEndPoint.java,80,,"    public Collection<RESTConditionType> getAllConditionTypes(@HeaderParam(""Accept-Language"") String language) {"
252499,./TargetProjects/unomi/rest/src/main/java/org/apache/unomi/rest/endpoints/DefinitionsServiceEndPoint.java,94,,"    public Collection<RESTConditionType> getConditionTypesByTag(@PathParam(""tags"") String tags, @HeaderParam(""Accept-Language"") String language) {"
252500,./TargetProjects/unomi/rest/src/main/java/org/apache/unomi/rest/endpoints/ProfileServiceEndPoint.java,195,,"    public Profile load(@PathParam(""profileId"") String profileId) {"
252501,./TargetProjects/unomi/rest/src/main/java/org/apache/unomi/rest/endpoints/ProfileServiceEndPoint.java,303,,"    public Persona loadPersona(@PathParam(""personaId"") String personaId) {"
252502,./TargetProjects/unomi/rest/src/main/java/org/apache/unomi/rest/endpoints/ProfileServiceEndPoint.java,468,,"    public Collection<PropertyType> getExistingProperties(@QueryParam(""tag"") String tag, @QueryParam(""isSystemTag"") boolean isSystemTag, @QueryParam(""itemType"") String itemType, @HeaderParam(""Accept-Language"") String language, @Context final HttpServletResponse response) throws IOException {"
252503,./TargetProjects/unomi/rest/src/main/java/org/apache/unomi/rest/endpoints/QueryServiceEndPoint.java,83,,"    public Map<String, Long> getAggregate(@PathParam(""type"") String type, @PathParam(""property"") String property) {"
252504,./TargetProjects/unomi/rest/src/main/java/org/apache/unomi/rest/endpoints/ScoringServiceEndPoint.java,104,,"    public Scoring getScoringDefinition(@PathParam(""scoringID"") String scoringId) {"
252505,./TargetProjects/unomi/rest/src/main/java/org/apache/unomi/rest/endpoints/SegmentServiceEndPoint.java,82,,"    public PartialList<Profile> getMatchingIndividuals(@PathParam(""segmentID"") String segmentId, @QueryParam(""offset"") @DefaultValue(""0"") int offset, @QueryParam(""size"") @DefaultValue(""50"") int size, @QueryParam(""sort"") String sortBy) {"
252506,./TargetProjects/unomi/scripting/src/main/java/org/apache/unomi/scripting/SecureFilteringClassLoader.java,93,,"            throw new ClassNotFoundException(""Access to class "" + name + "" not allowed"");"
252507,./TargetProjects/unomi/scripting/src/main/java/org/apache/unomi/scripting/SecureFilteringClassLoader.java,93,,"            throw new ClassNotFoundException(""Access to class "" + name + "" not allowed"");"
252508,./TargetProjects/unomi/scripting/src/test/java/org/apache/unomi/scripting/MvelScriptExecutorTest.java,71,,"            System.out.println(""Expected error : "" + t.getMessage());"
252509,./TargetProjects/unomi/scripting/src/test/java/org/apache/unomi/scripting/MvelScriptExecutorTest.java,73,,"        System.out.println(""result="" + result);"
252510,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/cluster/ClusterServiceImpl.java,302,,"            logger.error(""Error retrieving system CPU load"", e);"
252511,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/definitions/DefinitionsServiceImpl.java,194,,"        Enumeration<URL> predefinedConditionEntries = bundleContext.getBundle().findEntries(""META-INF/cxs/conditions"", ""*.json"", true);"
252512,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/definitions/DefinitionsServiceImpl.java,201,,"            logger.debug(""Found predefined condition at "" + predefinedConditionURL + "", loading... "");"
252513,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/definitions/DefinitionsServiceImpl.java,279,,"                ParserHelper.resolveConditionType(this, type.getParentCondition(), ""condition type "" + type.getItemId());"
252514,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/definitions/DefinitionsServiceImpl.java,429,,"        if (rootCondition.containsParameter(""subConditions"")) {"
252515,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/definitions/DefinitionsServiceImpl.java,463,,"            } else if (rootCondition.getConditionTypeId().equals(""booleanCondition"") && ""and"".equals(rootCondition.getParameter(""operator""))) {"
252516,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/definitions/DefinitionsServiceImpl.java,463,,"            } else if (rootCondition.getConditionTypeId().equals(""booleanCondition"") && ""and"".equals(rootCondition.getParameter(""operator""))) {"
252517,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/definitions/DefinitionsServiceImpl.java,463,,"            } else if (rootCondition.getConditionTypeId().equals(""booleanCondition"") && ""and"".equals(rootCondition.getParameter(""operator""))) {"
252518,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/events/EventServiceImpl.java,247,,"            if (e.getValue().get(""properties"") != null) {"
252519,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/events/EventServiceImpl.java,273,,"                valueType = definitionsService.getValueType(""set"");"
252520,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/events/EventServiceImpl.java,323,,"        Condition condition = new Condition(definitionsService.getConditionType(""eventPropertyCondition""));"
252521,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/events/EventServiceImpl.java,324,,"        condition.setParameter(""propertyName"", ""sessionId"");"
252522,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/events/EventServiceImpl.java,325,,"        condition.setParameter(""propertyValue"", sessionId);"
252523,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/events/EventServiceImpl.java,326,,"        condition.setParameter(""comparisonOperator"", ""equals"");"
252524,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/events/EventServiceImpl.java,326,,"        condition.setParameter(""comparisonOperator"", ""equals"");"
252525,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/goals/GoalsServiceImpl.java,146,,"        notExist.setConditionType(definitionsService.getConditionType(""sessionPropertyCondition""));"
252526,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/goals/GoalsServiceImpl.java,147,,"        notExist.setParameter(""propertyName"", ""systemProperties.goals."" + goal.getMetadata().getId() + id + ""Reached"");"
252527,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/goals/GoalsServiceImpl.java,147,,"        notExist.setParameter(""propertyName"", ""systemProperties.goals."" + goal.getMetadata().getId() + id + ""Reached"");"
252528,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/goals/GoalsServiceImpl.java,148,,"        notExist.setParameter(""comparisonOperator"", ""missing"");"
252529,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/goals/GoalsServiceImpl.java,155,,"            startExists.setParameter(""comparisonOperator"", ""exists"");"
252530,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/goals/GoalsServiceImpl.java,162,,"            engagedInCampaign.setParameter(""propertyName"", ""systemProperties.campaigns."" + goal.getCampaignId() + ""Engaged"");"
252531,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/goals/GoalsServiceImpl.java,162,,"            engagedInCampaign.setParameter(""propertyName"", ""systemProperties.campaigns."" + goal.getCampaignId() + ""Engaged"");"
252532,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/goals/GoalsServiceImpl.java,170,,"        action1.setActionType(definitionsService.getActionType(""setPropertyAction""));"
252533,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/goals/GoalsServiceImpl.java,172,,"        action1.setParameter(""setPropertyName"", name);"
252534,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/goals/GoalsServiceImpl.java,173,,"        action1.setParameter(""setPropertyValue"", ""now"");"
252535,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/goals/GoalsServiceImpl.java,174,,"        action1.setParameter(""storeInSession"", true);"
252536,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/goals/GoalsServiceImpl.java,218,,"            ParserHelper.resolveConditionType(definitionsService, goal.getStartEvent(), ""goal ""+goalId+"" start event"");"
252537,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/goals/GoalsServiceImpl.java,284,,"        Rule rule = new Rule(new Metadata(campaign.getMetadata().getScope(), campaign.getMetadata().getId() + ""EntryEvent"", ""Auto generated rule for campaign "" + campaign.getMetadata().getName(), """"));"
252538,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/goals/GoalsServiceImpl.java,506,,"            all.put(""_filtered"", persistenceService.queryCount(condition, Session.ITEM_TYPE));"
252539,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/profiles/ProfileServiceImpl.java,352,,"                                inactiveTimeCondition.setParameter(""propertyName"", ""lastVisit"");"
252540,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/profiles/ProfileServiceImpl.java,353,,"                                inactiveTimeCondition.setParameter(""comparisonOperator"", ""lessThanOrEqualTo"");"
252541,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/profiles/ProfileServiceImpl.java,461,,"        if (itemMapping == null || itemMapping.isEmpty() || itemMapping.get(""properties"") == null || itemMapping.get(""properties"").get(""properties"") == null) {"
252542,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/profiles/ProfileServiceImpl.java,732,,"            return persistenceService.queryFullText(""profileId"", profileId, query, sortBy, Session.class, offset, size);"
252543,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/rules/RulesServiceImpl.java,246,,"            ParserHelper.resolveConditionType(definitionsService, rule.getCondition(), ""rule "" + rule.getItemId());"
252544,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/segments/SegmentServiceImpl.java,276,,"            @SuppressWarnings(""unchecked"")"
252545,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/segments/SegmentServiceImpl.java,277,,"            final List<Condition> subConditions = (List<Condition>) condition.getParameter(""subConditions"");"
252546,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/segments/SegmentServiceImpl.java,286,,"                final List<String> referencedSegmentIds = (List<String>) condition.getParameter(""segments"");"
252547,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/segments/SegmentServiceImpl.java,306,,"        if (""booleanCondition"".equals(condition.getConditionTypeId())) {"
252548,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/segments/SegmentServiceImpl.java,382,,"            segmentCondition.setConditionType(definitionsService.getConditionType(""profilePropertyCondition""));"
252549,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/segments/SegmentServiceImpl.java,383,,"            segmentCondition.setParameter(""propertyName"", ""segments"");"
252550,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/segments/SegmentServiceImpl.java,384,,"            segmentCondition.setParameter(""comparisonOperator"", ""equals"");"
252551,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/segments/SegmentServiceImpl.java,384,,"            segmentCondition.setParameter(""comparisonOperator"", ""equals"");"
252552,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/segments/SegmentServiceImpl.java,385,,"            segmentCondition.setParameter(""propertyValue"", segmentId);"
252553,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/segments/SegmentServiceImpl.java,408,,"                    clearAutoGeneratedRules(persistenceService.query(""linkedItems"", segment.getMetadata().getId(), null, Rule.class), segment.getMetadata().getId());"
252554,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/segments/SegmentServiceImpl.java,586,,"        rootCondition.setParameter(""operator"", ""and"");"
252555,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/segments/SegmentServiceImpl.java,586,,"        rootCondition.setParameter(""operator"", ""and"");"
252556,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/segments/SegmentServiceImpl.java,812,,"        Integer numberOfDays = (Integer) parentCondition.getParameter(""numberOfDays"");"
252557,./TargetProjects/unomi/services/src/main/java/org/apache/unomi/services/impl/segments/SegmentServiceImpl.java,813,,"        String fromDate = (String) parentCondition.getParameter(""fromDate"");"
252558,./TargetProjects/unomi/tools/shell-commands/src/main/java/org/apache/unomi/shell/migration/impl/MigrationTo121.java,74,,"        List<String> typeToMigrate = Arrays.asList(""actionType"", ""conditionType"", ""campaign"", ""goal"", ""rule"", ""scoring"", ""segment"", ""userList"");"
252559,./TargetProjects/unomi/tools/shell-commands/src/main/java/org/apache/unomi/shell/migration/impl/MigrationTo121.java,74,,"        List<String> typeToMigrate = Arrays.asList(""actionType"", ""conditionType"", ""campaign"", ""goal"", ""rule"", ""scoring"", ""segment"", ""userList"");"
252560,./TargetProjects/unomi/tools/shell-commands/src/main/java/org/apache/unomi/shell/migration/impl/MigrationTo121.java,92,,"        if (responseJSON.has(""hits"")) {"
252561,./TargetProjects/unomi/tools/shell-commands/src/main/java/org/apache/unomi/shell/migration/impl/MigrationTo121.java,192,,"        tagsStructurePriorTo130.put(""eventCondition"", Collections.singletonList(""condition""));"
252562,./TargetProjects/unomi/tools/shell-commands/src/main/java/org/apache/unomi/shell/migration/impl/MigrationTo121.java,208,,"        tagsStructurePriorTo130.put(""aggregated"", Collections.singletonList(""profileTags""));"
252563,./TargetProjects/unomi/tools/shell-commands/src/main/java/org/apache/unomi/shell/migration/impl/MigrationTo121.java,215,,"        tagsStructurePriorTo130.put(""profileProperties"", Collections.singletonList(""properties""));"
252564,./TargetProjects/unomi/tools/shell-commands/src/main/java/org/apache/unomi/shell/migration/impl/MigrationTo121.java,215,,"        tagsStructurePriorTo130.put(""profileProperties"", Collections.singletonList(""properties""));"
252565,./TargetProjects/unomi/tools/shell-commands/src/main/java/org/apache/unomi/shell/migration/impl/MigrationTo150.java,152,,"                .put(""index"", new JSONObject()"
252566,./TargetProjects/unomi/tools/shell-commands/src/main/java/org/apache/unomi/shell/migration/impl/MigrationTo150.java,261,,"        if (newTypeMappings.has(""properties"")) {"
252567,./TargetProjects/unomi/tools/shell-commands/src/main/java/org/apache/unomi/shell/migration/impl/MigrationTo200.java,89,,"        httpPut.addHeader(""Accept"", ""application/json"");"
252568,./TargetProjects/unomi/tools/shell-commands/src/main/java/org/apache/unomi/shell/migration/utils/HttpUtils.java,108,,"        httpGet.addHeader(""accept"", ""application/json"");"
252569,./TargetProjects/unomi/tools/shell-commands/src/main/java/org/apache/unomi/shell/migration/utils/HttpUtils.java,108,,"        httpGet.addHeader(""accept"", ""application/json"");"
252570,./TargetProjects/unomi/tools/shell-dev-commands/src/main/java/org/apache/unomi/shell/commands/DeploymentCommandSupport.java,114,,"                if (bundle.findEntries(""META-INF/cxs/"", ""*.json"", true) != null) {"
252571,./TargetProjects/usergrid/chop/amazon/src/main/java/org/apache/usergrid/chop/api/store/amazon/Ec2RunnerBuilder.java,67,,"    @SuppressWarnings( ""UnusedDeclaration"" )"
252572,./TargetProjects/usergrid/chop/api/src/main/java/org/apache/usergrid/chop/api/BaseResult.java,53,,"    @SuppressWarnings(""UnusedDeclaration"")"
252573,./TargetProjects/usergrid/chop/api/src/main/java/org/apache/usergrid/chop/api/ChopUtils.java,61,,"        System.setProperty( ""javax.net.ssl.trustStore"", ""jssecacerts"" );"
252574,./TargetProjects/usergrid/chop/api/src/main/java/org/apache/usergrid/chop/api/StatsSnapshot.java,36,,"    @SuppressWarnings( ""UnusedDeclaration"" )"
252575,./TargetProjects/usergrid/chop/integ/src/test/java/org/apache/usergrid/chop/integ/RunnerCoordinatorTest.java,76,,"        defaultId = ""https"","
252576,./TargetProjects/usergrid/chop/stack/src/test/java/org/apache/usergrid/chop/stack/BasicIpRuleTest.java,48,,"           .withIpProtocol( ""tcp"" )"
252577,./TargetProjects/usergrid/chop/webapp/src/main/java/org/apache/usergrid/chop/webapp/coordinator/CoordinatorUtils.java,237,,"            sb.append( ""export "" )"
252578,./TargetProjects/usergrid/chop/webapp/src/main/java/org/apache/usergrid/chop/webapp/coordinator/CoordinatorUtils.java,241,,"              .append( ""\"";"" );"
252579,./TargetProjects/usergrid/chop/webapp/src/main/java/org/apache/usergrid/chop/webapp/coordinator/CoordinatorUtils.java,298,,"                sb.append( ""/home/"" )"
252580,./TargetProjects/usergrid/chop/webapp/src/main/java/org/apache/usergrid/chop/webapp/coordinator/SetupStackThread.java,109,,"                LOG.warn( errorMessage + "", aborting and terminating launched instances..."" );"
252581,./TargetProjects/usergrid/chop/webapp/src/main/java/org/apache/usergrid/chop/webapp/coordinator/rest/PropertiesResource.java,74,,"            USERNAME + ""}/{"" +"
252582,./TargetProjects/usergrid/chop/webapp/src/main/java/org/apache/usergrid/chop/webapp/coordinator/rest/RunManagerResource.java,148,,"            LOG.info( ""{} is {}"", RUNNER_HOSTNAME, runnerHost );"
252583,./TargetProjects/usergrid/chop/webapp/src/main/java/org/apache/usergrid/chop/webapp/coordinator/rest/UploadResource.java,193,,"        LOG.debug( ""extracted {} = {}"", RestParams.COMMIT_ID, commitId );"
252584,./TargetProjects/usergrid/chop/webapp/src/main/java/org/apache/usergrid/chop/webapp/dao/RunDao.java,84,,"                                .field( ""commitId"", run.getCommitId() )"
252585,./TargetProjects/usergrid/chop/webapp/src/main/java/org/apache/usergrid/chop/webapp/dao/RunDao.java,86,,"                                .field( ""runNumber"", run.getRunNumber() )"
252586,./TargetProjects/usergrid/chop/webapp/src/main/java/org/apache/usergrid/chop/webapp/dao/RunDao.java,87,,"                                .field( ""testName"", run.getTestName() )"
252587,./TargetProjects/usergrid/chop/webapp/src/main/java/org/apache/usergrid/chop/webapp/service/shiro/ShiroRealm.java,73,,"                    throw new AuthenticationException( ""Authentication failed"" );"
252588,./TargetProjects/usergrid/chop/webapp/src/main/java/org/apache/usergrid/chop/webapp/view/chart/layout/ChartLayout.java,132,,"        testNameCombo.setWidth( ""155px"" );"
252589,./TargetProjects/usergrid/chop/webapp/src/main/java/org/apache/usergrid/chop/webapp/view/user/UserLayout.java,220,,"            Notification.show( ""Error"", ""Default admin user cannot be deleted"", Notification.Type.ERROR_MESSAGE );"
252590,./TargetProjects/usergrid/chop/webapp/src/test/java/org/apache/usergrid/chop/webapp/dao/RunnerGroupTest.java,40,,"        RunnerGroup runnerGroup1 = new RunnerGroup( ""user"", ""commit"", ""module"" );"
252591,./TargetProjects/usergrid/chop/webapp/src/test/java/org/apache/usergrid/chop/webapp/dao/RunnerGroupTest.java,40,,"        RunnerGroup runnerGroup1 = new RunnerGroup( ""user"", ""commit"", ""module"" );"
252592,./TargetProjects/usergrid/chop/webapp/src/test/java/org/apache/usergrid/chop/webapp/dao/RunnerGroupTest.java,40,,"        RunnerGroup runnerGroup1 = new RunnerGroup( ""user"", ""commit"", ""module"" );"
252593,./TargetProjects/usergrid/chop/webapp/src/test/java/org/apache/usergrid/chop/webapp/elasticsearch/ESSuiteTest.java,184,,"        run.setChopType( ""TimeChop"" );"
252594,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/corepersistence/CpEntityManager.java,486,,"        throw new UnsupportedOperationException( ""Not supported yet."" );"
252595,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/corepersistence/CpEntityManager.java,2344,,"            return new SimpleEntityRef( ""user"", identifier.getUUID() );"
252596,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/corepersistence/CpRelationManager.java,761,,"        throw new UnsupportedOperationException( ""Paired connections not supported"" );"
252597,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/corepersistence/pipeline/read/traverse/EntityLoadVerifyFilter.java,191,,"                    logger.warn(""Read graph edge and received candidate with entityId {} (application {}), yet was not found in cassandra."""
252598,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/mq/Message.java,135,,"    @SuppressWarnings(""unchecked"")"
252599,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/mq/Message.java,144,,"        if ( properties.get( ""counters"" ) instanceof Map ) {"
252600,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/mq/Query.java,178,,"            @SuppressWarnings({ ""unchecked"", ""rawtypes"" }) Map<String, List<String>> params ="
252601,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/mq/Query.java,211,,"        connection = first( params.get( ""connection"" ) );"
252602,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/mq/QueryFilterLexer.java,1783,,"            """", """", """", """", """", """", ""\1\30\1\uffff\12\30\7\uffff\32\30\4\uffff\1\30\1\uffff\32\30"","
252603,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/mq/cassandra/QueueManagerImpl.java,457,,"            logger.error( ""Unable to update index"", e );"
252604,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/mq/cassandra/QueuesCF.java,34,,"    MESSAGE_PROPERTIES( ""Entity_Properties"", ""BytesType"" ),"
252605,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/persistence/AbstractEntity.java,207,,"        return getDataset( ""metadata"", key );"
252606,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/persistence/Results.java,242,,"    @SuppressWarnings(""unchecked"")"
252607,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/persistence/Schema.java,1706,,"            SecretKeySpec sKeySpec = new SecretKeySpec( getRawKey( encryptionSeed ), ""AES"" );"
252608,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/persistence/SimpleRoleRef.java,53,,"            id = CassandraPersistenceUtils.keyID( ""role"", this.groupId, this.roleName );"
252609,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/persistence/entities/Notification.java,308,,"            this.statistics.put(""sent"", sent);"
252610,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/persistence/entities/Notification.java,309,,"            this.statistics.put(""errors"", errors);"
252611,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/utils/IndexUtils.java,92,,"                        newPath = path + ""[\"""" + key + ""\""]"";"
252612,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/utils/IndexUtils.java,92,,"                        newPath = path + ""[\"""" + key + ""\""]"";"
252613,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/utils/JsonUtils.java,76,,"                logger.debug(""Error generating JSON"", t);"
252614,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/utils/MapUtils.java,44,,"    @SuppressWarnings(""unchecked"")"
252615,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/utils/Version.java,149,,"            throw new IllegalArgumentException( ""Argument is null"" );"
252616,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/utils/Version.java,152,,"        if ( !toSet.matches( ""\\d+"" ) ) {"
252617,./TargetProjects/usergrid/stack/core/src/main/java/org/apache/usergrid/utils/Version.java,153,,"            throw new IllegalArgumentException( ""Argument is not numeric"" );"
252618,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/AggregationServiceTest.java,47,,"         props.put(""test"", 1234);"
252619,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/AggregationServiceTest.java,59,,"        long sum1 = aggregationService.getSize(applicationScope, CpNamingUtils.createCollectionSearchEdge(applicationScope.getApplication(), ""tests""));"
252620,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/CpEntityMapUtilsTest.java,52,,"            put( ""block"", new ArrayList<Object>() {{"
252621,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/CpEntityMapUtilsTest.java,53,,"                add( new LinkedHashMap<String, Object>() {{ put(""name"", ""fred""); }});"
252622,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/CpEntityMapUtilsTest.java,53,,"                add( new LinkedHashMap<String, Object>() {{ put(""name"", ""fred""); }});"
252623,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/CpEntityMapUtilsTest.java,54,,"                add( new LinkedHashMap<String, Object>() {{ put(""name"", ""gertrude""); }});"
252624,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/CpEntityMapUtilsTest.java,55,,"                add( new LinkedHashMap<String, Object>() {{ put(""name"", ""mina""); }});"
252625,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/CpEntityMapUtilsTest.java,60,,"            put( ""location"", new LinkedHashMap<String, Object>() {{"
252626,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/CpEntityMapUtilsTest.java,61,,"                put(""latitude"", 37.776753 );"
252627,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/CpEntityMapUtilsTest.java,66,,"        Entity cpEntity = CpEntityMapUtils.fromMap( properties, ""user"", true );"
252628,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/CpEntityMapUtilsTest.java,255,,"        properties.put(""array"", array);"
252629,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/StaleIndexCleanupTest.java,104,,"        Entity thing = em.create(""thing"", new HashMap<String, Object>() {{"
252630,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/StaleIndexCleanupTest.java,110,,"        assertEquals(1, queryCollectionCp(""things"", ""thing"", ""select *"").size());"
252631,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/StaleIndexCleanupTest.java,110,,"        assertEquals(1, queryCollectionCp(""things"", ""thing"", ""select *"").size());"
252632,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/StaleIndexCleanupTest.java,262,,"            final String dogName = ""dog"" + i;"
252633,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/index/IndexServiceTest.java,128,,"        entity.setField( new StringField( ""string"", ""foo"" ) );"
252634,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/index/IndexServiceTest.java,128,,"        entity.setField( new StringField( ""string"", ""foo"" ) );"
252635,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/index/IndexServiceTest.java,159,,"            new ApplicationScopeImpl( new SimpleId( UUID.randomUUID(), ""application"" ) );"
252636,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/index/IndexServiceTest.java,162,,"        final Entity testEntity = new Entity( createId( ""thing"" ), UUIDGenerator.newTimeUUID() );"
252637,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/index/IndexServiceTest.java,181,,"        final Id connectingId = createId( ""connecting"" );"
252638,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/index/IndexServiceTest.java,182,,"        final Edge edge = CpNamingUtils.createConnectionEdge( connectingId, ""likes"", testEntity.getId() );"
252639,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/corepersistence/index/IndexServiceTest.java,356,,"            SearchTypes.fromTypes( ""thing"" ),""select *"",10,0, false );"
252640,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/count/SimpleBatcherTest.java,42,,"        simpleBatcher.add( new Count( ""Counter"", ""k1"", ""counter1"", 1 ) );"
252641,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/count/common/CountSerDeUtilsTest.java,37,,"        Count count = new Count( ""Counters"", ""k1"", ""c1"", 1 );"
252642,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/count/common/CountTest.java,30,,"        Count count = new Count( ""Counters"", ""k1"", ""c1"", 1 );"
252643,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/mq/MessagesIT.java,51,,"    @Ignore(""Pending https://issues.apache.org/jira/browse/USERGRID-1116. "")"
252644,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/mq/MessagesIT.java,57,,"        message.setStringProperty( ""foo"", ""bar"" );"
252645,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/mq/MessagesIT.java,57,,"        message.setStringProperty( ""foo"", ""bar"" );"
252646,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/mq/MessagesIT.java,63,,"        qm.postToQueue( ""/foo/bar"", message );"
252647,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/mq/MessagesIT.java,87,,"        message.setStringProperty( ""name"", ""bravo"" );"
252648,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/mq/MessagesIT.java,137,,"        q = qm.updateQueue( ""/foo/2/"", properties );"
252649,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/mq/MessagesIT.java,145,,"        qm.subscribeToQueue( ""/pubtest/"", ""/foo/1/"" );"
252650,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/ApplicationServiceIT.java,64,,"           Entity entity = entityManager.create(""tests"", map);"
252651,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionDeleteTest.java,98,,"                entityMap.put( ""key"", i+1 );"
252652,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,60,,"        app.put( ""username"", ""edanuff"" );"
252653,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,60,,"        app.put( ""username"", ""edanuff"" );"
252654,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,61,,"        app.put( ""email"", ""ed@anuff.com"" );"
252655,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,61,,"        app.put( ""email"", ""ed@anuff.com"" );"
252656,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,62,,"        Entity user = app.create( ""user"" );"
252657,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,84,,"        app.put( ""actor"", new LinkedHashMap<String, Object>() {"
252658,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,86,,"                put( ""displayName"", ""Ed Anuff"" );"
252659,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,86,,"                put( ""displayName"", ""Ed Anuff"" );"
252660,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,87,,"                put( ""objectType"", ""person"" );"
252661,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,87,,"                put( ""objectType"", ""person"" );"
252662,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,90,,"        app.put( ""verb"", ""tweet"" );"
252663,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,90,,"        app.put( ""verb"", ""tweet"" );"
252664,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,91,,"        app.put( ""content"", ""I ate a sammich"" );"
252665,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,92,,"        app.put( ""ordinal"", 3 );"
252666,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,94,,"        Entity activity = app.create( ""activity"" );"
252667,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,105,,"        app.addToCollection( user, ""activities"", activity );"
252668,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,115,,"        app.put( ""verb"", ""tweet2"" );"
252669,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,288,,"        String firstName = ""firstName"" + UUIDUtils.newTimeUUID();"
252670,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,293,,"        properties.put( ""firstname"", firstName );"
252671,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,303,,"        Results r = em.searchCollection( em.getApplicationRef(), ""users"", query );"
252672,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,448,,"        em.removeFromCollection(user1, ""groups"", group);"
252673,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,465,,"        properties.put( ""title"", ""testTitle"" );"
252674,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,467,,"        properties.put( ""name"", groupName );"
252675,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,667,,"        properties.put( ""keywords"", ""blah,test,game"" );"
252676,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,667,,"        properties.put( ""keywords"", ""blah,test,game"" );"
252677,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,668,,"        properties.put( ""title"", ""Solitaire"" );"
252678,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,686,,"        Results r = em.searchCollection( em.getApplicationRef(), ""orquerygames"", query );"
252679,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,749,,"        Entity game1 = em.create( ""game"", properties );"
252680,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,764,,"        Results r = em.searchCollection( em.getApplicationRef(), ""games"", query );"
252681,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,1009,,"            Entity created = em.create( ""objects"", properties );"
252682,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,1091,,"            properties.put( ""index"", i );"
252683,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,1092,,"            Entity created = em.create( ""page"", properties );"
252684,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,1107,,"            r = em.searchCollection( em.getApplicationRef(), ""pages"", query );"
252685,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,1311,,"        Entity saved = em.create( ""test"", root );"
252686,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,1318,,"        results = em.searchCollection( em.getApplicationRef(), ""tests"", query );"
252687,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CollectionIT.java,1788,,"        user.setEmail( ""foobar@usergrid.org"" );"
252688,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CounterIT.java,122,,"            event.addCounter( ""visits"", 1 );"
252689,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CounterIT.java,205,,"        if ( counts.get( ""admin.logins"" ) == null ) {"
252690,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/CountingMutatorIT.java,73,,"        properties.put( ""name"", ""testuser"" );"
252691,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityConnectionsIT.java,61,,"        em.createConnection( firstUserEntity, ""likes"", secondUserEntity );"
252692,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityConnectionsIT.java,88,,"        properties.put( ""name"", ""Dylan"" );"
252693,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityConnectionsIT.java,177,,"        logger.info( ""----------------------------------------------------"" );"
252694,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityConnectionsIT.java,247,,"        Entity fourpeaks = em.create( ""restaurant"", data );"
252695,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityConnectionsIT.java,326,,"        assertEquals( ""user"", res.getEntity().getType() ); // fred is a user"
252696,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityDictionaryIT.java,66,,"        em.addToDictionary( em.getApplicationRef(), ""oauthproviders"", ""google"", provider );"
252697,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityDictionaryIT.java,66,,"        em.addToDictionary( em.getApplicationRef(), ""oauthproviders"", ""google"", provider );"
252698,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityDictionaryIT.java,97,,"        em.addToDictionary( user, ""credentials"", ""plaintext"", credentials );"
252699,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,67,,"        properties.put( ""username"", ""edanuff"" );"
252700,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,67,,"        properties.put( ""username"", ""edanuff"" );"
252701,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,68,,"        properties.put( ""email"", ""ed@anuff.com"" );"
252702,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,68,,"        properties.put( ""email"", ""ed@anuff.com"" );"
252703,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,70,,"        Entity user = em.create( ""user"", properties );"
252704,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,80,,"        EntityRef userRef = em.getAlias( new SimpleEntityRef( ""application"", applicationId ), ""users"", ""edanuff"" );"
252705,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,127,,"            properties.put( ""name"", ""thing"" + i );"
252706,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,127,,"            properties.put( ""name"", ""thing"" + i );"
252707,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,195,,"        em.addToDictionary( thing, ""stuff"", ""alpha"" );"
252708,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,195,,"        em.addToDictionary( thing, ""stuff"", ""alpha"" );"
252709,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,196,,"        em.addToDictionary( thing, ""stuff"", ""beta"" );"
252710,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,197,,"        em.addToDictionary( thing, ""stuff"", ""gamma"" );"
252711,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,213,,"        em.addToDictionary( thing, ""test"", ""foo"", ""bar"" );"
252712,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,213,,"        em.addToDictionary( thing, ""test"", ""foo"", ""bar"" );"
252713,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,267,,"        String name = ""test.thing"" + UUIDUtils.newTimeUUID();"
252714,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,273,,"        logger.info( ""Starting entity create"" );"
252715,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,275,,"        logger.info( ""Entity created"" );"
252716,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,391,,"        organizationEntity.setPath( ""testCounterOrg"" );"
252717,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityManagerIT.java,476,,"        properties.put( ""name"", ""testuser"" );"
252718,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityTest.java,66,,"        properties.put( ""foo"", ""bar"" );"
252719,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/EntityTest.java,66,,"        properties.put( ""foo"", ""bar"" );"
252720,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,53,,"            put(""name"", ""norwest"");"
252721,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,54,,"            put(""location"", new LinkedHashMap<String, Object>() {{"
252722,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,55,,"                put(""latitude"", -33.746369);"
252723,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,56,,"                put(""longitude"", 150.952183);"
252724,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,60,,"            put(""type"", ""store"");"
252725,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,136,,"            put(""username"", ""edanuff"");"
252726,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,136,,"            put(""username"", ""edanuff"");"
252727,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,137,,"            put(""email"", ""ed@anuff.com"");"
252728,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,137,,"            put(""email"", ""ed@anuff.com"");"
252729,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,143,,"        Entity user = em.create(""user"", properties);"
252730,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,148,,"        Query query = Query.fromQL(""select * where location within "" + Integer.MAX_VALUE + "" of 0, 0"");"
252731,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,149,,"        Results listResults = em.searchCollection(em.getApplicationRef(), ""users"", query);"
252732,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,248,,"        assertTrue(entity.getMetadata(""distance"")!=null);"
252733,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,332,,"        Results listResults = em.searchCollection(em.getApplicationRef(), ""stores"", query);"
252734,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,411,,"        Query query = Query.fromQL(""select * where location within "" + NEARBY_RADIUS + "" of """
252735,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,415,,"        assertEquals(""Results within "" + NEARBY_RADIUS + ""m from center"", 0, listResults.size());"
252736,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoIT.java,415,,"        assertEquals(""Results within "" + NEARBY_RADIUS + ""m from center"", 0, listResults.size());"
252737,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoQueryBooleanTest.java,57,,"            put( ""username"", ""ed"" );"
252738,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoQueryBooleanTest.java,59,,"            put( ""email"", ""ed@example.com"" );"
252739,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoQueryBooleanTest.java,60,,"            put( ""location"", new LinkedHashMap<String, Object>() {{"
252740,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoQueryBooleanTest.java,61,,"                put(""latitude"", 37.776753 );"
252741,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoQueryBooleanTest.java,62,,"                put(""longitude"", -122.407846 );"
252742,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoQueryBooleanTest.java,66,,"        Entity user1 = em.create( ""user"", properties );"
252743,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoQueryBooleanTest.java,90,,"        Results listResults = em.searchCollection( em.getApplicationRef(), ""users"", query );"
252744,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/GeoQueryBooleanTest.java,124,,"                add( new LinkedHashMap<String, Object>() {{ put(""name"", ""fred""); }});"
252745,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/IndexIT.java,58,,"            properties.put( ""name"", name );"
252746,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/IndexIT.java,68,,"        Results r = em.searchCollection( em.getApplicationRef(), ""items"", query );"
252747,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/IndexIT.java,288,,"        entity1.put(""name"", ""name_1"");"
252748,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/IndexIT.java,289,,"        entity1.put(""status"", ""pickled"");"
252749,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/IndexIT.java,289,,"        entity1.put(""status"", ""pickled"");"
252750,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/IndexIT.java,291,,"        em.create(""names"", entity1);"
252751,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/IndexIT.java,344,,"        Query query = Query.fromQL( ""select * where status = 'pickled'"" );"
252752,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/IndexIT.java,476,,"            put(""data"", new HashMap() {{"
252753,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/IndexIT.java,478,,"                put(""rando"", ""bar"");"
252754,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/IndexIT.java,478,,"                put(""rando"", ""bar"");"
252755,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/PathQueryIT.java,48,,"            properties.put( ""index"", i );"
252756,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/PathQueryIT.java,61,,"                em.addToCollection( user, ""devices"", created );"
252757,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/PathQueryIT.java,76,,"        userQuery.setCollection( ""users"" );"
252758,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/PerformanceEntityWriteTest.java,106,,"            addToCollectionEntity.put( ""key"", i );"
252759,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/PermissionsIT.java,140,,"        em.createGroupRole( group.getUuid(), ""admin"", 0 );"
252760,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/PermissionsIT.java,163,,"        em.grantRolePermission( ""admin"", ""groups:access:*"" );"
252761,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/RebuildIndexTest.java,83,,"        final UUID appId = setup.createApplication(""org_"" + rand, ""app_"" + rand);"
252762,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/RebuildIndexTest.java,83,,"        final UUID appId = setup.createApplication(""org_"" + rand, ""app_"" + rand);"
252763,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/RebuildIndexTest.java,121,,"                logger.info(""Created {} entities"", i);"
252764,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/RebuildIndexTest.java,130,,"        logger.debug(""Read the data"");"
252765,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/RebuildIndexTest.java,141,,"        logger.debug(""Reading data, should fail this time "");"
252766,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/RebuildIndexTest.java,159,,"        logger.info(""Rebuilt index"");"
252767,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/RebuildIndexTest.java,193,,"            put(""name"", ""enzo"");"
252768,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/RebuildIndexTest.java,194,,"            put(""color"", ""orange"");"
252769,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/RebuildIndexTest.java,198,,"            put(""color"", ""grey"");"
252770,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/RebuildIndexTest.java,205,,"        Entity cat1 = em.create(""cat"", cat1map);"
252771,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/RebuildIndexTest.java,219,,"                em.createConnection(entity, ""herds"", cat1);"
252772,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/SchemaTest.java,73,,"        dumpSetNames( ""user"" );"
252773,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/SchemaTest.java,103,,"        assertFalse( Schema.getDefaultSchema().hasProperty( ""things"", """" ) );"
252774,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/cassandra/EntityManagerFactoryImplIT.java,229,,"            properties.put( ""name"", ""thing"" + i );"
252775,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/cassandra/EntityManagerFactoryImplIT.java,229,,"            properties.put( ""name"", ""thing"" + i );"
252776,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/query/IteratingQueryIT.java,291,,"        logger.info( ""Writing {} entities."", size );"
252777,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/query/IteratingQueryIT.java,295,,"            entity.put(""name"", String.valueOf(i));"
252778,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/query/IteratingQueryIT.java,305,,"        logger.info( ""Writes took {} ms"", stop - start );"
252779,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/query/IteratingQueryIT.java,331,,"        logger.info( ""Query took {} ms to return {} entities"", stop - start, count );"
252780,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/query/IteratingQueryIT.java,362,,"            entity.put( ""intersect"", intersect );"
252781,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/query/IteratingQueryIT.java,433,,"            entity.put( ""intersect2"", intersect2 );"
252782,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/query/IteratingQueryIT.java,741,,"            entity.put( ""index"", i );"
252783,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/query/IteratingQueryIT.java,751,,"        Query query = Query.fromQL( ""select * where index >= ""+ startValue + "" order by index desc"" );"
252784,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/query/IteratingQueryIT.java,751,,"        Query query = Query.fromQL( ""select * where index >= ""+ startValue + "" order by index desc"" );"
252785,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/persistence/query/IteratingQueryIT.java,1163,,"                boolean o1Boolean = ( Boolean ) o1.getProperty( ""boolean"" );"
252786,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/utils/TestInflector.java,34,,"        testSingularize( ""users"", ""user"" );"
252787,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/utils/TestInflector.java,34,,"        testSingularize( ""users"", ""user"" );"
252788,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/utils/TestInflector.java,35,,"        testSingularize( ""groups"", ""group"" );"
252789,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/utils/TestInflector.java,35,,"        testSingularize( ""groups"", ""group"" );"
252790,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/utils/TestInflector.java,36,,"        testSingularize( ""entities"", ""entity"" );"
252791,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/utils/TestInflector.java,36,,"        testSingularize( ""entities"", ""entity"" );"
252792,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/utils/TestInflector.java,37,,"        testSingularize( ""messages"", ""message"" );"
252793,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/utils/TestInflector.java,37,,"        testSingularize( ""messages"", ""message"" );"
252794,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/utils/TestInflector.java,38,,"        testSingularize( ""activities"", ""activity"" );"
252795,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/utils/TestInflector.java,38,,"        testSingularize( ""activities"", ""activity"" );"
252796,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/utils/TestInflector.java,39,,"        testSingularize( ""binaries"", ""binary"" );"
252797,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/utils/TestInflector.java,39,,"        testSingularize( ""binaries"", ""binary"" );"
252798,./TargetProjects/usergrid/stack/core/src/test/java/org/apache/usergrid/utils/TestInflector.java,40,,"        testSingularize( ""data"", ""data"" );"
252799,./TargetProjects/usergrid/stack/corepersistence/cache/src/main/java/org/apache/usergrid/persistence/cache/impl/ScopedCacheSerializationImpl.java,59,,"    private static final Collection<String> SCOPED_CACHE_PARTITION_KEYS = Collections.singletonList(""key"");"
252800,./TargetProjects/usergrid/stack/corepersistence/cache/src/main/java/org/apache/usergrid/persistence/cache/impl/ScopedCacheSerializationImpl.java,60,,"    private static final Collection<String> SCOPED_CACHE_COLUMN_KEYS = Collections.singletonList(""column1"");"
252801,./TargetProjects/usergrid/stack/corepersistence/cache/src/main/java/org/apache/usergrid/persistence/cache/impl/ScopedCacheSerializationImpl.java,112,,"        Preconditions.checkNotNull(scope, ""scope is required"");"
252802,./TargetProjects/usergrid/stack/corepersistence/cache/src/test/java/org/apache/usergrid/persistence/cache/ScopedCacheTest.java,56,,"        CacheScope scope = new CacheScope( new SimpleId( ""application"" ) );"
252803,./TargetProjects/usergrid/stack/corepersistence/cache/src/test/java/org/apache/usergrid/persistence/cache/ScopedCacheTest.java,58,,"        assertNotNull(""should get a cache"", cache);"
252804,./TargetProjects/usergrid/stack/corepersistence/cache/src/test/java/org/apache/usergrid/persistence/cache/ScopedCacheTest.java,61,,"            put(""field1"", ""value1"");"
252805,./TargetProjects/usergrid/stack/corepersistence/cache/src/test/java/org/apache/usergrid/persistence/cache/ScopedCacheTest.java,61,,"            put(""field1"", ""value1"");"
252806,./TargetProjects/usergrid/stack/corepersistence/cache/src/test/java/org/apache/usergrid/persistence/cache/ScopedCacheTest.java,63,,"        cache.put(""item"", item, 60);"
252807,./TargetProjects/usergrid/stack/corepersistence/cache/src/test/java/org/apache/usergrid/persistence/cache/ScopedCacheTest.java,66,,"        assertNotNull( ""should get back item"", retrievedItem );"
252808,./TargetProjects/usergrid/stack/corepersistence/cache/src/test/java/org/apache/usergrid/persistence/cache/ScopedCacheTest.java,80,,"            put(""field"", ""a_value"");"
252809,./TargetProjects/usergrid/stack/corepersistence/collection/src/main/java/org/apache/usergrid/persistence/collection/mvcc/stage/write/WriteCommit.java,168,,"            logger.error( ""Failed to execute write asynchronously "", e );"
252810,./TargetProjects/usergrid/stack/corepersistence/collection/src/main/java/org/apache/usergrid/persistence/collection/serialization/impl/MvccEntitySerializationStrategyImpl.java,100,,"        Preconditions.checkNotNull( applicationScope, ""applicationScope is required"" );"
252811,./TargetProjects/usergrid/stack/corepersistence/collection/src/main/java/org/apache/usergrid/persistence/collection/serialization/impl/MvccEntitySerializationStrategyImpl.java,124,,"        Preconditions.checkNotNull( maxVersion, ""version is required"" );"
252812,./TargetProjects/usergrid/stack/corepersistence/collection/src/main/java/org/apache/usergrid/persistence/collection/serialization/impl/MvccEntitySerializationStrategyImpl.java,237,,"        Preconditions.checkNotNull( entityId, ""entity id is required"" );"
252813,./TargetProjects/usergrid/stack/corepersistence/collection/src/main/java/org/apache/usergrid/persistence/collection/serialization/impl/MvccEntitySerializationStrategyV3Impl.java,108,,"        Preconditions.checkNotNull( applicationScope, ""applicationScope is required"" );"
252814,./TargetProjects/usergrid/stack/corepersistence/collection/src/main/java/org/apache/usergrid/persistence/collection/serialization/impl/MvccEntitySerializationStrategyV3Impl.java,133,,"        Preconditions.checkNotNull( maxVersion, ""version is required"" );"
252815,./TargetProjects/usergrid/stack/corepersistence/collection/src/main/java/org/apache/usergrid/persistence/collection/serialization/impl/MvccEntitySerializationStrategyV3Impl.java,241,,"        Preconditions.checkNotNull( entityId, ""entity id is required"" );"
252816,./TargetProjects/usergrid/stack/corepersistence/collection/src/main/java/org/apache/usergrid/persistence/collection/serialization/impl/UniqueValueSerializationStrategyImpl.java,132,,"                .value(""key"", partitionKey)"
252817,./TargetProjects/usergrid/stack/corepersistence/collection/src/main/java/org/apache/usergrid/persistence/collection/serialization/impl/UniqueValueSerializationStrategyImpl.java,133,,"                .value(""column1"", serializeUniqueValueColumn(ev))"
252818,./TargetProjects/usergrid/stack/corepersistence/collection/src/main/java/org/apache/usergrid/persistence/collection/serialization/impl/UniqueValueSerializationStrategyV1Impl.java,53,,"    private static final Collection<String> UNIQUE_VALUES_PARTITION_KEYS = Collections.singletonList(""key"");"
252819,./TargetProjects/usergrid/stack/corepersistence/collection/src/main/java/org/apache/usergrid/persistence/collection/serialization/impl/UniqueValueSerializationStrategyV1Impl.java,54,,"    private static final Collection<String> UNIQUE_VALUES_COLUMN_KEYS = Collections.singletonList(""column1"");"
252820,./TargetProjects/usergrid/stack/corepersistence/collection/src/main/java/org/apache/usergrid/persistence/collection/serialization/impl/UniqueValueSerializationStrategyV2Impl.java,50,,"    private static final Collection<String> UNIQUE_VALUES_PARTITION_KEYS = Collections.singletonList(""key"");"
252821,./TargetProjects/usergrid/stack/corepersistence/collection/src/main/java/org/apache/usergrid/persistence/collection/serialization/impl/UniqueValueSerializationStrategyV2Impl.java,51,,"    private static final Collection<String> UNIQUE_VALUES_COLUMN_KEYS = Collections.singletonList(""column1"");"
252822,./TargetProjects/usergrid/stack/corepersistence/collection/src/main/java/org/apache/usergrid/persistence/collection/uniquevalues/UniqueValueActor.java,94,,"                	actorSystemManager.publishToLocalRegion( ""content"", new Reservation( res ), getSelf() );"
252823,./TargetProjects/usergrid/stack/corepersistence/collection/src/main/java/org/apache/usergrid/persistence/collection/uniquevalues/UniqueValuesServiceImpl.java,319,,"        if ( akka.get( ""actor"" ) == null ) {"
252824,./TargetProjects/usergrid/stack/corepersistence/collection/src/main/java/org/apache/usergrid/persistence/collection/uniquevalues/UniqueValuesServiceImpl.java,324,,"                put( ""deployment"", deploymentMap );"
252825,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/EntityCollectionManagerIT.java,105,,"        ApplicationScope context = new ApplicationScopeImpl( new SimpleId( ""organization"" ) );"
252826,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/EntityCollectionManagerIT.java,107,,"        Entity newEntity = new Entity( new SimpleId( ""test"" ) );"
252827,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/EntityCollectionManagerIT.java,167,,"        assertNotNull( ""Id was assigned"", createReturned.getId() );"
252828,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/EntityCollectionManagerIT.java,168,,"        assertNotNull( ""Version was assigned"", createReturned.getVersion() );"
252829,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/EntityCollectionManagerIT.java,175,,"        assertEquals( ""Same value"", createReturned, loadReturned );"
252830,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/EntityCollectionManagerIT.java,217,,"        newEntity.setField( new IntegerField( ""counter"", 1 ) );"
252831,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/EntityCollectionManagerIT.java,804,,"        entity1.setField( new StringField( ""unique_id"", ""1"", true ) );"
252832,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/mvcc/changelog/ChangeLogGeneratorImplTest.java,63,,"        final Id entityId = new SimpleId( ""test"" );"
252833,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/mvcc/changelog/ChangeLogGeneratorImplTest.java,66,,"        e1.setField( new StringField( ""name"", ""name1"" ) );"
252834,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/mvcc/changelog/ChangeLogGeneratorImplTest.java,67,,"        e1.setField( new IntegerField( ""count"", 1 ) );"
252835,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/mvcc/changelog/ChangeLogGeneratorImplTest.java,68,,"        e1.setField( new BooleanField( ""single"", true ) );"
252836,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/mvcc/changelog/ChangeLogGeneratorImplTest.java,74,,"        e2.setField( new StringField( ""name"", ""name2"" ) );"
252837,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/mvcc/changelog/ChangeLogGeneratorImplTest.java,76,,"        e2.setField( new StringField( ""nickname"", ""buddy"" ) );"
252838,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/mvcc/changelog/ChangeLogGeneratorImplTest.java,76,,"        e2.setField( new StringField( ""nickname"", ""buddy"" ) );"
252839,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/mvcc/changelog/ChangeLogGeneratorImplTest.java,77,,"        e2.setField( new BooleanField( ""cool"", false ) );"
252840,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/mvcc/entity/impl/MvccEntityImplTest.java,50,,"        new MvccEntityImpl( new SimpleId( ""test"" ), null,  MvccEntity.Status.COMPLETE, Optional.of( new Entity() ) );"
252841,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/mvcc/entity/impl/MvccLogEntryImplTest.java,28,,"        new MvccLogEntryImpl( new SimpleId( ""test"" ), null, Stage.ACTIVE, MvccLogEntry.State.COMPLETE );"
252842,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/mvcc/stage/write/WriteStartTest.java,85,,"        assertEquals( ""id correct"", entity.getId(), entry.getEntityId() );"
252843,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/mvcc/stage/write/WriteUniqueVerifyIT.java,105,,"        entity.setField(new StringField(""name"", ""Aston Martin Vanquish"", true));"
252844,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/mvcc/stage/write/WriteUniqueVerifyIT.java,106,,"        entity.setField(new StringField(""identifier"", ""v12"", true));"
252845,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/mvcc/stage/write/WriteUniqueVerifyIT.java,107,,"        entity.setField(new IntegerField(""top_speed_mph"", 200));"
252846,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/serialization/impl/MvccEntitySerializationStrategyImplTest.java,95,,"        final Id organizationId = new SimpleId( ""organization"" );"
252847,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/serialization/impl/MvccEntitySerializationStrategyImplTest.java,102,,"        final String type = ""test"";"
252848,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/serialization/impl/MvccEntitySerializationStrategyImplTest.java,140,,"        assertEquals( ""Mvcc entities are the same"", saved, returned );"
252849,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/serialization/impl/MvccEntitySerializationStrategyImplTest.java,206,,"        final Id applicationId = new SimpleId( ""application"" );"
252850,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/serialization/impl/MvccLogEntrySerializationStrategyImplTest.java,87,,"        final Id applicationId = new SimpleId( ""application"" );"
252851,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/serialization/impl/MvccLogEntrySerializationStrategyImplTest.java,92,,"        final Id id = new SimpleId( ""test"" );"
252852,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/serialization/impl/MvccLogEntrySerializationStrategyImplTest.java,334,,"            .delete( new ApplicationScopeImpl( new SimpleId( ""organization"" ) ), null, UUIDGenerator.newTimeUUID() );"
252853,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/serialization/impl/UniqueFieldEntrySerializerTest.java,53,,"        doTest( new StringField( ""test"", ""value"", true ) );"
252854,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/serialization/impl/UniqueValueSerializationStrategyImplTest.java,92,,"                new ApplicationScopeImpl( new SimpleId( ""organization"" ) );"
252855,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/serialization/impl/UniqueValueSerializationStrategyImplTest.java,94,,"        IntegerField field = new IntegerField( ""count"", 5 );"
252856,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/serialization/impl/UniqueValueSerializationStrategyImplTest.java,95,,"        Id entityId = new SimpleId( UUIDGenerator.newTimeUUID(), ""entity"" );"
252857,./TargetProjects/usergrid/stack/corepersistence/collection/src/test/java/org/apache/usergrid/persistence/collection/serialization/impl/migration/AbstractMvccEntityDataMigrationV1ToV3ImplTest.java,133,,"        assertEquals( ""Same entity"", entity1, returned1 );"
252858,./TargetProjects/usergrid/stack/corepersistence/common/src/main/java/org/apache/usergrid/persistence/core/datastax/CQLUtils.java,114,,"                cacheValue.put(""keys"", ""ALL"");"
252859,./TargetProjects/usergrid/stack/corepersistence/common/src/main/java/org/apache/usergrid/persistence/core/datastax/CQLUtils.java,114,,"                cacheValue.put(""keys"", ""ALL"");"
252860,./TargetProjects/usergrid/stack/corepersistence/common/src/main/java/org/apache/usergrid/persistence/core/datastax/CQLUtils.java,115,,"                cacheValue.put(""rows_per_partition"", ""ALL"");"
252861,./TargetProjects/usergrid/stack/corepersistence/common/src/main/java/org/apache/usergrid/persistence/core/datastax/CQLUtils.java,120,,"                cacheValue.put(""rows_per_partition"", ""NONE"");"
252862,./TargetProjects/usergrid/stack/corepersistence/common/src/test/java/org/apache/usergrid/persistence/core/datastax/CQLUtilsTest.java,58,,"        columns.put(""key"", DataType.Name.BLOB);"
252863,./TargetProjects/usergrid/stack/corepersistence/common/src/test/java/org/apache/usergrid/persistence/core/datastax/CQLUtilsTest.java,59,,"        columns.put(""column1"", DataType.Name.TEXT);"
252864,./TargetProjects/usergrid/stack/corepersistence/common/src/test/java/org/apache/usergrid/persistence/core/migration/data/DataMigrationManagerImplTest.java,72,,"        when( plugin1.getName() ).thenReturn( ""plugin1"" );"
252865,./TargetProjects/usergrid/stack/corepersistence/common/src/test/java/org/apache/usergrid/persistence/core/migration/data/DataMigrationManagerImplTest.java,77,,"        when( plugin2.getName() ).thenReturn( ""plugin2"" );"
252866,./TargetProjects/usergrid/stack/corepersistence/common/src/test/java/org/apache/usergrid/persistence/core/migration/data/VersionedMigrationSetTest.java,65,,"            fail( ""I should throw an exception"" );"
252867,./TargetProjects/usergrid/stack/corepersistence/common/src/test/java/org/apache/usergrid/persistence/core/rx/ExceptionBehaviorTest.java,43,,"            throw new TestException( ""I throw and exception"" );"
252868,./TargetProjects/usergrid/stack/corepersistence/common/src/test/java/org/apache/usergrid/persistence/core/rx/OrderedMergeTest.java,71,,"                fail( ""An error was thrown "" );"
252869,./TargetProjects/usergrid/stack/corepersistence/common/src/test/java/org/apache/usergrid/persistence/core/rx/OrderedMergeTest.java,77,,"                logger.info( ""onNext invoked with {}"", integer );"
252870,./TargetProjects/usergrid/stack/corepersistence/common/src/test/java/org/apache/usergrid/persistence/core/rx/OrderedMergeTest.java,89,,"            assertEquals( ""Same element expected"", expected.get( i ), results.get( i ) );"
252871,./TargetProjects/usergrid/stack/corepersistence/graph/src/main/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/impl/ShardedEdgeSerializationImpl.java,118,,"        ValidationUtils.verifyTimeUuid( timestamp, ""timestamp"" );"
252872,./TargetProjects/usergrid/stack/corepersistence/graph/src/main/java/org/apache/usergrid/persistence/graph/serialization/util/GraphValidation.java,71,,"        Preconditions.checkNotNull( search, ""search is required"" );"
252873,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,90,,"        Edge edge = createEdge( ""source"", ""test"", ""target"" );"
252874,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,90,,"        Edge edge = createEdge( ""source"", ""test"", ""target"" );"
252875,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,90,,"        Edge edge = createEdge( ""source"", ""test"", ""target"" );"
252876,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,103,,"        assertEquals( ""Correct edge returned"", edge, returned );"
252877,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,106,,"        search = createSearchByEdge( edge.getSourceNode(), edge.getType() + ""invalid"", edge.getTimestamp(), null );"
252878,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,113,,"        assertNull( ""Invalid type should not be returned"", returned );"
252879,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,259,,"        assertFalse( ""No more edges"", returned.hasNext() );"
252880,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,599,,"        assertNull( ""No edge returned"", returned );"
252881,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,680,,"        Id targetId2 = new SimpleId( ""target2"" );"
252882,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,691,,"        Edge test2TargetEdge = createEdge( sourceId, ""test2"", targetId1, System.currentTimeMillis() );"
252883,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,704,,"        assertEquals( ""Edges correct"", ""test"", results.next() );"
252884,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,718,,"        assertEquals( ""Types correct"", targetId1.getType(), results.next() );"
252885,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,722,,"        assertFalse( ""No results"", results.hasNext() );"
252886,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,742,,"        Id sourceId2 = new SimpleId( ""source2"" );"
252887,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,1443,,"        assertEquals( ""Edge found"", edge2, results.next() );"
252888,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,2123,,"        Edge testTargetEdge = createEdge( sourceId, ""test1edge1"", targetId, System.currentTimeMillis() );"
252889,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,2127,,"        Edge testTarget2Edge = createEdge( sourceId, ""test1edge2"", targetId, System.currentTimeMillis() );"
252890,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,2132,,"        Edge test2TargetEdge = createEdge( sourceId, ""test2edge1"", targetId, System.currentTimeMillis() );"
252891,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerIT.java,2366,,"        assertEquals( ""Correct edges returned"", edge3, descending.get( 0 ) );"
252892,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerLoadTest.java,91,,"        scope = new ApplicationScopeImpl( IdGenerator.createId( UUID.fromString( uuidString ), ""test"" ) );"
252893,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/GraphManagerStressTest.java,95,,"                Edge edge = createEdge( ""source"", ""test"", ""target"" );"
252894,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/impl/NodeDeleteListenerTest.java,125,,"        Edge edge = createEdge( ""source"", ""test"", ""target"" );"
252895,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/impl/NodeDeleteListenerTest.java,125,,"        Edge edge = createEdge( ""source"", ""test"", ""target"" );"
252896,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/impl/NodeDeleteListenerTest.java,125,,"        Edge edge = createEdge( ""source"", ""test"", ""target"" );"
252897,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/impl/stage/EdgeMetaRepairTest.java,103,,"        final Id targetId = IdGenerator.createId( ""target"" );"
252898,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/impl/stage/EdgeMetaRepairTest.java,104,,"        final String test = ""test"";"
252899,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/impl/stage/EdgeMetaRepairTest.java,115,,"        MarkedEdge edge = createEdge( ""source"", ""test"", ""target"" );"
252900,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/impl/stage/EdgeMetaRepairTest.java,133,,"        assertEquals( ""Single subtype should be removed"", 0, value );"
252901,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/impl/stage/EdgeMetaRepairTest.java,140,,"        assertFalse( ""No edge types exist"", edgeTypes.hasNext() );"
252902,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/impl/stage/EdgeMetaRepairTest.java,180,,"        assertEquals( ""No subtypes removed, edges exist"", 3, value );"
252903,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/EdgeMetadataSerializationTest.java,98,,"        final Edge edge1 = createEdge( ""source"", ""edge"", ""target"" );"
252904,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/EdgeMetadataSerializationTest.java,98,,"        final Edge edge1 = createEdge( ""source"", ""edge"", ""target"" );"
252905,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/EdgeMetadataSerializationTest.java,98,,"        final Edge edge1 = createEdge( ""source"", ""edge"", ""target"" );"
252906,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/EdgeMetadataSerializationTest.java,102,,"        final Edge edge2 = createEdge( sourceId, ""edge"", IdGenerator.createId( ""target2"" ) );"
252907,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/EdgeMetadataSerializationTest.java,104,,"        final Edge edge3 = createEdge( sourceId, ""edge2"", IdGenerator.createId( ""target3"" ) );"
252908,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/EdgeMetadataSerializationTest.java,104,,"        final Edge edge3 = createEdge( sourceId, ""edge2"", IdGenerator.createId( ""target3"" ) );"
252909,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/EdgeMetadataSerializationTest.java,138,,"        final Edge edge3 = createEdge( IdGenerator.createId( ""source2"" ), ""edge2"", targetId );"
252910,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/EdgeSerializationTest.java,123,,"        final MarkedEdge edge1 = createEdge( ""source"", ""edge1"", ""target"" );"
252911,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/EdgeSerializationTest.java,123,,"        final MarkedEdge edge1 = createEdge( ""source"", ""edge1"", ""target"" );"
252912,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/EdgeSerializationTest.java,123,,"        final MarkedEdge edge1 = createEdge( ""source"", ""edge1"", ""target"" );"
252913,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/EdgeSerializationTest.java,129,,"        final MarkedEdge edge2 = createEdge( sourceId, ""edge2"", targetId );"
252914,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/EdgeSerializationTest.java,172,,"        final MarkedEdge edge1 = createEdge( ""source"", ""edge"", ""target"", 0 );"
252915,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/NodeSerializationTest.java,89,,"        final Id nodeId = IdGenerator.createId( ""test"" );"
252916,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/migration/EdgeDataMigrationImplTest.java,168,,"        assertTrue( ""Edge type present"", source1Edges.contains( ""test"" ) );"
252917,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/EdgeShardSerializationTest.java,97,,"        final DirectedEdgeMeta sourceEdgeMeta = DirectedEdgeMeta.fromSourceNodeTargetType( now, ""edgeType"", ""subType"" );"
252918,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/EdgeShardSerializationTest.java,97,,"        final DirectedEdgeMeta sourceEdgeMeta = DirectedEdgeMeta.fromSourceNodeTargetType( now, ""edgeType"", ""subType"" );"
252919,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/NodeShardAllocationTest.java,144,,"        final Id nodeId = IdGenerator.createId( ""test"" );"
252920,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/NodeShardAllocationTest.java,145,,"        final String type = ""type"";"
252921,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/NodeShardAllocationTest.java,146,,"        final String subType = ""subType"";"
252922,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/NodeShardCacheTest.java,218,,"        assertSame( ""min shard expected"", minShardGroup, groups.next() );"
252923,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/ShardEntryGroupTest.java,48,,"        assertTrue( ""Shard added"", result );"
252924,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/ShardEntryGroupTest.java,76,,"        assertTrue( "" Shard added"", result );"
252925,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/ShardEntryGroupTest.java,131,,"        assertFalse( ""Merge cannot be run within min time"","
252926,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/ShardEntryGroupTest.java,269,,"        assertEquals( ""Shard size correct"", 2, readShards.size() );"
252927,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/impl/ShardEntryGroupIteratorTest.java,88,,"        assertNotNull( ""Group returned"", group );"
252928,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/impl/ShardEntryGroupIteratorTest.java,96,,"        assertEquals( ""Min shard present"", 1, readShards.size() );"
252929,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/impl/ShardEntryGroupIteratorTest.java,179,,"        assertEquals( ""Both shards present"", 2, readShards.size() );"
252930,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/impl/ShardGroupDeletionImplTest.java,140,,"        assertTrue( ""this should return false for our test to succeed"", shard0.isMinShard() );"
252931,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/impl/comparators/SourceDirectedEdgeDescendingComparatorTest.java,47,,"        final Id sourceId = IdGenerator.createId( ""source"" );"
252932,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/impl/comparators/SourceDirectedEdgeDescendingComparatorTest.java,48,,"        final Id targetId = IdGenerator.createId( ""target"" );"
252933,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/impl/comparators/SourceDirectedEdgeDescendingComparatorTest.java,49,,"        final String type = ""type"";"
252934,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/impl/comparators/TargetDirectedEdgeDescendingComparatorTest.java,47,,"        final Id sourceId = IdGenerator.createId( ""source"" );"
252935,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/impl/comparators/TargetDirectedEdgeDescendingComparatorTest.java,48,,"        final Id targetId = IdGenerator.createId( ""target"" );"
252936,./TargetProjects/usergrid/stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/impl/comparators/TargetDirectedEdgeDescendingComparatorTest.java,49,,"        final String type = ""type"";"
252937,./TargetProjects/usergrid/stack/corepersistence/map/src/main/java/org/apache/usergrid/persistence/map/impl/MapSerializationImpl.java,54,,"    private static final Collection<String> MAP_ENTRIES_PARTITION_KEYS = Collections.singletonList(""key"");"
252938,./TargetProjects/usergrid/stack/corepersistence/map/src/main/java/org/apache/usergrid/persistence/map/impl/MapSerializationImpl.java,55,,"    private static final Collection<String> MAP_ENTRIES_COLUMN_KEYS = Collections.singletonList(""column1"");"
252939,./TargetProjects/usergrid/stack/corepersistence/map/src/main/java/org/apache/usergrid/persistence/map/impl/MapSerializationImpl.java,60,,"            put( ""value"", DataType.Name.BLOB ); }};"
252940,./TargetProjects/usergrid/stack/corepersistence/map/src/test/java/org/apache/usergrid/persistence/map/MapManagerTest.java,75,,"        final String key = ""key"";"
252941,./TargetProjects/usergrid/stack/corepersistence/map/src/test/java/org/apache/usergrid/persistence/map/MapManagerTest.java,76,,"        final String value = ""value"";"
252942,./TargetProjects/usergrid/stack/corepersistence/map/src/test/java/org/apache/usergrid/persistence/map/MapManagerTest.java,90,,"        final String key1 = ""key1"";"
252943,./TargetProjects/usergrid/stack/corepersistence/map/src/test/java/org/apache/usergrid/persistence/map/MapManagerTest.java,91,,"        final String key2 = ""key2"";;"
252944,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/main/java/org/apache/usergrid/persistence/index/utils/MapUtils.java,44,,"    @SuppressWarnings(""unchecked"")"
252945,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityIndexTest.java,95,,"        appId = new SimpleId(UUID.randomUUID(), ""application"" );"
252946,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityIndexTest.java,107,,"        final String entityType = ""thing"";"
252947,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityIndexTest.java,108,,"        IndexEdge searchEdge = new IndexEdgeImpl( appId, ""things"", SearchEdge.NodeType.SOURCE, 1 );"
252948,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityIndexTest.java,111,,"        insertJsonBlob( entityType, searchEdge, ""/sample-large.json"", 101, 0 );"
252949,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityIndexTest.java,492,,"        Id ownerId = new SimpleId( ""owner"" );"
252950,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityIndexTest.java,496,,"        IndexEdge indexSCope = new IndexEdgeImpl( ownerId, ""user"", SearchEdge.NodeType.SOURCE, 10 );"
252951,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityIndexTest.java,504,,"            put( ""username"", ""edanuff"" );"
252952,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityIndexTest.java,504,,"            put( ""username"", ""edanuff"" );"
252953,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityIndexTest.java,505,,"            put( ""email"", ""ed@anuff.com"" );"
252954,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityIndexTest.java,756,,"            put( ""string"", ""I am a search string"" );"
252955,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityIndexTest.java,808,,"        final Entity first = new Entity( ""search"" );"
252956,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityIndexTest.java,884,,"        IndexEdge indexScope1 = new IndexEdgeImpl( ownerId, ""searches"", SearchEdge.NodeType.SOURCE, 10 );"
252957,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityToMapConverterTest.java,57,,"        Entity entity = new Entity( ""test"" );"
252958,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityToMapConverterTest.java,64,,"        final ApplicationScope scope = new ApplicationScopeImpl( createId( ""application"" ) );"
252959,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityToMapConverterTest.java,67,,"            new IndexEdgeImpl( createId( ""source"" ), ""testEdgeType"", SearchEdge.NodeType.SOURCE, 1000 );"
252960,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityToMapConverterTest.java,67,,"            new IndexEdgeImpl( createId( ""source"" ), ""testEdgeType"", SearchEdge.NodeType.SOURCE, 1000 );"
252961,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityToMapConverterTest.java,123,,"        testSingleField( new StringField( ""Name"", ""value"" ),"
252962,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityToMapConverterTest.java,123,,"        testSingleField( new StringField( ""Name"", ""value"" ),"
252963,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityToMapConverterTest.java,375,,"        testNestedField( new StringField( ""name"", ""value"" ),"
252964,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityToMapConverterTest.java,568,,"        final ArrayField<EntityObject> array = new ArrayField<>( ""array"" );"
252965,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/IndexingUtilsTest.java,44,,"        final ApplicationScopeImpl applicationScope = new ApplicationScopeImpl( new SimpleId( ""application"" ) );"
252966,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/IndexingUtilsTest.java,47,,"            new SearchEdgeImpl( new SimpleId( ""source"" ), ""users"", SearchEdge.NodeType.TARGET );"
252967,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/IndexingUtilsTest.java,53,,"            ""appId("" + applicationScope.getApplication().getUuid() + "",application).nodeId("" + searchEdge.getNodeId()"
252968,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/query/tree/GrammarTreeTest.java,555,,"        assertEquals( ""hot"", left.getString().getValue() );"
252969,./TargetProjects/usergrid/stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/query/tree/StringLiteralTest.java,36,,"        assertEquals( ""value"", literal.getValue() );"
252970,./TargetProjects/usergrid/stack/corepersistence/queue/src/main/java/org/apache/usergrid/persistence/qakka/QakkaFig.java,140,,"    @Default(""5000"")"
252971,./TargetProjects/usergrid/stack/corepersistence/queue/src/main/java/org/apache/usergrid/persistence/qakka/api/QueueResource.java,72,,"        Preconditions.checkArgument(!QakkaUtils.isNullOrEmpty(queue.getName()), ""Queue name is required"");"
252972,./TargetProjects/usergrid/stack/corepersistence/queue/src/main/java/org/apache/usergrid/persistence/qakka/api/QueueResource.java,86,,"    public Response updateQueueConfig( @PathParam(""queueName"") String queueName, Queue queue) {"
252973,./TargetProjects/usergrid/stack/corepersistence/queue/src/main/java/org/apache/usergrid/persistence/qakka/distributed/impl/QueueActorRouterProducer.java,97,,"        if ( akka.get( ""actor"" ) == null ) {"
252974,./TargetProjects/usergrid/stack/corepersistence/queue/src/main/java/org/apache/usergrid/persistence/qakka/distributed/impl/QueueActorRouterProducer.java,100,,"                put( ""deployment"", deploymentMap );"
252975,./TargetProjects/usergrid/stack/corepersistence/queue/src/main/java/org/apache/usergrid/persistence/qakka/distributed/impl/QueueSenderRouterProducer.java,95,,"        if ( akka.get( ""actor"" ) == null ) {"
252976,./TargetProjects/usergrid/stack/corepersistence/queue/src/main/java/org/apache/usergrid/persistence/qakka/distributed/impl/QueueSenderRouterProducer.java,98,,"                put( ""deployment"", deploymentMap );"
252977,./TargetProjects/usergrid/stack/corepersistence/queue/src/main/java/org/apache/usergrid/persistence/qakka/distributed/impl/QueueWriterRouterProducer.java,98,,"        if ( akka.get( ""actor"" ) == null ) {"
252978,./TargetProjects/usergrid/stack/corepersistence/queue/src/main/java/org/apache/usergrid/persistence/qakka/distributed/impl/QueueWriterRouterProducer.java,101,,"                put( ""deployment"", deploymentMap );"
252979,./TargetProjects/usergrid/stack/corepersistence/queue/src/main/java/org/apache/usergrid/persistence/queue/LegacyQueueFig.java,33,,"    @Default(""false"")"
252980,./TargetProjects/usergrid/stack/corepersistence/queue/src/main/java/org/apache/usergrid/persistence/queue/impl/SNSQueueManagerImpl.java,624,,"            logger.error( ""SQS client is null, perhaps it failed to initialize successfully"" );"
252981,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/api/QueueResourceTest.java,63,,"            put(""name"", queueName);"
252982,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/api/QueueResourceTest.java,65,,"        Response response = target(""queues"").request()"
252983,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/api/QueueResourceTest.java,82,,"        response = target(""queues"").path( queueName ).queryParam( ""confirm"", true ).request().delete();"
252984,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/api/QueueResourceTest.java,126,,"        Response response = target(""queues"").path( queueName ).path( ""messages"" )"
252985,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/core/QueueMessageManagerTest.java,87,,"            queueManager.createQueue( new Queue( queueName, ""test-type"", region, region, 0L, 5, 10, null ) );"
252986,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/core/QueueMessageManagerTest.java,90,,"                ""application/json"", DataType.serializeValue( jsonData, ProtocolVersion.NEWEST_SUPPORTED ) );"
252987,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/distributed/actors/QueueActorHelperTest.java,64,,"        String queueName = ""qat_queue_"" + RandomStringUtils.randomAlphanumeric( 10 );"
252988,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/serialization/MultiShardDatabaseQueueMessageIteratorTest.java,62,,"        Shard shard1 = new Shard(queueName, ""region"", Shard.Type.DEFAULT, 1L, null);"
252989,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/serialization/queuemessages/DatabaseQueueMessageSerializationTest.java,54,,"        Shard shard1 = new Shard(""test"", ""region1"", Shard.Type.DEFAULT, 100L, null);"
252990,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/serialization/queuemessages/DatabaseQueueMessageSerializationTest.java,54,,"        Shard shard1 = new Shard(""test"", ""region1"", Shard.Type.DEFAULT, 100L, null);"
252991,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/serialization/queuemessages/DatabaseQueueMessageSerializationTest.java,138,,"        final String data = ""my test data"";"
252992,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/serialization/queuemessages/DatabaseQueueMessageSerializationTest.java,141,,"                DataType.serializeValue(data, ProtocolVersion.NEWEST_SUPPORTED), ""text/plain"");"
252993,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/serialization/queues/DatabaseQueueSerializationTest.java,41,,"        DatabaseQueue queue = new DatabaseQueue(""test"", ""west"", ""west"", 0L, 0, 0, ""test_dlq"");"
252994,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/serialization/queues/DatabaseQueueSerializationTest.java,55,,"        DatabaseQueue queue = new DatabaseQueue(""test1"", ""west"", ""west"", 0L, 0, 0, ""test_dlq"");"
252995,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/serialization/sharding/ShardIteratorTest.java,55,,"        Shard shard1 = new Shard(queueName, ""region1"", Shard.Type.DEFAULT, 100L, null);"
252996,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/serialization/sharding/ShardSerializationTest.java,53,,"        Shard shard1 = new Shard(""test"", ""region1"", Shard.Type.DEFAULT, 100L, null);"
252997,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/serialization/sharding/ShardTest.java,36,,"        Shard shard1 = new Shard(""test"", ""region"", Shard.Type.DEFAULT, 100L, null);"
252998,./TargetProjects/usergrid/stack/corepersistence/queue/src/test/java/org/apache/usergrid/persistence/qakka/serialization/sharding/ShardTest.java,36,,"        Shard shard1 = new Shard(""test"", ""region"", Shard.Type.DEFAULT, 100L, null);"
252999,./TargetProjects/usergrid/stack/corepersistence/token/src/main/java/org/apache/usergrid/persistence/token/impl/TokenSerializationImpl.java,94,,"    private static final Collection<String> TOKENS_PARTITION_KEYS = Collections.singletonList(""key"");"
